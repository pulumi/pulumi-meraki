// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetWebhooksHttpServers
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetWebhooksHttpServersResult> InvokeAsync(GetWebhooksHttpServersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebhooksHttpServersResult>("meraki:networks/getWebhooksHttpServers:getWebhooksHttpServers", args ?? new GetWebhooksHttpServersArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetWebhooksHttpServersResult> Invoke(GetWebhooksHttpServersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebhooksHttpServersResult>("meraki:networks/getWebhooksHttpServers:getWebhooksHttpServers", args ?? new GetWebhooksHttpServersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebhooksHttpServersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// httpServerId path parameter. Http server ID
        /// </summary>
        [Input("httpServerId")]
        public string? HttpServerId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        public GetWebhooksHttpServersArgs()
        {
        }
        public static new GetWebhooksHttpServersArgs Empty => new GetWebhooksHttpServersArgs();
    }

    public sealed class GetWebhooksHttpServersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// httpServerId path parameter. Http server ID
        /// </summary>
        [Input("httpServerId")]
        public Input<string>? HttpServerId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public GetWebhooksHttpServersInvokeArgs()
        {
        }
        public static new GetWebhooksHttpServersInvokeArgs Empty => new GetWebhooksHttpServersInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebhooksHttpServersResult
    {
        /// <summary>
        /// httpServerId path parameter. Http server ID
        /// </summary>
        public readonly string? HttpServerId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetWebhooksHttpServersItemResult Item;
        /// <summary>
        /// Array of ResponseNetworksGetNetworkWebhooksHttpServers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWebhooksHttpServersItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;

        [OutputConstructor]
        private GetWebhooksHttpServersResult(
            string? httpServerId,

            string id,

            Outputs.GetWebhooksHttpServersItemResult item,

            ImmutableArray<Outputs.GetWebhooksHttpServersItemResult> items,

            string? networkId)
        {
            HttpServerId = httpServerId;
            Id = id;
            Item = item;
            Items = items;
            NetworkId = networkId;
        }
    }
}
