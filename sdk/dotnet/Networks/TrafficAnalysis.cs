// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.TrafficAnalysis("example", new()
    ///     {
    ///         CustomPieChartItems = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.TrafficAnalysisCustomPieChartItemArgs
    ///             {
    ///                 Name = "Item from hostname",
    ///                 Type = "host",
    ///                 Value = "example.com",
    ///             },
    ///         },
    ///         Mode = "disabled",
    ///         NetworkId = "string",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksTrafficAnalysisExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/trafficAnalysis:TrafficAnalysis example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/trafficAnalysis:TrafficAnalysis")]
    public partial class TrafficAnalysis : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of items that make up the custom pie chart for traffic reporting.
        /// </summary>
        [Output("customPieChartItems")]
        public Output<ImmutableArray<Outputs.TrafficAnalysisCustomPieChartItem>> CustomPieChartItems { get; private set; } = null!;

        /// <summary>
        /// The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
        /// 'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficAnalysis resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficAnalysis(string name, TrafficAnalysisArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/trafficAnalysis:TrafficAnalysis", name, args ?? new TrafficAnalysisArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficAnalysis(string name, Input<string> id, TrafficAnalysisState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/trafficAnalysis:TrafficAnalysis", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficAnalysis resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficAnalysis Get(string name, Input<string> id, TrafficAnalysisState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficAnalysis(name, id, state, options);
        }
    }

    public sealed class TrafficAnalysisArgs : global::Pulumi.ResourceArgs
    {
        [Input("customPieChartItems")]
        private InputList<Inputs.TrafficAnalysisCustomPieChartItemArgs>? _customPieChartItems;

        /// <summary>
        /// The list of items that make up the custom pie chart for traffic reporting.
        /// </summary>
        public InputList<Inputs.TrafficAnalysisCustomPieChartItemArgs> CustomPieChartItems
        {
            get => _customPieChartItems ?? (_customPieChartItems = new InputList<Inputs.TrafficAnalysisCustomPieChartItemArgs>());
            set => _customPieChartItems = value;
        }

        /// <summary>
        /// The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
        /// 'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public TrafficAnalysisArgs()
        {
        }
        public static new TrafficAnalysisArgs Empty => new TrafficAnalysisArgs();
    }

    public sealed class TrafficAnalysisState : global::Pulumi.ResourceArgs
    {
        [Input("customPieChartItems")]
        private InputList<Inputs.TrafficAnalysisCustomPieChartItemGetArgs>? _customPieChartItems;

        /// <summary>
        /// The list of items that make up the custom pie chart for traffic reporting.
        /// </summary>
        public InputList<Inputs.TrafficAnalysisCustomPieChartItemGetArgs> CustomPieChartItems
        {
            get => _customPieChartItems ?? (_customPieChartItems = new InputList<Inputs.TrafficAnalysisCustomPieChartItemGetArgs>());
            set => _customPieChartItems = value;
        }

        /// <summary>
        /// The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
        /// 'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public TrafficAnalysisState()
        {
        }
        public static new TrafficAnalysisState Empty => new TrafficAnalysisState();
    }
}
