// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSmTargetGroups
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetSmTargetGroupsResult> InvokeAsync(GetSmTargetGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSmTargetGroupsResult>("meraki:networks/getSmTargetGroups:getSmTargetGroups", args ?? new GetSmTargetGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSmTargetGroupsResult> Invoke(GetSmTargetGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmTargetGroupsResult>("meraki:networks/getSmTargetGroups:getSmTargetGroups", args ?? new GetSmTargetGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSmTargetGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// targetGroupId path parameter. Target group ID
        /// </summary>
        [Input("targetGroupId")]
        public string? TargetGroupId { get; set; }

        /// <summary>
        /// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
        /// </summary>
        [Input("withDetails")]
        public bool? WithDetails { get; set; }

        public GetSmTargetGroupsArgs()
        {
        }
        public static new GetSmTargetGroupsArgs Empty => new GetSmTargetGroupsArgs();
    }

    public sealed class GetSmTargetGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// targetGroupId path parameter. Target group ID
        /// </summary>
        [Input("targetGroupId")]
        public Input<string>? TargetGroupId { get; set; }

        /// <summary>
        /// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
        /// </summary>
        [Input("withDetails")]
        public Input<bool>? WithDetails { get; set; }

        public GetSmTargetGroupsInvokeArgs()
        {
        }
        public static new GetSmTargetGroupsInvokeArgs Empty => new GetSmTargetGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSmTargetGroupsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetSmTargetGroupsItemResult Item;
        /// <summary>
        /// Array of ResponseSmGetNetworkSmTargetGroups
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSmTargetGroupsItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// targetGroupId path parameter. Target group ID
        /// </summary>
        public readonly string? TargetGroupId;
        /// <summary>
        /// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
        /// </summary>
        public readonly bool? WithDetails;

        [OutputConstructor]
        private GetSmTargetGroupsResult(
            string id,

            Outputs.GetSmTargetGroupsItemResult item,

            ImmutableArray<Outputs.GetSmTargetGroupsItemResult> items,

            string? networkId,

            string? targetGroupId,

            bool? withDetails)
        {
            Id = id;
            Item = item;
            Items = items;
            NetworkId = networkId;
            TargetGroupId = targetGroupId;
            WithDetails = withDetails;
        }
    }
}
