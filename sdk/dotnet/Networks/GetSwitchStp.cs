// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSwitchStp
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSwitchStp.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSwitchStpExample"] = example.Apply(getSwitchStpResult =&gt; getSwitchStpResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSwitchStpResult> InvokeAsync(GetSwitchStpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSwitchStpResult>("meraki:networks/getSwitchStp:getSwitchStp", args ?? new GetSwitchStpArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSwitchStp.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSwitchStpExample"] = example.Apply(getSwitchStpResult =&gt; getSwitchStpResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSwitchStpResult> Invoke(GetSwitchStpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchStpResult>("meraki:networks/getSwitchStp:getSwitchStp", args ?? new GetSwitchStpInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSwitchStp.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSwitchStpExample"] = example.Apply(getSwitchStpResult =&gt; getSwitchStpResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSwitchStpResult> Invoke(GetSwitchStpInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchStpResult>("meraki:networks/getSwitchStp:getSwitchStp", args ?? new GetSwitchStpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSwitchStpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        public GetSwitchStpArgs()
        {
        }
        public static new GetSwitchStpArgs Empty => new GetSwitchStpArgs();
    }

    public sealed class GetSwitchStpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public GetSwitchStpInvokeArgs()
        {
        }
        public static new GetSwitchStpInvokeArgs Empty => new GetSwitchStpInvokeArgs();
    }


    [OutputType]
    public sealed class GetSwitchStpResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetSwitchStpItemResult Item;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string NetworkId;

        [OutputConstructor]
        private GetSwitchStpResult(
            string id,

            Outputs.GetSwitchStpItemResult item,

            string networkId)
        {
            Id = id;
            Item = item;
            NetworkId = networkId;
        }
    }
}
