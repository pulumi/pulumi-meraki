// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Inputs
{

    public sealed class WirelessSsidsTrafficShapingRulesRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("definitions")]
        private InputList<Inputs.WirelessSsidsTrafficShapingRulesRuleDefinitionArgs>? _definitions;

        /// <summary>
        /// A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        /// </summary>
        public InputList<Inputs.WirelessSsidsTrafficShapingRulesRuleDefinitionArgs> Definitions
        {
            get => _definitions ?? (_definitions = new InputList<Inputs.WirelessSsidsTrafficShapingRulesRuleDefinitionArgs>());
            set => _definitions = value;
        }

        /// <summary>
        /// The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
        /// For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
        /// </summary>
        [Input("dscpTagValue")]
        public Input<int>? DscpTagValue { get; set; }

        /// <summary>
        /// The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
        /// null means 'Do not set PCP tag'.
        /// </summary>
        [Input("pcpTagValue")]
        public Input<int>? PcpTagValue { get; set; }

        /// <summary>
        /// An object describing the bandwidth settings for your rule.
        /// </summary>
        [Input("perClientBandwidthLimits")]
        public Input<Inputs.WirelessSsidsTrafficShapingRulesRulePerClientBandwidthLimitsArgs>? PerClientBandwidthLimits { get; set; }

        public WirelessSsidsTrafficShapingRulesRuleArgs()
        {
        }
        public static new WirelessSsidsTrafficShapingRulesRuleArgs Empty => new WirelessSsidsTrafficShapingRulesRuleArgs();
    }
}
