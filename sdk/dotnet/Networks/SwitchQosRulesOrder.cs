// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.SwitchQosRulesOrder("example", new()
    ///     {
    ///         Dscp = 1,
    ///         DstPort = 3000,
    ///         DstPortRange = "3000-3100",
    ///         NetworkId = "string",
    ///         Protocol = "TCP",
    ///         SrcPort = 2000,
    ///         SrcPortRange = "70-80",
    ///         Vlan = 100,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksSwitchQosRulesOrderExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder example "network_id,qos_rule_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder")]
    public partial class SwitchQosRulesOrder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
        /// </summary>
        [Output("dscp")]
        public Output<int> Dscp { get; private set; } = null!;

        /// <summary>
        /// The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Output("dstPort")]
        public Output<int> DstPort { get; private set; } = null!;

        /// <summary>
        /// The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Output("dstPortRange")]
        public Output<string> DstPortRange { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// qosRuleId path parameter. Qos rule ID
        /// </summary>
        [Output("qosRuleId")]
        public Output<string> QosRuleId { get; private set; } = null!;

        /// <summary>
        /// The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Output("srcPort")]
        public Output<int> SrcPort { get; private set; } = null!;

        /// <summary>
        /// The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Output("srcPortRange")]
        public Output<string> SrcPortRange { get; private set; } = null!;

        /// <summary>
        /// The VLAN of the incoming packet. A null value will match any VLAN.
        /// </summary>
        [Output("vlan")]
        public Output<int> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchQosRulesOrder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchQosRulesOrder(string name, SwitchQosRulesOrderArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder", name, args ?? new SwitchQosRulesOrderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchQosRulesOrder(string name, Input<string> id, SwitchQosRulesOrderState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchQosRulesOrder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchQosRulesOrder Get(string name, Input<string> id, SwitchQosRulesOrderState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchQosRulesOrder(name, id, state, options);
        }
    }

    public sealed class SwitchQosRulesOrderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
        /// </summary>
        [Input("dscp")]
        public Input<int>? Dscp { get; set; }

        /// <summary>
        /// The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Input("dstPort")]
        public Input<int>? DstPort { get; set; }

        /// <summary>
        /// The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Input("dstPortRange")]
        public Input<string>? DstPortRange { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// qosRuleId path parameter. Qos rule ID
        /// </summary>
        [Input("qosRuleId")]
        public Input<string>? QosRuleId { get; set; }

        /// <summary>
        /// The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Input("srcPort")]
        public Input<int>? SrcPort { get; set; }

        /// <summary>
        /// The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Input("srcPortRange")]
        public Input<string>? SrcPortRange { get; set; }

        /// <summary>
        /// The VLAN of the incoming packet. A null value will match any VLAN.
        /// </summary>
        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public SwitchQosRulesOrderArgs()
        {
        }
        public static new SwitchQosRulesOrderArgs Empty => new SwitchQosRulesOrderArgs();
    }

    public sealed class SwitchQosRulesOrderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
        /// </summary>
        [Input("dscp")]
        public Input<int>? Dscp { get; set; }

        /// <summary>
        /// The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Input("dstPort")]
        public Input<int>? DstPort { get; set; }

        /// <summary>
        /// The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Input("dstPortRange")]
        public Input<string>? DstPortRange { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// qosRuleId path parameter. Qos rule ID
        /// </summary>
        [Input("qosRuleId")]
        public Input<string>? QosRuleId { get; set; }

        /// <summary>
        /// The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
        /// </summary>
        [Input("srcPort")]
        public Input<int>? SrcPort { get; set; }

        /// <summary>
        /// The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
        /// </summary>
        [Input("srcPortRange")]
        public Input<string>? SrcPortRange { get; set; }

        /// <summary>
        /// The VLAN of the incoming packet. A null value will match any VLAN.
        /// </summary>
        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public SwitchQosRulesOrderState()
        {
        }
        public static new SwitchQosRulesOrderState Empty => new SwitchQosRulesOrderState();
    }
}
