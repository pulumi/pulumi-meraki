// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetSwitchDhcpV4ServersSeenItemResult
    {
        /// <summary>
        /// Client id of the server if available.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Attributes of the server when it's a device.
        /// </summary>
        public readonly Outputs.GetSwitchDhcpV4ServersSeenItemDeviceResult Device;
        /// <summary>
        /// IPv4 attributes of the server.
        /// </summary>
        public readonly Outputs.GetSwitchDhcpV4ServersSeenItemIpv4Result Ipv4;
        /// <summary>
        /// Whether the server is allowed or blocked. Always true for configured servers.
        /// </summary>
        public readonly bool IsAllowed;
        /// <summary>
        /// Whether the server is configured.
        /// </summary>
        public readonly bool IsConfigured;
        /// <summary>
        /// Attributes of the server's last ack.
        /// </summary>
        public readonly Outputs.GetSwitchDhcpV4ServersSeenItemLastAckResult LastAck;
        /// <summary>
        /// Last packet the server received.
        /// </summary>
        public readonly Outputs.GetSwitchDhcpV4ServersSeenItemLastPacketResult LastPacket;
        /// <summary>
        /// Last time the server was seen.
        /// </summary>
        public readonly string LastSeenAt;
        /// <summary>
        /// Mac address of the server.
        /// </summary>
        public readonly string Mac;
        /// <summary>
        /// Devices that saw the server.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSwitchDhcpV4ServersSeenItemSeenByResult> SeenBies;
        /// <summary>
        /// server type. Can be a 'device', 'stack', or 'discovered' (i.e client).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Vlan id of the server.
        /// </summary>
        public readonly int Vlan;

        [OutputConstructor]
        private GetSwitchDhcpV4ServersSeenItemResult(
            string clientId,

            Outputs.GetSwitchDhcpV4ServersSeenItemDeviceResult device,

            Outputs.GetSwitchDhcpV4ServersSeenItemIpv4Result ipv4,

            bool isAllowed,

            bool isConfigured,

            Outputs.GetSwitchDhcpV4ServersSeenItemLastAckResult lastAck,

            Outputs.GetSwitchDhcpV4ServersSeenItemLastPacketResult lastPacket,

            string lastSeenAt,

            string mac,

            ImmutableArray<Outputs.GetSwitchDhcpV4ServersSeenItemSeenByResult> seenBies,

            string type,

            int vlan)
        {
            ClientId = clientId;
            Device = device;
            Ipv4 = ipv4;
            IsAllowed = isAllowed;
            IsConfigured = isConfigured;
            LastAck = lastAck;
            LastPacket = lastPacket;
            LastSeenAt = lastSeenAt;
            Mac = mac;
            SeenBies = seenBies;
            Type = type;
            Vlan = vlan;
        }
    }
}
