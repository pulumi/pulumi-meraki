// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class ApplianceFirewallOneToManyNatRulesRulePortRule
    {
        /// <summary>
        /// Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'
        /// </summary>
        public readonly ImmutableArray<string> AllowedIps;
        /// <summary>
        /// Local IP address to which traffic will be forwarded
        /// </summary>
        public readonly string? LocalIp;
        /// <summary>
        /// Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port
        /// </summary>
        public readonly string? LocalPort;
        /// <summary>
        /// A description of the rule
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// 'tcp' or 'udp'
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Destination port of the traffic that is arriving on the WAN
        /// </summary>
        public readonly string? PublicPort;

        [OutputConstructor]
        private ApplianceFirewallOneToManyNatRulesRulePortRule(
            ImmutableArray<string> allowedIps,

            string? localIp,

            string? localPort,

            string? name,

            string? protocol,

            string? publicPort)
        {
            AllowedIps = allowedIps;
            LocalIp = localIp;
            LocalPort = localPort;
            Name = name;
            Protocol = protocol;
            PublicPort = publicPort;
        }
    }
}
