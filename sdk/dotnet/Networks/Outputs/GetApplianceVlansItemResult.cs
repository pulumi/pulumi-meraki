// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetApplianceVlansItemResult
    {
        /// <summary>
        /// The local IP of the appliance on the VLAN
        /// </summary>
        public readonly string ApplianceIp;
        /// <summary>
        /// CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
        /// </summary>
        public readonly string Cidr;
        /// <summary>
        /// DHCP boot option for boot filename
        /// </summary>
        public readonly string DhcpBootFilename;
        /// <summary>
        /// DHCP boot option to direct boot clients to the server to load the boot file from
        /// </summary>
        public readonly string DhcpBootNextServer;
        /// <summary>
        /// Use DHCP boot options specified in other properties
        /// </summary>
        public readonly bool DhcpBootOptionsEnabled;
        /// <summary>
        /// The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'
        /// </summary>
        public readonly string DhcpHandling;
        /// <summary>
        /// The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'
        /// </summary>
        public readonly string DhcpLeaseTime;
        /// <summary>
        /// The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplianceVlansItemDhcpOptionResult> DhcpOptions;
        /// <summary>
        /// The IPs of the DHCP servers that DHCP requests should be relayed to
        /// </summary>
        public readonly ImmutableArray<string> DhcpRelayServerIps;
        /// <summary>
        /// The DNS nameservers used for DHCP responses, either "upstream*dns", "google*dns", "opendns", or a newline seperated string of IP addresses or domain names
        /// </summary>
        public readonly string DnsNameservers;
        /// <summary>
        /// The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
        /// </summary>
        public readonly string FixedIpAssignments;
        /// <summary>
        /// The id of the desired group policy to apply to the VLAN
        /// </summary>
        public readonly string GroupPolicyId;
        /// <summary>
        /// The VLAN ID of the VLAN
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The interface ID of the VLAN
        /// </summary>
        public readonly string InterfaceId;
        /// <summary>
        /// IPv6 configuration on the VLAN
        /// </summary>
        public readonly Outputs.GetApplianceVlansItemIpv6Result Ipv6;
        /// <summary>
        /// Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
        /// </summary>
        public readonly Outputs.GetApplianceVlansItemMandatoryDhcpResult MandatoryDhcp;
        /// <summary>
        /// Mask used for the subnet of all bound to the template networks. Applicable only for template network.
        /// </summary>
        public readonly int Mask;
        /// <summary>
        /// The name of the VLAN
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The DHCP reserved IP ranges on the VLAN
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplianceVlansItemReservedIpRangeResult> ReservedIpRanges;
        /// <summary>
        /// The subnet of the VLAN
        /// </summary>
        public readonly string Subnet;
        /// <summary>
        /// Type of subnetting of the VLAN. Applicable only for template network.
        /// </summary>
        public readonly string TemplateVlanType;
        /// <summary>
        /// The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
        /// </summary>
        public readonly string VpnNatSubnet;

        [OutputConstructor]
        private GetApplianceVlansItemResult(
            string applianceIp,

            string cidr,

            string dhcpBootFilename,

            string dhcpBootNextServer,

            bool dhcpBootOptionsEnabled,

            string dhcpHandling,

            string dhcpLeaseTime,

            ImmutableArray<Outputs.GetApplianceVlansItemDhcpOptionResult> dhcpOptions,

            ImmutableArray<string> dhcpRelayServerIps,

            string dnsNameservers,

            string fixedIpAssignments,

            string groupPolicyId,

            int id,

            string interfaceId,

            Outputs.GetApplianceVlansItemIpv6Result ipv6,

            Outputs.GetApplianceVlansItemMandatoryDhcpResult mandatoryDhcp,

            int mask,

            string name,

            ImmutableArray<Outputs.GetApplianceVlansItemReservedIpRangeResult> reservedIpRanges,

            string subnet,

            string templateVlanType,

            string vpnNatSubnet)
        {
            ApplianceIp = applianceIp;
            Cidr = cidr;
            DhcpBootFilename = dhcpBootFilename;
            DhcpBootNextServer = dhcpBootNextServer;
            DhcpBootOptionsEnabled = dhcpBootOptionsEnabled;
            DhcpHandling = dhcpHandling;
            DhcpLeaseTime = dhcpLeaseTime;
            DhcpOptions = dhcpOptions;
            DhcpRelayServerIps = dhcpRelayServerIps;
            DnsNameservers = dnsNameservers;
            FixedIpAssignments = fixedIpAssignments;
            GroupPolicyId = groupPolicyId;
            Id = id;
            InterfaceId = interfaceId;
            Ipv6 = ipv6;
            MandatoryDhcp = mandatoryDhcp;
            Mask = mask;
            Name = name;
            ReservedIpRanges = reservedIpRanges;
            Subnet = subnet;
            TemplateVlanType = templateVlanType;
            VpnNatSubnet = vpnNatSubnet;
        }
    }
}
