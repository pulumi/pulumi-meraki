// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetSensorAlertsProfilesItemConditionThresholdResult
    {
        /// <summary>
        /// Apparent power threshold. 'draw' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdApparentPowerResult ApparentPower;
        /// <summary>
        /// Electrical current threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdCurrentResult Current;
        /// <summary>
        /// Door open threshold. 'open' must be provided and set to true.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdDoorResult Door;
        /// <summary>
        /// Electrical frequency threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdFrequencyResult Frequency;
        /// <summary>
        /// Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdHumidityResult Humidity;
        /// <summary>
        /// Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdIndoorAirQualityResult IndoorAirQuality;
        /// <summary>
        /// Noise threshold. 'ambient' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdNoiseResult Noise;
        /// <summary>
        /// PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdPm25Result Pm25;
        /// <summary>
        /// Power factor threshold. 'percentage' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdPowerFactorResult PowerFactor;
        /// <summary>
        /// Real power threshold. 'draw' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdRealPowerResult RealPower;
        /// <summary>
        /// Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdTemperatureResult Temperature;
        /// <summary>
        /// TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdTvocResult Tvoc;
        /// <summary>
        /// Upstream power threshold. 'outageDetected' must be provided and set to true.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdUpstreamPowerResult UpstreamPower;
        /// <summary>
        /// Voltage threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdVoltageResult Voltage;
        /// <summary>
        /// Water detection threshold. 'present' must be provided and set to true.
        /// </summary>
        public readonly Outputs.GetSensorAlertsProfilesItemConditionThresholdWaterResult Water;

        [OutputConstructor]
        private GetSensorAlertsProfilesItemConditionThresholdResult(
            Outputs.GetSensorAlertsProfilesItemConditionThresholdApparentPowerResult apparentPower,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdCurrentResult current,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdDoorResult door,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdFrequencyResult frequency,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdHumidityResult humidity,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdIndoorAirQualityResult indoorAirQuality,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdNoiseResult noise,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdPm25Result pm25,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdPowerFactorResult powerFactor,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdRealPowerResult realPower,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdTemperatureResult temperature,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdTvocResult tvoc,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdUpstreamPowerResult upstreamPower,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdVoltageResult voltage,

            Outputs.GetSensorAlertsProfilesItemConditionThresholdWaterResult water)
        {
            ApparentPower = apparentPower;
            Current = current;
            Door = door;
            Frequency = frequency;
            Humidity = humidity;
            IndoorAirQuality = indoorAirQuality;
            Noise = noise;
            Pm25 = pm25;
            PowerFactor = powerFactor;
            RealPower = realPower;
            Temperature = temperature;
            Tvoc = tvoc;
            UpstreamPower = upstreamPower;
            Voltage = voltage;
            Water = water;
        }
    }
}
