// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetSensorAlertsCurrentOverviewByMetricItemCountsResult
    {
        /// <summary>
        /// Number of sensors that are currently alerting due to apparent power readings
        /// </summary>
        public readonly int ApparentPower;
        /// <summary>
        /// Number of sensors that are currently alerting due to CO2 readings
        /// </summary>
        public readonly int Co2;
        /// <summary>
        /// Number of sensors that are currently alerting due to electrical current readings
        /// </summary>
        public readonly int Current;
        /// <summary>
        /// Number of sensors that are currently alerting due to an open door
        /// </summary>
        public readonly int Door;
        /// <summary>
        /// Number of sensors that are currently alerting due to frequency readings
        /// </summary>
        public readonly int Frequency;
        /// <summary>
        /// Number of sensors that are currently alerting due to humidity readings
        /// </summary>
        public readonly int Humidity;
        /// <summary>
        /// Number of sensors that are currently alerting due to indoor air quality readings
        /// </summary>
        public readonly int IndoorAirQuality;
        /// <summary>
        /// Object containing the number of sensors that are currently alerting due to noise readings
        /// </summary>
        public readonly Outputs.GetSensorAlertsCurrentOverviewByMetricItemCountsNoiseResult Noise;
        /// <summary>
        /// Number of sensors that are currently alerting due to PM2.5 readings
        /// </summary>
        public readonly int Pm25;
        /// <summary>
        /// Number of sensors that are currently alerting due to power factor readings
        /// </summary>
        public readonly int PowerFactor;
        /// <summary>
        /// Number of sensors that are currently alerting due to real power readings
        /// </summary>
        public readonly int RealPower;
        /// <summary>
        /// Number of sensors that are currently alerting due to temperature readings
        /// </summary>
        public readonly int Temperature;
        /// <summary>
        /// Number of sensors that are currently alerting due to TVOC readings
        /// </summary>
        public readonly int Tvoc;
        /// <summary>
        /// Number of sensors that are currently alerting due to an upstream power outage
        /// </summary>
        public readonly int UpstreamPower;
        /// <summary>
        /// Number of sensors that are currently alerting due to voltage readings
        /// </summary>
        public readonly int Voltage;
        /// <summary>
        /// Number of sensors that are currently alerting due to the presence of water
        /// </summary>
        public readonly int Water;

        [OutputConstructor]
        private GetSensorAlertsCurrentOverviewByMetricItemCountsResult(
            int apparentPower,

            int co2,

            int current,

            int door,

            int frequency,

            int humidity,

            int indoorAirQuality,

            Outputs.GetSensorAlertsCurrentOverviewByMetricItemCountsNoiseResult noise,

            int pm25,

            int powerFactor,

            int realPower,

            int temperature,

            int tvoc,

            int upstreamPower,

            int voltage,

            int water)
        {
            ApparentPower = apparentPower;
            Co2 = co2;
            Current = current;
            Door = door;
            Frequency = frequency;
            Humidity = humidity;
            IndoorAirQuality = indoorAirQuality;
            Noise = noise;
            Pm25 = pm25;
            PowerFactor = powerFactor;
            RealPower = realPower;
            Temperature = temperature;
            Tvoc = tvoc;
            UpstreamPower = upstreamPower;
            Voltage = voltage;
            Water = water;
        }
    }
}
