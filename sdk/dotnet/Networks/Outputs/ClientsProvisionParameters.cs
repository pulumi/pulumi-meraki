// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class ClientsProvisionParameters
    {
        /// <summary>
        /// The array of clients to provision
        /// </summary>
        public readonly ImmutableArray<Outputs.ClientsProvisionParametersClient> Clients;
        /// <summary>
        /// The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
        /// </summary>
        public readonly string? DevicePolicy;
        /// <summary>
        /// The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
        /// </summary>
        public readonly string? GroupPolicyId;
        /// <summary>
        /// An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
        /// </summary>
        public readonly Outputs.ClientsProvisionParametersPoliciesBySecurityAppliance? PoliciesBySecurityAppliance;
        /// <summary>
        /// An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
        /// </summary>
        public readonly Outputs.ClientsProvisionParametersPoliciesBySsid? PoliciesBySsid;

        [OutputConstructor]
        private ClientsProvisionParameters(
            ImmutableArray<Outputs.ClientsProvisionParametersClient> clients,

            string? devicePolicy,

            string? groupPolicyId,

            Outputs.ClientsProvisionParametersPoliciesBySecurityAppliance? policiesBySecurityAppliance,

            Outputs.ClientsProvisionParametersPoliciesBySsid? policiesBySsid)
        {
            Clients = clients;
            DevicePolicy = devicePolicy;
            GroupPolicyId = groupPolicyId;
            PoliciesBySecurityAppliance = policiesBySecurityAppliance;
            PoliciesBySsid = policiesBySsid;
        }
    }
}
