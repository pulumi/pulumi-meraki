// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class SensorAlertsProfilesConditionThreshold
    {
        /// <summary>
        /// Apparent power threshold. 'draw' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdApparentPower? ApparentPower;
        /// <summary>
        /// Electrical current threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdCurrent? Current;
        /// <summary>
        /// Door open threshold. 'open' must be provided and set to true.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdDoor? Door;
        /// <summary>
        /// Electrical frequency threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdFrequency? Frequency;
        /// <summary>
        /// Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdHumidity? Humidity;
        /// <summary>
        /// Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdIndoorAirQuality? IndoorAirQuality;
        /// <summary>
        /// Noise threshold. 'ambient' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdNoise? Noise;
        /// <summary>
        /// PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdPm25? Pm25;
        /// <summary>
        /// Power factor threshold. 'percentage' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdPowerFactor? PowerFactor;
        /// <summary>
        /// Real power threshold. 'draw' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdRealPower? RealPower;
        /// <summary>
        /// Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdTemperature? Temperature;
        /// <summary>
        /// TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdTvoc? Tvoc;
        /// <summary>
        /// Upstream power threshold. 'outageDetected' must be provided and set to true.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdUpstreamPower? UpstreamPower;
        /// <summary>
        /// Voltage threshold. 'level' must be provided.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdVoltage? Voltage;
        /// <summary>
        /// Water detection threshold. 'present' must be provided and set to true.
        /// </summary>
        public readonly Outputs.SensorAlertsProfilesConditionThresholdWater? Water;

        [OutputConstructor]
        private SensorAlertsProfilesConditionThreshold(
            Outputs.SensorAlertsProfilesConditionThresholdApparentPower? apparentPower,

            Outputs.SensorAlertsProfilesConditionThresholdCurrent? current,

            Outputs.SensorAlertsProfilesConditionThresholdDoor? door,

            Outputs.SensorAlertsProfilesConditionThresholdFrequency? frequency,

            Outputs.SensorAlertsProfilesConditionThresholdHumidity? humidity,

            Outputs.SensorAlertsProfilesConditionThresholdIndoorAirQuality? indoorAirQuality,

            Outputs.SensorAlertsProfilesConditionThresholdNoise? noise,

            Outputs.SensorAlertsProfilesConditionThresholdPm25? pm25,

            Outputs.SensorAlertsProfilesConditionThresholdPowerFactor? powerFactor,

            Outputs.SensorAlertsProfilesConditionThresholdRealPower? realPower,

            Outputs.SensorAlertsProfilesConditionThresholdTemperature? temperature,

            Outputs.SensorAlertsProfilesConditionThresholdTvoc? tvoc,

            Outputs.SensorAlertsProfilesConditionThresholdUpstreamPower? upstreamPower,

            Outputs.SensorAlertsProfilesConditionThresholdVoltage? voltage,

            Outputs.SensorAlertsProfilesConditionThresholdWater? water)
        {
            ApparentPower = apparentPower;
            Current = current;
            Door = door;
            Frequency = frequency;
            Humidity = humidity;
            IndoorAirQuality = indoorAirQuality;
            Noise = noise;
            Pm25 = pm25;
            PowerFactor = powerFactor;
            RealPower = realPower;
            Temperature = temperature;
            Tvoc = tvoc;
            UpstreamPower = upstreamPower;
            Voltage = voltage;
            Water = water;
        }
    }
}
