// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetWebhooksPayloadTemplatesItemResult
    {
        /// <summary>
        /// The body of the payload template, in liquid template
        /// </summary>
        public readonly string Body;
        /// <summary>
        /// The payload template headers, will be rendered as a key-value pair in the webhook.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWebhooksPayloadTemplatesItemHeaderResult> Headers;
        /// <summary>
        /// The name of the payload template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Webhook payload template Id
        /// </summary>
        public readonly string PayloadTemplateId;
        /// <summary>
        /// Information on which entities have access to the template
        /// </summary>
        public readonly Outputs.GetWebhooksPayloadTemplatesItemSharingResult Sharing;
        /// <summary>
        /// The type of the payload template
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWebhooksPayloadTemplatesItemResult(
            string body,

            ImmutableArray<Outputs.GetWebhooksPayloadTemplatesItemHeaderResult> headers,

            string name,

            string payloadTemplateId,

            Outputs.GetWebhooksPayloadTemplatesItemSharingResult sharing,

            string type)
        {
            Body = body;
            Headers = headers;
            Name = name;
            PayloadTemplateId = payloadTemplateId;
            Sharing = sharing;
            Type = type;
        }
    }
}
