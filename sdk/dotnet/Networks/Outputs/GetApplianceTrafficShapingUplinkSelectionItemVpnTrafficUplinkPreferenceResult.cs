// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferenceResult
    {
        /// <summary>
        /// Fail over criterion for uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'
        /// </summary>
        public readonly string FailOverCriterion;
        /// <summary>
        /// Performance class setting for uplink preference rule
        /// </summary>
        public readonly Outputs.GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferencePerformanceClassResult PerformanceClass;
        /// <summary>
        /// Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'
        /// </summary>
        public readonly string PreferredUplink;
        /// <summary>
        /// Traffic filters
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferenceTrafficFilterResult> TrafficFilters;

        [OutputConstructor]
        private GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferenceResult(
            string failOverCriterion,

            Outputs.GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferencePerformanceClassResult performanceClass,

            string preferredUplink,

            ImmutableArray<Outputs.GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreferenceTrafficFilterResult> trafficFilters)
        {
            FailOverCriterion = failOverCriterion;
            PerformanceClass = performanceClass;
            PreferredUplink = preferredUplink;
            TrafficFilters = trafficFilters;
        }
    }
}
