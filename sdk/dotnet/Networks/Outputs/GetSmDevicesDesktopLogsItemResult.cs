// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks.Outputs
{

    [OutputType]
    public sealed class GetSmDevicesDesktopLogsItemResult
    {
        /// <summary>
        /// The IP address of the DCHP Server.
        /// </summary>
        public readonly string DhcpServer;
        /// <summary>
        /// The DNS Server during the connection.
        /// </summary>
        public readonly string DnsServer;
        /// <summary>
        /// The gateway IP the device was connected to.
        /// </summary>
        public readonly string Gateway;
        /// <summary>
        /// The IP of the device during connection.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// The time the data was measured at.
        /// </summary>
        public readonly string MeasuredAt;
        /// <summary>
        /// The network device for the device used for connection.
        /// </summary>
        public readonly string NetworkDevice;
        /// <summary>
        /// The network driver for the device.
        /// </summary>
        public readonly string NetworkDriver;
        /// <summary>
        /// The network max transmission unit.
        /// </summary>
        public readonly string NetworkMtu;
        /// <summary>
        /// The public IP address of the device.
        /// </summary>
        public readonly string PublicIp;
        /// <summary>
        /// The subnet of the device connection.
        /// </summary>
        public readonly string Subnet;
        /// <summary>
        /// The time the connection was logged.
        /// </summary>
        public readonly string Ts;
        /// <summary>
        /// The user during connection.
        /// </summary>
        public readonly string User;
        /// <summary>
        /// The type of authentication used by the SSID.
        /// </summary>
        public readonly string WifiAuth;
        /// <summary>
        /// The MAC of the access point the device is connected to.
        /// </summary>
        public readonly string WifiBssid;
        /// <summary>
        /// Channel through which the connection is routing.
        /// </summary>
        public readonly string WifiChannel;
        /// <summary>
        /// The wireless signal power level received by the device.
        /// </summary>
        public readonly string WifiNoise;
        /// <summary>
        /// The Received Signal Strength Indicator for the device.
        /// </summary>
        public readonly string WifiRssi;
        /// <summary>
        /// The name of the network the device is connected to.
        /// </summary>
        public readonly string WifiSsid;

        [OutputConstructor]
        private GetSmDevicesDesktopLogsItemResult(
            string dhcpServer,

            string dnsServer,

            string gateway,

            string ip,

            string measuredAt,

            string networkDevice,

            string networkDriver,

            string networkMtu,

            string publicIp,

            string subnet,

            string ts,

            string user,

            string wifiAuth,

            string wifiBssid,

            string wifiChannel,

            string wifiNoise,

            string wifiRssi,

            string wifiSsid)
        {
            DhcpServer = dhcpServer;
            DnsServer = dnsServer;
            Gateway = gateway;
            Ip = ip;
            MeasuredAt = measuredAt;
            NetworkDevice = networkDevice;
            NetworkDriver = networkDriver;
            NetworkMtu = networkMtu;
            PublicIp = publicIp;
            Subnet = subnet;
            Ts = ts;
            User = user;
            WifiAuth = wifiAuth;
            WifiBssid = wifiBssid;
            WifiChannel = wifiChannel;
            WifiNoise = wifiNoise;
            WifiRssi = wifiRssi;
            WifiSsid = wifiSsid;
        }
    }
}
