// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetApplianceRfProfiles
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetApplianceRfProfiles.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksApplianceRfProfilesExample"] = example.Apply(getApplianceRfProfilesResult =&gt; getApplianceRfProfilesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplianceRfProfilesResult> InvokeAsync(GetApplianceRfProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplianceRfProfilesResult>("meraki:networks/getApplianceRfProfiles:getApplianceRfProfiles", args ?? new GetApplianceRfProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetApplianceRfProfiles.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksApplianceRfProfilesExample"] = example.Apply(getApplianceRfProfilesResult =&gt; getApplianceRfProfilesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplianceRfProfilesResult> Invoke(GetApplianceRfProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplianceRfProfilesResult>("meraki:networks/getApplianceRfProfiles:getApplianceRfProfiles", args ?? new GetApplianceRfProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplianceRfProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public string? RfProfileId { get; set; }

        public GetApplianceRfProfilesArgs()
        {
        }
        public static new GetApplianceRfProfilesArgs Empty => new GetApplianceRfProfilesArgs();
    }

    public sealed class GetApplianceRfProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        public GetApplianceRfProfilesInvokeArgs()
        {
        }
        public static new GetApplianceRfProfilesInvokeArgs Empty => new GetApplianceRfProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplianceRfProfilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetApplianceRfProfilesItemResult Item;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        public readonly string? RfProfileId;

        [OutputConstructor]
        private GetApplianceRfProfilesResult(
            string id,

            Outputs.GetApplianceRfProfilesItemResult item,

            string? networkId,

            string? rfProfileId)
        {
            Id = id;
            Item = item;
            NetworkId = networkId;
            RfProfileId = rfProfileId;
        }
    }
}
