// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetWirelessRfProfiles
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetWirelessRfProfiles.Invoke(new()
        ///     {
        ///         IncludeTemplateProfiles = false,
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksWirelessRfProfilesExample"] = example.Apply(getWirelessRfProfilesResult =&gt; getWirelessRfProfilesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetWirelessRfProfilesResult> InvokeAsync(GetWirelessRfProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWirelessRfProfilesResult>("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", args ?? new GetWirelessRfProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetWirelessRfProfiles.Invoke(new()
        ///     {
        ///         IncludeTemplateProfiles = false,
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksWirelessRfProfilesExample"] = example.Apply(getWirelessRfProfilesResult =&gt; getWirelessRfProfilesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetWirelessRfProfilesResult> Invoke(GetWirelessRfProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessRfProfilesResult>("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", args ?? new GetWirelessRfProfilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetWirelessRfProfiles.Invoke(new()
        ///     {
        ///         IncludeTemplateProfiles = false,
        ///         NetworkId = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksWirelessRfProfilesExample"] = example.Apply(getWirelessRfProfilesResult =&gt; getWirelessRfProfilesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetWirelessRfProfilesResult> Invoke(GetWirelessRfProfilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessRfProfilesResult>("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", args ?? new GetWirelessRfProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWirelessRfProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
        /// </summary>
        [Input("includeTemplateProfiles")]
        public bool? IncludeTemplateProfiles { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public string? RfProfileId { get; set; }

        public GetWirelessRfProfilesArgs()
        {
        }
        public static new GetWirelessRfProfilesArgs Empty => new GetWirelessRfProfilesArgs();
    }

    public sealed class GetWirelessRfProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
        /// </summary>
        [Input("includeTemplateProfiles")]
        public Input<bool>? IncludeTemplateProfiles { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        public GetWirelessRfProfilesInvokeArgs()
        {
        }
        public static new GetWirelessRfProfilesInvokeArgs Empty => new GetWirelessRfProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWirelessRfProfilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
        /// </summary>
        public readonly bool? IncludeTemplateProfiles;
        public readonly Outputs.GetWirelessRfProfilesItemResult Item;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        public readonly string? RfProfileId;

        [OutputConstructor]
        private GetWirelessRfProfilesResult(
            string id,

            bool? includeTemplateProfiles,

            Outputs.GetWirelessRfProfilesItemResult item,

            string? networkId,

            string? rfProfileId)
        {
            Id = id;
            IncludeTemplateProfiles = includeTemplateProfiles;
            Item = item;
            NetworkId = networkId;
            RfProfileId = rfProfileId;
        }
    }
}
