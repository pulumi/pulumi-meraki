// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.ApplianceSecurityMalware("example", new()
    ///     {
    ///         AllowedFiles = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.ApplianceSecurityMalwareAllowedFileArgs
    ///             {
    ///                 Comment = "allow ZIP file",
    ///                 Sha256 = "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
    ///             },
    ///         },
    ///         AllowedUrls = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.ApplianceSecurityMalwareAllowedUrlArgs
    ///             {
    ///                 Comment = "allow help.com.au",
    ///                 Url = "help.com.au",
    ///             },
    ///         },
    ///         Mode = "enabled",
    ///         NetworkId = "string",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksApplianceSecurityMalwareExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/applianceSecurityMalware:ApplianceSecurityMalware example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/applianceSecurityMalware:ApplianceSecurityMalware")]
    public partial class ApplianceSecurityMalware : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sha256 digests of files permitted by the malware detection engine
        /// </summary>
        [Output("allowedFiles")]
        public Output<ImmutableArray<Outputs.ApplianceSecurityMalwareAllowedFile>> AllowedFiles { get; private set; } = null!;

        /// <summary>
        /// URLs permitted by the malware detection engine
        /// </summary>
        [Output("allowedUrls")]
        public Output<ImmutableArray<Outputs.ApplianceSecurityMalwareAllowedUrl>> AllowedUrls { get; private set; } = null!;

        /// <summary>
        /// Current status of malware prevention
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;


        /// <summary>
        /// Create a ApplianceSecurityMalware resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplianceSecurityMalware(string name, ApplianceSecurityMalwareArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/applianceSecurityMalware:ApplianceSecurityMalware", name, args ?? new ApplianceSecurityMalwareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplianceSecurityMalware(string name, Input<string> id, ApplianceSecurityMalwareState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/applianceSecurityMalware:ApplianceSecurityMalware", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplianceSecurityMalware resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplianceSecurityMalware Get(string name, Input<string> id, ApplianceSecurityMalwareState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplianceSecurityMalware(name, id, state, options);
        }
    }

    public sealed class ApplianceSecurityMalwareArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedFiles")]
        private InputList<Inputs.ApplianceSecurityMalwareAllowedFileArgs>? _allowedFiles;

        /// <summary>
        /// Sha256 digests of files permitted by the malware detection engine
        /// </summary>
        public InputList<Inputs.ApplianceSecurityMalwareAllowedFileArgs> AllowedFiles
        {
            get => _allowedFiles ?? (_allowedFiles = new InputList<Inputs.ApplianceSecurityMalwareAllowedFileArgs>());
            set => _allowedFiles = value;
        }

        [Input("allowedUrls")]
        private InputList<Inputs.ApplianceSecurityMalwareAllowedUrlArgs>? _allowedUrls;

        /// <summary>
        /// URLs permitted by the malware detection engine
        /// </summary>
        public InputList<Inputs.ApplianceSecurityMalwareAllowedUrlArgs> AllowedUrls
        {
            get => _allowedUrls ?? (_allowedUrls = new InputList<Inputs.ApplianceSecurityMalwareAllowedUrlArgs>());
            set => _allowedUrls = value;
        }

        /// <summary>
        /// Current status of malware prevention
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public ApplianceSecurityMalwareArgs()
        {
        }
        public static new ApplianceSecurityMalwareArgs Empty => new ApplianceSecurityMalwareArgs();
    }

    public sealed class ApplianceSecurityMalwareState : global::Pulumi.ResourceArgs
    {
        [Input("allowedFiles")]
        private InputList<Inputs.ApplianceSecurityMalwareAllowedFileGetArgs>? _allowedFiles;

        /// <summary>
        /// Sha256 digests of files permitted by the malware detection engine
        /// </summary>
        public InputList<Inputs.ApplianceSecurityMalwareAllowedFileGetArgs> AllowedFiles
        {
            get => _allowedFiles ?? (_allowedFiles = new InputList<Inputs.ApplianceSecurityMalwareAllowedFileGetArgs>());
            set => _allowedFiles = value;
        }

        [Input("allowedUrls")]
        private InputList<Inputs.ApplianceSecurityMalwareAllowedUrlGetArgs>? _allowedUrls;

        /// <summary>
        /// URLs permitted by the malware detection engine
        /// </summary>
        public InputList<Inputs.ApplianceSecurityMalwareAllowedUrlGetArgs> AllowedUrls
        {
            get => _allowedUrls ?? (_allowedUrls = new InputList<Inputs.ApplianceSecurityMalwareAllowedUrlGetArgs>());
            set => _allowedUrls = value;
        }

        /// <summary>
        /// Current status of malware prevention
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public ApplianceSecurityMalwareState()
        {
        }
        public static new ApplianceSecurityMalwareState Empty => new ApplianceSecurityMalwareState();
    }
}
