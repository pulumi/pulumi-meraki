// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/sensorAlertsProfiles:SensorAlertsProfiles example "id,network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/sensorAlertsProfiles:SensorAlertsProfiles")]
    public partial class SensorAlertsProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of conditions that will cause the profile to send an alert.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.SensorAlertsProfilesCondition>> Conditions { get; private set; } = null!;

        /// <summary>
        /// List of conditions that will cause the profile to send an alert.
        /// </summary>
        [Output("conditionsResponses")]
        public Output<ImmutableArray<Outputs.SensorAlertsProfilesConditionsResponse>> ConditionsResponses { get; private set; } = null!;

        /// <summary>
        /// Name of the sensor alert profile.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// ID of the sensor alert profile.
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// List of recipients that will receive the alert.
        /// </summary>
        [Output("recipients")]
        public Output<Outputs.SensorAlertsProfilesRecipients> Recipients { get; private set; } = null!;

        /// <summary>
        /// The sensor schedule to use with the alert profile.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.SensorAlertsProfilesSchedule> Schedule { get; private set; } = null!;

        /// <summary>
        /// List of device serials assigned to this sensor alert profile.
        /// </summary>
        [Output("serials")]
        public Output<ImmutableArray<string>> Serials { get; private set; } = null!;


        /// <summary>
        /// Create a SensorAlertsProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SensorAlertsProfiles(string name, SensorAlertsProfilesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/sensorAlertsProfiles:SensorAlertsProfiles", name, args ?? new SensorAlertsProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SensorAlertsProfiles(string name, Input<string> id, SensorAlertsProfilesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/sensorAlertsProfiles:SensorAlertsProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SensorAlertsProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SensorAlertsProfiles Get(string name, Input<string> id, SensorAlertsProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new SensorAlertsProfiles(name, id, state, options);
        }
    }

    public sealed class SensorAlertsProfilesArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.SensorAlertsProfilesConditionArgs>? _conditions;

        /// <summary>
        /// List of conditions that will cause the profile to send an alert.
        /// </summary>
        public InputList<Inputs.SensorAlertsProfilesConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.SensorAlertsProfilesConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Name of the sensor alert profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// List of recipients that will receive the alert.
        /// </summary>
        [Input("recipients")]
        public Input<Inputs.SensorAlertsProfilesRecipientsArgs>? Recipients { get; set; }

        /// <summary>
        /// The sensor schedule to use with the alert profile.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.SensorAlertsProfilesScheduleArgs>? Schedule { get; set; }

        [Input("serials")]
        private InputList<string>? _serials;

        /// <summary>
        /// List of device serials assigned to this sensor alert profile.
        /// </summary>
        public InputList<string> Serials
        {
            get => _serials ?? (_serials = new InputList<string>());
            set => _serials = value;
        }

        public SensorAlertsProfilesArgs()
        {
        }
        public static new SensorAlertsProfilesArgs Empty => new SensorAlertsProfilesArgs();
    }

    public sealed class SensorAlertsProfilesState : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.SensorAlertsProfilesConditionGetArgs>? _conditions;

        /// <summary>
        /// List of conditions that will cause the profile to send an alert.
        /// </summary>
        public InputList<Inputs.SensorAlertsProfilesConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.SensorAlertsProfilesConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("conditionsResponses")]
        private InputList<Inputs.SensorAlertsProfilesConditionsResponseGetArgs>? _conditionsResponses;

        /// <summary>
        /// List of conditions that will cause the profile to send an alert.
        /// </summary>
        public InputList<Inputs.SensorAlertsProfilesConditionsResponseGetArgs> ConditionsResponses
        {
            get => _conditionsResponses ?? (_conditionsResponses = new InputList<Inputs.SensorAlertsProfilesConditionsResponseGetArgs>());
            set => _conditionsResponses = value;
        }

        /// <summary>
        /// Name of the sensor alert profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// ID of the sensor alert profile.
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        /// <summary>
        /// List of recipients that will receive the alert.
        /// </summary>
        [Input("recipients")]
        public Input<Inputs.SensorAlertsProfilesRecipientsGetArgs>? Recipients { get; set; }

        /// <summary>
        /// The sensor schedule to use with the alert profile.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.SensorAlertsProfilesScheduleGetArgs>? Schedule { get; set; }

        [Input("serials")]
        private InputList<string>? _serials;

        /// <summary>
        /// List of device serials assigned to this sensor alert profile.
        /// </summary>
        public InputList<string> Serials
        {
            get => _serials ?? (_serials = new InputList<string>());
            set => _serials = value;
        }

        public SensorAlertsProfilesState()
        {
        }
        public static new SensorAlertsProfilesState Empty => new SensorAlertsProfilesState();
    }
}
