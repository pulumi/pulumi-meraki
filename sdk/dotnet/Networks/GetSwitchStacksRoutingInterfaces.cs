// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSwitchStacksRoutingInterfaces
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetSwitchStacksRoutingInterfacesResult> InvokeAsync(GetSwitchStacksRoutingInterfacesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSwitchStacksRoutingInterfacesResult>("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", args ?? new GetSwitchStacksRoutingInterfacesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSwitchStacksRoutingInterfacesResult> Invoke(GetSwitchStacksRoutingInterfacesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchStacksRoutingInterfacesResult>("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", args ?? new GetSwitchStacksRoutingInterfacesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSwitchStacksRoutingInterfacesResult> Invoke(GetSwitchStacksRoutingInterfacesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchStacksRoutingInterfacesResult>("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", args ?? new GetSwitchStacksRoutingInterfacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSwitchStacksRoutingInterfacesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// interfaceId path parameter. Interface ID
        /// </summary>
        [Input("interfaceId")]
        public string? InterfaceId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        [Input("switchStackId")]
        public string? SwitchStackId { get; set; }

        public GetSwitchStacksRoutingInterfacesArgs()
        {
        }
        public static new GetSwitchStacksRoutingInterfacesArgs Empty => new GetSwitchStacksRoutingInterfacesArgs();
    }

    public sealed class GetSwitchStacksRoutingInterfacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// interfaceId path parameter. Interface ID
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        [Input("switchStackId")]
        public Input<string>? SwitchStackId { get; set; }

        public GetSwitchStacksRoutingInterfacesInvokeArgs()
        {
        }
        public static new GetSwitchStacksRoutingInterfacesInvokeArgs Empty => new GetSwitchStacksRoutingInterfacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSwitchStacksRoutingInterfacesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// interfaceId path parameter. Interface ID
        /// </summary>
        public readonly string? InterfaceId;
        public readonly Outputs.GetSwitchStacksRoutingInterfacesItemResult Item;
        /// <summary>
        /// Array of ResponseSwitchGetNetworkSwitchStackRoutingInterfaces
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSwitchStacksRoutingInterfacesItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        public readonly string? SwitchStackId;

        [OutputConstructor]
        private GetSwitchStacksRoutingInterfacesResult(
            string id,

            string? interfaceId,

            Outputs.GetSwitchStacksRoutingInterfacesItemResult item,

            ImmutableArray<Outputs.GetSwitchStacksRoutingInterfacesItemResult> items,

            string? networkId,

            string? switchStackId)
        {
            Id = id;
            InterfaceId = interfaceId;
            Item = item;
            Items = items;
            NetworkId = networkId;
            SwitchStackId = switchStackId;
        }
    }
}
