// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetWirelessSsidsIdentityPsks
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetWirelessSsidsIdentityPsksResult> InvokeAsync(GetWirelessSsidsIdentityPsksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWirelessSsidsIdentityPsksResult>("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", args ?? new GetWirelessSsidsIdentityPsksArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetWirelessSsidsIdentityPsksResult> Invoke(GetWirelessSsidsIdentityPsksInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessSsidsIdentityPsksResult>("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", args ?? new GetWirelessSsidsIdentityPsksInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetWirelessSsidsIdentityPsksResult> Invoke(GetWirelessSsidsIdentityPsksInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessSsidsIdentityPsksResult>("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", args ?? new GetWirelessSsidsIdentityPsksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWirelessSsidsIdentityPsksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// identityPskId path parameter. Identity psk ID
        /// </summary>
        [Input("identityPskId")]
        public string? IdentityPskId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number")]
        public string? Number { get; set; }

        public GetWirelessSsidsIdentityPsksArgs()
        {
        }
        public static new GetWirelessSsidsIdentityPsksArgs Empty => new GetWirelessSsidsIdentityPsksArgs();
    }

    public sealed class GetWirelessSsidsIdentityPsksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// identityPskId path parameter. Identity psk ID
        /// </summary>
        [Input("identityPskId")]
        public Input<string>? IdentityPskId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number")]
        public Input<string>? Number { get; set; }

        public GetWirelessSsidsIdentityPsksInvokeArgs()
        {
        }
        public static new GetWirelessSsidsIdentityPsksInvokeArgs Empty => new GetWirelessSsidsIdentityPsksInvokeArgs();
    }


    [OutputType]
    public sealed class GetWirelessSsidsIdentityPsksResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// identityPskId path parameter. Identity psk ID
        /// </summary>
        public readonly string? IdentityPskId;
        public readonly Outputs.GetWirelessSsidsIdentityPsksItemResult Item;
        /// <summary>
        /// Array of ResponseWirelessGetNetworkWirelessSsidIdentityPsks
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWirelessSsidsIdentityPsksItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// number path parameter.
        /// </summary>
        public readonly string? Number;

        [OutputConstructor]
        private GetWirelessSsidsIdentityPsksResult(
            string id,

            string? identityPskId,

            Outputs.GetWirelessSsidsIdentityPsksItemResult item,

            ImmutableArray<Outputs.GetWirelessSsidsIdentityPsksItemResult> items,

            string? networkId,

            string? number)
        {
            Id = id;
            IdentityPskId = identityPskId;
            Item = item;
            Items = items;
            NetworkId = networkId;
            Number = number;
        }
    }
}
