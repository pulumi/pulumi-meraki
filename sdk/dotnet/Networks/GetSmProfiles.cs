// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSmProfiles
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSmProfiles.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///         PayloadTypes = new[]
        ///         {
        ///             "string",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSmProfilesExample"] = example.Apply(getSmProfilesResult =&gt; getSmProfilesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSmProfilesResult> InvokeAsync(GetSmProfilesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSmProfilesResult>("meraki:networks/getSmProfiles:getSmProfiles", args ?? new GetSmProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSmProfiles.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///         PayloadTypes = new[]
        ///         {
        ///             "string",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSmProfilesExample"] = example.Apply(getSmProfilesResult =&gt; getSmProfilesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSmProfilesResult> Invoke(GetSmProfilesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmProfilesResult>("meraki:networks/getSmProfiles:getSmProfiles", args ?? new GetSmProfilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSmProfiles.Invoke(new()
        ///     {
        ///         NetworkId = "string",
        ///         PayloadTypes = new[]
        ///         {
        ///             "string",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSmProfilesExample"] = example.Apply(getSmProfilesResult =&gt; getSmProfilesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSmProfilesResult> Invoke(GetSmProfilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmProfilesResult>("meraki:networks/getSmProfiles:getSmProfiles", args ?? new GetSmProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSmProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        [Input("payloadTypes")]
        private List<string>? _payloadTypes;

        /// <summary>
        /// payloadTypes query parameter. Filter by payload types
        /// </summary>
        public List<string> PayloadTypes
        {
            get => _payloadTypes ?? (_payloadTypes = new List<string>());
            set => _payloadTypes = value;
        }

        public GetSmProfilesArgs()
        {
        }
        public static new GetSmProfilesArgs Empty => new GetSmProfilesArgs();
    }

    public sealed class GetSmProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("payloadTypes")]
        private InputList<string>? _payloadTypes;

        /// <summary>
        /// payloadTypes query parameter. Filter by payload types
        /// </summary>
        public InputList<string> PayloadTypes
        {
            get => _payloadTypes ?? (_payloadTypes = new InputList<string>());
            set => _payloadTypes = value;
        }

        public GetSmProfilesInvokeArgs()
        {
        }
        public static new GetSmProfilesInvokeArgs Empty => new GetSmProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSmProfilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseSmGetNetworkSmProfiles
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSmProfilesItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// payloadTypes query parameter. Filter by payload types
        /// </summary>
        public readonly ImmutableArray<string> PayloadTypes;

        [OutputConstructor]
        private GetSmProfilesResult(
            string id,

            ImmutableArray<Outputs.GetSmProfilesItemResult> items,

            string networkId,

            ImmutableArray<string> payloadTypes)
        {
            Id = id;
            Items = items;
            NetworkId = networkId;
            PayloadTypes = payloadTypes;
        }
    }
}
