// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/wirelessEthernetPortsProfiles:WirelessEthernetPortsProfiles example "network_id,profile_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/wirelessEthernetPortsProfiles:WirelessEthernetPortsProfiles")]
    public partial class WirelessEthernetPortsProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Is default profile
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// AP port profile name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Ports config
        /// </summary>
        [Output("ports")]
        public Output<ImmutableArray<Outputs.WirelessEthernetPortsProfilesPort>> Ports { get; private set; } = null!;

        /// <summary>
        /// AP port profile ID
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// Usb ports config
        /// </summary>
        [Output("usbPorts")]
        public Output<ImmutableArray<Outputs.WirelessEthernetPortsProfilesUsbPort>> UsbPorts { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessEthernetPortsProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessEthernetPortsProfiles(string name, WirelessEthernetPortsProfilesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessEthernetPortsProfiles:WirelessEthernetPortsProfiles", name, args ?? new WirelessEthernetPortsProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessEthernetPortsProfiles(string name, Input<string> id, WirelessEthernetPortsProfilesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessEthernetPortsProfiles:WirelessEthernetPortsProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessEthernetPortsProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessEthernetPortsProfiles Get(string name, Input<string> id, WirelessEthernetPortsProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new WirelessEthernetPortsProfiles(name, id, state, options);
        }
    }

    public sealed class WirelessEthernetPortsProfilesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AP port profile name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("ports")]
        private InputList<Inputs.WirelessEthernetPortsProfilesPortArgs>? _ports;

        /// <summary>
        /// Ports config
        /// </summary>
        public InputList<Inputs.WirelessEthernetPortsProfilesPortArgs> Ports
        {
            get => _ports ?? (_ports = new InputList<Inputs.WirelessEthernetPortsProfilesPortArgs>());
            set => _ports = value;
        }

        /// <summary>
        /// AP port profile ID
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        [Input("usbPorts")]
        private InputList<Inputs.WirelessEthernetPortsProfilesUsbPortArgs>? _usbPorts;

        /// <summary>
        /// Usb ports config
        /// </summary>
        public InputList<Inputs.WirelessEthernetPortsProfilesUsbPortArgs> UsbPorts
        {
            get => _usbPorts ?? (_usbPorts = new InputList<Inputs.WirelessEthernetPortsProfilesUsbPortArgs>());
            set => _usbPorts = value;
        }

        public WirelessEthernetPortsProfilesArgs()
        {
        }
        public static new WirelessEthernetPortsProfilesArgs Empty => new WirelessEthernetPortsProfilesArgs();
    }

    public sealed class WirelessEthernetPortsProfilesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is default profile
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// AP port profile name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("ports")]
        private InputList<Inputs.WirelessEthernetPortsProfilesPortGetArgs>? _ports;

        /// <summary>
        /// Ports config
        /// </summary>
        public InputList<Inputs.WirelessEthernetPortsProfilesPortGetArgs> Ports
        {
            get => _ports ?? (_ports = new InputList<Inputs.WirelessEthernetPortsProfilesPortGetArgs>());
            set => _ports = value;
        }

        /// <summary>
        /// AP port profile ID
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        [Input("usbPorts")]
        private InputList<Inputs.WirelessEthernetPortsProfilesUsbPortGetArgs>? _usbPorts;

        /// <summary>
        /// Usb ports config
        /// </summary>
        public InputList<Inputs.WirelessEthernetPortsProfilesUsbPortGetArgs> UsbPorts
        {
            get => _usbPorts ?? (_usbPorts = new InputList<Inputs.WirelessEthernetPortsProfilesUsbPortGetArgs>());
            set => _usbPorts = value;
        }

        public WirelessEthernetPortsProfilesState()
        {
        }
        public static new WirelessEthernetPortsProfilesState Empty => new WirelessEthernetPortsProfilesState();
    }
}
