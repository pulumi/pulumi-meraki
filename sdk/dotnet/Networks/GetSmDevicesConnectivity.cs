// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSmDevicesConnectivity
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSmDevicesConnectivity.Invoke(new()
        ///     {
        ///         DeviceId = "string",
        ///         EndingBefore = "string",
        ///         NetworkId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSmDevicesConnectivityExample"] = example.Apply(getSmDevicesConnectivityResult =&gt; getSmDevicesConnectivityResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSmDevicesConnectivityResult> InvokeAsync(GetSmDevicesConnectivityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSmDevicesConnectivityResult>("meraki:networks/getSmDevicesConnectivity:getSmDevicesConnectivity", args ?? new GetSmDevicesConnectivityArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetSmDevicesConnectivity.Invoke(new()
        ///     {
        ///         DeviceId = "string",
        ///         EndingBefore = "string",
        ///         NetworkId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksSmDevicesConnectivityExample"] = example.Apply(getSmDevicesConnectivityResult =&gt; getSmDevicesConnectivityResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSmDevicesConnectivityResult> Invoke(GetSmDevicesConnectivityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmDevicesConnectivityResult>("meraki:networks/getSmDevicesConnectivity:getSmDevicesConnectivity", args ?? new GetSmDevicesConnectivityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSmDevicesConnectivityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// deviceId path parameter. Device ID
        /// </summary>
        [Input("deviceId", required: true)]
        public string DeviceId { get; set; } = null!;

        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        public GetSmDevicesConnectivityArgs()
        {
        }
        public static new GetSmDevicesConnectivityArgs Empty => new GetSmDevicesConnectivityArgs();
    }

    public sealed class GetSmDevicesConnectivityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// deviceId path parameter. Device ID
        /// </summary>
        [Input("deviceId", required: true)]
        public Input<string> DeviceId { get; set; } = null!;

        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        public GetSmDevicesConnectivityInvokeArgs()
        {
        }
        public static new GetSmDevicesConnectivityInvokeArgs Empty => new GetSmDevicesConnectivityInvokeArgs();
    }


    [OutputType]
    public sealed class GetSmDevicesConnectivityResult
    {
        /// <summary>
        /// deviceId path parameter. Device ID
        /// </summary>
        public readonly string DeviceId;
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseSmGetNetworkSmDeviceConnectivity
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSmDevicesConnectivityItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;

        [OutputConstructor]
        private GetSmDevicesConnectivityResult(
            string deviceId,

            string? endingBefore,

            string id,

            ImmutableArray<Outputs.GetSmDevicesConnectivityItemResult> items,

            string networkId,

            int? perPage,

            string? startingAfter)
        {
            DeviceId = deviceId;
            EndingBefore = endingBefore;
            Id = id;
            Items = items;
            NetworkId = networkId;
            PerPage = perPage;
            StartingAfter = startingAfter;
        }
    }
}
