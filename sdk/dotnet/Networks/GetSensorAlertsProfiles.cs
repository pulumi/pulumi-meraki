// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSensorAlertsProfiles
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetSensorAlertsProfilesResult> InvokeAsync(GetSensorAlertsProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSensorAlertsProfilesResult>("meraki:networks/getSensorAlertsProfiles:getSensorAlertsProfiles", args ?? new GetSensorAlertsProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSensorAlertsProfilesResult> Invoke(GetSensorAlertsProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSensorAlertsProfilesResult>("meraki:networks/getSensorAlertsProfiles:getSensorAlertsProfiles", args ?? new GetSensorAlertsProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSensorAlertsProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// id path parameter.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        public GetSensorAlertsProfilesArgs()
        {
        }
        public static new GetSensorAlertsProfilesArgs Empty => new GetSensorAlertsProfilesArgs();
    }

    public sealed class GetSensorAlertsProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// id path parameter.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public GetSensorAlertsProfilesInvokeArgs()
        {
        }
        public static new GetSensorAlertsProfilesInvokeArgs Empty => new GetSensorAlertsProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSensorAlertsProfilesResult
    {
        /// <summary>
        /// id path parameter.
        /// </summary>
        public readonly string? Id;
        public readonly Outputs.GetSensorAlertsProfilesItemResult Item;
        /// <summary>
        /// Array of ResponseSensorGetNetworkSensorAlertsProfiles
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSensorAlertsProfilesItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;

        [OutputConstructor]
        private GetSensorAlertsProfilesResult(
            string? id,

            Outputs.GetSensorAlertsProfilesItemResult item,

            ImmutableArray<Outputs.GetSensorAlertsProfilesItemResult> items,

            string? networkId)
        {
            Id = id;
            Item = item;
            Items = items;
            NetworkId = networkId;
        }
    }
}
