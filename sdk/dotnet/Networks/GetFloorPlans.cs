// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetFloorPlans
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetFloorPlansResult> InvokeAsync(GetFloorPlansArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFloorPlansResult>("meraki:networks/getFloorPlans:getFloorPlans", args ?? new GetFloorPlansArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetFloorPlansResult> Invoke(GetFloorPlansInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFloorPlansResult>("meraki:networks/getFloorPlans:getFloorPlans", args ?? new GetFloorPlansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFloorPlansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// floorPlanId path parameter. Floor plan ID
        /// </summary>
        [Input("floorPlanId")]
        public string? FloorPlanId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        public GetFloorPlansArgs()
        {
        }
        public static new GetFloorPlansArgs Empty => new GetFloorPlansArgs();
    }

    public sealed class GetFloorPlansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// floorPlanId path parameter. Floor plan ID
        /// </summary>
        [Input("floorPlanId")]
        public Input<string>? FloorPlanId { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public GetFloorPlansInvokeArgs()
        {
        }
        public static new GetFloorPlansInvokeArgs Empty => new GetFloorPlansInvokeArgs();
    }


    [OutputType]
    public sealed class GetFloorPlansResult
    {
        /// <summary>
        /// floorPlanId path parameter. Floor plan ID
        /// </summary>
        public readonly string? FloorPlanId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetFloorPlansItemResult Item;
        /// <summary>
        /// Array of ResponseNetworksGetNetworkFloorPlans
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFloorPlansItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;

        [OutputConstructor]
        private GetFloorPlansResult(
            string? floorPlanId,

            string id,

            Outputs.GetFloorPlansItemResult item,

            ImmutableArray<Outputs.GetFloorPlansItemResult> items,

            string? networkId)
        {
            FloorPlanId = floorPlanId;
            Id = id;
            Item = item;
            Items = items;
            NetworkId = networkId;
        }
    }
}
