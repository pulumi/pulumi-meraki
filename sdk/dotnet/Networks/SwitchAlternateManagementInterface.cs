// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/switchAlternateManagementInterface:SwitchAlternateManagementInterface example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/switchAlternateManagementInterface:SwitchAlternateManagementInterface")]
    public partial class SwitchAlternateManagementInterface : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Can be one or more of the following values: 'radius', 'snmp' or 'syslog'
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments
        /// </summary>
        [Output("switches")]
        public Output<ImmutableArray<Outputs.SwitchAlternateManagementInterfaceSwitch>> Switches { get; private set; } = null!;

        /// <summary>
        /// Alternate management VLAN, must be between 1 and 4094
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchAlternateManagementInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchAlternateManagementInterface(string name, SwitchAlternateManagementInterfaceArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/switchAlternateManagementInterface:SwitchAlternateManagementInterface", name, args ?? new SwitchAlternateManagementInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchAlternateManagementInterface(string name, Input<string> id, SwitchAlternateManagementInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/switchAlternateManagementInterface:SwitchAlternateManagementInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchAlternateManagementInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchAlternateManagementInterface Get(string name, Input<string> id, SwitchAlternateManagementInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchAlternateManagementInterface(name, id, state, options);
        }
    }

    public sealed class SwitchAlternateManagementInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Can be one or more of the following values: 'radius', 'snmp' or 'syslog'
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        [Input("switches")]
        private InputList<Inputs.SwitchAlternateManagementInterfaceSwitchArgs>? _switches;

        /// <summary>
        /// Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments
        /// </summary>
        public InputList<Inputs.SwitchAlternateManagementInterfaceSwitchArgs> Switches
        {
            get => _switches ?? (_switches = new InputList<Inputs.SwitchAlternateManagementInterfaceSwitchArgs>());
            set => _switches = value;
        }

        /// <summary>
        /// Alternate management VLAN, must be between 1 and 4094
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public SwitchAlternateManagementInterfaceArgs()
        {
        }
        public static new SwitchAlternateManagementInterfaceArgs Empty => new SwitchAlternateManagementInterfaceArgs();
    }

    public sealed class SwitchAlternateManagementInterfaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Can be one or more of the following values: 'radius', 'snmp' or 'syslog'
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        [Input("switches")]
        private InputList<Inputs.SwitchAlternateManagementInterfaceSwitchGetArgs>? _switches;

        /// <summary>
        /// Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments
        /// </summary>
        public InputList<Inputs.SwitchAlternateManagementInterfaceSwitchGetArgs> Switches
        {
            get => _switches ?? (_switches = new InputList<Inputs.SwitchAlternateManagementInterfaceSwitchGetArgs>());
            set => _switches = value;
        }

        /// <summary>
        /// Alternate management VLAN, must be between 1 and 4094
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public SwitchAlternateManagementInterfaceState()
        {
        }
        public static new SwitchAlternateManagementInterfaceState Empty => new SwitchAlternateManagementInterfaceState();
    }
}
