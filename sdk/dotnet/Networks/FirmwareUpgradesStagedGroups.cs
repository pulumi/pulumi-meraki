// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/firmwareUpgradesStagedGroups:FirmwareUpgradesStagedGroups example "group_id,network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/firmwareUpgradesStagedGroups:FirmwareUpgradesStagedGroups")]
    public partial class FirmwareUpgradesStagedGroups : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The devices and Switch Stacks assigned to the Group
        /// </summary>
        [Output("assignedDevices")]
        public Output<Outputs.FirmwareUpgradesStagedGroupsAssignedDevices> AssignedDevices { get; private set; } = null!;

        /// <summary>
        /// Description of the Staged Upgrade Group
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Id of staged upgrade group
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// Name of the Staged Upgrade Group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;


        /// <summary>
        /// Create a FirmwareUpgradesStagedGroups resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirmwareUpgradesStagedGroups(string name, FirmwareUpgradesStagedGroupsArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/firmwareUpgradesStagedGroups:FirmwareUpgradesStagedGroups", name, args ?? new FirmwareUpgradesStagedGroupsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirmwareUpgradesStagedGroups(string name, Input<string> id, FirmwareUpgradesStagedGroupsState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/firmwareUpgradesStagedGroups:FirmwareUpgradesStagedGroups", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirmwareUpgradesStagedGroups resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirmwareUpgradesStagedGroups Get(string name, Input<string> id, FirmwareUpgradesStagedGroupsState? state = null, CustomResourceOptions? options = null)
        {
            return new FirmwareUpgradesStagedGroups(name, id, state, options);
        }
    }

    public sealed class FirmwareUpgradesStagedGroupsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The devices and Switch Stacks assigned to the Group
        /// </summary>
        [Input("assignedDevices")]
        public Input<Inputs.FirmwareUpgradesStagedGroupsAssignedDevicesArgs>? AssignedDevices { get; set; }

        /// <summary>
        /// Description of the Staged Upgrade Group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Id of staged upgrade group
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the Staged Upgrade Group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public FirmwareUpgradesStagedGroupsArgs()
        {
        }
        public static new FirmwareUpgradesStagedGroupsArgs Empty => new FirmwareUpgradesStagedGroupsArgs();
    }

    public sealed class FirmwareUpgradesStagedGroupsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The devices and Switch Stacks assigned to the Group
        /// </summary>
        [Input("assignedDevices")]
        public Input<Inputs.FirmwareUpgradesStagedGroupsAssignedDevicesGetArgs>? AssignedDevices { get; set; }

        /// <summary>
        /// Description of the Staged Upgrade Group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Id of staged upgrade group
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the Staged Upgrade Group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        public FirmwareUpgradesStagedGroupsState()
        {
        }
        public static new FirmwareUpgradesStagedGroupsState Empty => new FirmwareUpgradesStagedGroupsState();
    }
}
