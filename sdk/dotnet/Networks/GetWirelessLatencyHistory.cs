// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetWirelessLatencyHistory
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetWirelessLatencyHistory.Invoke(new()
        ///     {
        ///         AccessCategory = "string",
        ///         ApTag = "string",
        ///         AutoResolution = false,
        ///         Band = "string",
        ///         ClientId = "string",
        ///         DeviceSerial = "string",
        ///         NetworkId = "string",
        ///         Resolution = 1,
        ///         Ssid = 1,
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksWirelessLatencyHistoryExample"] = example.Apply(getWirelessLatencyHistoryResult =&gt; getWirelessLatencyHistoryResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetWirelessLatencyHistoryResult> InvokeAsync(GetWirelessLatencyHistoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWirelessLatencyHistoryResult>("meraki:networks/getWirelessLatencyHistory:getWirelessLatencyHistory", args ?? new GetWirelessLatencyHistoryArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetWirelessLatencyHistory.Invoke(new()
        ///     {
        ///         AccessCategory = "string",
        ///         ApTag = "string",
        ///         AutoResolution = false,
        ///         Band = "string",
        ///         ClientId = "string",
        ///         DeviceSerial = "string",
        ///         NetworkId = "string",
        ///         Resolution = 1,
        ///         Ssid = 1,
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksWirelessLatencyHistoryExample"] = example.Apply(getWirelessLatencyHistoryResult =&gt; getWirelessLatencyHistoryResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetWirelessLatencyHistoryResult> Invoke(GetWirelessLatencyHistoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessLatencyHistoryResult>("meraki:networks/getWirelessLatencyHistory:getWirelessLatencyHistory", args ?? new GetWirelessLatencyHistoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWirelessLatencyHistoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// accessCategory query parameter. Filter by access category.
        /// </summary>
        [Input("accessCategory")]
        public string? AccessCategory { get; set; }

        /// <summary>
        /// apTag query parameter. Filter results by AP tag.
        /// </summary>
        [Input("apTag")]
        public string? ApTag { get; set; }

        /// <summary>
        /// autoResolution query parameter. Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
        /// </summary>
        [Input("autoResolution")]
        public bool? AutoResolution { get; set; }

        /// <summary>
        /// band query parameter. Filter results by band (either '2.4', '5' or '6').
        /// </summary>
        [Input("band")]
        public string? Band { get; set; }

        /// <summary>
        /// clientId query parameter. Filter results by network client.
        /// </summary>
        [Input("clientId")]
        public string? ClientId { get; set; }

        /// <summary>
        /// deviceSerial query parameter. Filter results by device.
        /// </summary>
        [Input("deviceSerial")]
        public string? DeviceSerial { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        /// <summary>
        /// resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
        /// </summary>
        [Input("resolution")]
        public int? Resolution { get; set; }

        /// <summary>
        /// ssid query parameter. Filter results by SSID number.
        /// </summary>
        [Input("ssid")]
        public int? Ssid { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        public GetWirelessLatencyHistoryArgs()
        {
        }
        public static new GetWirelessLatencyHistoryArgs Empty => new GetWirelessLatencyHistoryArgs();
    }

    public sealed class GetWirelessLatencyHistoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// accessCategory query parameter. Filter by access category.
        /// </summary>
        [Input("accessCategory")]
        public Input<string>? AccessCategory { get; set; }

        /// <summary>
        /// apTag query parameter. Filter results by AP tag.
        /// </summary>
        [Input("apTag")]
        public Input<string>? ApTag { get; set; }

        /// <summary>
        /// autoResolution query parameter. Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
        /// </summary>
        [Input("autoResolution")]
        public Input<bool>? AutoResolution { get; set; }

        /// <summary>
        /// band query parameter. Filter results by band (either '2.4', '5' or '6').
        /// </summary>
        [Input("band")]
        public Input<string>? Band { get; set; }

        /// <summary>
        /// clientId query parameter. Filter results by network client.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// deviceSerial query parameter. Filter results by device.
        /// </summary>
        [Input("deviceSerial")]
        public Input<string>? DeviceSerial { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
        /// </summary>
        [Input("resolution")]
        public Input<int>? Resolution { get; set; }

        /// <summary>
        /// ssid query parameter. Filter results by SSID number.
        /// </summary>
        [Input("ssid")]
        public Input<int>? Ssid { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        public GetWirelessLatencyHistoryInvokeArgs()
        {
        }
        public static new GetWirelessLatencyHistoryInvokeArgs Empty => new GetWirelessLatencyHistoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetWirelessLatencyHistoryResult
    {
        /// <summary>
        /// accessCategory query parameter. Filter by access category.
        /// </summary>
        public readonly string? AccessCategory;
        /// <summary>
        /// apTag query parameter. Filter results by AP tag.
        /// </summary>
        public readonly string? ApTag;
        /// <summary>
        /// autoResolution query parameter. Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
        /// </summary>
        public readonly bool? AutoResolution;
        /// <summary>
        /// band query parameter. Filter results by band (either '2.4', '5' or '6').
        /// </summary>
        public readonly string? Band;
        /// <summary>
        /// clientId query parameter. Filter results by network client.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// deviceSerial query parameter. Filter results by device.
        /// </summary>
        public readonly string? DeviceSerial;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseWirelessGetNetworkWirelessLatencyHistory
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWirelessLatencyHistoryItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
        /// </summary>
        public readonly int? Resolution;
        /// <summary>
        /// ssid query parameter. Filter results by SSID number.
        /// </summary>
        public readonly int? Ssid;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        public readonly double? Timespan;

        [OutputConstructor]
        private GetWirelessLatencyHistoryResult(
            string? accessCategory,

            string? apTag,

            bool? autoResolution,

            string? band,

            string? clientId,

            string? deviceSerial,

            string id,

            ImmutableArray<Outputs.GetWirelessLatencyHistoryItemResult> items,

            string networkId,

            int? resolution,

            int? ssid,

            string? t0,

            string? t1,

            double? timespan)
        {
            AccessCategory = accessCategory;
            ApTag = apTag;
            AutoResolution = autoResolution;
            Band = band;
            ClientId = clientId;
            DeviceSerial = deviceSerial;
            Id = id;
            Items = items;
            NetworkId = networkId;
            Resolution = resolution;
            Ssid = ssid;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
        }
    }
}
