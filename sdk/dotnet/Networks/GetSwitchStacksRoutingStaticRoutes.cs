// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetSwitchStacksRoutingStaticRoutes
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetSwitchStacksRoutingStaticRoutesResult> InvokeAsync(GetSwitchStacksRoutingStaticRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSwitchStacksRoutingStaticRoutesResult>("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", args ?? new GetSwitchStacksRoutingStaticRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSwitchStacksRoutingStaticRoutesResult> Invoke(GetSwitchStacksRoutingStaticRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchStacksRoutingStaticRoutesResult>("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", args ?? new GetSwitchStacksRoutingStaticRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSwitchStacksRoutingStaticRoutesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// staticRouteId path parameter. Static route ID
        /// </summary>
        [Input("staticRouteId")]
        public string? StaticRouteId { get; set; }

        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        [Input("switchStackId")]
        public string? SwitchStackId { get; set; }

        public GetSwitchStacksRoutingStaticRoutesArgs()
        {
        }
        public static new GetSwitchStacksRoutingStaticRoutesArgs Empty => new GetSwitchStacksRoutingStaticRoutesArgs();
    }

    public sealed class GetSwitchStacksRoutingStaticRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// staticRouteId path parameter. Static route ID
        /// </summary>
        [Input("staticRouteId")]
        public Input<string>? StaticRouteId { get; set; }

        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        [Input("switchStackId")]
        public Input<string>? SwitchStackId { get; set; }

        public GetSwitchStacksRoutingStaticRoutesInvokeArgs()
        {
        }
        public static new GetSwitchStacksRoutingStaticRoutesInvokeArgs Empty => new GetSwitchStacksRoutingStaticRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSwitchStacksRoutingStaticRoutesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetSwitchStacksRoutingStaticRoutesItemResult Item;
        /// <summary>
        /// Array of ResponseSwitchGetNetworkSwitchStackRoutingStaticRoutes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSwitchStacksRoutingStaticRoutesItemResult> Items;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string? NetworkId;
        /// <summary>
        /// staticRouteId path parameter. Static route ID
        /// </summary>
        public readonly string? StaticRouteId;
        /// <summary>
        /// switchStackId path parameter. Switch stack ID
        /// </summary>
        public readonly string? SwitchStackId;

        [OutputConstructor]
        private GetSwitchStacksRoutingStaticRoutesResult(
            string id,

            Outputs.GetSwitchStacksRoutingStaticRoutesItemResult item,

            ImmutableArray<Outputs.GetSwitchStacksRoutingStaticRoutesItemResult> items,

            string? networkId,

            string? staticRouteId,

            string? switchStackId)
        {
            Id = id;
            Item = item;
            Items = items;
            NetworkId = networkId;
            StaticRouteId = staticRouteId;
            SwitchStackId = switchStackId;
        }
    }
}
