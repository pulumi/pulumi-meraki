// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.WebhooksPayloadTemplates("example", new()
    ///     {
    ///         Body = "{'event_type':'{{alertTypeId}}','client_payload':{'text':'{{alertData}}'}}",
    ///         BodyFile = "Qm9keSBGaWxl",
    ///         Headers = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.WebhooksPayloadTemplatesHeaderArgs
    ///             {
    ///                 Name = "Authorization",
    ///                 Template = "Bearer {{sharedSecret}}",
    ///             },
    ///         },
    ///         HeadersFile = "SGVhZGVycyBGaWxl",
    ///         Name = "Custom Template",
    ///         NetworkId = "string",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksWebhooksPayloadTemplatesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates example "network_id,payload_template_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates")]
    public partial class WebhooksPayloadTemplates : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The body of the payload template, in liquid template
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
        /// </summary>
        [Output("bodyFile")]
        public Output<string> BodyFile { get; private set; } = null!;

        /// <summary>
        /// The payload template headers, will be rendered as a key-value pair in the webhook.
        /// </summary>
        [Output("headers")]
        public Output<ImmutableArray<Outputs.WebhooksPayloadTemplatesHeader>> Headers { get; private set; } = null!;

        /// <summary>
        /// A file containing the liquid template used with the webhook headers.
        /// </summary>
        [Output("headersFile")]
        public Output<string> HeadersFile { get; private set; } = null!;

        /// <summary>
        /// The name of the payload template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Webhook payload template Id
        /// </summary>
        [Output("payloadTemplateId")]
        public Output<string> PayloadTemplateId { get; private set; } = null!;

        /// <summary>
        /// Information on which entities have access to the template
        /// </summary>
        [Output("sharing")]
        public Output<Outputs.WebhooksPayloadTemplatesSharing> Sharing { get; private set; } = null!;

        /// <summary>
        /// The type of the payload template
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WebhooksPayloadTemplates resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebhooksPayloadTemplates(string name, WebhooksPayloadTemplatesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates", name, args ?? new WebhooksPayloadTemplatesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebhooksPayloadTemplates(string name, Input<string> id, WebhooksPayloadTemplatesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebhooksPayloadTemplates resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebhooksPayloadTemplates Get(string name, Input<string> id, WebhooksPayloadTemplatesState? state = null, CustomResourceOptions? options = null)
        {
            return new WebhooksPayloadTemplates(name, id, state, options);
        }
    }

    public sealed class WebhooksPayloadTemplatesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The body of the payload template, in liquid template
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
        /// </summary>
        [Input("bodyFile")]
        public Input<string>? BodyFile { get; set; }

        [Input("headers")]
        private InputList<Inputs.WebhooksPayloadTemplatesHeaderArgs>? _headers;

        /// <summary>
        /// The payload template headers, will be rendered as a key-value pair in the webhook.
        /// </summary>
        public InputList<Inputs.WebhooksPayloadTemplatesHeaderArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.WebhooksPayloadTemplatesHeaderArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// A file containing the liquid template used with the webhook headers.
        /// </summary>
        [Input("headersFile")]
        public Input<string>? HeadersFile { get; set; }

        /// <summary>
        /// The name of the payload template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// Webhook payload template Id
        /// </summary>
        [Input("payloadTemplateId")]
        public Input<string>? PayloadTemplateId { get; set; }

        public WebhooksPayloadTemplatesArgs()
        {
        }
        public static new WebhooksPayloadTemplatesArgs Empty => new WebhooksPayloadTemplatesArgs();
    }

    public sealed class WebhooksPayloadTemplatesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The body of the payload template, in liquid template
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
        /// </summary>
        [Input("bodyFile")]
        public Input<string>? BodyFile { get; set; }

        [Input("headers")]
        private InputList<Inputs.WebhooksPayloadTemplatesHeaderGetArgs>? _headers;

        /// <summary>
        /// The payload template headers, will be rendered as a key-value pair in the webhook.
        /// </summary>
        public InputList<Inputs.WebhooksPayloadTemplatesHeaderGetArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.WebhooksPayloadTemplatesHeaderGetArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// A file containing the liquid template used with the webhook headers.
        /// </summary>
        [Input("headersFile")]
        public Input<string>? HeadersFile { get; set; }

        /// <summary>
        /// The name of the payload template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Webhook payload template Id
        /// </summary>
        [Input("payloadTemplateId")]
        public Input<string>? PayloadTemplateId { get; set; }

        /// <summary>
        /// Information on which entities have access to the template
        /// </summary>
        [Input("sharing")]
        public Input<Inputs.WebhooksPayloadTemplatesSharingGetArgs>? Sharing { get; set; }

        /// <summary>
        /// The type of the payload template
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public WebhooksPayloadTemplatesState()
        {
        }
        public static new WebhooksPayloadTemplatesState Empty => new WebhooksPayloadTemplatesState();
    }
}
