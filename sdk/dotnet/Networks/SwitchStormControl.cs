// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.SwitchStormControl("example", new()
    ///     {
    ///         BroadcastThreshold = 30,
    ///         MulticastThreshold = 30,
    ///         NetworkId = "string",
    ///         UnknownUnicastThreshold = 30,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksSwitchStormControlExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/switchStormControl:SwitchStormControl example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/switchStormControl:SwitchStormControl")]
    public partial class SwitchStormControl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Broadcast threshold.
        /// </summary>
        [Output("broadcastThreshold")]
        public Output<int> BroadcastThreshold { get; private set; } = null!;

        /// <summary>
        /// Multicast threshold.
        /// </summary>
        [Output("multicastThreshold")]
        public Output<int> MulticastThreshold { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Unknown Unicast threshold.
        /// </summary>
        [Output("unknownUnicastThreshold")]
        public Output<int> UnknownUnicastThreshold { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchStormControl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchStormControl(string name, SwitchStormControlArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/switchStormControl:SwitchStormControl", name, args ?? new SwitchStormControlArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchStormControl(string name, Input<string> id, SwitchStormControlState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/switchStormControl:SwitchStormControl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchStormControl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchStormControl Get(string name, Input<string> id, SwitchStormControlState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchStormControl(name, id, state, options);
        }
    }

    public sealed class SwitchStormControlArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Broadcast threshold.
        /// </summary>
        [Input("broadcastThreshold")]
        public Input<int>? BroadcastThreshold { get; set; }

        /// <summary>
        /// Multicast threshold.
        /// </summary>
        [Input("multicastThreshold")]
        public Input<int>? MulticastThreshold { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// Unknown Unicast threshold.
        /// </summary>
        [Input("unknownUnicastThreshold")]
        public Input<int>? UnknownUnicastThreshold { get; set; }

        public SwitchStormControlArgs()
        {
        }
        public static new SwitchStormControlArgs Empty => new SwitchStormControlArgs();
    }

    public sealed class SwitchStormControlState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Broadcast threshold.
        /// </summary>
        [Input("broadcastThreshold")]
        public Input<int>? BroadcastThreshold { get; set; }

        /// <summary>
        /// Multicast threshold.
        /// </summary>
        [Input("multicastThreshold")]
        public Input<int>? MulticastThreshold { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Unknown Unicast threshold.
        /// </summary>
        [Input("unknownUnicastThreshold")]
        public Input<int>? UnknownUnicastThreshold { get; set; }

        public SwitchStormControlState()
        {
        }
        public static new SwitchStormControlState Empty => new SwitchStormControlState();
    }
}
