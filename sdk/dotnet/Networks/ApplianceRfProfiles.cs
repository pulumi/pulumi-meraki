// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/applianceRfProfiles:ApplianceRfProfiles example "network_id,rf_profile_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/applianceRfProfiles:ApplianceRfProfiles")]
    public partial class ApplianceRfProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Settings related to 5Ghz band.
        /// </summary>
        [Output("fiveGhzSettings")]
        public Output<Outputs.ApplianceRfProfilesFiveGhzSettings> FiveGhzSettings { get; private set; } = null!;

        /// <summary>
        /// The name of the profile.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of network this RF Profile belongs in.
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Per-SSID radio settings by number.
        /// </summary>
        [Output("perSsidSettings")]
        public Output<Outputs.ApplianceRfProfilesPerSsidSettings> PerSsidSettings { get; private set; } = null!;

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Output("rfProfileId")]
        public Output<string?> RfProfileId { get; private set; } = null!;

        /// <summary>
        /// Settings related to 2.4Ghz band.
        /// </summary>
        [Output("twoFourGhzSettings")]
        public Output<Outputs.ApplianceRfProfilesTwoFourGhzSettings> TwoFourGhzSettings { get; private set; } = null!;


        /// <summary>
        /// Create a ApplianceRfProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplianceRfProfiles(string name, ApplianceRfProfilesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/applianceRfProfiles:ApplianceRfProfiles", name, args ?? new ApplianceRfProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplianceRfProfiles(string name, Input<string> id, ApplianceRfProfilesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/applianceRfProfiles:ApplianceRfProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplianceRfProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplianceRfProfiles Get(string name, Input<string> id, ApplianceRfProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplianceRfProfiles(name, id, state, options);
        }
    }

    public sealed class ApplianceRfProfilesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings related to 5Ghz band.
        /// </summary>
        [Input("fiveGhzSettings")]
        public Input<Inputs.ApplianceRfProfilesFiveGhzSettingsArgs>? FiveGhzSettings { get; set; }

        /// <summary>
        /// The name of the profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of network this RF Profile belongs in.
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// Per-SSID radio settings by number.
        /// </summary>
        [Input("perSsidSettings")]
        public Input<Inputs.ApplianceRfProfilesPerSsidSettingsArgs>? PerSsidSettings { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        /// <summary>
        /// Settings related to 2.4Ghz band.
        /// </summary>
        [Input("twoFourGhzSettings")]
        public Input<Inputs.ApplianceRfProfilesTwoFourGhzSettingsArgs>? TwoFourGhzSettings { get; set; }

        public ApplianceRfProfilesArgs()
        {
        }
        public static new ApplianceRfProfilesArgs Empty => new ApplianceRfProfilesArgs();
    }

    public sealed class ApplianceRfProfilesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings related to 5Ghz band.
        /// </summary>
        [Input("fiveGhzSettings")]
        public Input<Inputs.ApplianceRfProfilesFiveGhzSettingsGetArgs>? FiveGhzSettings { get; set; }

        /// <summary>
        /// The name of the profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of network this RF Profile belongs in.
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Per-SSID radio settings by number.
        /// </summary>
        [Input("perSsidSettings")]
        public Input<Inputs.ApplianceRfProfilesPerSsidSettingsGetArgs>? PerSsidSettings { get; set; }

        /// <summary>
        /// rfProfileId path parameter. Rf profile ID
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        /// <summary>
        /// Settings related to 2.4Ghz band.
        /// </summary>
        [Input("twoFourGhzSettings")]
        public Input<Inputs.ApplianceRfProfilesTwoFourGhzSettingsGetArgs>? TwoFourGhzSettings { get; set; }

        public ApplianceRfProfilesState()
        {
        }
        public static new ApplianceRfProfilesState Empty => new ApplianceRfProfilesState();
    }
}
