// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.SwitchPortSchedules("example", new()
    ///     {
    ///         Name = "Weekdays schedule",
    ///         NetworkId = "string",
    ///         PortSchedule = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleArgs
    ///         {
    ///             Friday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleFridayArgs
    ///             {
    ///                 Active = true,
    ///                 From = "9:00",
    ///                 To = "17:00",
    ///             },
    ///             Monday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleMondayArgs
    ///             {
    ///                 Active = true,
    ///                 From = "9:00",
    ///                 To = "17:00",
    ///             },
    ///             Saturday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleSaturdayArgs
    ///             {
    ///                 Active = false,
    ///                 From = "0:00",
    ///                 To = "24:00",
    ///             },
    ///             Sunday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleSundayArgs
    ///             {
    ///                 Active = false,
    ///                 From = "0:00",
    ///                 To = "24:00",
    ///             },
    ///             Thursday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleThursdayArgs
    ///             {
    ///                 Active = true,
    ///                 From = "9:00",
    ///                 To = "17:00",
    ///             },
    ///             Tuesday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleTuesdayArgs
    ///             {
    ///                 Active = true,
    ///                 From = "9:00",
    ///                 To = "17:00",
    ///             },
    ///             Wednesday = new Meraki.Networks.Inputs.SwitchPortSchedulesPortScheduleWednesdayArgs
    ///             {
    ///                 Active = true,
    ///                 From = "9:00",
    ///                 To = "17:00",
    ///             },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksSwitchPortSchedulesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/switchPortSchedules:SwitchPortSchedules example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/switchPortSchedules:SwitchPortSchedules")]
    public partial class SwitchPortSchedules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name for your port schedule. Required
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// The schedule for switch port scheduling. Schedules are applied to days of the week.
        /// When it's empty, default schedule with all days of a week are configured.
        /// Any unspecified day in the schedule is added as a default schedule configuration of the day.
        /// </summary>
        [Output("portSchedule")]
        public Output<Outputs.SwitchPortSchedulesPortSchedule> PortSchedule { get; private set; } = null!;

        /// <summary>
        /// portScheduleId path parameter. Port schedule ID
        /// </summary>
        [Output("portScheduleId")]
        public Output<string> PortScheduleId { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchPortSchedules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchPortSchedules(string name, SwitchPortSchedulesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/switchPortSchedules:SwitchPortSchedules", name, args ?? new SwitchPortSchedulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchPortSchedules(string name, Input<string> id, SwitchPortSchedulesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/switchPortSchedules:SwitchPortSchedules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchPortSchedules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchPortSchedules Get(string name, Input<string> id, SwitchPortSchedulesState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchPortSchedules(name, id, state, options);
        }
    }

    public sealed class SwitchPortSchedulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name for your port schedule. Required
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// The schedule for switch port scheduling. Schedules are applied to days of the week.
        /// When it's empty, default schedule with all days of a week are configured.
        /// Any unspecified day in the schedule is added as a default schedule configuration of the day.
        /// </summary>
        [Input("portSchedule")]
        public Input<Inputs.SwitchPortSchedulesPortScheduleArgs>? PortSchedule { get; set; }

        /// <summary>
        /// portScheduleId path parameter. Port schedule ID
        /// </summary>
        [Input("portScheduleId")]
        public Input<string>? PortScheduleId { get; set; }

        public SwitchPortSchedulesArgs()
        {
        }
        public static new SwitchPortSchedulesArgs Empty => new SwitchPortSchedulesArgs();
    }

    public sealed class SwitchPortSchedulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name for your port schedule. Required
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// The schedule for switch port scheduling. Schedules are applied to days of the week.
        /// When it's empty, default schedule with all days of a week are configured.
        /// Any unspecified day in the schedule is added as a default schedule configuration of the day.
        /// </summary>
        [Input("portSchedule")]
        public Input<Inputs.SwitchPortSchedulesPortScheduleGetArgs>? PortSchedule { get; set; }

        /// <summary>
        /// portScheduleId path parameter. Port schedule ID
        /// </summary>
        [Input("portScheduleId")]
        public Input<string>? PortScheduleId { get; set; }

        public SwitchPortSchedulesState()
        {
        }
        public static new SwitchPortSchedulesState Empty => new SwitchPortSchedulesState();
    }
}
