// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules example "network_id,number"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules")]
    public partial class WirelessSsidsSchedules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// If true, the SSID outage schedule is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Output("number")]
        public Output<string> Number { get; private set; } = null!;

        /// <summary>
        /// List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
        /// </summary>
        [Output("ranges")]
        public Output<ImmutableArray<Outputs.WirelessSsidsSchedulesRange>> Ranges { get; private set; } = null!;

        /// <summary>
        /// List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
        /// </summary>
        [Output("rangesInSeconds")]
        public Output<ImmutableArray<Outputs.WirelessSsidsSchedulesRangesInSecond>> RangesInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessSsidsSchedules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessSsidsSchedules(string name, WirelessSsidsSchedulesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules", name, args ?? new WirelessSsidsSchedulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessSsidsSchedules(string name, Input<string> id, WirelessSsidsSchedulesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessSsidsSchedules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessSsidsSchedules Get(string name, Input<string> id, WirelessSsidsSchedulesState? state = null, CustomResourceOptions? options = null)
        {
            return new WirelessSsidsSchedules(name, id, state, options);
        }
    }

    public sealed class WirelessSsidsSchedulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, the SSID outage schedule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number", required: true)]
        public Input<string> Number { get; set; } = null!;

        [Input("ranges")]
        private InputList<Inputs.WirelessSsidsSchedulesRangeArgs>? _ranges;

        /// <summary>
        /// List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
        /// </summary>
        public InputList<Inputs.WirelessSsidsSchedulesRangeArgs> Ranges
        {
            get => _ranges ?? (_ranges = new InputList<Inputs.WirelessSsidsSchedulesRangeArgs>());
            set => _ranges = value;
        }

        [Input("rangesInSeconds")]
        private InputList<Inputs.WirelessSsidsSchedulesRangesInSecondArgs>? _rangesInSeconds;

        /// <summary>
        /// List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
        /// </summary>
        public InputList<Inputs.WirelessSsidsSchedulesRangesInSecondArgs> RangesInSeconds
        {
            get => _rangesInSeconds ?? (_rangesInSeconds = new InputList<Inputs.WirelessSsidsSchedulesRangesInSecondArgs>());
            set => _rangesInSeconds = value;
        }

        public WirelessSsidsSchedulesArgs()
        {
        }
        public static new WirelessSsidsSchedulesArgs Empty => new WirelessSsidsSchedulesArgs();
    }

    public sealed class WirelessSsidsSchedulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, the SSID outage schedule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number")]
        public Input<string>? Number { get; set; }

        [Input("ranges")]
        private InputList<Inputs.WirelessSsidsSchedulesRangeGetArgs>? _ranges;

        /// <summary>
        /// List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
        /// </summary>
        public InputList<Inputs.WirelessSsidsSchedulesRangeGetArgs> Ranges
        {
            get => _ranges ?? (_ranges = new InputList<Inputs.WirelessSsidsSchedulesRangeGetArgs>());
            set => _ranges = value;
        }

        [Input("rangesInSeconds")]
        private InputList<Inputs.WirelessSsidsSchedulesRangesInSecondGetArgs>? _rangesInSeconds;

        /// <summary>
        /// List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
        /// </summary>
        public InputList<Inputs.WirelessSsidsSchedulesRangesInSecondGetArgs> RangesInSeconds
        {
            get => _rangesInSeconds ?? (_rangesInSeconds = new InputList<Inputs.WirelessSsidsSchedulesRangesInSecondGetArgs>());
            set => _rangesInSeconds = value;
        }

        public WirelessSsidsSchedulesState()
        {
        }
        public static new WirelessSsidsSchedulesState Empty => new WirelessSsidsSchedulesState();
    }
}
