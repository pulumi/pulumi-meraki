// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.VlanProfiles("example", new()
    ///     {
    ///         Iname = "string",
    ///         Name = "My VLAN profile name",
    ///         NetworkId = "string",
    ///         VlanGroups = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.VlanProfilesVlanGroupArgs
    ///             {
    ///                 Name = "named-group-1",
    ///                 Vlan_ids = "2,5-7",
    ///             },
    ///         },
    ///         VlanNames = new[]
    ///         {
    ///             new Meraki.Networks.Inputs.VlanProfilesVlanNameArgs
    ///             {
    ///                 Adaptive_policy_group = 
    ///                 {
    ///                     { "id", "791" },
    ///                 },
    ///                 Name = "named-1",
    ///                 Vlan_id = "1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksVlanProfilesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/vlanProfiles:VlanProfiles example "iname,network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/vlanProfiles:VlanProfiles")]
    public partial class VlanProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IName of the VLAN profile
        /// </summary>
        [Output("iname")]
        public Output<string> Iname { get; private set; } = null!;

        /// <summary>
        /// Boolean indicating the default VLAN Profile for any device that does not have a profile explicitly assigned
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// Name of the profile, string length must be from 1 to 255 characters
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        [Output("vlanGroups")]
        public Output<ImmutableArray<Outputs.VlanProfilesVlanGroup>> VlanGroups { get; private set; } = null!;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        [Output("vlanNames")]
        public Output<ImmutableArray<Outputs.VlanProfilesVlanName>> VlanNames { get; private set; } = null!;


        /// <summary>
        /// Create a VlanProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VlanProfiles(string name, VlanProfilesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/vlanProfiles:VlanProfiles", name, args ?? new VlanProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VlanProfiles(string name, Input<string> id, VlanProfilesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/vlanProfiles:VlanProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VlanProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VlanProfiles Get(string name, Input<string> id, VlanProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new VlanProfiles(name, id, state, options);
        }
    }

    public sealed class VlanProfilesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IName of the VLAN profile
        /// </summary>
        [Input("iname", required: true)]
        public Input<string> Iname { get; set; } = null!;

        /// <summary>
        /// Name of the profile, string length must be from 1 to 255 characters
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("vlanGroups")]
        private InputList<Inputs.VlanProfilesVlanGroupArgs>? _vlanGroups;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        public InputList<Inputs.VlanProfilesVlanGroupArgs> VlanGroups
        {
            get => _vlanGroups ?? (_vlanGroups = new InputList<Inputs.VlanProfilesVlanGroupArgs>());
            set => _vlanGroups = value;
        }

        [Input("vlanNames")]
        private InputList<Inputs.VlanProfilesVlanNameArgs>? _vlanNames;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        public InputList<Inputs.VlanProfilesVlanNameArgs> VlanNames
        {
            get => _vlanNames ?? (_vlanNames = new InputList<Inputs.VlanProfilesVlanNameArgs>());
            set => _vlanNames = value;
        }

        public VlanProfilesArgs()
        {
        }
        public static new VlanProfilesArgs Empty => new VlanProfilesArgs();
    }

    public sealed class VlanProfilesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IName of the VLAN profile
        /// </summary>
        [Input("iname")]
        public Input<string>? Iname { get; set; }

        /// <summary>
        /// Boolean indicating the default VLAN Profile for any device that does not have a profile explicitly assigned
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the profile, string length must be from 1 to 255 characters
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("vlanGroups")]
        private InputList<Inputs.VlanProfilesVlanGroupGetArgs>? _vlanGroups;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        public InputList<Inputs.VlanProfilesVlanGroupGetArgs> VlanGroups
        {
            get => _vlanGroups ?? (_vlanGroups = new InputList<Inputs.VlanProfilesVlanGroupGetArgs>());
            set => _vlanGroups = value;
        }

        [Input("vlanNames")]
        private InputList<Inputs.VlanProfilesVlanNameGetArgs>? _vlanNames;

        /// <summary>
        /// An array of named VLANs
        /// </summary>
        public InputList<Inputs.VlanProfilesVlanNameGetArgs> VlanNames
        {
            get => _vlanNames ?? (_vlanNames = new InputList<Inputs.VlanProfilesVlanNameGetArgs>());
            set => _vlanNames = value;
        }

        public VlanProfilesState()
        {
        }
        public static new VlanProfilesState Empty => new VlanProfilesState();
    }
}
