// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    public static class GetPiiSmOwnersForKey
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetPiiSmOwnersForKey.Invoke(new()
        ///     {
        ///         BluetoothMac = "string",
        ///         Email = "string",
        ///         Imei = "string",
        ///         Mac = "string",
        ///         NetworkId = "string",
        ///         Serial = "string",
        ///         Username = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksPiiSmOwnersForKeyExample"] = example.Apply(getPiiSmOwnersForKeyResult =&gt; getPiiSmOwnersForKeyResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPiiSmOwnersForKeyResult> InvokeAsync(GetPiiSmOwnersForKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPiiSmOwnersForKeyResult>("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", args ?? new GetPiiSmOwnersForKeyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetPiiSmOwnersForKey.Invoke(new()
        ///     {
        ///         BluetoothMac = "string",
        ///         Email = "string",
        ///         Imei = "string",
        ///         Mac = "string",
        ///         NetworkId = "string",
        ///         Serial = "string",
        ///         Username = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksPiiSmOwnersForKeyExample"] = example.Apply(getPiiSmOwnersForKeyResult =&gt; getPiiSmOwnersForKeyResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPiiSmOwnersForKeyResult> Invoke(GetPiiSmOwnersForKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPiiSmOwnersForKeyResult>("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", args ?? new GetPiiSmOwnersForKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Networks.GetPiiSmOwnersForKey.Invoke(new()
        ///     {
        ///         BluetoothMac = "string",
        ///         Email = "string",
        ///         Imei = "string",
        ///         Mac = "string",
        ///         NetworkId = "string",
        ///         Serial = "string",
        ///         Username = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiNetworksPiiSmOwnersForKeyExample"] = example.Apply(getPiiSmOwnersForKeyResult =&gt; getPiiSmOwnersForKeyResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPiiSmOwnersForKeyResult> Invoke(GetPiiSmOwnersForKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPiiSmOwnersForKeyResult>("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", args ?? new GetPiiSmOwnersForKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPiiSmOwnersForKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// bluetoothMac query parameter. The MAC of a Bluetooth client
        /// </summary>
        [Input("bluetoothMac")]
        public string? BluetoothMac { get; set; }

        /// <summary>
        /// email query parameter. The email of a network user account or a Systems Manager device
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        /// <summary>
        /// imei query parameter. The IMEI of a Systems Manager device
        /// </summary>
        [Input("imei")]
        public string? Imei { get; set; }

        /// <summary>
        /// mac query parameter. The MAC of a network client device or a Systems Manager device
        /// </summary>
        [Input("mac")]
        public string? Mac { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        /// <summary>
        /// serial query parameter. The serial of a Systems Manager device
        /// </summary>
        [Input("serial")]
        public string? Serial { get; set; }

        /// <summary>
        /// username query parameter. The username of a Systems Manager user
        /// </summary>
        [Input("username")]
        public string? Username { get; set; }

        public GetPiiSmOwnersForKeyArgs()
        {
        }
        public static new GetPiiSmOwnersForKeyArgs Empty => new GetPiiSmOwnersForKeyArgs();
    }

    public sealed class GetPiiSmOwnersForKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// bluetoothMac query parameter. The MAC of a Bluetooth client
        /// </summary>
        [Input("bluetoothMac")]
        public Input<string>? BluetoothMac { get; set; }

        /// <summary>
        /// email query parameter. The email of a network user account or a Systems Manager device
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// imei query parameter. The IMEI of a Systems Manager device
        /// </summary>
        [Input("imei")]
        public Input<string>? Imei { get; set; }

        /// <summary>
        /// mac query parameter. The MAC of a network client device or a Systems Manager device
        /// </summary>
        [Input("mac")]
        public Input<string>? Mac { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// serial query parameter. The serial of a Systems Manager device
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        /// <summary>
        /// username query parameter. The username of a Systems Manager user
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetPiiSmOwnersForKeyInvokeArgs()
        {
        }
        public static new GetPiiSmOwnersForKeyInvokeArgs Empty => new GetPiiSmOwnersForKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPiiSmOwnersForKeyResult
    {
        /// <summary>
        /// bluetoothMac query parameter. The MAC of a Bluetooth client
        /// </summary>
        public readonly string? BluetoothMac;
        /// <summary>
        /// email query parameter. The email of a network user account or a Systems Manager device
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// imei query parameter. The IMEI of a Systems Manager device
        /// </summary>
        public readonly string? Imei;
        public readonly Outputs.GetPiiSmOwnersForKeyItemResult Item;
        /// <summary>
        /// mac query parameter. The MAC of a network client device or a Systems Manager device
        /// </summary>
        public readonly string? Mac;
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// serial query parameter. The serial of a Systems Manager device
        /// </summary>
        public readonly string? Serial;
        /// <summary>
        /// username query parameter. The username of a Systems Manager user
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private GetPiiSmOwnersForKeyResult(
            string? bluetoothMac,

            string? email,

            string id,

            string? imei,

            Outputs.GetPiiSmOwnersForKeyItemResult item,

            string? mac,

            string networkId,

            string? serial,

            string? username)
        {
            BluetoothMac = bluetoothMac;
            Email = email;
            Id = id;
            Imei = imei;
            Item = item;
            Mac = mac;
            NetworkId = networkId;
            Serial = serial;
            Username = username;
        }
    }
}
