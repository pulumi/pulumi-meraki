// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules example "network_id,number"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules")]
    public partial class WirelessSsidsFirewallL3FirewallRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
        /// </summary>
        [Output("allowLanAccess")]
        public Output<bool?> AllowLanAccess { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Output("number")]
        public Output<string> Number { get; private set; } = null!;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.WirelessSsidsFirewallL3FirewallRulesRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        [Output("rulesResponses")]
        public Output<ImmutableArray<Outputs.WirelessSsidsFirewallL3FirewallRulesRulesResponse>> RulesResponses { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessSsidsFirewallL3FirewallRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessSsidsFirewallL3FirewallRules(string name, WirelessSsidsFirewallL3FirewallRulesArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules", name, args ?? new WirelessSsidsFirewallL3FirewallRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessSsidsFirewallL3FirewallRules(string name, Input<string> id, WirelessSsidsFirewallL3FirewallRulesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessSsidsFirewallL3FirewallRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessSsidsFirewallL3FirewallRules Get(string name, Input<string> id, WirelessSsidsFirewallL3FirewallRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new WirelessSsidsFirewallL3FirewallRules(name, id, state, options);
        }
    }

    public sealed class WirelessSsidsFirewallL3FirewallRulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
        /// </summary>
        [Input("allowLanAccess")]
        public Input<bool>? AllowLanAccess { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number", required: true)]
        public Input<string> Number { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleArgs>? _rules;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        public InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleArgs>());
            set => _rules = value;
        }

        [Input("rulesResponses")]
        private InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseArgs>? _rulesResponses;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        public InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseArgs> RulesResponses
        {
            get => _rulesResponses ?? (_rulesResponses = new InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseArgs>());
            set => _rulesResponses = value;
        }

        public WirelessSsidsFirewallL3FirewallRulesArgs()
        {
        }
        public static new WirelessSsidsFirewallL3FirewallRulesArgs Empty => new WirelessSsidsFirewallL3FirewallRulesArgs();
    }

    public sealed class WirelessSsidsFirewallL3FirewallRulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
        /// </summary>
        [Input("allowLanAccess")]
        public Input<bool>? AllowLanAccess { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// number path parameter.
        /// </summary>
        [Input("number")]
        public Input<string>? Number { get; set; }

        [Input("rules")]
        private InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleGetArgs>? _rules;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        public InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRuleGetArgs>());
            set => _rules = value;
        }

        [Input("rulesResponses")]
        private InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseGetArgs>? _rulesResponses;

        /// <summary>
        /// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
        /// </summary>
        public InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseGetArgs> RulesResponses
        {
            get => _rulesResponses ?? (_rulesResponses = new InputList<Inputs.WirelessSsidsFirewallL3FirewallRulesRulesResponseGetArgs>());
            set => _rulesResponses = value;
        }

        public WirelessSsidsFirewallL3FirewallRulesState()
        {
        }
        public static new WirelessSsidsFirewallL3FirewallRulesState Empty => new WirelessSsidsFirewallL3FirewallRulesState();
    }
}
