// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/switchStp:SwitchStp example "network_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/switchStp:SwitchStp")]
    public partial class SwitchStp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// The spanning tree protocol status in network
        /// </summary>
        [Output("rstpEnabled")]
        public Output<bool> RstpEnabled { get; private set; } = null!;

        /// <summary>
        /// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
        /// </summary>
        [Output("stpBridgePriorities")]
        public Output<ImmutableArray<Outputs.SwitchStpStpBridgePriority>> StpBridgePriorities { get; private set; } = null!;

        /// <summary>
        /// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
        /// </summary>
        [Output("stpBridgePriorityResponses")]
        public Output<ImmutableArray<Outputs.SwitchStpStpBridgePriorityResponse>> StpBridgePriorityResponses { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchStp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchStp(string name, SwitchStpArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/switchStp:SwitchStp", name, args ?? new SwitchStpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchStp(string name, Input<string> id, SwitchStpState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/switchStp:SwitchStp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchStp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchStp Get(string name, Input<string> id, SwitchStpState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchStp(name, id, state, options);
        }
    }

    public sealed class SwitchStpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// The spanning tree protocol status in network
        /// </summary>
        [Input("rstpEnabled")]
        public Input<bool>? RstpEnabled { get; set; }

        [Input("stpBridgePriorities")]
        private InputList<Inputs.SwitchStpStpBridgePriorityArgs>? _stpBridgePriorities;

        /// <summary>
        /// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
        /// </summary>
        public InputList<Inputs.SwitchStpStpBridgePriorityArgs> StpBridgePriorities
        {
            get => _stpBridgePriorities ?? (_stpBridgePriorities = new InputList<Inputs.SwitchStpStpBridgePriorityArgs>());
            set => _stpBridgePriorities = value;
        }

        public SwitchStpArgs()
        {
        }
        public static new SwitchStpArgs Empty => new SwitchStpArgs();
    }

    public sealed class SwitchStpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// The spanning tree protocol status in network
        /// </summary>
        [Input("rstpEnabled")]
        public Input<bool>? RstpEnabled { get; set; }

        [Input("stpBridgePriorities")]
        private InputList<Inputs.SwitchStpStpBridgePriorityGetArgs>? _stpBridgePriorities;

        /// <summary>
        /// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
        /// </summary>
        public InputList<Inputs.SwitchStpStpBridgePriorityGetArgs> StpBridgePriorities
        {
            get => _stpBridgePriorities ?? (_stpBridgePriorities = new InputList<Inputs.SwitchStpStpBridgePriorityGetArgs>());
            set => _stpBridgePriorities = value;
        }

        [Input("stpBridgePriorityResponses")]
        private InputList<Inputs.SwitchStpStpBridgePriorityResponseGetArgs>? _stpBridgePriorityResponses;

        /// <summary>
        /// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
        /// </summary>
        public InputList<Inputs.SwitchStpStpBridgePriorityResponseGetArgs> StpBridgePriorityResponses
        {
            get => _stpBridgePriorityResponses ?? (_stpBridgePriorityResponses = new InputList<Inputs.SwitchStpStpBridgePriorityResponseGetArgs>());
            set => _stpBridgePriorityResponses = value;
        }

        public SwitchStpState()
        {
        }
        public static new SwitchStpState Empty => new SwitchStpState();
    }
}
