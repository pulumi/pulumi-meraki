// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Networks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Networks.AppliancePrefixesDelegatedStatics("example", new()
    ///     {
    ///         Description = "Prefix on WAN 1 of Long Island Office network",
    ///         NetworkId = "string",
    ///         Origin = new Meraki.Networks.Inputs.AppliancePrefixesDelegatedStaticsOriginArgs
    ///         {
    ///             Interfaces = new[]
    ///             {
    ///                 "wan1",
    ///             },
    ///             Type = "internet",
    ///         },
    ///         Prefix = "2001:db8:3c4d:15::/64",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiNetworksAppliancePrefixesDelegatedStaticsExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics example "network_id,static_delegated_prefix_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics")]
    public partial class AppliancePrefixesDelegatedStatics : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Prefix creation time.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Identifying description for the prefix.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// WAN1/WAN2/Independent prefix.
        /// </summary>
        [Output("origin")]
        public Output<Outputs.AppliancePrefixesDelegatedStaticsOrigin> Origin { get; private set; } = null!;

        /// <summary>
        /// IPv6 prefix/prefix length.
        /// </summary>
        [Output("prefix")]
        public Output<string> Prefix { get; private set; } = null!;

        /// <summary>
        /// Static delegated prefix id.
        /// </summary>
        [Output("staticDelegatedPrefixId")]
        public Output<string> StaticDelegatedPrefixId { get; private set; } = null!;

        /// <summary>
        /// Prefix Updated time.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AppliancePrefixesDelegatedStatics resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppliancePrefixesDelegatedStatics(string name, AppliancePrefixesDelegatedStaticsArgs args, CustomResourceOptions? options = null)
            : base("meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics", name, args ?? new AppliancePrefixesDelegatedStaticsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppliancePrefixesDelegatedStatics(string name, Input<string> id, AppliancePrefixesDelegatedStaticsState? state = null, CustomResourceOptions? options = null)
            : base("meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppliancePrefixesDelegatedStatics resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppliancePrefixesDelegatedStatics Get(string name, Input<string> id, AppliancePrefixesDelegatedStaticsState? state = null, CustomResourceOptions? options = null)
        {
            return new AppliancePrefixesDelegatedStatics(name, id, state, options);
        }
    }

    public sealed class AppliancePrefixesDelegatedStaticsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifying description for the prefix.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// WAN1/WAN2/Independent prefix.
        /// </summary>
        [Input("origin")]
        public Input<Inputs.AppliancePrefixesDelegatedStaticsOriginArgs>? Origin { get; set; }

        /// <summary>
        /// IPv6 prefix/prefix length.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// Static delegated prefix id.
        /// </summary>
        [Input("staticDelegatedPrefixId")]
        public Input<string>? StaticDelegatedPrefixId { get; set; }

        public AppliancePrefixesDelegatedStaticsArgs()
        {
        }
        public static new AppliancePrefixesDelegatedStaticsArgs Empty => new AppliancePrefixesDelegatedStaticsArgs();
    }

    public sealed class AppliancePrefixesDelegatedStaticsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Prefix creation time.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Identifying description for the prefix.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// networkId path parameter. Network ID
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// WAN1/WAN2/Independent prefix.
        /// </summary>
        [Input("origin")]
        public Input<Inputs.AppliancePrefixesDelegatedStaticsOriginGetArgs>? Origin { get; set; }

        /// <summary>
        /// IPv6 prefix/prefix length.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// Static delegated prefix id.
        /// </summary>
        [Input("staticDelegatedPrefixId")]
        public Input<string>? StaticDelegatedPrefixId { get; set; }

        /// <summary>
        /// Prefix Updated time.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AppliancePrefixesDelegatedStaticsState()
        {
        }
        public static new AppliancePrefixesDelegatedStaticsState Empty => new AppliancePrefixesDelegatedStaticsState();
    }
}
