// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:devices/liveToolsWakeOnLan:LiveToolsWakeOnLan example "serial,wake_on_lan_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:devices/liveToolsWakeOnLan:LiveToolsWakeOnLan")]
    public partial class LiveToolsWakeOnLan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Details for the callback. Please include either an httpServerId OR url and sharedSecret
        /// </summary>
        [Output("callback")]
        public Output<Outputs.LiveToolsWakeOnLanCallback> Callback { get; private set; } = null!;

        /// <summary>
        /// An error message for a failed execution
        /// </summary>
        [Output("error")]
        public Output<string> Error { get; private set; } = null!;

        /// <summary>
        /// The target's MAC address
        /// </summary>
        [Output("mac")]
        public Output<string> Mac { get; private set; } = null!;

        /// <summary>
        /// The parameters of the Wake-on-LAN request
        /// </summary>
        [Output("request")]
        public Output<Outputs.LiveToolsWakeOnLanRequest> Request { get; private set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Output("serial")]
        public Output<string> Serial { get; private set; } = null!;

        /// <summary>
        /// Status of the Wake-on-LAN request
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// GET this url to check the status of your ping request
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The target's VLAN (1 to 4094)
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;

        /// <summary>
        /// ID of the Wake-on-LAN job
        /// </summary>
        [Output("wakeOnLanId")]
        public Output<string> WakeOnLanId { get; private set; } = null!;


        /// <summary>
        /// Create a LiveToolsWakeOnLan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LiveToolsWakeOnLan(string name, LiveToolsWakeOnLanArgs args, CustomResourceOptions? options = null)
            : base("meraki:devices/liveToolsWakeOnLan:LiveToolsWakeOnLan", name, args ?? new LiveToolsWakeOnLanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LiveToolsWakeOnLan(string name, Input<string> id, LiveToolsWakeOnLanState? state = null, CustomResourceOptions? options = null)
            : base("meraki:devices/liveToolsWakeOnLan:LiveToolsWakeOnLan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LiveToolsWakeOnLan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LiveToolsWakeOnLan Get(string name, Input<string> id, LiveToolsWakeOnLanState? state = null, CustomResourceOptions? options = null)
        {
            return new LiveToolsWakeOnLan(name, id, state, options);
        }
    }

    public sealed class LiveToolsWakeOnLanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details for the callback. Please include either an httpServerId OR url and sharedSecret
        /// </summary>
        [Input("callback")]
        public Input<Inputs.LiveToolsWakeOnLanCallbackArgs>? Callback { get; set; }

        /// <summary>
        /// The target's MAC address
        /// </summary>
        [Input("mac")]
        public Input<string>? Mac { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        /// <summary>
        /// The target's VLAN (1 to 4094)
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// ID of the Wake-on-LAN job
        /// </summary>
        [Input("wakeOnLanId")]
        public Input<string>? WakeOnLanId { get; set; }

        public LiveToolsWakeOnLanArgs()
        {
        }
        public static new LiveToolsWakeOnLanArgs Empty => new LiveToolsWakeOnLanArgs();
    }

    public sealed class LiveToolsWakeOnLanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details for the callback. Please include either an httpServerId OR url and sharedSecret
        /// </summary>
        [Input("callback")]
        public Input<Inputs.LiveToolsWakeOnLanCallbackGetArgs>? Callback { get; set; }

        /// <summary>
        /// An error message for a failed execution
        /// </summary>
        [Input("error")]
        public Input<string>? Error { get; set; }

        /// <summary>
        /// The target's MAC address
        /// </summary>
        [Input("mac")]
        public Input<string>? Mac { get; set; }

        /// <summary>
        /// The parameters of the Wake-on-LAN request
        /// </summary>
        [Input("request")]
        public Input<Inputs.LiveToolsWakeOnLanRequestGetArgs>? Request { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        /// <summary>
        /// Status of the Wake-on-LAN request
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// GET this url to check the status of your ping request
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The target's VLAN (1 to 4094)
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// ID of the Wake-on-LAN job
        /// </summary>
        [Input("wakeOnLanId")]
        public Input<string>? WakeOnLanId { get; set; }

        public LiveToolsWakeOnLanState()
        {
        }
        public static new LiveToolsWakeOnLanState Empty => new LiveToolsWakeOnLanState();
    }
}
