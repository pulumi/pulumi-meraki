// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Devices.SwitchRoutingInterfaces("example", new()
    ///     {
    ///         DefaultGateway = "192.168.1.1",
    ///         InterfaceIp = "192.168.1.2",
    ///         Ipv6 = new Meraki.Devices.Inputs.SwitchRoutingInterfacesIpv6Args
    ///         {
    ///             Address = "1:2:3:4::1",
    ///             Assignment_mode = "static",
    ///             Gateway = "1:2:3:4::2",
    ///             Prefix = "1:2:3:4::/48",
    ///         },
    ///         MulticastRouting = "disabled",
    ///         Name = "L3 interface",
    ///         OspfSettings = new Meraki.Devices.Inputs.SwitchRoutingInterfacesOspfSettingsArgs
    ///         {
    ///             Area = "0",
    ///             Cost = 1,
    ///             Is_passive_enabled = true,
    ///         },
    ///         OspfV3 = new Meraki.Devices.Inputs.SwitchRoutingInterfacesOspfV3Args
    ///         {
    ///             Area = "1",
    ///             Cost = 2,
    ///             Is_passive_enabled = true,
    ///         },
    ///         Serial = "string",
    ///         Subnet = "192.168.1.0/24",
    ///         VlanId = 100,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiDevicesSwitchRoutingInterfacesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:devices/switchRoutingInterfaces:SwitchRoutingInterfaces example "interface_id,serial"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:devices/switchRoutingInterfaces:SwitchRoutingInterfaces")]
    public partial class SwitchRoutingInterfaces : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IPv4 default gateway
        /// </summary>
        [Output("defaultGateway")]
        public Output<string> DefaultGateway { get; private set; } = null!;

        /// <summary>
        /// The id
        /// </summary>
        [Output("interfaceId")]
        public Output<string> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// IPv4 address
        /// </summary>
        [Output("interfaceIp")]
        public Output<string> InterfaceIp { get; private set; } = null!;

        /// <summary>
        /// IPv6 addressing
        /// </summary>
        [Output("ipv6")]
        public Output<Outputs.SwitchRoutingInterfacesIpv6> Ipv6 { get; private set; } = null!;

        /// <summary>
        /// Multicast routing status
        /// </summary>
        [Output("multicastRouting")]
        public Output<string> MulticastRouting { get; private set; } = null!;

        /// <summary>
        /// The name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// IPv4 OSPF Settings
        /// </summary>
        [Output("ospfSettings")]
        public Output<Outputs.SwitchRoutingInterfacesOspfSettings> OspfSettings { get; private set; } = null!;

        /// <summary>
        /// IPv6 OSPF Settings
        /// </summary>
        [Output("ospfV3")]
        public Output<Outputs.SwitchRoutingInterfacesOspfV3> OspfV3 { get; private set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Output("serial")]
        public Output<string> Serial { get; private set; } = null!;

        /// <summary>
        /// IPv4 subnet
        /// </summary>
        [Output("subnet")]
        public Output<string> Subnet { get; private set; } = null!;

        /// <summary>
        /// VLAN id
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchRoutingInterfaces resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchRoutingInterfaces(string name, SwitchRoutingInterfacesArgs args, CustomResourceOptions? options = null)
            : base("meraki:devices/switchRoutingInterfaces:SwitchRoutingInterfaces", name, args ?? new SwitchRoutingInterfacesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchRoutingInterfaces(string name, Input<string> id, SwitchRoutingInterfacesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:devices/switchRoutingInterfaces:SwitchRoutingInterfaces", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchRoutingInterfaces resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchRoutingInterfaces Get(string name, Input<string> id, SwitchRoutingInterfacesState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchRoutingInterfaces(name, id, state, options);
        }
    }

    public sealed class SwitchRoutingInterfacesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 default gateway
        /// </summary>
        [Input("defaultGateway")]
        public Input<string>? DefaultGateway { get; set; }

        /// <summary>
        /// The id
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// IPv4 address
        /// </summary>
        [Input("interfaceIp")]
        public Input<string>? InterfaceIp { get; set; }

        /// <summary>
        /// IPv6 addressing
        /// </summary>
        [Input("ipv6")]
        public Input<Inputs.SwitchRoutingInterfacesIpv6Args>? Ipv6 { get; set; }

        /// <summary>
        /// Multicast routing status
        /// </summary>
        [Input("multicastRouting")]
        public Input<string>? MulticastRouting { get; set; }

        /// <summary>
        /// The name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// IPv4 OSPF Settings
        /// </summary>
        [Input("ospfSettings")]
        public Input<Inputs.SwitchRoutingInterfacesOspfSettingsArgs>? OspfSettings { get; set; }

        /// <summary>
        /// IPv6 OSPF Settings
        /// </summary>
        [Input("ospfV3")]
        public Input<Inputs.SwitchRoutingInterfacesOspfV3Args>? OspfV3 { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        /// <summary>
        /// IPv4 subnet
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        /// <summary>
        /// VLAN id
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public SwitchRoutingInterfacesArgs()
        {
        }
        public static new SwitchRoutingInterfacesArgs Empty => new SwitchRoutingInterfacesArgs();
    }

    public sealed class SwitchRoutingInterfacesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 default gateway
        /// </summary>
        [Input("defaultGateway")]
        public Input<string>? DefaultGateway { get; set; }

        /// <summary>
        /// The id
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// IPv4 address
        /// </summary>
        [Input("interfaceIp")]
        public Input<string>? InterfaceIp { get; set; }

        /// <summary>
        /// IPv6 addressing
        /// </summary>
        [Input("ipv6")]
        public Input<Inputs.SwitchRoutingInterfacesIpv6GetArgs>? Ipv6 { get; set; }

        /// <summary>
        /// Multicast routing status
        /// </summary>
        [Input("multicastRouting")]
        public Input<string>? MulticastRouting { get; set; }

        /// <summary>
        /// The name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// IPv4 OSPF Settings
        /// </summary>
        [Input("ospfSettings")]
        public Input<Inputs.SwitchRoutingInterfacesOspfSettingsGetArgs>? OspfSettings { get; set; }

        /// <summary>
        /// IPv6 OSPF Settings
        /// </summary>
        [Input("ospfV3")]
        public Input<Inputs.SwitchRoutingInterfacesOspfV3GetArgs>? OspfV3 { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        /// <summary>
        /// IPv4 subnet
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        /// <summary>
        /// VLAN id
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public SwitchRoutingInterfacesState()
        {
        }
        public static new SwitchRoutingInterfacesState Empty => new SwitchRoutingInterfacesState();
    }
}
