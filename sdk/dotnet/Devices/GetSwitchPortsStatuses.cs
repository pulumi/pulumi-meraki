// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    public static class GetSwitchPortsStatuses
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetSwitchPortsStatuses.Invoke(new()
        ///     {
        ///         Serial = "string",
        ///         T0 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesSwitchPortsStatusesExample"] = example.Apply(getSwitchPortsStatusesResult =&gt; getSwitchPortsStatusesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSwitchPortsStatusesResult> InvokeAsync(GetSwitchPortsStatusesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSwitchPortsStatusesResult>("meraki:devices/getSwitchPortsStatuses:getSwitchPortsStatuses", args ?? new GetSwitchPortsStatusesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetSwitchPortsStatuses.Invoke(new()
        ///     {
        ///         Serial = "string",
        ///         T0 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesSwitchPortsStatusesExample"] = example.Apply(getSwitchPortsStatusesResult =&gt; getSwitchPortsStatusesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSwitchPortsStatusesResult> Invoke(GetSwitchPortsStatusesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchPortsStatusesResult>("meraki:devices/getSwitchPortsStatuses:getSwitchPortsStatuses", args ?? new GetSwitchPortsStatusesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetSwitchPortsStatuses.Invoke(new()
        ///     {
        ///         Serial = "string",
        ///         T0 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesSwitchPortsStatusesExample"] = example.Apply(getSwitchPortsStatusesResult =&gt; getSwitchPortsStatusesResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSwitchPortsStatusesResult> Invoke(GetSwitchPortsStatusesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSwitchPortsStatusesResult>("meraki:devices/getSwitchPortsStatuses:getSwitchPortsStatuses", args ?? new GetSwitchPortsStatusesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSwitchPortsStatusesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public string Serial { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        public GetSwitchPortsStatusesArgs()
        {
        }
        public static new GetSwitchPortsStatusesArgs Empty => new GetSwitchPortsStatusesArgs();
    }

    public sealed class GetSwitchPortsStatusesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        public GetSwitchPortsStatusesInvokeArgs()
        {
        }
        public static new GetSwitchPortsStatusesInvokeArgs Empty => new GetSwitchPortsStatusesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSwitchPortsStatusesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseSwitchGetDeviceSwitchPortsStatuses
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSwitchPortsStatusesItemResult> Items;
        /// <summary>
        /// serial path parameter.
        /// </summary>
        public readonly string Serial;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        public readonly double? Timespan;

        [OutputConstructor]
        private GetSwitchPortsStatusesResult(
            string id,

            ImmutableArray<Outputs.GetSwitchPortsStatusesItemResult> items,

            string serial,

            string? t0,

            double? timespan)
        {
            Id = id;
            Items = items;
            Serial = serial;
            T0 = t0;
            Timespan = timespan;
        }
    }
}
