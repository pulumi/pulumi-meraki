// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Devices.WirelessRadioSettings("example", new()
    ///     {
    ///         FiveGhzSettings = new Meraki.Devices.Inputs.WirelessRadioSettingsFiveGhzSettingsArgs
    ///         {
    ///             Channel = 149,
    ///             Channel_width = 20,
    ///             Target_power = 15,
    ///         },
    ///         RfProfileId = "1234",
    ///         Serial = "string",
    ///         TwoFourGhzSettings = new Meraki.Devices.Inputs.WirelessRadioSettingsTwoFourGhzSettingsArgs
    ///         {
    ///             Channel = 11,
    ///             Target_power = 21,
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiDevicesWirelessRadioSettingsExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:devices/wirelessRadioSettings:WirelessRadioSettings example "serial"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:devices/wirelessRadioSettings:WirelessRadioSettings")]
    public partial class WirelessRadioSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Manual radio settings for 5 GHz.
        /// </summary>
        [Output("fiveGhzSettings")]
        public Output<Outputs.WirelessRadioSettingsFiveGhzSettings> FiveGhzSettings { get; private set; } = null!;

        /// <summary>
        /// The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
        /// </summary>
        [Output("rfProfileId")]
        public Output<string> RfProfileId { get; private set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Output("serial")]
        public Output<string> Serial { get; private set; } = null!;

        /// <summary>
        /// Manual radio settings for 2.4 GHz.
        /// </summary>
        [Output("twoFourGhzSettings")]
        public Output<Outputs.WirelessRadioSettingsTwoFourGhzSettings> TwoFourGhzSettings { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessRadioSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessRadioSettings(string name, WirelessRadioSettingsArgs args, CustomResourceOptions? options = null)
            : base("meraki:devices/wirelessRadioSettings:WirelessRadioSettings", name, args ?? new WirelessRadioSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessRadioSettings(string name, Input<string> id, WirelessRadioSettingsState? state = null, CustomResourceOptions? options = null)
            : base("meraki:devices/wirelessRadioSettings:WirelessRadioSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessRadioSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessRadioSettings Get(string name, Input<string> id, WirelessRadioSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new WirelessRadioSettings(name, id, state, options);
        }
    }

    public sealed class WirelessRadioSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Manual radio settings for 5 GHz.
        /// </summary>
        [Input("fiveGhzSettings")]
        public Input<Inputs.WirelessRadioSettingsFiveGhzSettingsArgs>? FiveGhzSettings { get; set; }

        /// <summary>
        /// The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        /// <summary>
        /// Manual radio settings for 2.4 GHz.
        /// </summary>
        [Input("twoFourGhzSettings")]
        public Input<Inputs.WirelessRadioSettingsTwoFourGhzSettingsArgs>? TwoFourGhzSettings { get; set; }

        public WirelessRadioSettingsArgs()
        {
        }
        public static new WirelessRadioSettingsArgs Empty => new WirelessRadioSettingsArgs();
    }

    public sealed class WirelessRadioSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Manual radio settings for 5 GHz.
        /// </summary>
        [Input("fiveGhzSettings")]
        public Input<Inputs.WirelessRadioSettingsFiveGhzSettingsGetArgs>? FiveGhzSettings { get; set; }

        /// <summary>
        /// The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
        /// </summary>
        [Input("rfProfileId")]
        public Input<string>? RfProfileId { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        /// <summary>
        /// Manual radio settings for 2.4 GHz.
        /// </summary>
        [Input("twoFourGhzSettings")]
        public Input<Inputs.WirelessRadioSettingsTwoFourGhzSettingsGetArgs>? TwoFourGhzSettings { get; set; }

        public WirelessRadioSettingsState()
        {
        }
        public static new WirelessRadioSettingsState Empty => new WirelessRadioSettingsState();
    }
}
