// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:devices/sensorRelationships:SensorRelationships example "serial"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:devices/sensorRelationships:SensorRelationships")]
    public partial class SensorRelationships : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        [Output("livestream")]
        public Output<Outputs.SensorRelationshipsLivestream> Livestream { get; private set; } = null!;

        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's r.Livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        [Output("livestreamRequests")]
        public Output<ImmutableArray<Outputs.SensorRelationshipsLivestreamRequest>> LivestreamRequests { get; private set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Output("serial")]
        public Output<string> Serial { get; private set; } = null!;


        /// <summary>
        /// Create a SensorRelationships resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SensorRelationships(string name, SensorRelationshipsArgs args, CustomResourceOptions? options = null)
            : base("meraki:devices/sensorRelationships:SensorRelationships", name, args ?? new SensorRelationshipsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SensorRelationships(string name, Input<string> id, SensorRelationshipsState? state = null, CustomResourceOptions? options = null)
            : base("meraki:devices/sensorRelationships:SensorRelationships", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SensorRelationships resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SensorRelationships Get(string name, Input<string> id, SensorRelationshipsState? state = null, CustomResourceOptions? options = null)
        {
            return new SensorRelationships(name, id, state, options);
        }
    }

    public sealed class SensorRelationshipsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        [Input("livestream")]
        public Input<Inputs.SensorRelationshipsLivestreamArgs>? Livestream { get; set; }

        [Input("livestreamRequests")]
        private InputList<Inputs.SensorRelationshipsLivestreamRequestArgs>? _livestreamRequests;

        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's r.Livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        public InputList<Inputs.SensorRelationshipsLivestreamRequestArgs> LivestreamRequests
        {
            get => _livestreamRequests ?? (_livestreamRequests = new InputList<Inputs.SensorRelationshipsLivestreamRequestArgs>());
            set => _livestreamRequests = value;
        }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        public SensorRelationshipsArgs()
        {
        }
        public static new SensorRelationshipsArgs Empty => new SensorRelationshipsArgs();
    }

    public sealed class SensorRelationshipsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        [Input("livestream")]
        public Input<Inputs.SensorRelationshipsLivestreamGetArgs>? Livestream { get; set; }

        [Input("livestreamRequests")]
        private InputList<Inputs.SensorRelationshipsLivestreamRequestGetArgs>? _livestreamRequests;

        /// <summary>
        /// A role defined between an MT sensor and an MV camera that adds the camera's r.Livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
        /// </summary>
        public InputList<Inputs.SensorRelationshipsLivestreamRequestGetArgs> LivestreamRequests
        {
            get => _livestreamRequests ?? (_livestreamRequests = new InputList<Inputs.SensorRelationshipsLivestreamRequestGetArgs>());
            set => _livestreamRequests = value;
        }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        public SensorRelationshipsState()
        {
        }
        public static new SensorRelationshipsState Empty => new SensorRelationshipsState();
    }
}
