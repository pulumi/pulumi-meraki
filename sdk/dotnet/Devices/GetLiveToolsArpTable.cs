// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    public static class GetLiveToolsArpTable
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetLiveToolsArpTable.Invoke(new()
        ///     {
        ///         ArpTableId = "string",
        ///         Serial = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesLiveToolsArpTableExample"] = example.Apply(getLiveToolsArpTableResult =&gt; getLiveToolsArpTableResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetLiveToolsArpTableResult> InvokeAsync(GetLiveToolsArpTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLiveToolsArpTableResult>("meraki:devices/getLiveToolsArpTable:getLiveToolsArpTable", args ?? new GetLiveToolsArpTableArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetLiveToolsArpTable.Invoke(new()
        ///     {
        ///         ArpTableId = "string",
        ///         Serial = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesLiveToolsArpTableExample"] = example.Apply(getLiveToolsArpTableResult =&gt; getLiveToolsArpTableResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLiveToolsArpTableResult> Invoke(GetLiveToolsArpTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLiveToolsArpTableResult>("meraki:devices/getLiveToolsArpTable:getLiveToolsArpTable", args ?? new GetLiveToolsArpTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Devices.GetLiveToolsArpTable.Invoke(new()
        ///     {
        ///         ArpTableId = "string",
        ///         Serial = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiDevicesLiveToolsArpTableExample"] = example.Apply(getLiveToolsArpTableResult =&gt; getLiveToolsArpTableResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLiveToolsArpTableResult> Invoke(GetLiveToolsArpTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLiveToolsArpTableResult>("meraki:devices/getLiveToolsArpTable:getLiveToolsArpTable", args ?? new GetLiveToolsArpTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLiveToolsArpTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// arpTableId path parameter. Arp table ID
        /// </summary>
        [Input("arpTableId", required: true)]
        public string ArpTableId { get; set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public string Serial { get; set; } = null!;

        public GetLiveToolsArpTableArgs()
        {
        }
        public static new GetLiveToolsArpTableArgs Empty => new GetLiveToolsArpTableArgs();
    }

    public sealed class GetLiveToolsArpTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// arpTableId path parameter. Arp table ID
        /// </summary>
        [Input("arpTableId", required: true)]
        public Input<string> ArpTableId { get; set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        public GetLiveToolsArpTableInvokeArgs()
        {
        }
        public static new GetLiveToolsArpTableInvokeArgs Empty => new GetLiveToolsArpTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetLiveToolsArpTableResult
    {
        /// <summary>
        /// arpTableId path parameter. Arp table ID
        /// </summary>
        public readonly string ArpTableId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetLiveToolsArpTableItemResult Item;
        /// <summary>
        /// serial path parameter.
        /// </summary>
        public readonly string Serial;

        [OutputConstructor]
        private GetLiveToolsArpTableResult(
            string arpTableId,

            string id,

            Outputs.GetLiveToolsArpTableItemResult item,

            string serial)
        {
            ArpTableId = arpTableId;
            Id = id;
            Item = item;
            Serial = serial;
        }
    }
}
