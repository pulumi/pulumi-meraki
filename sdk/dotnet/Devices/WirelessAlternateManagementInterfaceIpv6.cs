// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Devices
{
    /// <summary>
    /// ~&gt;Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
    /// already existed previously.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Devices.WirelessAlternateManagementInterfaceIpv6("example", new()
    ///     {
    ///         Serial = "string",
    ///         Parameters = new Meraki.Devices.Inputs.WirelessAlternateManagementInterfaceIpv6ParametersArgs
    ///         {
    ///             Addresses = new[]
    ///             {
    ///                 new Meraki.Devices.Inputs.WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs
    ///                 {
    ///                     Address = "2001:db8:3c4d:15::1",
    ///                     AssignmentMode = "static",
    ///                     Gateway = "fe80:db8:c15:c0:d0c::10ca:1d02",
    ///                     Nameservers = new Meraki.Devices.Inputs.WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs
    ///                     {
    ///                         Addresses = new[]
    ///                         {
    ///                             "2001:db8:3c4d:15::1",
    ///                             "2001:db8:3c4d:15::1",
    ///                         },
    ///                     },
    ///                     Prefix = "2001:db8:3c4d:15::/64",
    ///                     Protocol = "ipv6",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiDevicesWirelessAlternateManagementInterfaceIpv6Example"] = example,
    ///     };
    /// });
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:devices/wirelessAlternateManagementInterfaceIpv6:WirelessAlternateManagementInterfaceIpv6")]
    public partial class WirelessAlternateManagementInterfaceIpv6 : global::Pulumi.CustomResource
    {
        [Output("item")]
        public Output<Outputs.WirelessAlternateManagementInterfaceIpv6Item> Item { get; private set; } = null!;

        [Output("parameters")]
        public Output<Outputs.WirelessAlternateManagementInterfaceIpv6Parameters> Parameters { get; private set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Output("serial")]
        public Output<string> Serial { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessAlternateManagementInterfaceIpv6 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessAlternateManagementInterfaceIpv6(string name, WirelessAlternateManagementInterfaceIpv6Args args, CustomResourceOptions? options = null)
            : base("meraki:devices/wirelessAlternateManagementInterfaceIpv6:WirelessAlternateManagementInterfaceIpv6", name, args ?? new WirelessAlternateManagementInterfaceIpv6Args(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessAlternateManagementInterfaceIpv6(string name, Input<string> id, WirelessAlternateManagementInterfaceIpv6State? state = null, CustomResourceOptions? options = null)
            : base("meraki:devices/wirelessAlternateManagementInterfaceIpv6:WirelessAlternateManagementInterfaceIpv6", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessAlternateManagementInterfaceIpv6 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessAlternateManagementInterfaceIpv6 Get(string name, Input<string> id, WirelessAlternateManagementInterfaceIpv6State? state = null, CustomResourceOptions? options = null)
        {
            return new WirelessAlternateManagementInterfaceIpv6(name, id, state, options);
        }
    }

    public sealed class WirelessAlternateManagementInterfaceIpv6Args : global::Pulumi.ResourceArgs
    {
        [Input("parameters", required: true)]
        public Input<Inputs.WirelessAlternateManagementInterfaceIpv6ParametersArgs> Parameters { get; set; } = null!;

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial", required: true)]
        public Input<string> Serial { get; set; } = null!;

        public WirelessAlternateManagementInterfaceIpv6Args()
        {
        }
        public static new WirelessAlternateManagementInterfaceIpv6Args Empty => new WirelessAlternateManagementInterfaceIpv6Args();
    }

    public sealed class WirelessAlternateManagementInterfaceIpv6State : global::Pulumi.ResourceArgs
    {
        [Input("item")]
        public Input<Inputs.WirelessAlternateManagementInterfaceIpv6ItemGetArgs>? Item { get; set; }

        [Input("parameters")]
        public Input<Inputs.WirelessAlternateManagementInterfaceIpv6ParametersGetArgs>? Parameters { get; set; }

        /// <summary>
        /// serial path parameter.
        /// </summary>
        [Input("serial")]
        public Input<string>? Serial { get; set; }

        public WirelessAlternateManagementInterfaceIpv6State()
        {
        }
        public static new WirelessAlternateManagementInterfaceIpv6State Empty => new WirelessAlternateManagementInterfaceIpv6State();
    }
}
