// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Administered.Outputs
{

    [OutputType]
    public sealed class GetLicensingSubscriptionSubscriptionsItemResult
    {
        /// <summary>
        /// Numeric breakdown of network and entitlement counts
        /// </summary>
        public readonly Outputs.GetLicensingSubscriptionSubscriptionsItemCountsResult Counts;
        /// <summary>
        /// Subscription description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Subscription expiration date
        /// </summary>
        public readonly string EndDate;
        /// <summary>
        /// Entitlement info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLicensingSubscriptionSubscriptionsItemEntitlementResult> Entitlements;
        /// <summary>
        /// Subscription name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Products the subscription has entitlements for
        /// </summary>
        public readonly ImmutableArray<string> ProductTypes;
        /// <summary>
        /// Subscription start date
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// Subscription status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Subscription's ID
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Web order id
        /// </summary>
        public readonly string WebOrderId;

        [OutputConstructor]
        private GetLicensingSubscriptionSubscriptionsItemResult(
            Outputs.GetLicensingSubscriptionSubscriptionsItemCountsResult counts,

            string description,

            string endDate,

            ImmutableArray<Outputs.GetLicensingSubscriptionSubscriptionsItemEntitlementResult> entitlements,

            string name,

            ImmutableArray<string> productTypes,

            string startDate,

            string status,

            string subscriptionId,

            string webOrderId)
        {
            Counts = counts;
            Description = description;
            EndDate = endDate;
            Entitlements = entitlements;
            Name = name;
            ProductTypes = productTypes;
            StartDate = startDate;
            Status = status;
            SubscriptionId = subscriptionId;
            WebOrderId = webOrderId;
        }
    }
}
