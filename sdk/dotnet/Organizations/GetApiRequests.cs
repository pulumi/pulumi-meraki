// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetApiRequests
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApiRequests.Invoke(new()
        ///     {
        ///         AdminId = "string",
        ///         EndingBefore = "string",
        ///         Method = "string",
        ///         OperationIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         Path = "string",
        ///         PerPage = 1,
        ///         ResponseCode = 1,
        ///         SourceIp = "string",
        ///         StartingAfter = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         UserAgent = "string",
        ///         Version = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApiRequestsExample"] = example.Apply(getApiRequestsResult =&gt; getApiRequestsResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiRequestsResult> InvokeAsync(GetApiRequestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiRequestsResult>("meraki:organizations/getApiRequests:getApiRequests", args ?? new GetApiRequestsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApiRequests.Invoke(new()
        ///     {
        ///         AdminId = "string",
        ///         EndingBefore = "string",
        ///         Method = "string",
        ///         OperationIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         Path = "string",
        ///         PerPage = 1,
        ///         ResponseCode = 1,
        ///         SourceIp = "string",
        ///         StartingAfter = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         UserAgent = "string",
        ///         Version = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApiRequestsExample"] = example.Apply(getApiRequestsResult =&gt; getApiRequestsResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiRequestsResult> Invoke(GetApiRequestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiRequestsResult>("meraki:organizations/getApiRequests:getApiRequests", args ?? new GetApiRequestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiRequestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// adminId query parameter. Filter the results by the ID of the admin who made the API requests
        /// </summary>
        [Input("adminId")]
        public string? AdminId { get; set; }

        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// method query parameter. Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
        /// </summary>
        [Input("method")]
        public string? Method { get; set; }

        [Input("operationIds")]
        private List<string>? _operationIds;

        /// <summary>
        /// operationIds query parameter. Filter the results by one or more operation IDs for the API request
        /// </summary>
        public List<string> OperationIds
        {
            get => _operationIds ?? (_operationIds = new List<string>());
            set => _operationIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// path query parameter. Filter the results by the path of the API requests
        /// </summary>
        [Input("path")]
        public string? Path { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// responseCode query parameter. Filter the results by the response code of the API requests
        /// </summary>
        [Input("responseCode")]
        public int? ResponseCode { get; set; }

        /// <summary>
        /// sourceIp query parameter. Filter the results by the IP address of the originating API request
        /// </summary>
        [Input("sourceIp")]
        public string? SourceIp { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        /// <summary>
        /// userAgent query parameter. Filter the results by the user agent string of the API request
        /// </summary>
        [Input("userAgent")]
        public string? UserAgent { get; set; }

        /// <summary>
        /// version query parameter. Filter the results by the API version of the API request
        /// </summary>
        [Input("version")]
        public int? Version { get; set; }

        public GetApiRequestsArgs()
        {
        }
        public static new GetApiRequestsArgs Empty => new GetApiRequestsArgs();
    }

    public sealed class GetApiRequestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// adminId query parameter. Filter the results by the ID of the admin who made the API requests
        /// </summary>
        [Input("adminId")]
        public Input<string>? AdminId { get; set; }

        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// method query parameter. Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("operationIds")]
        private InputList<string>? _operationIds;

        /// <summary>
        /// operationIds query parameter. Filter the results by one or more operation IDs for the API request
        /// </summary>
        public InputList<string> OperationIds
        {
            get => _operationIds ?? (_operationIds = new InputList<string>());
            set => _operationIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// path query parameter. Filter the results by the path of the API requests
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// responseCode query parameter. Filter the results by the response code of the API requests
        /// </summary>
        [Input("responseCode")]
        public Input<int>? ResponseCode { get; set; }

        /// <summary>
        /// sourceIp query parameter. Filter the results by the IP address of the originating API request
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        /// <summary>
        /// userAgent query parameter. Filter the results by the user agent string of the API request
        /// </summary>
        [Input("userAgent")]
        public Input<string>? UserAgent { get; set; }

        /// <summary>
        /// version query parameter. Filter the results by the API version of the API request
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetApiRequestsInvokeArgs()
        {
        }
        public static new GetApiRequestsInvokeArgs Empty => new GetApiRequestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiRequestsResult
    {
        /// <summary>
        /// adminId query parameter. Filter the results by the ID of the admin who made the API requests
        /// </summary>
        public readonly string? AdminId;
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseOrganizationsGetOrganizationApiRequests
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiRequestsItemResult> Items;
        /// <summary>
        /// method query parameter. Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// operationIds query parameter. Filter the results by one or more operation IDs for the API request
        /// </summary>
        public readonly ImmutableArray<string> OperationIds;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// path query parameter. Filter the results by the path of the API requests
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// responseCode query parameter. Filter the results by the response code of the API requests
        /// </summary>
        public readonly int? ResponseCode;
        /// <summary>
        /// sourceIp query parameter. Filter the results by the IP address of the originating API request
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
        /// </summary>
        public readonly double? Timespan;
        /// <summary>
        /// userAgent query parameter. Filter the results by the user agent string of the API request
        /// </summary>
        public readonly string? UserAgent;
        /// <summary>
        /// version query parameter. Filter the results by the API version of the API request
        /// </summary>
        public readonly int? Version;

        [OutputConstructor]
        private GetApiRequestsResult(
            string? adminId,

            string? endingBefore,

            string id,

            ImmutableArray<Outputs.GetApiRequestsItemResult> items,

            string? method,

            ImmutableArray<string> operationIds,

            string organizationId,

            string? path,

            int? perPage,

            int? responseCode,

            string? sourceIp,

            string? startingAfter,

            string? t0,

            string? t1,

            double? timespan,

            string? userAgent,

            int? version)
        {
            AdminId = adminId;
            EndingBefore = endingBefore;
            Id = id;
            Items = items;
            Method = method;
            OperationIds = operationIds;
            OrganizationId = organizationId;
            Path = path;
            PerPage = perPage;
            ResponseCode = responseCode;
            SourceIp = sourceIp;
            StartingAfter = startingAfter;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
            UserAgent = userAgent;
            Version = version;
        }
    }
}
