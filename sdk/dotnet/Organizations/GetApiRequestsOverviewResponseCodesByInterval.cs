// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetApiRequestsOverviewResponseCodesByInterval
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApiRequestsOverviewResponseCodesByInterval.Invoke(new()
        ///     {
        ///         AdminIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         Interval = 1,
        ///         OperationIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         SourceIps = new[]
        ///         {
        ///             "string",
        ///         },
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         UserAgent = "string",
        ///         Version = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample"] = example.Apply(getApiRequestsOverviewResponseCodesByIntervalResult =&gt; getApiRequestsOverviewResponseCodesByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiRequestsOverviewResponseCodesByIntervalResult> InvokeAsync(GetApiRequestsOverviewResponseCodesByIntervalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiRequestsOverviewResponseCodesByIntervalResult>("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", args ?? new GetApiRequestsOverviewResponseCodesByIntervalArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApiRequestsOverviewResponseCodesByInterval.Invoke(new()
        ///     {
        ///         AdminIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         Interval = 1,
        ///         OperationIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         SourceIps = new[]
        ///         {
        ///             "string",
        ///         },
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         UserAgent = "string",
        ///         Version = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample"] = example.Apply(getApiRequestsOverviewResponseCodesByIntervalResult =&gt; getApiRequestsOverviewResponseCodesByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiRequestsOverviewResponseCodesByIntervalResult> Invoke(GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiRequestsOverviewResponseCodesByIntervalResult>("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", args ?? new GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApiRequestsOverviewResponseCodesByInterval.Invoke(new()
        ///     {
        ///         AdminIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         Interval = 1,
        ///         OperationIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         SourceIps = new[]
        ///         {
        ///             "string",
        ///         },
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         UserAgent = "string",
        ///         Version = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample"] = example.Apply(getApiRequestsOverviewResponseCodesByIntervalResult =&gt; getApiRequestsOverviewResponseCodesByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiRequestsOverviewResponseCodesByIntervalResult> Invoke(GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiRequestsOverviewResponseCodesByIntervalResult>("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", args ?? new GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiRequestsOverviewResponseCodesByIntervalArgs : global::Pulumi.InvokeArgs
    {
        [Input("adminIds")]
        private List<string>? _adminIds;

        /// <summary>
        /// adminIds query parameter. Filter by admin ID of user that made the API request
        /// </summary>
        public List<string> AdminIds
        {
            get => _adminIds ?? (_adminIds = new List<string>());
            set => _adminIds = value;
        }

        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided.
        /// </summary>
        [Input("interval")]
        public int? Interval { get; set; }

        [Input("operationIds")]
        private List<string>? _operationIds;

        /// <summary>
        /// operationIds query parameter. Filter by operation ID of the endpoint
        /// </summary>
        public List<string> OperationIds
        {
            get => _operationIds ?? (_operationIds = new List<string>());
            set => _operationIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("sourceIps")]
        private List<string>? _sourceIps;

        /// <summary>
        /// sourceIps query parameter. Filter by source IP that made the API request
        /// </summary>
        public List<string> SourceIps
        {
            get => _sourceIps ?? (_sourceIps = new List<string>());
            set => _sourceIps = value;
        }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        /// <summary>
        /// userAgent query parameter. Filter by user agent string for API request. This will filter by a complete or partial match.
        /// </summary>
        [Input("userAgent")]
        public string? UserAgent { get; set; }

        /// <summary>
        /// version query parameter. Filter by API version of the endpoint. Allowable values are: [0, 1]
        /// </summary>
        [Input("version")]
        public int? Version { get; set; }

        public GetApiRequestsOverviewResponseCodesByIntervalArgs()
        {
        }
        public static new GetApiRequestsOverviewResponseCodesByIntervalArgs Empty => new GetApiRequestsOverviewResponseCodesByIntervalArgs();
    }

    public sealed class GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("adminIds")]
        private InputList<string>? _adminIds;

        /// <summary>
        /// adminIds query parameter. Filter by admin ID of user that made the API request
        /// </summary>
        public InputList<string> AdminIds
        {
            get => _adminIds ?? (_adminIds = new InputList<string>());
            set => _adminIds = value;
        }

        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("operationIds")]
        private InputList<string>? _operationIds;

        /// <summary>
        /// operationIds query parameter. Filter by operation ID of the endpoint
        /// </summary>
        public InputList<string> OperationIds
        {
            get => _operationIds ?? (_operationIds = new InputList<string>());
            set => _operationIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("sourceIps")]
        private InputList<string>? _sourceIps;

        /// <summary>
        /// sourceIps query parameter. Filter by source IP that made the API request
        /// </summary>
        public InputList<string> SourceIps
        {
            get => _sourceIps ?? (_sourceIps = new InputList<string>());
            set => _sourceIps = value;
        }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        /// <summary>
        /// userAgent query parameter. Filter by user agent string for API request. This will filter by a complete or partial match.
        /// </summary>
        [Input("userAgent")]
        public Input<string>? UserAgent { get; set; }

        /// <summary>
        /// version query parameter. Filter by API version of the endpoint. Allowable values are: [0, 1]
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs()
        {
        }
        public static new GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs Empty => new GetApiRequestsOverviewResponseCodesByIntervalInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiRequestsOverviewResponseCodesByIntervalResult
    {
        /// <summary>
        /// adminIds query parameter. Filter by admin ID of user that made the API request
        /// </summary>
        public readonly ImmutableArray<string> AdminIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// Array of ResponseOrganizationsGetOrganizationApiRequestsOverviewResponseCodesByInterval
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiRequestsOverviewResponseCodesByIntervalItemResult> Items;
        /// <summary>
        /// operationIds query parameter. Filter by operation ID of the endpoint
        /// </summary>
        public readonly ImmutableArray<string> OperationIds;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// sourceIps query parameter. Filter by source IP that made the API request
        /// </summary>
        public readonly ImmutableArray<string> SourceIps;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated.
        /// </summary>
        public readonly double? Timespan;
        /// <summary>
        /// userAgent query parameter. Filter by user agent string for API request. This will filter by a complete or partial match.
        /// </summary>
        public readonly string? UserAgent;
        /// <summary>
        /// version query parameter. Filter by API version of the endpoint. Allowable values are: [0, 1]
        /// </summary>
        public readonly int? Version;

        [OutputConstructor]
        private GetApiRequestsOverviewResponseCodesByIntervalResult(
            ImmutableArray<string> adminIds,

            string id,

            int? interval,

            ImmutableArray<Outputs.GetApiRequestsOverviewResponseCodesByIntervalItemResult> items,

            ImmutableArray<string> operationIds,

            string organizationId,

            ImmutableArray<string> sourceIps,

            string? t0,

            string? t1,

            double? timespan,

            string? userAgent,

            int? version)
        {
            AdminIds = adminIds;
            Id = id;
            Interval = interval;
            Items = items;
            OperationIds = operationIds;
            OrganizationId = organizationId;
            SourceIps = sourceIps;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
            UserAgent = userAgent;
            Version = version;
        }
    }
}
