// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ~&gt;Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
    /// already existed previously.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Organizations.InventoryClaim("example", new()
    ///     {
    ///         OrganizationId = "string",
    ///         Parameters = new Meraki.Organizations.Inputs.InventoryClaimParametersArgs
    ///         {
    ///             Licenses = new[]
    ///             {
    ///                 new Meraki.Organizations.Inputs.InventoryClaimParametersLicenseArgs
    ///                 {
    ///                     Key = "Z2XXXXXXXXXX",
    ///                     Mode = "addDevices",
    ///                 },
    ///             },
    ///             Orders = new[]
    ///             {
    ///                 "4CXXXXXXX",
    ///             },
    ///             Serials = new[]
    ///             {
    ///                 "Q234-ABCD-5678",
    ///             },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiOrganizationsInventoryClaimExample"] = example,
    ///     };
    /// });
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/inventoryClaim:InventoryClaim")]
    public partial class InventoryClaim : global::Pulumi.CustomResource
    {
        [Output("item")]
        public Output<Outputs.InventoryClaimItem> Item { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        [Output("parameters")]
        public Output<Outputs.InventoryClaimParameters> Parameters { get; private set; } = null!;


        /// <summary>
        /// Create a InventoryClaim resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InventoryClaim(string name, InventoryClaimArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/inventoryClaim:InventoryClaim", name, args ?? new InventoryClaimArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InventoryClaim(string name, Input<string> id, InventoryClaimState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/inventoryClaim:InventoryClaim", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InventoryClaim resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InventoryClaim Get(string name, Input<string> id, InventoryClaimState? state = null, CustomResourceOptions? options = null)
        {
            return new InventoryClaim(name, id, state, options);
        }
    }

    public sealed class InventoryClaimArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("parameters", required: true)]
        public Input<Inputs.InventoryClaimParametersArgs> Parameters { get; set; } = null!;

        public InventoryClaimArgs()
        {
        }
        public static new InventoryClaimArgs Empty => new InventoryClaimArgs();
    }

    public sealed class InventoryClaimState : global::Pulumi.ResourceArgs
    {
        [Input("item")]
        public Input<Inputs.InventoryClaimItemGetArgs>? Item { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("parameters")]
        public Input<Inputs.InventoryClaimParametersGetArgs>? Parameters { get; set; }

        public InventoryClaimState()
        {
        }
        public static new InventoryClaimState Empty => new InventoryClaimState();
    }
}
