// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetApplianceTrafficShapingVpnExclusionsByNetwork
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApplianceTrafficShapingVpnExclusionsByNetwork.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         NetworkIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample"] = example.Apply(getApplianceTrafficShapingVpnExclusionsByNetworkResult =&gt; getApplianceTrafficShapingVpnExclusionsByNetworkResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> InvokeAsync(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplianceTrafficShapingVpnExclusionsByNetworkResult>("meraki:organizations/getApplianceTrafficShapingVpnExclusionsByNetwork:getApplianceTrafficShapingVpnExclusionsByNetwork", args ?? new GetApplianceTrafficShapingVpnExclusionsByNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetApplianceTrafficShapingVpnExclusionsByNetwork.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         NetworkIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample"] = example.Apply(getApplianceTrafficShapingVpnExclusionsByNetworkResult =&gt; getApplianceTrafficShapingVpnExclusionsByNetworkResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> Invoke(GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplianceTrafficShapingVpnExclusionsByNetworkResult>("meraki:organizations/getApplianceTrafficShapingVpnExclusionsByNetwork:getApplianceTrafficShapingVpnExclusionsByNetwork", args ?? new GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplianceTrafficShapingVpnExclusionsByNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        [Input("networkIds")]
        private List<string>? _networkIds;

        /// <summary>
        /// networkIds query parameter. Optional parameter to filter the results by network IDs
        /// </summary>
        public List<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new List<string>());
            set => _networkIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        public GetApplianceTrafficShapingVpnExclusionsByNetworkArgs()
        {
        }
        public static new GetApplianceTrafficShapingVpnExclusionsByNetworkArgs Empty => new GetApplianceTrafficShapingVpnExclusionsByNetworkArgs();
    }

    public sealed class GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        [Input("networkIds")]
        private InputList<string>? _networkIds;

        /// <summary>
        /// networkIds query parameter. Optional parameter to filter the results by network IDs
        /// </summary>
        public InputList<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new InputList<string>());
            set => _networkIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        public GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs()
        {
        }
        public static new GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs Empty => new GetApplianceTrafficShapingVpnExclusionsByNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplianceTrafficShapingVpnExclusionsByNetworkResult
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetApplianceTrafficShapingVpnExclusionsByNetworkItemResult Item;
        /// <summary>
        /// networkIds query parameter. Optional parameter to filter the results by network IDs
        /// </summary>
        public readonly ImmutableArray<string> NetworkIds;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;

        [OutputConstructor]
        private GetApplianceTrafficShapingVpnExclusionsByNetworkResult(
            string? endingBefore,

            string id,

            Outputs.GetApplianceTrafficShapingVpnExclusionsByNetworkItemResult item,

            ImmutableArray<string> networkIds,

            string organizationId,

            int? perPage,

            string? startingAfter)
        {
            EndingBefore = endingBefore;
            Id = id;
            Item = item;
            NetworkIds = networkIds;
            OrganizationId = organizationId;
            PerPage = perPage;
            StartingAfter = startingAfter;
        }
    }
}
