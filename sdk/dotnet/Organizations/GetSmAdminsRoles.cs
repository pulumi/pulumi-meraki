// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetSmAdminsRoles
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSmAdminsRoles.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSmAdminsRolesExample"] = example.Apply(getSmAdminsRolesResult =&gt; getSmAdminsRolesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSmAdminsRolesResult> InvokeAsync(GetSmAdminsRolesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSmAdminsRolesResult>("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", args ?? new GetSmAdminsRolesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSmAdminsRoles.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSmAdminsRolesExample"] = example.Apply(getSmAdminsRolesResult =&gt; getSmAdminsRolesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSmAdminsRolesResult> Invoke(GetSmAdminsRolesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmAdminsRolesResult>("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", args ?? new GetSmAdminsRolesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSmAdminsRoles.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSmAdminsRolesExample"] = example.Apply(getSmAdminsRolesResult =&gt; getSmAdminsRolesResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSmAdminsRolesResult> Invoke(GetSmAdminsRolesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSmAdminsRolesResult>("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", args ?? new GetSmAdminsRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSmAdminsRolesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// roleId path parameter. Role ID
        /// </summary>
        [Input("roleId")]
        public string? RoleId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        public GetSmAdminsRolesArgs()
        {
        }
        public static new GetSmAdminsRolesArgs Empty => new GetSmAdminsRolesArgs();
    }

    public sealed class GetSmAdminsRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// roleId path parameter. Role ID
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        public GetSmAdminsRolesInvokeArgs()
        {
        }
        public static new GetSmAdminsRolesInvokeArgs Empty => new GetSmAdminsRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSmAdminsRolesResult
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetSmAdminsRolesItemResult Item;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string? OrganizationId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// roleId path parameter. Role ID
        /// </summary>
        public readonly string? RoleId;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;

        [OutputConstructor]
        private GetSmAdminsRolesResult(
            string? endingBefore,

            string id,

            Outputs.GetSmAdminsRolesItemResult item,

            string? organizationId,

            int? perPage,

            string? roleId,

            string? startingAfter)
        {
            EndingBefore = endingBefore;
            Id = id;
            Item = item;
            OrganizationId = organizationId;
            PerPage = perPage;
            RoleId = roleId;
            StartingAfter = startingAfter;
        }
    }
}
