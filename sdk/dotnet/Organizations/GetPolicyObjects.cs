// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetPolicyObjects
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjects.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsExample"] = example.Apply(getPolicyObjectsResult =&gt; getPolicyObjectsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPolicyObjectsResult> InvokeAsync(GetPolicyObjectsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyObjectsResult>("meraki:organizations/getPolicyObjects:getPolicyObjects", args ?? new GetPolicyObjectsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjects.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsExample"] = example.Apply(getPolicyObjectsResult =&gt; getPolicyObjectsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyObjectsResult> Invoke(GetPolicyObjectsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyObjectsResult>("meraki:organizations/getPolicyObjects:getPolicyObjects", args ?? new GetPolicyObjectsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjects.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsExample"] = example.Apply(getPolicyObjectsResult =&gt; getPolicyObjectsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyObjectsResult> Invoke(GetPolicyObjectsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyObjectsResult>("meraki:organizations/getPolicyObjects:getPolicyObjects", args ?? new GetPolicyObjectsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyObjectsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// policyObjectId path parameter. Policy object ID
        /// </summary>
        [Input("policyObjectId")]
        public string? PolicyObjectId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        public GetPolicyObjectsArgs()
        {
        }
        public static new GetPolicyObjectsArgs Empty => new GetPolicyObjectsArgs();
    }

    public sealed class GetPolicyObjectsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// policyObjectId path parameter. Policy object ID
        /// </summary>
        [Input("policyObjectId")]
        public Input<string>? PolicyObjectId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        public GetPolicyObjectsInvokeArgs()
        {
        }
        public static new GetPolicyObjectsInvokeArgs Empty => new GetPolicyObjectsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyObjectsResult
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetPolicyObjectsItemResult Item;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string? OrganizationId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// policyObjectId path parameter. Policy object ID
        /// </summary>
        public readonly string? PolicyObjectId;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;

        [OutputConstructor]
        private GetPolicyObjectsResult(
            string? endingBefore,

            string id,

            Outputs.GetPolicyObjectsItemResult item,

            string? organizationId,

            int? perPage,

            string? policyObjectId,

            string? startingAfter)
        {
            EndingBefore = endingBefore;
            Id = id;
            Item = item;
            OrganizationId = organizationId;
            PerPage = perPage;
            PolicyObjectId = policyObjectId;
            StartingAfter = startingAfter;
        }
    }
}
