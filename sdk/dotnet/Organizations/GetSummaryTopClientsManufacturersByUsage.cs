// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetSummaryTopClientsManufacturersByUsage
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSummaryTopClientsManufacturersByUsage.Invoke(new()
        ///     {
        ///         OrganizationId = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSummaryTopClientsManufacturersByUsageExample"] = example.Apply(getSummaryTopClientsManufacturersByUsageResult =&gt; getSummaryTopClientsManufacturersByUsageResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSummaryTopClientsManufacturersByUsageResult> InvokeAsync(GetSummaryTopClientsManufacturersByUsageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSummaryTopClientsManufacturersByUsageResult>("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", args ?? new GetSummaryTopClientsManufacturersByUsageArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSummaryTopClientsManufacturersByUsage.Invoke(new()
        ///     {
        ///         OrganizationId = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSummaryTopClientsManufacturersByUsageExample"] = example.Apply(getSummaryTopClientsManufacturersByUsageResult =&gt; getSummaryTopClientsManufacturersByUsageResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSummaryTopClientsManufacturersByUsageResult> Invoke(GetSummaryTopClientsManufacturersByUsageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSummaryTopClientsManufacturersByUsageResult>("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", args ?? new GetSummaryTopClientsManufacturersByUsageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetSummaryTopClientsManufacturersByUsage.Invoke(new()
        ///     {
        ///         OrganizationId = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsSummaryTopClientsManufacturersByUsageExample"] = example.Apply(getSummaryTopClientsManufacturersByUsageResult =&gt; getSummaryTopClientsManufacturersByUsageResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSummaryTopClientsManufacturersByUsageResult> Invoke(GetSummaryTopClientsManufacturersByUsageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSummaryTopClientsManufacturersByUsageResult>("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", args ?? new GetSummaryTopClientsManufacturersByUsageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSummaryTopClientsManufacturersByUsageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        public GetSummaryTopClientsManufacturersByUsageArgs()
        {
        }
        public static new GetSummaryTopClientsManufacturersByUsageArgs Empty => new GetSummaryTopClientsManufacturersByUsageArgs();
    }

    public sealed class GetSummaryTopClientsManufacturersByUsageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        public GetSummaryTopClientsManufacturersByUsageInvokeArgs()
        {
        }
        public static new GetSummaryTopClientsManufacturersByUsageInvokeArgs Empty => new GetSummaryTopClientsManufacturersByUsageInvokeArgs();
    }


    [OutputType]
    public sealed class GetSummaryTopClientsManufacturersByUsageResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of ResponseOrganizationsGetOrganizationSummaryTopClientsManufacturersByUsage
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSummaryTopClientsManufacturersByUsageItemResult> Items;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        /// </summary>
        public readonly double? Timespan;

        [OutputConstructor]
        private GetSummaryTopClientsManufacturersByUsageResult(
            string id,

            ImmutableArray<Outputs.GetSummaryTopClientsManufacturersByUsageItemResult> items,

            string organizationId,

            string? t0,

            string? t1,

            double? timespan)
        {
            Id = id;
            Items = items;
            OrganizationId = organizationId;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
        }
    }
}
