// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetPolicyObjectsGroups
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjectsGroups.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsGroupsExample"] = example.Apply(getPolicyObjectsGroupsResult =&gt; getPolicyObjectsGroupsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPolicyObjectsGroupsResult> InvokeAsync(GetPolicyObjectsGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyObjectsGroupsResult>("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", args ?? new GetPolicyObjectsGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjectsGroups.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsGroupsExample"] = example.Apply(getPolicyObjectsGroupsResult =&gt; getPolicyObjectsGroupsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyObjectsGroupsResult> Invoke(GetPolicyObjectsGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyObjectsGroupsResult>("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", args ?? new GetPolicyObjectsGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetPolicyObjectsGroups.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         StartingAfter = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsPolicyObjectsGroupsExample"] = example.Apply(getPolicyObjectsGroupsResult =&gt; getPolicyObjectsGroupsResult.Item),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyObjectsGroupsResult> Invoke(GetPolicyObjectsGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyObjectsGroupsResult>("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", args ?? new GetPolicyObjectsGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyObjectsGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        /// <summary>
        /// policyObjectGroupId path parameter. Policy object group ID
        /// </summary>
        [Input("policyObjectGroupId")]
        public string? PolicyObjectGroupId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        public GetPolicyObjectsGroupsArgs()
        {
        }
        public static new GetPolicyObjectsGroupsArgs Empty => new GetPolicyObjectsGroupsArgs();
    }

    public sealed class GetPolicyObjectsGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        /// <summary>
        /// policyObjectGroupId path parameter. Policy object group ID
        /// </summary>
        [Input("policyObjectGroupId")]
        public Input<string>? PolicyObjectGroupId { get; set; }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        public GetPolicyObjectsGroupsInvokeArgs()
        {
        }
        public static new GetPolicyObjectsGroupsInvokeArgs Empty => new GetPolicyObjectsGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyObjectsGroupsResult
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetPolicyObjectsGroupsItemResult Item;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string? OrganizationId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 10 1000. Default is 1000.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// policyObjectGroupId path parameter. Policy object group ID
        /// </summary>
        public readonly string? PolicyObjectGroupId;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;

        [OutputConstructor]
        private GetPolicyObjectsGroupsResult(
            string? endingBefore,

            string id,

            Outputs.GetPolicyObjectsGroupsItemResult item,

            string? organizationId,

            int? perPage,

            string? policyObjectGroupId,

            string? startingAfter)
        {
            EndingBefore = endingBefore;
            Id = id;
            Item = item;
            OrganizationId = organizationId;
            PerPage = perPage;
            PolicyObjectGroupId = policyObjectGroupId;
            StartingAfter = startingAfter;
        }
    }
}
