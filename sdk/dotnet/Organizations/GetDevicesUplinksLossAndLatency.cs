// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetDevicesUplinksLossAndLatency
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetDevicesUplinksLossAndLatency.Invoke(new()
        ///     {
        ///         Ip = "string",
        ///         OrganizationId = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         Uplink = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsDevicesUplinksLossAndLatencyExample"] = example.Apply(getDevicesUplinksLossAndLatencyResult =&gt; getDevicesUplinksLossAndLatencyResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetDevicesUplinksLossAndLatencyResult> InvokeAsync(GetDevicesUplinksLossAndLatencyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDevicesUplinksLossAndLatencyResult>("meraki:organizations/getDevicesUplinksLossAndLatency:getDevicesUplinksLossAndLatency", args ?? new GetDevicesUplinksLossAndLatencyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetDevicesUplinksLossAndLatency.Invoke(new()
        ///     {
        ///         Ip = "string",
        ///         OrganizationId = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///         Uplink = "string",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsDevicesUplinksLossAndLatencyExample"] = example.Apply(getDevicesUplinksLossAndLatencyResult =&gt; getDevicesUplinksLossAndLatencyResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDevicesUplinksLossAndLatencyResult> Invoke(GetDevicesUplinksLossAndLatencyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDevicesUplinksLossAndLatencyResult>("meraki:organizations/getDevicesUplinksLossAndLatency:getDevicesUplinksLossAndLatency", args ?? new GetDevicesUplinksLossAndLatencyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDevicesUplinksLossAndLatencyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
        /// </summary>
        [Input("ip")]
        public string? Ip { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        /// <summary>
        /// uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
        /// </summary>
        [Input("uplink")]
        public string? Uplink { get; set; }

        public GetDevicesUplinksLossAndLatencyArgs()
        {
        }
        public static new GetDevicesUplinksLossAndLatencyArgs Empty => new GetDevicesUplinksLossAndLatencyArgs();
    }

    public sealed class GetDevicesUplinksLossAndLatencyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        /// <summary>
        /// uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
        /// </summary>
        [Input("uplink")]
        public Input<string>? Uplink { get; set; }

        public GetDevicesUplinksLossAndLatencyInvokeArgs()
        {
        }
        public static new GetDevicesUplinksLossAndLatencyInvokeArgs Empty => new GetDevicesUplinksLossAndLatencyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDevicesUplinksLossAndLatencyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// Array of ResponseOrganizationsGetOrganizationDevicesUplinksLossAndLatency
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevicesUplinksLossAndLatencyItemResult> Items;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
        /// </summary>
        public readonly double? Timespan;
        /// <summary>
        /// uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
        /// </summary>
        public readonly string? Uplink;

        [OutputConstructor]
        private GetDevicesUplinksLossAndLatencyResult(
            string id,

            string? ip,

            ImmutableArray<Outputs.GetDevicesUplinksLossAndLatencyItemResult> items,

            string organizationId,

            string? t0,

            string? t1,

            double? timespan,

            string? uplink)
        {
            Id = id;
            Ip = ip;
            Items = items;
            OrganizationId = organizationId;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
            Uplink = uplink;
        }
    }
}
