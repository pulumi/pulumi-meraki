// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetWirelessDevicesChannelUtilizationHistoryByDeviceByInterval
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetWirelessDevicesChannelUtilizationHistoryByDeviceByInterval.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         Interval = 1,
        ///         NetworkIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         Serials = new[]
        ///         {
        ///             "string",
        ///         },
        ///         StartingAfter = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample"] = example.Apply(getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult =&gt; getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> InvokeAsync(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult>("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", args ?? new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetWirelessDevicesChannelUtilizationHistoryByDeviceByInterval.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         Interval = 1,
        ///         NetworkIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         Serials = new[]
        ///         {
        ///             "string",
        ///         },
        ///         StartingAfter = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample"] = example.Apply(getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult =&gt; getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> Invoke(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult>("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", args ?? new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Meraki = Pulumi.Meraki;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Meraki.Organizations.GetWirelessDevicesChannelUtilizationHistoryByDeviceByInterval.Invoke(new()
        ///     {
        ///         EndingBefore = "string",
        ///         Interval = 1,
        ///         NetworkIds = new[]
        ///         {
        ///             "string",
        ///         },
        ///         OrganizationId = "string",
        ///         PerPage = 1,
        ///         Serials = new[]
        ///         {
        ///             "string",
        ///         },
        ///         StartingAfter = "string",
        ///         T0 = "string",
        ///         T1 = "string",
        ///         Timespan = 1,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample"] = example.Apply(getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult =&gt; getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.Items),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> Invoke(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult>("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", args ?? new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public string? EndingBefore { get; set; }

        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
        /// </summary>
        [Input("interval")]
        public int? Interval { get; set; }

        [Input("networkIds")]
        private List<string>? _networkIds;

        /// <summary>
        /// networkIds query parameter. Filter results by network.
        /// </summary>
        public List<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new List<string>());
            set => _networkIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public int? PerPage { get; set; }

        [Input("serials")]
        private List<string>? _serials;

        /// <summary>
        /// serials query parameter. Filter results by device.
        /// </summary>
        public List<string> Serials
        {
            get => _serials ?? (_serials = new List<string>());
            set => _serials = value;
        }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public string? StartingAfter { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public string? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public string? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        [Input("timespan")]
        public double? Timespan { get; set; }

        public GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs()
        {
        }
        public static new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs Empty => new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs();
    }

    public sealed class GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("endingBefore")]
        public Input<string>? EndingBefore { get; set; }

        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("networkIds")]
        private InputList<string>? _networkIds;

        /// <summary>
        /// networkIds query parameter. Filter results by network.
        /// </summary>
        public InputList<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new InputList<string>());
            set => _networkIds = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        [Input("perPage")]
        public Input<int>? PerPage { get; set; }

        [Input("serials")]
        private InputList<string>? _serials;

        /// <summary>
        /// serials query parameter. Filter results by device.
        /// </summary>
        public InputList<string> Serials
        {
            get => _serials ?? (_serials = new InputList<string>());
            set => _serials = value;
        }

        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        [Input("startingAfter")]
        public Input<string>? StartingAfter { get; set; }

        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        [Input("t0")]
        public Input<string>? T0 { get; set; }

        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        [Input("t1")]
        public Input<string>? T1 { get; set; }

        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        [Input("timespan")]
        public Input<double>? Timespan { get; set; }

        public GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs()
        {
        }
        public static new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs Empty => new GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalInvokeArgs();
    }


    [OutputType]
    public sealed class GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult
    {
        /// <summary>
        /// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? EndingBefore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// Array of ResponseWirelessGetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemResult> Items;
        /// <summary>
        /// networkIds query parameter. Filter results by network.
        /// </summary>
        public readonly ImmutableArray<string> NetworkIds;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
        /// </summary>
        public readonly int? PerPage;
        /// <summary>
        /// serials query parameter. Filter results by device.
        /// </summary>
        public readonly ImmutableArray<string> Serials;
        /// <summary>
        /// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        /// </summary>
        public readonly string? StartingAfter;
        /// <summary>
        /// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        /// </summary>
        public readonly string? T0;
        /// <summary>
        /// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        /// </summary>
        public readonly string? T1;
        /// <summary>
        /// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        /// </summary>
        public readonly double? Timespan;

        [OutputConstructor]
        private GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult(
            string? endingBefore,

            string id,

            int? interval,

            ImmutableArray<Outputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemResult> items,

            ImmutableArray<string> networkIds,

            string organizationId,

            int? perPage,

            ImmutableArray<string> serials,

            string? startingAfter,

            string? t0,

            string? t1,

            double? timespan)
        {
            EndingBefore = endingBefore;
            Id = id;
            Interval = interval;
            Items = items;
            NetworkIds = networkIds;
            OrganizationId = organizationId;
            PerPage = perPage;
            Serials = serials;
            StartingAfter = startingAfter;
            T0 = t0;
            T1 = t1;
            Timespan = timespan;
        }
    }
}
