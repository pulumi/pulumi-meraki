// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Organizations.AdaptivePolicyPolicies("example", new()
    ///     {
    ///         Acls = new[]
    ///         {
    ///             new Meraki.Organizations.Inputs.AdaptivePolicyPoliciesAclArgs
    ///             {
    ///                 Id = "444",
    ///                 Name = "Block web",
    ///             },
    ///         },
    ///         DestinationGroup = new Meraki.Organizations.Inputs.AdaptivePolicyPoliciesDestinationGroupArgs
    ///         {
    ///             Id = "333",
    ///             Name = "IoT Servers",
    ///             Sgt = 51,
    ///         },
    ///         LastEntryRule = "allow",
    ///         OrganizationId = "string",
    ///         SourceGroup = new Meraki.Organizations.Inputs.AdaptivePolicyPoliciesSourceGroupArgs
    ///         {
    ///             Id = "222",
    ///             Name = "IoT Devices",
    ///             Sgt = 50,
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiOrganizationsAdaptivePolicyPoliciesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/adaptivePolicyPolicies:AdaptivePolicyPolicies example "id,organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/adaptivePolicyPolicies:AdaptivePolicyPolicies")]
    public partial class AdaptivePolicyPolicies : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<Outputs.AdaptivePolicyPoliciesAcl>> Acls { get; private set; } = null!;

        [Output("adaptivePolicyId")]
        public Output<string> AdaptivePolicyId { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The destination adaptive policy group (requires one unique attribute)
        /// </summary>
        [Output("destinationGroup")]
        public Output<Outputs.AdaptivePolicyPoliciesDestinationGroup> DestinationGroup { get; private set; } = null!;

        /// <summary>
        /// The rule to apply if there is no matching ACL (default: "default")
        /// </summary>
        [Output("lastEntryRule")]
        public Output<string> LastEntryRule { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The source adaptive policy group (requires one unique attribute)
        /// </summary>
        [Output("sourceGroup")]
        public Output<Outputs.AdaptivePolicyPoliciesSourceGroup> SourceGroup { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AdaptivePolicyPolicies resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AdaptivePolicyPolicies(string name, AdaptivePolicyPoliciesArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/adaptivePolicyPolicies:AdaptivePolicyPolicies", name, args ?? new AdaptivePolicyPoliciesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AdaptivePolicyPolicies(string name, Input<string> id, AdaptivePolicyPoliciesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/adaptivePolicyPolicies:AdaptivePolicyPolicies", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AdaptivePolicyPolicies resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AdaptivePolicyPolicies Get(string name, Input<string> id, AdaptivePolicyPoliciesState? state = null, CustomResourceOptions? options = null)
        {
            return new AdaptivePolicyPolicies(name, id, state, options);
        }
    }

    public sealed class AdaptivePolicyPoliciesArgs : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<Inputs.AdaptivePolicyPoliciesAclArgs>? _acls;

        /// <summary>
        /// An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
        /// </summary>
        public InputList<Inputs.AdaptivePolicyPoliciesAclArgs> Acls
        {
            get => _acls ?? (_acls = new InputList<Inputs.AdaptivePolicyPoliciesAclArgs>());
            set => _acls = value;
        }

        /// <summary>
        /// The destination adaptive policy group (requires one unique attribute)
        /// </summary>
        [Input("destinationGroup")]
        public Input<Inputs.AdaptivePolicyPoliciesDestinationGroupArgs>? DestinationGroup { get; set; }

        /// <summary>
        /// The rule to apply if there is no matching ACL (default: "default")
        /// </summary>
        [Input("lastEntryRule")]
        public Input<string>? LastEntryRule { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The source adaptive policy group (requires one unique attribute)
        /// </summary>
        [Input("sourceGroup")]
        public Input<Inputs.AdaptivePolicyPoliciesSourceGroupArgs>? SourceGroup { get; set; }

        public AdaptivePolicyPoliciesArgs()
        {
        }
        public static new AdaptivePolicyPoliciesArgs Empty => new AdaptivePolicyPoliciesArgs();
    }

    public sealed class AdaptivePolicyPoliciesState : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<Inputs.AdaptivePolicyPoliciesAclGetArgs>? _acls;

        /// <summary>
        /// An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
        /// </summary>
        public InputList<Inputs.AdaptivePolicyPoliciesAclGetArgs> Acls
        {
            get => _acls ?? (_acls = new InputList<Inputs.AdaptivePolicyPoliciesAclGetArgs>());
            set => _acls = value;
        }

        [Input("adaptivePolicyId")]
        public Input<string>? AdaptivePolicyId { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The destination adaptive policy group (requires one unique attribute)
        /// </summary>
        [Input("destinationGroup")]
        public Input<Inputs.AdaptivePolicyPoliciesDestinationGroupGetArgs>? DestinationGroup { get; set; }

        /// <summary>
        /// The rule to apply if there is no matching ACL (default: "default")
        /// </summary>
        [Input("lastEntryRule")]
        public Input<string>? LastEntryRule { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The source adaptive policy group (requires one unique attribute)
        /// </summary>
        [Input("sourceGroup")]
        public Input<Inputs.AdaptivePolicyPoliciesSourceGroupGetArgs>? SourceGroup { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AdaptivePolicyPoliciesState()
        {
        }
        public static new AdaptivePolicyPoliciesState Empty => new AdaptivePolicyPoliciesState();
    }
}
