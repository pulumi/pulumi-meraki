// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Organizations.ConfigTemplates("example", new()
    ///     {
    ///         Name = "My config template",
    ///         OrganizationId = "string",
    ///         TimeZone = "America/Los_Angeles",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiOrganizationsConfigTemplatesExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/configTemplates:ConfigTemplates example "config_template_id,organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/configTemplates:ConfigTemplates")]
    public partial class ConfigTemplates : global::Pulumi.CustomResource
    {
        /// <summary>
        /// configTemplateId path parameter. Config template ID
        /// </summary>
        [Output("configTemplateId")]
        public Output<string?> ConfigTemplateId { get; private set; } = null!;

        /// <summary>
        /// The name of the configuration template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The product types of the configuration template
        /// </summary>
        [Output("productTypes")]
        public Output<ImmutableArray<string>> ProductTypes { get; private set; } = null!;

        /// <summary>
        /// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigTemplates resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigTemplates(string name, ConfigTemplatesArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/configTemplates:ConfigTemplates", name, args ?? new ConfigTemplatesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigTemplates(string name, Input<string> id, ConfigTemplatesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/configTemplates:ConfigTemplates", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigTemplates resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigTemplates Get(string name, Input<string> id, ConfigTemplatesState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigTemplates(name, id, state, options);
        }
    }

    public sealed class ConfigTemplatesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// configTemplateId path parameter. Config template ID
        /// </summary>
        [Input("configTemplateId")]
        public Input<string>? ConfigTemplateId { get; set; }

        /// <summary>
        /// The name of the configuration template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public ConfigTemplatesArgs()
        {
        }
        public static new ConfigTemplatesArgs Empty => new ConfigTemplatesArgs();
    }

    public sealed class ConfigTemplatesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// configTemplateId path parameter. Config template ID
        /// </summary>
        [Input("configTemplateId")]
        public Input<string>? ConfigTemplateId { get; set; }

        /// <summary>
        /// The name of the configuration template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("productTypes")]
        private InputList<string>? _productTypes;

        /// <summary>
        /// The product types of the configuration template
        /// </summary>
        public InputList<string> ProductTypes
        {
            get => _productTypes ?? (_productTypes = new InputList<string>());
            set => _productTypes = value;
        }

        /// <summary>
        /// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public ConfigTemplatesState()
        {
        }
        public static new ConfigTemplatesState Empty => new ConfigTemplatesState();
    }
}
