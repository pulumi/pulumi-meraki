// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/applianceVpnThirdPartyVpnpeers:ApplianceVpnThirdPartyVpnpeers example "organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/applianceVpnThirdPartyVpnpeers:ApplianceVpnThirdPartyVpnpeers")]
    public partial class ApplianceVpnThirdPartyVpnpeers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The list of VPN peers
        /// </summary>
        [Output("peers")]
        public Output<ImmutableArray<Outputs.ApplianceVpnThirdPartyVpnpeersPeer>> Peers { get; private set; } = null!;

        /// <summary>
        /// The list of VPN peers
        /// </summary>
        [Output("peersResponses")]
        public Output<ImmutableArray<Outputs.ApplianceVpnThirdPartyVpnpeersPeersResponse>> PeersResponses { get; private set; } = null!;


        /// <summary>
        /// Create a ApplianceVpnThirdPartyVpnpeers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplianceVpnThirdPartyVpnpeers(string name, ApplianceVpnThirdPartyVpnpeersArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/applianceVpnThirdPartyVpnpeers:ApplianceVpnThirdPartyVpnpeers", name, args ?? new ApplianceVpnThirdPartyVpnpeersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplianceVpnThirdPartyVpnpeers(string name, Input<string> id, ApplianceVpnThirdPartyVpnpeersState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/applianceVpnThirdPartyVpnpeers:ApplianceVpnThirdPartyVpnpeers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplianceVpnThirdPartyVpnpeers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplianceVpnThirdPartyVpnpeers Get(string name, Input<string> id, ApplianceVpnThirdPartyVpnpeersState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplianceVpnThirdPartyVpnpeers(name, id, state, options);
        }
    }

    public sealed class ApplianceVpnThirdPartyVpnpeersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("peers")]
        private InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerArgs>? _peers;

        /// <summary>
        /// The list of VPN peers
        /// </summary>
        public InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerArgs>());
            set => _peers = value;
        }

        public ApplianceVpnThirdPartyVpnpeersArgs()
        {
        }
        public static new ApplianceVpnThirdPartyVpnpeersArgs Empty => new ApplianceVpnThirdPartyVpnpeersArgs();
    }

    public sealed class ApplianceVpnThirdPartyVpnpeersState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("peers")]
        private InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerGetArgs>? _peers;

        /// <summary>
        /// The list of VPN peers
        /// </summary>
        public InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerGetArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeerGetArgs>());
            set => _peers = value;
        }

        [Input("peersResponses")]
        private InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeersResponseGetArgs>? _peersResponses;

        /// <summary>
        /// The list of VPN peers
        /// </summary>
        public InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeersResponseGetArgs> PeersResponses
        {
            get => _peersResponses ?? (_peersResponses = new InputList<Inputs.ApplianceVpnThirdPartyVpnpeersPeersResponseGetArgs>());
            set => _peersResponses = value;
        }

        public ApplianceVpnThirdPartyVpnpeersState()
        {
        }
        public static new ApplianceVpnThirdPartyVpnpeersState Empty => new ApplianceVpnThirdPartyVpnpeersState();
    }
}
