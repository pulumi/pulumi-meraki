// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Outputs
{

    [OutputType]
    public sealed class LicensingCotermLicensesMoveItem
    {
        /// <summary>
        /// Newly moved licenses created in the destination organization of the license move operation
        /// </summary>
        public readonly ImmutableArray<Outputs.LicensingCotermLicensesMoveItemMovedLicense> MovedLicenses;
        /// <summary>
        /// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
        /// </summary>
        public readonly ImmutableArray<Outputs.LicensingCotermLicensesMoveItemRemainderLicense> RemainderLicenses;

        [OutputConstructor]
        private LicensingCotermLicensesMoveItem(
            ImmutableArray<Outputs.LicensingCotermLicensesMoveItemMovedLicense> movedLicenses,

            ImmutableArray<Outputs.LicensingCotermLicensesMoveItemRemainderLicense> remainderLicenses)
        {
            MovedLicenses = movedLicenses;
            RemainderLicenses = remainderLicenses;
        }
    }
}
