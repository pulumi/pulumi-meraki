// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Outputs
{

    [OutputType]
    public sealed class AlertsProfilesAlertCondition
    {
        /// <summary>
        /// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
        /// </summary>
        public readonly int? BitRateBps;
        /// <summary>
        /// The total duration in seconds that the threshold should be crossed before alerting
        /// </summary>
        public readonly int? Duration;
        /// <summary>
        /// The uplink observed for the alert
        /// </summary>
        public readonly string? Interface;
        /// <summary>
        /// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
        /// </summary>
        public readonly int? JitterMs;
        /// <summary>
        /// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
        /// </summary>
        public readonly int? LatencyMs;
        /// <summary>
        /// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
        /// </summary>
        public readonly double? LossRatio;
        /// <summary>
        /// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
        /// </summary>
        public readonly double? Mos;
        /// <summary>
        /// The look back period in seconds for sensing the alert
        /// </summary>
        public readonly int? Window;

        [OutputConstructor]
        private AlertsProfilesAlertCondition(
            int? bitRateBps,

            int? duration,

            string? @interface,

            int? jitterMs,

            int? latencyMs,

            double? lossRatio,

            double? mos,

            int? window)
        {
            BitRateBps = bitRateBps;
            Duration = duration;
            Interface = @interface;
            JitterMs = jitterMs;
            LatencyMs = latencyMs;
            LossRatio = lossRatio;
            Mos = mos;
            Window = window;
        }
    }
}
