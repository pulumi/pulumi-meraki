// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Outputs
{

    [OutputType]
    public sealed class LicensingCotermLicensesMoveParameters
    {
        /// <summary>
        /// Destination data for the license move
        /// </summary>
        public readonly Outputs.LicensingCotermLicensesMoveParametersDestination? Destination;
        /// <summary>
        /// The list of licenses to move
        /// </summary>
        public readonly ImmutableArray<Outputs.LicensingCotermLicensesMoveParametersLicense> Licenses;

        [OutputConstructor]
        private LicensingCotermLicensesMoveParameters(
            Outputs.LicensingCotermLicensesMoveParametersDestination? destination,

            ImmutableArray<Outputs.LicensingCotermLicensesMoveParametersLicense> licenses)
        {
            Destination = destination;
            Licenses = licenses;
        }
    }
}
