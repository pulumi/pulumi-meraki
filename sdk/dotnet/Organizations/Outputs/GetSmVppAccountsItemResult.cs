// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Outputs
{

    [OutputType]
    public sealed class GetSmVppAccountsItemResult
    {
        /// <summary>
        /// The allowed admins for the VPP account
        /// </summary>
        public readonly string AllowedAdmins;
        /// <summary>
        /// The network IDs of the assignable networks for the VPP account
        /// </summary>
        public readonly ImmutableArray<string> AssignableNetworkIds;
        /// <summary>
        /// The assignable networks for the VPP account
        /// </summary>
        public readonly string AssignableNetworks;
        /// <summary>
        /// The VPP service token
        /// </summary>
        public readonly string ContentToken;
        /// <summary>
        /// The email address associated with the VPP account
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// The id of the VPP Account
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last time the VPP account was force synced
        /// </summary>
        public readonly string LastForceSyncedAt;
        /// <summary>
        /// The last time the VPP account was synced
        /// </summary>
        public readonly string LastSyncedAt;
        /// <summary>
        /// The name of the VPP account
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The network IDs of the admins for the VPP account
        /// </summary>
        public readonly string NetworkIdAdmins;
        /// <summary>
        /// The parsed VPP service token
        /// </summary>
        public readonly Outputs.GetSmVppAccountsItemParsedTokenResult ParsedToken;
        /// <summary>
        /// The id of the VPP Account
        /// </summary>
        public readonly string VppAccountId;
        /// <summary>
        /// The VPP location ID
        /// </summary>
        public readonly string VppLocationId;
        /// <summary>
        /// The VPP location name
        /// </summary>
        public readonly string VppLocationName;
        /// <summary>
        /// The VPP Account's Service Token
        /// </summary>
        public readonly string VppServiceToken;

        [OutputConstructor]
        private GetSmVppAccountsItemResult(
            string allowedAdmins,

            ImmutableArray<string> assignableNetworkIds,

            string assignableNetworks,

            string contentToken,

            string email,

            string id,

            string lastForceSyncedAt,

            string lastSyncedAt,

            string name,

            string networkIdAdmins,

            Outputs.GetSmVppAccountsItemParsedTokenResult parsedToken,

            string vppAccountId,

            string vppLocationId,

            string vppLocationName,

            string vppServiceToken)
        {
            AllowedAdmins = allowedAdmins;
            AssignableNetworkIds = assignableNetworkIds;
            AssignableNetworks = assignableNetworks;
            ContentToken = contentToken;
            Email = email;
            Id = id;
            LastForceSyncedAt = lastForceSyncedAt;
            LastSyncedAt = lastSyncedAt;
            Name = name;
            NetworkIdAdmins = networkIdAdmins;
            ParsedToken = parsedToken;
            VppAccountId = vppAccountId;
            VppLocationId = vppLocationId;
            VppLocationName = vppLocationName;
            VppServiceToken = vppServiceToken;
        }
    }
}
