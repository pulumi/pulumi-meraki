// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Outputs
{

    [OutputType]
    public sealed class GetAdminsItemResult
    {
        /// <summary>
        /// Status of the admin's account
        /// </summary>
        public readonly string AccountStatus;
        /// <summary>
        /// Admin's authentication method
        /// </summary>
        public readonly string AuthenticationMethod;
        /// <summary>
        /// Admin's email address
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Indicates whether the admin has an API key
        /// </summary>
        public readonly bool HasApiKey;
        /// <summary>
        /// Admin's ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Time when the admin was last active
        /// </summary>
        public readonly string LastActive;
        /// <summary>
        /// Admin's username
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Admin network access information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdminsItemNetworkResult> Networks;
        /// <summary>
        /// Admin's level of access to the organization
        /// </summary>
        public readonly string OrgAccess;
        /// <summary>
        /// Admin tag information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdminsItemTagResult> Tags;
        /// <summary>
        /// Indicates whether two-factor authentication is enabled
        /// </summary>
        public readonly bool TwoFactorAuthEnabled;

        [OutputConstructor]
        private GetAdminsItemResult(
            string accountStatus,

            string authenticationMethod,

            string email,

            bool hasApiKey,

            string id,

            string lastActive,

            string name,

            ImmutableArray<Outputs.GetAdminsItemNetworkResult> networks,

            string orgAccess,

            ImmutableArray<Outputs.GetAdminsItemTagResult> tags,

            bool twoFactorAuthEnabled)
        {
            AccountStatus = accountStatus;
            AuthenticationMethod = authenticationMethod;
            Email = email;
            HasApiKey = hasApiKey;
            Id = id;
            LastActive = lastActive;
            Name = name;
            Networks = networks;
            OrgAccess = orgAccess;
            Tags = tags;
            TwoFactorAuthEnabled = twoFactorAuthEnabled;
        }
    }
}
