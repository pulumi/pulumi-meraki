// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/alertsProfiles:AlertsProfiles example "organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/alertsProfiles:AlertsProfiles")]
    public partial class AlertsProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The conditions that determine if the alert triggers
        /// </summary>
        [Output("alertCondition")]
        public Output<Outputs.AlertsProfilesAlertCondition> AlertCondition { get; private set; } = null!;

        /// <summary>
        /// alertConfigId path parameter. Alert config ID
        /// </summary>
        [Output("alertConfigId")]
        public Output<string> AlertConfigId { get; private set; } = null!;

        /// <summary>
        /// User supplied description of the alert
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Is the alert config enabled
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Networks with these tags will be monitored for the alert
        /// </summary>
        [Output("networkTags")]
        public Output<ImmutableArray<string>> NetworkTags { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// List of recipients that will recieve the alert.
        /// </summary>
        [Output("recipients")]
        public Output<Outputs.AlertsProfilesRecipients> Recipients { get; private set; } = null!;

        /// <summary>
        /// The alert type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AlertsProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertsProfiles(string name, AlertsProfilesArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/alertsProfiles:AlertsProfiles", name, args ?? new AlertsProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertsProfiles(string name, Input<string> id, AlertsProfilesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/alertsProfiles:AlertsProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertsProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertsProfiles Get(string name, Input<string> id, AlertsProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertsProfiles(name, id, state, options);
        }
    }

    public sealed class AlertsProfilesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The conditions that determine if the alert triggers
        /// </summary>
        [Input("alertCondition")]
        public Input<Inputs.AlertsProfilesAlertConditionArgs>? AlertCondition { get; set; }

        /// <summary>
        /// alertConfigId path parameter. Alert config ID
        /// </summary>
        [Input("alertConfigId")]
        public Input<string>? AlertConfigId { get; set; }

        /// <summary>
        /// User supplied description of the alert
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Is the alert config enabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("networkTags")]
        private InputList<string>? _networkTags;

        /// <summary>
        /// Networks with these tags will be monitored for the alert
        /// </summary>
        public InputList<string> NetworkTags
        {
            get => _networkTags ?? (_networkTags = new InputList<string>());
            set => _networkTags = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// List of recipients that will recieve the alert.
        /// </summary>
        [Input("recipients")]
        public Input<Inputs.AlertsProfilesRecipientsArgs>? Recipients { get; set; }

        /// <summary>
        /// The alert type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AlertsProfilesArgs()
        {
        }
        public static new AlertsProfilesArgs Empty => new AlertsProfilesArgs();
    }

    public sealed class AlertsProfilesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The conditions that determine if the alert triggers
        /// </summary>
        [Input("alertCondition")]
        public Input<Inputs.AlertsProfilesAlertConditionGetArgs>? AlertCondition { get; set; }

        /// <summary>
        /// alertConfigId path parameter. Alert config ID
        /// </summary>
        [Input("alertConfigId")]
        public Input<string>? AlertConfigId { get; set; }

        /// <summary>
        /// User supplied description of the alert
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Is the alert config enabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("networkTags")]
        private InputList<string>? _networkTags;

        /// <summary>
        /// Networks with these tags will be monitored for the alert
        /// </summary>
        public InputList<string> NetworkTags
        {
            get => _networkTags ?? (_networkTags = new InputList<string>());
            set => _networkTags = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// List of recipients that will recieve the alert.
        /// </summary>
        [Input("recipients")]
        public Input<Inputs.AlertsProfilesRecipientsGetArgs>? Recipients { get; set; }

        /// <summary>
        /// The alert type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AlertsProfilesState()
        {
        }
        public static new AlertsProfilesState Empty => new AlertsProfilesState();
    }
}
