// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    public static class GetInsightMonitoredMediaServers
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetInsightMonitoredMediaServersResult> InvokeAsync(GetInsightMonitoredMediaServersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInsightMonitoredMediaServersResult>("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", args ?? new GetInsightMonitoredMediaServersArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetInsightMonitoredMediaServersResult> Invoke(GetInsightMonitoredMediaServersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInsightMonitoredMediaServersResult>("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", args ?? new GetInsightMonitoredMediaServersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetInsightMonitoredMediaServersResult> Invoke(GetInsightMonitoredMediaServersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInsightMonitoredMediaServersResult>("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", args ?? new GetInsightMonitoredMediaServersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInsightMonitoredMediaServersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// monitoredMediaServerId path parameter. Monitored media server ID
        /// </summary>
        [Input("monitoredMediaServerId")]
        public string? MonitoredMediaServerId { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        public GetInsightMonitoredMediaServersArgs()
        {
        }
        public static new GetInsightMonitoredMediaServersArgs Empty => new GetInsightMonitoredMediaServersArgs();
    }

    public sealed class GetInsightMonitoredMediaServersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// monitoredMediaServerId path parameter. Monitored media server ID
        /// </summary>
        [Input("monitoredMediaServerId")]
        public Input<string>? MonitoredMediaServerId { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public GetInsightMonitoredMediaServersInvokeArgs()
        {
        }
        public static new GetInsightMonitoredMediaServersInvokeArgs Empty => new GetInsightMonitoredMediaServersInvokeArgs();
    }


    [OutputType]
    public sealed class GetInsightMonitoredMediaServersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetInsightMonitoredMediaServersItemResult Item;
        /// <summary>
        /// Array of ResponseInsightGetOrganizationInsightMonitoredMediaServers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInsightMonitoredMediaServersItemResult> Items;
        /// <summary>
        /// monitoredMediaServerId path parameter. Monitored media server ID
        /// </summary>
        public readonly string? MonitoredMediaServerId;
        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        public readonly string? OrganizationId;

        [OutputConstructor]
        private GetInsightMonitoredMediaServersResult(
            string id,

            Outputs.GetInsightMonitoredMediaServersItemResult item,

            ImmutableArray<Outputs.GetInsightMonitoredMediaServersItemResult> items,

            string? monitoredMediaServerId,

            string? organizationId)
        {
            Id = id;
            Item = item;
            Items = items;
            MonitoredMediaServerId = monitoredMediaServerId;
            OrganizationId = organizationId;
        }
    }
}
