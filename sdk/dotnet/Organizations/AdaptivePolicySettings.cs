// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Meraki = Pulumi.Meraki;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Meraki.Organizations.AdaptivePolicySettings("example", new()
    ///     {
    ///         EnabledNetworks = new[]
    ///         {
    ///             "L_11111111",
    ///             "L_22222222",
    ///             "N_33333333",
    ///             "L_44444444",
    ///         },
    ///         OrganizationId = "string",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["merakiOrganizationsAdaptivePolicySettingsExample"] = example,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/adaptivePolicySettings:AdaptivePolicySettings example "organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/adaptivePolicySettings:AdaptivePolicySettings")]
    public partial class AdaptivePolicySettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of network IDs with adaptive policy enabled
        /// </summary>
        [Output("enabledNetworks")]
        public Output<ImmutableArray<string>> EnabledNetworks { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;


        /// <summary>
        /// Create a AdaptivePolicySettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AdaptivePolicySettings(string name, AdaptivePolicySettingsArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/adaptivePolicySettings:AdaptivePolicySettings", name, args ?? new AdaptivePolicySettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AdaptivePolicySettings(string name, Input<string> id, AdaptivePolicySettingsState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/adaptivePolicySettings:AdaptivePolicySettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AdaptivePolicySettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AdaptivePolicySettings Get(string name, Input<string> id, AdaptivePolicySettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new AdaptivePolicySettings(name, id, state, options);
        }
    }

    public sealed class AdaptivePolicySettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("enabledNetworks")]
        private InputList<string>? _enabledNetworks;

        /// <summary>
        /// List of network IDs with adaptive policy enabled
        /// </summary>
        public InputList<string> EnabledNetworks
        {
            get => _enabledNetworks ?? (_enabledNetworks = new InputList<string>());
            set => _enabledNetworks = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public AdaptivePolicySettingsArgs()
        {
        }
        public static new AdaptivePolicySettingsArgs Empty => new AdaptivePolicySettingsArgs();
    }

    public sealed class AdaptivePolicySettingsState : global::Pulumi.ResourceArgs
    {
        [Input("enabledNetworks")]
        private InputList<string>? _enabledNetworks;

        /// <summary>
        /// List of network IDs with adaptive policy enabled
        /// </summary>
        public InputList<string> EnabledNetworks
        {
            get => _enabledNetworks ?? (_enabledNetworks = new InputList<string>());
            set => _enabledNetworks = value;
        }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public AdaptivePolicySettingsState()
        {
        }
        public static new AdaptivePolicySettingsState Empty => new AdaptivePolicySettingsState();
    }
}
