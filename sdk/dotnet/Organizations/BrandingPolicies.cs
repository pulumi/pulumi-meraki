// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import meraki:organizations/brandingPolicies:BrandingPolicies example "branding_policy_id,organization_id"
    /// ```
    /// </summary>
    [MerakiResourceType("meraki:organizations/brandingPolicies:BrandingPolicies")]
    public partial class BrandingPolicies : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Settings for describing which kinds of admins this policy applies to.
        /// </summary>
        [Output("adminSettings")]
        public Output<Outputs.BrandingPoliciesAdminSettings> AdminSettings { get; private set; } = null!;

        /// <summary>
        /// brandingPolicyId path parameter. Branding policy ID
        /// </summary>
        [Output("brandingPolicyId")]
        public Output<string?> BrandingPolicyId { get; private set; } = null!;

        /// <summary>
        /// Properties describing the custom logo attached to the branding policy.
        /// </summary>
        [Output("customLogo")]
        public Output<Outputs.BrandingPoliciesCustomLogo> CustomLogo { get; private set; } = null!;

        /// <summary>
        /// Boolean indicating whether this policy is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
        ///   'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
        ///   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
        ///   Dashboard; see the documentation for each property to see the allowed values.
        /// </summary>
        [Output("helpSettings")]
        public Output<Outputs.BrandingPoliciesHelpSettings> HelpSettings { get; private set; } = null!;

        /// <summary>
        /// Name of the Dashboard branding policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;


        /// <summary>
        /// Create a BrandingPolicies resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BrandingPolicies(string name, BrandingPoliciesArgs args, CustomResourceOptions? options = null)
            : base("meraki:organizations/brandingPolicies:BrandingPolicies", name, args ?? new BrandingPoliciesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BrandingPolicies(string name, Input<string> id, BrandingPoliciesState? state = null, CustomResourceOptions? options = null)
            : base("meraki:organizations/brandingPolicies:BrandingPolicies", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-meraki",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BrandingPolicies resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BrandingPolicies Get(string name, Input<string> id, BrandingPoliciesState? state = null, CustomResourceOptions? options = null)
        {
            return new BrandingPolicies(name, id, state, options);
        }
    }

    public sealed class BrandingPoliciesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings for describing which kinds of admins this policy applies to.
        /// </summary>
        [Input("adminSettings")]
        public Input<Inputs.BrandingPoliciesAdminSettingsArgs>? AdminSettings { get; set; }

        /// <summary>
        /// brandingPolicyId path parameter. Branding policy ID
        /// </summary>
        [Input("brandingPolicyId")]
        public Input<string>? BrandingPolicyId { get; set; }

        /// <summary>
        /// Properties describing the custom logo attached to the branding policy.
        /// </summary>
        [Input("customLogo")]
        public Input<Inputs.BrandingPoliciesCustomLogoArgs>? CustomLogo { get; set; }

        /// <summary>
        /// Boolean indicating whether this policy is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
        ///   'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
        ///   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
        ///   Dashboard; see the documentation for each property to see the allowed values.
        /// </summary>
        [Input("helpSettings")]
        public Input<Inputs.BrandingPoliciesHelpSettingsArgs>? HelpSettings { get; set; }

        /// <summary>
        /// Name of the Dashboard branding policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public BrandingPoliciesArgs()
        {
        }
        public static new BrandingPoliciesArgs Empty => new BrandingPoliciesArgs();
    }

    public sealed class BrandingPoliciesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings for describing which kinds of admins this policy applies to.
        /// </summary>
        [Input("adminSettings")]
        public Input<Inputs.BrandingPoliciesAdminSettingsGetArgs>? AdminSettings { get; set; }

        /// <summary>
        /// brandingPolicyId path parameter. Branding policy ID
        /// </summary>
        [Input("brandingPolicyId")]
        public Input<string>? BrandingPolicyId { get; set; }

        /// <summary>
        /// Properties describing the custom logo attached to the branding policy.
        /// </summary>
        [Input("customLogo")]
        public Input<Inputs.BrandingPoliciesCustomLogoGetArgs>? CustomLogo { get; set; }

        /// <summary>
        /// Boolean indicating whether this policy is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
        ///   'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
        ///   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
        ///   Dashboard; see the documentation for each property to see the allowed values.
        /// </summary>
        [Input("helpSettings")]
        public Input<Inputs.BrandingPoliciesHelpSettingsGetArgs>? HelpSettings { get; set; }

        /// <summary>
        /// Name of the Dashboard branding policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// organizationId path parameter. Organization ID
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public BrandingPoliciesState()
        {
        }
        public static new BrandingPoliciesState Empty => new BrandingPoliciesState();
    }
}
