// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Inputs
{

    public sealed class LicensesAssignSeatsItemResultingLicenseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date the license started burning
        /// </summary>
        [Input("activationDate")]
        public Input<string>? ActivationDate { get; set; }

        /// <summary>
        /// The date the license was claimed into the organization
        /// </summary>
        [Input("claimDate")]
        public Input<string>? ClaimDate { get; set; }

        /// <summary>
        /// Serial number of the device the license is assigned to
        /// </summary>
        [Input("deviceSerial")]
        public Input<string>? DeviceSerial { get; set; }

        /// <summary>
        /// The duration of the individual license
        /// </summary>
        [Input("durationInDays")]
        public Input<int>? DurationInDays { get; set; }

        /// <summary>
        /// The date the license will expire
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// The id of the head license this license is queued behind. If there is no head license, it returns nil.
        /// </summary>
        [Input("headLicenseId")]
        public Input<string>? HeadLicenseId { get; set; }

        /// <summary>
        /// License ID
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// License key
        /// </summary>
        [Input("licenseKey")]
        public Input<string>? LicenseKey { get; set; }

        /// <summary>
        /// License type
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// ID of the network the license is assigned to
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Order number
        /// </summary>
        [Input("orderNumber")]
        public Input<string>? OrderNumber { get; set; }

        [Input("permanentlyQueuedLicenses")]
        private InputList<Inputs.LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs>? _permanentlyQueuedLicenses;

        /// <summary>
        /// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
        /// </summary>
        public InputList<Inputs.LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs> PermanentlyQueuedLicenses
        {
            get => _permanentlyQueuedLicenses ?? (_permanentlyQueuedLicenses = new InputList<Inputs.LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs>());
            set => _permanentlyQueuedLicenses = value;
        }

        /// <summary>
        /// The number of seats of the license. Only applicable to SM licenses.
        /// </summary>
        [Input("seatCount")]
        public Input<int>? SeatCount { get; set; }

        /// <summary>
        /// The state of the license. All queued licenses have a status of *recentlyQueued*.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The duration of the license plus all permanently queued licenses associated with it
        /// </summary>
        [Input("totalDurationInDays")]
        public Input<int>? TotalDurationInDays { get; set; }

        public LicensesAssignSeatsItemResultingLicenseArgs()
        {
        }
        public static new LicensesAssignSeatsItemResultingLicenseArgs Empty => new LicensesAssignSeatsItemResultingLicenseArgs();
    }
}
