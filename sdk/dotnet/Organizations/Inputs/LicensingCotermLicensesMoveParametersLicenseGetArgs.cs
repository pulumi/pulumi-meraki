// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Meraki.Organizations.Inputs
{

    public sealed class LicensingCotermLicensesMoveParametersLicenseGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("counts")]
        private InputList<Inputs.LicensingCotermLicensesMoveParametersLicenseCountGetArgs>? _counts;

        /// <summary>
        /// The counts to move from the license by model type
        /// </summary>
        public InputList<Inputs.LicensingCotermLicensesMoveParametersLicenseCountGetArgs> Counts
        {
            get => _counts ?? (_counts = new InputList<Inputs.LicensingCotermLicensesMoveParametersLicenseCountGetArgs>());
            set => _counts = value;
        }

        /// <summary>
        /// The license key to move counts from
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        public LicensingCotermLicensesMoveParametersLicenseGetArgs()
        {
        }
        public static new LicensingCotermLicensesMoveParametersLicenseGetArgs Empty => new LicensingCotermLicensesMoveParametersLicenseGetArgs();
    }
}
