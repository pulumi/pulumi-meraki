// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.organizations.PolicyObjects("example", {
 *     category: "network",
 *     cidr: "10.0.0.0/24",
 *     fqdn: "example.com",
 *     groupIds: ["8"],
 *     ip: "1.2.3.4",
 *     mask: "255.255.0.0",
 *     name: "Web Servers - Datacenter 10",
 *     organizationId: "string",
 *     type: "cidr",
 * });
 * export const merakiOrganizationsPolicyObjectsExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:organizations/policyObjects:PolicyObjects example "organization_id,policy_object_id"
 * ```
 */
export class PolicyObjects extends pulumi.CustomResource {
    /**
     * Get an existing PolicyObjects resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyObjectsState, opts?: pulumi.CustomResourceOptions): PolicyObjects {
        return new PolicyObjects(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:organizations/policyObjects:PolicyObjects';

    /**
     * Returns true if the given object is an instance of PolicyObjects.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyObjects {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyObjects.__pulumiType;
    }

    /**
     * Category of a policy object (one of: adaptivePolicy, network)
     */
    declare public readonly category: pulumi.Output<string>;
    /**
     * CIDR Value of a policy object (e.g. 10.11.12.1/24")
     */
    declare public readonly cidr: pulumi.Output<string>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Fully qualified domain name of policy object (e.g. "example.com")
     */
    declare public readonly fqdn: pulumi.Output<string>;
    /**
     * The IDs of policy object groups the policy object belongs to
     */
    declare public readonly groupIds: pulumi.Output<string[]>;
    /**
     * IP Address of a policy object (e.g. "1.2.3.4")
     */
    declare public readonly ip: pulumi.Output<string>;
    /**
     * Mask of a policy object (e.g. "255.255.0.0")
     */
    declare public readonly mask: pulumi.Output<string>;
    /**
     * Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
     */
    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly networkIds: pulumi.Output<string[]>;
    /**
     * organizationId path parameter. Organization ID
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * policyObjectId path parameter. Policy object ID
     */
    declare public readonly policyObjectId: pulumi.Output<string>;
    /**
     * Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
     */
    declare public readonly type: pulumi.Output<string>;
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a PolicyObjects resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyObjectsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyObjectsArgs | PolicyObjectsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyObjectsState | undefined;
            resourceInputs["category"] = state?.category;
            resourceInputs["cidr"] = state?.cidr;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["fqdn"] = state?.fqdn;
            resourceInputs["groupIds"] = state?.groupIds;
            resourceInputs["ip"] = state?.ip;
            resourceInputs["mask"] = state?.mask;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkIds"] = state?.networkIds;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["policyObjectId"] = state?.policyObjectId;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as PolicyObjectsArgs | undefined;
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["category"] = args?.category;
            resourceInputs["cidr"] = args?.cidr;
            resourceInputs["fqdn"] = args?.fqdn;
            resourceInputs["groupIds"] = args?.groupIds;
            resourceInputs["ip"] = args?.ip;
            resourceInputs["mask"] = args?.mask;
            resourceInputs["name"] = args?.name;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["policyObjectId"] = args?.policyObjectId;
            resourceInputs["type"] = args?.type;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["networkIds"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyObjects.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyObjects resources.
 */
export interface PolicyObjectsState {
    /**
     * Category of a policy object (one of: adaptivePolicy, network)
     */
    category?: pulumi.Input<string>;
    /**
     * CIDR Value of a policy object (e.g. 10.11.12.1/24")
     */
    cidr?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    /**
     * Fully qualified domain name of policy object (e.g. "example.com")
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The IDs of policy object groups the policy object belongs to
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP Address of a policy object (e.g. "1.2.3.4")
     */
    ip?: pulumi.Input<string>;
    /**
     * Mask of a policy object (e.g. "255.255.0.0")
     */
    mask?: pulumi.Input<string>;
    /**
     * Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
     */
    name?: pulumi.Input<string>;
    networkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
    /**
     * policyObjectId path parameter. Policy object ID
     */
    policyObjectId?: pulumi.Input<string>;
    /**
     * Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
     */
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyObjects resource.
 */
export interface PolicyObjectsArgs {
    /**
     * Category of a policy object (one of: adaptivePolicy, network)
     */
    category?: pulumi.Input<string>;
    /**
     * CIDR Value of a policy object (e.g. 10.11.12.1/24")
     */
    cidr?: pulumi.Input<string>;
    /**
     * Fully qualified domain name of policy object (e.g. "example.com")
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The IDs of policy object groups the policy object belongs to
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP Address of a policy object (e.g. "1.2.3.4")
     */
    ip?: pulumi.Input<string>;
    /**
     * Mask of a policy object (e.g. "255.255.0.0")
     */
    mask?: pulumi.Input<string>;
    /**
     * Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * policyObjectId path parameter. Policy object ID
     */
    policyObjectId?: pulumi.Input<string>;
    /**
     * Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
     */
    type?: pulumi.Input<string>;
}
