// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getCameraDetectionsHistoryByBoundaryByInterval({
 *     boundaryIds: ["string"],
 *     boundaryTypes: ["string"],
 *     duration: 1,
 *     organizationId: "string",
 *     perPage: 1,
 *     ranges: ["string"],
 * });
 * export const merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample = example.then(example => example.items);
 * ```
 */
export function getCameraDetectionsHistoryByBoundaryByInterval(args: GetCameraDetectionsHistoryByBoundaryByIntervalArgs, opts?: pulumi.InvokeOptions): Promise<GetCameraDetectionsHistoryByBoundaryByIntervalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", {
        "boundaryIds": args.boundaryIds,
        "boundaryTypes": args.boundaryTypes,
        "duration": args.duration,
        "organizationId": args.organizationId,
        "perPage": args.perPage,
        "ranges": args.ranges,
    }, opts);
}

/**
 * A collection of arguments for invoking getCameraDetectionsHistoryByBoundaryByInterval.
 */
export interface GetCameraDetectionsHistoryByBoundaryByIntervalArgs {
    /**
     * boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
     */
    boundaryIds: string[];
    /**
     * boundaryTypes query parameter. The detection types. Defaults to 'person'.
     */
    boundaryTypes?: string[];
    /**
     * duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
     */
    duration?: number;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
     */
    perPage?: number;
    /**
     * ranges query parameter. A list of time ranges with intervals
     */
    ranges: string[];
}

/**
 * A collection of values returned by getCameraDetectionsHistoryByBoundaryByInterval.
 */
export interface GetCameraDetectionsHistoryByBoundaryByIntervalResult {
    /**
     * boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
     */
    readonly boundaryIds: string[];
    /**
     * boundaryTypes query parameter. The detection types. Defaults to 'person'.
     */
    readonly boundaryTypes?: string[];
    /**
     * duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
     */
    readonly duration?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Array of ResponseCameraGetOrganizationCameraDetectionsHistoryByBoundaryByInterval
     */
    readonly items: outputs.organizations.GetCameraDetectionsHistoryByBoundaryByIntervalItem[];
    /**
     * organizationId path parameter. Organization ID
     */
    readonly organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
     */
    readonly perPage?: number;
    /**
     * ranges query parameter. A list of time ranges with intervals
     */
    readonly ranges: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getCameraDetectionsHistoryByBoundaryByInterval({
 *     boundaryIds: ["string"],
 *     boundaryTypes: ["string"],
 *     duration: 1,
 *     organizationId: "string",
 *     perPage: 1,
 *     ranges: ["string"],
 * });
 * export const merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample = example.then(example => example.items);
 * ```
 */
export function getCameraDetectionsHistoryByBoundaryByIntervalOutput(args: GetCameraDetectionsHistoryByBoundaryByIntervalOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCameraDetectionsHistoryByBoundaryByIntervalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", {
        "boundaryIds": args.boundaryIds,
        "boundaryTypes": args.boundaryTypes,
        "duration": args.duration,
        "organizationId": args.organizationId,
        "perPage": args.perPage,
        "ranges": args.ranges,
    }, opts);
}

/**
 * A collection of arguments for invoking getCameraDetectionsHistoryByBoundaryByInterval.
 */
export interface GetCameraDetectionsHistoryByBoundaryByIntervalOutputArgs {
    /**
     * boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
     */
    boundaryIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * boundaryTypes query parameter. The detection types. Defaults to 'person'.
     */
    boundaryTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
     */
    duration?: pulumi.Input<number>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
     */
    perPage?: pulumi.Input<number>;
    /**
     * ranges query parameter. A list of time ranges with intervals
     */
    ranges: pulumi.Input<pulumi.Input<string>[]>;
}
