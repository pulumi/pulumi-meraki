// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:organizations/adaptivePolicyAcls:AdaptivePolicyAcls example "acl_id,organization_id"
 * ```
 */
export class AdaptivePolicyAcls extends pulumi.CustomResource {
    /**
     * Get an existing AdaptivePolicyAcls resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdaptivePolicyAclsState, opts?: pulumi.CustomResourceOptions): AdaptivePolicyAcls {
        return new AdaptivePolicyAcls(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:organizations/adaptivePolicyAcls:AdaptivePolicyAcls';

    /**
     * Returns true if the given object is an instance of AdaptivePolicyAcls.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdaptivePolicyAcls {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdaptivePolicyAcls.__pulumiType;
    }

    /**
     * ID of the adaptive policy ACL
     */
    public readonly aclId!: pulumi.Output<string>;
    /**
     * When the adaptive policy ACL was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the adaptive policy ACL
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * IP version of adpative policy ACL
     */
    public readonly ipVersion!: pulumi.Output<string>;
    /**
     * Name of the adaptive policy ACL
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * An ordered array of the adaptive policy ACL rules
     */
    public readonly rules!: pulumi.Output<outputs.organizations.AdaptivePolicyAclsRule[]>;
    /**
     * When the adaptive policy ACL was last updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a AdaptivePolicyAcls resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdaptivePolicyAclsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdaptivePolicyAclsArgs | AdaptivePolicyAclsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdaptivePolicyAclsState | undefined;
            resourceInputs["aclId"] = state ? state.aclId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as AdaptivePolicyAclsArgs | undefined;
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["aclId"] = args ? args.aclId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdaptivePolicyAcls.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AdaptivePolicyAcls resources.
 */
export interface AdaptivePolicyAclsState {
    /**
     * ID of the adaptive policy ACL
     */
    aclId?: pulumi.Input<string>;
    /**
     * When the adaptive policy ACL was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the adaptive policy ACL
     */
    description?: pulumi.Input<string>;
    /**
     * IP version of adpative policy ACL
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * Name of the adaptive policy ACL
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
    /**
     * An ordered array of the adaptive policy ACL rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.organizations.AdaptivePolicyAclsRule>[]>;
    /**
     * When the adaptive policy ACL was last updated
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AdaptivePolicyAcls resource.
 */
export interface AdaptivePolicyAclsArgs {
    /**
     * ID of the adaptive policy ACL
     */
    aclId?: pulumi.Input<string>;
    /**
     * Description of the adaptive policy ACL
     */
    description?: pulumi.Input<string>;
    /**
     * IP version of adpative policy ACL
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * Name of the adaptive policy ACL
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * An ordered array of the adaptive policy ACL rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.organizations.AdaptivePolicyAclsRule>[]>;
}
