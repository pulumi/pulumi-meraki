// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getEarlyAccessFeaturesOptIns({
 *     organizationId: "string",
 * });
 * export const merakiOrganizationsEarlyAccessFeaturesOptInsExample = example.then(example => example.item);
 * ```
 */
export function getEarlyAccessFeaturesOptIns(args?: GetEarlyAccessFeaturesOptInsArgs, opts?: pulumi.InvokeOptions): Promise<GetEarlyAccessFeaturesOptInsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns", {
        "optInId": args.optInId,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEarlyAccessFeaturesOptIns.
 */
export interface GetEarlyAccessFeaturesOptInsArgs {
    /**
     * optInId path parameter. Opt in ID
     */
    optInId?: string;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: string;
}

/**
 * A collection of values returned by getEarlyAccessFeaturesOptIns.
 */
export interface GetEarlyAccessFeaturesOptInsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly item: outputs.organizations.GetEarlyAccessFeaturesOptInsItem;
    /**
     * optInId path parameter. Opt in ID
     */
    readonly optInId?: string;
    /**
     * organizationId path parameter. Organization ID
     */
    readonly organizationId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getEarlyAccessFeaturesOptIns({
 *     organizationId: "string",
 * });
 * export const merakiOrganizationsEarlyAccessFeaturesOptInsExample = example.then(example => example.item);
 * ```
 */
export function getEarlyAccessFeaturesOptInsOutput(args?: GetEarlyAccessFeaturesOptInsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEarlyAccessFeaturesOptInsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns", {
        "optInId": args.optInId,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEarlyAccessFeaturesOptIns.
 */
export interface GetEarlyAccessFeaturesOptInsOutputArgs {
    /**
     * optInId path parameter. Opt in ID
     */
    optInId?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
}
