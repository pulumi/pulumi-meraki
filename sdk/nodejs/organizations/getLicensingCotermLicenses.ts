// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getLicensingCotermLicenses({
 *     endingBefore: "string",
 *     expired: false,
 *     invalidated: false,
 *     organizationId: "string",
 *     perPage: 1,
 *     startingAfter: "string",
 * });
 * export const merakiOrganizationsLicensingCotermLicensesExample = example.then(example => example.items);
 * ```
 */
export function getLicensingCotermLicenses(args: GetLicensingCotermLicensesArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensingCotermLicensesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:organizations/getLicensingCotermLicenses:getLicensingCotermLicenses", {
        "endingBefore": args.endingBefore,
        "expired": args.expired,
        "invalidated": args.invalidated,
        "organizationId": args.organizationId,
        "perPage": args.perPage,
        "startingAfter": args.startingAfter,
    }, opts);
}

/**
 * A collection of arguments for invoking getLicensingCotermLicenses.
 */
export interface GetLicensingCotermLicensesArgs {
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: string;
    /**
     * expired query parameter. Filter for licenses that are expired
     */
    expired?: boolean;
    /**
     * invalidated query parameter. Filter for licenses that are invalidated
     */
    invalidated?: boolean;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    perPage?: number;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: string;
}

/**
 * A collection of values returned by getLicensingCotermLicenses.
 */
export interface GetLicensingCotermLicensesResult {
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly endingBefore?: string;
    /**
     * expired query parameter. Filter for licenses that are expired
     */
    readonly expired?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * invalidated query parameter. Filter for licenses that are invalidated
     */
    readonly invalidated?: boolean;
    /**
     * Array of ResponseLicensingGetOrganizationLicensingCotermLicenses
     */
    readonly items: outputs.organizations.GetLicensingCotermLicensesItem[];
    /**
     * organizationId path parameter. Organization ID
     */
    readonly organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    readonly perPage?: number;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly startingAfter?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getLicensingCotermLicenses({
 *     endingBefore: "string",
 *     expired: false,
 *     invalidated: false,
 *     organizationId: "string",
 *     perPage: 1,
 *     startingAfter: "string",
 * });
 * export const merakiOrganizationsLicensingCotermLicensesExample = example.then(example => example.items);
 * ```
 */
export function getLicensingCotermLicensesOutput(args: GetLicensingCotermLicensesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensingCotermLicensesResult> {
    return pulumi.output(args).apply((a: any) => getLicensingCotermLicenses(a, opts))
}

/**
 * A collection of arguments for invoking getLicensingCotermLicenses.
 */
export interface GetLicensingCotermLicensesOutputArgs {
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: pulumi.Input<string>;
    /**
     * expired query parameter. Filter for licenses that are expired
     */
    expired?: pulumi.Input<boolean>;
    /**
     * invalidated query parameter. Filter for licenses that are invalidated
     */
    invalidated?: pulumi.Input<boolean>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    perPage?: pulumi.Input<number>;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: pulumi.Input<string>;
}
