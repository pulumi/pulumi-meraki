// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.organizations.Base("example", {
 *     management: {
 *         details: [{
 *             name: "MSP ID",
 *             value: "123456",
 *         }],
 *     },
 *     name: "My organization",
 * });
 * export const merakiOrganizationsExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:organizations/base:base example "organization_id"
 * ```
 */
export class Base extends pulumi.CustomResource {
    /**
     * Get an existing Base resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BaseState, opts?: pulumi.CustomResourceOptions): Base {
        return new Base(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:organizations/base:base';

    /**
     * Returns true if the given object is an instance of Base.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Base {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Base.__pulumiType;
    }

    /**
     * API related settings
     */
    public readonly api!: pulumi.Output<outputs.organizations.BaseApi>;
    /**
     * Data for this organization
     */
    public /*out*/ readonly cloud!: pulumi.Output<outputs.organizations.BaseCloud>;
    /**
     * Licensing related settings
     */
    public /*out*/ readonly licensing!: pulumi.Output<outputs.organizations.BaseLicensing>;
    /**
     * Information about the organization's management system
     */
    public readonly management!: pulumi.Output<outputs.organizations.BaseManagement>;
    /**
     * Organization name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Organization URL
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Base resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BaseArgs | BaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BaseState | undefined;
            resourceInputs["api"] = state ? state.api : undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["licensing"] = state ? state.licensing : undefined;
            resourceInputs["management"] = state ? state.management : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as BaseArgs | undefined;
            resourceInputs["api"] = args ? args.api : undefined;
            resourceInputs["management"] = args ? args.management : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["cloud"] = undefined /*out*/;
            resourceInputs["licensing"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Base.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering base resources.
 */
export interface BaseState {
    /**
     * API related settings
     */
    api?: pulumi.Input<inputs.organizations.BaseApi>;
    /**
     * Data for this organization
     */
    cloud?: pulumi.Input<inputs.organizations.BaseCloud>;
    /**
     * Licensing related settings
     */
    licensing?: pulumi.Input<inputs.organizations.BaseLicensing>;
    /**
     * Information about the organization's management system
     */
    management?: pulumi.Input<inputs.organizations.BaseManagement>;
    /**
     * Organization name
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Organization URL
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Base resource.
 */
export interface BaseArgs {
    /**
     * API related settings
     */
    api?: pulumi.Input<inputs.organizations.BaseApi>;
    /**
     * Information about the organization's management system
     */
    management?: pulumi.Input<inputs.organizations.BaseManagement>;
    /**
     * Organization name
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
}
