// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getDevices({
 *     configurationUpdatedAfter: "string",
 *     endingBefore: "string",
 *     mac: "string",
 *     macs: ["string"],
 *     model: "string",
 *     models: ["string"],
 *     name: "string",
 *     networkIds: ["string"],
 *     organizationId: "string",
 *     perPage: 1,
 *     productTypes: ["string"],
 *     sensorAlertProfileIds: ["string"],
 *     sensorMetrics: ["string"],
 *     serial: "string",
 *     serials: ["string"],
 *     startingAfter: "string",
 *     tags: ["string"],
 *     tagsFilterType: "string",
 * });
 * export const merakiOrganizationsDevicesExample = example.then(example => example.items);
 * ```
 */
export function getDevices(args: GetDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:organizations/getDevices:getDevices", {
        "configurationUpdatedAfter": args.configurationUpdatedAfter,
        "endingBefore": args.endingBefore,
        "mac": args.mac,
        "macs": args.macs,
        "model": args.model,
        "models": args.models,
        "name": args.name,
        "networkIds": args.networkIds,
        "organizationId": args.organizationId,
        "perPage": args.perPage,
        "productTypes": args.productTypes,
        "sensorAlertProfileIds": args.sensorAlertProfileIds,
        "sensorMetrics": args.sensorMetrics,
        "serial": args.serial,
        "serials": args.serials,
        "startingAfter": args.startingAfter,
        "tags": args.tags,
        "tagsFilterType": args.tagsFilterType,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesArgs {
    /**
     * configurationUpdatedAfter query parameter. Filter results by whether or not the device's configuration has been updated after the given timestamp
     */
    configurationUpdatedAfter?: string;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: string;
    /**
     * mac query parameter. Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
     */
    mac?: string;
    /**
     * macs query parameter. Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
     */
    macs?: string[];
    /**
     * model query parameter. Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
     */
    model?: string;
    /**
     * models query parameter. Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
     */
    models?: string[];
    /**
     * name query parameter. Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
     */
    name?: string;
    /**
     * networkIds query parameter. Optional parameter to filter devices by network.
     */
    networkIds?: string[];
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    perPage?: number;
    /**
     * productTypes query parameter. Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     */
    productTypes?: string[];
    /**
     * sensorAlertProfileIds query parameter. Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
     */
    sensorAlertProfileIds?: string[];
    /**
     * sensorMetrics query parameter. Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
     */
    sensorMetrics?: string[];
    /**
     * serial query parameter. Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
     */
    serial?: string;
    /**
     * serials query parameter. Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
     */
    serials?: string[];
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: string;
    /**
     * tags query parameter. Optional parameter to filter devices by tags.
     */
    tags?: string[];
    /**
     * tagsFilterType query parameter. Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     */
    tagsFilterType?: string;
}

/**
 * A collection of values returned by getDevices.
 */
export interface GetDevicesResult {
    /**
     * configurationUpdatedAfter query parameter. Filter results by whether or not the device's configuration has been updated after the given timestamp
     */
    readonly configurationUpdatedAfter?: string;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly endingBefore?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Array of ResponseOrganizationsGetOrganizationDevices
     */
    readonly items: outputs.organizations.GetDevicesItem[];
    /**
     * mac query parameter. Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
     */
    readonly mac?: string;
    /**
     * macs query parameter. Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
     */
    readonly macs?: string[];
    /**
     * model query parameter. Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
     */
    readonly model?: string;
    /**
     * models query parameter. Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
     */
    readonly models?: string[];
    /**
     * name query parameter. Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
     */
    readonly name?: string;
    /**
     * networkIds query parameter. Optional parameter to filter devices by network.
     */
    readonly networkIds?: string[];
    /**
     * organizationId path parameter. Organization ID
     */
    readonly organizationId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    readonly perPage?: number;
    /**
     * productTypes query parameter. Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     */
    readonly productTypes?: string[];
    /**
     * sensorAlertProfileIds query parameter. Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
     */
    readonly sensorAlertProfileIds?: string[];
    /**
     * sensorMetrics query parameter. Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
     */
    readonly sensorMetrics?: string[];
    /**
     * serial query parameter. Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
     */
    readonly serial?: string;
    /**
     * serials query parameter. Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
     */
    readonly serials?: string[];
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly startingAfter?: string;
    /**
     * tags query parameter. Optional parameter to filter devices by tags.
     */
    readonly tags?: string[];
    /**
     * tagsFilterType query parameter. Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     */
    readonly tagsFilterType?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.organizations.getDevices({
 *     configurationUpdatedAfter: "string",
 *     endingBefore: "string",
 *     mac: "string",
 *     macs: ["string"],
 *     model: "string",
 *     models: ["string"],
 *     name: "string",
 *     networkIds: ["string"],
 *     organizationId: "string",
 *     perPage: 1,
 *     productTypes: ["string"],
 *     sensorAlertProfileIds: ["string"],
 *     sensorMetrics: ["string"],
 *     serial: "string",
 *     serials: ["string"],
 *     startingAfter: "string",
 *     tags: ["string"],
 *     tagsFilterType: "string",
 * });
 * export const merakiOrganizationsDevicesExample = example.then(example => example.items);
 * ```
 */
export function getDevicesOutput(args: GetDevicesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDevicesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:organizations/getDevices:getDevices", {
        "configurationUpdatedAfter": args.configurationUpdatedAfter,
        "endingBefore": args.endingBefore,
        "mac": args.mac,
        "macs": args.macs,
        "model": args.model,
        "models": args.models,
        "name": args.name,
        "networkIds": args.networkIds,
        "organizationId": args.organizationId,
        "perPage": args.perPage,
        "productTypes": args.productTypes,
        "sensorAlertProfileIds": args.sensorAlertProfileIds,
        "sensorMetrics": args.sensorMetrics,
        "serial": args.serial,
        "serials": args.serials,
        "startingAfter": args.startingAfter,
        "tags": args.tags,
        "tagsFilterType": args.tagsFilterType,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesOutputArgs {
    /**
     * configurationUpdatedAfter query parameter. Filter results by whether or not the device's configuration has been updated after the given timestamp
     */
    configurationUpdatedAfter?: pulumi.Input<string>;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: pulumi.Input<string>;
    /**
     * mac query parameter. Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
     */
    mac?: pulumi.Input<string>;
    /**
     * macs query parameter. Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
     */
    macs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * model query parameter. Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
     */
    model?: pulumi.Input<string>;
    /**
     * models query parameter. Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
     */
    models?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * name query parameter. Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
     */
    name?: pulumi.Input<string>;
    /**
     * networkIds query parameter. Optional parameter to filter devices by network.
     */
    networkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     */
    perPage?: pulumi.Input<number>;
    /**
     * productTypes query parameter. Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     */
    productTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * sensorAlertProfileIds query parameter. Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
     */
    sensorAlertProfileIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * sensorMetrics query parameter. Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
     */
    sensorMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * serial query parameter. Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
     */
    serial?: pulumi.Input<string>;
    /**
     * serials query parameter. Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
     */
    serials?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: pulumi.Input<string>;
    /**
     * tags query parameter. Optional parameter to filter devices by tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * tagsFilterType query parameter. Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     */
    tagsFilterType?: pulumi.Input<string>;
}
