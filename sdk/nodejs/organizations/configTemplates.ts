// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.organizations.ConfigTemplates("example", {
 *     name: "My config template",
 *     organizationId: "string",
 *     timeZone: "America/Los_Angeles",
 * });
 * export const merakiOrganizationsConfigTemplatesExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:organizations/configTemplates:ConfigTemplates example "config_template_id,organization_id"
 * ```
 */
export class ConfigTemplates extends pulumi.CustomResource {
    /**
     * Get an existing ConfigTemplates resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigTemplatesState, opts?: pulumi.CustomResourceOptions): ConfigTemplates {
        return new ConfigTemplates(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:organizations/configTemplates:ConfigTemplates';

    /**
     * Returns true if the given object is an instance of ConfigTemplates.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigTemplates {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigTemplates.__pulumiType;
    }

    /**
     * configTemplateId path parameter. Config template ID
     */
    declare public readonly configTemplateId: pulumi.Output<string | undefined>;
    /**
     * The name of the configuration template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * The product types of the configuration template
     */
    declare public /*out*/ readonly productTypes: pulumi.Output<string[]>;
    /**
     * The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
     */
    declare public readonly timeZone: pulumi.Output<string>;

    /**
     * Create a ConfigTemplates resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigTemplatesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigTemplatesArgs | ConfigTemplatesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigTemplatesState | undefined;
            resourceInputs["configTemplateId"] = state?.configTemplateId;
            resourceInputs["name"] = state?.name;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["productTypes"] = state?.productTypes;
            resourceInputs["timeZone"] = state?.timeZone;
        } else {
            const args = argsOrState as ConfigTemplatesArgs | undefined;
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["configTemplateId"] = args?.configTemplateId;
            resourceInputs["name"] = args?.name;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["timeZone"] = args?.timeZone;
            resourceInputs["productTypes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigTemplates.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConfigTemplates resources.
 */
export interface ConfigTemplatesState {
    /**
     * configTemplateId path parameter. Config template ID
     */
    configTemplateId?: pulumi.Input<string>;
    /**
     * The name of the configuration template
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The product types of the configuration template
     */
    productTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConfigTemplates resource.
 */
export interface ConfigTemplatesArgs {
    /**
     * configTemplateId path parameter. Config template ID
     */
    configTemplateId?: pulumi.Input<string>;
    /**
     * The name of the configuration template
     */
    name?: pulumi.Input<string>;
    /**
     * organizationId path parameter. Organization ID
     */
    organizationId: pulumi.Input<string>;
    /**
     * The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
     */
    timeZone?: pulumi.Input<string>;
}
