// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules example "network_id,number"
 * ```
 */
export class WirelessSsidsSchedules extends pulumi.CustomResource {
    /**
     * Get an existing WirelessSsidsSchedules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessSsidsSchedulesState, opts?: pulumi.CustomResourceOptions): WirelessSsidsSchedules {
        return new WirelessSsidsSchedules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/wirelessSsidsSchedules:WirelessSsidsSchedules';

    /**
     * Returns true if the given object is an instance of WirelessSsidsSchedules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessSsidsSchedules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessSsidsSchedules.__pulumiType;
    }

    /**
     * If true, the SSID outage schedule is enabled.
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * number path parameter.
     */
    declare public readonly number: pulumi.Output<string>;
    /**
     * List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
     */
    declare public readonly ranges: pulumi.Output<outputs.networks.WirelessSsidsSchedulesRange[]>;
    /**
     * List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
     */
    declare public readonly rangesInSeconds: pulumi.Output<outputs.networks.WirelessSsidsSchedulesRangesInSecond[]>;

    /**
     * Create a WirelessSsidsSchedules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelessSsidsSchedulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessSsidsSchedulesArgs | WirelessSsidsSchedulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessSsidsSchedulesState | undefined;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["number"] = state?.number;
            resourceInputs["ranges"] = state?.ranges;
            resourceInputs["rangesInSeconds"] = state?.rangesInSeconds;
        } else {
            const args = argsOrState as WirelessSsidsSchedulesArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.number === undefined && !opts.urn) {
                throw new Error("Missing required property 'number'");
            }
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["number"] = args?.number;
            resourceInputs["ranges"] = args?.ranges;
            resourceInputs["rangesInSeconds"] = args?.rangesInSeconds;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessSsidsSchedules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessSsidsSchedules resources.
 */
export interface WirelessSsidsSchedulesState {
    /**
     * If true, the SSID outage schedule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number?: pulumi.Input<string>;
    /**
     * List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
     */
    ranges?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsSchedulesRange>[]>;
    /**
     * List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
     */
    rangesInSeconds?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsSchedulesRangesInSecond>[]>;
}

/**
 * The set of arguments for constructing a WirelessSsidsSchedules resource.
 */
export interface WirelessSsidsSchedulesArgs {
    /**
     * If true, the SSID outage schedule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number: pulumi.Input<string>;
    /**
     * List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
     */
    ranges?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsSchedulesRange>[]>;
    /**
     * List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
     */
    rangesInSeconds?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsSchedulesRangesInSecond>[]>;
}
