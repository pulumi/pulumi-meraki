// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.SwitchQosRulesOrder("example", {
 *     dscp: 1,
 *     dstPort: 3000,
 *     dstPortRange: "3000-3100",
 *     networkId: "string",
 *     protocol: "TCP",
 *     srcPort: 2000,
 *     srcPortRange: "70-80",
 *     vlan: 100,
 * });
 * export const merakiNetworksSwitchQosRulesOrderExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder example "network_id,qos_rule_id"
 * ```
 */
export class SwitchQosRulesOrder extends pulumi.CustomResource {
    /**
     * Get an existing SwitchQosRulesOrder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchQosRulesOrderState, opts?: pulumi.CustomResourceOptions): SwitchQosRulesOrder {
        return new SwitchQosRulesOrder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/switchQosRulesOrder:SwitchQosRulesOrder';

    /**
     * Returns true if the given object is an instance of SwitchQosRulesOrder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchQosRulesOrder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchQosRulesOrder.__pulumiType;
    }

    /**
     * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
     */
    declare public readonly dscp: pulumi.Output<number>;
    /**
     * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    declare public readonly dstPort: pulumi.Output<number>;
    /**
     * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    declare public readonly dstPortRange: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * qosRuleId path parameter. Qos rule ID
     */
    declare public readonly qosRuleId: pulumi.Output<string>;
    /**
     * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    declare public readonly srcPort: pulumi.Output<number>;
    /**
     * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    declare public readonly srcPortRange: pulumi.Output<string>;
    /**
     * The VLAN of the incoming packet. A null value will match any VLAN.
     */
    declare public readonly vlan: pulumi.Output<number>;

    /**
     * Create a SwitchQosRulesOrder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchQosRulesOrderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchQosRulesOrderArgs | SwitchQosRulesOrderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchQosRulesOrderState | undefined;
            resourceInputs["dscp"] = state?.dscp;
            resourceInputs["dstPort"] = state?.dstPort;
            resourceInputs["dstPortRange"] = state?.dstPortRange;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["qosRuleId"] = state?.qosRuleId;
            resourceInputs["srcPort"] = state?.srcPort;
            resourceInputs["srcPortRange"] = state?.srcPortRange;
            resourceInputs["vlan"] = state?.vlan;
        } else {
            const args = argsOrState as SwitchQosRulesOrderArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["dscp"] = args?.dscp;
            resourceInputs["dstPort"] = args?.dstPort;
            resourceInputs["dstPortRange"] = args?.dstPortRange;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["qosRuleId"] = args?.qosRuleId;
            resourceInputs["srcPort"] = args?.srcPort;
            resourceInputs["srcPortRange"] = args?.srcPortRange;
            resourceInputs["vlan"] = args?.vlan;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchQosRulesOrder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchQosRulesOrder resources.
 */
export interface SwitchQosRulesOrderState {
    /**
     * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
     */
    dscp?: pulumi.Input<number>;
    /**
     * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    dstPort?: pulumi.Input<number>;
    /**
     * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    dstPortRange?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
     */
    protocol?: pulumi.Input<string>;
    /**
     * qosRuleId path parameter. Qos rule ID
     */
    qosRuleId?: pulumi.Input<string>;
    /**
     * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    srcPort?: pulumi.Input<number>;
    /**
     * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    srcPortRange?: pulumi.Input<string>;
    /**
     * The VLAN of the incoming packet. A null value will match any VLAN.
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SwitchQosRulesOrder resource.
 */
export interface SwitchQosRulesOrderArgs {
    /**
     * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
     */
    dscp?: pulumi.Input<number>;
    /**
     * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    dstPort?: pulumi.Input<number>;
    /**
     * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    dstPortRange?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
     */
    protocol?: pulumi.Input<string>;
    /**
     * qosRuleId path parameter. Qos rule ID
     */
    qosRuleId?: pulumi.Input<string>;
    /**
     * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
     */
    srcPort?: pulumi.Input<number>;
    /**
     * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
     */
    srcPortRange?: pulumi.Input<string>;
    /**
     * The VLAN of the incoming packet. A null value will match any VLAN.
     */
    vlan?: pulumi.Input<number>;
}
