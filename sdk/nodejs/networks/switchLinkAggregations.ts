// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.SwitchLinkAggregations("example", {
 *     networkId: "string",
 *     switchPorts: [{
 *         port_id: "1",
 *         serial: "Q234-ABCD-0001",
 *     }],
 * });
 * export const merakiNetworksSwitchLinkAggregationsExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/switchLinkAggregations:SwitchLinkAggregations example "network_id"
 * ```
 */
export class SwitchLinkAggregations extends pulumi.CustomResource {
    /**
     * Get an existing SwitchLinkAggregations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchLinkAggregationsState, opts?: pulumi.CustomResourceOptions): SwitchLinkAggregations {
        return new SwitchLinkAggregations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/switchLinkAggregations:SwitchLinkAggregations';

    /**
     * Returns true if the given object is an instance of SwitchLinkAggregations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchLinkAggregations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchLinkAggregations.__pulumiType;
    }

    /**
     * linkAggregationId path parameter. Link aggregation ID
     */
    declare public readonly linkAggregationId: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    declare public readonly switchPorts: pulumi.Output<outputs.networks.SwitchLinkAggregationsSwitchPort[]>;
    /**
     * Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    declare public readonly switchProfilePorts: pulumi.Output<outputs.networks.SwitchLinkAggregationsSwitchProfilePort[]>;

    /**
     * Create a SwitchLinkAggregations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchLinkAggregationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchLinkAggregationsArgs | SwitchLinkAggregationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchLinkAggregationsState | undefined;
            resourceInputs["linkAggregationId"] = state?.linkAggregationId;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["switchPorts"] = state?.switchPorts;
            resourceInputs["switchProfilePorts"] = state?.switchProfilePorts;
        } else {
            const args = argsOrState as SwitchLinkAggregationsArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["linkAggregationId"] = args?.linkAggregationId;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["switchPorts"] = args?.switchPorts;
            resourceInputs["switchProfilePorts"] = args?.switchProfilePorts;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchLinkAggregations.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchLinkAggregations resources.
 */
export interface SwitchLinkAggregationsState {
    /**
     * linkAggregationId path parameter. Link aggregation ID
     */
    linkAggregationId?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    switchPorts?: pulumi.Input<pulumi.Input<inputs.networks.SwitchLinkAggregationsSwitchPort>[]>;
    /**
     * Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    switchProfilePorts?: pulumi.Input<pulumi.Input<inputs.networks.SwitchLinkAggregationsSwitchProfilePort>[]>;
}

/**
 * The set of arguments for constructing a SwitchLinkAggregations resource.
 */
export interface SwitchLinkAggregationsArgs {
    /**
     * linkAggregationId path parameter. Link aggregation ID
     */
    linkAggregationId?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    switchPorts?: pulumi.Input<pulumi.Input<inputs.networks.SwitchLinkAggregationsSwitchPort>[]>;
    /**
     * Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     */
    switchProfilePorts?: pulumi.Input<pulumi.Input<inputs.networks.SwitchLinkAggregationsSwitchProfilePort>[]>;
}
