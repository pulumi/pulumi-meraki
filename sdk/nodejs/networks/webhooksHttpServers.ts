// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.WebhooksHttpServers("example", {
 *     name: "Example Webhook Server",
 *     networkId: "string",
 *     payloadTemplate: {
 *         name: "Meraki (included)",
 *         payload_template_id: "wpt_00001",
 *     },
 *     sharedSecret: "shhh",
 *     url: "https://example.com",
 * });
 * export const merakiNetworksWebhooksHttpServersExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/webhooksHttpServers:WebhooksHttpServers example "http_server_id,network_id"
 * ```
 */
export class WebhooksHttpServers extends pulumi.CustomResource {
    /**
     * Get an existing WebhooksHttpServers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhooksHttpServersState, opts?: pulumi.CustomResourceOptions): WebhooksHttpServers {
        return new WebhooksHttpServers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/webhooksHttpServers:WebhooksHttpServers';

    /**
     * Returns true if the given object is an instance of WebhooksHttpServers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebhooksHttpServers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebhooksHttpServers.__pulumiType;
    }

    /**
     * httpServerId path parameter. Http server ID
     */
    declare public readonly httpServerId: pulumi.Output<string>;
    /**
     * A name for easy reference to the HTTP server
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A Meraki network ID.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * The payload template to use when posting data to the HTTP server.
     */
    declare public readonly payloadTemplate: pulumi.Output<outputs.networks.WebhooksHttpServersPayloadTemplate>;
    /**
     * A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
     */
    declare public readonly sharedSecret: pulumi.Output<string>;
    /**
     * The URL of the HTTP server.
     */
    declare public readonly url: pulumi.Output<string>;

    /**
     * Create a WebhooksHttpServers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhooksHttpServersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhooksHttpServersArgs | WebhooksHttpServersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhooksHttpServersState | undefined;
            resourceInputs["httpServerId"] = state?.httpServerId;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["payloadTemplate"] = state?.payloadTemplate;
            resourceInputs["sharedSecret"] = state?.sharedSecret;
            resourceInputs["url"] = state?.url;
        } else {
            const args = argsOrState as WebhooksHttpServersArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["httpServerId"] = args?.httpServerId;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["payloadTemplate"] = args?.payloadTemplate;
            resourceInputs["sharedSecret"] = args?.sharedSecret;
            resourceInputs["url"] = args?.url;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebhooksHttpServers.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebhooksHttpServers resources.
 */
export interface WebhooksHttpServersState {
    /**
     * httpServerId path parameter. Http server ID
     */
    httpServerId?: pulumi.Input<string>;
    /**
     * A name for easy reference to the HTTP server
     */
    name?: pulumi.Input<string>;
    /**
     * A Meraki network ID.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The payload template to use when posting data to the HTTP server.
     */
    payloadTemplate?: pulumi.Input<inputs.networks.WebhooksHttpServersPayloadTemplate>;
    /**
     * A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
     */
    sharedSecret?: pulumi.Input<string>;
    /**
     * The URL of the HTTP server.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebhooksHttpServers resource.
 */
export interface WebhooksHttpServersArgs {
    /**
     * httpServerId path parameter. Http server ID
     */
    httpServerId?: pulumi.Input<string>;
    /**
     * A name for easy reference to the HTTP server
     */
    name?: pulumi.Input<string>;
    /**
     * A Meraki network ID.
     */
    networkId: pulumi.Input<string>;
    /**
     * The payload template to use when posting data to the HTTP server.
     */
    payloadTemplate?: pulumi.Input<inputs.networks.WebhooksHttpServersPayloadTemplate>;
    /**
     * A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
     */
    sharedSecret?: pulumi.Input<string>;
    /**
     * The URL of the HTTP server.
     */
    url?: pulumi.Input<string>;
}
