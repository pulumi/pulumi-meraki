// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getInsightApplicationsHealthByTime({
 *     applicationId: "string",
 *     networkId: "string",
 *     resolution: 1,
 *     t0: "string",
 *     t1: "string",
 *     timespan: 1,
 * });
 * export const merakiNetworksInsightApplicationsHealthByTimeExample = example.then(example => example.items);
 * ```
 */
export function getInsightApplicationsHealthByTime(args: GetInsightApplicationsHealthByTimeArgs, opts?: pulumi.InvokeOptions): Promise<GetInsightApplicationsHealthByTimeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getInsightApplicationsHealthByTime:getInsightApplicationsHealthByTime", {
        "applicationId": args.applicationId,
        "networkId": args.networkId,
        "resolution": args.resolution,
        "t0": args.t0,
        "t1": args.t1,
        "timespan": args.timespan,
    }, opts);
}

/**
 * A collection of arguments for invoking getInsightApplicationsHealthByTime.
 */
export interface GetInsightApplicationsHealthByTimeArgs {
    /**
     * applicationId path parameter. Application ID
     */
    applicationId: string;
    /**
     * networkId path parameter. Network ID
     */
    networkId: string;
    /**
     * resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     */
    resolution?: number;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     */
    t0?: string;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     */
    t1?: string;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     */
    timespan?: number;
}

/**
 * A collection of values returned by getInsightApplicationsHealthByTime.
 */
export interface GetInsightApplicationsHealthByTimeResult {
    /**
     * applicationId path parameter. Application ID
     */
    readonly applicationId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Array of ResponseInsightGetNetworkInsightApplicationHealthByTime
     */
    readonly items: outputs.networks.GetInsightApplicationsHealthByTimeItem[];
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId: string;
    /**
     * resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     */
    readonly resolution?: number;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     */
    readonly t0?: string;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     */
    readonly t1?: string;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     */
    readonly timespan?: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getInsightApplicationsHealthByTime({
 *     applicationId: "string",
 *     networkId: "string",
 *     resolution: 1,
 *     t0: "string",
 *     t1: "string",
 *     timespan: 1,
 * });
 * export const merakiNetworksInsightApplicationsHealthByTimeExample = example.then(example => example.items);
 * ```
 */
export function getInsightApplicationsHealthByTimeOutput(args: GetInsightApplicationsHealthByTimeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInsightApplicationsHealthByTimeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getInsightApplicationsHealthByTime:getInsightApplicationsHealthByTime", {
        "applicationId": args.applicationId,
        "networkId": args.networkId,
        "resolution": args.resolution,
        "t0": args.t0,
        "t1": args.t1,
        "timespan": args.timespan,
    }, opts);
}

/**
 * A collection of arguments for invoking getInsightApplicationsHealthByTime.
 */
export interface GetInsightApplicationsHealthByTimeOutputArgs {
    /**
     * applicationId path parameter. Application ID
     */
    applicationId: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     */
    resolution?: pulumi.Input<number>;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     */
    t0?: pulumi.Input<string>;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     */
    t1?: pulumi.Input<string>;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     */
    timespan?: pulumi.Input<number>;
}
