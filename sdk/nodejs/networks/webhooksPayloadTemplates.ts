// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.WebhooksPayloadTemplates("example", {
 *     body: "{'event_type':'{{alertTypeId}}','client_payload':{'text':'{{alertData}}'}}",
 *     bodyFile: "Qm9keSBGaWxl",
 *     headers: [{
 *         name: "Authorization",
 *         template: "Bearer {{sharedSecret}}",
 *     }],
 *     headersFile: "SGVhZGVycyBGaWxl",
 *     name: "Custom Template",
 *     networkId: "string",
 * });
 * export const merakiNetworksWebhooksPayloadTemplatesExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates example "network_id,payload_template_id"
 * ```
 */
export class WebhooksPayloadTemplates extends pulumi.CustomResource {
    /**
     * Get an existing WebhooksPayloadTemplates resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhooksPayloadTemplatesState, opts?: pulumi.CustomResourceOptions): WebhooksPayloadTemplates {
        return new WebhooksPayloadTemplates(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/webhooksPayloadTemplates:WebhooksPayloadTemplates';

    /**
     * Returns true if the given object is an instance of WebhooksPayloadTemplates.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebhooksPayloadTemplates {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebhooksPayloadTemplates.__pulumiType;
    }

    /**
     * The body of the payload template, in liquid template
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
     */
    public readonly bodyFile!: pulumi.Output<string>;
    /**
     * The payload template headers, will be rendered as a key-value pair in the webhook.
     */
    public readonly headers!: pulumi.Output<outputs.networks.WebhooksPayloadTemplatesHeader[]>;
    /**
     * A file containing the liquid template used with the webhook headers.
     */
    public readonly headersFile!: pulumi.Output<string>;
    /**
     * The name of the payload template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Webhook payload template Id
     */
    public readonly payloadTemplateId!: pulumi.Output<string>;
    /**
     * Information on which entities have access to the template
     */
    public /*out*/ readonly sharing!: pulumi.Output<outputs.networks.WebhooksPayloadTemplatesSharing>;
    /**
     * The type of the payload template
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a WebhooksPayloadTemplates resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhooksPayloadTemplatesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhooksPayloadTemplatesArgs | WebhooksPayloadTemplatesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhooksPayloadTemplatesState | undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["bodyFile"] = state ? state.bodyFile : undefined;
            resourceInputs["headers"] = state ? state.headers : undefined;
            resourceInputs["headersFile"] = state ? state.headersFile : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["payloadTemplateId"] = state ? state.payloadTemplateId : undefined;
            resourceInputs["sharing"] = state ? state.sharing : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as WebhooksPayloadTemplatesArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["bodyFile"] = args ? args.bodyFile : undefined;
            resourceInputs["headers"] = args ? args.headers : undefined;
            resourceInputs["headersFile"] = args ? args.headersFile : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["payloadTemplateId"] = args ? args.payloadTemplateId : undefined;
            resourceInputs["sharing"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebhooksPayloadTemplates.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebhooksPayloadTemplates resources.
 */
export interface WebhooksPayloadTemplatesState {
    /**
     * The body of the payload template, in liquid template
     */
    body?: pulumi.Input<string>;
    /**
     * A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
     */
    bodyFile?: pulumi.Input<string>;
    /**
     * The payload template headers, will be rendered as a key-value pair in the webhook.
     */
    headers?: pulumi.Input<pulumi.Input<inputs.networks.WebhooksPayloadTemplatesHeader>[]>;
    /**
     * A file containing the liquid template used with the webhook headers.
     */
    headersFile?: pulumi.Input<string>;
    /**
     * The name of the payload template
     */
    name?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * Webhook payload template Id
     */
    payloadTemplateId?: pulumi.Input<string>;
    /**
     * Information on which entities have access to the template
     */
    sharing?: pulumi.Input<inputs.networks.WebhooksPayloadTemplatesSharing>;
    /**
     * The type of the payload template
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebhooksPayloadTemplates resource.
 */
export interface WebhooksPayloadTemplatesArgs {
    /**
     * The body of the payload template, in liquid template
     */
    body?: pulumi.Input<string>;
    /**
     * A file containing liquid template used for the body of the webhook message. Either *body* or *bodyFile* must be specified.
     */
    bodyFile?: pulumi.Input<string>;
    /**
     * The payload template headers, will be rendered as a key-value pair in the webhook.
     */
    headers?: pulumi.Input<pulumi.Input<inputs.networks.WebhooksPayloadTemplatesHeader>[]>;
    /**
     * A file containing the liquid template used with the webhook headers.
     */
    headersFile?: pulumi.Input<string>;
    /**
     * The name of the payload template
     */
    name?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * Webhook payload template Id
     */
    payloadTemplateId?: pulumi.Input<string>;
}
