// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/wirelessRfProfiles:WirelessRfProfiles example "network_id,rf_profile_id"
 * ```
 */
export class WirelessRfProfiles extends pulumi.CustomResource {
    /**
     * Get an existing WirelessRfProfiles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessRfProfilesState, opts?: pulumi.CustomResourceOptions): WirelessRfProfiles {
        return new WirelessRfProfiles(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/wirelessRfProfiles:WirelessRfProfiles';

    /**
     * Returns true if the given object is an instance of WirelessRfProfiles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessRfProfiles {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessRfProfiles.__pulumiType;
    }

    /**
     * Settings that will be enabled if selectionType is set to 'ap'.
     */
    public readonly apBandSettings!: pulumi.Output<outputs.networks.WirelessRfProfilesApBandSettings>;
    /**
     * Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
     */
    public readonly bandSelectionType!: pulumi.Output<string>;
    /**
     * Steers client to best available access point. Can be either true or false. Defaults to true.
     */
    public readonly clientBalancingEnabled!: pulumi.Output<boolean>;
    /**
     * Settings related to 5Ghz band
     */
    public readonly fiveGhzSettings!: pulumi.Output<outputs.networks.WirelessRfProfilesFiveGhzSettings>;
    /**
     * Flex radio settings.
     */
    public readonly flexRadios!: pulumi.Output<outputs.networks.WirelessRfProfilesFlexRadios | undefined>;
    /**
     * Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
     */
    public readonly minBitrateType!: pulumi.Output<string>;
    /**
     * The name of the new profile. Must be unique. This param is required on creation.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The network ID of the RF Profile
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Per-SSID radio settings by number.
     */
    public readonly perSsidSettings!: pulumi.Output<outputs.networks.WirelessRfProfilesPerSsidSettings>;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    public readonly rfProfileId!: pulumi.Output<string>;
    /**
     * Settings related to 6Ghz band. Only applicable to networks with 6Ghz capable APs
     */
    public readonly sixGhzSettings!: pulumi.Output<outputs.networks.WirelessRfProfilesSixGhzSettings>;
    /**
     * Settings related to radio transmission.
     */
    public readonly transmission!: pulumi.Output<outputs.networks.WirelessRfProfilesTransmission>;
    /**
     * Settings related to 2.4Ghz band
     */
    public readonly twoFourGhzSettings!: pulumi.Output<outputs.networks.WirelessRfProfilesTwoFourGhzSettings>;

    /**
     * Create a WirelessRfProfiles resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelessRfProfilesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessRfProfilesArgs | WirelessRfProfilesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessRfProfilesState | undefined;
            resourceInputs["apBandSettings"] = state ? state.apBandSettings : undefined;
            resourceInputs["bandSelectionType"] = state ? state.bandSelectionType : undefined;
            resourceInputs["clientBalancingEnabled"] = state ? state.clientBalancingEnabled : undefined;
            resourceInputs["fiveGhzSettings"] = state ? state.fiveGhzSettings : undefined;
            resourceInputs["flexRadios"] = state ? state.flexRadios : undefined;
            resourceInputs["minBitrateType"] = state ? state.minBitrateType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["perSsidSettings"] = state ? state.perSsidSettings : undefined;
            resourceInputs["rfProfileId"] = state ? state.rfProfileId : undefined;
            resourceInputs["sixGhzSettings"] = state ? state.sixGhzSettings : undefined;
            resourceInputs["transmission"] = state ? state.transmission : undefined;
            resourceInputs["twoFourGhzSettings"] = state ? state.twoFourGhzSettings : undefined;
        } else {
            const args = argsOrState as WirelessRfProfilesArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["apBandSettings"] = args ? args.apBandSettings : undefined;
            resourceInputs["bandSelectionType"] = args ? args.bandSelectionType : undefined;
            resourceInputs["clientBalancingEnabled"] = args ? args.clientBalancingEnabled : undefined;
            resourceInputs["fiveGhzSettings"] = args ? args.fiveGhzSettings : undefined;
            resourceInputs["flexRadios"] = args ? args.flexRadios : undefined;
            resourceInputs["minBitrateType"] = args ? args.minBitrateType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["perSsidSettings"] = args ? args.perSsidSettings : undefined;
            resourceInputs["rfProfileId"] = args ? args.rfProfileId : undefined;
            resourceInputs["sixGhzSettings"] = args ? args.sixGhzSettings : undefined;
            resourceInputs["transmission"] = args ? args.transmission : undefined;
            resourceInputs["twoFourGhzSettings"] = args ? args.twoFourGhzSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessRfProfiles.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessRfProfiles resources.
 */
export interface WirelessRfProfilesState {
    /**
     * Settings that will be enabled if selectionType is set to 'ap'.
     */
    apBandSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesApBandSettings>;
    /**
     * Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
     */
    bandSelectionType?: pulumi.Input<string>;
    /**
     * Steers client to best available access point. Can be either true or false. Defaults to true.
     */
    clientBalancingEnabled?: pulumi.Input<boolean>;
    /**
     * Settings related to 5Ghz band
     */
    fiveGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesFiveGhzSettings>;
    /**
     * Flex radio settings.
     */
    flexRadios?: pulumi.Input<inputs.networks.WirelessRfProfilesFlexRadios>;
    /**
     * Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
     */
    minBitrateType?: pulumi.Input<string>;
    /**
     * The name of the new profile. Must be unique. This param is required on creation.
     */
    name?: pulumi.Input<string>;
    /**
     * The network ID of the RF Profile
     */
    networkId?: pulumi.Input<string>;
    /**
     * Per-SSID radio settings by number.
     */
    perSsidSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesPerSsidSettings>;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    rfProfileId?: pulumi.Input<string>;
    /**
     * Settings related to 6Ghz band. Only applicable to networks with 6Ghz capable APs
     */
    sixGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesSixGhzSettings>;
    /**
     * Settings related to radio transmission.
     */
    transmission?: pulumi.Input<inputs.networks.WirelessRfProfilesTransmission>;
    /**
     * Settings related to 2.4Ghz band
     */
    twoFourGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesTwoFourGhzSettings>;
}

/**
 * The set of arguments for constructing a WirelessRfProfiles resource.
 */
export interface WirelessRfProfilesArgs {
    /**
     * Settings that will be enabled if selectionType is set to 'ap'.
     */
    apBandSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesApBandSettings>;
    /**
     * Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
     */
    bandSelectionType?: pulumi.Input<string>;
    /**
     * Steers client to best available access point. Can be either true or false. Defaults to true.
     */
    clientBalancingEnabled?: pulumi.Input<boolean>;
    /**
     * Settings related to 5Ghz band
     */
    fiveGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesFiveGhzSettings>;
    /**
     * Flex radio settings.
     */
    flexRadios?: pulumi.Input<inputs.networks.WirelessRfProfilesFlexRadios>;
    /**
     * Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
     */
    minBitrateType?: pulumi.Input<string>;
    /**
     * The name of the new profile. Must be unique. This param is required on creation.
     */
    name?: pulumi.Input<string>;
    /**
     * The network ID of the RF Profile
     */
    networkId: pulumi.Input<string>;
    /**
     * Per-SSID radio settings by number.
     */
    perSsidSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesPerSsidSettings>;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    rfProfileId?: pulumi.Input<string>;
    /**
     * Settings related to 6Ghz band. Only applicable to networks with 6Ghz capable APs
     */
    sixGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesSixGhzSettings>;
    /**
     * Settings related to radio transmission.
     */
    transmission?: pulumi.Input<inputs.networks.WirelessRfProfilesTransmission>;
    /**
     * Settings related to 2.4Ghz band
     */
    twoFourGhzSettings?: pulumi.Input<inputs.networks.WirelessRfProfilesTwoFourGhzSettings>;
}
