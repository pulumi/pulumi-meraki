// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.SwitchStacksRoutingStaticRoutes("example", {
 *     advertiseViaOspfEnabled: false,
 *     name: "My route",
 *     networkId: "string",
 *     nextHopIp: "1.2.3.4",
 *     preferOverOspfRoutesEnabled: false,
 *     subnet: "192.168.1.0/24",
 *     switchStackId: "string",
 * });
 * export const merakiNetworksSwitchStacksRoutingStaticRoutesExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/switchStacksRoutingStaticRoutes:SwitchStacksRoutingStaticRoutes example "network_id,static_route_id,switch_stack_id"
 * ```
 */
export class SwitchStacksRoutingStaticRoutes extends pulumi.CustomResource {
    /**
     * Get an existing SwitchStacksRoutingStaticRoutes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchStacksRoutingStaticRoutesState, opts?: pulumi.CustomResourceOptions): SwitchStacksRoutingStaticRoutes {
        return new SwitchStacksRoutingStaticRoutes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/switchStacksRoutingStaticRoutes:SwitchStacksRoutingStaticRoutes';

    /**
     * Returns true if the given object is an instance of SwitchStacksRoutingStaticRoutes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchStacksRoutingStaticRoutes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchStacksRoutingStaticRoutes.__pulumiType;
    }

    /**
     * Option to advertise static routes via OSPF
     */
    public readonly advertiseViaOspfEnabled!: pulumi.Output<boolean>;
    /**
     * The name or description of the layer 3 static route
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The IP address of the router to which traffic for this destination network should be sent
     */
    public readonly nextHopIp!: pulumi.Output<string>;
    /**
     * Option to prefer static routes over OSPF routes
     */
    public readonly preferOverOspfRoutesEnabled!: pulumi.Output<boolean>;
    /**
     * The identifier of a layer 3 static route
     */
    public readonly staticRouteId!: pulumi.Output<string>;
    /**
     * The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * switchStackId path parameter. Switch stack ID
     */
    public readonly switchStackId!: pulumi.Output<string>;

    /**
     * Create a SwitchStacksRoutingStaticRoutes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchStacksRoutingStaticRoutesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchStacksRoutingStaticRoutesArgs | SwitchStacksRoutingStaticRoutesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchStacksRoutingStaticRoutesState | undefined;
            resourceInputs["advertiseViaOspfEnabled"] = state ? state.advertiseViaOspfEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["nextHopIp"] = state ? state.nextHopIp : undefined;
            resourceInputs["preferOverOspfRoutesEnabled"] = state ? state.preferOverOspfRoutesEnabled : undefined;
            resourceInputs["staticRouteId"] = state ? state.staticRouteId : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["switchStackId"] = state ? state.switchStackId : undefined;
        } else {
            const args = argsOrState as SwitchStacksRoutingStaticRoutesArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.switchStackId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'switchStackId'");
            }
            resourceInputs["advertiseViaOspfEnabled"] = args ? args.advertiseViaOspfEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["nextHopIp"] = args ? args.nextHopIp : undefined;
            resourceInputs["preferOverOspfRoutesEnabled"] = args ? args.preferOverOspfRoutesEnabled : undefined;
            resourceInputs["staticRouteId"] = args ? args.staticRouteId : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["switchStackId"] = args ? args.switchStackId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchStacksRoutingStaticRoutes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchStacksRoutingStaticRoutes resources.
 */
export interface SwitchStacksRoutingStaticRoutesState {
    /**
     * Option to advertise static routes via OSPF
     */
    advertiseViaOspfEnabled?: pulumi.Input<boolean>;
    /**
     * The name or description of the layer 3 static route
     */
    name?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * The IP address of the router to which traffic for this destination network should be sent
     */
    nextHopIp?: pulumi.Input<string>;
    /**
     * Option to prefer static routes over OSPF routes
     */
    preferOverOspfRoutesEnabled?: pulumi.Input<boolean>;
    /**
     * The identifier of a layer 3 static route
     */
    staticRouteId?: pulumi.Input<string>;
    /**
     * The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
     */
    subnet?: pulumi.Input<string>;
    /**
     * switchStackId path parameter. Switch stack ID
     */
    switchStackId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchStacksRoutingStaticRoutes resource.
 */
export interface SwitchStacksRoutingStaticRoutesArgs {
    /**
     * Option to advertise static routes via OSPF
     */
    advertiseViaOspfEnabled?: pulumi.Input<boolean>;
    /**
     * The name or description of the layer 3 static route
     */
    name?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * The IP address of the router to which traffic for this destination network should be sent
     */
    nextHopIp?: pulumi.Input<string>;
    /**
     * Option to prefer static routes over OSPF routes
     */
    preferOverOspfRoutesEnabled?: pulumi.Input<boolean>;
    /**
     * The identifier of a layer 3 static route
     */
    staticRouteId?: pulumi.Input<string>;
    /**
     * The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
     */
    subnet?: pulumi.Input<string>;
    /**
     * switchStackId path parameter. Switch stack ID
     */
    switchStackId: pulumi.Input<string>;
}
