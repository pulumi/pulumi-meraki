// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getPiiPiiKeys({
 *     bluetoothMac: "string",
 *     email: "string",
 *     imei: "string",
 *     mac: "string",
 *     networkId: "string",
 *     serial: "string",
 *     username: "string",
 * });
 * export const merakiNetworksPiiPiiKeysExample = example.then(example => example.item);
 * ```
 */
export function getPiiPiiKeys(args: GetPiiPiiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetPiiPiiKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getPiiPiiKeys:getPiiPiiKeys", {
        "bluetoothMac": args.bluetoothMac,
        "email": args.email,
        "imei": args.imei,
        "mac": args.mac,
        "networkId": args.networkId,
        "serial": args.serial,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getPiiPiiKeys.
 */
export interface GetPiiPiiKeysArgs {
    /**
     * bluetoothMac query parameter. The MAC of a Bluetooth client
     */
    bluetoothMac?: string;
    /**
     * email query parameter. The email of a network user account or a Systems Manager device
     */
    email?: string;
    /**
     * imei query parameter. The IMEI of a Systems Manager device
     */
    imei?: string;
    /**
     * mac query parameter. The MAC of a network client device or a Systems Manager device
     */
    mac?: string;
    /**
     * networkId path parameter. Network ID
     */
    networkId: string;
    /**
     * serial query parameter. The serial of a Systems Manager device
     */
    serial?: string;
    /**
     * username query parameter. The username of a Systems Manager user
     */
    username?: string;
}

/**
 * A collection of values returned by getPiiPiiKeys.
 */
export interface GetPiiPiiKeysResult {
    /**
     * bluetoothMac query parameter. The MAC of a Bluetooth client
     */
    readonly bluetoothMac?: string;
    /**
     * email query parameter. The email of a network user account or a Systems Manager device
     */
    readonly email?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * imei query parameter. The IMEI of a Systems Manager device
     */
    readonly imei?: string;
    readonly item: outputs.networks.GetPiiPiiKeysItem;
    /**
     * mac query parameter. The MAC of a network client device or a Systems Manager device
     */
    readonly mac?: string;
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId: string;
    /**
     * serial query parameter. The serial of a Systems Manager device
     */
    readonly serial?: string;
    /**
     * username query parameter. The username of a Systems Manager user
     */
    readonly username?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getPiiPiiKeys({
 *     bluetoothMac: "string",
 *     email: "string",
 *     imei: "string",
 *     mac: "string",
 *     networkId: "string",
 *     serial: "string",
 *     username: "string",
 * });
 * export const merakiNetworksPiiPiiKeysExample = example.then(example => example.item);
 * ```
 */
export function getPiiPiiKeysOutput(args: GetPiiPiiKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPiiPiiKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getPiiPiiKeys:getPiiPiiKeys", {
        "bluetoothMac": args.bluetoothMac,
        "email": args.email,
        "imei": args.imei,
        "mac": args.mac,
        "networkId": args.networkId,
        "serial": args.serial,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getPiiPiiKeys.
 */
export interface GetPiiPiiKeysOutputArgs {
    /**
     * bluetoothMac query parameter. The MAC of a Bluetooth client
     */
    bluetoothMac?: pulumi.Input<string>;
    /**
     * email query parameter. The email of a network user account or a Systems Manager device
     */
    email?: pulumi.Input<string>;
    /**
     * imei query parameter. The IMEI of a Systems Manager device
     */
    imei?: pulumi.Input<string>;
    /**
     * mac query parameter. The MAC of a network client device or a Systems Manager device
     */
    mac?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * serial query parameter. The serial of a Systems Manager device
     */
    serial?: pulumi.Input<string>;
    /**
     * username query parameter. The username of a Systems Manager user
     */
    username?: pulumi.Input<string>;
}
