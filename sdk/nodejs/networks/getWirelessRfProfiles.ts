// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getWirelessRfProfiles({
 *     includeTemplateProfiles: false,
 *     networkId: "string",
 * });
 * export const merakiNetworksWirelessRfProfilesExample = example.then(example => example.item);
 * ```
 */
export function getWirelessRfProfiles(args?: GetWirelessRfProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessRfProfilesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", {
        "includeTemplateProfiles": args.includeTemplateProfiles,
        "networkId": args.networkId,
        "rfProfileId": args.rfProfileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWirelessRfProfiles.
 */
export interface GetWirelessRfProfilesArgs {
    /**
     * includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
     */
    includeTemplateProfiles?: boolean;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: string;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    rfProfileId?: string;
}

/**
 * A collection of values returned by getWirelessRfProfiles.
 */
export interface GetWirelessRfProfilesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
     */
    readonly includeTemplateProfiles?: boolean;
    readonly item: outputs.networks.GetWirelessRfProfilesItem;
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId?: string;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    readonly rfProfileId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getWirelessRfProfiles({
 *     includeTemplateProfiles: false,
 *     networkId: "string",
 * });
 * export const merakiNetworksWirelessRfProfilesExample = example.then(example => example.item);
 * ```
 */
export function getWirelessRfProfilesOutput(args?: GetWirelessRfProfilesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWirelessRfProfilesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", {
        "includeTemplateProfiles": args.includeTemplateProfiles,
        "networkId": args.networkId,
        "rfProfileId": args.rfProfileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWirelessRfProfiles.
 */
export interface GetWirelessRfProfilesOutputArgs {
    /**
     * includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
     */
    includeTemplateProfiles?: pulumi.Input<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * rfProfileId path parameter. Rf profile ID
     */
    rfProfileId?: pulumi.Input<string>;
}
