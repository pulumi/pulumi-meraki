// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.SwitchDhcpServerPolicyArpInspectionTrustedServers("example", {
 *     ipv4: {
 *         address: "1.2.3.4",
 *     },
 *     mac: "00:11:22:33:44:55",
 *     networkId: "string",
 *     vlan: 100,
 * });
 * export const merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/switchDhcpServerPolicyArpInspectionTrustedServers:SwitchDhcpServerPolicyArpInspectionTrustedServers example "network_id"
 * ```
 */
export class SwitchDhcpServerPolicyArpInspectionTrustedServers extends pulumi.CustomResource {
    /**
     * Get an existing SwitchDhcpServerPolicyArpInspectionTrustedServers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchDhcpServerPolicyArpInspectionTrustedServersState, opts?: pulumi.CustomResourceOptions): SwitchDhcpServerPolicyArpInspectionTrustedServers {
        return new SwitchDhcpServerPolicyArpInspectionTrustedServers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/switchDhcpServerPolicyArpInspectionTrustedServers:SwitchDhcpServerPolicyArpInspectionTrustedServers';

    /**
     * Returns true if the given object is an instance of SwitchDhcpServerPolicyArpInspectionTrustedServers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchDhcpServerPolicyArpInspectionTrustedServers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchDhcpServerPolicyArpInspectionTrustedServers.__pulumiType;
    }

    /**
     * IPv4 attributes of the trusted server.
     */
    declare public readonly ipv4: pulumi.Output<outputs.networks.SwitchDhcpServerPolicyArpInspectionTrustedServersIpv4>;
    /**
     * Mac address of the trusted server.
     */
    declare public readonly mac: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * ID of the trusted server.
     */
    declare public readonly trustedServerId: pulumi.Output<string>;
    /**
     * Vlan ID of the trusted server.
     */
    declare public readonly vlan: pulumi.Output<number>;

    /**
     * Create a SwitchDhcpServerPolicyArpInspectionTrustedServers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchDhcpServerPolicyArpInspectionTrustedServersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchDhcpServerPolicyArpInspectionTrustedServersArgs | SwitchDhcpServerPolicyArpInspectionTrustedServersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchDhcpServerPolicyArpInspectionTrustedServersState | undefined;
            resourceInputs["ipv4"] = state?.ipv4;
            resourceInputs["mac"] = state?.mac;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["trustedServerId"] = state?.trustedServerId;
            resourceInputs["vlan"] = state?.vlan;
        } else {
            const args = argsOrState as SwitchDhcpServerPolicyArpInspectionTrustedServersArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["ipv4"] = args?.ipv4;
            resourceInputs["mac"] = args?.mac;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["trustedServerId"] = args?.trustedServerId;
            resourceInputs["vlan"] = args?.vlan;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchDhcpServerPolicyArpInspectionTrustedServers.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchDhcpServerPolicyArpInspectionTrustedServers resources.
 */
export interface SwitchDhcpServerPolicyArpInspectionTrustedServersState {
    /**
     * IPv4 attributes of the trusted server.
     */
    ipv4?: pulumi.Input<inputs.networks.SwitchDhcpServerPolicyArpInspectionTrustedServersIpv4>;
    /**
     * Mac address of the trusted server.
     */
    mac?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * ID of the trusted server.
     */
    trustedServerId?: pulumi.Input<string>;
    /**
     * Vlan ID of the trusted server.
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SwitchDhcpServerPolicyArpInspectionTrustedServers resource.
 */
export interface SwitchDhcpServerPolicyArpInspectionTrustedServersArgs {
    /**
     * IPv4 attributes of the trusted server.
     */
    ipv4?: pulumi.Input<inputs.networks.SwitchDhcpServerPolicyArpInspectionTrustedServersIpv4>;
    /**
     * Mac address of the trusted server.
     */
    mac?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * ID of the trusted server.
     */
    trustedServerId?: pulumi.Input<string>;
    /**
     * Vlan ID of the trusted server.
     */
    vlan?: pulumi.Input<number>;
}
