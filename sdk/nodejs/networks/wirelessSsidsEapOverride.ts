// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/wirelessSsidsEapOverride:WirelessSsidsEapOverride example "network_id,number"
 * ```
 */
export class WirelessSsidsEapOverride extends pulumi.CustomResource {
    /**
     * Get an existing WirelessSsidsEapOverride resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessSsidsEapOverrideState, opts?: pulumi.CustomResourceOptions): WirelessSsidsEapOverride {
        return new WirelessSsidsEapOverride(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/wirelessSsidsEapOverride:WirelessSsidsEapOverride';

    /**
     * Returns true if the given object is an instance of WirelessSsidsEapOverride.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessSsidsEapOverride {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessSsidsEapOverride.__pulumiType;
    }

    /**
     * EAPOL Key settings.
     */
    declare public readonly eapolKey: pulumi.Output<outputs.networks.WirelessSsidsEapOverrideEapolKey>;
    /**
     * EAP settings for identity requests.
     */
    declare public readonly identity: pulumi.Output<outputs.networks.WirelessSsidsEapOverrideIdentity>;
    /**
     * Maximum number of general EAP retries.
     */
    declare public readonly maxRetries: pulumi.Output<number>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * number path parameter.
     */
    declare public readonly number: pulumi.Output<string>;
    /**
     * General EAP timeout in seconds.
     */
    declare public readonly timeout: pulumi.Output<number>;

    /**
     * Create a WirelessSsidsEapOverride resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelessSsidsEapOverrideArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessSsidsEapOverrideArgs | WirelessSsidsEapOverrideState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessSsidsEapOverrideState | undefined;
            resourceInputs["eapolKey"] = state?.eapolKey;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["maxRetries"] = state?.maxRetries;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["number"] = state?.number;
            resourceInputs["timeout"] = state?.timeout;
        } else {
            const args = argsOrState as WirelessSsidsEapOverrideArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.number === undefined && !opts.urn) {
                throw new Error("Missing required property 'number'");
            }
            resourceInputs["eapolKey"] = args?.eapolKey;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["maxRetries"] = args?.maxRetries;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["number"] = args?.number;
            resourceInputs["timeout"] = args?.timeout;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessSsidsEapOverride.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessSsidsEapOverride resources.
 */
export interface WirelessSsidsEapOverrideState {
    /**
     * EAPOL Key settings.
     */
    eapolKey?: pulumi.Input<inputs.networks.WirelessSsidsEapOverrideEapolKey>;
    /**
     * EAP settings for identity requests.
     */
    identity?: pulumi.Input<inputs.networks.WirelessSsidsEapOverrideIdentity>;
    /**
     * Maximum number of general EAP retries.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number?: pulumi.Input<string>;
    /**
     * General EAP timeout in seconds.
     */
    timeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a WirelessSsidsEapOverride resource.
 */
export interface WirelessSsidsEapOverrideArgs {
    /**
     * EAPOL Key settings.
     */
    eapolKey?: pulumi.Input<inputs.networks.WirelessSsidsEapOverrideEapolKey>;
    /**
     * EAP settings for identity requests.
     */
    identity?: pulumi.Input<inputs.networks.WirelessSsidsEapOverrideIdentity>;
    /**
     * Maximum number of general EAP retries.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number: pulumi.Input<string>;
    /**
     * General EAP timeout in seconds.
     */
    timeout?: pulumi.Input<number>;
}
