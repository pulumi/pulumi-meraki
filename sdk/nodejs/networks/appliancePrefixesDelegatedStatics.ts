// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.networks.AppliancePrefixesDelegatedStatics("example", {
 *     description: "Prefix on WAN 1 of Long Island Office network",
 *     networkId: "string",
 *     origin: {
 *         interfaces: ["wan1"],
 *         type: "internet",
 *     },
 *     prefix: "2001:db8:3c4d:15::/64",
 * });
 * export const merakiNetworksAppliancePrefixesDelegatedStaticsExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics example "network_id,static_delegated_prefix_id"
 * ```
 */
export class AppliancePrefixesDelegatedStatics extends pulumi.CustomResource {
    /**
     * Get an existing AppliancePrefixesDelegatedStatics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppliancePrefixesDelegatedStaticsState, opts?: pulumi.CustomResourceOptions): AppliancePrefixesDelegatedStatics {
        return new AppliancePrefixesDelegatedStatics(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/appliancePrefixesDelegatedStatics:AppliancePrefixesDelegatedStatics';

    /**
     * Returns true if the given object is an instance of AppliancePrefixesDelegatedStatics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppliancePrefixesDelegatedStatics {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppliancePrefixesDelegatedStatics.__pulumiType;
    }

    /**
     * Prefix creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Identifying description for the prefix.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * networkId path parameter. Network ID
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * WAN1/WAN2/Independent prefix.
     */
    public readonly origin!: pulumi.Output<outputs.networks.AppliancePrefixesDelegatedStaticsOrigin>;
    /**
     * IPv6 prefix/prefix length.
     */
    public readonly prefix!: pulumi.Output<string>;
    /**
     * Static delegated prefix id.
     */
    public readonly staticDelegatedPrefixId!: pulumi.Output<string>;
    /**
     * Prefix Updated time.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a AppliancePrefixesDelegatedStatics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppliancePrefixesDelegatedStaticsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppliancePrefixesDelegatedStaticsArgs | AppliancePrefixesDelegatedStaticsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppliancePrefixesDelegatedStaticsState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["staticDelegatedPrefixId"] = state ? state.staticDelegatedPrefixId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as AppliancePrefixesDelegatedStaticsArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["staticDelegatedPrefixId"] = args ? args.staticDelegatedPrefixId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppliancePrefixesDelegatedStatics.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppliancePrefixesDelegatedStatics resources.
 */
export interface AppliancePrefixesDelegatedStaticsState {
    /**
     * Prefix creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Identifying description for the prefix.
     */
    description?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * WAN1/WAN2/Independent prefix.
     */
    origin?: pulumi.Input<inputs.networks.AppliancePrefixesDelegatedStaticsOrigin>;
    /**
     * IPv6 prefix/prefix length.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Static delegated prefix id.
     */
    staticDelegatedPrefixId?: pulumi.Input<string>;
    /**
     * Prefix Updated time.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppliancePrefixesDelegatedStatics resource.
 */
export interface AppliancePrefixesDelegatedStaticsArgs {
    /**
     * Identifying description for the prefix.
     */
    description?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * WAN1/WAN2/Independent prefix.
     */
    origin?: pulumi.Input<inputs.networks.AppliancePrefixesDelegatedStaticsOrigin>;
    /**
     * IPv6 prefix/prefix length.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Static delegated prefix id.
     */
    staticDelegatedPrefixId?: pulumi.Input<string>;
}
