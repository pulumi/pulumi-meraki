// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getEvents({
 *     clientIp: "string",
 *     clientMac: "string",
 *     clientName: "string",
 *     deviceMac: "string",
 *     deviceName: "string",
 *     deviceSerial: "string",
 *     endingBefore: "string",
 *     excludedEventTypes: ["string"],
 *     includedEventTypes: ["string"],
 *     networkId: "string",
 *     perPage: 1,
 *     productType: "string",
 *     smDeviceMac: "string",
 *     smDeviceName: "string",
 *     startingAfter: "string",
 * });
 * export const merakiNetworksEventsExample = example.then(example => example.item);
 * ```
 */
export function getEvents(args: GetEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getEvents:getEvents", {
        "clientIp": args.clientIp,
        "clientMac": args.clientMac,
        "clientName": args.clientName,
        "deviceMac": args.deviceMac,
        "deviceName": args.deviceName,
        "deviceSerial": args.deviceSerial,
        "endingBefore": args.endingBefore,
        "excludedEventTypes": args.excludedEventTypes,
        "includedEventTypes": args.includedEventTypes,
        "networkId": args.networkId,
        "perPage": args.perPage,
        "productType": args.productType,
        "smDeviceMac": args.smDeviceMac,
        "smDeviceName": args.smDeviceName,
        "startingAfter": args.startingAfter,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsArgs {
    /**
     * clientIp query parameter. The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
     */
    clientIp?: string;
    /**
     * clientMac query parameter. The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
     */
    clientMac?: string;
    /**
     * clientName query parameter. The name, or partial name, of the client which the list of events will be filtered with
     */
    clientName?: string;
    /**
     * deviceMac query parameter. The MAC address of the Meraki device which the list of events will be filtered with
     */
    deviceMac?: string;
    /**
     * deviceName query parameter. The name of the Meraki device which the list of events will be filtered with
     */
    deviceName?: string;
    /**
     * deviceSerial query parameter. The serial of the Meraki device which the list of events will be filtered with
     */
    deviceSerial?: string;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: string;
    /**
     * excludedEventTypes query parameter. A list of event types. The returned events will be filtered to exclude events with these types.
     */
    excludedEventTypes?: string[];
    /**
     * includedEventTypes query parameter. A list of event types. The returned events will be filtered to only include events with these types.
     */
    includedEventTypes?: string[];
    /**
     * networkId path parameter. Network ID
     */
    networkId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 10.
     */
    perPage?: number;
    /**
     * productType query parameter. The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
     */
    productType?: string;
    /**
     * smDeviceMac query parameter. The MAC address of the Systems Manager device which the list of events will be filtered with
     */
    smDeviceMac?: string;
    /**
     * smDeviceName query parameter. The name of the Systems Manager device which the list of events will be filtered with
     */
    smDeviceName?: string;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: string;
}

/**
 * A collection of values returned by getEvents.
 */
export interface GetEventsResult {
    /**
     * clientIp query parameter. The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
     */
    readonly clientIp?: string;
    /**
     * clientMac query parameter. The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
     */
    readonly clientMac?: string;
    /**
     * clientName query parameter. The name, or partial name, of the client which the list of events will be filtered with
     */
    readonly clientName?: string;
    /**
     * deviceMac query parameter. The MAC address of the Meraki device which the list of events will be filtered with
     */
    readonly deviceMac?: string;
    /**
     * deviceName query parameter. The name of the Meraki device which the list of events will be filtered with
     */
    readonly deviceName?: string;
    /**
     * deviceSerial query parameter. The serial of the Meraki device which the list of events will be filtered with
     */
    readonly deviceSerial?: string;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly endingBefore?: string;
    /**
     * excludedEventTypes query parameter. A list of event types. The returned events will be filtered to exclude events with these types.
     */
    readonly excludedEventTypes?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * includedEventTypes query parameter. A list of event types. The returned events will be filtered to only include events with these types.
     */
    readonly includedEventTypes?: string[];
    readonly item: outputs.networks.GetEventsItem;
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId: string;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 10.
     */
    readonly perPage?: number;
    /**
     * productType query parameter. The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
     */
    readonly productType?: string;
    /**
     * smDeviceMac query parameter. The MAC address of the Systems Manager device which the list of events will be filtered with
     */
    readonly smDeviceMac?: string;
    /**
     * smDeviceName query parameter. The name of the Systems Manager device which the list of events will be filtered with
     */
    readonly smDeviceName?: string;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    readonly startingAfter?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getEvents({
 *     clientIp: "string",
 *     clientMac: "string",
 *     clientName: "string",
 *     deviceMac: "string",
 *     deviceName: "string",
 *     deviceSerial: "string",
 *     endingBefore: "string",
 *     excludedEventTypes: ["string"],
 *     includedEventTypes: ["string"],
 *     networkId: "string",
 *     perPage: 1,
 *     productType: "string",
 *     smDeviceMac: "string",
 *     smDeviceName: "string",
 *     startingAfter: "string",
 * });
 * export const merakiNetworksEventsExample = example.then(example => example.item);
 * ```
 */
export function getEventsOutput(args: GetEventsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getEvents:getEvents", {
        "clientIp": args.clientIp,
        "clientMac": args.clientMac,
        "clientName": args.clientName,
        "deviceMac": args.deviceMac,
        "deviceName": args.deviceName,
        "deviceSerial": args.deviceSerial,
        "endingBefore": args.endingBefore,
        "excludedEventTypes": args.excludedEventTypes,
        "includedEventTypes": args.includedEventTypes,
        "networkId": args.networkId,
        "perPage": args.perPage,
        "productType": args.productType,
        "smDeviceMac": args.smDeviceMac,
        "smDeviceName": args.smDeviceName,
        "startingAfter": args.startingAfter,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsOutputArgs {
    /**
     * clientIp query parameter. The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
     */
    clientIp?: pulumi.Input<string>;
    /**
     * clientMac query parameter. The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
     */
    clientMac?: pulumi.Input<string>;
    /**
     * clientName query parameter. The name, or partial name, of the client which the list of events will be filtered with
     */
    clientName?: pulumi.Input<string>;
    /**
     * deviceMac query parameter. The MAC address of the Meraki device which the list of events will be filtered with
     */
    deviceMac?: pulumi.Input<string>;
    /**
     * deviceName query parameter. The name of the Meraki device which the list of events will be filtered with
     */
    deviceName?: pulumi.Input<string>;
    /**
     * deviceSerial query parameter. The serial of the Meraki device which the list of events will be filtered with
     */
    deviceSerial?: pulumi.Input<string>;
    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    endingBefore?: pulumi.Input<string>;
    /**
     * excludedEventTypes query parameter. A list of event types. The returned events will be filtered to exclude events with these types.
     */
    excludedEventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * includedEventTypes query parameter. A list of event types. The returned events will be filtered to only include events with these types.
     */
    includedEventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 10.
     */
    perPage?: pulumi.Input<number>;
    /**
     * productType query parameter. The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
     */
    productType?: pulumi.Input<string>;
    /**
     * smDeviceMac query parameter. The MAC address of the Systems Manager device which the list of events will be filtered with
     */
    smDeviceMac?: pulumi.Input<string>;
    /**
     * smDeviceName query parameter. The name of the Systems Manager device which the list of events will be filtered with
     */
    smDeviceName?: pulumi.Input<string>;
    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    startingAfter?: pulumi.Input<string>;
}
