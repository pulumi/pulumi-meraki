// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 */
export function getSensorMqttBrokers(args?: GetSensorMqttBrokersArgs, opts?: pulumi.InvokeOptions): Promise<GetSensorMqttBrokersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", {
        "mqttBrokerId": args.mqttBrokerId,
        "networkId": args.networkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSensorMqttBrokers.
 */
export interface GetSensorMqttBrokersArgs {
    /**
     * mqttBrokerId path parameter. Mqtt broker ID
     */
    mqttBrokerId?: string;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: string;
}

/**
 * A collection of values returned by getSensorMqttBrokers.
 */
export interface GetSensorMqttBrokersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly item: outputs.networks.GetSensorMqttBrokersItem;
    /**
     * Array of ResponseSensorGetNetworkSensorMqttBrokers
     */
    readonly items: outputs.networks.GetSensorMqttBrokersItem[];
    /**
     * mqttBrokerId path parameter. Mqtt broker ID
     */
    readonly mqttBrokerId?: string;
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId?: string;
}
/**
 * ## Example Usage
 */
export function getSensorMqttBrokersOutput(args?: GetSensorMqttBrokersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSensorMqttBrokersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", {
        "mqttBrokerId": args.mqttBrokerId,
        "networkId": args.networkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSensorMqttBrokers.
 */
export interface GetSensorMqttBrokersOutputArgs {
    /**
     * mqttBrokerId path parameter. Mqtt broker ID
     */
    mqttBrokerId?: pulumi.Input<string>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
}
