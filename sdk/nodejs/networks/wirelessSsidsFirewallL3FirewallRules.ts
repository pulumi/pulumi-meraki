// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules example "network_id,number"
 * ```
 */
export class WirelessSsidsFirewallL3FirewallRules extends pulumi.CustomResource {
    /**
     * Get an existing WirelessSsidsFirewallL3FirewallRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessSsidsFirewallL3FirewallRulesState, opts?: pulumi.CustomResourceOptions): WirelessSsidsFirewallL3FirewallRules {
        return new WirelessSsidsFirewallL3FirewallRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules';

    /**
     * Returns true if the given object is an instance of WirelessSsidsFirewallL3FirewallRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessSsidsFirewallL3FirewallRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessSsidsFirewallL3FirewallRules.__pulumiType;
    }

    /**
     * Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
     */
    public readonly allowLanAccess!: pulumi.Output<boolean | undefined>;
    /**
     * networkId path parameter. Network ID
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * number path parameter.
     */
    public readonly number!: pulumi.Output<string>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    public readonly rules!: pulumi.Output<outputs.networks.WirelessSsidsFirewallL3FirewallRulesRule[]>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    public readonly rulesResponses!: pulumi.Output<outputs.networks.WirelessSsidsFirewallL3FirewallRulesRulesResponse[]>;

    /**
     * Create a WirelessSsidsFirewallL3FirewallRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelessSsidsFirewallL3FirewallRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessSsidsFirewallL3FirewallRulesArgs | WirelessSsidsFirewallL3FirewallRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessSsidsFirewallL3FirewallRulesState | undefined;
            resourceInputs["allowLanAccess"] = state ? state.allowLanAccess : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["number"] = state ? state.number : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["rulesResponses"] = state ? state.rulesResponses : undefined;
        } else {
            const args = argsOrState as WirelessSsidsFirewallL3FirewallRulesArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.number === undefined) && !opts.urn) {
                throw new Error("Missing required property 'number'");
            }
            resourceInputs["allowLanAccess"] = args ? args.allowLanAccess : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["number"] = args ? args.number : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["rulesResponses"] = args ? args.rulesResponses : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessSsidsFirewallL3FirewallRules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessSsidsFirewallL3FirewallRules resources.
 */
export interface WirelessSsidsFirewallL3FirewallRulesState {
    /**
     * Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
     */
    allowLanAccess?: pulumi.Input<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number?: pulumi.Input<string>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    rules?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsFirewallL3FirewallRulesRule>[]>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    rulesResponses?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsFirewallL3FirewallRulesRulesResponse>[]>;
}

/**
 * The set of arguments for constructing a WirelessSsidsFirewallL3FirewallRules resource.
 */
export interface WirelessSsidsFirewallL3FirewallRulesArgs {
    /**
     * Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
     */
    allowLanAccess?: pulumi.Input<boolean>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * number path parameter.
     */
    number: pulumi.Input<string>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    rules?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsFirewallL3FirewallRulesRule>[]>;
    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     */
    rulesResponses?: pulumi.Input<pulumi.Input<inputs.networks.WirelessSsidsFirewallL3FirewallRulesRulesResponse>[]>;
}
