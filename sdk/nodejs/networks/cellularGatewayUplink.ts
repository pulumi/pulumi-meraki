// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:networks/cellularGatewayUplink:CellularGatewayUplink example "network_id"
 * ```
 */
export class CellularGatewayUplink extends pulumi.CustomResource {
    /**
     * Get an existing CellularGatewayUplink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CellularGatewayUplinkState, opts?: pulumi.CustomResourceOptions): CellularGatewayUplink {
        return new CellularGatewayUplink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:networks/cellularGatewayUplink:CellularGatewayUplink';

    /**
     * Returns true if the given object is an instance of CellularGatewayUplink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CellularGatewayUplink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CellularGatewayUplink.__pulumiType;
    }

    /**
     * The bandwidth settings for the 'cellular' uplink
     */
    declare public readonly bandwidthLimits: pulumi.Output<outputs.networks.CellularGatewayUplinkBandwidthLimits>;
    /**
     * networkId path parameter. Network ID
     */
    declare public readonly networkId: pulumi.Output<string>;

    /**
     * Create a CellularGatewayUplink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CellularGatewayUplinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CellularGatewayUplinkArgs | CellularGatewayUplinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CellularGatewayUplinkState | undefined;
            resourceInputs["bandwidthLimits"] = state?.bandwidthLimits;
            resourceInputs["networkId"] = state?.networkId;
        } else {
            const args = argsOrState as CellularGatewayUplinkArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["bandwidthLimits"] = args?.bandwidthLimits;
            resourceInputs["networkId"] = args?.networkId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CellularGatewayUplink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CellularGatewayUplink resources.
 */
export interface CellularGatewayUplinkState {
    /**
     * The bandwidth settings for the 'cellular' uplink
     */
    bandwidthLimits?: pulumi.Input<inputs.networks.CellularGatewayUplinkBandwidthLimits>;
    /**
     * networkId path parameter. Network ID
     */
    networkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CellularGatewayUplink resource.
 */
export interface CellularGatewayUplinkArgs {
    /**
     * The bandwidth settings for the 'cellular' uplink
     */
    bandwidthLimits?: pulumi.Input<inputs.networks.CellularGatewayUplinkBandwidthLimits>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
}
