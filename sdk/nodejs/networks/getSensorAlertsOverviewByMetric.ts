// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getSensorAlertsOverviewByMetric({
 *     interval: 1,
 *     networkId: "string",
 *     t0: "string",
 *     t1: "string",
 *     timespan: 1,
 * });
 * export const merakiNetworksSensorAlertsOverviewByMetricExample = example.then(example => example.items);
 * ```
 */
export function getSensorAlertsOverviewByMetric(args: GetSensorAlertsOverviewByMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetSensorAlertsOverviewByMetricResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", {
        "interval": args.interval,
        "networkId": args.networkId,
        "t0": args.t0,
        "t1": args.t1,
        "timespan": args.timespan,
    }, opts);
}

/**
 * A collection of arguments for invoking getSensorAlertsOverviewByMetric.
 */
export interface GetSensorAlertsOverviewByMetricArgs {
    /**
     * interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
     */
    interval?: number;
    /**
     * networkId path parameter. Network ID
     */
    networkId: string;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
     */
    t0?: string;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    t1?: string;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     */
    timespan?: number;
}

/**
 * A collection of values returned by getSensorAlertsOverviewByMetric.
 */
export interface GetSensorAlertsOverviewByMetricResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
     */
    readonly interval?: number;
    /**
     * Array of ResponseSensorGetNetworkSensorAlertsOverviewByMetric
     */
    readonly items: outputs.networks.GetSensorAlertsOverviewByMetricItem[];
    /**
     * networkId path parameter. Network ID
     */
    readonly networkId: string;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
     */
    readonly t0?: string;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    readonly t1?: string;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     */
    readonly timespan?: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.networks.getSensorAlertsOverviewByMetric({
 *     interval: 1,
 *     networkId: "string",
 *     t0: "string",
 *     t1: "string",
 *     timespan: 1,
 * });
 * export const merakiNetworksSensorAlertsOverviewByMetricExample = example.then(example => example.items);
 * ```
 */
export function getSensorAlertsOverviewByMetricOutput(args: GetSensorAlertsOverviewByMetricOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSensorAlertsOverviewByMetricResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", {
        "interval": args.interval,
        "networkId": args.networkId,
        "t0": args.t0,
        "t1": args.t1,
        "timespan": args.timespan,
    }, opts);
}

/**
 * A collection of arguments for invoking getSensorAlertsOverviewByMetric.
 */
export interface GetSensorAlertsOverviewByMetricOutputArgs {
    /**
     * interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
     */
    interval?: pulumi.Input<number>;
    /**
     * networkId path parameter. Network ID
     */
    networkId: pulumi.Input<string>;
    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
     */
    t0?: pulumi.Input<string>;
    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    t1?: pulumi.Input<string>;
    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     */
    timespan?: pulumi.Input<number>;
}
