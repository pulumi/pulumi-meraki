// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIdentitiesMeResult } from "./getIdentitiesMe";
export const getIdentitiesMe: typeof import("./getIdentitiesMe").getIdentitiesMe = null as any;
export const getIdentitiesMeOutput: typeof import("./getIdentitiesMe").getIdentitiesMeOutput = null as any;
utilities.lazyLoad(exports, ["getIdentitiesMe","getIdentitiesMeOutput"], () => require("./getIdentitiesMe"));

export { GetLicensingSubscriptionEntitlementsArgs, GetLicensingSubscriptionEntitlementsResult, GetLicensingSubscriptionEntitlementsOutputArgs } from "./getLicensingSubscriptionEntitlements";
export const getLicensingSubscriptionEntitlements: typeof import("./getLicensingSubscriptionEntitlements").getLicensingSubscriptionEntitlements = null as any;
export const getLicensingSubscriptionEntitlementsOutput: typeof import("./getLicensingSubscriptionEntitlements").getLicensingSubscriptionEntitlementsOutput = null as any;
utilities.lazyLoad(exports, ["getLicensingSubscriptionEntitlements","getLicensingSubscriptionEntitlementsOutput"], () => require("./getLicensingSubscriptionEntitlements"));

export { GetLicensingSubscriptionSubscriptionsArgs, GetLicensingSubscriptionSubscriptionsResult, GetLicensingSubscriptionSubscriptionsOutputArgs } from "./getLicensingSubscriptionSubscriptions";
export const getLicensingSubscriptionSubscriptions: typeof import("./getLicensingSubscriptionSubscriptions").getLicensingSubscriptionSubscriptions = null as any;
export const getLicensingSubscriptionSubscriptionsOutput: typeof import("./getLicensingSubscriptionSubscriptions").getLicensingSubscriptionSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getLicensingSubscriptionSubscriptions","getLicensingSubscriptionSubscriptionsOutput"], () => require("./getLicensingSubscriptionSubscriptions"));

export { GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs, GetLicensingSubscriptionSubscriptionsComplianceStatusesResult, GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs } from "./getLicensingSubscriptionSubscriptionsComplianceStatuses";
export const getLicensingSubscriptionSubscriptionsComplianceStatuses: typeof import("./getLicensingSubscriptionSubscriptionsComplianceStatuses").getLicensingSubscriptionSubscriptionsComplianceStatuses = null as any;
export const getLicensingSubscriptionSubscriptionsComplianceStatusesOutput: typeof import("./getLicensingSubscriptionSubscriptionsComplianceStatuses").getLicensingSubscriptionSubscriptionsComplianceStatusesOutput = null as any;
utilities.lazyLoad(exports, ["getLicensingSubscriptionSubscriptionsComplianceStatuses","getLicensingSubscriptionSubscriptionsComplianceStatusesOutput"], () => require("./getLicensingSubscriptionSubscriptionsComplianceStatuses"));

export { LicensingSubscriptionSubscriptionsBindArgs, LicensingSubscriptionSubscriptionsBindState } from "./licensingSubscriptionSubscriptionsBind";
export type LicensingSubscriptionSubscriptionsBind = import("./licensingSubscriptionSubscriptionsBind").LicensingSubscriptionSubscriptionsBind;
export const LicensingSubscriptionSubscriptionsBind: typeof import("./licensingSubscriptionSubscriptionsBind").LicensingSubscriptionSubscriptionsBind = null as any;
utilities.lazyLoad(exports, ["LicensingSubscriptionSubscriptionsBind"], () => require("./licensingSubscriptionSubscriptionsBind"));

export { LicensingSubscriptionSubscriptionsClaimArgs, LicensingSubscriptionSubscriptionsClaimState } from "./licensingSubscriptionSubscriptionsClaim";
export type LicensingSubscriptionSubscriptionsClaim = import("./licensingSubscriptionSubscriptionsClaim").LicensingSubscriptionSubscriptionsClaim;
export const LicensingSubscriptionSubscriptionsClaim: typeof import("./licensingSubscriptionSubscriptionsClaim").LicensingSubscriptionSubscriptionsClaim = null as any;
utilities.lazyLoad(exports, ["LicensingSubscriptionSubscriptionsClaim"], () => require("./licensingSubscriptionSubscriptionsClaim"));

export { LicensingSubscriptionSubscriptionsClaimKeyValidateArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateState } from "./licensingSubscriptionSubscriptionsClaimKeyValidate";
export type LicensingSubscriptionSubscriptionsClaimKeyValidate = import("./licensingSubscriptionSubscriptionsClaimKeyValidate").LicensingSubscriptionSubscriptionsClaimKeyValidate;
export const LicensingSubscriptionSubscriptionsClaimKeyValidate: typeof import("./licensingSubscriptionSubscriptionsClaimKeyValidate").LicensingSubscriptionSubscriptionsClaimKeyValidate = null as any;
utilities.lazyLoad(exports, ["LicensingSubscriptionSubscriptionsClaimKeyValidate"], () => require("./licensingSubscriptionSubscriptionsClaimKeyValidate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "meraki:administered/licensingSubscriptionSubscriptionsBind:LicensingSubscriptionSubscriptionsBind":
                return new LicensingSubscriptionSubscriptionsBind(name, <any>undefined, { urn })
            case "meraki:administered/licensingSubscriptionSubscriptionsClaim:LicensingSubscriptionSubscriptionsClaim":
                return new LicensingSubscriptionSubscriptionsClaim(name, <any>undefined, { urn })
            case "meraki:administered/licensingSubscriptionSubscriptionsClaimKeyValidate:LicensingSubscriptionSubscriptionsClaimKeyValidate":
                return new LicensingSubscriptionSubscriptionsClaimKeyValidate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("meraki", "administered/licensingSubscriptionSubscriptionsBind", _module)
pulumi.runtime.registerResourceModule("meraki", "administered/licensingSubscriptionSubscriptionsClaim", _module)
pulumi.runtime.registerResourceModule("meraki", "administered/licensingSubscriptionSubscriptionsClaimKeyValidate", _module)
