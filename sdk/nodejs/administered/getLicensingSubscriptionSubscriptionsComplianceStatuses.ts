// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.administered.getLicensingSubscriptionSubscriptionsComplianceStatuses({
 *     organizationIds: ["string"],
 *     subscriptionIds: ["string"],
 * });
 * export const merakiAdministeredLicensingSubscriptionSubscriptionsComplianceStatusesExample = example.then(example => example.items);
 * ```
 */
export function getLicensingSubscriptionSubscriptionsComplianceStatuses(args?: GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensingSubscriptionSubscriptionsComplianceStatusesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:administered/getLicensingSubscriptionSubscriptionsComplianceStatuses:getLicensingSubscriptionSubscriptionsComplianceStatuses", {
        "organizationIds": args.organizationIds,
        "subscriptionIds": args.subscriptionIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getLicensingSubscriptionSubscriptionsComplianceStatuses.
 */
export interface GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs {
    /**
     * organizationIds query parameter. Organizations to get subscription compliance information for
     */
    organizationIds?: string[];
    /**
     * subscriptionIds query parameter. Subscription ids
     */
    subscriptionIds?: string[];
}

/**
 * A collection of values returned by getLicensingSubscriptionSubscriptionsComplianceStatuses.
 */
export interface GetLicensingSubscriptionSubscriptionsComplianceStatusesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Array of ResponseLicensingGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses
     */
    readonly items: outputs.administered.GetLicensingSubscriptionSubscriptionsComplianceStatusesItem[];
    /**
     * organizationIds query parameter. Organizations to get subscription compliance information for
     */
    readonly organizationIds?: string[];
    /**
     * subscriptionIds query parameter. Subscription ids
     */
    readonly subscriptionIds?: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.administered.getLicensingSubscriptionSubscriptionsComplianceStatuses({
 *     organizationIds: ["string"],
 *     subscriptionIds: ["string"],
 * });
 * export const merakiAdministeredLicensingSubscriptionSubscriptionsComplianceStatusesExample = example.then(example => example.items);
 * ```
 */
export function getLicensingSubscriptionSubscriptionsComplianceStatusesOutput(args?: GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensingSubscriptionSubscriptionsComplianceStatusesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:administered/getLicensingSubscriptionSubscriptionsComplianceStatuses:getLicensingSubscriptionSubscriptionsComplianceStatuses", {
        "organizationIds": args.organizationIds,
        "subscriptionIds": args.subscriptionIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getLicensingSubscriptionSubscriptionsComplianceStatuses.
 */
export interface GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs {
    /**
     * organizationIds query parameter. Organizations to get subscription compliance information for
     */
    organizationIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * subscriptionIds query parameter. Subscription ids
     */
    subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}
