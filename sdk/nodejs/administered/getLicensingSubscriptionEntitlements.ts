// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.administered.getLicensingSubscriptionEntitlements({
 *     skuses: ["string"],
 * });
 * export const merakiAdministeredLicensingSubscriptionEntitlementsExample = example.then(example => example.item);
 * ```
 */
export function getLicensingSubscriptionEntitlements(args?: GetLicensingSubscriptionEntitlementsArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensingSubscriptionEntitlementsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:administered/getLicensingSubscriptionEntitlements:getLicensingSubscriptionEntitlements", {
        "skuses": args.skuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getLicensingSubscriptionEntitlements.
 */
export interface GetLicensingSubscriptionEntitlementsArgs {
    /**
     * skus query parameter. Filter to entitlements with the specified SKUs
     */
    skuses?: string[];
}

/**
 * A collection of values returned by getLicensingSubscriptionEntitlements.
 */
export interface GetLicensingSubscriptionEntitlementsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly item: outputs.administered.GetLicensingSubscriptionEntitlementsItem;
    /**
     * skus query parameter. Filter to entitlements with the specified SKUs
     */
    readonly skuses?: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.administered.getLicensingSubscriptionEntitlements({
 *     skuses: ["string"],
 * });
 * export const merakiAdministeredLicensingSubscriptionEntitlementsExample = example.then(example => example.item);
 * ```
 */
export function getLicensingSubscriptionEntitlementsOutput(args?: GetLicensingSubscriptionEntitlementsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensingSubscriptionEntitlementsResult> {
    return pulumi.output(args).apply((a: any) => getLicensingSubscriptionEntitlements(a, opts))
}

/**
 * A collection of arguments for invoking getLicensingSubscriptionEntitlements.
 */
export interface GetLicensingSubscriptionEntitlementsOutputArgs {
    /**
     * skus query parameter. Filter to entitlements with the specified SKUs
     */
    skuses?: pulumi.Input<pulumi.Input<string>[]>;
}
