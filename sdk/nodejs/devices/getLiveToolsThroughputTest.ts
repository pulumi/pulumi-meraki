// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.devices.getLiveToolsThroughputTest({
 *     serial: "string",
 *     throughputTestId: "string",
 * });
 * export const merakiDevicesLiveToolsThroughputTestExample = example.then(example => example.item);
 * ```
 */
export function getLiveToolsThroughputTest(args: GetLiveToolsThroughputTestArgs, opts?: pulumi.InvokeOptions): Promise<GetLiveToolsThroughputTestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("meraki:devices/getLiveToolsThroughputTest:getLiveToolsThroughputTest", {
        "serial": args.serial,
        "throughputTestId": args.throughputTestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLiveToolsThroughputTest.
 */
export interface GetLiveToolsThroughputTestArgs {
    /**
     * serial path parameter.
     */
    serial: string;
    /**
     * throughputTestId path parameter. Throughput test ID
     */
    throughputTestId: string;
}

/**
 * A collection of values returned by getLiveToolsThroughputTest.
 */
export interface GetLiveToolsThroughputTestResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly item: outputs.devices.GetLiveToolsThroughputTestItem;
    /**
     * serial path parameter.
     */
    readonly serial: string;
    /**
     * throughputTestId path parameter. Throughput test ID
     */
    readonly throughputTestId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = meraki.devices.getLiveToolsThroughputTest({
 *     serial: "string",
 *     throughputTestId: "string",
 * });
 * export const merakiDevicesLiveToolsThroughputTestExample = example.then(example => example.item);
 * ```
 */
export function getLiveToolsThroughputTestOutput(args: GetLiveToolsThroughputTestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLiveToolsThroughputTestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("meraki:devices/getLiveToolsThroughputTest:getLiveToolsThroughputTest", {
        "serial": args.serial,
        "throughputTestId": args.throughputTestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLiveToolsThroughputTest.
 */
export interface GetLiveToolsThroughputTestOutputArgs {
    /**
     * serial path parameter.
     */
    serial: pulumi.Input<string>;
    /**
     * throughputTestId path parameter. Throughput test ID
     */
    throughputTestId: pulumi.Input<string>;
}
