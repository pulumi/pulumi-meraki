// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as meraki from "@pulumi/meraki";
 *
 * const example = new meraki.devices.CameraVideoSettings("example", {
 *     externalRtspEnabled: true,
 *     serial: "string",
 * });
 * export const merakiDevicesCameraVideoSettingsExample = example;
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import meraki:devices/cameraVideoSettings:CameraVideoSettings example "serial"
 * ```
 */
export class CameraVideoSettings extends pulumi.CustomResource {
    /**
     * Get an existing CameraVideoSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CameraVideoSettingsState, opts?: pulumi.CustomResourceOptions): CameraVideoSettings {
        return new CameraVideoSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'meraki:devices/cameraVideoSettings:CameraVideoSettings';

    /**
     * Returns true if the given object is an instance of CameraVideoSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CameraVideoSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CameraVideoSettings.__pulumiType;
    }

    /**
     * Boolean indicating if external rtsp stream is exposed
     */
    declare public readonly externalRtspEnabled: pulumi.Output<boolean>;
    /**
     * External rstp url. Will only be returned if external rtsp stream is exposed
     */
    declare public /*out*/ readonly rtspUrl: pulumi.Output<string>;
    /**
     * serial path parameter.
     */
    declare public readonly serial: pulumi.Output<string>;

    /**
     * Create a CameraVideoSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CameraVideoSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CameraVideoSettingsArgs | CameraVideoSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CameraVideoSettingsState | undefined;
            resourceInputs["externalRtspEnabled"] = state?.externalRtspEnabled;
            resourceInputs["rtspUrl"] = state?.rtspUrl;
            resourceInputs["serial"] = state?.serial;
        } else {
            const args = argsOrState as CameraVideoSettingsArgs | undefined;
            if (args?.serial === undefined && !opts.urn) {
                throw new Error("Missing required property 'serial'");
            }
            resourceInputs["externalRtspEnabled"] = args?.externalRtspEnabled;
            resourceInputs["serial"] = args?.serial;
            resourceInputs["rtspUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CameraVideoSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CameraVideoSettings resources.
 */
export interface CameraVideoSettingsState {
    /**
     * Boolean indicating if external rtsp stream is exposed
     */
    externalRtspEnabled?: pulumi.Input<boolean>;
    /**
     * External rstp url. Will only be returned if external rtsp stream is exposed
     */
    rtspUrl?: pulumi.Input<string>;
    /**
     * serial path parameter.
     */
    serial?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CameraVideoSettings resource.
 */
export interface CameraVideoSettingsArgs {
    /**
     * Boolean indicating if external rtsp stream is exposed
     */
    externalRtspEnabled?: pulumi.Input<boolean>;
    /**
     * serial path parameter.
     */
    serial: pulumi.Input<string>;
}
