// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensesMoveParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensesMoveParametersArgs Empty = new LicensesMoveParametersArgs();

    /**
     * The ID of the organization to move the licenses to
     * 
     */
    @Import(name="destOrganizationId")
    private @Nullable Output<String> destOrganizationId;

    /**
     * @return The ID of the organization to move the licenses to
     * 
     */
    public Optional<Output<String>> destOrganizationId() {
        return Optional.ofNullable(this.destOrganizationId);
    }

    /**
     * A list of IDs of licenses to move to the new organization
     * 
     */
    @Import(name="licenseIds")
    private @Nullable Output<List<String>> licenseIds;

    /**
     * @return A list of IDs of licenses to move to the new organization
     * 
     */
    public Optional<Output<List<String>>> licenseIds() {
        return Optional.ofNullable(this.licenseIds);
    }

    private LicensesMoveParametersArgs() {}

    private LicensesMoveParametersArgs(LicensesMoveParametersArgs $) {
        this.destOrganizationId = $.destOrganizationId;
        this.licenseIds = $.licenseIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensesMoveParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensesMoveParametersArgs $;

        public Builder() {
            $ = new LicensesMoveParametersArgs();
        }

        public Builder(LicensesMoveParametersArgs defaults) {
            $ = new LicensesMoveParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destOrganizationId The ID of the organization to move the licenses to
         * 
         * @return builder
         * 
         */
        public Builder destOrganizationId(@Nullable Output<String> destOrganizationId) {
            $.destOrganizationId = destOrganizationId;
            return this;
        }

        /**
         * @param destOrganizationId The ID of the organization to move the licenses to
         * 
         * @return builder
         * 
         */
        public Builder destOrganizationId(String destOrganizationId) {
            return destOrganizationId(Output.of(destOrganizationId));
        }

        /**
         * @param licenseIds A list of IDs of licenses to move to the new organization
         * 
         * @return builder
         * 
         */
        public Builder licenseIds(@Nullable Output<List<String>> licenseIds) {
            $.licenseIds = licenseIds;
            return this;
        }

        /**
         * @param licenseIds A list of IDs of licenses to move to the new organization
         * 
         * @return builder
         * 
         */
        public Builder licenseIds(List<String> licenseIds) {
            return licenseIds(Output.of(licenseIds));
        }

        /**
         * @param licenseIds A list of IDs of licenses to move to the new organization
         * 
         * @return builder
         * 
         */
        public Builder licenseIds(String... licenseIds) {
            return licenseIds(List.of(licenseIds));
        }

        public LicensesMoveParametersArgs build() {
            return $;
        }
    }

}
