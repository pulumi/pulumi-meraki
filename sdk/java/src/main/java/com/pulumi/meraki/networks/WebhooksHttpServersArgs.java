// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.WebhooksHttpServersPayloadTemplateArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebhooksHttpServersArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhooksHttpServersArgs Empty = new WebhooksHttpServersArgs();

    /**
     * httpServerId path parameter. Http server ID
     * 
     */
    @Import(name="httpServerId")
    private @Nullable Output<String> httpServerId;

    /**
     * @return httpServerId path parameter. Http server ID
     * 
     */
    public Optional<Output<String>> httpServerId() {
        return Optional.ofNullable(this.httpServerId);
    }

    /**
     * A name for easy reference to the HTTP server
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A name for easy reference to the HTTP server
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A Meraki network ID.
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return A Meraki network ID.
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * The payload template to use when posting data to the HTTP server.
     * 
     */
    @Import(name="payloadTemplate")
    private @Nullable Output<WebhooksHttpServersPayloadTemplateArgs> payloadTemplate;

    /**
     * @return The payload template to use when posting data to the HTTP server.
     * 
     */
    public Optional<Output<WebhooksHttpServersPayloadTemplateArgs>> payloadTemplate() {
        return Optional.ofNullable(this.payloadTemplate);
    }

    /**
     * A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
     * 
     */
    @Import(name="sharedSecret")
    private @Nullable Output<String> sharedSecret;

    /**
     * @return A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
     * 
     */
    public Optional<Output<String>> sharedSecret() {
        return Optional.ofNullable(this.sharedSecret);
    }

    /**
     * The URL of the HTTP server.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The URL of the HTTP server.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private WebhooksHttpServersArgs() {}

    private WebhooksHttpServersArgs(WebhooksHttpServersArgs $) {
        this.httpServerId = $.httpServerId;
        this.name = $.name;
        this.networkId = $.networkId;
        this.payloadTemplate = $.payloadTemplate;
        this.sharedSecret = $.sharedSecret;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhooksHttpServersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhooksHttpServersArgs $;

        public Builder() {
            $ = new WebhooksHttpServersArgs();
        }

        public Builder(WebhooksHttpServersArgs defaults) {
            $ = new WebhooksHttpServersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpServerId httpServerId path parameter. Http server ID
         * 
         * @return builder
         * 
         */
        public Builder httpServerId(@Nullable Output<String> httpServerId) {
            $.httpServerId = httpServerId;
            return this;
        }

        /**
         * @param httpServerId httpServerId path parameter. Http server ID
         * 
         * @return builder
         * 
         */
        public Builder httpServerId(String httpServerId) {
            return httpServerId(Output.of(httpServerId));
        }

        /**
         * @param name A name for easy reference to the HTTP server
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name for easy reference to the HTTP server
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId A Meraki network ID.
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId A Meraki network ID.
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param payloadTemplate The payload template to use when posting data to the HTTP server.
         * 
         * @return builder
         * 
         */
        public Builder payloadTemplate(@Nullable Output<WebhooksHttpServersPayloadTemplateArgs> payloadTemplate) {
            $.payloadTemplate = payloadTemplate;
            return this;
        }

        /**
         * @param payloadTemplate The payload template to use when posting data to the HTTP server.
         * 
         * @return builder
         * 
         */
        public Builder payloadTemplate(WebhooksHttpServersPayloadTemplateArgs payloadTemplate) {
            return payloadTemplate(Output.of(payloadTemplate));
        }

        /**
         * @param sharedSecret A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
         * 
         * @return builder
         * 
         */
        public Builder sharedSecret(@Nullable Output<String> sharedSecret) {
            $.sharedSecret = sharedSecret;
            return this;
        }

        /**
         * @param sharedSecret A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
         * 
         * @return builder
         * 
         */
        public Builder sharedSecret(String sharedSecret) {
            return sharedSecret(Output.of(sharedSecret));
        }

        /**
         * @param url The URL of the HTTP server.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL of the HTTP server.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public WebhooksHttpServersArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("WebhooksHttpServersArgs", "networkId");
            }
            return $;
        }
    }

}
