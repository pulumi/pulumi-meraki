// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceSettingsItemDynamicDns;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplianceSettingsItem {
    /**
     * @return Client tracking method of a network
     * 
     */
    private String clientTrackingMethod;
    /**
     * @return Deployment mode of a network
     * 
     */
    private String deploymentMode;
    /**
     * @return Dynamic DNS settings for a network
     * 
     */
    private GetApplianceSettingsItemDynamicDns dynamicDns;

    private GetApplianceSettingsItem() {}
    /**
     * @return Client tracking method of a network
     * 
     */
    public String clientTrackingMethod() {
        return this.clientTrackingMethod;
    }
    /**
     * @return Deployment mode of a network
     * 
     */
    public String deploymentMode() {
        return this.deploymentMode;
    }
    /**
     * @return Dynamic DNS settings for a network
     * 
     */
    public GetApplianceSettingsItemDynamicDns dynamicDns() {
        return this.dynamicDns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceSettingsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientTrackingMethod;
        private String deploymentMode;
        private GetApplianceSettingsItemDynamicDns dynamicDns;
        public Builder() {}
        public Builder(GetApplianceSettingsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientTrackingMethod = defaults.clientTrackingMethod;
    	      this.deploymentMode = defaults.deploymentMode;
    	      this.dynamicDns = defaults.dynamicDns;
        }

        @CustomType.Setter
        public Builder clientTrackingMethod(String clientTrackingMethod) {
            if (clientTrackingMethod == null) {
              throw new MissingRequiredPropertyException("GetApplianceSettingsItem", "clientTrackingMethod");
            }
            this.clientTrackingMethod = clientTrackingMethod;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentMode(String deploymentMode) {
            if (deploymentMode == null) {
              throw new MissingRequiredPropertyException("GetApplianceSettingsItem", "deploymentMode");
            }
            this.deploymentMode = deploymentMode;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicDns(GetApplianceSettingsItemDynamicDns dynamicDns) {
            if (dynamicDns == null) {
              throw new MissingRequiredPropertyException("GetApplianceSettingsItem", "dynamicDns");
            }
            this.dynamicDns = dynamicDns;
            return this;
        }
        public GetApplianceSettingsItem build() {
            final var _resultValue = new GetApplianceSettingsItem();
            _resultValue.clientTrackingMethod = clientTrackingMethod;
            _resultValue.deploymentMode = deploymentMode;
            _resultValue.dynamicDns = dynamicDns;
            return _resultValue;
        }
    }
}
