// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSmProfilesItem {
    /**
     * @return Description of a profile.
     * 
     */
    private String description;
    /**
     * @return ID of a profile.
     * 
     */
    private String id;
    /**
     * @return Name of a profile.
     * 
     */
    private String name;
    /**
     * @return Payloads in the profile.
     * 
     */
    private List<String> payloadTypes;
    /**
     * @return Scope of a profile.
     * 
     */
    private String scope;
    /**
     * @return Tags of a profile.
     * 
     */
    private List<String> tags;

    private GetSmProfilesItem() {}
    /**
     * @return Description of a profile.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of a profile.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of a profile.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Payloads in the profile.
     * 
     */
    public List<String> payloadTypes() {
        return this.payloadTypes;
    }
    /**
     * @return Scope of a profile.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return Tags of a profile.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSmProfilesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String name;
        private List<String> payloadTypes;
        private String scope;
        private List<String> tags;
        public Builder() {}
        public Builder(GetSmProfilesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.payloadTypes = defaults.payloadTypes;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder payloadTypes(List<String> payloadTypes) {
            if (payloadTypes == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "payloadTypes");
            }
            this.payloadTypes = payloadTypes;
            return this;
        }
        public Builder payloadTypes(String... payloadTypes) {
            return payloadTypes(List.of(payloadTypes));
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSmProfilesItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetSmProfilesItem build() {
            final var _resultValue = new GetSmProfilesItem();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.payloadTypes = payloadTypes;
            _resultValue.scope = scope;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
