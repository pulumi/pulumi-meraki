// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UnbindParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnbindParametersArgs Empty = new UnbindParametersArgs();

    /**
     * Optional boolean to retain all the current configs given by the template.
     * 
     */
    @Import(name="retainConfigs")
    private @Nullable Output<Boolean> retainConfigs;

    /**
     * @return Optional boolean to retain all the current configs given by the template.
     * 
     */
    public Optional<Output<Boolean>> retainConfigs() {
        return Optional.ofNullable(this.retainConfigs);
    }

    private UnbindParametersArgs() {}

    private UnbindParametersArgs(UnbindParametersArgs $) {
        this.retainConfigs = $.retainConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnbindParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnbindParametersArgs $;

        public Builder() {
            $ = new UnbindParametersArgs();
        }

        public Builder(UnbindParametersArgs defaults) {
            $ = new UnbindParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retainConfigs Optional boolean to retain all the current configs given by the template.
         * 
         * @return builder
         * 
         */
        public Builder retainConfigs(@Nullable Output<Boolean> retainConfigs) {
            $.retainConfigs = retainConfigs;
            return this;
        }

        /**
         * @param retainConfigs Optional boolean to retain all the current configs given by the template.
         * 
         * @return builder
         * 
         */
        public Builder retainConfigs(Boolean retainConfigs) {
            return retainConfigs(Output.of(retainConfigs));
        }

        public UnbindParametersArgs build() {
            return $;
        }
    }

}
