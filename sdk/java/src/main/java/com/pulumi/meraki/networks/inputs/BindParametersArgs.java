// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BindParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final BindParametersArgs Empty = new BindParametersArgs();

    /**
     * Optional boolean indicating whether the network&#39;s switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
     * 
     */
    @Import(name="autoBind")
    private @Nullable Output<Boolean> autoBind;

    /**
     * @return Optional boolean indicating whether the network&#39;s switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
     * 
     */
    public Optional<Output<Boolean>> autoBind() {
        return Optional.ofNullable(this.autoBind);
    }

    /**
     * The ID of the template to which the network should be bound.
     * 
     */
    @Import(name="configTemplateId")
    private @Nullable Output<String> configTemplateId;

    /**
     * @return The ID of the template to which the network should be bound.
     * 
     */
    public Optional<Output<String>> configTemplateId() {
        return Optional.ofNullable(this.configTemplateId);
    }

    private BindParametersArgs() {}

    private BindParametersArgs(BindParametersArgs $) {
        this.autoBind = $.autoBind;
        this.configTemplateId = $.configTemplateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BindParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BindParametersArgs $;

        public Builder() {
            $ = new BindParametersArgs();
        }

        public Builder(BindParametersArgs defaults) {
            $ = new BindParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoBind Optional boolean indicating whether the network&#39;s switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
         * 
         * @return builder
         * 
         */
        public Builder autoBind(@Nullable Output<Boolean> autoBind) {
            $.autoBind = autoBind;
            return this;
        }

        /**
         * @param autoBind Optional boolean indicating whether the network&#39;s switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
         * 
         * @return builder
         * 
         */
        public Builder autoBind(Boolean autoBind) {
            return autoBind(Output.of(autoBind));
        }

        /**
         * @param configTemplateId The ID of the template to which the network should be bound.
         * 
         * @return builder
         * 
         */
        public Builder configTemplateId(@Nullable Output<String> configTemplateId) {
            $.configTemplateId = configTemplateId;
            return this;
        }

        /**
         * @param configTemplateId The ID of the template to which the network should be bound.
         * 
         * @return builder
         * 
         */
        public Builder configTemplateId(String configTemplateId) {
            return configTemplateId(Output.of(configTemplateId));
        }

        public BindParametersArgs build() {
            return $;
        }
    }

}
