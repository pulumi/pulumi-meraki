// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessBillingItemPlanBandwidthLimits;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessBillingItemPlan {
    /**
     * @return The uplink bandwidth settings for the pricing plan.
     * 
     */
    private GetWirelessBillingItemPlanBandwidthLimits bandwidthLimits;
    /**
     * @return The id of the pricing plan to update.
     * 
     */
    private String id;
    /**
     * @return The price of the billing plan.
     * 
     */
    private Double price;
    /**
     * @return The time limit of the pricing plan in minutes.
     * 
     */
    private String timeLimit;

    private GetWirelessBillingItemPlan() {}
    /**
     * @return The uplink bandwidth settings for the pricing plan.
     * 
     */
    public GetWirelessBillingItemPlanBandwidthLimits bandwidthLimits() {
        return this.bandwidthLimits;
    }
    /**
     * @return The id of the pricing plan to update.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The price of the billing plan.
     * 
     */
    public Double price() {
        return this.price;
    }
    /**
     * @return The time limit of the pricing plan in minutes.
     * 
     */
    public String timeLimit() {
        return this.timeLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessBillingItemPlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWirelessBillingItemPlanBandwidthLimits bandwidthLimits;
        private String id;
        private Double price;
        private String timeLimit;
        public Builder() {}
        public Builder(GetWirelessBillingItemPlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthLimits = defaults.bandwidthLimits;
    	      this.id = defaults.id;
    	      this.price = defaults.price;
    	      this.timeLimit = defaults.timeLimit;
        }

        @CustomType.Setter
        public Builder bandwidthLimits(GetWirelessBillingItemPlanBandwidthLimits bandwidthLimits) {
            if (bandwidthLimits == null) {
              throw new MissingRequiredPropertyException("GetWirelessBillingItemPlan", "bandwidthLimits");
            }
            this.bandwidthLimits = bandwidthLimits;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWirelessBillingItemPlan", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder price(Double price) {
            if (price == null) {
              throw new MissingRequiredPropertyException("GetWirelessBillingItemPlan", "price");
            }
            this.price = price;
            return this;
        }
        @CustomType.Setter
        public Builder timeLimit(String timeLimit) {
            if (timeLimit == null) {
              throw new MissingRequiredPropertyException("GetWirelessBillingItemPlan", "timeLimit");
            }
            this.timeLimit = timeLimit;
            return this;
        }
        public GetWirelessBillingItemPlan build() {
            final var _resultValue = new GetWirelessBillingItemPlan();
            _resultValue.bandwidthLimits = bandwidthLimits;
            _resultValue.id = id;
            _resultValue.price = price;
            _resultValue.timeLimit = timeLimit;
            return _resultValue;
        }
    }
}
