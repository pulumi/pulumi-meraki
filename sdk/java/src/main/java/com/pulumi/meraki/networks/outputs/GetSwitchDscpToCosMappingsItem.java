// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetSwitchDscpToCosMappingsItemMapping;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSwitchDscpToCosMappingsItem {
    /**
     * @return An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
     * 
     */
    private List<GetSwitchDscpToCosMappingsItemMapping> mappings;

    private GetSwitchDscpToCosMappingsItem() {}
    /**
     * @return An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
     * 
     */
    public List<GetSwitchDscpToCosMappingsItemMapping> mappings() {
        return this.mappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchDscpToCosMappingsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSwitchDscpToCosMappingsItemMapping> mappings;
        public Builder() {}
        public Builder(GetSwitchDscpToCosMappingsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mappings = defaults.mappings;
        }

        @CustomType.Setter
        public Builder mappings(List<GetSwitchDscpToCosMappingsItemMapping> mappings) {
            if (mappings == null) {
              throw new MissingRequiredPropertyException("GetSwitchDscpToCosMappingsItem", "mappings");
            }
            this.mappings = mappings;
            return this;
        }
        public Builder mappings(GetSwitchDscpToCosMappingsItemMapping... mappings) {
            return mappings(List.of(mappings));
        }
        public GetSwitchDscpToCosMappingsItem build() {
            final var _resultValue = new GetSwitchDscpToCosMappingsItem();
            _resultValue.mappings = mappings;
            return _resultValue;
        }
    }
}
