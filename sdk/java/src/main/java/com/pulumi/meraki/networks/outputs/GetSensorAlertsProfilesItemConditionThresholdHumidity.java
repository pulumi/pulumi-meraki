// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSensorAlertsProfilesItemConditionThresholdHumidity {
    /**
     * @return Alerting threshold as a qualitative humidity level.
     * 
     */
    private String quality;
    /**
     * @return Alerting threshold in %RH.
     * 
     */
    private Integer relativePercentage;

    private GetSensorAlertsProfilesItemConditionThresholdHumidity() {}
    /**
     * @return Alerting threshold as a qualitative humidity level.
     * 
     */
    public String quality() {
        return this.quality;
    }
    /**
     * @return Alerting threshold in %RH.
     * 
     */
    public Integer relativePercentage() {
        return this.relativePercentage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensorAlertsProfilesItemConditionThresholdHumidity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String quality;
        private Integer relativePercentage;
        public Builder() {}
        public Builder(GetSensorAlertsProfilesItemConditionThresholdHumidity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.quality = defaults.quality;
    	      this.relativePercentage = defaults.relativePercentage;
        }

        @CustomType.Setter
        public Builder quality(String quality) {
            if (quality == null) {
              throw new MissingRequiredPropertyException("GetSensorAlertsProfilesItemConditionThresholdHumidity", "quality");
            }
            this.quality = quality;
            return this;
        }
        @CustomType.Setter
        public Builder relativePercentage(Integer relativePercentage) {
            if (relativePercentage == null) {
              throw new MissingRequiredPropertyException("GetSensorAlertsProfilesItemConditionThresholdHumidity", "relativePercentage");
            }
            this.relativePercentage = relativePercentage;
            return this;
        }
        public GetSensorAlertsProfilesItemConditionThresholdHumidity build() {
            final var _resultValue = new GetSensorAlertsProfilesItemConditionThresholdHumidity();
            _resultValue.quality = quality;
            _resultValue.relativePercentage = relativePercentage;
            return _resultValue;
        }
    }
}
