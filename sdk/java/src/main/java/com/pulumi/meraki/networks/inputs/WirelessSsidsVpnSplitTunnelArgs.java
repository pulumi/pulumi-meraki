// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.WirelessSsidsVpnSplitTunnelRuleArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsVpnSplitTunnelArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsVpnSplitTunnelArgs Empty = new WirelessSsidsVpnSplitTunnelArgs();

    /**
     * If true, VPN split tunnel is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If true, VPN split tunnel is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * List of VPN split tunnel rules.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<WirelessSsidsVpnSplitTunnelRuleArgs>> rules;

    /**
     * @return List of VPN split tunnel rules.
     * 
     */
    public Optional<Output<List<WirelessSsidsVpnSplitTunnelRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private WirelessSsidsVpnSplitTunnelArgs() {}

    private WirelessSsidsVpnSplitTunnelArgs(WirelessSsidsVpnSplitTunnelArgs $) {
        this.enabled = $.enabled;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsVpnSplitTunnelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsVpnSplitTunnelArgs $;

        public Builder() {
            $ = new WirelessSsidsVpnSplitTunnelArgs();
        }

        public Builder(WirelessSsidsVpnSplitTunnelArgs defaults) {
            $ = new WirelessSsidsVpnSplitTunnelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled If true, VPN split tunnel is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If true, VPN split tunnel is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param rules List of VPN split tunnel rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<WirelessSsidsVpnSplitTunnelRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of VPN split tunnel rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<WirelessSsidsVpnSplitTunnelRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of VPN split tunnel rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(WirelessSsidsVpnSplitTunnelRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public WirelessSsidsVpnSplitTunnelArgs build() {
            return $;
        }
    }

}
