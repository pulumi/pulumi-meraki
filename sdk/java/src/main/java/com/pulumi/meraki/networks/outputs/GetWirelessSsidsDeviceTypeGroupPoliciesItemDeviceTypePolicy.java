// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy {
    private String devicePolicy;
    private String deviceType;

    private GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy() {}
    public String devicePolicy() {
        return this.devicePolicy;
    }
    public String deviceType() {
        return this.deviceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String devicePolicy;
        private String deviceType;
        public Builder() {}
        public Builder(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devicePolicy = defaults.devicePolicy;
    	      this.deviceType = defaults.deviceType;
        }

        @CustomType.Setter
        public Builder devicePolicy(String devicePolicy) {
            if (devicePolicy == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy", "devicePolicy");
            }
            this.devicePolicy = devicePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            if (deviceType == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy", "deviceType");
            }
            this.deviceType = deviceType;
            return this;
        }
        public GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy build() {
            final var _resultValue = new GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy();
            _resultValue.devicePolicy = devicePolicy;
            _resultValue.deviceType = deviceType;
            return _resultValue;
        }
    }
}
