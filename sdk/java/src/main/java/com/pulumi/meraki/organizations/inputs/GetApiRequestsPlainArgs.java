// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiRequestsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiRequestsPlainArgs Empty = new GetApiRequestsPlainArgs();

    /**
     * adminId query parameter. Filter the results by the ID of the admin who made the API requests
     * 
     */
    @Import(name="adminId")
    private @Nullable String adminId;

    /**
     * @return adminId query parameter. Filter the results by the ID of the admin who made the API requests
     * 
     */
    public Optional<String> adminId() {
        return Optional.ofNullable(this.adminId);
    }

    /**
     * endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    @Import(name="endingBefore")
    private @Nullable String endingBefore;

    /**
     * @return endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> endingBefore() {
        return Optional.ofNullable(this.endingBefore);
    }

    /**
     * method query parameter. Filter the results by the method of the API requests (must be &#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39; or &#39;DELETE&#39;)
     * 
     */
    @Import(name="method")
    private @Nullable String method;

    /**
     * @return method query parameter. Filter the results by the method of the API requests (must be &#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39; or &#39;DELETE&#39;)
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * operationIds query parameter. Filter the results by one or more operation IDs for the API request
     * 
     */
    @Import(name="operationIds")
    private @Nullable List<String> operationIds;

    /**
     * @return operationIds query parameter. Filter the results by one or more operation IDs for the API request
     * 
     */
    public Optional<List<String>> operationIds() {
        return Optional.ofNullable(this.operationIds);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId", required=true)
    private String organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }

    /**
     * path query parameter. Filter the results by the path of the API requests
     * 
     */
    @Import(name="path")
    private @Nullable String path;

    /**
     * @return path query parameter. Filter the results by the path of the API requests
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
     * 
     */
    @Import(name="perPage")
    private @Nullable Integer perPage;

    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
     * 
     */
    public Optional<Integer> perPage() {
        return Optional.ofNullable(this.perPage);
    }

    /**
     * responseCode query parameter. Filter the results by the response code of the API requests
     * 
     */
    @Import(name="responseCode")
    private @Nullable Integer responseCode;

    /**
     * @return responseCode query parameter. Filter the results by the response code of the API requests
     * 
     */
    public Optional<Integer> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }

    /**
     * sourceIp query parameter. Filter the results by the IP address of the originating API request
     * 
     */
    @Import(name="sourceIp")
    private @Nullable String sourceIp;

    /**
     * @return sourceIp query parameter. Filter the results by the IP address of the originating API request
     * 
     */
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    @Import(name="startingAfter")
    private @Nullable String startingAfter;

    /**
     * @return startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> startingAfter() {
        return Optional.ofNullable(this.startingAfter);
    }

    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * 
     */
    @Import(name="t0")
    private @Nullable String t0;

    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * 
     */
    public Optional<String> t0() {
        return Optional.ofNullable(this.t0);
    }

    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     * 
     */
    @Import(name="t1")
    private @Nullable String t1;

    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     * 
     */
    public Optional<String> t1() {
        return Optional.ofNullable(this.t1);
    }

    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
     * 
     */
    @Import(name="timespan")
    private @Nullable Double timespan;

    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
     * 
     */
    public Optional<Double> timespan() {
        return Optional.ofNullable(this.timespan);
    }

    /**
     * userAgent query parameter. Filter the results by the user agent string of the API request
     * 
     */
    @Import(name="userAgent")
    private @Nullable String userAgent;

    /**
     * @return userAgent query parameter. Filter the results by the user agent string of the API request
     * 
     */
    public Optional<String> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    /**
     * version query parameter. Filter the results by the API version of the API request
     * 
     */
    @Import(name="version")
    private @Nullable Integer version;

    /**
     * @return version query parameter. Filter the results by the API version of the API request
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    private GetApiRequestsPlainArgs() {}

    private GetApiRequestsPlainArgs(GetApiRequestsPlainArgs $) {
        this.adminId = $.adminId;
        this.endingBefore = $.endingBefore;
        this.method = $.method;
        this.operationIds = $.operationIds;
        this.organizationId = $.organizationId;
        this.path = $.path;
        this.perPage = $.perPage;
        this.responseCode = $.responseCode;
        this.sourceIp = $.sourceIp;
        this.startingAfter = $.startingAfter;
        this.t0 = $.t0;
        this.t1 = $.t1;
        this.timespan = $.timespan;
        this.userAgent = $.userAgent;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiRequestsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiRequestsPlainArgs $;

        public Builder() {
            $ = new GetApiRequestsPlainArgs();
        }

        public Builder(GetApiRequestsPlainArgs defaults) {
            $ = new GetApiRequestsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminId adminId query parameter. Filter the results by the ID of the admin who made the API requests
         * 
         * @return builder
         * 
         */
        public Builder adminId(@Nullable String adminId) {
            $.adminId = adminId;
            return this;
        }

        /**
         * @param endingBefore endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
         * 
         * @return builder
         * 
         */
        public Builder endingBefore(@Nullable String endingBefore) {
            $.endingBefore = endingBefore;
            return this;
        }

        /**
         * @param method method query parameter. Filter the results by the method of the API requests (must be &#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39; or &#39;DELETE&#39;)
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable String method) {
            $.method = method;
            return this;
        }

        /**
         * @param operationIds operationIds query parameter. Filter the results by one or more operation IDs for the API request
         * 
         * @return builder
         * 
         */
        public Builder operationIds(@Nullable List<String> operationIds) {
            $.operationIds = operationIds;
            return this;
        }

        /**
         * @param operationIds operationIds query parameter. Filter the results by one or more operation IDs for the API request
         * 
         * @return builder
         * 
         */
        public Builder operationIds(String... operationIds) {
            return operationIds(List.of(operationIds));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param path path query parameter. Filter the results by the path of the API requests
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable String path) {
            $.path = path;
            return this;
        }

        /**
         * @param perPage perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
         * 
         * @return builder
         * 
         */
        public Builder perPage(@Nullable Integer perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param responseCode responseCode query parameter. Filter the results by the response code of the API requests
         * 
         * @return builder
         * 
         */
        public Builder responseCode(@Nullable Integer responseCode) {
            $.responseCode = responseCode;
            return this;
        }

        /**
         * @param sourceIp sourceIp query parameter. Filter the results by the IP address of the originating API request
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable String sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param startingAfter startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
         * 
         * @return builder
         * 
         */
        public Builder startingAfter(@Nullable String startingAfter) {
            $.startingAfter = startingAfter;
            return this;
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(@Nullable String t0) {
            $.t0 = t0;
            return this;
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
         * 
         * @return builder
         * 
         */
        public Builder t1(@Nullable String t1) {
            $.t1 = t1;
            return this;
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
         * 
         * @return builder
         * 
         */
        public Builder timespan(@Nullable Double timespan) {
            $.timespan = timespan;
            return this;
        }

        /**
         * @param userAgent userAgent query parameter. Filter the results by the user agent string of the API request
         * 
         * @return builder
         * 
         */
        public Builder userAgent(@Nullable String userAgent) {
            $.userAgent = userAgent;
            return this;
        }

        /**
         * @param version version query parameter. Filter the results by the API version of the API request
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Integer version) {
            $.version = version;
            return this;
        }

        public GetApiRequestsPlainArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetApiRequestsPlainArgs", "organizationId");
            }
            return $;
        }
    }

}
