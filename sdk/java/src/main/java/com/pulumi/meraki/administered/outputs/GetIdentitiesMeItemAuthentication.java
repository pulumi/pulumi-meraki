// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.administered.outputs.GetIdentitiesMeItemAuthenticationApi;
import com.pulumi.meraki.administered.outputs.GetIdentitiesMeItemAuthenticationSaml;
import com.pulumi.meraki.administered.outputs.GetIdentitiesMeItemAuthenticationTwoFactor;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIdentitiesMeItemAuthentication {
    /**
     * @return API authentication
     * 
     */
    private GetIdentitiesMeItemAuthenticationApi api;
    /**
     * @return Authentication mode
     * 
     */
    private String mode;
    /**
     * @return SAML authentication
     * 
     */
    private GetIdentitiesMeItemAuthenticationSaml saml;
    /**
     * @return TwoFactor authentication
     * 
     */
    private GetIdentitiesMeItemAuthenticationTwoFactor twoFactor;

    private GetIdentitiesMeItemAuthentication() {}
    /**
     * @return API authentication
     * 
     */
    public GetIdentitiesMeItemAuthenticationApi api() {
        return this.api;
    }
    /**
     * @return Authentication mode
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return SAML authentication
     * 
     */
    public GetIdentitiesMeItemAuthenticationSaml saml() {
        return this.saml;
    }
    /**
     * @return TwoFactor authentication
     * 
     */
    public GetIdentitiesMeItemAuthenticationTwoFactor twoFactor() {
        return this.twoFactor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIdentitiesMeItemAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIdentitiesMeItemAuthenticationApi api;
        private String mode;
        private GetIdentitiesMeItemAuthenticationSaml saml;
        private GetIdentitiesMeItemAuthenticationTwoFactor twoFactor;
        public Builder() {}
        public Builder(GetIdentitiesMeItemAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.api = defaults.api;
    	      this.mode = defaults.mode;
    	      this.saml = defaults.saml;
    	      this.twoFactor = defaults.twoFactor;
        }

        @CustomType.Setter
        public Builder api(GetIdentitiesMeItemAuthenticationApi api) {
            if (api == null) {
              throw new MissingRequiredPropertyException("GetIdentitiesMeItemAuthentication", "api");
            }
            this.api = api;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetIdentitiesMeItemAuthentication", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder saml(GetIdentitiesMeItemAuthenticationSaml saml) {
            if (saml == null) {
              throw new MissingRequiredPropertyException("GetIdentitiesMeItemAuthentication", "saml");
            }
            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder twoFactor(GetIdentitiesMeItemAuthenticationTwoFactor twoFactor) {
            if (twoFactor == null) {
              throw new MissingRequiredPropertyException("GetIdentitiesMeItemAuthentication", "twoFactor");
            }
            this.twoFactor = twoFactor;
            return this;
        }
        public GetIdentitiesMeItemAuthentication build() {
            final var _resultValue = new GetIdentitiesMeItemAuthentication();
            _resultValue.api = api;
            _resultValue.mode = mode;
            _resultValue.saml = saml;
            _resultValue.twoFactor = twoFactor;
            return _resultValue;
        }
    }
}
