// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEventsItemEventEventData {
    /**
     * @return The association ID of the client.
     * 
     */
    private String aid;
    /**
     * @return The radio channel the client is connecting to.
     * 
     */
    private String channel;
    /**
     * @return The client&#39;s IP address
     * 
     */
    private String clientIp;
    /**
     * @return The client&#39;s MAC address
     * 
     */
    private String clientMac;
    /**
     * @return The radio band number the client is trying to connect to.
     * 
     */
    private String radio;
    /**
     * @return The current received signal strength indication (RSSI) of the client connected to an AP.
     * 
     */
    private String rssi;
    /**
     * @return The virtual access point (VAP) number the client is connecting to.
     * 
     */
    private String vap;

    private GetEventsItemEventEventData() {}
    /**
     * @return The association ID of the client.
     * 
     */
    public String aid() {
        return this.aid;
    }
    /**
     * @return The radio channel the client is connecting to.
     * 
     */
    public String channel() {
        return this.channel;
    }
    /**
     * @return The client&#39;s IP address
     * 
     */
    public String clientIp() {
        return this.clientIp;
    }
    /**
     * @return The client&#39;s MAC address
     * 
     */
    public String clientMac() {
        return this.clientMac;
    }
    /**
     * @return The radio band number the client is trying to connect to.
     * 
     */
    public String radio() {
        return this.radio;
    }
    /**
     * @return The current received signal strength indication (RSSI) of the client connected to an AP.
     * 
     */
    public String rssi() {
        return this.rssi;
    }
    /**
     * @return The virtual access point (VAP) number the client is connecting to.
     * 
     */
    public String vap() {
        return this.vap;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsItemEventEventData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aid;
        private String channel;
        private String clientIp;
        private String clientMac;
        private String radio;
        private String rssi;
        private String vap;
        public Builder() {}
        public Builder(GetEventsItemEventEventData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aid = defaults.aid;
    	      this.channel = defaults.channel;
    	      this.clientIp = defaults.clientIp;
    	      this.clientMac = defaults.clientMac;
    	      this.radio = defaults.radio;
    	      this.rssi = defaults.rssi;
    	      this.vap = defaults.vap;
        }

        @CustomType.Setter
        public Builder aid(String aid) {
            if (aid == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "aid");
            }
            this.aid = aid;
            return this;
        }
        @CustomType.Setter
        public Builder channel(String channel) {
            if (channel == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "channel");
            }
            this.channel = channel;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(String clientIp) {
            if (clientIp == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "clientIp");
            }
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder clientMac(String clientMac) {
            if (clientMac == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "clientMac");
            }
            this.clientMac = clientMac;
            return this;
        }
        @CustomType.Setter
        public Builder radio(String radio) {
            if (radio == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "radio");
            }
            this.radio = radio;
            return this;
        }
        @CustomType.Setter
        public Builder rssi(String rssi) {
            if (rssi == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "rssi");
            }
            this.rssi = rssi;
            return this;
        }
        @CustomType.Setter
        public Builder vap(String vap) {
            if (vap == null) {
              throw new MissingRequiredPropertyException("GetEventsItemEventEventData", "vap");
            }
            this.vap = vap;
            return this;
        }
        public GetEventsItemEventEventData build() {
            final var _resultValue = new GetEventsItemEventEventData();
            _resultValue.aid = aid;
            _resultValue.channel = channel;
            _resultValue.clientIp = clientIp;
            _resultValue.clientMac = clientMac;
            _resultValue.radio = radio;
            _resultValue.rssi = rssi;
            _resultValue.vap = vap;
            return _resultValue;
        }
    }
}
