// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.WirelessSsidsFirewallL7FirewallRulesRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsFirewallL7FirewallRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsFirewallL7FirewallRulesArgs Empty = new WirelessSsidsFirewallL7FirewallRulesArgs();

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * number path parameter.
     * 
     */
    @Import(name="number", required=true)
    private Output<String> number;

    /**
     * @return number path parameter.
     * 
     */
    public Output<String> number() {
        return this.number;
    }

    /**
     * An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<WirelessSsidsFirewallL7FirewallRulesRuleArgs>> rules;

    /**
     * @return An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
     * 
     */
    public Optional<Output<List<WirelessSsidsFirewallL7FirewallRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private WirelessSsidsFirewallL7FirewallRulesArgs() {}

    private WirelessSsidsFirewallL7FirewallRulesArgs(WirelessSsidsFirewallL7FirewallRulesArgs $) {
        this.networkId = $.networkId;
        this.number = $.number;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsFirewallL7FirewallRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsFirewallL7FirewallRulesArgs $;

        public Builder() {
            $ = new WirelessSsidsFirewallL7FirewallRulesArgs();
        }

        public Builder(WirelessSsidsFirewallL7FirewallRulesArgs defaults) {
            $ = new WirelessSsidsFirewallL7FirewallRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        /**
         * @param rules An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<WirelessSsidsFirewallL7FirewallRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
         * 
         * @return builder
         * 
         */
        public Builder rules(List<WirelessSsidsFirewallL7FirewallRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
         * 
         * @return builder
         * 
         */
        public Builder rules(WirelessSsidsFirewallL7FirewallRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public WirelessSsidsFirewallL7FirewallRulesArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("WirelessSsidsFirewallL7FirewallRulesArgs", "networkId");
            }
            if ($.number == null) {
                throw new MissingRequiredPropertyException("WirelessSsidsFirewallL7FirewallRulesArgs", "number");
            }
            return $;
        }
    }

}
