// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs Empty = new WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs();

    /**
     * The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
     * 
     */
    @Import(name="devicePolicy")
    private @Nullable Output<String> devicePolicy;

    /**
     * @return The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
     * 
     */
    public Optional<Output<String>> devicePolicy() {
        return Optional.ofNullable(this.devicePolicy);
    }

    /**
     * The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
     * 
     */
    @Import(name="deviceType")
    private @Nullable Output<String> deviceType;

    /**
     * @return The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
     * 
     */
    public Optional<Output<String>> deviceType() {
        return Optional.ofNullable(this.deviceType);
    }

    /**
     * ID of the group policy object.
     * 
     */
    @Import(name="groupPolicyId")
    private @Nullable Output<Integer> groupPolicyId;

    /**
     * @return ID of the group policy object.
     * 
     */
    public Optional<Output<Integer>> groupPolicyId() {
        return Optional.ofNullable(this.groupPolicyId);
    }

    private WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs() {}

    private WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs $) {
        this.devicePolicy = $.devicePolicy;
        this.deviceType = $.deviceType;
        this.groupPolicyId = $.groupPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs $;

        public Builder() {
            $ = new WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs();
        }

        public Builder(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs defaults) {
            $ = new WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devicePolicy The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
         * 
         * @return builder
         * 
         */
        public Builder devicePolicy(@Nullable Output<String> devicePolicy) {
            $.devicePolicy = devicePolicy;
            return this;
        }

        /**
         * @param devicePolicy The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
         * 
         * @return builder
         * 
         */
        public Builder devicePolicy(String devicePolicy) {
            return devicePolicy(Output.of(devicePolicy));
        }

        /**
         * @param deviceType The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
         * 
         * @return builder
         * 
         */
        public Builder deviceType(@Nullable Output<String> deviceType) {
            $.deviceType = deviceType;
            return this;
        }

        /**
         * @param deviceType The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
         * 
         * @return builder
         * 
         */
        public Builder deviceType(String deviceType) {
            return deviceType(Output.of(deviceType));
        }

        /**
         * @param groupPolicyId ID of the group policy object.
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(@Nullable Output<Integer> groupPolicyId) {
            $.groupPolicyId = groupPolicyId;
            return this;
        }

        /**
         * @param groupPolicyId ID of the group policy object.
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(Integer groupPolicyId) {
            return groupPolicyId(Output.of(groupPolicyId));
        }

        public WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs build() {
            return $;
        }
    }

}
