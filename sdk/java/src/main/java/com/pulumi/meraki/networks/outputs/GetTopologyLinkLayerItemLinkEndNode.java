// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTopologyLinkLayerItemLinkEndNode {
    private String derivedId;
    private String type;

    private GetTopologyLinkLayerItemLinkEndNode() {}
    public String derivedId() {
        return this.derivedId;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopologyLinkLayerItemLinkEndNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String derivedId;
        private String type;
        public Builder() {}
        public Builder(GetTopologyLinkLayerItemLinkEndNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.derivedId = defaults.derivedId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder derivedId(String derivedId) {
            if (derivedId == null) {
              throw new MissingRequiredPropertyException("GetTopologyLinkLayerItemLinkEndNode", "derivedId");
            }
            this.derivedId = derivedId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetTopologyLinkLayerItemLinkEndNode", "type");
            }
            this.type = type;
            return this;
        }
        public GetTopologyLinkLayerItemLinkEndNode build() {
            final var _resultValue = new GetTopologyLinkLayerItemLinkEndNode();
            _resultValue.derivedId = derivedId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
