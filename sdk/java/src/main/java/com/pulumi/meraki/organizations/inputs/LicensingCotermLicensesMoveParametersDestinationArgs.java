// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingCotermLicensesMoveParametersDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingCotermLicensesMoveParametersDestinationArgs Empty = new LicensingCotermLicensesMoveParametersDestinationArgs();

    /**
     * The claim mode of the moved license
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The claim mode of the moved license
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The organization to move the license to
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The organization to move the license to
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private LicensingCotermLicensesMoveParametersDestinationArgs() {}

    private LicensingCotermLicensesMoveParametersDestinationArgs(LicensingCotermLicensesMoveParametersDestinationArgs $) {
        this.mode = $.mode;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingCotermLicensesMoveParametersDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingCotermLicensesMoveParametersDestinationArgs $;

        public Builder() {
            $ = new LicensingCotermLicensesMoveParametersDestinationArgs();
        }

        public Builder(LicensingCotermLicensesMoveParametersDestinationArgs defaults) {
            $ = new LicensingCotermLicensesMoveParametersDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The claim mode of the moved license
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The claim mode of the moved license
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param organizationId The organization to move the license to
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The organization to move the license to
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public LicensingCotermLicensesMoveParametersDestinationArgs build() {
            return $;
        }
    }

}
