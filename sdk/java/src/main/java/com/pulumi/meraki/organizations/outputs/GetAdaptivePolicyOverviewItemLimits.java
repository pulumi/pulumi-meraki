// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetAdaptivePolicyOverviewItemLimits {
    /**
     * @return Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
     * 
     */
    private Integer aclsInAPolicy;
    /**
     * @return Maximum number of user-created adaptive policy groups allowed in the organization.
     * 
     */
    private Integer customGroups;
    /**
     * @return Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
     * 
     */
    private Integer policyObjects;
    /**
     * @return Maximum number of rules allowed in an adaptive policy ACL in the organization.
     * 
     */
    private Integer rulesInAnAcl;

    private GetAdaptivePolicyOverviewItemLimits() {}
    /**
     * @return Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
     * 
     */
    public Integer aclsInAPolicy() {
        return this.aclsInAPolicy;
    }
    /**
     * @return Maximum number of user-created adaptive policy groups allowed in the organization.
     * 
     */
    public Integer customGroups() {
        return this.customGroups;
    }
    /**
     * @return Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
     * 
     */
    public Integer policyObjects() {
        return this.policyObjects;
    }
    /**
     * @return Maximum number of rules allowed in an adaptive policy ACL in the organization.
     * 
     */
    public Integer rulesInAnAcl() {
        return this.rulesInAnAcl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdaptivePolicyOverviewItemLimits defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer aclsInAPolicy;
        private Integer customGroups;
        private Integer policyObjects;
        private Integer rulesInAnAcl;
        public Builder() {}
        public Builder(GetAdaptivePolicyOverviewItemLimits defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aclsInAPolicy = defaults.aclsInAPolicy;
    	      this.customGroups = defaults.customGroups;
    	      this.policyObjects = defaults.policyObjects;
    	      this.rulesInAnAcl = defaults.rulesInAnAcl;
        }

        @CustomType.Setter
        public Builder aclsInAPolicy(Integer aclsInAPolicy) {
            if (aclsInAPolicy == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemLimits", "aclsInAPolicy");
            }
            this.aclsInAPolicy = aclsInAPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder customGroups(Integer customGroups) {
            if (customGroups == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemLimits", "customGroups");
            }
            this.customGroups = customGroups;
            return this;
        }
        @CustomType.Setter
        public Builder policyObjects(Integer policyObjects) {
            if (policyObjects == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemLimits", "policyObjects");
            }
            this.policyObjects = policyObjects;
            return this;
        }
        @CustomType.Setter
        public Builder rulesInAnAcl(Integer rulesInAnAcl) {
            if (rulesInAnAcl == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemLimits", "rulesInAnAcl");
            }
            this.rulesInAnAcl = rulesInAnAcl;
            return this;
        }
        public GetAdaptivePolicyOverviewItemLimits build() {
            final var _resultValue = new GetAdaptivePolicyOverviewItemLimits();
            _resultValue.aclsInAPolicy = aclsInAPolicy;
            _resultValue.customGroups = customGroups;
            _resultValue.policyObjects = policyObjects;
            _resultValue.rulesInAnAcl = rulesInAnAcl;
            return _resultValue;
        }
    }
}
