// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SmDevicesMoveParameters {
    /**
     * @return The ids of the devices to be moved.
     * 
     */
    private @Nullable List<String> ids;
    /**
     * @return The new network to which the devices will be moved.
     * 
     */
    private @Nullable String newNetwork;
    /**
     * @return The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.
     * 
     */
    private @Nullable List<String> scopes;
    /**
     * @return The serials of the devices to be moved.
     * 
     */
    private @Nullable List<String> serials;
    /**
     * @return The wifiMacs of the devices to be moved.
     * 
     */
    private @Nullable List<String> wifiMacs;

    private SmDevicesMoveParameters() {}
    /**
     * @return The ids of the devices to be moved.
     * 
     */
    public List<String> ids() {
        return this.ids == null ? List.of() : this.ids;
    }
    /**
     * @return The new network to which the devices will be moved.
     * 
     */
    public Optional<String> newNetwork() {
        return Optional.ofNullable(this.newNetwork);
    }
    /**
     * @return The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.
     * 
     */
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    /**
     * @return The serials of the devices to be moved.
     * 
     */
    public List<String> serials() {
        return this.serials == null ? List.of() : this.serials;
    }
    /**
     * @return The wifiMacs of the devices to be moved.
     * 
     */
    public List<String> wifiMacs() {
        return this.wifiMacs == null ? List.of() : this.wifiMacs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmDevicesMoveParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> ids;
        private @Nullable String newNetwork;
        private @Nullable List<String> scopes;
        private @Nullable List<String> serials;
        private @Nullable List<String> wifiMacs;
        public Builder() {}
        public Builder(SmDevicesMoveParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ids = defaults.ids;
    	      this.newNetwork = defaults.newNetwork;
    	      this.scopes = defaults.scopes;
    	      this.serials = defaults.serials;
    	      this.wifiMacs = defaults.wifiMacs;
        }

        @CustomType.Setter
        public Builder ids(@Nullable List<String> ids) {

            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder newNetwork(@Nullable String newNetwork) {

            this.newNetwork = newNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {

            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder serials(@Nullable List<String> serials) {

            this.serials = serials;
            return this;
        }
        public Builder serials(String... serials) {
            return serials(List.of(serials));
        }
        @CustomType.Setter
        public Builder wifiMacs(@Nullable List<String> wifiMacs) {

            this.wifiMacs = wifiMacs;
            return this;
        }
        public Builder wifiMacs(String... wifiMacs) {
            return wifiMacs(List.of(wifiMacs));
        }
        public SmDevicesMoveParameters build() {
            final var _resultValue = new SmDevicesMoveParameters();
            _resultValue.ids = ids;
            _resultValue.newNetwork = newNetwork;
            _resultValue.scopes = scopes;
            _resultValue.serials = serials;
            _resultValue.wifiMacs = wifiMacs;
            return _resultValue;
        }
    }
}
