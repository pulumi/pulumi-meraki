// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.organizations.ConfigTemplatesSwitchProfilesPortsArgs;
import com.pulumi.meraki.organizations.inputs.ConfigTemplatesSwitchProfilesPortsState;
import com.pulumi.meraki.organizations.outputs.ConfigTemplatesSwitchProfilesPortsMirror;
import com.pulumi.meraki.organizations.outputs.ConfigTemplatesSwitchProfilesPortsModule;
import com.pulumi.meraki.organizations.outputs.ConfigTemplatesSwitchProfilesPortsProfile;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.organizations.ConfigTemplatesSwitchProfilesPorts;
 * import com.pulumi.meraki.organizations.ConfigTemplatesSwitchProfilesPortsArgs;
 * import com.pulumi.meraki.organizations.inputs.ConfigTemplatesSwitchProfilesPortsProfileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ConfigTemplatesSwitchProfilesPorts(&#34;example&#34;, ConfigTemplatesSwitchProfilesPortsArgs.builder()        
 *             .accessPolicyNumber(2)
 *             .accessPolicyType(&#34;Sticky MAC allow list&#34;)
 *             .allowedVlans(&#34;1,3,5-10&#34;)
 *             .configTemplateId(&#34;string&#34;)
 *             .daiTrusted(false)
 *             .enabled(true)
 *             .flexibleStackingEnabled(true)
 *             .isolationEnabled(false)
 *             .linkNegotiation(&#34;Auto negotiate&#34;)
 *             .macAllowLists(            
 *                 &#34;34:56:fe:ce:8e:b0&#34;,
 *                 &#34;34:56:fe:ce:8e:b1&#34;)
 *             .name(&#34;My switch port&#34;)
 *             .organizationId(&#34;string&#34;)
 *             .poeEnabled(true)
 *             .portId(&#34;string&#34;)
 *             .portScheduleId(&#34;1234&#34;)
 *             .profile(ConfigTemplatesSwitchProfilesPortsProfileArgs.builder()
 *                 .enabled(false)
 *                 .id(&#34;1284392014819&#34;)
 *                 .iname(&#34;iname&#34;)
 *                 .build())
 *             .profileId(&#34;string&#34;)
 *             .rstpEnabled(true)
 *             .stickyMacAllowLists(            
 *                 &#34;34:56:fe:ce:8e:b0&#34;,
 *                 &#34;34:56:fe:ce:8e:b1&#34;)
 *             .stickyMacAllowListLimit(5)
 *             .stormControlEnabled(true)
 *             .stpGuard(&#34;disabled&#34;)
 *             .tags(            
 *                 &#34;tag1&#34;,
 *                 &#34;tag2&#34;)
 *             .type(&#34;access&#34;)
 *             .udld(&#34;Alert only&#34;)
 *             .vlan(10)
 *             .voiceVlan(20)
 *             .build());
 * 
 *         ctx.export(&#34;merakiOrganizationsConfigTemplatesSwitchProfilesPortsExample&#34;, example);
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:organizations/configTemplatesSwitchProfilesPorts:ConfigTemplatesSwitchProfilesPorts example &#34;config_template_id,organization_id,port_id,profile_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:organizations/configTemplatesSwitchProfilesPorts:ConfigTemplatesSwitchProfilesPorts")
public class ConfigTemplatesSwitchProfilesPorts extends com.pulumi.resources.CustomResource {
    /**
     * The number of a custom access policy to configure on the switch template port. Only applicable when &#39;accessPolicyType&#39; is &#39;Custom access policy&#39;.
     * 
     */
    @Export(name="accessPolicyNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> accessPolicyNumber;

    /**
     * @return The number of a custom access policy to configure on the switch template port. Only applicable when &#39;accessPolicyType&#39; is &#39;Custom access policy&#39;.
     * 
     */
    public Output<Integer> accessPolicyNumber() {
        return this.accessPolicyNumber;
    }
    /**
     * The type of the access policy of the switch template port. Only applicable to access ports. Can be one of &#39;Open&#39;, &#39;Custom access policy&#39;, &#39;MAC allow list&#39; or &#39;Sticky MAC allow list&#39;.
     * 
     */
    @Export(name="accessPolicyType", refs={String.class}, tree="[0]")
    private Output<String> accessPolicyType;

    /**
     * @return The type of the access policy of the switch template port. Only applicable to access ports. Can be one of &#39;Open&#39;, &#39;Custom access policy&#39;, &#39;MAC allow list&#39; or &#39;Sticky MAC allow list&#39;.
     * 
     */
    public Output<String> accessPolicyType() {
        return this.accessPolicyType;
    }
    /**
     * The VLANs allowed on the switch template port. Only applicable to trunk ports.
     * 
     */
    @Export(name="allowedVlans", refs={String.class}, tree="[0]")
    private Output<String> allowedVlans;

    /**
     * @return The VLANs allowed on the switch template port. Only applicable to trunk ports.
     * 
     */
    public Output<String> allowedVlans() {
        return this.allowedVlans;
    }
    /**
     * configTemplateId path parameter. Config template ID
     * 
     */
    @Export(name="configTemplateId", refs={String.class}, tree="[0]")
    private Output<String> configTemplateId;

    /**
     * @return configTemplateId path parameter. Config template ID
     * 
     */
    public Output<String> configTemplateId() {
        return this.configTemplateId;
    }
    /**
     * If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
     * 
     */
    @Export(name="daiTrusted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> daiTrusted;

    /**
     * @return If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
     * 
     */
    public Output<Boolean> daiTrusted() {
        return this.daiTrusted;
    }
    /**
     * The status of the switch template port.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return The status of the switch template port.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
     * 
     */
    @Export(name="flexibleStackingEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> flexibleStackingEnabled;

    /**
     * @return For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
     * 
     */
    public Output<Boolean> flexibleStackingEnabled() {
        return this.flexibleStackingEnabled;
    }
    /**
     * The isolation status of the switch template port.
     * 
     */
    @Export(name="isolationEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isolationEnabled;

    /**
     * @return The isolation status of the switch template port.
     * 
     */
    public Output<Boolean> isolationEnabled() {
        return this.isolationEnabled;
    }
    /**
     * The link speed for the switch template port.
     * 
     */
    @Export(name="linkNegotiation", refs={String.class}, tree="[0]")
    private Output<String> linkNegotiation;

    /**
     * @return The link speed for the switch template port.
     * 
     */
    public Output<String> linkNegotiation() {
        return this.linkNegotiation;
    }
    /**
     * Available link speeds for the switch template port.
     * 
     */
    @Export(name="linkNegotiationCapabilities", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> linkNegotiationCapabilities;

    /**
     * @return Available link speeds for the switch template port.
     * 
     */
    public Output<List<String>> linkNegotiationCapabilities() {
        return this.linkNegotiationCapabilities;
    }
    /**
     * Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when &#39;accessPolicyType&#39; is &#39;MAC allow list&#39;.
     * 
     */
    @Export(name="macAllowLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> macAllowLists;

    /**
     * @return Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when &#39;accessPolicyType&#39; is &#39;MAC allow list&#39;.
     * 
     */
    public Output<List<String>> macAllowLists() {
        return this.macAllowLists;
    }
    /**
     * Port mirror
     * 
     */
    @Export(name="mirror", refs={ConfigTemplatesSwitchProfilesPortsMirror.class}, tree="[0]")
    private Output<ConfigTemplatesSwitchProfilesPortsMirror> mirror;

    /**
     * @return Port mirror
     * 
     */
    public Output<ConfigTemplatesSwitchProfilesPortsMirror> mirror() {
        return this.mirror;
    }
    /**
     * Expansion module
     * 
     */
    @Export(name="module", refs={ConfigTemplatesSwitchProfilesPortsModule.class}, tree="[0]")
    private Output<ConfigTemplatesSwitchProfilesPortsModule> module;

    /**
     * @return Expansion module
     * 
     */
    public Output<ConfigTemplatesSwitchProfilesPortsModule> module() {
        return this.module;
    }
    /**
     * The name of the switch template port.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the switch template port.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The PoE status of the switch template port.
     * 
     */
    @Export(name="poeEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> poeEnabled;

    /**
     * @return The PoE status of the switch template port.
     * 
     */
    public Output<Boolean> poeEnabled() {
        return this.poeEnabled;
    }
    /**
     * The identifier of the switch template port.
     * 
     */
    @Export(name="portId", refs={String.class}, tree="[0]")
    private Output<String> portId;

    /**
     * @return The identifier of the switch template port.
     * 
     */
    public Output<String> portId() {
        return this.portId;
    }
    /**
     * The ID of the port schedule. A value of null will clear the port schedule.
     * 
     */
    @Export(name="portScheduleId", refs={String.class}, tree="[0]")
    private Output<String> portScheduleId;

    /**
     * @return The ID of the port schedule. A value of null will clear the port schedule.
     * 
     */
    public Output<String> portScheduleId() {
        return this.portScheduleId;
    }
    /**
     * Profile attributes
     * 
     */
    @Export(name="profile", refs={ConfigTemplatesSwitchProfilesPortsProfile.class}, tree="[0]")
    private Output<ConfigTemplatesSwitchProfilesPortsProfile> profile;

    /**
     * @return Profile attributes
     * 
     */
    public Output<ConfigTemplatesSwitchProfilesPortsProfile> profile() {
        return this.profile;
    }
    /**
     * profileId path parameter. Profile ID
     * 
     */
    @Export(name="profileId", refs={String.class}, tree="[0]")
    private Output<String> profileId;

    /**
     * @return profileId path parameter. Profile ID
     * 
     */
    public Output<String> profileId() {
        return this.profileId;
    }
    /**
     * The rapid spanning tree protocol status.
     * 
     */
    @Export(name="rstpEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> rstpEnabled;

    /**
     * @return The rapid spanning tree protocol status.
     * 
     */
    public Output<Boolean> rstpEnabled() {
        return this.rstpEnabled;
    }
    /**
     * The maximum number of MAC addresses for sticky MAC allow list. Only applicable when &#39;accessPolicyType&#39; is &#39;Sticky MAC allow list&#39;.
     * 
     */
    @Export(name="stickyMacAllowListLimit", refs={Integer.class}, tree="[0]")
    private Output<Integer> stickyMacAllowListLimit;

    /**
     * @return The maximum number of MAC addresses for sticky MAC allow list. Only applicable when &#39;accessPolicyType&#39; is &#39;Sticky MAC allow list&#39;.
     * 
     */
    public Output<Integer> stickyMacAllowListLimit() {
        return this.stickyMacAllowListLimit;
    }
    /**
     * The initial list of MAC addresses for sticky Mac allow list. Only applicable when &#39;accessPolicyType&#39; is &#39;Sticky MAC allow list&#39;.
     * 
     */
    @Export(name="stickyMacAllowLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> stickyMacAllowLists;

    /**
     * @return The initial list of MAC addresses for sticky Mac allow list. Only applicable when &#39;accessPolicyType&#39; is &#39;Sticky MAC allow list&#39;.
     * 
     */
    public Output<List<String>> stickyMacAllowLists() {
        return this.stickyMacAllowLists;
    }
    /**
     * The storm control status of the switch template port.
     * 
     */
    @Export(name="stormControlEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> stormControlEnabled;

    /**
     * @return The storm control status of the switch template port.
     * 
     */
    public Output<Boolean> stormControlEnabled() {
        return this.stormControlEnabled;
    }
    /**
     * The state of the STP guard (&#39;disabled&#39;, &#39;root guard&#39;, &#39;bpdu guard&#39; or &#39;loop guard&#39;).
     * 
     */
    @Export(name="stpGuard", refs={String.class}, tree="[0]")
    private Output<String> stpGuard;

    /**
     * @return The state of the STP guard (&#39;disabled&#39;, &#39;root guard&#39;, &#39;bpdu guard&#39; or &#39;loop guard&#39;).
     * 
     */
    public Output<String> stpGuard() {
        return this.stpGuard;
    }
    /**
     * The list of tags of the switch template port.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tags;

    /**
     * @return The list of tags of the switch template port.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * The type of the switch template port (&#39;trunk&#39; or &#39;access&#39;).
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the switch template port (&#39;trunk&#39; or &#39;access&#39;).
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
     * 
     */
    @Export(name="udld", refs={String.class}, tree="[0]")
    private Output<String> udld;

    /**
     * @return The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
     * 
     */
    public Output<String> udld() {
        return this.udld;
    }
    /**
     * The VLAN of the switch template port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
     * 
     */
    @Export(name="vlan", refs={Integer.class}, tree="[0]")
    private Output<Integer> vlan;

    /**
     * @return The VLAN of the switch template port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
     * 
     */
    public Output<Integer> vlan() {
        return this.vlan;
    }
    /**
     * The voice VLAN of the switch template port. Only applicable to access ports.
     * 
     */
    @Export(name="voiceVlan", refs={Integer.class}, tree="[0]")
    private Output<Integer> voiceVlan;

    /**
     * @return The voice VLAN of the switch template port. Only applicable to access ports.
     * 
     */
    public Output<Integer> voiceVlan() {
        return this.voiceVlan;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigTemplatesSwitchProfilesPorts(String name) {
        this(name, ConfigTemplatesSwitchProfilesPortsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigTemplatesSwitchProfilesPorts(String name, ConfigTemplatesSwitchProfilesPortsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigTemplatesSwitchProfilesPorts(String name, ConfigTemplatesSwitchProfilesPortsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/configTemplatesSwitchProfilesPorts:ConfigTemplatesSwitchProfilesPorts", name, args == null ? ConfigTemplatesSwitchProfilesPortsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConfigTemplatesSwitchProfilesPorts(String name, Output<String> id, @Nullable ConfigTemplatesSwitchProfilesPortsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/configTemplatesSwitchProfilesPorts:ConfigTemplatesSwitchProfilesPorts", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigTemplatesSwitchProfilesPorts get(String name, Output<String> id, @Nullable ConfigTemplatesSwitchProfilesPortsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigTemplatesSwitchProfilesPorts(name, id, state, options);
    }
}
