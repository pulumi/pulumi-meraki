// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceSecurityIntrusionProtectedNetworksArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceSecurityIntrusionProtectedNetworksArgs Empty = new ApplianceSecurityIntrusionProtectedNetworksArgs();

    /**
     * List of IP addresses or subnets being excluded from protection
     * 
     */
    @Import(name="excludedCidrs")
    private @Nullable Output<List<String>> excludedCidrs;

    /**
     * @return List of IP addresses or subnets being excluded from protection
     * 
     */
    public Optional<Output<List<String>>> excludedCidrs() {
        return Optional.ofNullable(this.excludedCidrs);
    }

    /**
     * List of IP addresses or subnets being protected
     * 
     */
    @Import(name="includedCidrs")
    private @Nullable Output<List<String>> includedCidrs;

    /**
     * @return List of IP addresses or subnets being protected
     * 
     */
    public Optional<Output<List<String>>> includedCidrs() {
        return Optional.ofNullable(this.includedCidrs);
    }

    /**
     * Whether special IPv4 addresses should be used (see: [https://tools.ietf.org/html/rfc5735](https://tools.ietf.org/html/rfc5735))
     * 
     */
    @Import(name="useDefault")
    private @Nullable Output<Boolean> useDefault;

    /**
     * @return Whether special IPv4 addresses should be used (see: [https://tools.ietf.org/html/rfc5735](https://tools.ietf.org/html/rfc5735))
     * 
     */
    public Optional<Output<Boolean>> useDefault() {
        return Optional.ofNullable(this.useDefault);
    }

    private ApplianceSecurityIntrusionProtectedNetworksArgs() {}

    private ApplianceSecurityIntrusionProtectedNetworksArgs(ApplianceSecurityIntrusionProtectedNetworksArgs $) {
        this.excludedCidrs = $.excludedCidrs;
        this.includedCidrs = $.includedCidrs;
        this.useDefault = $.useDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceSecurityIntrusionProtectedNetworksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceSecurityIntrusionProtectedNetworksArgs $;

        public Builder() {
            $ = new ApplianceSecurityIntrusionProtectedNetworksArgs();
        }

        public Builder(ApplianceSecurityIntrusionProtectedNetworksArgs defaults) {
            $ = new ApplianceSecurityIntrusionProtectedNetworksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludedCidrs List of IP addresses or subnets being excluded from protection
         * 
         * @return builder
         * 
         */
        public Builder excludedCidrs(@Nullable Output<List<String>> excludedCidrs) {
            $.excludedCidrs = excludedCidrs;
            return this;
        }

        /**
         * @param excludedCidrs List of IP addresses or subnets being excluded from protection
         * 
         * @return builder
         * 
         */
        public Builder excludedCidrs(List<String> excludedCidrs) {
            return excludedCidrs(Output.of(excludedCidrs));
        }

        /**
         * @param excludedCidrs List of IP addresses or subnets being excluded from protection
         * 
         * @return builder
         * 
         */
        public Builder excludedCidrs(String... excludedCidrs) {
            return excludedCidrs(List.of(excludedCidrs));
        }

        /**
         * @param includedCidrs List of IP addresses or subnets being protected
         * 
         * @return builder
         * 
         */
        public Builder includedCidrs(@Nullable Output<List<String>> includedCidrs) {
            $.includedCidrs = includedCidrs;
            return this;
        }

        /**
         * @param includedCidrs List of IP addresses or subnets being protected
         * 
         * @return builder
         * 
         */
        public Builder includedCidrs(List<String> includedCidrs) {
            return includedCidrs(Output.of(includedCidrs));
        }

        /**
         * @param includedCidrs List of IP addresses or subnets being protected
         * 
         * @return builder
         * 
         */
        public Builder includedCidrs(String... includedCidrs) {
            return includedCidrs(List.of(includedCidrs));
        }

        /**
         * @param useDefault Whether special IPv4 addresses should be used (see: [https://tools.ietf.org/html/rfc5735](https://tools.ietf.org/html/rfc5735))
         * 
         * @return builder
         * 
         */
        public Builder useDefault(@Nullable Output<Boolean> useDefault) {
            $.useDefault = useDefault;
            return this;
        }

        /**
         * @param useDefault Whether special IPv4 addresses should be used (see: [https://tools.ietf.org/html/rfc5735](https://tools.ietf.org/html/rfc5735))
         * 
         * @return builder
         * 
         */
        public Builder useDefault(Boolean useDefault) {
            return useDefault(Output.of(useDefault));
        }

        public ApplianceSecurityIntrusionProtectedNetworksArgs build() {
            return $;
        }
    }

}
