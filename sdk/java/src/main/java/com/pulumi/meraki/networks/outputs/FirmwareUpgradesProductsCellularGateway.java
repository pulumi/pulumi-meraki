// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.networks.outputs.FirmwareUpgradesProductsCellularGatewayAvailableVersion;
import com.pulumi.meraki.networks.outputs.FirmwareUpgradesProductsCellularGatewayCurrentVersion;
import com.pulumi.meraki.networks.outputs.FirmwareUpgradesProductsCellularGatewayLastUpgrade;
import com.pulumi.meraki.networks.outputs.FirmwareUpgradesProductsCellularGatewayNextUpgrade;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirmwareUpgradesProductsCellularGateway {
    /**
     * @return Firmware versions available for upgrade
     * 
     */
    private @Nullable List<FirmwareUpgradesProductsCellularGatewayAvailableVersion> availableVersions;
    /**
     * @return Details of the current version on the device
     * 
     */
    private @Nullable FirmwareUpgradesProductsCellularGatewayCurrentVersion currentVersion;
    /**
     * @return Details of the last firmware upgrade on the device
     * 
     */
    private @Nullable FirmwareUpgradesProductsCellularGatewayLastUpgrade lastUpgrade;
    /**
     * @return Details of the next firmware upgrade on the device
     * 
     */
    private @Nullable FirmwareUpgradesProductsCellularGatewayNextUpgrade nextUpgrade;
    /**
     * @return Whether or not the network wants beta firmware
     * 
     */
    private @Nullable Boolean participateInNextBetaRelease;

    private FirmwareUpgradesProductsCellularGateway() {}
    /**
     * @return Firmware versions available for upgrade
     * 
     */
    public List<FirmwareUpgradesProductsCellularGatewayAvailableVersion> availableVersions() {
        return this.availableVersions == null ? List.of() : this.availableVersions;
    }
    /**
     * @return Details of the current version on the device
     * 
     */
    public Optional<FirmwareUpgradesProductsCellularGatewayCurrentVersion> currentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }
    /**
     * @return Details of the last firmware upgrade on the device
     * 
     */
    public Optional<FirmwareUpgradesProductsCellularGatewayLastUpgrade> lastUpgrade() {
        return Optional.ofNullable(this.lastUpgrade);
    }
    /**
     * @return Details of the next firmware upgrade on the device
     * 
     */
    public Optional<FirmwareUpgradesProductsCellularGatewayNextUpgrade> nextUpgrade() {
        return Optional.ofNullable(this.nextUpgrade);
    }
    /**
     * @return Whether or not the network wants beta firmware
     * 
     */
    public Optional<Boolean> participateInNextBetaRelease() {
        return Optional.ofNullable(this.participateInNextBetaRelease);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirmwareUpgradesProductsCellularGateway defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<FirmwareUpgradesProductsCellularGatewayAvailableVersion> availableVersions;
        private @Nullable FirmwareUpgradesProductsCellularGatewayCurrentVersion currentVersion;
        private @Nullable FirmwareUpgradesProductsCellularGatewayLastUpgrade lastUpgrade;
        private @Nullable FirmwareUpgradesProductsCellularGatewayNextUpgrade nextUpgrade;
        private @Nullable Boolean participateInNextBetaRelease;
        public Builder() {}
        public Builder(FirmwareUpgradesProductsCellularGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableVersions = defaults.availableVersions;
    	      this.currentVersion = defaults.currentVersion;
    	      this.lastUpgrade = defaults.lastUpgrade;
    	      this.nextUpgrade = defaults.nextUpgrade;
    	      this.participateInNextBetaRelease = defaults.participateInNextBetaRelease;
        }

        @CustomType.Setter
        public Builder availableVersions(@Nullable List<FirmwareUpgradesProductsCellularGatewayAvailableVersion> availableVersions) {

            this.availableVersions = availableVersions;
            return this;
        }
        public Builder availableVersions(FirmwareUpgradesProductsCellularGatewayAvailableVersion... availableVersions) {
            return availableVersions(List.of(availableVersions));
        }
        @CustomType.Setter
        public Builder currentVersion(@Nullable FirmwareUpgradesProductsCellularGatewayCurrentVersion currentVersion) {

            this.currentVersion = currentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpgrade(@Nullable FirmwareUpgradesProductsCellularGatewayLastUpgrade lastUpgrade) {

            this.lastUpgrade = lastUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder nextUpgrade(@Nullable FirmwareUpgradesProductsCellularGatewayNextUpgrade nextUpgrade) {

            this.nextUpgrade = nextUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder participateInNextBetaRelease(@Nullable Boolean participateInNextBetaRelease) {

            this.participateInNextBetaRelease = participateInNextBetaRelease;
            return this;
        }
        public FirmwareUpgradesProductsCellularGateway build() {
            final var _resultValue = new FirmwareUpgradesProductsCellularGateway();
            _resultValue.availableVersions = availableVersions;
            _resultValue.currentVersion = currentVersion;
            _resultValue.lastUpgrade = lastUpgrade;
            _resultValue.nextUpgrade = nextUpgrade;
            _resultValue.participateInNextBetaRelease = participateInNextBetaRelease;
            return _resultValue;
        }
    }
}
