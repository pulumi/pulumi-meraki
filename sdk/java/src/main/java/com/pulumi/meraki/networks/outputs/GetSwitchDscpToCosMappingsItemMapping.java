// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSwitchDscpToCosMappingsItemMapping {
    /**
     * @return The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive.
     * 
     */
    private Integer cos;
    /**
     * @return The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive.
     * 
     */
    private Integer dscp;
    /**
     * @return Label for the mapping (optional).
     * 
     */
    private String title;

    private GetSwitchDscpToCosMappingsItemMapping() {}
    /**
     * @return The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive.
     * 
     */
    public Integer cos() {
        return this.cos;
    }
    /**
     * @return The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive.
     * 
     */
    public Integer dscp() {
        return this.dscp;
    }
    /**
     * @return Label for the mapping (optional).
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchDscpToCosMappingsItemMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cos;
        private Integer dscp;
        private String title;
        public Builder() {}
        public Builder(GetSwitchDscpToCosMappingsItemMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cos = defaults.cos;
    	      this.dscp = defaults.dscp;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder cos(Integer cos) {
            if (cos == null) {
              throw new MissingRequiredPropertyException("GetSwitchDscpToCosMappingsItemMapping", "cos");
            }
            this.cos = cos;
            return this;
        }
        @CustomType.Setter
        public Builder dscp(Integer dscp) {
            if (dscp == null) {
              throw new MissingRequiredPropertyException("GetSwitchDscpToCosMappingsItemMapping", "dscp");
            }
            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetSwitchDscpToCosMappingsItemMapping", "title");
            }
            this.title = title;
            return this;
        }
        public GetSwitchDscpToCosMappingsItemMapping build() {
            final var _resultValue = new GetSwitchDscpToCosMappingsItemMapping();
            _resultValue.cos = cos;
            _resultValue.dscp = dscp;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
