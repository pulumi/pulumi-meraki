// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetDevicesStatusesItemComponents;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDevicesStatusesItem {
    /**
     * @return Components
     * 
     */
    private GetDevicesStatusesItemComponents components;
    /**
     * @return IP Gateway
     * 
     */
    private String gateway;
    /**
     * @return IP Type
     * 
     */
    private String ipType;
    /**
     * @return LAN IP Address
     * 
     */
    private String lanIp;
    /**
     * @return Device Last Reported Location
     * 
     */
    private String lastReportedAt;
    /**
     * @return MAC Address
     * 
     */
    private String mac;
    /**
     * @return Model
     * 
     */
    private String model;
    /**
     * @return Device Name
     * 
     */
    private String name;
    /**
     * @return Network ID
     * 
     */
    private String networkId;
    /**
     * @return Primary DNS
     * 
     */
    private String primaryDns;
    /**
     * @return Product Type
     * 
     */
    private String productType;
    /**
     * @return Public IP Address
     * 
     */
    private String publicIp;
    /**
     * @return Secondary DNS
     * 
     */
    private String secondaryDns;
    /**
     * @return Device Serial Number
     * 
     */
    private String serial;
    /**
     * @return Device Status
     * 
     */
    private String status;
    /**
     * @return Tags
     * 
     */
    private List<String> tags;

    private GetDevicesStatusesItem() {}
    /**
     * @return Components
     * 
     */
    public GetDevicesStatusesItemComponents components() {
        return this.components;
    }
    /**
     * @return IP Gateway
     * 
     */
    public String gateway() {
        return this.gateway;
    }
    /**
     * @return IP Type
     * 
     */
    public String ipType() {
        return this.ipType;
    }
    /**
     * @return LAN IP Address
     * 
     */
    public String lanIp() {
        return this.lanIp;
    }
    /**
     * @return Device Last Reported Location
     * 
     */
    public String lastReportedAt() {
        return this.lastReportedAt;
    }
    /**
     * @return MAC Address
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Model
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return Device Name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network ID
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Primary DNS
     * 
     */
    public String primaryDns() {
        return this.primaryDns;
    }
    /**
     * @return Product Type
     * 
     */
    public String productType() {
        return this.productType;
    }
    /**
     * @return Public IP Address
     * 
     */
    public String publicIp() {
        return this.publicIp;
    }
    /**
     * @return Secondary DNS
     * 
     */
    public String secondaryDns() {
        return this.secondaryDns;
    }
    /**
     * @return Device Serial Number
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Device Status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesStatusesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetDevicesStatusesItemComponents components;
        private String gateway;
        private String ipType;
        private String lanIp;
        private String lastReportedAt;
        private String mac;
        private String model;
        private String name;
        private String networkId;
        private String primaryDns;
        private String productType;
        private String publicIp;
        private String secondaryDns;
        private String serial;
        private String status;
        private List<String> tags;
        public Builder() {}
        public Builder(GetDevicesStatusesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.components = defaults.components;
    	      this.gateway = defaults.gateway;
    	      this.ipType = defaults.ipType;
    	      this.lanIp = defaults.lanIp;
    	      this.lastReportedAt = defaults.lastReportedAt;
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.primaryDns = defaults.primaryDns;
    	      this.productType = defaults.productType;
    	      this.publicIp = defaults.publicIp;
    	      this.secondaryDns = defaults.secondaryDns;
    	      this.serial = defaults.serial;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder components(GetDevicesStatusesItemComponents components) {
            if (components == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "components");
            }
            this.components = components;
            return this;
        }
        @CustomType.Setter
        public Builder gateway(String gateway) {
            if (gateway == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "gateway");
            }
            this.gateway = gateway;
            return this;
        }
        @CustomType.Setter
        public Builder ipType(String ipType) {
            if (ipType == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "ipType");
            }
            this.ipType = ipType;
            return this;
        }
        @CustomType.Setter
        public Builder lanIp(String lanIp) {
            if (lanIp == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "lanIp");
            }
            this.lanIp = lanIp;
            return this;
        }
        @CustomType.Setter
        public Builder lastReportedAt(String lastReportedAt) {
            if (lastReportedAt == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "lastReportedAt");
            }
            this.lastReportedAt = lastReportedAt;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder primaryDns(String primaryDns) {
            if (primaryDns == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "primaryDns");
            }
            this.primaryDns = primaryDns;
            return this;
        }
        @CustomType.Setter
        public Builder productType(String productType) {
            if (productType == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "productType");
            }
            this.productType = productType;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            if (publicIp == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "publicIp");
            }
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryDns(String secondaryDns) {
            if (secondaryDns == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "secondaryDns");
            }
            this.secondaryDns = secondaryDns;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetDevicesStatusesItem build() {
            final var _resultValue = new GetDevicesStatusesItem();
            _resultValue.components = components;
            _resultValue.gateway = gateway;
            _resultValue.ipType = ipType;
            _resultValue.lanIp = lanIp;
            _resultValue.lastReportedAt = lastReportedAt;
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.name = name;
            _resultValue.networkId = networkId;
            _resultValue.primaryDns = primaryDns;
            _resultValue.productType = productType;
            _resultValue.publicIp = publicIp;
            _resultValue.secondaryDns = secondaryDns;
            _resultValue.serial = serial;
            _resultValue.status = status;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
