// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsFirewallL7FirewallRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsFirewallL7FirewallRulesRuleArgs Empty = new WirelessSsidsFirewallL7FirewallRulesRuleArgs();

    /**
     * &#39;Deny&#39; traffic specified by this rule
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return &#39;Deny&#39; traffic specified by this rule
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Type of the L7 firewall rule. One of: &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39;
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the L7 firewall rule. One of: &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39;
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private WirelessSsidsFirewallL7FirewallRulesRuleArgs() {}

    private WirelessSsidsFirewallL7FirewallRulesRuleArgs(WirelessSsidsFirewallL7FirewallRulesRuleArgs $) {
        this.policy = $.policy;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsFirewallL7FirewallRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsFirewallL7FirewallRulesRuleArgs $;

        public Builder() {
            $ = new WirelessSsidsFirewallL7FirewallRulesRuleArgs();
        }

        public Builder(WirelessSsidsFirewallL7FirewallRulesRuleArgs defaults) {
            $ = new WirelessSsidsFirewallL7FirewallRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy &#39;Deny&#39; traffic specified by this rule
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy &#39;Deny&#39; traffic specified by this rule
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param type Type of the L7 firewall rule. One of: &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39;
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the L7 firewall rule. One of: &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39;
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public WirelessSsidsFirewallL7FirewallRulesRuleArgs build() {
            return $;
        }
    }

}
