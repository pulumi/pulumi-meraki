// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsIdentityPsksState extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsIdentityPsksState Empty = new WirelessSsidsIdentityPsksState();

    /**
     * The email associated with the System&#39;s Manager User
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return The email associated with the System&#39;s Manager User
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
     * 
     */
    @Import(name="expiresAt")
    private @Nullable Output<String> expiresAt;

    /**
     * @return Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
     * 
     */
    public Optional<Output<String>> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }

    /**
     * The group policy to be applied to clients
     * 
     */
    @Import(name="groupPolicyId")
    private @Nullable Output<String> groupPolicyId;

    /**
     * @return The group policy to be applied to clients
     * 
     */
    public Optional<Output<String>> groupPolicyId() {
        return Optional.ofNullable(this.groupPolicyId);
    }

    /**
     * identityPskId path parameter. Identity psk ID
     * 
     */
    @Import(name="identityPskId")
    private @Nullable Output<String> identityPskId;

    /**
     * @return identityPskId path parameter. Identity psk ID
     * 
     */
    public Optional<Output<String>> identityPskId() {
        return Optional.ofNullable(this.identityPskId);
    }

    /**
     * The name of the Identity PSK
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Identity PSK
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * number path parameter.
     * 
     */
    @Import(name="number")
    private @Nullable Output<String> number;

    /**
     * @return number path parameter.
     * 
     */
    public Optional<Output<String>> number() {
        return Optional.ofNullable(this.number);
    }

    /**
     * The passphrase for client authentication
     * 
     */
    @Import(name="passphrase")
    private @Nullable Output<String> passphrase;

    /**
     * @return The passphrase for client authentication
     * 
     */
    public Optional<Output<String>> passphrase() {
        return Optional.ofNullable(this.passphrase);
    }

    /**
     * The WiFi Personal Network unique identifier
     * 
     */
    @Import(name="wifiPersonalNetworkId")
    private @Nullable Output<String> wifiPersonalNetworkId;

    /**
     * @return The WiFi Personal Network unique identifier
     * 
     */
    public Optional<Output<String>> wifiPersonalNetworkId() {
        return Optional.ofNullable(this.wifiPersonalNetworkId);
    }

    private WirelessSsidsIdentityPsksState() {}

    private WirelessSsidsIdentityPsksState(WirelessSsidsIdentityPsksState $) {
        this.email = $.email;
        this.expiresAt = $.expiresAt;
        this.groupPolicyId = $.groupPolicyId;
        this.identityPskId = $.identityPskId;
        this.name = $.name;
        this.networkId = $.networkId;
        this.number = $.number;
        this.passphrase = $.passphrase;
        this.wifiPersonalNetworkId = $.wifiPersonalNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsIdentityPsksState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsIdentityPsksState $;

        public Builder() {
            $ = new WirelessSsidsIdentityPsksState();
        }

        public Builder(WirelessSsidsIdentityPsksState defaults) {
            $ = new WirelessSsidsIdentityPsksState(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The email associated with the System&#39;s Manager User
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email associated with the System&#39;s Manager User
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param expiresAt Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(@Nullable Output<String> expiresAt) {
            $.expiresAt = expiresAt;
            return this;
        }

        /**
         * @param expiresAt Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(String expiresAt) {
            return expiresAt(Output.of(expiresAt));
        }

        /**
         * @param groupPolicyId The group policy to be applied to clients
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(@Nullable Output<String> groupPolicyId) {
            $.groupPolicyId = groupPolicyId;
            return this;
        }

        /**
         * @param groupPolicyId The group policy to be applied to clients
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(String groupPolicyId) {
            return groupPolicyId(Output.of(groupPolicyId));
        }

        /**
         * @param identityPskId identityPskId path parameter. Identity psk ID
         * 
         * @return builder
         * 
         */
        public Builder identityPskId(@Nullable Output<String> identityPskId) {
            $.identityPskId = identityPskId;
            return this;
        }

        /**
         * @param identityPskId identityPskId path parameter. Identity psk ID
         * 
         * @return builder
         * 
         */
        public Builder identityPskId(String identityPskId) {
            return identityPskId(Output.of(identityPskId));
        }

        /**
         * @param name The name of the Identity PSK
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Identity PSK
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(@Nullable Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        /**
         * @param passphrase The passphrase for client authentication
         * 
         * @return builder
         * 
         */
        public Builder passphrase(@Nullable Output<String> passphrase) {
            $.passphrase = passphrase;
            return this;
        }

        /**
         * @param passphrase The passphrase for client authentication
         * 
         * @return builder
         * 
         */
        public Builder passphrase(String passphrase) {
            return passphrase(Output.of(passphrase));
        }

        /**
         * @param wifiPersonalNetworkId The WiFi Personal Network unique identifier
         * 
         * @return builder
         * 
         */
        public Builder wifiPersonalNetworkId(@Nullable Output<String> wifiPersonalNetworkId) {
            $.wifiPersonalNetworkId = wifiPersonalNetworkId;
            return this;
        }

        /**
         * @param wifiPersonalNetworkId The WiFi Personal Network unique identifier
         * 
         * @return builder
         * 
         */
        public Builder wifiPersonalNetworkId(String wifiPersonalNetworkId) {
            return wifiPersonalNetworkId(Output.of(wifiPersonalNetworkId));
        }

        public WirelessSsidsIdentityPsksState build() {
            return $;
        }
    }

}
