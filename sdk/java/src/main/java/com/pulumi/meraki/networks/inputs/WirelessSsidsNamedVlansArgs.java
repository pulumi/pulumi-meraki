// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.WirelessSsidsNamedVlansRadiusArgs;
import com.pulumi.meraki.networks.inputs.WirelessSsidsNamedVlansTaggingArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsNamedVlansArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsNamedVlansArgs Empty = new WirelessSsidsNamedVlansArgs();

    /**
     * RADIUS settings. This param is only valid when authMode is &#39;open-with-radius&#39; and ipAssignmentMode is not &#39;NAT mode&#39;.
     * 
     */
    @Import(name="radius")
    private @Nullable Output<WirelessSsidsNamedVlansRadiusArgs> radius;

    /**
     * @return RADIUS settings. This param is only valid when authMode is &#39;open-with-radius&#39; and ipAssignmentMode is not &#39;NAT mode&#39;.
     * 
     */
    public Optional<Output<WirelessSsidsNamedVlansRadiusArgs>> radius() {
        return Optional.ofNullable(this.radius);
    }

    /**
     * VLAN tagging settings. This param is only valid when ipAssignmentMode is &#39;Bridge mode&#39; or &#39;Layer 3 roaming&#39;.
     * 
     */
    @Import(name="tagging")
    private @Nullable Output<WirelessSsidsNamedVlansTaggingArgs> tagging;

    /**
     * @return VLAN tagging settings. This param is only valid when ipAssignmentMode is &#39;Bridge mode&#39; or &#39;Layer 3 roaming&#39;.
     * 
     */
    public Optional<Output<WirelessSsidsNamedVlansTaggingArgs>> tagging() {
        return Optional.ofNullable(this.tagging);
    }

    private WirelessSsidsNamedVlansArgs() {}

    private WirelessSsidsNamedVlansArgs(WirelessSsidsNamedVlansArgs $) {
        this.radius = $.radius;
        this.tagging = $.tagging;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsNamedVlansArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsNamedVlansArgs $;

        public Builder() {
            $ = new WirelessSsidsNamedVlansArgs();
        }

        public Builder(WirelessSsidsNamedVlansArgs defaults) {
            $ = new WirelessSsidsNamedVlansArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param radius RADIUS settings. This param is only valid when authMode is &#39;open-with-radius&#39; and ipAssignmentMode is not &#39;NAT mode&#39;.
         * 
         * @return builder
         * 
         */
        public Builder radius(@Nullable Output<WirelessSsidsNamedVlansRadiusArgs> radius) {
            $.radius = radius;
            return this;
        }

        /**
         * @param radius RADIUS settings. This param is only valid when authMode is &#39;open-with-radius&#39; and ipAssignmentMode is not &#39;NAT mode&#39;.
         * 
         * @return builder
         * 
         */
        public Builder radius(WirelessSsidsNamedVlansRadiusArgs radius) {
            return radius(Output.of(radius));
        }

        /**
         * @param tagging VLAN tagging settings. This param is only valid when ipAssignmentMode is &#39;Bridge mode&#39; or &#39;Layer 3 roaming&#39;.
         * 
         * @return builder
         * 
         */
        public Builder tagging(@Nullable Output<WirelessSsidsNamedVlansTaggingArgs> tagging) {
            $.tagging = tagging;
            return this;
        }

        /**
         * @param tagging VLAN tagging settings. This param is only valid when ipAssignmentMode is &#39;Bridge mode&#39; or &#39;Layer 3 roaming&#39;.
         * 
         * @return builder
         * 
         */
        public Builder tagging(WirelessSsidsNamedVlansTaggingArgs tagging) {
            return tagging(Output.of(tagging));
        }

        public WirelessSsidsNamedVlansArgs build() {
            return $;
        }
    }

}
