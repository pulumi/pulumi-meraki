// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetClientsOverviewItemUsages {
    /**
     * @return The average usage of all clients on a network
     * 
     */
    private Integer average;
    /**
     * @return The average usage of all clients with heavy usage on a network
     * 
     */
    private Integer withHeavyUsageAverage;

    private GetClientsOverviewItemUsages() {}
    /**
     * @return The average usage of all clients on a network
     * 
     */
    public Integer average() {
        return this.average;
    }
    /**
     * @return The average usage of all clients with heavy usage on a network
     * 
     */
    public Integer withHeavyUsageAverage() {
        return this.withHeavyUsageAverage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientsOverviewItemUsages defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer average;
        private Integer withHeavyUsageAverage;
        public Builder() {}
        public Builder(GetClientsOverviewItemUsages defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.average = defaults.average;
    	      this.withHeavyUsageAverage = defaults.withHeavyUsageAverage;
        }

        @CustomType.Setter
        public Builder average(Integer average) {
            if (average == null) {
              throw new MissingRequiredPropertyException("GetClientsOverviewItemUsages", "average");
            }
            this.average = average;
            return this;
        }
        @CustomType.Setter
        public Builder withHeavyUsageAverage(Integer withHeavyUsageAverage) {
            if (withHeavyUsageAverage == null) {
              throw new MissingRequiredPropertyException("GetClientsOverviewItemUsages", "withHeavyUsageAverage");
            }
            this.withHeavyUsageAverage = withHeavyUsageAverage;
            return this;
        }
        public GetClientsOverviewItemUsages build() {
            final var _resultValue = new GetClientsOverviewItemUsages();
            _resultValue.average = average;
            _resultValue.withHeavyUsageAverage = withHeavyUsageAverage;
            return _resultValue;
        }
    }
}
