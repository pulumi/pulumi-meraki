// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBluetoothClientsItem {
    private String deviceName;
    private String id;
    private Boolean inSightAlert;
    private Integer lastSeen;
    private String mac;
    private String manufacturer;
    private String name;
    private String networkId;
    private Boolean outOfSightAlert;
    private String seenByDeviceMac;
    private List<String> tags;

    private GetBluetoothClientsItem() {}
    public String deviceName() {
        return this.deviceName;
    }
    public String id() {
        return this.id;
    }
    public Boolean inSightAlert() {
        return this.inSightAlert;
    }
    public Integer lastSeen() {
        return this.lastSeen;
    }
    public String mac() {
        return this.mac;
    }
    public String manufacturer() {
        return this.manufacturer;
    }
    public String name() {
        return this.name;
    }
    public String networkId() {
        return this.networkId;
    }
    public Boolean outOfSightAlert() {
        return this.outOfSightAlert;
    }
    public String seenByDeviceMac() {
        return this.seenByDeviceMac;
    }
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBluetoothClientsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deviceName;
        private String id;
        private Boolean inSightAlert;
        private Integer lastSeen;
        private String mac;
        private String manufacturer;
        private String name;
        private String networkId;
        private Boolean outOfSightAlert;
        private String seenByDeviceMac;
        private List<String> tags;
        public Builder() {}
        public Builder(GetBluetoothClientsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceName = defaults.deviceName;
    	      this.id = defaults.id;
    	      this.inSightAlert = defaults.inSightAlert;
    	      this.lastSeen = defaults.lastSeen;
    	      this.mac = defaults.mac;
    	      this.manufacturer = defaults.manufacturer;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.outOfSightAlert = defaults.outOfSightAlert;
    	      this.seenByDeviceMac = defaults.seenByDeviceMac;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder deviceName(String deviceName) {
            if (deviceName == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "deviceName");
            }
            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inSightAlert(Boolean inSightAlert) {
            if (inSightAlert == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "inSightAlert");
            }
            this.inSightAlert = inSightAlert;
            return this;
        }
        @CustomType.Setter
        public Builder lastSeen(Integer lastSeen) {
            if (lastSeen == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "lastSeen");
            }
            this.lastSeen = lastSeen;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder manufacturer(String manufacturer) {
            if (manufacturer == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "manufacturer");
            }
            this.manufacturer = manufacturer;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder outOfSightAlert(Boolean outOfSightAlert) {
            if (outOfSightAlert == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "outOfSightAlert");
            }
            this.outOfSightAlert = outOfSightAlert;
            return this;
        }
        @CustomType.Setter
        public Builder seenByDeviceMac(String seenByDeviceMac) {
            if (seenByDeviceMac == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "seenByDeviceMac");
            }
            this.seenByDeviceMac = seenByDeviceMac;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetBluetoothClientsItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetBluetoothClientsItem build() {
            final var _resultValue = new GetBluetoothClientsItem();
            _resultValue.deviceName = deviceName;
            _resultValue.id = id;
            _resultValue.inSightAlert = inSightAlert;
            _resultValue.lastSeen = lastSeen;
            _resultValue.mac = mac;
            _resultValue.manufacturer = manufacturer;
            _resultValue.name = name;
            _resultValue.networkId = networkId;
            _resultValue.outOfSightAlert = outOfSightAlert;
            _resultValue.seenByDeviceMac = seenByDeviceMac;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
