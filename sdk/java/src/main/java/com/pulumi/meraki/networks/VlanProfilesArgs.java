// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.VlanProfilesVlanGroupArgs;
import com.pulumi.meraki.networks.inputs.VlanProfilesVlanNameArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VlanProfilesArgs extends com.pulumi.resources.ResourceArgs {

    public static final VlanProfilesArgs Empty = new VlanProfilesArgs();

    /**
     * IName of the VLAN profile
     * 
     */
    @Import(name="iname", required=true)
    private Output<String> iname;

    /**
     * @return IName of the VLAN profile
     * 
     */
    public Output<String> iname() {
        return this.iname;
    }

    /**
     * Name of the profile, string length must be from 1 to 255 characters
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the profile, string length must be from 1 to 255 characters
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * An array of named VLANs
     * 
     */
    @Import(name="vlanGroups")
    private @Nullable Output<List<VlanProfilesVlanGroupArgs>> vlanGroups;

    /**
     * @return An array of named VLANs
     * 
     */
    public Optional<Output<List<VlanProfilesVlanGroupArgs>>> vlanGroups() {
        return Optional.ofNullable(this.vlanGroups);
    }

    /**
     * An array of named VLANs
     * 
     */
    @Import(name="vlanNames")
    private @Nullable Output<List<VlanProfilesVlanNameArgs>> vlanNames;

    /**
     * @return An array of named VLANs
     * 
     */
    public Optional<Output<List<VlanProfilesVlanNameArgs>>> vlanNames() {
        return Optional.ofNullable(this.vlanNames);
    }

    private VlanProfilesArgs() {}

    private VlanProfilesArgs(VlanProfilesArgs $) {
        this.iname = $.iname;
        this.name = $.name;
        this.networkId = $.networkId;
        this.vlanGroups = $.vlanGroups;
        this.vlanNames = $.vlanNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VlanProfilesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VlanProfilesArgs $;

        public Builder() {
            $ = new VlanProfilesArgs();
        }

        public Builder(VlanProfilesArgs defaults) {
            $ = new VlanProfilesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param iname IName of the VLAN profile
         * 
         * @return builder
         * 
         */
        public Builder iname(Output<String> iname) {
            $.iname = iname;
            return this;
        }

        /**
         * @param iname IName of the VLAN profile
         * 
         * @return builder
         * 
         */
        public Builder iname(String iname) {
            return iname(Output.of(iname));
        }

        /**
         * @param name Name of the profile, string length must be from 1 to 255 characters
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the profile, string length must be from 1 to 255 characters
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param vlanGroups An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanGroups(@Nullable Output<List<VlanProfilesVlanGroupArgs>> vlanGroups) {
            $.vlanGroups = vlanGroups;
            return this;
        }

        /**
         * @param vlanGroups An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanGroups(List<VlanProfilesVlanGroupArgs> vlanGroups) {
            return vlanGroups(Output.of(vlanGroups));
        }

        /**
         * @param vlanGroups An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanGroups(VlanProfilesVlanGroupArgs... vlanGroups) {
            return vlanGroups(List.of(vlanGroups));
        }

        /**
         * @param vlanNames An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanNames(@Nullable Output<List<VlanProfilesVlanNameArgs>> vlanNames) {
            $.vlanNames = vlanNames;
            return this;
        }

        /**
         * @param vlanNames An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanNames(List<VlanProfilesVlanNameArgs> vlanNames) {
            return vlanNames(Output.of(vlanNames));
        }

        /**
         * @param vlanNames An array of named VLANs
         * 
         * @return builder
         * 
         */
        public Builder vlanNames(VlanProfilesVlanNameArgs... vlanNames) {
            return vlanNames(List.of(vlanNames));
        }

        public VlanProfilesArgs build() {
            if ($.iname == null) {
                throw new MissingRequiredPropertyException("VlanProfilesArgs", "iname");
            }
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("VlanProfilesArgs", "networkId");
            }
            return $;
        }
    }

}
