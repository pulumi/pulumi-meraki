// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetApiRequestsItem;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApiRequestsResult {
    /**
     * @return adminId query parameter. Filter the results by the ID of the admin who made the API requests
     * 
     */
    private @Nullable String adminId;
    /**
     * @return endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    private @Nullable String endingBefore;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Array of ResponseOrganizationsGetOrganizationApiRequests
     * 
     */
    private List<GetApiRequestsItem> items;
    /**
     * @return method query parameter. Filter the results by the method of the API requests (must be &#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39; or &#39;DELETE&#39;)
     * 
     */
    private @Nullable String method;
    /**
     * @return operationIds query parameter. Filter the results by one or more operation IDs for the API request
     * 
     */
    private @Nullable List<String> operationIds;
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    private String organizationId;
    /**
     * @return path query parameter. Filter the results by the path of the API requests
     * 
     */
    private @Nullable String path;
    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
     * 
     */
    private @Nullable Integer perPage;
    /**
     * @return responseCode query parameter. Filter the results by the response code of the API requests
     * 
     */
    private @Nullable Integer responseCode;
    /**
     * @return sourceIp query parameter. Filter the results by the IP address of the originating API request
     * 
     */
    private @Nullable String sourceIp;
    /**
     * @return startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    private @Nullable String startingAfter;
    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * 
     */
    private @Nullable String t0;
    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     * 
     */
    private @Nullable String t1;
    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
     * 
     */
    private @Nullable Double timespan;
    /**
     * @return userAgent query parameter. Filter the results by the user agent string of the API request
     * 
     */
    private @Nullable String userAgent;
    /**
     * @return version query parameter. Filter the results by the API version of the API request
     * 
     */
    private @Nullable Integer version;

    private GetApiRequestsResult() {}
    /**
     * @return adminId query parameter. Filter the results by the ID of the admin who made the API requests
     * 
     */
    public Optional<String> adminId() {
        return Optional.ofNullable(this.adminId);
    }
    /**
     * @return endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> endingBefore() {
        return Optional.ofNullable(this.endingBefore);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Array of ResponseOrganizationsGetOrganizationApiRequests
     * 
     */
    public List<GetApiRequestsItem> items() {
        return this.items;
    }
    /**
     * @return method query parameter. Filter the results by the method of the API requests (must be &#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39; or &#39;DELETE&#39;)
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    /**
     * @return operationIds query parameter. Filter the results by one or more operation IDs for the API request
     * 
     */
    public List<String> operationIds() {
        return this.operationIds == null ? List.of() : this.operationIds;
    }
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return path query parameter. Filter the results by the path of the API requests
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 50.
     * 
     */
    public Optional<Integer> perPage() {
        return Optional.ofNullable(this.perPage);
    }
    /**
     * @return responseCode query parameter. Filter the results by the response code of the API requests
     * 
     */
    public Optional<Integer> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }
    /**
     * @return sourceIp query parameter. Filter the results by the IP address of the originating API request
     * 
     */
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }
    /**
     * @return startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> startingAfter() {
        return Optional.ofNullable(this.startingAfter);
    }
    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * 
     */
    public Optional<String> t0() {
        return Optional.ofNullable(this.t0);
    }
    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     * 
     */
    public Optional<String> t1() {
        return Optional.ofNullable(this.t1);
    }
    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
     * 
     */
    public Optional<Double> timespan() {
        return Optional.ofNullable(this.timespan);
    }
    /**
     * @return userAgent query parameter. Filter the results by the user agent string of the API request
     * 
     */
    public Optional<String> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }
    /**
     * @return version query parameter. Filter the results by the API version of the API request
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiRequestsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminId;
        private @Nullable String endingBefore;
        private String id;
        private List<GetApiRequestsItem> items;
        private @Nullable String method;
        private @Nullable List<String> operationIds;
        private String organizationId;
        private @Nullable String path;
        private @Nullable Integer perPage;
        private @Nullable Integer responseCode;
        private @Nullable String sourceIp;
        private @Nullable String startingAfter;
        private @Nullable String t0;
        private @Nullable String t1;
        private @Nullable Double timespan;
        private @Nullable String userAgent;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(GetApiRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminId = defaults.adminId;
    	      this.endingBefore = defaults.endingBefore;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.method = defaults.method;
    	      this.operationIds = defaults.operationIds;
    	      this.organizationId = defaults.organizationId;
    	      this.path = defaults.path;
    	      this.perPage = defaults.perPage;
    	      this.responseCode = defaults.responseCode;
    	      this.sourceIp = defaults.sourceIp;
    	      this.startingAfter = defaults.startingAfter;
    	      this.t0 = defaults.t0;
    	      this.t1 = defaults.t1;
    	      this.timespan = defaults.timespan;
    	      this.userAgent = defaults.userAgent;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder adminId(@Nullable String adminId) {

            this.adminId = adminId;
            return this;
        }
        @CustomType.Setter
        public Builder endingBefore(@Nullable String endingBefore) {

            this.endingBefore = endingBefore;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetApiRequestsItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetApiRequestsItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {

            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder operationIds(@Nullable List<String> operationIds) {

            this.operationIds = operationIds;
            return this;
        }
        public Builder operationIds(String... operationIds) {
            return operationIds(List.of(operationIds));
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsResult", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder perPage(@Nullable Integer perPage) {

            this.perPage = perPage;
            return this;
        }
        @CustomType.Setter
        public Builder responseCode(@Nullable Integer responseCode) {

            this.responseCode = responseCode;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable String sourceIp) {

            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder startingAfter(@Nullable String startingAfter) {

            this.startingAfter = startingAfter;
            return this;
        }
        @CustomType.Setter
        public Builder t0(@Nullable String t0) {

            this.t0 = t0;
            return this;
        }
        @CustomType.Setter
        public Builder t1(@Nullable String t1) {

            this.t1 = t1;
            return this;
        }
        @CustomType.Setter
        public Builder timespan(@Nullable Double timespan) {

            this.timespan = timespan;
            return this;
        }
        @CustomType.Setter
        public Builder userAgent(@Nullable String userAgent) {

            this.userAgent = userAgent;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        public GetApiRequestsResult build() {
            final var _resultValue = new GetApiRequestsResult();
            _resultValue.adminId = adminId;
            _resultValue.endingBefore = endingBefore;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.method = method;
            _resultValue.operationIds = operationIds;
            _resultValue.organizationId = organizationId;
            _resultValue.path = path;
            _resultValue.perPage = perPage;
            _resultValue.responseCode = responseCode;
            _resultValue.sourceIp = sourceIp;
            _resultValue.startingAfter = startingAfter;
            _resultValue.t0 = t0;
            _resultValue.t1 = t1;
            _resultValue.timespan = timespan;
            _resultValue.userAgent = userAgent;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
