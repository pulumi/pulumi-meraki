// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesStagedEventsProductsArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesStagedEventsReasonArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesStagedEventsStageArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirmwareUpgradesStagedEventsState extends com.pulumi.resources.ResourceArgs {

    public static final FirmwareUpgradesStagedEventsState Empty = new FirmwareUpgradesStagedEventsState();

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * The network devices to be updated
     * 
     */
    @Import(name="products")
    private @Nullable Output<FirmwareUpgradesStagedEventsProductsArgs> products;

    /**
     * @return The network devices to be updated
     * 
     */
    public Optional<Output<FirmwareUpgradesStagedEventsProductsArgs>> products() {
        return Optional.ofNullable(this.products);
    }

    /**
     * Reasons for the rollback
     * 
     */
    @Import(name="reasons")
    private @Nullable Output<List<FirmwareUpgradesStagedEventsReasonArgs>> reasons;

    /**
     * @return Reasons for the rollback
     * 
     */
    public Optional<Output<List<FirmwareUpgradesStagedEventsReasonArgs>>> reasons() {
        return Optional.ofNullable(this.reasons);
    }

    /**
     * The ordered stages in the network
     * 
     */
    @Import(name="stages")
    private @Nullable Output<List<FirmwareUpgradesStagedEventsStageArgs>> stages;

    /**
     * @return The ordered stages in the network
     * 
     */
    public Optional<Output<List<FirmwareUpgradesStagedEventsStageArgs>>> stages() {
        return Optional.ofNullable(this.stages);
    }

    private FirmwareUpgradesStagedEventsState() {}

    private FirmwareUpgradesStagedEventsState(FirmwareUpgradesStagedEventsState $) {
        this.networkId = $.networkId;
        this.products = $.products;
        this.reasons = $.reasons;
        this.stages = $.stages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirmwareUpgradesStagedEventsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirmwareUpgradesStagedEventsState $;

        public Builder() {
            $ = new FirmwareUpgradesStagedEventsState();
        }

        public Builder(FirmwareUpgradesStagedEventsState defaults) {
            $ = new FirmwareUpgradesStagedEventsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param products The network devices to be updated
         * 
         * @return builder
         * 
         */
        public Builder products(@Nullable Output<FirmwareUpgradesStagedEventsProductsArgs> products) {
            $.products = products;
            return this;
        }

        /**
         * @param products The network devices to be updated
         * 
         * @return builder
         * 
         */
        public Builder products(FirmwareUpgradesStagedEventsProductsArgs products) {
            return products(Output.of(products));
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(@Nullable Output<List<FirmwareUpgradesStagedEventsReasonArgs>> reasons) {
            $.reasons = reasons;
            return this;
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(List<FirmwareUpgradesStagedEventsReasonArgs> reasons) {
            return reasons(Output.of(reasons));
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(FirmwareUpgradesStagedEventsReasonArgs... reasons) {
            return reasons(List.of(reasons));
        }

        /**
         * @param stages The ordered stages in the network
         * 
         * @return builder
         * 
         */
        public Builder stages(@Nullable Output<List<FirmwareUpgradesStagedEventsStageArgs>> stages) {
            $.stages = stages;
            return this;
        }

        /**
         * @param stages The ordered stages in the network
         * 
         * @return builder
         * 
         */
        public Builder stages(List<FirmwareUpgradesStagedEventsStageArgs> stages) {
            return stages(Output.of(stages));
        }

        /**
         * @param stages The ordered stages in the network
         * 
         * @return builder
         * 
         */
        public Builder stages(FirmwareUpgradesStagedEventsStageArgs... stages) {
            return stages(List.of(stages));
        }

        public FirmwareUpgradesStagedEventsState build() {
            return $;
        }
    }

}
