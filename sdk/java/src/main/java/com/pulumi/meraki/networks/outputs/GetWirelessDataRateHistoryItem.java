// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessDataRateHistoryItem {
    /**
     * @return Average data rate in kilobytes-per-second
     * 
     */
    private Integer averageKbps;
    /**
     * @return Download rate in kilobytes-per-second
     * 
     */
    private Integer downloadKbps;
    /**
     * @return The end time of the query range
     * 
     */
    private String endTs;
    /**
     * @return The start time of the query range
     * 
     */
    private String startTs;
    /**
     * @return Upload rate in kilobytes-per-second
     * 
     */
    private Integer uploadKbps;

    private GetWirelessDataRateHistoryItem() {}
    /**
     * @return Average data rate in kilobytes-per-second
     * 
     */
    public Integer averageKbps() {
        return this.averageKbps;
    }
    /**
     * @return Download rate in kilobytes-per-second
     * 
     */
    public Integer downloadKbps() {
        return this.downloadKbps;
    }
    /**
     * @return The end time of the query range
     * 
     */
    public String endTs() {
        return this.endTs;
    }
    /**
     * @return The start time of the query range
     * 
     */
    public String startTs() {
        return this.startTs;
    }
    /**
     * @return Upload rate in kilobytes-per-second
     * 
     */
    public Integer uploadKbps() {
        return this.uploadKbps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessDataRateHistoryItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer averageKbps;
        private Integer downloadKbps;
        private String endTs;
        private String startTs;
        private Integer uploadKbps;
        public Builder() {}
        public Builder(GetWirelessDataRateHistoryItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.averageKbps = defaults.averageKbps;
    	      this.downloadKbps = defaults.downloadKbps;
    	      this.endTs = defaults.endTs;
    	      this.startTs = defaults.startTs;
    	      this.uploadKbps = defaults.uploadKbps;
        }

        @CustomType.Setter
        public Builder averageKbps(Integer averageKbps) {
            if (averageKbps == null) {
              throw new MissingRequiredPropertyException("GetWirelessDataRateHistoryItem", "averageKbps");
            }
            this.averageKbps = averageKbps;
            return this;
        }
        @CustomType.Setter
        public Builder downloadKbps(Integer downloadKbps) {
            if (downloadKbps == null) {
              throw new MissingRequiredPropertyException("GetWirelessDataRateHistoryItem", "downloadKbps");
            }
            this.downloadKbps = downloadKbps;
            return this;
        }
        @CustomType.Setter
        public Builder endTs(String endTs) {
            if (endTs == null) {
              throw new MissingRequiredPropertyException("GetWirelessDataRateHistoryItem", "endTs");
            }
            this.endTs = endTs;
            return this;
        }
        @CustomType.Setter
        public Builder startTs(String startTs) {
            if (startTs == null) {
              throw new MissingRequiredPropertyException("GetWirelessDataRateHistoryItem", "startTs");
            }
            this.startTs = startTs;
            return this;
        }
        @CustomType.Setter
        public Builder uploadKbps(Integer uploadKbps) {
            if (uploadKbps == null) {
              throw new MissingRequiredPropertyException("GetWirelessDataRateHistoryItem", "uploadKbps");
            }
            this.uploadKbps = uploadKbps;
            return this;
        }
        public GetWirelessDataRateHistoryItem build() {
            final var _resultValue = new GetWirelessDataRateHistoryItem();
            _resultValue.averageKbps = averageKbps;
            _resultValue.downloadKbps = downloadKbps;
            _resultValue.endTs = endTs;
            _resultValue.startTs = startTs;
            _resultValue.uploadKbps = uploadKbps;
            return _resultValue;
        }
    }
}
