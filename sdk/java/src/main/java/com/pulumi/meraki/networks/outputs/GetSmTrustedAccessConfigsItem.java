// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSmTrustedAccessConfigsItem {
    /**
     * @return time that access ends
     * 
     */
    private String accessEndAt;
    /**
     * @return time that access starts
     * 
     */
    private String accessStartAt;
    /**
     * @return Optional email text
     * 
     */
    private String additionalEmailText;
    /**
     * @return device ID
     * 
     */
    private String id;
    /**
     * @return device name
     * 
     */
    private String name;
    /**
     * @return Time before access expiration reminder email sends
     * 
     */
    private Integer notifyTimeBeforeAccessEnds;
    /**
     * @return scope
     * 
     */
    private String scope;
    /**
     * @return Send Email Notifications
     * 
     */
    private Boolean sendExpirationEmails;
    /**
     * @return SSID name
     * 
     */
    private String ssidName;
    /**
     * @return device tags
     * 
     */
    private List<String> tags;
    /**
     * @return type of access period, either a static range or a dynamic period
     * 
     */
    private String timeboundType;

    private GetSmTrustedAccessConfigsItem() {}
    /**
     * @return time that access ends
     * 
     */
    public String accessEndAt() {
        return this.accessEndAt;
    }
    /**
     * @return time that access starts
     * 
     */
    public String accessStartAt() {
        return this.accessStartAt;
    }
    /**
     * @return Optional email text
     * 
     */
    public String additionalEmailText() {
        return this.additionalEmailText;
    }
    /**
     * @return device ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return device name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Time before access expiration reminder email sends
     * 
     */
    public Integer notifyTimeBeforeAccessEnds() {
        return this.notifyTimeBeforeAccessEnds;
    }
    /**
     * @return scope
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return Send Email Notifications
     * 
     */
    public Boolean sendExpirationEmails() {
        return this.sendExpirationEmails;
    }
    /**
     * @return SSID name
     * 
     */
    public String ssidName() {
        return this.ssidName;
    }
    /**
     * @return device tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return type of access period, either a static range or a dynamic period
     * 
     */
    public String timeboundType() {
        return this.timeboundType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSmTrustedAccessConfigsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessEndAt;
        private String accessStartAt;
        private String additionalEmailText;
        private String id;
        private String name;
        private Integer notifyTimeBeforeAccessEnds;
        private String scope;
        private Boolean sendExpirationEmails;
        private String ssidName;
        private List<String> tags;
        private String timeboundType;
        public Builder() {}
        public Builder(GetSmTrustedAccessConfigsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessEndAt = defaults.accessEndAt;
    	      this.accessStartAt = defaults.accessStartAt;
    	      this.additionalEmailText = defaults.additionalEmailText;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.notifyTimeBeforeAccessEnds = defaults.notifyTimeBeforeAccessEnds;
    	      this.scope = defaults.scope;
    	      this.sendExpirationEmails = defaults.sendExpirationEmails;
    	      this.ssidName = defaults.ssidName;
    	      this.tags = defaults.tags;
    	      this.timeboundType = defaults.timeboundType;
        }

        @CustomType.Setter
        public Builder accessEndAt(String accessEndAt) {
            if (accessEndAt == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "accessEndAt");
            }
            this.accessEndAt = accessEndAt;
            return this;
        }
        @CustomType.Setter
        public Builder accessStartAt(String accessStartAt) {
            if (accessStartAt == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "accessStartAt");
            }
            this.accessStartAt = accessStartAt;
            return this;
        }
        @CustomType.Setter
        public Builder additionalEmailText(String additionalEmailText) {
            if (additionalEmailText == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "additionalEmailText");
            }
            this.additionalEmailText = additionalEmailText;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notifyTimeBeforeAccessEnds(Integer notifyTimeBeforeAccessEnds) {
            if (notifyTimeBeforeAccessEnds == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "notifyTimeBeforeAccessEnds");
            }
            this.notifyTimeBeforeAccessEnds = notifyTimeBeforeAccessEnds;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder sendExpirationEmails(Boolean sendExpirationEmails) {
            if (sendExpirationEmails == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "sendExpirationEmails");
            }
            this.sendExpirationEmails = sendExpirationEmails;
            return this;
        }
        @CustomType.Setter
        public Builder ssidName(String ssidName) {
            if (ssidName == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "ssidName");
            }
            this.ssidName = ssidName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder timeboundType(String timeboundType) {
            if (timeboundType == null) {
              throw new MissingRequiredPropertyException("GetSmTrustedAccessConfigsItem", "timeboundType");
            }
            this.timeboundType = timeboundType;
            return this;
        }
        public GetSmTrustedAccessConfigsItem build() {
            final var _resultValue = new GetSmTrustedAccessConfigsItem();
            _resultValue.accessEndAt = accessEndAt;
            _resultValue.accessStartAt = accessStartAt;
            _resultValue.additionalEmailText = additionalEmailText;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.notifyTimeBeforeAccessEnds = notifyTimeBeforeAccessEnds;
            _resultValue.scope = scope;
            _resultValue.sendExpirationEmails = sendExpirationEmails;
            _resultValue.ssidName = ssidName;
            _resultValue.tags = tags;
            _resultValue.timeboundType = timeboundType;
            return _resultValue;
        }
    }
}
