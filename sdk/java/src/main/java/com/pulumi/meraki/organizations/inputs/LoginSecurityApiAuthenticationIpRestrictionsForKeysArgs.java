// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs Empty = new LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs();

    /**
     * Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
     * 
     */
    @Import(name="ranges")
    private @Nullable Output<List<String>> ranges;

    /**
     * @return List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
     * 
     */
    public Optional<Output<List<String>>> ranges() {
        return Optional.ofNullable(this.ranges);
    }

    private LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs() {}

    private LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs(LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs $) {
        this.enabled = $.enabled;
        this.ranges = $.ranges;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs $;

        public Builder() {
            $ = new LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs();
        }

        public Builder(LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs defaults) {
            $ = new LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param ranges List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
         * 
         * @return builder
         * 
         */
        public Builder ranges(@Nullable Output<List<String>> ranges) {
            $.ranges = ranges;
            return this;
        }

        /**
         * @param ranges List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
         * 
         * @return builder
         * 
         */
        public Builder ranges(List<String> ranges) {
            return ranges(Output.of(ranges));
        }

        /**
         * @param ranges List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
         * 
         * @return builder
         * 
         */
        public Builder ranges(String... ranges) {
            return ranges(List.of(ranges));
        }

        public LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs build() {
            return $;
        }
    }

}
