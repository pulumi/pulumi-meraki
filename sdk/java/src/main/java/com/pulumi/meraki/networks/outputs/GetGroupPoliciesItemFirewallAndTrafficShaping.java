// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule;
import com.pulumi.meraki.networks.outputs.GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule;
import com.pulumi.meraki.networks.outputs.GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupPoliciesItemFirewallAndTrafficShaping {
    /**
     * @return An ordered array of the L3 firewall rules
     * 
     */
    private List<GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule> l3FirewallRules;
    /**
     * @return An ordered array of L7 firewall rules
     * 
     */
    private List<GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule> l7FirewallRules;
    /**
     * @return How firewall and traffic shaping rules are enforced. Can be &#39;network default&#39;, &#39;ignore&#39; or &#39;custom&#39;.
     * 
     */
    private String settings;
    /**
     * @return An array of traffic shaping rules. Rules are applied in the order that
     * they are specified in. An empty list (or null) means no rules. Note that
     * you are allowed a maximum of 8 rules.
     * 
     */
    private List<GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule> trafficShapingRules;

    private GetGroupPoliciesItemFirewallAndTrafficShaping() {}
    /**
     * @return An ordered array of the L3 firewall rules
     * 
     */
    public List<GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule> l3FirewallRules() {
        return this.l3FirewallRules;
    }
    /**
     * @return An ordered array of L7 firewall rules
     * 
     */
    public List<GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule> l7FirewallRules() {
        return this.l7FirewallRules;
    }
    /**
     * @return How firewall and traffic shaping rules are enforced. Can be &#39;network default&#39;, &#39;ignore&#39; or &#39;custom&#39;.
     * 
     */
    public String settings() {
        return this.settings;
    }
    /**
     * @return An array of traffic shaping rules. Rules are applied in the order that
     * they are specified in. An empty list (or null) means no rules. Note that
     * you are allowed a maximum of 8 rules.
     * 
     */
    public List<GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule> trafficShapingRules() {
        return this.trafficShapingRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupPoliciesItemFirewallAndTrafficShaping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule> l3FirewallRules;
        private List<GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule> l7FirewallRules;
        private String settings;
        private List<GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule> trafficShapingRules;
        public Builder() {}
        public Builder(GetGroupPoliciesItemFirewallAndTrafficShaping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.l3FirewallRules = defaults.l3FirewallRules;
    	      this.l7FirewallRules = defaults.l7FirewallRules;
    	      this.settings = defaults.settings;
    	      this.trafficShapingRules = defaults.trafficShapingRules;
        }

        @CustomType.Setter
        public Builder l3FirewallRules(List<GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule> l3FirewallRules) {
            if (l3FirewallRules == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShaping", "l3FirewallRules");
            }
            this.l3FirewallRules = l3FirewallRules;
            return this;
        }
        public Builder l3FirewallRules(GetGroupPoliciesItemFirewallAndTrafficShapingL3FirewallRule... l3FirewallRules) {
            return l3FirewallRules(List.of(l3FirewallRules));
        }
        @CustomType.Setter
        public Builder l7FirewallRules(List<GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule> l7FirewallRules) {
            if (l7FirewallRules == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShaping", "l7FirewallRules");
            }
            this.l7FirewallRules = l7FirewallRules;
            return this;
        }
        public Builder l7FirewallRules(GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule... l7FirewallRules) {
            return l7FirewallRules(List.of(l7FirewallRules));
        }
        @CustomType.Setter
        public Builder settings(String settings) {
            if (settings == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShaping", "settings");
            }
            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder trafficShapingRules(List<GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule> trafficShapingRules) {
            if (trafficShapingRules == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShaping", "trafficShapingRules");
            }
            this.trafficShapingRules = trafficShapingRules;
            return this;
        }
        public Builder trafficShapingRules(GetGroupPoliciesItemFirewallAndTrafficShapingTrafficShapingRule... trafficShapingRules) {
            return trafficShapingRules(List.of(trafficShapingRules));
        }
        public GetGroupPoliciesItemFirewallAndTrafficShaping build() {
            final var _resultValue = new GetGroupPoliciesItemFirewallAndTrafficShaping();
            _resultValue.l3FirewallRules = l3FirewallRules;
            _resultValue.l7FirewallRules = l7FirewallRules;
            _resultValue.settings = settings;
            _resultValue.trafficShapingRules = trafficShapingRules;
            return _resultValue;
        }
    }
}
