// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmBypassActivationLockAttemptsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SmBypassActivationLockAttemptsArgs Empty = new SmBypassActivationLockAttemptsArgs();

    /**
     * attemptId path parameter. Attempt ID
     * 
     */
    @Import(name="attemptId")
    private @Nullable Output<String> attemptId;

    /**
     * @return attemptId path parameter. Attempt ID
     * 
     */
    public Optional<Output<String>> attemptId() {
        return Optional.ofNullable(this.attemptId);
    }

    /**
     * The ids of the devices to attempt activation lock bypass.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return The ids of the devices to attempt activation lock bypass.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    private SmBypassActivationLockAttemptsArgs() {}

    private SmBypassActivationLockAttemptsArgs(SmBypassActivationLockAttemptsArgs $) {
        this.attemptId = $.attemptId;
        this.ids = $.ids;
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmBypassActivationLockAttemptsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmBypassActivationLockAttemptsArgs $;

        public Builder() {
            $ = new SmBypassActivationLockAttemptsArgs();
        }

        public Builder(SmBypassActivationLockAttemptsArgs defaults) {
            $ = new SmBypassActivationLockAttemptsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attemptId attemptId path parameter. Attempt ID
         * 
         * @return builder
         * 
         */
        public Builder attemptId(@Nullable Output<String> attemptId) {
            $.attemptId = attemptId;
            return this;
        }

        /**
         * @param attemptId attemptId path parameter. Attempt ID
         * 
         * @return builder
         * 
         */
        public Builder attemptId(String attemptId) {
            return attemptId(Output.of(attemptId));
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        public SmBypassActivationLockAttemptsArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("SmBypassActivationLockAttemptsArgs", "networkId");
            }
            return $;
        }
    }

}
