// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceContentFilteringItemBlockedUrlCategory;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceContentFilteringItem {
    private List<String> allowedUrlPatterns;
    private List<GetApplianceContentFilteringItemBlockedUrlCategory> blockedUrlCategories;
    private List<String> blockedUrlPatterns;
    private String urlCategoryListSize;

    private GetApplianceContentFilteringItem() {}
    public List<String> allowedUrlPatterns() {
        return this.allowedUrlPatterns;
    }
    public List<GetApplianceContentFilteringItemBlockedUrlCategory> blockedUrlCategories() {
        return this.blockedUrlCategories;
    }
    public List<String> blockedUrlPatterns() {
        return this.blockedUrlPatterns;
    }
    public String urlCategoryListSize() {
        return this.urlCategoryListSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceContentFilteringItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedUrlPatterns;
        private List<GetApplianceContentFilteringItemBlockedUrlCategory> blockedUrlCategories;
        private List<String> blockedUrlPatterns;
        private String urlCategoryListSize;
        public Builder() {}
        public Builder(GetApplianceContentFilteringItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedUrlPatterns = defaults.allowedUrlPatterns;
    	      this.blockedUrlCategories = defaults.blockedUrlCategories;
    	      this.blockedUrlPatterns = defaults.blockedUrlPatterns;
    	      this.urlCategoryListSize = defaults.urlCategoryListSize;
        }

        @CustomType.Setter
        public Builder allowedUrlPatterns(List<String> allowedUrlPatterns) {
            if (allowedUrlPatterns == null) {
              throw new MissingRequiredPropertyException("GetApplianceContentFilteringItem", "allowedUrlPatterns");
            }
            this.allowedUrlPatterns = allowedUrlPatterns;
            return this;
        }
        public Builder allowedUrlPatterns(String... allowedUrlPatterns) {
            return allowedUrlPatterns(List.of(allowedUrlPatterns));
        }
        @CustomType.Setter
        public Builder blockedUrlCategories(List<GetApplianceContentFilteringItemBlockedUrlCategory> blockedUrlCategories) {
            if (blockedUrlCategories == null) {
              throw new MissingRequiredPropertyException("GetApplianceContentFilteringItem", "blockedUrlCategories");
            }
            this.blockedUrlCategories = blockedUrlCategories;
            return this;
        }
        public Builder blockedUrlCategories(GetApplianceContentFilteringItemBlockedUrlCategory... blockedUrlCategories) {
            return blockedUrlCategories(List.of(blockedUrlCategories));
        }
        @CustomType.Setter
        public Builder blockedUrlPatterns(List<String> blockedUrlPatterns) {
            if (blockedUrlPatterns == null) {
              throw new MissingRequiredPropertyException("GetApplianceContentFilteringItem", "blockedUrlPatterns");
            }
            this.blockedUrlPatterns = blockedUrlPatterns;
            return this;
        }
        public Builder blockedUrlPatterns(String... blockedUrlPatterns) {
            return blockedUrlPatterns(List.of(blockedUrlPatterns));
        }
        @CustomType.Setter
        public Builder urlCategoryListSize(String urlCategoryListSize) {
            if (urlCategoryListSize == null) {
              throw new MissingRequiredPropertyException("GetApplianceContentFilteringItem", "urlCategoryListSize");
            }
            this.urlCategoryListSize = urlCategoryListSize;
            return this;
        }
        public GetApplianceContentFilteringItem build() {
            final var _resultValue = new GetApplianceContentFilteringItem();
            _resultValue.allowedUrlPatterns = allowedUrlPatterns;
            _resultValue.blockedUrlCategories = blockedUrlCategories;
            _resultValue.blockedUrlPatterns = blockedUrlPatterns;
            _resultValue.urlCategoryListSize = urlCategoryListSize;
            return _resultValue;
        }
    }
}
