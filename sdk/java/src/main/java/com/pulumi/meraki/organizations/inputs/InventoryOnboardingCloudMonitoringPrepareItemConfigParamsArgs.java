// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs;
import com.pulumi.meraki.organizations.inputs.InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs Empty = new InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs();

    /**
     * Static IP Address used to connect to the device
     * 
     */
    @Import(name="cloudStaticIp")
    private @Nullable Output<String> cloudStaticIp;

    /**
     * @return Static IP Address used to connect to the device
     * 
     */
    public Optional<Output<String>> cloudStaticIp() {
        return Optional.ofNullable(this.cloudStaticIp);
    }

    /**
     * Configuration options used to connect to the device
     * 
     */
    @Import(name="tunnel")
    private @Nullable Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs> tunnel;

    /**
     * @return Configuration options used to connect to the device
     * 
     */
    public Optional<Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs>> tunnel() {
        return Optional.ofNullable(this.tunnel);
    }

    /**
     * User credentials used to connect to the device
     * 
     */
    @Import(name="user")
    private @Nullable Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs> user;

    /**
     * @return User credentials used to connect to the device
     * 
     */
    public Optional<Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs>> user() {
        return Optional.ofNullable(this.user);
    }

    private InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs() {}

    private InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs $) {
        this.cloudStaticIp = $.cloudStaticIp;
        this.tunnel = $.tunnel;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs $;

        public Builder() {
            $ = new InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs();
        }

        public Builder(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs defaults) {
            $ = new InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudStaticIp Static IP Address used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder cloudStaticIp(@Nullable Output<String> cloudStaticIp) {
            $.cloudStaticIp = cloudStaticIp;
            return this;
        }

        /**
         * @param cloudStaticIp Static IP Address used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder cloudStaticIp(String cloudStaticIp) {
            return cloudStaticIp(Output.of(cloudStaticIp));
        }

        /**
         * @param tunnel Configuration options used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder tunnel(@Nullable Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs> tunnel) {
            $.tunnel = tunnel;
            return this;
        }

        /**
         * @param tunnel Configuration options used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder tunnel(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs tunnel) {
            return tunnel(Output.of(tunnel));
        }

        /**
         * @param user User credentials used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder user(@Nullable Output<InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user User credentials used to connect to the device
         * 
         * @return builder
         * 
         */
        public Builder user(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs user) {
            return user(Output.of(user));
        }

        public InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs build() {
            return $;
        }
    }

}
