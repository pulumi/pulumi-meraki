// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem {
    /**
     * @return Whether this switch has a trusted DAI port. Always false if supportsInspection is false.
     * 
     */
    private Boolean hasTrustedPort;
    /**
     * @return Switch name.
     * 
     */
    private String name;
    /**
     * @return Switch serial.
     * 
     */
    private String serial;
    /**
     * @return Whether this switch supports Dynamic ARP Inspection.
     * 
     */
    private Boolean supportsInspection;
    /**
     * @return Url link to switch.
     * 
     */
    private String url;

    private GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem() {}
    /**
     * @return Whether this switch has a trusted DAI port. Always false if supportsInspection is false.
     * 
     */
    public Boolean hasTrustedPort() {
        return this.hasTrustedPort;
    }
    /**
     * @return Switch name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Switch serial.
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Whether this switch supports Dynamic ARP Inspection.
     * 
     */
    public Boolean supportsInspection() {
        return this.supportsInspection;
    }
    /**
     * @return Url link to switch.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean hasTrustedPort;
        private String name;
        private String serial;
        private Boolean supportsInspection;
        private String url;
        public Builder() {}
        public Builder(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hasTrustedPort = defaults.hasTrustedPort;
    	      this.name = defaults.name;
    	      this.serial = defaults.serial;
    	      this.supportsInspection = defaults.supportsInspection;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder hasTrustedPort(Boolean hasTrustedPort) {
            if (hasTrustedPort == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem", "hasTrustedPort");
            }
            this.hasTrustedPort = hasTrustedPort;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder supportsInspection(Boolean supportsInspection) {
            if (supportsInspection == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem", "supportsInspection");
            }
            this.supportsInspection = supportsInspection;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem", "url");
            }
            this.url = url;
            return this;
        }
        public GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem build() {
            final var _resultValue = new GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceItem();
            _resultValue.hasTrustedPort = hasTrustedPort;
            _resultValue.name = name;
            _resultValue.serial = serial;
            _resultValue.supportsInspection = supportsInspection;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
