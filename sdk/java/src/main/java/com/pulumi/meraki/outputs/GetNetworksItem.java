// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworksItem {
    /**
     * @return Enrollment string for the network
     * 
     */
    private String enrollmentString;
    /**
     * @return Network ID
     * 
     */
    private String id;
    /**
     * @return If the network is bound to a config template
     * 
     */
    private Boolean isBoundToConfigTemplate;
    /**
     * @return Network name
     * 
     */
    private String name;
    /**
     * @return Notes for the network
     * 
     */
    private String notes;
    /**
     * @return Organization ID
     * 
     */
    private String organizationId;
    /**
     * @return List of the product types that the network supports
     * 
     */
    private List<String> productTypes;
    /**
     * @return Network tags
     * 
     */
    private List<String> tags;
    /**
     * @return Timezone of the network
     * 
     */
    private String timeZone;
    /**
     * @return URL to the network Dashboard UI
     * 
     */
    private String url;

    private GetNetworksItem() {}
    /**
     * @return Enrollment string for the network
     * 
     */
    public String enrollmentString() {
        return this.enrollmentString;
    }
    /**
     * @return Network ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return If the network is bound to a config template
     * 
     */
    public Boolean isBoundToConfigTemplate() {
        return this.isBoundToConfigTemplate;
    }
    /**
     * @return Network name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Notes for the network
     * 
     */
    public String notes() {
        return this.notes;
    }
    /**
     * @return Organization ID
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return List of the product types that the network supports
     * 
     */
    public List<String> productTypes() {
        return this.productTypes;
    }
    /**
     * @return Network tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Timezone of the network
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return URL to the network Dashboard UI
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworksItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String enrollmentString;
        private String id;
        private Boolean isBoundToConfigTemplate;
        private String name;
        private String notes;
        private String organizationId;
        private List<String> productTypes;
        private List<String> tags;
        private String timeZone;
        private String url;
        public Builder() {}
        public Builder(GetNetworksItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enrollmentString = defaults.enrollmentString;
    	      this.id = defaults.id;
    	      this.isBoundToConfigTemplate = defaults.isBoundToConfigTemplate;
    	      this.name = defaults.name;
    	      this.notes = defaults.notes;
    	      this.organizationId = defaults.organizationId;
    	      this.productTypes = defaults.productTypes;
    	      this.tags = defaults.tags;
    	      this.timeZone = defaults.timeZone;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder enrollmentString(String enrollmentString) {
            if (enrollmentString == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "enrollmentString");
            }
            this.enrollmentString = enrollmentString;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isBoundToConfigTemplate(Boolean isBoundToConfigTemplate) {
            if (isBoundToConfigTemplate == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "isBoundToConfigTemplate");
            }
            this.isBoundToConfigTemplate = isBoundToConfigTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notes(String notes) {
            if (notes == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "notes");
            }
            this.notes = notes;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder productTypes(List<String> productTypes) {
            if (productTypes == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "productTypes");
            }
            this.productTypes = productTypes;
            return this;
        }
        public Builder productTypes(String... productTypes) {
            return productTypes(List.of(productTypes));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetNetworksItem", "url");
            }
            this.url = url;
            return this;
        }
        public GetNetworksItem build() {
            final var _resultValue = new GetNetworksItem();
            _resultValue.enrollmentString = enrollmentString;
            _resultValue.id = id;
            _resultValue.isBoundToConfigTemplate = isBoundToConfigTemplate;
            _resultValue.name = name;
            _resultValue.notes = notes;
            _resultValue.organizationId = organizationId;
            _resultValue.productTypes = productTypes;
            _resultValue.tags = tags;
            _resultValue.timeZone = timeZone;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
