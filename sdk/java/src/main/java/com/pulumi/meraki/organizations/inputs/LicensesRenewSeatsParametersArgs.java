// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensesRenewSeatsParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensesRenewSeatsParametersArgs Empty = new LicensesRenewSeatsParametersArgs();

    /**
     * The ID of the SM license to renew. This license must already be assigned to an SM network
     * 
     */
    @Import(name="licenseIdToRenew")
    private @Nullable Output<String> licenseIdToRenew;

    /**
     * @return The ID of the SM license to renew. This license must already be assigned to an SM network
     * 
     */
    public Optional<Output<String>> licenseIdToRenew() {
        return Optional.ofNullable(this.licenseIdToRenew);
    }

    /**
     * The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
     * 
     */
    @Import(name="unusedLicenseId")
    private @Nullable Output<String> unusedLicenseId;

    /**
     * @return The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
     * 
     */
    public Optional<Output<String>> unusedLicenseId() {
        return Optional.ofNullable(this.unusedLicenseId);
    }

    private LicensesRenewSeatsParametersArgs() {}

    private LicensesRenewSeatsParametersArgs(LicensesRenewSeatsParametersArgs $) {
        this.licenseIdToRenew = $.licenseIdToRenew;
        this.unusedLicenseId = $.unusedLicenseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensesRenewSeatsParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensesRenewSeatsParametersArgs $;

        public Builder() {
            $ = new LicensesRenewSeatsParametersArgs();
        }

        public Builder(LicensesRenewSeatsParametersArgs defaults) {
            $ = new LicensesRenewSeatsParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseIdToRenew The ID of the SM license to renew. This license must already be assigned to an SM network
         * 
         * @return builder
         * 
         */
        public Builder licenseIdToRenew(@Nullable Output<String> licenseIdToRenew) {
            $.licenseIdToRenew = licenseIdToRenew;
            return this;
        }

        /**
         * @param licenseIdToRenew The ID of the SM license to renew. This license must already be assigned to an SM network
         * 
         * @return builder
         * 
         */
        public Builder licenseIdToRenew(String licenseIdToRenew) {
            return licenseIdToRenew(Output.of(licenseIdToRenew));
        }

        /**
         * @param unusedLicenseId The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
         * 
         * @return builder
         * 
         */
        public Builder unusedLicenseId(@Nullable Output<String> unusedLicenseId) {
            $.unusedLicenseId = unusedLicenseId;
            return this;
        }

        /**
         * @param unusedLicenseId The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
         * 
         * @return builder
         * 
         */
        public Builder unusedLicenseId(String unusedLicenseId) {
            return unusedLicenseId(Output.of(unusedLicenseId));
        }

        public LicensesRenewSeatsParametersArgs build() {
            return $;
        }
    }

}
