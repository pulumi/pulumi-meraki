// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetLicensesOverviewItemLicenseTypeCounts;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLicensesOverviewItemLicenseType {
    /**
     * @return Aggregated count data for the license type
     * 
     */
    private GetLicensesOverviewItemLicenseTypeCounts counts;
    /**
     * @return License type
     * 
     */
    private String licenseType;

    private GetLicensesOverviewItemLicenseType() {}
    /**
     * @return Aggregated count data for the license type
     * 
     */
    public GetLicensesOverviewItemLicenseTypeCounts counts() {
        return this.counts;
    }
    /**
     * @return License type
     * 
     */
    public String licenseType() {
        return this.licenseType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicensesOverviewItemLicenseType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetLicensesOverviewItemLicenseTypeCounts counts;
        private String licenseType;
        public Builder() {}
        public Builder(GetLicensesOverviewItemLicenseType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.counts = defaults.counts;
    	      this.licenseType = defaults.licenseType;
        }

        @CustomType.Setter
        public Builder counts(GetLicensesOverviewItemLicenseTypeCounts counts) {
            if (counts == null) {
              throw new MissingRequiredPropertyException("GetLicensesOverviewItemLicenseType", "counts");
            }
            this.counts = counts;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(String licenseType) {
            if (licenseType == null) {
              throw new MissingRequiredPropertyException("GetLicensesOverviewItemLicenseType", "licenseType");
            }
            this.licenseType = licenseType;
            return this;
        }
        public GetLicensesOverviewItemLicenseType build() {
            final var _resultValue = new GetLicensesOverviewItemLicenseType();
            _resultValue.counts = counts;
            _resultValue.licenseType = licenseType;
            return _resultValue;
        }
    }
}
