// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.ApplianceSecurityMalwareAllowedFileArgs;
import com.pulumi.meraki.networks.inputs.ApplianceSecurityMalwareAllowedUrlArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceSecurityMalwareState extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceSecurityMalwareState Empty = new ApplianceSecurityMalwareState();

    /**
     * Sha256 digests of files permitted by the malware detection engine
     * 
     */
    @Import(name="allowedFiles")
    private @Nullable Output<List<ApplianceSecurityMalwareAllowedFileArgs>> allowedFiles;

    /**
     * @return Sha256 digests of files permitted by the malware detection engine
     * 
     */
    public Optional<Output<List<ApplianceSecurityMalwareAllowedFileArgs>>> allowedFiles() {
        return Optional.ofNullable(this.allowedFiles);
    }

    /**
     * URLs permitted by the malware detection engine
     * 
     */
    @Import(name="allowedUrls")
    private @Nullable Output<List<ApplianceSecurityMalwareAllowedUrlArgs>> allowedUrls;

    /**
     * @return URLs permitted by the malware detection engine
     * 
     */
    public Optional<Output<List<ApplianceSecurityMalwareAllowedUrlArgs>>> allowedUrls() {
        return Optional.ofNullable(this.allowedUrls);
    }

    /**
     * Current status of malware prevention
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Current status of malware prevention
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    private ApplianceSecurityMalwareState() {}

    private ApplianceSecurityMalwareState(ApplianceSecurityMalwareState $) {
        this.allowedFiles = $.allowedFiles;
        this.allowedUrls = $.allowedUrls;
        this.mode = $.mode;
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceSecurityMalwareState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceSecurityMalwareState $;

        public Builder() {
            $ = new ApplianceSecurityMalwareState();
        }

        public Builder(ApplianceSecurityMalwareState defaults) {
            $ = new ApplianceSecurityMalwareState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedFiles Sha256 digests of files permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedFiles(@Nullable Output<List<ApplianceSecurityMalwareAllowedFileArgs>> allowedFiles) {
            $.allowedFiles = allowedFiles;
            return this;
        }

        /**
         * @param allowedFiles Sha256 digests of files permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedFiles(List<ApplianceSecurityMalwareAllowedFileArgs> allowedFiles) {
            return allowedFiles(Output.of(allowedFiles));
        }

        /**
         * @param allowedFiles Sha256 digests of files permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedFiles(ApplianceSecurityMalwareAllowedFileArgs... allowedFiles) {
            return allowedFiles(List.of(allowedFiles));
        }

        /**
         * @param allowedUrls URLs permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedUrls(@Nullable Output<List<ApplianceSecurityMalwareAllowedUrlArgs>> allowedUrls) {
            $.allowedUrls = allowedUrls;
            return this;
        }

        /**
         * @param allowedUrls URLs permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedUrls(List<ApplianceSecurityMalwareAllowedUrlArgs> allowedUrls) {
            return allowedUrls(Output.of(allowedUrls));
        }

        /**
         * @param allowedUrls URLs permitted by the malware detection engine
         * 
         * @return builder
         * 
         */
        public Builder allowedUrls(ApplianceSecurityMalwareAllowedUrlArgs... allowedUrls) {
            return allowedUrls(List.of(allowedUrls));
        }

        /**
         * @param mode Current status of malware prevention
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Current status of malware prevention
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        public ApplianceSecurityMalwareState build() {
            return $;
        }
    }

}
