// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetFirmwareUpgradesByDeviceItemUpgradeFromVersion;
import com.pulumi.meraki.organizations.outputs.GetFirmwareUpgradesByDeviceItemUpgradeStaged;
import com.pulumi.meraki.organizations.outputs.GetFirmwareUpgradesByDeviceItemUpgradeToVersion;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFirmwareUpgradesByDeviceItemUpgrade {
    /**
     * @return The initial version of the device
     * 
     */
    private GetFirmwareUpgradesByDeviceItemUpgradeFromVersion fromVersion;
    /**
     * @return ID of the upgrade
     * 
     */
    private String id;
    /**
     * @return Staged upgrade
     * 
     */
    private GetFirmwareUpgradesByDeviceItemUpgradeStaged staged;
    /**
     * @return Status of the upgrade
     * 
     */
    private String status;
    /**
     * @return Start time of the upgrade
     * 
     */
    private String time;
    /**
     * @return Version the device is upgrading to
     * 
     */
    private GetFirmwareUpgradesByDeviceItemUpgradeToVersion toVersion;
    /**
     * @return ID of the upgrade batch
     * 
     */
    private String upgradeBatchId;

    private GetFirmwareUpgradesByDeviceItemUpgrade() {}
    /**
     * @return The initial version of the device
     * 
     */
    public GetFirmwareUpgradesByDeviceItemUpgradeFromVersion fromVersion() {
        return this.fromVersion;
    }
    /**
     * @return ID of the upgrade
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Staged upgrade
     * 
     */
    public GetFirmwareUpgradesByDeviceItemUpgradeStaged staged() {
        return this.staged;
    }
    /**
     * @return Status of the upgrade
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Start time of the upgrade
     * 
     */
    public String time() {
        return this.time;
    }
    /**
     * @return Version the device is upgrading to
     * 
     */
    public GetFirmwareUpgradesByDeviceItemUpgradeToVersion toVersion() {
        return this.toVersion;
    }
    /**
     * @return ID of the upgrade batch
     * 
     */
    public String upgradeBatchId() {
        return this.upgradeBatchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirmwareUpgradesByDeviceItemUpgrade defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetFirmwareUpgradesByDeviceItemUpgradeFromVersion fromVersion;
        private String id;
        private GetFirmwareUpgradesByDeviceItemUpgradeStaged staged;
        private String status;
        private String time;
        private GetFirmwareUpgradesByDeviceItemUpgradeToVersion toVersion;
        private String upgradeBatchId;
        public Builder() {}
        public Builder(GetFirmwareUpgradesByDeviceItemUpgrade defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fromVersion = defaults.fromVersion;
    	      this.id = defaults.id;
    	      this.staged = defaults.staged;
    	      this.status = defaults.status;
    	      this.time = defaults.time;
    	      this.toVersion = defaults.toVersion;
    	      this.upgradeBatchId = defaults.upgradeBatchId;
        }

        @CustomType.Setter
        public Builder fromVersion(GetFirmwareUpgradesByDeviceItemUpgradeFromVersion fromVersion) {
            if (fromVersion == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "fromVersion");
            }
            this.fromVersion = fromVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder staged(GetFirmwareUpgradesByDeviceItemUpgradeStaged staged) {
            if (staged == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "staged");
            }
            this.staged = staged;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder time(String time) {
            if (time == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "time");
            }
            this.time = time;
            return this;
        }
        @CustomType.Setter
        public Builder toVersion(GetFirmwareUpgradesByDeviceItemUpgradeToVersion toVersion) {
            if (toVersion == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "toVersion");
            }
            this.toVersion = toVersion;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeBatchId(String upgradeBatchId) {
            if (upgradeBatchId == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesByDeviceItemUpgrade", "upgradeBatchId");
            }
            this.upgradeBatchId = upgradeBatchId;
            return this;
        }
        public GetFirmwareUpgradesByDeviceItemUpgrade build() {
            final var _resultValue = new GetFirmwareUpgradesByDeviceItemUpgrade();
            _resultValue.fromVersion = fromVersion;
            _resultValue.id = id;
            _resultValue.staged = staged;
            _resultValue.status = status;
            _resultValue.time = time;
            _resultValue.toVersion = toVersion;
            _resultValue.upgradeBatchId = upgradeBatchId;
            return _resultValue;
        }
    }
}
