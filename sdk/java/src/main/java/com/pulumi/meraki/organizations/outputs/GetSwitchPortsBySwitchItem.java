// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetSwitchPortsBySwitchItemNetwork;
import com.pulumi.meraki.organizations.outputs.GetSwitchPortsBySwitchItemPort;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSwitchPortsBySwitchItem {
    /**
     * @return The MAC address of the switch.
     * 
     */
    private String mac;
    /**
     * @return The model of the switch.
     * 
     */
    private String model;
    /**
     * @return The name of the switch.
     * 
     */
    private String name;
    /**
     * @return Identifying information of the switch&#39;s network.
     * 
     */
    private GetSwitchPortsBySwitchItemNetwork network;
    /**
     * @return Ports belonging to the switch
     * 
     */
    private List<GetSwitchPortsBySwitchItemPort> ports;
    /**
     * @return The serial number of the switch.
     * 
     */
    private String serial;

    private GetSwitchPortsBySwitchItem() {}
    /**
     * @return The MAC address of the switch.
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return The model of the switch.
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return The name of the switch.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Identifying information of the switch&#39;s network.
     * 
     */
    public GetSwitchPortsBySwitchItemNetwork network() {
        return this.network;
    }
    /**
     * @return Ports belonging to the switch
     * 
     */
    public List<GetSwitchPortsBySwitchItemPort> ports() {
        return this.ports;
    }
    /**
     * @return The serial number of the switch.
     * 
     */
    public String serial() {
        return this.serial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchPortsBySwitchItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mac;
        private String model;
        private String name;
        private GetSwitchPortsBySwitchItemNetwork network;
        private List<GetSwitchPortsBySwitchItemPort> ports;
        private String serial;
        public Builder() {}
        public Builder(GetSwitchPortsBySwitchItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.ports = defaults.ports;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(GetSwitchPortsBySwitchItemNetwork network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder ports(List<GetSwitchPortsBySwitchItemPort> ports) {
            if (ports == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "ports");
            }
            this.ports = ports;
            return this;
        }
        public Builder ports(GetSwitchPortsBySwitchItemPort... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsBySwitchItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        public GetSwitchPortsBySwitchItem build() {
            final var _resultValue = new GetSwitchPortsBySwitchItem();
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.ports = ports;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
