// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LicensesRenewSeatsParameters {
    /**
     * @return The ID of the SM license to renew. This license must already be assigned to an SM network
     * 
     */
    private @Nullable String licenseIdToRenew;
    /**
     * @return The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
     * 
     */
    private @Nullable String unusedLicenseId;

    private LicensesRenewSeatsParameters() {}
    /**
     * @return The ID of the SM license to renew. This license must already be assigned to an SM network
     * 
     */
    public Optional<String> licenseIdToRenew() {
        return Optional.ofNullable(this.licenseIdToRenew);
    }
    /**
     * @return The SM license to use to renew the seats on &#39;licenseIdToRenew&#39;. This license must have at least as many seats available as there are seats on &#39;licenseIdToRenew&#39;
     * 
     */
    public Optional<String> unusedLicenseId() {
        return Optional.ofNullable(this.unusedLicenseId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicensesRenewSeatsParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String licenseIdToRenew;
        private @Nullable String unusedLicenseId;
        public Builder() {}
        public Builder(LicensesRenewSeatsParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.licenseIdToRenew = defaults.licenseIdToRenew;
    	      this.unusedLicenseId = defaults.unusedLicenseId;
        }

        @CustomType.Setter
        public Builder licenseIdToRenew(@Nullable String licenseIdToRenew) {

            this.licenseIdToRenew = licenseIdToRenew;
            return this;
        }
        @CustomType.Setter
        public Builder unusedLicenseId(@Nullable String unusedLicenseId) {

            this.unusedLicenseId = unusedLicenseId;
            return this;
        }
        public LicensesRenewSeatsParameters build() {
            final var _resultValue = new LicensesRenewSeatsParameters();
            _resultValue.licenseIdToRenew = licenseIdToRenew;
            _resultValue.unusedLicenseId = unusedLicenseId;
            return _resultValue;
        }
    }
}
