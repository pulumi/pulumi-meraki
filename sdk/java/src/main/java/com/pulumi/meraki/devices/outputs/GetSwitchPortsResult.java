// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetSwitchPortsItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSwitchPortsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private GetSwitchPortsItem item;
    /**
     * @return Array of ResponseSwitchGetDeviceSwitchPorts
     * 
     */
    private List<GetSwitchPortsItem> items;
    /**
     * @return portId path parameter. Port ID
     * 
     */
    private @Nullable String portId;
    /**
     * @return serial path parameter.
     * 
     */
    private @Nullable String serial;

    private GetSwitchPortsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public GetSwitchPortsItem item() {
        return this.item;
    }
    /**
     * @return Array of ResponseSwitchGetDeviceSwitchPorts
     * 
     */
    public List<GetSwitchPortsItem> items() {
        return this.items;
    }
    /**
     * @return portId path parameter. Port ID
     * 
     */
    public Optional<String> portId() {
        return Optional.ofNullable(this.portId);
    }
    /**
     * @return serial path parameter.
     * 
     */
    public Optional<String> serial() {
        return Optional.ofNullable(this.serial);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchPortsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private GetSwitchPortsItem item;
        private List<GetSwitchPortsItem> items;
        private @Nullable String portId;
        private @Nullable String serial;
        public Builder() {}
        public Builder(GetSwitchPortsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.item = defaults.item;
    	      this.items = defaults.items;
    	      this.portId = defaults.portId;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder item(GetSwitchPortsItem item) {
            if (item == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsResult", "item");
            }
            this.item = item;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetSwitchPortsItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetSwitchPortsItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder portId(@Nullable String portId) {

            this.portId = portId;
            return this;
        }
        @CustomType.Setter
        public Builder serial(@Nullable String serial) {

            this.serial = serial;
            return this;
        }
        public GetSwitchPortsResult build() {
            final var _resultValue = new GetSwitchPortsResult();
            _resultValue.id = id;
            _resultValue.item = item;
            _resultValue.items = items;
            _resultValue.portId = portId;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
