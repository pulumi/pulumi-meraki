// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsIdentityPsksItem {
    /**
     * @return The email associated with the System&#39;s Manager User
     * 
     */
    private String email;
    /**
     * @return Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
     * 
     */
    private String expiresAt;
    /**
     * @return The group policy to be applied to clients
     * 
     */
    private String groupPolicyId;
    /**
     * @return The unique identifier of the Identity PSK
     * 
     */
    private String id;
    /**
     * @return The name of the Identity PSK
     * 
     */
    private String name;
    /**
     * @return The passphrase for client authentication
     * 
     */
    private String passphrase;
    /**
     * @return The WiFi Personal Network unique identifier
     * 
     */
    private String wifiPersonalNetworkId;

    private GetWirelessSsidsIdentityPsksItem() {}
    /**
     * @return The email associated with the System&#39;s Manager User
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return Timestamp for when the Identity PSK expires, or &#39;null&#39; to never expire
     * 
     */
    public String expiresAt() {
        return this.expiresAt;
    }
    /**
     * @return The group policy to be applied to clients
     * 
     */
    public String groupPolicyId() {
        return this.groupPolicyId;
    }
    /**
     * @return The unique identifier of the Identity PSK
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the Identity PSK
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The passphrase for client authentication
     * 
     */
    public String passphrase() {
        return this.passphrase;
    }
    /**
     * @return The WiFi Personal Network unique identifier
     * 
     */
    public String wifiPersonalNetworkId() {
        return this.wifiPersonalNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsIdentityPsksItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private String expiresAt;
        private String groupPolicyId;
        private String id;
        private String name;
        private String passphrase;
        private String wifiPersonalNetworkId;
        public Builder() {}
        public Builder(GetWirelessSsidsIdentityPsksItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.expiresAt = defaults.expiresAt;
    	      this.groupPolicyId = defaults.groupPolicyId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.passphrase = defaults.passphrase;
    	      this.wifiPersonalNetworkId = defaults.wifiPersonalNetworkId;
        }

        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder groupPolicyId(String groupPolicyId) {
            if (groupPolicyId == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "groupPolicyId");
            }
            this.groupPolicyId = groupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder passphrase(String passphrase) {
            if (passphrase == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "passphrase");
            }
            this.passphrase = passphrase;
            return this;
        }
        @CustomType.Setter
        public Builder wifiPersonalNetworkId(String wifiPersonalNetworkId) {
            if (wifiPersonalNetworkId == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsIdentityPsksItem", "wifiPersonalNetworkId");
            }
            this.wifiPersonalNetworkId = wifiPersonalNetworkId;
            return this;
        }
        public GetWirelessSsidsIdentityPsksItem build() {
            final var _resultValue = new GetWirelessSsidsIdentityPsksItem();
            _resultValue.email = email;
            _resultValue.expiresAt = expiresAt;
            _resultValue.groupPolicyId = groupPolicyId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.passphrase = passphrase;
            _resultValue.wifiPersonalNetworkId = wifiPersonalNetworkId;
            return _resultValue;
        }
    }
}
