// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingSubscriptionSubscriptionsClaimParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingSubscriptionSubscriptionsClaimParametersArgs Empty = new LicensingSubscriptionSubscriptionsClaimParametersArgs();

    /**
     * The subscription&#39;s claim key
     * 
     */
    @Import(name="claimKey")
    private @Nullable Output<String> claimKey;

    /**
     * @return The subscription&#39;s claim key
     * 
     */
    public Optional<Output<String>> claimKey() {
        return Optional.ofNullable(this.claimKey);
    }

    /**
     * Extra details or notes about the subscription
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Extra details or notes about the subscription
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Friendly name to identify the subscription
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Friendly name to identify the subscription
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The id of the organization claiming the subscription
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The id of the organization claiming the subscription
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private LicensingSubscriptionSubscriptionsClaimParametersArgs() {}

    private LicensingSubscriptionSubscriptionsClaimParametersArgs(LicensingSubscriptionSubscriptionsClaimParametersArgs $) {
        this.claimKey = $.claimKey;
        this.description = $.description;
        this.name = $.name;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingSubscriptionSubscriptionsClaimParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingSubscriptionSubscriptionsClaimParametersArgs $;

        public Builder() {
            $ = new LicensingSubscriptionSubscriptionsClaimParametersArgs();
        }

        public Builder(LicensingSubscriptionSubscriptionsClaimParametersArgs defaults) {
            $ = new LicensingSubscriptionSubscriptionsClaimParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param claimKey The subscription&#39;s claim key
         * 
         * @return builder
         * 
         */
        public Builder claimKey(@Nullable Output<String> claimKey) {
            $.claimKey = claimKey;
            return this;
        }

        /**
         * @param claimKey The subscription&#39;s claim key
         * 
         * @return builder
         * 
         */
        public Builder claimKey(String claimKey) {
            return claimKey(Output.of(claimKey));
        }

        /**
         * @param description Extra details or notes about the subscription
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Extra details or notes about the subscription
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Friendly name to identify the subscription
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Friendly name to identify the subscription
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId The id of the organization claiming the subscription
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The id of the organization claiming the subscription
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public LicensingSubscriptionSubscriptionsClaimParametersArgs build() {
            return $;
        }
    }

}
