// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWirelessLatencyStatsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWirelessLatencyStatsArgs Empty = new GetWirelessLatencyStatsArgs();

    /**
     * apTag query parameter. Filter results by AP Tag
     * 
     */
    @Import(name="apTag")
    private @Nullable Output<String> apTag;

    /**
     * @return apTag query parameter. Filter results by AP Tag
     * 
     */
    public Optional<Output<String>> apTag() {
        return Optional.ofNullable(this.apTag);
    }

    /**
     * band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
     * 
     */
    @Import(name="band")
    private @Nullable Output<String> band;

    /**
     * @return band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
     * 
     */
    public Optional<Output<String>> band() {
        return Optional.ofNullable(this.band);
    }

    /**
     * fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
     * 
     */
    @Import(name="fields")
    private @Nullable Output<String> fields;

    /**
     * @return fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
     * 
     */
    public Optional<Output<String>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial", required=true)
    private Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Output<String> serial() {
        return this.serial;
    }

    /**
     * ssid query parameter. Filter results by SSID
     * 
     */
    @Import(name="ssid")
    private @Nullable Output<Integer> ssid;

    /**
     * @return ssid query parameter. Filter results by SSID
     * 
     */
    public Optional<Output<Integer>> ssid() {
        return Optional.ofNullable(this.ssid);
    }

    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
     * 
     */
    @Import(name="t0")
    private @Nullable Output<String> t0;

    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
     * 
     */
    public Optional<Output<String>> t0() {
        return Optional.ofNullable(this.t0);
    }

    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    @Import(name="t1")
    private @Nullable Output<String> t1;

    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    public Optional<Output<String>> t1() {
        return Optional.ofNullable(this.t1);
    }

    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
     * 
     */
    @Import(name="timespan")
    private @Nullable Output<Double> timespan;

    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
     * 
     */
    public Optional<Output<Double>> timespan() {
        return Optional.ofNullable(this.timespan);
    }

    /**
     * vlan query parameter. Filter results by VLAN
     * 
     */
    @Import(name="vlan")
    private @Nullable Output<Integer> vlan;

    /**
     * @return vlan query parameter. Filter results by VLAN
     * 
     */
    public Optional<Output<Integer>> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    private GetWirelessLatencyStatsArgs() {}

    private GetWirelessLatencyStatsArgs(GetWirelessLatencyStatsArgs $) {
        this.apTag = $.apTag;
        this.band = $.band;
        this.fields = $.fields;
        this.serial = $.serial;
        this.ssid = $.ssid;
        this.t0 = $.t0;
        this.t1 = $.t1;
        this.timespan = $.timespan;
        this.vlan = $.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWirelessLatencyStatsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWirelessLatencyStatsArgs $;

        public Builder() {
            $ = new GetWirelessLatencyStatsArgs();
        }

        public Builder(GetWirelessLatencyStatsArgs defaults) {
            $ = new GetWirelessLatencyStatsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apTag apTag query parameter. Filter results by AP Tag
         * 
         * @return builder
         * 
         */
        public Builder apTag(@Nullable Output<String> apTag) {
            $.apTag = apTag;
            return this;
        }

        /**
         * @param apTag apTag query parameter. Filter results by AP Tag
         * 
         * @return builder
         * 
         */
        public Builder apTag(String apTag) {
            return apTag(Output.of(apTag));
        }

        /**
         * @param band band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
         * 
         * @return builder
         * 
         */
        public Builder band(@Nullable Output<String> band) {
            $.band = band;
            return this;
        }

        /**
         * @param band band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
         * 
         * @return builder
         * 
         */
        public Builder band(String band) {
            return band(Output.of(band));
        }

        /**
         * @param fields fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<String> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
         * 
         * @return builder
         * 
         */
        public Builder fields(String fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param ssid ssid query parameter. Filter results by SSID
         * 
         * @return builder
         * 
         */
        public Builder ssid(@Nullable Output<Integer> ssid) {
            $.ssid = ssid;
            return this;
        }

        /**
         * @param ssid ssid query parameter. Filter results by SSID
         * 
         * @return builder
         * 
         */
        public Builder ssid(Integer ssid) {
            return ssid(Output.of(ssid));
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(@Nullable Output<String> t0) {
            $.t0 = t0;
            return this;
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(String t0) {
            return t0(Output.of(t0));
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
         * 
         * @return builder
         * 
         */
        public Builder t1(@Nullable Output<String> t1) {
            $.t1 = t1;
            return this;
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
         * 
         * @return builder
         * 
         */
        public Builder t1(String t1) {
            return t1(Output.of(t1));
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
         * 
         * @return builder
         * 
         */
        public Builder timespan(@Nullable Output<Double> timespan) {
            $.timespan = timespan;
            return this;
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
         * 
         * @return builder
         * 
         */
        public Builder timespan(Double timespan) {
            return timespan(Output.of(timespan));
        }

        /**
         * @param vlan vlan query parameter. Filter results by VLAN
         * 
         * @return builder
         * 
         */
        public Builder vlan(@Nullable Output<Integer> vlan) {
            $.vlan = vlan;
            return this;
        }

        /**
         * @param vlan vlan query parameter. Filter results by VLAN
         * 
         * @return builder
         * 
         */
        public Builder vlan(Integer vlan) {
            return vlan(Output.of(vlan));
        }

        public GetWirelessLatencyStatsArgs build() {
            if ($.serial == null) {
                throw new MissingRequiredPropertyException("GetWirelessLatencyStatsArgs", "serial");
            }
            return $;
        }
    }

}
