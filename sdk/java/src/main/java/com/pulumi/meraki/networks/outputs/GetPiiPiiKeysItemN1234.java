// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPiiPiiKeysItemN1234 {
    private List<String> bluetoothMacs;
    private List<String> emails;
    private List<String> imeis;
    private List<String> macs;
    private List<String> serials;
    private List<String> usernames;

    private GetPiiPiiKeysItemN1234() {}
    public List<String> bluetoothMacs() {
        return this.bluetoothMacs;
    }
    public List<String> emails() {
        return this.emails;
    }
    public List<String> imeis() {
        return this.imeis;
    }
    public List<String> macs() {
        return this.macs;
    }
    public List<String> serials() {
        return this.serials;
    }
    public List<String> usernames() {
        return this.usernames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPiiPiiKeysItemN1234 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> bluetoothMacs;
        private List<String> emails;
        private List<String> imeis;
        private List<String> macs;
        private List<String> serials;
        private List<String> usernames;
        public Builder() {}
        public Builder(GetPiiPiiKeysItemN1234 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bluetoothMacs = defaults.bluetoothMacs;
    	      this.emails = defaults.emails;
    	      this.imeis = defaults.imeis;
    	      this.macs = defaults.macs;
    	      this.serials = defaults.serials;
    	      this.usernames = defaults.usernames;
        }

        @CustomType.Setter
        public Builder bluetoothMacs(List<String> bluetoothMacs) {
            if (bluetoothMacs == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "bluetoothMacs");
            }
            this.bluetoothMacs = bluetoothMacs;
            return this;
        }
        public Builder bluetoothMacs(String... bluetoothMacs) {
            return bluetoothMacs(List.of(bluetoothMacs));
        }
        @CustomType.Setter
        public Builder emails(List<String> emails) {
            if (emails == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "emails");
            }
            this.emails = emails;
            return this;
        }
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }
        @CustomType.Setter
        public Builder imeis(List<String> imeis) {
            if (imeis == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "imeis");
            }
            this.imeis = imeis;
            return this;
        }
        public Builder imeis(String... imeis) {
            return imeis(List.of(imeis));
        }
        @CustomType.Setter
        public Builder macs(List<String> macs) {
            if (macs == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "macs");
            }
            this.macs = macs;
            return this;
        }
        public Builder macs(String... macs) {
            return macs(List.of(macs));
        }
        @CustomType.Setter
        public Builder serials(List<String> serials) {
            if (serials == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "serials");
            }
            this.serials = serials;
            return this;
        }
        public Builder serials(String... serials) {
            return serials(List.of(serials));
        }
        @CustomType.Setter
        public Builder usernames(List<String> usernames) {
            if (usernames == null) {
              throw new MissingRequiredPropertyException("GetPiiPiiKeysItemN1234", "usernames");
            }
            this.usernames = usernames;
            return this;
        }
        public Builder usernames(String... usernames) {
            return usernames(List.of(usernames));
        }
        public GetPiiPiiKeysItemN1234 build() {
            final var _resultValue = new GetPiiPiiKeysItemN1234();
            _resultValue.bluetoothMacs = bluetoothMacs;
            _resultValue.emails = emails;
            _resultValue.imeis = imeis;
            _resultValue.macs = macs;
            _resultValue.serials = serials;
            _resultValue.usernames = usernames;
            return _resultValue;
        }
    }
}
