// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailbackImmediate;
import java.util.Objects;

@CustomType
public final class GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback {
    /**
     * @return Immediate WAN failover and failback
     * 
     */
    private GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailbackImmediate immediate;

    private GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback() {}
    /**
     * @return Immediate WAN failover and failback
     * 
     */
    public GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailbackImmediate immediate() {
        return this.immediate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailbackImmediate immediate;
        public Builder() {}
        public Builder(GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.immediate = defaults.immediate;
        }

        @CustomType.Setter
        public Builder immediate(GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailbackImmediate immediate) {
            if (immediate == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback", "immediate");
            }
            this.immediate = immediate;
            return this;
        }
        public GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback build() {
            final var _resultValue = new GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback();
            _resultValue.immediate = immediate;
            return _resultValue;
        }
    }
}
