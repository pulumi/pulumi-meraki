// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetSettingsItemFips;
import com.pulumi.meraki.networks.outputs.GetSettingsItemLocalStatusPage;
import com.pulumi.meraki.networks.outputs.GetSettingsItemNamedVlans;
import com.pulumi.meraki.networks.outputs.GetSettingsItemSecurePort;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetSettingsItem {
    /**
     * @return A hash of FIPS options applied to the Network
     * 
     */
    private GetSettingsItemFips fips;
    /**
     * @return A hash of Local Status page(s)&#39; authentication options applied to the Network.
     * 
     */
    private GetSettingsItemLocalStatusPage localStatusPage;
    /**
     * @return Enables / disables the local device status pages (\n\nmy.meraki.com, \n\n\n\nap.meraki.com, \n\n\n\nswitch.meraki.com, \n\n\n\nwired.meraki.com\n\n). Optional (defaults to false)
     * 
     */
    private Boolean localStatusPageEnabled;
    /**
     * @return A hash of Named VLANs options applied to the Network.
     * 
     */
    private GetSettingsItemNamedVlans namedVlans;
    /**
     * @return Enables / disables access to the device status page (\n\nhttp://[device&#39;s LAN IP])\n\n. Optional. Can only be set if localStatusPageEnabled is set to true
     * 
     */
    private Boolean remoteStatusPageEnabled;
    /**
     * @return A hash of SecureConnect options applied to the Network.
     * 
     */
    private GetSettingsItemSecurePort securePort;

    private GetSettingsItem() {}
    /**
     * @return A hash of FIPS options applied to the Network
     * 
     */
    public GetSettingsItemFips fips() {
        return this.fips;
    }
    /**
     * @return A hash of Local Status page(s)&#39; authentication options applied to the Network.
     * 
     */
    public GetSettingsItemLocalStatusPage localStatusPage() {
        return this.localStatusPage;
    }
    /**
     * @return Enables / disables the local device status pages (\n\nmy.meraki.com, \n\n\n\nap.meraki.com, \n\n\n\nswitch.meraki.com, \n\n\n\nwired.meraki.com\n\n). Optional (defaults to false)
     * 
     */
    public Boolean localStatusPageEnabled() {
        return this.localStatusPageEnabled;
    }
    /**
     * @return A hash of Named VLANs options applied to the Network.
     * 
     */
    public GetSettingsItemNamedVlans namedVlans() {
        return this.namedVlans;
    }
    /**
     * @return Enables / disables access to the device status page (\n\nhttp://[device&#39;s LAN IP])\n\n. Optional. Can only be set if localStatusPageEnabled is set to true
     * 
     */
    public Boolean remoteStatusPageEnabled() {
        return this.remoteStatusPageEnabled;
    }
    /**
     * @return A hash of SecureConnect options applied to the Network.
     * 
     */
    public GetSettingsItemSecurePort securePort() {
        return this.securePort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSettingsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetSettingsItemFips fips;
        private GetSettingsItemLocalStatusPage localStatusPage;
        private Boolean localStatusPageEnabled;
        private GetSettingsItemNamedVlans namedVlans;
        private Boolean remoteStatusPageEnabled;
        private GetSettingsItemSecurePort securePort;
        public Builder() {}
        public Builder(GetSettingsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fips = defaults.fips;
    	      this.localStatusPage = defaults.localStatusPage;
    	      this.localStatusPageEnabled = defaults.localStatusPageEnabled;
    	      this.namedVlans = defaults.namedVlans;
    	      this.remoteStatusPageEnabled = defaults.remoteStatusPageEnabled;
    	      this.securePort = defaults.securePort;
        }

        @CustomType.Setter
        public Builder fips(GetSettingsItemFips fips) {
            if (fips == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "fips");
            }
            this.fips = fips;
            return this;
        }
        @CustomType.Setter
        public Builder localStatusPage(GetSettingsItemLocalStatusPage localStatusPage) {
            if (localStatusPage == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "localStatusPage");
            }
            this.localStatusPage = localStatusPage;
            return this;
        }
        @CustomType.Setter
        public Builder localStatusPageEnabled(Boolean localStatusPageEnabled) {
            if (localStatusPageEnabled == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "localStatusPageEnabled");
            }
            this.localStatusPageEnabled = localStatusPageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder namedVlans(GetSettingsItemNamedVlans namedVlans) {
            if (namedVlans == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "namedVlans");
            }
            this.namedVlans = namedVlans;
            return this;
        }
        @CustomType.Setter
        public Builder remoteStatusPageEnabled(Boolean remoteStatusPageEnabled) {
            if (remoteStatusPageEnabled == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "remoteStatusPageEnabled");
            }
            this.remoteStatusPageEnabled = remoteStatusPageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder securePort(GetSettingsItemSecurePort securePort) {
            if (securePort == null) {
              throw new MissingRequiredPropertyException("GetSettingsItem", "securePort");
            }
            this.securePort = securePort;
            return this;
        }
        public GetSettingsItem build() {
            final var _resultValue = new GetSettingsItem();
            _resultValue.fips = fips;
            _resultValue.localStatusPage = localStatusPage;
            _resultValue.localStatusPageEnabled = localStatusPageEnabled;
            _resultValue.namedVlans = namedVlans;
            _resultValue.remoteStatusPageEnabled = remoteStatusPageEnabled;
            _resultValue.securePort = securePort;
            return _resultValue;
        }
    }
}
