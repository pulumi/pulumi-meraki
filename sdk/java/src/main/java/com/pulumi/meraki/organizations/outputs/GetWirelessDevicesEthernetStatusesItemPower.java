// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemPowerAc;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemPowerPoe;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessDevicesEthernetStatusesItemPower {
    /**
     * @return AC power details object
     * 
     */
    private GetWirelessDevicesEthernetStatusesItemPowerAc ac;
    /**
     * @return The PoE power mode for the AP. Can be &#39;full&#39; or &#39;low&#39;
     * 
     */
    private String mode;
    /**
     * @return PoE power details object
     * 
     */
    private GetWirelessDevicesEthernetStatusesItemPowerPoe poe;

    private GetWirelessDevicesEthernetStatusesItemPower() {}
    /**
     * @return AC power details object
     * 
     */
    public GetWirelessDevicesEthernetStatusesItemPowerAc ac() {
        return this.ac;
    }
    /**
     * @return The PoE power mode for the AP. Can be &#39;full&#39; or &#39;low&#39;
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return PoE power details object
     * 
     */
    public GetWirelessDevicesEthernetStatusesItemPowerPoe poe() {
        return this.poe;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessDevicesEthernetStatusesItemPower defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWirelessDevicesEthernetStatusesItemPowerAc ac;
        private String mode;
        private GetWirelessDevicesEthernetStatusesItemPowerPoe poe;
        public Builder() {}
        public Builder(GetWirelessDevicesEthernetStatusesItemPower defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ac = defaults.ac;
    	      this.mode = defaults.mode;
    	      this.poe = defaults.poe;
        }

        @CustomType.Setter
        public Builder ac(GetWirelessDevicesEthernetStatusesItemPowerAc ac) {
            if (ac == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItemPower", "ac");
            }
            this.ac = ac;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItemPower", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder poe(GetWirelessDevicesEthernetStatusesItemPowerPoe poe) {
            if (poe == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItemPower", "poe");
            }
            this.poe = poe;
            return this;
        }
        public GetWirelessDevicesEthernetStatusesItemPower build() {
            final var _resultValue = new GetWirelessDevicesEthernetStatusesItemPower();
            _resultValue.ac = ac;
            _resultValue.mode = mode;
            _resultValue.poe = poe;
            return _resultValue;
        }
    }
}
