// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLiveToolsPingDeviceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLiveToolsPingDeviceArgs Empty = new GetLiveToolsPingDeviceArgs();

    /**
     * id path parameter.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return id path parameter.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial", required=true)
    private Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Output<String> serial() {
        return this.serial;
    }

    private GetLiveToolsPingDeviceArgs() {}

    private GetLiveToolsPingDeviceArgs(GetLiveToolsPingDeviceArgs $) {
        this.id = $.id;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLiveToolsPingDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLiveToolsPingDeviceArgs $;

        public Builder() {
            $ = new GetLiveToolsPingDeviceArgs();
        }

        public Builder(GetLiveToolsPingDeviceArgs defaults) {
            $ = new GetLiveToolsPingDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id id path parameter.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id id path parameter.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public GetLiveToolsPingDeviceArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetLiveToolsPingDeviceArgs", "id");
            }
            if ($.serial == null) {
                throw new MissingRequiredPropertyException("GetLiveToolsPingDeviceArgs", "serial");
            }
            return $;
        }
    }

}
