// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.ApplianceSingleLanIpv6PrefixAssignmentOriginArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceSingleLanIpv6PrefixAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceSingleLanIpv6PrefixAssignmentArgs Empty = new ApplianceSingleLanIpv6PrefixAssignmentArgs();

    /**
     * Auto assign a /64 prefix from the origin to the single LAN
     * 
     */
    @Import(name="autonomous")
    private @Nullable Output<Boolean> autonomous;

    /**
     * @return Auto assign a /64 prefix from the origin to the single LAN
     * 
     */
    public Optional<Output<Boolean>> autonomous() {
        return Optional.ofNullable(this.autonomous);
    }

    /**
     * The origin of the prefix
     * 
     */
    @Import(name="origin")
    private @Nullable Output<ApplianceSingleLanIpv6PrefixAssignmentOriginArgs> origin;

    /**
     * @return The origin of the prefix
     * 
     */
    public Optional<Output<ApplianceSingleLanIpv6PrefixAssignmentOriginArgs>> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * Manual configuration of the IPv6 Appliance IP
     * 
     */
    @Import(name="staticApplianceIp6")
    private @Nullable Output<String> staticApplianceIp6;

    /**
     * @return Manual configuration of the IPv6 Appliance IP
     * 
     */
    public Optional<Output<String>> staticApplianceIp6() {
        return Optional.ofNullable(this.staticApplianceIp6);
    }

    /**
     * Manual configuration of a /64 prefix on the single LAN
     * 
     */
    @Import(name="staticPrefix")
    private @Nullable Output<String> staticPrefix;

    /**
     * @return Manual configuration of a /64 prefix on the single LAN
     * 
     */
    public Optional<Output<String>> staticPrefix() {
        return Optional.ofNullable(this.staticPrefix);
    }

    private ApplianceSingleLanIpv6PrefixAssignmentArgs() {}

    private ApplianceSingleLanIpv6PrefixAssignmentArgs(ApplianceSingleLanIpv6PrefixAssignmentArgs $) {
        this.autonomous = $.autonomous;
        this.origin = $.origin;
        this.staticApplianceIp6 = $.staticApplianceIp6;
        this.staticPrefix = $.staticPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceSingleLanIpv6PrefixAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceSingleLanIpv6PrefixAssignmentArgs $;

        public Builder() {
            $ = new ApplianceSingleLanIpv6PrefixAssignmentArgs();
        }

        public Builder(ApplianceSingleLanIpv6PrefixAssignmentArgs defaults) {
            $ = new ApplianceSingleLanIpv6PrefixAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autonomous Auto assign a /64 prefix from the origin to the single LAN
         * 
         * @return builder
         * 
         */
        public Builder autonomous(@Nullable Output<Boolean> autonomous) {
            $.autonomous = autonomous;
            return this;
        }

        /**
         * @param autonomous Auto assign a /64 prefix from the origin to the single LAN
         * 
         * @return builder
         * 
         */
        public Builder autonomous(Boolean autonomous) {
            return autonomous(Output.of(autonomous));
        }

        /**
         * @param origin The origin of the prefix
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable Output<ApplianceSingleLanIpv6PrefixAssignmentOriginArgs> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin The origin of the prefix
         * 
         * @return builder
         * 
         */
        public Builder origin(ApplianceSingleLanIpv6PrefixAssignmentOriginArgs origin) {
            return origin(Output.of(origin));
        }

        /**
         * @param staticApplianceIp6 Manual configuration of the IPv6 Appliance IP
         * 
         * @return builder
         * 
         */
        public Builder staticApplianceIp6(@Nullable Output<String> staticApplianceIp6) {
            $.staticApplianceIp6 = staticApplianceIp6;
            return this;
        }

        /**
         * @param staticApplianceIp6 Manual configuration of the IPv6 Appliance IP
         * 
         * @return builder
         * 
         */
        public Builder staticApplianceIp6(String staticApplianceIp6) {
            return staticApplianceIp6(Output.of(staticApplianceIp6));
        }

        /**
         * @param staticPrefix Manual configuration of a /64 prefix on the single LAN
         * 
         * @return builder
         * 
         */
        public Builder staticPrefix(@Nullable Output<String> staticPrefix) {
            $.staticPrefix = staticPrefix;
            return this;
        }

        /**
         * @param staticPrefix Manual configuration of a /64 prefix on the single LAN
         * 
         * @return builder
         * 
         */
        public Builder staticPrefix(String staticPrefix) {
            return staticPrefix(Output.of(staticPrefix));
        }

        public ApplianceSingleLanIpv6PrefixAssignmentArgs build() {
            return $;
        }
    }

}
