// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.networks.SnmpArgs;
import com.pulumi.meraki.networks.inputs.SnmpState;
import com.pulumi.meraki.networks.outputs.SnmpUser;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.networks.Snmp;
 * import com.pulumi.meraki.networks.SnmpArgs;
 * import com.pulumi.meraki.networks.inputs.SnmpUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Snmp("example", SnmpArgs.builder()
 *             .access("users")
 *             .communityString("sample")
 *             .networkId("string")
 *             .users(SnmpUserArgs.builder()
 *                 .passphrase("hunter2")
 *                 .username("AzureDiamond")
 *                 .build())
 *             .build());
 * 
 *         ctx.export("merakiNetworksSnmpExample", example);
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:networks/snmp:Snmp example &#34;network_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:networks/snmp:Snmp")
public class Snmp extends com.pulumi.resources.CustomResource {
    /**
     * The type of SNMP access. Can be one of &#39;none&#39; (disabled), &#39;community&#39; (V1/V2c), or &#39;users&#39; (V3).
     * 
     */
    @Export(name="access", refs={String.class}, tree="[0]")
    private Output<String> access;

    /**
     * @return The type of SNMP access. Can be one of &#39;none&#39; (disabled), &#39;community&#39; (V1/V2c), or &#39;users&#39; (V3).
     * 
     */
    public Output<String> access() {
        return this.access;
    }
    /**
     * SNMP community string if access is &#39;community&#39;.
     * 
     */
    @Export(name="communityString", refs={String.class}, tree="[0]")
    private Output<String> communityString;

    /**
     * @return SNMP community string if access is &#39;community&#39;.
     * 
     */
    public Output<String> communityString() {
        return this.communityString;
    }
    /**
     * networkId path parameter. Network ID
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * SNMP settings if access is &#39;users&#39;.
     * 
     */
    @Export(name="users", refs={List.class,SnmpUser.class}, tree="[0,1]")
    private Output<List<SnmpUser>> users;

    /**
     * @return SNMP settings if access is &#39;users&#39;.
     * 
     */
    public Output<List<SnmpUser>> users() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Snmp(java.lang.String name) {
        this(name, SnmpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Snmp(java.lang.String name, SnmpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Snmp(java.lang.String name, SnmpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/snmp:Snmp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Snmp(java.lang.String name, Output<java.lang.String> id, @Nullable SnmpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/snmp:Snmp", name, state, makeResourceOptions(options, id), false);
    }

    private static SnmpArgs makeArgs(SnmpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnmpArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-meraki")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Snmp get(java.lang.String name, Output<java.lang.String> id, @Nullable SnmpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Snmp(name, id, state, options);
    }
}
