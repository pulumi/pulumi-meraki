// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.inputs.AdaptivePolicyGroupsPolicyObjectArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdaptivePolicyGroupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdaptivePolicyGroupsArgs Empty = new AdaptivePolicyGroupsArgs();

    /**
     * Description of the group (default: &#34;&#34;)
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the group (default: &#34;&#34;)
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the group
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the group
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group&#39;s SGT value if no other tagging scheme is being used (each requires one unique attribute) ()
     * 
     */
    @Import(name="policyObjects")
    private @Nullable Output<List<AdaptivePolicyGroupsPolicyObjectArgs>> policyObjects;

    /**
     * @return The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group&#39;s SGT value if no other tagging scheme is being used (each requires one unique attribute) ()
     * 
     */
    public Optional<Output<List<AdaptivePolicyGroupsPolicyObjectArgs>>> policyObjects() {
        return Optional.ofNullable(this.policyObjects);
    }

    /**
     * SGT value of the group
     * 
     */
    @Import(name="sgt")
    private @Nullable Output<Integer> sgt;

    /**
     * @return SGT value of the group
     * 
     */
    public Optional<Output<Integer>> sgt() {
        return Optional.ofNullable(this.sgt);
    }

    private AdaptivePolicyGroupsArgs() {}

    private AdaptivePolicyGroupsArgs(AdaptivePolicyGroupsArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.organizationId = $.organizationId;
        this.policyObjects = $.policyObjects;
        this.sgt = $.sgt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdaptivePolicyGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdaptivePolicyGroupsArgs $;

        public Builder() {
            $ = new AdaptivePolicyGroupsArgs();
        }

        public Builder(AdaptivePolicyGroupsArgs defaults) {
            $ = new AdaptivePolicyGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the group (default: &#34;&#34;)
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the group (default: &#34;&#34;)
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the group
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the group
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param policyObjects The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group&#39;s SGT value if no other tagging scheme is being used (each requires one unique attribute) ()
         * 
         * @return builder
         * 
         */
        public Builder policyObjects(@Nullable Output<List<AdaptivePolicyGroupsPolicyObjectArgs>> policyObjects) {
            $.policyObjects = policyObjects;
            return this;
        }

        /**
         * @param policyObjects The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group&#39;s SGT value if no other tagging scheme is being used (each requires one unique attribute) ()
         * 
         * @return builder
         * 
         */
        public Builder policyObjects(List<AdaptivePolicyGroupsPolicyObjectArgs> policyObjects) {
            return policyObjects(Output.of(policyObjects));
        }

        /**
         * @param policyObjects The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group&#39;s SGT value if no other tagging scheme is being used (each requires one unique attribute) ()
         * 
         * @return builder
         * 
         */
        public Builder policyObjects(AdaptivePolicyGroupsPolicyObjectArgs... policyObjects) {
            return policyObjects(List.of(policyObjects));
        }

        /**
         * @param sgt SGT value of the group
         * 
         * @return builder
         * 
         */
        public Builder sgt(@Nullable Output<Integer> sgt) {
            $.sgt = sgt;
            return this;
        }

        /**
         * @param sgt SGT value of the group
         * 
         * @return builder
         * 
         */
        public Builder sgt(Integer sgt) {
            return sgt(Output.of(sgt));
        }

        public AdaptivePolicyGroupsArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("AdaptivePolicyGroupsArgs", "organizationId");
            }
            return $;
        }
    }

}
