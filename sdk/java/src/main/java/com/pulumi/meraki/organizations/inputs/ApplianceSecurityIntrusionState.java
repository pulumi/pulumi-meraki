// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.ApplianceSecurityIntrusionAllowedRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceSecurityIntrusionState extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceSecurityIntrusionState Empty = new ApplianceSecurityIntrusionState();

    /**
     * Sets a list of specific SNORT signatures to allow
     * 
     */
    @Import(name="allowedRules")
    private @Nullable Output<List<ApplianceSecurityIntrusionAllowedRuleArgs>> allowedRules;

    /**
     * @return Sets a list of specific SNORT signatures to allow
     * 
     */
    public Optional<Output<List<ApplianceSecurityIntrusionAllowedRuleArgs>>> allowedRules() {
        return Optional.ofNullable(this.allowedRules);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private ApplianceSecurityIntrusionState() {}

    private ApplianceSecurityIntrusionState(ApplianceSecurityIntrusionState $) {
        this.allowedRules = $.allowedRules;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceSecurityIntrusionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceSecurityIntrusionState $;

        public Builder() {
            $ = new ApplianceSecurityIntrusionState();
        }

        public Builder(ApplianceSecurityIntrusionState defaults) {
            $ = new ApplianceSecurityIntrusionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedRules Sets a list of specific SNORT signatures to allow
         * 
         * @return builder
         * 
         */
        public Builder allowedRules(@Nullable Output<List<ApplianceSecurityIntrusionAllowedRuleArgs>> allowedRules) {
            $.allowedRules = allowedRules;
            return this;
        }

        /**
         * @param allowedRules Sets a list of specific SNORT signatures to allow
         * 
         * @return builder
         * 
         */
        public Builder allowedRules(List<ApplianceSecurityIntrusionAllowedRuleArgs> allowedRules) {
            return allowedRules(Output.of(allowedRules));
        }

        /**
         * @param allowedRules Sets a list of specific SNORT signatures to allow
         * 
         * @return builder
         * 
         */
        public Builder allowedRules(ApplianceSecurityIntrusionAllowedRuleArgs... allowedRules) {
            return allowedRules(List.of(allowedRules));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public ApplianceSecurityIntrusionState build() {
            return $;
        }
    }

}
