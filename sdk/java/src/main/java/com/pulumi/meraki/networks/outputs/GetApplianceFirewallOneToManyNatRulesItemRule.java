// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallOneToManyNatRulesItemRulePortRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceFirewallOneToManyNatRulesItemRule {
    private List<GetApplianceFirewallOneToManyNatRulesItemRulePortRule> portRules;
    private String publicIp;
    private String uplink;

    private GetApplianceFirewallOneToManyNatRulesItemRule() {}
    public List<GetApplianceFirewallOneToManyNatRulesItemRulePortRule> portRules() {
        return this.portRules;
    }
    public String publicIp() {
        return this.publicIp;
    }
    public String uplink() {
        return this.uplink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceFirewallOneToManyNatRulesItemRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApplianceFirewallOneToManyNatRulesItemRulePortRule> portRules;
        private String publicIp;
        private String uplink;
        public Builder() {}
        public Builder(GetApplianceFirewallOneToManyNatRulesItemRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.portRules = defaults.portRules;
    	      this.publicIp = defaults.publicIp;
    	      this.uplink = defaults.uplink;
        }

        @CustomType.Setter
        public Builder portRules(List<GetApplianceFirewallOneToManyNatRulesItemRulePortRule> portRules) {
            if (portRules == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToManyNatRulesItemRule", "portRules");
            }
            this.portRules = portRules;
            return this;
        }
        public Builder portRules(GetApplianceFirewallOneToManyNatRulesItemRulePortRule... portRules) {
            return portRules(List.of(portRules));
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            if (publicIp == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToManyNatRulesItemRule", "publicIp");
            }
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder uplink(String uplink) {
            if (uplink == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToManyNatRulesItemRule", "uplink");
            }
            this.uplink = uplink;
            return this;
        }
        public GetApplianceFirewallOneToManyNatRulesItemRule build() {
            final var _resultValue = new GetApplianceFirewallOneToManyNatRulesItemRule();
            _resultValue.portRules = portRules;
            _resultValue.publicIp = publicIp;
            _resultValue.uplink = uplink;
            return _resultValue;
        }
    }
}
