// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.outputs.GetDevicesItem;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDevicesResult {
    /**
     * @return configurationUpdatedAfter query parameter. Filter results by whether or not the device&#39;s configuration has been updated after the given timestamp
     * 
     */
    private @Nullable String configurationUpdatedAfter;
    /**
     * @return endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    private @Nullable String endingBefore;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private GetDevicesItem item;
    /**
     * @return Array of ResponseOrganizationsGetOrganizationDevices
     * 
     */
    private List<GetDevicesItem> items;
    /**
     * @return mac query parameter. Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
     * 
     */
    private @Nullable String mac;
    /**
     * @return macs query parameter. Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
     * 
     */
    private @Nullable List<String> macs;
    /**
     * @return model query parameter. Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
     * 
     */
    private @Nullable String model;
    /**
     * @return models query parameter. Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
     * 
     */
    private @Nullable List<String> models;
    /**
     * @return name query parameter. Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
     * 
     */
    private @Nullable String name;
    /**
     * @return networkIds query parameter. Optional parameter to filter devices by network.
     * 
     */
    private @Nullable List<String> networkIds;
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    private @Nullable String organizationId;
    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     * 
     */
    private @Nullable Integer perPage;
    /**
     * @return productTypes query parameter. Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     * 
     */
    private @Nullable List<String> productTypes;
    /**
     * @return sensorAlertProfileIds query parameter. Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
     * 
     */
    private @Nullable List<String> sensorAlertProfileIds;
    /**
     * @return sensorMetrics query parameter. Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
     * 
     */
    private @Nullable List<String> sensorMetrics;
    /**
     * @return serial query parameter. Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
     * 
     */
    private @Nullable String serial;
    /**
     * @return serials query parameter. Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
     * 
     */
    private @Nullable List<String> serials;
    /**
     * @return startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    private @Nullable String startingAfter;
    /**
     * @return tags query parameter. Optional parameter to filter devices by tags.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return tagsFilterType query parameter. Optional parameter of value &#39;withAnyTags&#39; or &#39;withAllTags&#39; to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, &#39;withAnyTags&#39; will be selected.
     * 
     */
    private @Nullable String tagsFilterType;

    private GetDevicesResult() {}
    /**
     * @return configurationUpdatedAfter query parameter. Filter results by whether or not the device&#39;s configuration has been updated after the given timestamp
     * 
     */
    public Optional<String> configurationUpdatedAfter() {
        return Optional.ofNullable(this.configurationUpdatedAfter);
    }
    /**
     * @return endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> endingBefore() {
        return Optional.ofNullable(this.endingBefore);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public GetDevicesItem item() {
        return this.item;
    }
    /**
     * @return Array of ResponseOrganizationsGetOrganizationDevices
     * 
     */
    public List<GetDevicesItem> items() {
        return this.items;
    }
    /**
     * @return mac query parameter. Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
     * 
     */
    public Optional<String> mac() {
        return Optional.ofNullable(this.mac);
    }
    /**
     * @return macs query parameter. Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
     * 
     */
    public List<String> macs() {
        return this.macs == null ? List.of() : this.macs;
    }
    /**
     * @return model query parameter. Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }
    /**
     * @return models query parameter. Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
     * 
     */
    public List<String> models() {
        return this.models == null ? List.of() : this.models;
    }
    /**
     * @return name query parameter. Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return networkIds query parameter. Optional parameter to filter devices by network.
     * 
     */
    public List<String> networkIds() {
        return this.networkIds == null ? List.of() : this.networkIds;
    }
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }
    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
     * 
     */
    public Optional<Integer> perPage() {
        return Optional.ofNullable(this.perPage);
    }
    /**
     * @return productTypes query parameter. Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     * 
     */
    public List<String> productTypes() {
        return this.productTypes == null ? List.of() : this.productTypes;
    }
    /**
     * @return sensorAlertProfileIds query parameter. Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
     * 
     */
    public List<String> sensorAlertProfileIds() {
        return this.sensorAlertProfileIds == null ? List.of() : this.sensorAlertProfileIds;
    }
    /**
     * @return sensorMetrics query parameter. Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
     * 
     */
    public List<String> sensorMetrics() {
        return this.sensorMetrics == null ? List.of() : this.sensorMetrics;
    }
    /**
     * @return serial query parameter. Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
     * 
     */
    public Optional<String> serial() {
        return Optional.ofNullable(this.serial);
    }
    /**
     * @return serials query parameter. Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
     * 
     */
    public List<String> serials() {
        return this.serials == null ? List.of() : this.serials;
    }
    /**
     * @return startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     */
    public Optional<String> startingAfter() {
        return Optional.ofNullable(this.startingAfter);
    }
    /**
     * @return tags query parameter. Optional parameter to filter devices by tags.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return tagsFilterType query parameter. Optional parameter of value &#39;withAnyTags&#39; or &#39;withAllTags&#39; to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, &#39;withAnyTags&#39; will be selected.
     * 
     */
    public Optional<String> tagsFilterType() {
        return Optional.ofNullable(this.tagsFilterType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String configurationUpdatedAfter;
        private @Nullable String endingBefore;
        private String id;
        private GetDevicesItem item;
        private List<GetDevicesItem> items;
        private @Nullable String mac;
        private @Nullable List<String> macs;
        private @Nullable String model;
        private @Nullable List<String> models;
        private @Nullable String name;
        private @Nullable List<String> networkIds;
        private @Nullable String organizationId;
        private @Nullable Integer perPage;
        private @Nullable List<String> productTypes;
        private @Nullable List<String> sensorAlertProfileIds;
        private @Nullable List<String> sensorMetrics;
        private @Nullable String serial;
        private @Nullable List<String> serials;
        private @Nullable String startingAfter;
        private @Nullable List<String> tags;
        private @Nullable String tagsFilterType;
        public Builder() {}
        public Builder(GetDevicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationUpdatedAfter = defaults.configurationUpdatedAfter;
    	      this.endingBefore = defaults.endingBefore;
    	      this.id = defaults.id;
    	      this.item = defaults.item;
    	      this.items = defaults.items;
    	      this.mac = defaults.mac;
    	      this.macs = defaults.macs;
    	      this.model = defaults.model;
    	      this.models = defaults.models;
    	      this.name = defaults.name;
    	      this.networkIds = defaults.networkIds;
    	      this.organizationId = defaults.organizationId;
    	      this.perPage = defaults.perPage;
    	      this.productTypes = defaults.productTypes;
    	      this.sensorAlertProfileIds = defaults.sensorAlertProfileIds;
    	      this.sensorMetrics = defaults.sensorMetrics;
    	      this.serial = defaults.serial;
    	      this.serials = defaults.serials;
    	      this.startingAfter = defaults.startingAfter;
    	      this.tags = defaults.tags;
    	      this.tagsFilterType = defaults.tagsFilterType;
        }

        @CustomType.Setter
        public Builder configurationUpdatedAfter(@Nullable String configurationUpdatedAfter) {

            this.configurationUpdatedAfter = configurationUpdatedAfter;
            return this;
        }
        @CustomType.Setter
        public Builder endingBefore(@Nullable String endingBefore) {

            this.endingBefore = endingBefore;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDevicesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder item(GetDevicesItem item) {
            if (item == null) {
              throw new MissingRequiredPropertyException("GetDevicesResult", "item");
            }
            this.item = item;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetDevicesItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetDevicesResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetDevicesItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder mac(@Nullable String mac) {

            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder macs(@Nullable List<String> macs) {

            this.macs = macs;
            return this;
        }
        public Builder macs(String... macs) {
            return macs(List.of(macs));
        }
        @CustomType.Setter
        public Builder model(@Nullable String model) {

            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder models(@Nullable List<String> models) {

            this.models = models;
            return this;
        }
        public Builder models(String... models) {
            return models(List.of(models));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkIds(@Nullable List<String> networkIds) {

            this.networkIds = networkIds;
            return this;
        }
        public Builder networkIds(String... networkIds) {
            return networkIds(List.of(networkIds));
        }
        @CustomType.Setter
        public Builder organizationId(@Nullable String organizationId) {

            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder perPage(@Nullable Integer perPage) {

            this.perPage = perPage;
            return this;
        }
        @CustomType.Setter
        public Builder productTypes(@Nullable List<String> productTypes) {

            this.productTypes = productTypes;
            return this;
        }
        public Builder productTypes(String... productTypes) {
            return productTypes(List.of(productTypes));
        }
        @CustomType.Setter
        public Builder sensorAlertProfileIds(@Nullable List<String> sensorAlertProfileIds) {

            this.sensorAlertProfileIds = sensorAlertProfileIds;
            return this;
        }
        public Builder sensorAlertProfileIds(String... sensorAlertProfileIds) {
            return sensorAlertProfileIds(List.of(sensorAlertProfileIds));
        }
        @CustomType.Setter
        public Builder sensorMetrics(@Nullable List<String> sensorMetrics) {

            this.sensorMetrics = sensorMetrics;
            return this;
        }
        public Builder sensorMetrics(String... sensorMetrics) {
            return sensorMetrics(List.of(sensorMetrics));
        }
        @CustomType.Setter
        public Builder serial(@Nullable String serial) {

            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder serials(@Nullable List<String> serials) {

            this.serials = serials;
            return this;
        }
        public Builder serials(String... serials) {
            return serials(List.of(serials));
        }
        @CustomType.Setter
        public Builder startingAfter(@Nullable String startingAfter) {

            this.startingAfter = startingAfter;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tagsFilterType(@Nullable String tagsFilterType) {

            this.tagsFilterType = tagsFilterType;
            return this;
        }
        public GetDevicesResult build() {
            final var _resultValue = new GetDevicesResult();
            _resultValue.configurationUpdatedAfter = configurationUpdatedAfter;
            _resultValue.endingBefore = endingBefore;
            _resultValue.id = id;
            _resultValue.item = item;
            _resultValue.items = items;
            _resultValue.mac = mac;
            _resultValue.macs = macs;
            _resultValue.model = model;
            _resultValue.models = models;
            _resultValue.name = name;
            _resultValue.networkIds = networkIds;
            _resultValue.organizationId = organizationId;
            _resultValue.perPage = perPage;
            _resultValue.productTypes = productTypes;
            _resultValue.sensorAlertProfileIds = sensorAlertProfileIds;
            _resultValue.sensorMetrics = sensorMetrics;
            _resultValue.serial = serial;
            _resultValue.serials = serials;
            _resultValue.startingAfter = startingAfter;
            _resultValue.tags = tags;
            _resultValue.tagsFilterType = tagsFilterType;
            return _resultValue;
        }
    }
}
