// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WirelessRfProfilesSixGhzSettings {
    /**
     * @return Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
     * 
     */
    private @Nullable String channelWidth;
    /**
     * @return Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    private @Nullable Integer maxPower;
    /**
     * @return Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    private @Nullable Integer minBitrate;
    /**
     * @return Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    private @Nullable Integer minPower;
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    private @Nullable Integer rxsop;
    /**
     * @return Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
     * 
     */
    private @Nullable List<Integer> validAutoChannels;

    private WirelessRfProfilesSixGhzSettings() {}
    /**
     * @return Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
     * 
     */
    public Optional<String> channelWidth() {
        return Optional.ofNullable(this.channelWidth);
    }
    /**
     * @return Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    public Optional<Integer> maxPower() {
        return Optional.ofNullable(this.maxPower);
    }
    /**
     * @return Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    public Optional<Integer> minBitrate() {
        return Optional.ofNullable(this.minBitrate);
    }
    /**
     * @return Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    public Optional<Integer> minPower() {
        return Optional.ofNullable(this.minPower);
    }
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    public Optional<Integer> rxsop() {
        return Optional.ofNullable(this.rxsop);
    }
    /**
     * @return Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
     * 
     */
    public List<Integer> validAutoChannels() {
        return this.validAutoChannels == null ? List.of() : this.validAutoChannels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WirelessRfProfilesSixGhzSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String channelWidth;
        private @Nullable Integer maxPower;
        private @Nullable Integer minBitrate;
        private @Nullable Integer minPower;
        private @Nullable Integer rxsop;
        private @Nullable List<Integer> validAutoChannels;
        public Builder() {}
        public Builder(WirelessRfProfilesSixGhzSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelWidth = defaults.channelWidth;
    	      this.maxPower = defaults.maxPower;
    	      this.minBitrate = defaults.minBitrate;
    	      this.minPower = defaults.minPower;
    	      this.rxsop = defaults.rxsop;
    	      this.validAutoChannels = defaults.validAutoChannels;
        }

        @CustomType.Setter
        public Builder channelWidth(@Nullable String channelWidth) {

            this.channelWidth = channelWidth;
            return this;
        }
        @CustomType.Setter
        public Builder maxPower(@Nullable Integer maxPower) {

            this.maxPower = maxPower;
            return this;
        }
        @CustomType.Setter
        public Builder minBitrate(@Nullable Integer minBitrate) {

            this.minBitrate = minBitrate;
            return this;
        }
        @CustomType.Setter
        public Builder minPower(@Nullable Integer minPower) {

            this.minPower = minPower;
            return this;
        }
        @CustomType.Setter
        public Builder rxsop(@Nullable Integer rxsop) {

            this.rxsop = rxsop;
            return this;
        }
        @CustomType.Setter
        public Builder validAutoChannels(@Nullable List<Integer> validAutoChannels) {

            this.validAutoChannels = validAutoChannels;
            return this;
        }
        public Builder validAutoChannels(Integer... validAutoChannels) {
            return validAutoChannels(List.of(validAutoChannels));
        }
        public WirelessRfProfilesSixGhzSettings build() {
            final var _resultValue = new WirelessRfProfilesSixGhzSettings();
            _resultValue.channelWidth = channelWidth;
            _resultValue.maxPower = maxPower;
            _resultValue.minBitrate = minBitrate;
            _resultValue.minPower = minPower;
            _resultValue.rxsop = rxsop;
            _resultValue.validAutoChannels = validAutoChannels;
            return _resultValue;
        }
    }
}
