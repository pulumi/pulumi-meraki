// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEventsEventTypesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventsEventTypesPlainArgs Empty = new GetEventsEventTypesPlainArgs();

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private String networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public String networkId() {
        return this.networkId;
    }

    private GetEventsEventTypesPlainArgs() {}

    private GetEventsEventTypesPlainArgs(GetEventsEventTypesPlainArgs $) {
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventsEventTypesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventsEventTypesPlainArgs $;

        public Builder() {
            $ = new GetEventsEventTypesPlainArgs();
        }

        public Builder(GetEventsEventTypesPlainArgs defaults) {
            $ = new GetEventsEventTypesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            $.networkId = networkId;
            return this;
        }

        public GetEventsEventTypesPlainArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("GetEventsEventTypesPlainArgs", "networkId");
            }
            return $;
        }
    }

}
