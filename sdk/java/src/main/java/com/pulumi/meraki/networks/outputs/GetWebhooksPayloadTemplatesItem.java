// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWebhooksPayloadTemplatesItemHeader;
import com.pulumi.meraki.networks.outputs.GetWebhooksPayloadTemplatesItemSharing;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWebhooksPayloadTemplatesItem {
    /**
     * @return The body of the payload template, in liquid template
     * 
     */
    private String body;
    /**
     * @return The payload template headers, will be rendered as a key-value pair in the webhook.
     * 
     */
    private List<GetWebhooksPayloadTemplatesItemHeader> headers;
    /**
     * @return The name of the payload template
     * 
     */
    private String name;
    /**
     * @return Webhook payload template Id
     * 
     */
    private String payloadTemplateId;
    /**
     * @return Information on which entities have access to the template
     * 
     */
    private GetWebhooksPayloadTemplatesItemSharing sharing;
    /**
     * @return The type of the payload template
     * 
     */
    private String type;

    private GetWebhooksPayloadTemplatesItem() {}
    /**
     * @return The body of the payload template, in liquid template
     * 
     */
    public String body() {
        return this.body;
    }
    /**
     * @return The payload template headers, will be rendered as a key-value pair in the webhook.
     * 
     */
    public List<GetWebhooksPayloadTemplatesItemHeader> headers() {
        return this.headers;
    }
    /**
     * @return The name of the payload template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Webhook payload template Id
     * 
     */
    public String payloadTemplateId() {
        return this.payloadTemplateId;
    }
    /**
     * @return Information on which entities have access to the template
     * 
     */
    public GetWebhooksPayloadTemplatesItemSharing sharing() {
        return this.sharing;
    }
    /**
     * @return The type of the payload template
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebhooksPayloadTemplatesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String body;
        private List<GetWebhooksPayloadTemplatesItemHeader> headers;
        private String name;
        private String payloadTemplateId;
        private GetWebhooksPayloadTemplatesItemSharing sharing;
        private String type;
        public Builder() {}
        public Builder(GetWebhooksPayloadTemplatesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.headers = defaults.headers;
    	      this.name = defaults.name;
    	      this.payloadTemplateId = defaults.payloadTemplateId;
    	      this.sharing = defaults.sharing;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder body(String body) {
            if (body == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "body");
            }
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder headers(List<GetWebhooksPayloadTemplatesItemHeader> headers) {
            if (headers == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "headers");
            }
            this.headers = headers;
            return this;
        }
        public Builder headers(GetWebhooksPayloadTemplatesItemHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder payloadTemplateId(String payloadTemplateId) {
            if (payloadTemplateId == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "payloadTemplateId");
            }
            this.payloadTemplateId = payloadTemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder sharing(GetWebhooksPayloadTemplatesItemSharing sharing) {
            if (sharing == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "sharing");
            }
            this.sharing = sharing;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWebhooksPayloadTemplatesItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetWebhooksPayloadTemplatesItem build() {
            final var _resultValue = new GetWebhooksPayloadTemplatesItem();
            _resultValue.body = body;
            _resultValue.headers = headers;
            _resultValue.name = name;
            _resultValue.payloadTemplateId = payloadTemplateId;
            _resultValue.sharing = sharing;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
