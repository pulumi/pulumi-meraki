// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessRfProfilesItemPerSsidSettingsStatus7 {
    /**
     * @return Choice between &#39;dual&#39;, &#39;2.4ghz&#39;, &#39;5ghz&#39;, &#39;6ghz&#39; or &#39;multi&#39;.
     * 
     */
    private String bandOperationMode;
    /**
     * @return Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
     * 
     */
    private Boolean bandSteeringEnabled;
    /**
     * @return Settings related to all bands
     * 
     */
    private GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands bands;
    /**
     * @return Sets min bitrate (Mbps) of this SSID. Can be one of &#39;1&#39;, &#39;2&#39;, &#39;5.5&#39;, &#39;6&#39;, &#39;9&#39;, &#39;11&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;.
     * 
     */
    private Integer minBitrate;
    /**
     * @return Name of SSID
     * 
     */
    private String name;

    private GetWirelessRfProfilesItemPerSsidSettingsStatus7() {}
    /**
     * @return Choice between &#39;dual&#39;, &#39;2.4ghz&#39;, &#39;5ghz&#39;, &#39;6ghz&#39; or &#39;multi&#39;.
     * 
     */
    public String bandOperationMode() {
        return this.bandOperationMode;
    }
    /**
     * @return Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
     * 
     */
    public Boolean bandSteeringEnabled() {
        return this.bandSteeringEnabled;
    }
    /**
     * @return Settings related to all bands
     * 
     */
    public GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands bands() {
        return this.bands;
    }
    /**
     * @return Sets min bitrate (Mbps) of this SSID. Can be one of &#39;1&#39;, &#39;2&#39;, &#39;5.5&#39;, &#39;6&#39;, &#39;9&#39;, &#39;11&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;.
     * 
     */
    public Integer minBitrate() {
        return this.minBitrate;
    }
    /**
     * @return Name of SSID
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessRfProfilesItemPerSsidSettingsStatus7 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bandOperationMode;
        private Boolean bandSteeringEnabled;
        private GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands bands;
        private Integer minBitrate;
        private String name;
        public Builder() {}
        public Builder(GetWirelessRfProfilesItemPerSsidSettingsStatus7 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandOperationMode = defaults.bandOperationMode;
    	      this.bandSteeringEnabled = defaults.bandSteeringEnabled;
    	      this.bands = defaults.bands;
    	      this.minBitrate = defaults.minBitrate;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder bandOperationMode(String bandOperationMode) {
            if (bandOperationMode == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemPerSsidSettingsStatus7", "bandOperationMode");
            }
            this.bandOperationMode = bandOperationMode;
            return this;
        }
        @CustomType.Setter
        public Builder bandSteeringEnabled(Boolean bandSteeringEnabled) {
            if (bandSteeringEnabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemPerSsidSettingsStatus7", "bandSteeringEnabled");
            }
            this.bandSteeringEnabled = bandSteeringEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder bands(GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands bands) {
            if (bands == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemPerSsidSettingsStatus7", "bands");
            }
            this.bands = bands;
            return this;
        }
        @CustomType.Setter
        public Builder minBitrate(Integer minBitrate) {
            if (minBitrate == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemPerSsidSettingsStatus7", "minBitrate");
            }
            this.minBitrate = minBitrate;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemPerSsidSettingsStatus7", "name");
            }
            this.name = name;
            return this;
        }
        public GetWirelessRfProfilesItemPerSsidSettingsStatus7 build() {
            final var _resultValue = new GetWirelessRfProfilesItemPerSsidSettingsStatus7();
            _resultValue.bandOperationMode = bandOperationMode;
            _resultValue.bandSteeringEnabled = bandSteeringEnabled;
            _resultValue.bands = bands;
            _resultValue.minBitrate = minBitrate;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
