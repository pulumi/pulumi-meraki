// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetAlertsHistoryItemDestinationsEmail;
import com.pulumi.meraki.networks.outputs.GetAlertsHistoryItemDestinationsPush;
import com.pulumi.meraki.networks.outputs.GetAlertsHistoryItemDestinationsSms;
import com.pulumi.meraki.networks.outputs.GetAlertsHistoryItemDestinationsWebhook;
import java.util.Objects;

@CustomType
public final class GetAlertsHistoryItemDestinations {
    /**
     * @return email destinations for this alert
     * 
     */
    private GetAlertsHistoryItemDestinationsEmail email;
    /**
     * @return push destinations for this alert
     * 
     */
    private GetAlertsHistoryItemDestinationsPush push;
    /**
     * @return sms destinations for this alert
     * 
     */
    private GetAlertsHistoryItemDestinationsSms sms;
    /**
     * @return webhook destinations for this alert
     * 
     */
    private GetAlertsHistoryItemDestinationsWebhook webhook;

    private GetAlertsHistoryItemDestinations() {}
    /**
     * @return email destinations for this alert
     * 
     */
    public GetAlertsHistoryItemDestinationsEmail email() {
        return this.email;
    }
    /**
     * @return push destinations for this alert
     * 
     */
    public GetAlertsHistoryItemDestinationsPush push() {
        return this.push;
    }
    /**
     * @return sms destinations for this alert
     * 
     */
    public GetAlertsHistoryItemDestinationsSms sms() {
        return this.sms;
    }
    /**
     * @return webhook destinations for this alert
     * 
     */
    public GetAlertsHistoryItemDestinationsWebhook webhook() {
        return this.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsHistoryItemDestinations defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetAlertsHistoryItemDestinationsEmail email;
        private GetAlertsHistoryItemDestinationsPush push;
        private GetAlertsHistoryItemDestinationsSms sms;
        private GetAlertsHistoryItemDestinationsWebhook webhook;
        public Builder() {}
        public Builder(GetAlertsHistoryItemDestinations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.push = defaults.push;
    	      this.sms = defaults.sms;
    	      this.webhook = defaults.webhook;
        }

        @CustomType.Setter
        public Builder email(GetAlertsHistoryItemDestinationsEmail email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetAlertsHistoryItemDestinations", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder push(GetAlertsHistoryItemDestinationsPush push) {
            if (push == null) {
              throw new MissingRequiredPropertyException("GetAlertsHistoryItemDestinations", "push");
            }
            this.push = push;
            return this;
        }
        @CustomType.Setter
        public Builder sms(GetAlertsHistoryItemDestinationsSms sms) {
            if (sms == null) {
              throw new MissingRequiredPropertyException("GetAlertsHistoryItemDestinations", "sms");
            }
            this.sms = sms;
            return this;
        }
        @CustomType.Setter
        public Builder webhook(GetAlertsHistoryItemDestinationsWebhook webhook) {
            if (webhook == null) {
              throw new MissingRequiredPropertyException("GetAlertsHistoryItemDestinations", "webhook");
            }
            this.webhook = webhook;
            return this;
        }
        public GetAlertsHistoryItemDestinations build() {
            final var _resultValue = new GetAlertsHistoryItemDestinations();
            _resultValue.email = email;
            _resultValue.push = push;
            _resultValue.sms = sms;
            _resultValue.webhook = webhook;
            return _resultValue;
        }
    }
}
