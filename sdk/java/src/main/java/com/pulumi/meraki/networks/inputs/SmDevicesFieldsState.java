// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.SmDevicesFieldsItemArgs;
import com.pulumi.meraki.networks.inputs.SmDevicesFieldsParametersArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmDevicesFieldsState extends com.pulumi.resources.ResourceArgs {

    public static final SmDevicesFieldsState Empty = new SmDevicesFieldsState();

    /**
     * Array of ResponseSmUpdateNetworkSmDevicesFields
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<SmDevicesFieldsItemArgs>> items;

    /**
     * @return Array of ResponseSmUpdateNetworkSmDevicesFields
     * 
     */
    public Optional<Output<List<SmDevicesFieldsItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    @Import(name="parameters")
    private @Nullable Output<SmDevicesFieldsParametersArgs> parameters;

    public Optional<Output<SmDevicesFieldsParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private SmDevicesFieldsState() {}

    private SmDevicesFieldsState(SmDevicesFieldsState $) {
        this.items = $.items;
        this.networkId = $.networkId;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmDevicesFieldsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmDevicesFieldsState $;

        public Builder() {
            $ = new SmDevicesFieldsState();
        }

        public Builder(SmDevicesFieldsState defaults) {
            $ = new SmDevicesFieldsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param items Array of ResponseSmUpdateNetworkSmDevicesFields
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<SmDevicesFieldsItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items Array of ResponseSmUpdateNetworkSmDevicesFields
         * 
         * @return builder
         * 
         */
        public Builder items(List<SmDevicesFieldsItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items Array of ResponseSmUpdateNetworkSmDevicesFields
         * 
         * @return builder
         * 
         */
        public Builder items(SmDevicesFieldsItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        public Builder parameters(@Nullable Output<SmDevicesFieldsParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(SmDevicesFieldsParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public SmDevicesFieldsState build() {
            return $;
        }
    }

}
