// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsTrafficShapingRulesItemRuleDefinition {
    /**
     * @return The type of definition. Can be one of &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39; or &#39;localNet&#39;.
     * 
     */
    private String type;
    /**
     * @return If &#34;type&#34; is &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39; or &#39;localNet&#39;, then &#34;value&#34; must be a string, matching either
     * a hostname (e.g. &#34;somesite.com&#34;), a port (e.g. 8080), or an IP range (&#34;192.1.0.0&#34;,
     * &#34;192.1.0.0/16&#34;, or &#34;10.1.0.0/16:80&#34;). &#39;localNet&#39; also supports CIDR notation, excluding
     * custom ports.
     *  If &#34;type&#34; is &#39;application&#39; or &#39;applicationCategory&#39;, then &#34;value&#34; must be an object
     * with the structure { &#34;id&#34;: &#34;meraki:layer7/...&#34; }, where &#34;id&#34; is the application category or
     * application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
     * endpoint).
     * 
     */
    private String value;

    private GetWirelessSsidsTrafficShapingRulesItemRuleDefinition() {}
    /**
     * @return The type of definition. Can be one of &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39; or &#39;localNet&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return If &#34;type&#34; is &#39;host&#39;, &#39;port&#39;, &#39;ipRange&#39; or &#39;localNet&#39;, then &#34;value&#34; must be a string, matching either
     * a hostname (e.g. &#34;somesite.com&#34;), a port (e.g. 8080), or an IP range (&#34;192.1.0.0&#34;,
     * &#34;192.1.0.0/16&#34;, or &#34;10.1.0.0/16:80&#34;). &#39;localNet&#39; also supports CIDR notation, excluding
     * custom ports.
     *  If &#34;type&#34; is &#39;application&#39; or &#39;applicationCategory&#39;, then &#34;value&#34; must be an object
     * with the structure { &#34;id&#34;: &#34;meraki:layer7/...&#34; }, where &#34;id&#34; is the application category or
     * application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
     * endpoint).
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsTrafficShapingRulesItemRuleDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetWirelessSsidsTrafficShapingRulesItemRuleDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsTrafficShapingRulesItemRuleDefinition", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsTrafficShapingRulesItemRuleDefinition", "value");
            }
            this.value = value;
            return this;
        }
        public GetWirelessSsidsTrafficShapingRulesItemRuleDefinition build() {
            final var _resultValue = new GetWirelessSsidsTrafficShapingRulesItemRuleDefinition();
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
