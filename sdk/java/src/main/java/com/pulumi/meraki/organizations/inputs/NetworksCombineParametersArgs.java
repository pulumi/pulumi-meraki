// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworksCombineParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworksCombineParametersArgs Empty = new NetworksCombineParametersArgs();

    /**
     * A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
     * 
     */
    @Import(name="enrollmentString")
    private @Nullable Output<String> enrollmentString;

    /**
     * @return A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
     * 
     */
    public Optional<Output<String>> enrollmentString() {
        return Optional.ofNullable(this.enrollmentString);
    }

    /**
     * The name of the combined network
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the combined network
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
     * 
     */
    @Import(name="networkIds")
    private @Nullable Output<List<String>> networkIds;

    /**
     * @return A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
     * 
     */
    public Optional<Output<List<String>>> networkIds() {
        return Optional.ofNullable(this.networkIds);
    }

    private NetworksCombineParametersArgs() {}

    private NetworksCombineParametersArgs(NetworksCombineParametersArgs $) {
        this.enrollmentString = $.enrollmentString;
        this.name = $.name;
        this.networkIds = $.networkIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworksCombineParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworksCombineParametersArgs $;

        public Builder() {
            $ = new NetworksCombineParametersArgs();
        }

        public Builder(NetworksCombineParametersArgs defaults) {
            $ = new NetworksCombineParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enrollmentString A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
         * 
         * @return builder
         * 
         */
        public Builder enrollmentString(@Nullable Output<String> enrollmentString) {
            $.enrollmentString = enrollmentString;
            return this;
        }

        /**
         * @param enrollmentString A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
         * 
         * @return builder
         * 
         */
        public Builder enrollmentString(String enrollmentString) {
            return enrollmentString(Output.of(enrollmentString));
        }

        /**
         * @param name The name of the combined network
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the combined network
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkIds A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
         * 
         * @return builder
         * 
         */
        public Builder networkIds(@Nullable Output<List<String>> networkIds) {
            $.networkIds = networkIds;
            return this;
        }

        /**
         * @param networkIds A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
         * 
         * @return builder
         * 
         */
        public Builder networkIds(List<String> networkIds) {
            return networkIds(Output.of(networkIds));
        }

        /**
         * @param networkIds A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
         * 
         * @return builder
         * 
         */
        public Builder networkIds(String... networkIds) {
            return networkIds(List.of(networkIds));
        }

        public NetworksCombineParametersArgs build() {
            return $;
        }
    }

}
