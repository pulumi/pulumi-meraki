// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.SensorAlertsProfilesConditionsResponseThresholdNoiseAmbientArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SensorAlertsProfilesConditionsResponseThresholdNoiseArgs extends com.pulumi.resources.ResourceArgs {

    public static final SensorAlertsProfilesConditionsResponseThresholdNoiseArgs Empty = new SensorAlertsProfilesConditionsResponseThresholdNoiseArgs();

    /**
     * Ambient noise threshold. One of &#39;level&#39; or &#39;quality&#39; must be provided.
     * 
     */
    @Import(name="ambient")
    private @Nullable Output<SensorAlertsProfilesConditionsResponseThresholdNoiseAmbientArgs> ambient;

    /**
     * @return Ambient noise threshold. One of &#39;level&#39; or &#39;quality&#39; must be provided.
     * 
     */
    public Optional<Output<SensorAlertsProfilesConditionsResponseThresholdNoiseAmbientArgs>> ambient() {
        return Optional.ofNullable(this.ambient);
    }

    private SensorAlertsProfilesConditionsResponseThresholdNoiseArgs() {}

    private SensorAlertsProfilesConditionsResponseThresholdNoiseArgs(SensorAlertsProfilesConditionsResponseThresholdNoiseArgs $) {
        this.ambient = $.ambient;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SensorAlertsProfilesConditionsResponseThresholdNoiseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SensorAlertsProfilesConditionsResponseThresholdNoiseArgs $;

        public Builder() {
            $ = new SensorAlertsProfilesConditionsResponseThresholdNoiseArgs();
        }

        public Builder(SensorAlertsProfilesConditionsResponseThresholdNoiseArgs defaults) {
            $ = new SensorAlertsProfilesConditionsResponseThresholdNoiseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ambient Ambient noise threshold. One of &#39;level&#39; or &#39;quality&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder ambient(@Nullable Output<SensorAlertsProfilesConditionsResponseThresholdNoiseAmbientArgs> ambient) {
            $.ambient = ambient;
            return this;
        }

        /**
         * @param ambient Ambient noise threshold. One of &#39;level&#39; or &#39;quality&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder ambient(SensorAlertsProfilesConditionsResponseThresholdNoiseAmbientArgs ambient) {
            return ambient(Output.of(ambient));
        }

        public SensorAlertsProfilesConditionsResponseThresholdNoiseArgs build() {
            return $;
        }
    }

}
