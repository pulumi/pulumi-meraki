// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs Empty = new LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs();

    /**
     * Number of seats in use
     * 
     */
    @Import(name="assigned")
    private @Nullable Output<Integer> assigned;

    /**
     * @return Number of seats in use
     * 
     */
    public Optional<Output<Integer>> assigned() {
        return Optional.ofNullable(this.assigned);
    }

    /**
     * Number of seats available for use
     * 
     */
    @Import(name="available")
    private @Nullable Output<Integer> available;

    /**
     * @return Number of seats available for use
     * 
     */
    public Optional<Output<Integer>> available() {
        return Optional.ofNullable(this.available);
    }

    /**
     * Total number of seats provided by this subscription
     * 
     */
    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    /**
     * @return Total number of seats provided by this subscription
     * 
     */
    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    private LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs() {}

    private LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs $) {
        this.assigned = $.assigned;
        this.available = $.available;
        this.limit = $.limit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs $;

        public Builder() {
            $ = new LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs();
        }

        public Builder(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs defaults) {
            $ = new LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assigned Number of seats in use
         * 
         * @return builder
         * 
         */
        public Builder assigned(@Nullable Output<Integer> assigned) {
            $.assigned = assigned;
            return this;
        }

        /**
         * @param assigned Number of seats in use
         * 
         * @return builder
         * 
         */
        public Builder assigned(Integer assigned) {
            return assigned(Output.of(assigned));
        }

        /**
         * @param available Number of seats available for use
         * 
         * @return builder
         * 
         */
        public Builder available(@Nullable Output<Integer> available) {
            $.available = available;
            return this;
        }

        /**
         * @param available Number of seats available for use
         * 
         * @return builder
         * 
         */
        public Builder available(Integer available) {
            return available(Output.of(available));
        }

        /**
         * @param limit Total number of seats provided by this subscription
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit Total number of seats provided by this subscription
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs build() {
            return $;
        }
    }

}
