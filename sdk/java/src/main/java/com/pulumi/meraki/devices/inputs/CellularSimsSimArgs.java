// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.CellularSimsSimApnArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CellularSimsSimArgs extends com.pulumi.resources.ResourceArgs {

    public static final CellularSimsSimArgs Empty = new CellularSimsSimArgs();

    /**
     * APN configurations. If empty, the default APN will be used.
     * 
     */
    @Import(name="apns")
    private @Nullable Output<List<CellularSimsSimApnArgs>> apns;

    /**
     * @return APN configurations. If empty, the default APN will be used.
     * 
     */
    public Optional<Output<List<CellularSimsSimApnArgs>>> apns() {
        return Optional.ofNullable(this.apns);
    }

    /**
     * If true, this SIM is used for boot. Must be true on single-sim devices.
     * 
     */
    @Import(name="isPrimary")
    private @Nullable Output<Boolean> isPrimary;

    /**
     * @return If true, this SIM is used for boot. Must be true on single-sim devices.
     * 
     */
    public Optional<Output<Boolean>> isPrimary() {
        return Optional.ofNullable(this.isPrimary);
    }

    /**
     * SIM slot being configured. Must be &#39;sim1&#39; on single-sim devices.
     * 
     */
    @Import(name="slot")
    private @Nullable Output<String> slot;

    /**
     * @return SIM slot being configured. Must be &#39;sim1&#39; on single-sim devices.
     * 
     */
    public Optional<Output<String>> slot() {
        return Optional.ofNullable(this.slot);
    }

    private CellularSimsSimArgs() {}

    private CellularSimsSimArgs(CellularSimsSimArgs $) {
        this.apns = $.apns;
        this.isPrimary = $.isPrimary;
        this.slot = $.slot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CellularSimsSimArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CellularSimsSimArgs $;

        public Builder() {
            $ = new CellularSimsSimArgs();
        }

        public Builder(CellularSimsSimArgs defaults) {
            $ = new CellularSimsSimArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apns APN configurations. If empty, the default APN will be used.
         * 
         * @return builder
         * 
         */
        public Builder apns(@Nullable Output<List<CellularSimsSimApnArgs>> apns) {
            $.apns = apns;
            return this;
        }

        /**
         * @param apns APN configurations. If empty, the default APN will be used.
         * 
         * @return builder
         * 
         */
        public Builder apns(List<CellularSimsSimApnArgs> apns) {
            return apns(Output.of(apns));
        }

        /**
         * @param apns APN configurations. If empty, the default APN will be used.
         * 
         * @return builder
         * 
         */
        public Builder apns(CellularSimsSimApnArgs... apns) {
            return apns(List.of(apns));
        }

        /**
         * @param isPrimary If true, this SIM is used for boot. Must be true on single-sim devices.
         * 
         * @return builder
         * 
         */
        public Builder isPrimary(@Nullable Output<Boolean> isPrimary) {
            $.isPrimary = isPrimary;
            return this;
        }

        /**
         * @param isPrimary If true, this SIM is used for boot. Must be true on single-sim devices.
         * 
         * @return builder
         * 
         */
        public Builder isPrimary(Boolean isPrimary) {
            return isPrimary(Output.of(isPrimary));
        }

        /**
         * @param slot SIM slot being configured. Must be &#39;sim1&#39; on single-sim devices.
         * 
         * @return builder
         * 
         */
        public Builder slot(@Nullable Output<String> slot) {
            $.slot = slot;
            return this;
        }

        /**
         * @param slot SIM slot being configured. Must be &#39;sim1&#39; on single-sim devices.
         * 
         * @return builder
         * 
         */
        public Builder slot(String slot) {
            return slot(Output.of(slot));
        }

        public CellularSimsSimArgs build() {
            return $;
        }
    }

}
