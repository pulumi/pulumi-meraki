// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetSamlRolesItemCamera;
import com.pulumi.meraki.organizations.outputs.GetSamlRolesItemNetwork;
import com.pulumi.meraki.organizations.outputs.GetSamlRolesItemTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSamlRolesItem {
    /**
     * @return The list of camera access privileges for SAML administrator
     * 
     */
    private List<GetSamlRolesItemCamera> cameras;
    /**
     * @return ID associated with the SAML role
     * 
     */
    private String id;
    /**
     * @return The list of networks that the SAML administrator has privileges on
     * 
     */
    private List<GetSamlRolesItemNetwork> networks;
    /**
     * @return The privilege of the SAML administrator on the organization
     * 
     */
    private String orgAccess;
    /**
     * @return The role of the SAML administrator
     * 
     */
    private String role;
    /**
     * @return The list of tags that the SAML administrator has privleges on
     * 
     */
    private List<GetSamlRolesItemTag> tags;

    private GetSamlRolesItem() {}
    /**
     * @return The list of camera access privileges for SAML administrator
     * 
     */
    public List<GetSamlRolesItemCamera> cameras() {
        return this.cameras;
    }
    /**
     * @return ID associated with the SAML role
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of networks that the SAML administrator has privileges on
     * 
     */
    public List<GetSamlRolesItemNetwork> networks() {
        return this.networks;
    }
    /**
     * @return The privilege of the SAML administrator on the organization
     * 
     */
    public String orgAccess() {
        return this.orgAccess;
    }
    /**
     * @return The role of the SAML administrator
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return The list of tags that the SAML administrator has privleges on
     * 
     */
    public List<GetSamlRolesItemTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSamlRolesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSamlRolesItemCamera> cameras;
        private String id;
        private List<GetSamlRolesItemNetwork> networks;
        private String orgAccess;
        private String role;
        private List<GetSamlRolesItemTag> tags;
        public Builder() {}
        public Builder(GetSamlRolesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cameras = defaults.cameras;
    	      this.id = defaults.id;
    	      this.networks = defaults.networks;
    	      this.orgAccess = defaults.orgAccess;
    	      this.role = defaults.role;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder cameras(List<GetSamlRolesItemCamera> cameras) {
            if (cameras == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "cameras");
            }
            this.cameras = cameras;
            return this;
        }
        public Builder cameras(GetSamlRolesItemCamera... cameras) {
            return cameras(List.of(cameras));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networks(List<GetSamlRolesItemNetwork> networks) {
            if (networks == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "networks");
            }
            this.networks = networks;
            return this;
        }
        public Builder networks(GetSamlRolesItemNetwork... networks) {
            return networks(List.of(networks));
        }
        @CustomType.Setter
        public Builder orgAccess(String orgAccess) {
            if (orgAccess == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "orgAccess");
            }
            this.orgAccess = orgAccess;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetSamlRolesItemTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSamlRolesItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetSamlRolesItemTag... tags) {
            return tags(List.of(tags));
        }
        public GetSamlRolesItem build() {
            final var _resultValue = new GetSamlRolesItem();
            _resultValue.cameras = cameras;
            _resultValue.id = id;
            _resultValue.networks = networks;
            _resultValue.orgAccess = orgAccess;
            _resultValue.role = role;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
