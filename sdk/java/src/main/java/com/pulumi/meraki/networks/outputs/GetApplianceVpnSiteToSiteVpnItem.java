// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceVpnSiteToSiteVpnItemHub;
import com.pulumi.meraki.networks.outputs.GetApplianceVpnSiteToSiteVpnItemSubnet;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceVpnSiteToSiteVpnItem {
    /**
     * @return The list of VPN hubs, in order of preference.
     * 
     */
    private List<GetApplianceVpnSiteToSiteVpnItemHub> hubs;
    /**
     * @return The site-to-site VPN mode.
     * 
     */
    private String mode;
    /**
     * @return The list of subnets and their VPN presence.
     * 
     */
    private List<GetApplianceVpnSiteToSiteVpnItemSubnet> subnets;

    private GetApplianceVpnSiteToSiteVpnItem() {}
    /**
     * @return The list of VPN hubs, in order of preference.
     * 
     */
    public List<GetApplianceVpnSiteToSiteVpnItemHub> hubs() {
        return this.hubs;
    }
    /**
     * @return The site-to-site VPN mode.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return The list of subnets and their VPN presence.
     * 
     */
    public List<GetApplianceVpnSiteToSiteVpnItemSubnet> subnets() {
        return this.subnets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceVpnSiteToSiteVpnItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApplianceVpnSiteToSiteVpnItemHub> hubs;
        private String mode;
        private List<GetApplianceVpnSiteToSiteVpnItemSubnet> subnets;
        public Builder() {}
        public Builder(GetApplianceVpnSiteToSiteVpnItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hubs = defaults.hubs;
    	      this.mode = defaults.mode;
    	      this.subnets = defaults.subnets;
        }

        @CustomType.Setter
        public Builder hubs(List<GetApplianceVpnSiteToSiteVpnItemHub> hubs) {
            if (hubs == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnSiteToSiteVpnItem", "hubs");
            }
            this.hubs = hubs;
            return this;
        }
        public Builder hubs(GetApplianceVpnSiteToSiteVpnItemHub... hubs) {
            return hubs(List.of(hubs));
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnSiteToSiteVpnItem", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder subnets(List<GetApplianceVpnSiteToSiteVpnItemSubnet> subnets) {
            if (subnets == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnSiteToSiteVpnItem", "subnets");
            }
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(GetApplianceVpnSiteToSiteVpnItemSubnet... subnets) {
            return subnets(List.of(subnets));
        }
        public GetApplianceVpnSiteToSiteVpnItem build() {
            final var _resultValue = new GetApplianceVpnSiteToSiteVpnItem();
            _resultValue.hubs = hubs;
            _resultValue.mode = mode;
            _resultValue.subnets = subnets;
            return _resultValue;
        }
    }
}
