// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LiveToolsCableResultPairArgs extends com.pulumi.resources.ResourceArgs {

    public static final LiveToolsCableResultPairArgs Empty = new LiveToolsCableResultPairArgs();

    /**
     * The index of the twisted pair tested.
     * 
     */
    @Import(name="index")
    private @Nullable Output<Integer> index;

    /**
     * @return The index of the twisted pair tested.
     * 
     */
    public Optional<Output<Integer>> index() {
        return Optional.ofNullable(this.index);
    }

    /**
     * The detected length of the twisted pair.
     * 
     */
    @Import(name="lengthMeters")
    private @Nullable Output<Integer> lengthMeters;

    /**
     * @return The detected length of the twisted pair.
     * 
     */
    public Optional<Output<Integer>> lengthMeters() {
        return Optional.ofNullable(this.lengthMeters);
    }

    /**
     * The test result of the twisted pair tested.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The test result of the twisted pair tested.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private LiveToolsCableResultPairArgs() {}

    private LiveToolsCableResultPairArgs(LiveToolsCableResultPairArgs $) {
        this.index = $.index;
        this.lengthMeters = $.lengthMeters;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiveToolsCableResultPairArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiveToolsCableResultPairArgs $;

        public Builder() {
            $ = new LiveToolsCableResultPairArgs();
        }

        public Builder(LiveToolsCableResultPairArgs defaults) {
            $ = new LiveToolsCableResultPairArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param index The index of the twisted pair tested.
         * 
         * @return builder
         * 
         */
        public Builder index(@Nullable Output<Integer> index) {
            $.index = index;
            return this;
        }

        /**
         * @param index The index of the twisted pair tested.
         * 
         * @return builder
         * 
         */
        public Builder index(Integer index) {
            return index(Output.of(index));
        }

        /**
         * @param lengthMeters The detected length of the twisted pair.
         * 
         * @return builder
         * 
         */
        public Builder lengthMeters(@Nullable Output<Integer> lengthMeters) {
            $.lengthMeters = lengthMeters;
            return this;
        }

        /**
         * @param lengthMeters The detected length of the twisted pair.
         * 
         * @return builder
         * 
         */
        public Builder lengthMeters(Integer lengthMeters) {
            return lengthMeters(Output.of(lengthMeters));
        }

        /**
         * @param status The test result of the twisted pair tested.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The test result of the twisted pair tested.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public LiveToolsCableResultPairArgs build() {
            return $;
        }
    }

}
