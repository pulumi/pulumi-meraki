// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetCellularSimsItemSimApnAuthentication;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCellularSimsItemSimApn {
    private List<String> allowedIpTypes;
    private GetCellularSimsItemSimApnAuthentication authentication;
    private String name;

    private GetCellularSimsItemSimApn() {}
    public List<String> allowedIpTypes() {
        return this.allowedIpTypes;
    }
    public GetCellularSimsItemSimApnAuthentication authentication() {
        return this.authentication;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCellularSimsItemSimApn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedIpTypes;
        private GetCellularSimsItemSimApnAuthentication authentication;
        private String name;
        public Builder() {}
        public Builder(GetCellularSimsItemSimApn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIpTypes = defaults.allowedIpTypes;
    	      this.authentication = defaults.authentication;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder allowedIpTypes(List<String> allowedIpTypes) {
            if (allowedIpTypes == null) {
              throw new MissingRequiredPropertyException("GetCellularSimsItemSimApn", "allowedIpTypes");
            }
            this.allowedIpTypes = allowedIpTypes;
            return this;
        }
        public Builder allowedIpTypes(String... allowedIpTypes) {
            return allowedIpTypes(List.of(allowedIpTypes));
        }
        @CustomType.Setter
        public Builder authentication(GetCellularSimsItemSimApnAuthentication authentication) {
            if (authentication == null) {
              throw new MissingRequiredPropertyException("GetCellularSimsItemSimApn", "authentication");
            }
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCellularSimsItemSimApn", "name");
            }
            this.name = name;
            return this;
        }
        public GetCellularSimsItemSimApn build() {
            final var _resultValue = new GetCellularSimsItemSimApn();
            _resultValue.allowedIpTypes = allowedIpTypes;
            _resultValue.authentication = authentication;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
