// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs Empty = new WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs();

    /**
     * The IP address configured for the alternate management interface
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return The IP address configured for the alternate management interface
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The type of address assignment. Either static or dynamic.
     * 
     */
    @Import(name="assignmentMode")
    private @Nullable Output<String> assignmentMode;

    /**
     * @return The type of address assignment. Either static or dynamic.
     * 
     */
    public Optional<Output<String>> assignmentMode() {
        return Optional.ofNullable(this.assignmentMode);
    }

    /**
     * The gateway address configured for the alternate managment interface
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return The gateway address configured for the alternate managment interface
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * The DNS servers settings for this address.
     * 
     */
    @Import(name="nameservers")
    private @Nullable Output<WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs> nameservers;

    /**
     * @return The DNS servers settings for this address.
     * 
     */
    public Optional<Output<WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs>> nameservers() {
        return Optional.ofNullable(this.nameservers);
    }

    /**
     * The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The IP protocol used for the address
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The IP protocol used for the address
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs() {}

    private WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs(WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs $) {
        this.address = $.address;
        this.assignmentMode = $.assignmentMode;
        this.gateway = $.gateway;
        this.nameservers = $.nameservers;
        this.prefix = $.prefix;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs $;

        public Builder() {
            $ = new WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs();
        }

        public Builder(WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs defaults) {
            $ = new WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The IP address configured for the alternate management interface
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The IP address configured for the alternate management interface
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param assignmentMode The type of address assignment. Either static or dynamic.
         * 
         * @return builder
         * 
         */
        public Builder assignmentMode(@Nullable Output<String> assignmentMode) {
            $.assignmentMode = assignmentMode;
            return this;
        }

        /**
         * @param assignmentMode The type of address assignment. Either static or dynamic.
         * 
         * @return builder
         * 
         */
        public Builder assignmentMode(String assignmentMode) {
            return assignmentMode(Output.of(assignmentMode));
        }

        /**
         * @param gateway The gateway address configured for the alternate managment interface
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway The gateway address configured for the alternate managment interface
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param nameservers The DNS servers settings for this address.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(@Nullable Output<WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs> nameservers) {
            $.nameservers = nameservers;
            return this;
        }

        /**
         * @param nameservers The DNS servers settings for this address.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs nameservers) {
            return nameservers(Output.of(nameservers));
        }

        /**
         * @param prefix The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param protocol The IP protocol used for the address
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The IP protocol used for the address
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs build() {
            return $;
        }
    }

}
