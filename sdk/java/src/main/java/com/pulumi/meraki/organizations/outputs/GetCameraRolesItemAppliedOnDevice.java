// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCameraRolesItemAppliedOnDevice {
    private String id;
    private String permissionLevel;
    private String permissionScope;
    private String permissionScopeId;
    private String tag;

    private GetCameraRolesItemAppliedOnDevice() {}
    public String id() {
        return this.id;
    }
    public String permissionLevel() {
        return this.permissionLevel;
    }
    public String permissionScope() {
        return this.permissionScope;
    }
    public String permissionScopeId() {
        return this.permissionScopeId;
    }
    public String tag() {
        return this.tag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCameraRolesItemAppliedOnDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String permissionLevel;
        private String permissionScope;
        private String permissionScopeId;
        private String tag;
        public Builder() {}
        public Builder(GetCameraRolesItemAppliedOnDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.permissionLevel = defaults.permissionLevel;
    	      this.permissionScope = defaults.permissionScope;
    	      this.permissionScopeId = defaults.permissionScopeId;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCameraRolesItemAppliedOnDevice", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder permissionLevel(String permissionLevel) {
            if (permissionLevel == null) {
              throw new MissingRequiredPropertyException("GetCameraRolesItemAppliedOnDevice", "permissionLevel");
            }
            this.permissionLevel = permissionLevel;
            return this;
        }
        @CustomType.Setter
        public Builder permissionScope(String permissionScope) {
            if (permissionScope == null) {
              throw new MissingRequiredPropertyException("GetCameraRolesItemAppliedOnDevice", "permissionScope");
            }
            this.permissionScope = permissionScope;
            return this;
        }
        @CustomType.Setter
        public Builder permissionScopeId(String permissionScopeId) {
            if (permissionScopeId == null) {
              throw new MissingRequiredPropertyException("GetCameraRolesItemAppliedOnDevice", "permissionScopeId");
            }
            this.permissionScopeId = permissionScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetCameraRolesItemAppliedOnDevice", "tag");
            }
            this.tag = tag;
            return this;
        }
        public GetCameraRolesItemAppliedOnDevice build() {
            final var _resultValue = new GetCameraRolesItemAppliedOnDevice();
            _resultValue.id = id;
            _resultValue.permissionLevel = permissionLevel;
            _resultValue.permissionScope = permissionScope;
            _resultValue.permissionScopeId = permissionScopeId;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
