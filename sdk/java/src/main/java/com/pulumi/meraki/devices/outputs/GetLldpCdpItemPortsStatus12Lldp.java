// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLldpCdpItemPortsStatus12Lldp {
    private String managementAddress;
    private String portId;
    private String sourcePort;
    private String systemName;

    private GetLldpCdpItemPortsStatus12Lldp() {}
    public String managementAddress() {
        return this.managementAddress;
    }
    public String portId() {
        return this.portId;
    }
    public String sourcePort() {
        return this.sourcePort;
    }
    public String systemName() {
        return this.systemName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLldpCdpItemPortsStatus12Lldp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String managementAddress;
        private String portId;
        private String sourcePort;
        private String systemName;
        public Builder() {}
        public Builder(GetLldpCdpItemPortsStatus12Lldp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.managementAddress = defaults.managementAddress;
    	      this.portId = defaults.portId;
    	      this.sourcePort = defaults.sourcePort;
    	      this.systemName = defaults.systemName;
        }

        @CustomType.Setter
        public Builder managementAddress(String managementAddress) {
            if (managementAddress == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus12Lldp", "managementAddress");
            }
            this.managementAddress = managementAddress;
            return this;
        }
        @CustomType.Setter
        public Builder portId(String portId) {
            if (portId == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus12Lldp", "portId");
            }
            this.portId = portId;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePort(String sourcePort) {
            if (sourcePort == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus12Lldp", "sourcePort");
            }
            this.sourcePort = sourcePort;
            return this;
        }
        @CustomType.Setter
        public Builder systemName(String systemName) {
            if (systemName == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus12Lldp", "systemName");
            }
            this.systemName = systemName;
            return this;
        }
        public GetLldpCdpItemPortsStatus12Lldp build() {
            final var _resultValue = new GetLldpCdpItemPortsStatus12Lldp();
            _resultValue.managementAddress = managementAddress;
            _resultValue.portId = portId;
            _resultValue.sourcePort = sourcePort;
            _resultValue.systemName = systemName;
            return _resultValue;
        }
    }
}
