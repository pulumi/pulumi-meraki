// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LiveToolsCableRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final LiveToolsCableRequestArgs Empty = new LiveToolsCableRequestArgs();

    /**
     * A list of ports for which to perform the cable test.
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<String>> ports;

    /**
     * @return A list of ports for which to perform the cable test.
     * 
     */
    public Optional<Output<List<String>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * Device serial number
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return Device serial number
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    private LiveToolsCableRequestArgs() {}

    private LiveToolsCableRequestArgs(LiveToolsCableRequestArgs $) {
        this.ports = $.ports;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiveToolsCableRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiveToolsCableRequestArgs $;

        public Builder() {
            $ = new LiveToolsCableRequestArgs();
        }

        public Builder(LiveToolsCableRequestArgs defaults) {
            $ = new LiveToolsCableRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ports A list of ports for which to perform the cable test.
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<String>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports A list of ports for which to perform the cable test.
         * 
         * @return builder
         * 
         */
        public Builder ports(List<String> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports A list of ports for which to perform the cable test.
         * 
         * @return builder
         * 
         */
        public Builder ports(String... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param serial Device serial number
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial Device serial number
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public LiveToolsCableRequestArgs build() {
            return $;
        }
    }

}
