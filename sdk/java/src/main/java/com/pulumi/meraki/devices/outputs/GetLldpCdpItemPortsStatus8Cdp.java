// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLldpCdpItemPortsStatus8Cdp {
    private String address;
    private String deviceId;
    private String portId;
    private String sourcePort;

    private GetLldpCdpItemPortsStatus8Cdp() {}
    public String address() {
        return this.address;
    }
    public String deviceId() {
        return this.deviceId;
    }
    public String portId() {
        return this.portId;
    }
    public String sourcePort() {
        return this.sourcePort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLldpCdpItemPortsStatus8Cdp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String deviceId;
        private String portId;
        private String sourcePort;
        public Builder() {}
        public Builder(GetLldpCdpItemPortsStatus8Cdp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.deviceId = defaults.deviceId;
    	      this.portId = defaults.portId;
    	      this.sourcePort = defaults.sourcePort;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus8Cdp", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder deviceId(String deviceId) {
            if (deviceId == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus8Cdp", "deviceId");
            }
            this.deviceId = deviceId;
            return this;
        }
        @CustomType.Setter
        public Builder portId(String portId) {
            if (portId == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus8Cdp", "portId");
            }
            this.portId = portId;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePort(String sourcePort) {
            if (sourcePort == null) {
              throw new MissingRequiredPropertyException("GetLldpCdpItemPortsStatus8Cdp", "sourcePort");
            }
            this.sourcePort = sourcePort;
            return this;
        }
        public GetLldpCdpItemPortsStatus8Cdp build() {
            final var _resultValue = new GetLldpCdpItemPortsStatus8Cdp();
            _resultValue.address = address;
            _resultValue.deviceId = deviceId;
            _resultValue.portId = portId;
            _resultValue.sourcePort = sourcePort;
            return _resultValue;
        }
    }
}
