// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy {
    /**
     * @return The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
     * 
     */
    private @Nullable String devicePolicy;
    /**
     * @return The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
     * 
     */
    private @Nullable String deviceType;
    /**
     * @return ID of the group policy object.
     * 
     */
    private @Nullable Integer groupPolicyId;

    private WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy() {}
    /**
     * @return The device policy. Can be one of &#39;Allowed&#39;, &#39;Blocked&#39; or &#39;Group policy&#39;
     * 
     */
    public Optional<String> devicePolicy() {
        return Optional.ofNullable(this.devicePolicy);
    }
    /**
     * @return The device type. Can be one of &#39;Android&#39;, &#39;BlackBerry&#39;, &#39;Chrome OS&#39;, &#39;iPad&#39;, &#39;iPhone&#39;, &#39;iPod&#39;, &#39;Mac OS X&#39;, &#39;Windows&#39;, &#39;Windows Phone&#39;, &#39;B&amp;N Nook&#39; or &#39;Other OS&#39;
     * 
     */
    public Optional<String> deviceType() {
        return Optional.ofNullable(this.deviceType);
    }
    /**
     * @return ID of the group policy object.
     * 
     */
    public Optional<Integer> groupPolicyId() {
        return Optional.ofNullable(this.groupPolicyId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String devicePolicy;
        private @Nullable String deviceType;
        private @Nullable Integer groupPolicyId;
        public Builder() {}
        public Builder(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devicePolicy = defaults.devicePolicy;
    	      this.deviceType = defaults.deviceType;
    	      this.groupPolicyId = defaults.groupPolicyId;
        }

        @CustomType.Setter
        public Builder devicePolicy(@Nullable String devicePolicy) {

            this.devicePolicy = devicePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(@Nullable String deviceType) {

            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder groupPolicyId(@Nullable Integer groupPolicyId) {

            this.groupPolicyId = groupPolicyId;
            return this;
        }
        public WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy build() {
            final var _resultValue = new WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicy();
            _resultValue.devicePolicy = devicePolicy;
            _resultValue.deviceType = deviceType;
            _resultValue.groupPolicyId = groupPolicyId;
            return _resultValue;
        }
    }
}
