// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetFirmwareUpgradesStagedGroupsItemAssignedDevices;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFirmwareUpgradesStagedGroupsItem {
    /**
     * @return The devices and Switch Stacks assigned to the Group
     * 
     */
    private GetFirmwareUpgradesStagedGroupsItemAssignedDevices assignedDevices;
    /**
     * @return Description of the Staged Upgrade Group
     * 
     */
    private String description;
    /**
     * @return Id of staged upgrade group
     * 
     */
    private String groupId;
    /**
     * @return Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
     * 
     */
    private Boolean isDefault;
    /**
     * @return Name of the Staged Upgrade Group
     * 
     */
    private String name;

    private GetFirmwareUpgradesStagedGroupsItem() {}
    /**
     * @return The devices and Switch Stacks assigned to the Group
     * 
     */
    public GetFirmwareUpgradesStagedGroupsItemAssignedDevices assignedDevices() {
        return this.assignedDevices;
    }
    /**
     * @return Description of the Staged Upgrade Group
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Id of staged upgrade group
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return Name of the Staged Upgrade Group
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirmwareUpgradesStagedGroupsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetFirmwareUpgradesStagedGroupsItemAssignedDevices assignedDevices;
        private String description;
        private String groupId;
        private Boolean isDefault;
        private String name;
        public Builder() {}
        public Builder(GetFirmwareUpgradesStagedGroupsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedDevices = defaults.assignedDevices;
    	      this.description = defaults.description;
    	      this.groupId = defaults.groupId;
    	      this.isDefault = defaults.isDefault;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder assignedDevices(GetFirmwareUpgradesStagedGroupsItemAssignedDevices assignedDevices) {
            if (assignedDevices == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesStagedGroupsItem", "assignedDevices");
            }
            this.assignedDevices = assignedDevices;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesStagedGroupsItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesStagedGroupsItem", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            if (isDefault == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesStagedGroupsItem", "isDefault");
            }
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFirmwareUpgradesStagedGroupsItem", "name");
            }
            this.name = name;
            return this;
        }
        public GetFirmwareUpgradesStagedGroupsItem build() {
            final var _resultValue = new GetFirmwareUpgradesStagedGroupsItem();
            _resultValue.assignedDevices = assignedDevices;
            _resultValue.description = description;
            _resultValue.groupId = groupId;
            _resultValue.isDefault = isDefault;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
