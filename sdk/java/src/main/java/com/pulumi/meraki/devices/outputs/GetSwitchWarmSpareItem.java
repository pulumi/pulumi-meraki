// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSwitchWarmSpareItem {
    /**
     * @return Enable or disable warm spare for a switch
     * 
     */
    private Boolean enabled;
    /**
     * @return Serial number of the primary switch
     * 
     */
    private String primarySerial;
    /**
     * @return Serial number of the warm spare switch
     * 
     */
    private String spareSerial;

    private GetSwitchWarmSpareItem() {}
    /**
     * @return Enable or disable warm spare for a switch
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Serial number of the primary switch
     * 
     */
    public String primarySerial() {
        return this.primarySerial;
    }
    /**
     * @return Serial number of the warm spare switch
     * 
     */
    public String spareSerial() {
        return this.spareSerial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchWarmSpareItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String primarySerial;
        private String spareSerial;
        public Builder() {}
        public Builder(GetSwitchWarmSpareItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.primarySerial = defaults.primarySerial;
    	      this.spareSerial = defaults.spareSerial;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetSwitchWarmSpareItem", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder primarySerial(String primarySerial) {
            if (primarySerial == null) {
              throw new MissingRequiredPropertyException("GetSwitchWarmSpareItem", "primarySerial");
            }
            this.primarySerial = primarySerial;
            return this;
        }
        @CustomType.Setter
        public Builder spareSerial(String spareSerial) {
            if (spareSerial == null) {
              throw new MissingRequiredPropertyException("GetSwitchWarmSpareItem", "spareSerial");
            }
            this.spareSerial = spareSerial;
            return this;
        }
        public GetSwitchWarmSpareItem build() {
            final var _resultValue = new GetSwitchWarmSpareItem();
            _resultValue.enabled = enabled;
            _resultValue.primarySerial = primarySerial;
            _resultValue.spareSerial = spareSerial;
            return _resultValue;
        }
    }
}
