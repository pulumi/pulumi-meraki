// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsEapOverrideEapolKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsEapOverrideEapolKeyArgs Empty = new WirelessSsidsEapOverrideEapolKeyArgs();

    /**
     * Maximum number of EAPOL key retries.
     * 
     */
    @Import(name="retries")
    private @Nullable Output<Integer> retries;

    /**
     * @return Maximum number of EAPOL key retries.
     * 
     */
    public Optional<Output<Integer>> retries() {
        return Optional.ofNullable(this.retries);
    }

    /**
     * EAPOL Key timeout in milliseconds.
     * 
     */
    @Import(name="timeoutInMs")
    private @Nullable Output<Integer> timeoutInMs;

    /**
     * @return EAPOL Key timeout in milliseconds.
     * 
     */
    public Optional<Output<Integer>> timeoutInMs() {
        return Optional.ofNullable(this.timeoutInMs);
    }

    private WirelessSsidsEapOverrideEapolKeyArgs() {}

    private WirelessSsidsEapOverrideEapolKeyArgs(WirelessSsidsEapOverrideEapolKeyArgs $) {
        this.retries = $.retries;
        this.timeoutInMs = $.timeoutInMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsEapOverrideEapolKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsEapOverrideEapolKeyArgs $;

        public Builder() {
            $ = new WirelessSsidsEapOverrideEapolKeyArgs();
        }

        public Builder(WirelessSsidsEapOverrideEapolKeyArgs defaults) {
            $ = new WirelessSsidsEapOverrideEapolKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retries Maximum number of EAPOL key retries.
         * 
         * @return builder
         * 
         */
        public Builder retries(@Nullable Output<Integer> retries) {
            $.retries = retries;
            return this;
        }

        /**
         * @param retries Maximum number of EAPOL key retries.
         * 
         * @return builder
         * 
         */
        public Builder retries(Integer retries) {
            return retries(Output.of(retries));
        }

        /**
         * @param timeoutInMs EAPOL Key timeout in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder timeoutInMs(@Nullable Output<Integer> timeoutInMs) {
            $.timeoutInMs = timeoutInMs;
            return this;
        }

        /**
         * @param timeoutInMs EAPOL Key timeout in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder timeoutInMs(Integer timeoutInMs) {
            return timeoutInMs(Output.of(timeoutInMs));
        }

        public WirelessSsidsEapOverrideEapolKeyArgs build() {
            return $;
        }
    }

}
