// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs Empty = new ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs();

    /**
     * Whether PPPoE authentication is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether PPPoE authentication is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Password for PPPoE authentication. This parameter is not returned.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Password for PPPoE authentication. This parameter is not returned.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Username for PPPoE authentication.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Username for PPPoE authentication.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs() {}

    private ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs $) {
        this.enabled = $.enabled;
        this.password = $.password;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs $;

        public Builder() {
            $ = new ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs();
        }

        public Builder(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs defaults) {
            $ = new ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether PPPoE authentication is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether PPPoE authentication is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param password Password for PPPoE authentication. This parameter is not returned.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for PPPoE authentication. This parameter is not returned.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param username Username for PPPoE authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username for PPPoE authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs build() {
            return $;
        }
    }

}
