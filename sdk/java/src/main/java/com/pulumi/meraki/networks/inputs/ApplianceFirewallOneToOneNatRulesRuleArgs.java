// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceFirewallOneToOneNatRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceFirewallOneToOneNatRulesRuleArgs Empty = new ApplianceFirewallOneToOneNatRulesRuleArgs();

    /**
     * The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
     * 
     */
    @Import(name="allowedInbounds")
    private @Nullable Output<List<ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs>> allowedInbounds;

    /**
     * @return The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
     * 
     */
    public Optional<Output<List<ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs>>> allowedInbounds() {
        return Optional.ofNullable(this.allowedInbounds);
    }

    /**
     * The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     * 
     */
    @Import(name="lanIp")
    private @Nullable Output<String> lanIp;

    /**
     * @return The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     * 
     */
    public Optional<Output<String>> lanIp() {
        return Optional.ofNullable(this.lanIp);
    }

    /**
     * A descriptive name for the rule
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A descriptive name for the rule
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The IP address that will be used to access the internal resource from the WAN
     * 
     */
    @Import(name="publicIp")
    private @Nullable Output<String> publicIp;

    /**
     * @return The IP address that will be used to access the internal resource from the WAN
     * 
     */
    public Optional<Output<String>> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }

    /**
     * The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
     * 
     */
    @Import(name="uplink")
    private @Nullable Output<String> uplink;

    /**
     * @return The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
     * 
     */
    public Optional<Output<String>> uplink() {
        return Optional.ofNullable(this.uplink);
    }

    private ApplianceFirewallOneToOneNatRulesRuleArgs() {}

    private ApplianceFirewallOneToOneNatRulesRuleArgs(ApplianceFirewallOneToOneNatRulesRuleArgs $) {
        this.allowedInbounds = $.allowedInbounds;
        this.lanIp = $.lanIp;
        this.name = $.name;
        this.publicIp = $.publicIp;
        this.uplink = $.uplink;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceFirewallOneToOneNatRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceFirewallOneToOneNatRulesRuleArgs $;

        public Builder() {
            $ = new ApplianceFirewallOneToOneNatRulesRuleArgs();
        }

        public Builder(ApplianceFirewallOneToOneNatRulesRuleArgs defaults) {
            $ = new ApplianceFirewallOneToOneNatRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedInbounds The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
         * 
         * @return builder
         * 
         */
        public Builder allowedInbounds(@Nullable Output<List<ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs>> allowedInbounds) {
            $.allowedInbounds = allowedInbounds;
            return this;
        }

        /**
         * @param allowedInbounds The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
         * 
         * @return builder
         * 
         */
        public Builder allowedInbounds(List<ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs> allowedInbounds) {
            return allowedInbounds(Output.of(allowedInbounds));
        }

        /**
         * @param allowedInbounds The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
         * 
         * @return builder
         * 
         */
        public Builder allowedInbounds(ApplianceFirewallOneToOneNatRulesRuleAllowedInboundArgs... allowedInbounds) {
            return allowedInbounds(List.of(allowedInbounds));
        }

        /**
         * @param lanIp The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
         * 
         * @return builder
         * 
         */
        public Builder lanIp(@Nullable Output<String> lanIp) {
            $.lanIp = lanIp;
            return this;
        }

        /**
         * @param lanIp The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
         * 
         * @return builder
         * 
         */
        public Builder lanIp(String lanIp) {
            return lanIp(Output.of(lanIp));
        }

        /**
         * @param name A descriptive name for the rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A descriptive name for the rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicIp The IP address that will be used to access the internal resource from the WAN
         * 
         * @return builder
         * 
         */
        public Builder publicIp(@Nullable Output<String> publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        /**
         * @param publicIp The IP address that will be used to access the internal resource from the WAN
         * 
         * @return builder
         * 
         */
        public Builder publicIp(String publicIp) {
            return publicIp(Output.of(publicIp));
        }

        /**
         * @param uplink The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
         * 
         * @return builder
         * 
         */
        public Builder uplink(@Nullable Output<String> uplink) {
            $.uplink = uplink;
            return this;
        }

        /**
         * @param uplink The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
         * 
         * @return builder
         * 
         */
        public Builder uplink(String uplink) {
            return uplink(Output.of(uplink));
        }

        public ApplianceFirewallOneToOneNatRulesRuleArgs build() {
            return $;
        }
    }

}
