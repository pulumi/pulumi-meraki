// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlinkLedsParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlinkLedsParametersArgs Empty = new BlinkLedsParametersArgs();

    /**
     * The duration in seconds. Must be between 5 and 120. Default is 20 seconds
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return The duration in seconds. Must be between 5 and 120. Default is 20 seconds
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
     * 
     */
    @Import(name="duty")
    private @Nullable Output<Integer> duty;

    /**
     * @return The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
     * 
     */
    public Optional<Output<Integer>> duty() {
        return Optional.ofNullable(this.duty);
    }

    /**
     * The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    private BlinkLedsParametersArgs() {}

    private BlinkLedsParametersArgs(BlinkLedsParametersArgs $) {
        this.duration = $.duration;
        this.duty = $.duty;
        this.period = $.period;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlinkLedsParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlinkLedsParametersArgs $;

        public Builder() {
            $ = new BlinkLedsParametersArgs();
        }

        public Builder(BlinkLedsParametersArgs defaults) {
            $ = new BlinkLedsParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration The duration in seconds. Must be between 5 and 120. Default is 20 seconds
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The duration in seconds. Must be between 5 and 120. Default is 20 seconds
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param duty The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
         * 
         * @return builder
         * 
         */
        public Builder duty(@Nullable Output<Integer> duty) {
            $.duty = duty;
            return this;
        }

        /**
         * @param duty The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
         * 
         * @return builder
         * 
         */
        public Builder duty(Integer duty) {
            return duty(Output.of(duty));
        }

        /**
         * @param period The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        public BlinkLedsParametersArgs build() {
            return $;
        }
    }

}
