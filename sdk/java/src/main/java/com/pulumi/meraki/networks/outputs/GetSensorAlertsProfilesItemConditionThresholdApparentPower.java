// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetSensorAlertsProfilesItemConditionThresholdApparentPower {
    /**
     * @return Alerting threshold in volt-amps. Must be between 0 and 3750.
     * 
     */
    private Double draw;

    private GetSensorAlertsProfilesItemConditionThresholdApparentPower() {}
    /**
     * @return Alerting threshold in volt-amps. Must be between 0 and 3750.
     * 
     */
    public Double draw() {
        return this.draw;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensorAlertsProfilesItemConditionThresholdApparentPower defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double draw;
        public Builder() {}
        public Builder(GetSensorAlertsProfilesItemConditionThresholdApparentPower defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.draw = defaults.draw;
        }

        @CustomType.Setter
        public Builder draw(Double draw) {
            if (draw == null) {
              throw new MissingRequiredPropertyException("GetSensorAlertsProfilesItemConditionThresholdApparentPower", "draw");
            }
            this.draw = draw;
            return this;
        }
        public GetSensorAlertsProfilesItemConditionThresholdApparentPower build() {
            final var _resultValue = new GetSensorAlertsProfilesItemConditionThresholdApparentPower();
            _resultValue.draw = draw;
            return _resultValue;
        }
    }
}
