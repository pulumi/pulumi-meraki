// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.organizations.outputs.ActionBatchesStatusCreatedResource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActionBatchesStatus {
    /**
     * @return Flag describing whether all actions in the action batch have completed
     * 
     */
    private @Nullable Boolean completed;
    /**
     * @return Resources created as a result of this action batch
     * 
     */
    private @Nullable List<ActionBatchesStatusCreatedResource> createdResources;
    /**
     * @return List of errors encountered when running actions in the action batch
     * 
     */
    private @Nullable List<String> errors;
    /**
     * @return Flag describing whether any actions in the action batch failed
     * 
     */
    private @Nullable Boolean failed;

    private ActionBatchesStatus() {}
    /**
     * @return Flag describing whether all actions in the action batch have completed
     * 
     */
    public Optional<Boolean> completed() {
        return Optional.ofNullable(this.completed);
    }
    /**
     * @return Resources created as a result of this action batch
     * 
     */
    public List<ActionBatchesStatusCreatedResource> createdResources() {
        return this.createdResources == null ? List.of() : this.createdResources;
    }
    /**
     * @return List of errors encountered when running actions in the action batch
     * 
     */
    public List<String> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * @return Flag describing whether any actions in the action batch failed
     * 
     */
    public Optional<Boolean> failed() {
        return Optional.ofNullable(this.failed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionBatchesStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean completed;
        private @Nullable List<ActionBatchesStatusCreatedResource> createdResources;
        private @Nullable List<String> errors;
        private @Nullable Boolean failed;
        public Builder() {}
        public Builder(ActionBatchesStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completed = defaults.completed;
    	      this.createdResources = defaults.createdResources;
    	      this.errors = defaults.errors;
    	      this.failed = defaults.failed;
        }

        @CustomType.Setter
        public Builder completed(@Nullable Boolean completed) {

            this.completed = completed;
            return this;
        }
        @CustomType.Setter
        public Builder createdResources(@Nullable List<ActionBatchesStatusCreatedResource> createdResources) {

            this.createdResources = createdResources;
            return this;
        }
        public Builder createdResources(ActionBatchesStatusCreatedResource... createdResources) {
            return createdResources(List.of(createdResources));
        }
        @CustomType.Setter
        public Builder errors(@Nullable List<String> errors) {

            this.errors = errors;
            return this;
        }
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder failed(@Nullable Boolean failed) {

            this.failed = failed;
            return this;
        }
        public ActionBatchesStatus build() {
            final var _resultValue = new ActionBatchesStatus();
            _resultValue.completed = completed;
            _resultValue.createdResources = createdResources;
            _resultValue.errors = errors;
            _resultValue.failed = failed;
            return _resultValue;
        }
    }
}
