// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.organizations.inputs.GetActionBatchesArgs;
import com.pulumi.meraki.organizations.inputs.GetActionBatchesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyAclsArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyAclsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyGroupsArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyGroupsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyPoliciesArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyPoliciesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
import com.pulumi.meraki.organizations.inputs.GetAdminsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApiRequestsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesArgs;
import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraCustomAnalyticsArtifactsArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraCustomAnalyticsArtifactsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraRolesArgs;
import com.pulumi.meraki.organizations.inputs.GetCameraRolesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
import com.pulumi.meraki.organizations.inputs.GetClientsSearchPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesPortsArgs;
import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesPortsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetInsightMonitoredMediaServersArgs;
import com.pulumi.meraki.organizations.inputs.GetInsightMonitoredMediaServersPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryDevicesArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryDevicesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
import com.pulumi.meraki.organizations.inputs.GetLoginSecurityPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlIdpsArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlIdpsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlRolesArgs;
import com.pulumi.meraki.organizations.inputs.GetSamlRolesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
import com.pulumi.meraki.organizations.inputs.GetSmApnsCertPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSmVppAccountsArgs;
import com.pulumi.meraki.organizations.inputs.GetSmVppAccountsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
import com.pulumi.meraki.organizations.inputs.GetSnmpPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsagePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientPlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDevicePlainArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkPlainArgs;
import com.pulumi.meraki.organizations.outputs.GetActionBatchesResult;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicyAclsResult;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicyGroupsResult;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicyOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicyPoliciesResult;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicySettingsResult;
import com.pulumi.meraki.organizations.outputs.GetAdminsResult;
import com.pulumi.meraki.organizations.outputs.GetAlertsProfilesResult;
import com.pulumi.meraki.organizations.outputs.GetApiRequestsOverviewResponseCodesByIntervalResult;
import com.pulumi.meraki.organizations.outputs.GetApiRequestsOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetApiRequestsResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceSecurityIntrusionResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceTrafficShapingVpnExclusionsByNetworkResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceUplinksStatusesOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceUplinksUsageByNetworkResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceVpnThirdPartyVpnpeersResult;
import com.pulumi.meraki.organizations.outputs.GetApplianceVpnVpnFirewallRulesResult;
import com.pulumi.meraki.organizations.outputs.GetBrandingPoliciesPrioritiesResult;
import com.pulumi.meraki.organizations.outputs.GetBrandingPoliciesResult;
import com.pulumi.meraki.organizations.outputs.GetCameraBoundariesAreasByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetCameraBoundariesLinesByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetCameraCustomAnalyticsArtifactsResult;
import com.pulumi.meraki.organizations.outputs.GetCameraDetectionsHistoryByBoundaryByIntervalResult;
import com.pulumi.meraki.organizations.outputs.GetCameraPermissionsResult;
import com.pulumi.meraki.organizations.outputs.GetCameraRolesResult;
import com.pulumi.meraki.organizations.outputs.GetCellularGatewayUplinkStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetClientsBandwidthUsageHistoryResult;
import com.pulumi.meraki.organizations.outputs.GetClientsOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetClientsSearchResult;
import com.pulumi.meraki.organizations.outputs.GetConfigTemplatesResult;
import com.pulumi.meraki.organizations.outputs.GetConfigTemplatesSwitchProfilesPortsResult;
import com.pulumi.meraki.organizations.outputs.GetConfigTemplatesSwitchProfilesResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesAvailabilitiesChangeHistoryResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesAvailabilitiesResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesBootsHistoryResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesPowerModulesStatusesByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesProvisioningStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesStatusesOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesUplinksAddressesByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetDevicesUplinksLossAndLatencyResult;
import com.pulumi.meraki.organizations.outputs.GetEarlyAccessFeaturesOptInsResult;
import com.pulumi.meraki.organizations.outputs.GetEarlyAccessFeaturesResult;
import com.pulumi.meraki.organizations.outputs.GetFirmwareUpgradesByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetFirmwareUpgradesResult;
import com.pulumi.meraki.organizations.outputs.GetInsightApplicationsResult;
import com.pulumi.meraki.organizations.outputs.GetInsightMonitoredMediaServersResult;
import com.pulumi.meraki.organizations.outputs.GetInventoryDevicesResult;
import com.pulumi.meraki.organizations.outputs.GetInventoryOnboardingCloudMonitoringImportsResult;
import com.pulumi.meraki.organizations.outputs.GetInventoryOnboardingCloudMonitoringNetworksResult;
import com.pulumi.meraki.organizations.outputs.GetLicensesOverviewResult;
import com.pulumi.meraki.organizations.outputs.GetLicensesResult;
import com.pulumi.meraki.organizations.outputs.GetLicensingCotermLicensesResult;
import com.pulumi.meraki.organizations.outputs.GetLoginSecurityResult;
import com.pulumi.meraki.organizations.outputs.GetOpenapiSpecResult;
import com.pulumi.meraki.organizations.outputs.GetPolicyObjectsGroupsResult;
import com.pulumi.meraki.organizations.outputs.GetPolicyObjectsResult;
import com.pulumi.meraki.organizations.outputs.GetSamlIdpsResult;
import com.pulumi.meraki.organizations.outputs.GetSamlResult;
import com.pulumi.meraki.organizations.outputs.GetSamlRolesResult;
import com.pulumi.meraki.organizations.outputs.GetSensorReadingsHistoryResult;
import com.pulumi.meraki.organizations.outputs.GetSensorReadingsLatestResult;
import com.pulumi.meraki.organizations.outputs.GetSmAdminsRolesResult;
import com.pulumi.meraki.organizations.outputs.GetSmApnsCertResult;
import com.pulumi.meraki.organizations.outputs.GetSmSentryPoliciesAssignmentsByNetworkResult;
import com.pulumi.meraki.organizations.outputs.GetSmVppAccountsResult;
import com.pulumi.meraki.organizations.outputs.GetSnmpResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopAppliancesByUtilizationResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopClientsByUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopClientsManufacturersByUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopDevicesByUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopDevicesModelsByUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopNetworksByStatusResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopSsidsByUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopSwitchesByEnergyUsageResult;
import com.pulumi.meraki.organizations.outputs.GetSwitchPortsBySwitchResult;
import com.pulumi.meraki.organizations.outputs.GetUplinksStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetWebhooksCallbacksStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetWebhooksLogsResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationByNetworkResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesPacketLossByClientResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesPacketLossByDeviceResult;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesPacketLossByNetworkResult;
import java.util.concurrent.CompletableFuture;

public final class OrganizationsFunctions {
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetActionBatchesResult> getActionBatches() {
        return getActionBatches(GetActionBatchesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetActionBatchesResult> getActionBatchesPlain() {
        return getActionBatchesPlain(GetActionBatchesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetActionBatchesResult> getActionBatches(GetActionBatchesArgs args) {
        return getActionBatches(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetActionBatchesResult> getActionBatchesPlain(GetActionBatchesPlainArgs args) {
        return getActionBatchesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetActionBatchesResult> getActionBatches(GetActionBatchesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getActionBatches:getActionBatches", TypeShape.of(GetActionBatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetActionBatchesResult> getActionBatches(GetActionBatchesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getActionBatches:getActionBatches", TypeShape.of(GetActionBatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetActionBatchesResult> getActionBatchesPlain(GetActionBatchesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getActionBatches:getActionBatches", TypeShape.of(GetActionBatchesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyAclsResult> getAdaptivePolicyAcls() {
        return getAdaptivePolicyAcls(GetAdaptivePolicyAclsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyAclsResult> getAdaptivePolicyAclsPlain() {
        return getAdaptivePolicyAclsPlain(GetAdaptivePolicyAclsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyAclsResult> getAdaptivePolicyAcls(GetAdaptivePolicyAclsArgs args) {
        return getAdaptivePolicyAcls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyAclsResult> getAdaptivePolicyAclsPlain(GetAdaptivePolicyAclsPlainArgs args) {
        return getAdaptivePolicyAclsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyAclsResult> getAdaptivePolicyAcls(GetAdaptivePolicyAclsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyAcls:getAdaptivePolicyAcls", TypeShape.of(GetAdaptivePolicyAclsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyAclsResult> getAdaptivePolicyAcls(GetAdaptivePolicyAclsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyAcls:getAdaptivePolicyAcls", TypeShape.of(GetAdaptivePolicyAclsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyAclsResult> getAdaptivePolicyAclsPlain(GetAdaptivePolicyAclsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdaptivePolicyAcls:getAdaptivePolicyAcls", TypeShape.of(GetAdaptivePolicyAclsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroups() {
        return getAdaptivePolicyGroups(GetAdaptivePolicyGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroupsPlain() {
        return getAdaptivePolicyGroupsPlain(GetAdaptivePolicyGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroups(GetAdaptivePolicyGroupsArgs args) {
        return getAdaptivePolicyGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroupsPlain(GetAdaptivePolicyGroupsPlainArgs args) {
        return getAdaptivePolicyGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroups(GetAdaptivePolicyGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyGroups:getAdaptivePolicyGroups", TypeShape.of(GetAdaptivePolicyGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroups(GetAdaptivePolicyGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyGroups:getAdaptivePolicyGroups", TypeShape.of(GetAdaptivePolicyGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyGroupsResult> getAdaptivePolicyGroupsPlain(GetAdaptivePolicyGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdaptivePolicyGroups:getAdaptivePolicyGroups", TypeShape.of(GetAdaptivePolicyGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicyOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicyOverviewResult> getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs args) {
        return getAdaptivePolicyOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicyOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyOverviewResult> getAdaptivePolicyOverviewPlain(GetAdaptivePolicyOverviewPlainArgs args) {
        return getAdaptivePolicyOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicyOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicyOverviewResult> getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyOverview:getAdaptivePolicyOverview", TypeShape.of(GetAdaptivePolicyOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicyOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicyOverviewResult> getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyOverview:getAdaptivePolicyOverview", TypeShape.of(GetAdaptivePolicyOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicyOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicyOverview(GetAdaptivePolicyOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicyOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyOverviewResult> getAdaptivePolicyOverviewPlain(GetAdaptivePolicyOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdaptivePolicyOverview:getAdaptivePolicyOverview", TypeShape.of(GetAdaptivePolicyOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPolicies() {
        return getAdaptivePolicyPolicies(GetAdaptivePolicyPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPoliciesPlain() {
        return getAdaptivePolicyPoliciesPlain(GetAdaptivePolicyPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPolicies(GetAdaptivePolicyPoliciesArgs args) {
        return getAdaptivePolicyPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPoliciesPlain(GetAdaptivePolicyPoliciesPlainArgs args) {
        return getAdaptivePolicyPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPolicies(GetAdaptivePolicyPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyPolicies:getAdaptivePolicyPolicies", TypeShape.of(GetAdaptivePolicyPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPolicies(GetAdaptivePolicyPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicyPolicies:getAdaptivePolicyPolicies", TypeShape.of(GetAdaptivePolicyPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAdaptivePolicyPoliciesResult> getAdaptivePolicyPoliciesPlain(GetAdaptivePolicyPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdaptivePolicyPolicies:getAdaptivePolicyPolicies", TypeShape.of(GetAdaptivePolicyPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicySettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicySettingsResult> getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs args) {
        return getAdaptivePolicySettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicySettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdaptivePolicySettingsResult> getAdaptivePolicySettingsPlain(GetAdaptivePolicySettingsPlainArgs args) {
        return getAdaptivePolicySettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicySettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicySettingsResult> getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicySettings:getAdaptivePolicySettings", TypeShape.of(GetAdaptivePolicySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicySettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdaptivePolicySettingsResult> getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdaptivePolicySettings:getAdaptivePolicySettings", TypeShape.of(GetAdaptivePolicySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdaptivePolicySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdaptivePolicySettings(GetAdaptivePolicySettingsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdaptivePolicySettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdaptivePolicySettingsResult> getAdaptivePolicySettingsPlain(GetAdaptivePolicySettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdaptivePolicySettings:getAdaptivePolicySettings", TypeShape.of(GetAdaptivePolicySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdmins(GetAdminsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdminsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdminsResult> getAdmins(GetAdminsArgs args) {
        return getAdmins(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdmins(GetAdminsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdminsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdminsResult> getAdminsPlain(GetAdminsPlainArgs args) {
        return getAdminsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdmins(GetAdminsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdminsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdminsResult> getAdmins(GetAdminsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdmins:getAdmins", TypeShape.of(GetAdminsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdmins(GetAdminsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdminsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAdminsResult> getAdmins(GetAdminsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAdmins:getAdmins", TypeShape.of(GetAdminsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAdminsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAdmins(GetAdminsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAdminsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAdminsResult> getAdminsPlain(GetAdminsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAdmins:getAdmins", TypeShape.of(GetAdminsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAlertsProfiles(GetAlertsProfilesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAlertsProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsProfilesResult> getAlertsProfiles(GetAlertsProfilesArgs args) {
        return getAlertsProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAlertsProfiles(GetAlertsProfilesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAlertsProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertsProfilesResult> getAlertsProfilesPlain(GetAlertsProfilesPlainArgs args) {
        return getAlertsProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAlertsProfiles(GetAlertsProfilesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAlertsProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsProfilesResult> getAlertsProfiles(GetAlertsProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAlertsProfiles:getAlertsProfiles", TypeShape.of(GetAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAlertsProfiles(GetAlertsProfilesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAlertsProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsProfilesResult> getAlertsProfiles(GetAlertsProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getAlertsProfiles:getAlertsProfiles", TypeShape.of(GetAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetAlertsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getAlertsProfiles(GetAlertsProfilesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsAlertsProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertsProfilesResult> getAlertsProfilesPlain(GetAlertsProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getAlertsProfiles:getAlertsProfiles", TypeShape.of(GetAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequests(GetApiRequestsArgs.builder()
     *             .adminId("string")
     *             .endingBefore("string")
     *             .method("string")
     *             .operationIds("string")
     *             .organizationId("string")
     *             .path("string")
     *             .perPage(1)
     *             .responseCode(1)
     *             .sourceIp("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsResult> getApiRequests(GetApiRequestsArgs args) {
        return getApiRequests(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequests(GetApiRequestsArgs.builder()
     *             .adminId("string")
     *             .endingBefore("string")
     *             .method("string")
     *             .operationIds("string")
     *             .organizationId("string")
     *             .path("string")
     *             .perPage(1)
     *             .responseCode(1)
     *             .sourceIp("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsResult> getApiRequestsPlain(GetApiRequestsPlainArgs args) {
        return getApiRequestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequests(GetApiRequestsArgs.builder()
     *             .adminId("string")
     *             .endingBefore("string")
     *             .method("string")
     *             .operationIds("string")
     *             .organizationId("string")
     *             .path("string")
     *             .perPage(1)
     *             .responseCode(1)
     *             .sourceIp("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsResult> getApiRequests(GetApiRequestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequests:getApiRequests", TypeShape.of(GetApiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequests(GetApiRequestsArgs.builder()
     *             .adminId("string")
     *             .endingBefore("string")
     *             .method("string")
     *             .operationIds("string")
     *             .organizationId("string")
     *             .path("string")
     *             .perPage(1)
     *             .responseCode(1)
     *             .sourceIp("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsResult> getApiRequests(GetApiRequestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequests:getApiRequests", TypeShape.of(GetApiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequests(GetApiRequestsArgs.builder()
     *             .adminId("string")
     *             .endingBefore("string")
     *             .method("string")
     *             .operationIds("string")
     *             .organizationId("string")
     *             .path("string")
     *             .perPage(1)
     *             .responseCode(1)
     *             .sourceIp("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsResult> getApiRequestsPlain(GetApiRequestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApiRequests:getApiRequests", TypeShape.of(GetApiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverview(GetApiRequestsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResult> getApiRequestsOverview(GetApiRequestsOverviewArgs args) {
        return getApiRequestsOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverview(GetApiRequestsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsOverviewResult> getApiRequestsOverviewPlain(GetApiRequestsOverviewPlainArgs args) {
        return getApiRequestsOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverview(GetApiRequestsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResult> getApiRequestsOverview(GetApiRequestsOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequestsOverview:getApiRequestsOverview", TypeShape.of(GetApiRequestsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverview(GetApiRequestsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResult> getApiRequestsOverview(GetApiRequestsOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequestsOverview:getApiRequestsOverview", TypeShape.of(GetApiRequestsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverview(GetApiRequestsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsOverviewResult> getApiRequestsOverviewPlain(GetApiRequestsOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApiRequestsOverview:getApiRequestsOverview", TypeShape.of(GetApiRequestsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs.builder()
     *             .adminIds("string")
     *             .interval(1)
     *             .operationIds("string")
     *             .organizationId("string")
     *             .sourceIps("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResponseCodesByIntervalResult> getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs args) {
        return getApiRequestsOverviewResponseCodesByInterval(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs.builder()
     *             .adminIds("string")
     *             .interval(1)
     *             .operationIds("string")
     *             .organizationId("string")
     *             .sourceIps("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsOverviewResponseCodesByIntervalResult> getApiRequestsOverviewResponseCodesByIntervalPlain(GetApiRequestsOverviewResponseCodesByIntervalPlainArgs args) {
        return getApiRequestsOverviewResponseCodesByIntervalPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs.builder()
     *             .adminIds("string")
     *             .interval(1)
     *             .operationIds("string")
     *             .organizationId("string")
     *             .sourceIps("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResponseCodesByIntervalResult> getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", TypeShape.of(GetApiRequestsOverviewResponseCodesByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs.builder()
     *             .adminIds("string")
     *             .interval(1)
     *             .operationIds("string")
     *             .organizationId("string")
     *             .sourceIps("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiRequestsOverviewResponseCodesByIntervalResult> getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", TypeShape.of(GetApiRequestsOverviewResponseCodesByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApiRequestsOverviewResponseCodesByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApiRequestsOverviewResponseCodesByInterval(GetApiRequestsOverviewResponseCodesByIntervalArgs.builder()
     *             .adminIds("string")
     *             .interval(1)
     *             .operationIds("string")
     *             .organizationId("string")
     *             .sourceIps("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .userAgent("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApiRequestsOverviewResponseCodesByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiRequestsOverviewResponseCodesByIntervalResult> getApiRequestsOverviewResponseCodesByIntervalPlain(GetApiRequestsOverviewResponseCodesByIntervalPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApiRequestsOverviewResponseCodesByInterval:getApiRequestsOverviewResponseCodesByInterval", TypeShape.of(GetApiRequestsOverviewResponseCodesByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args) {
        return getApplianceSecurityIntrusion(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusionPlain(GetApplianceSecurityIntrusionPlainArgs args) {
        return getApplianceSecurityIntrusionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusionPlain(GetApplianceSecurityIntrusionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs args) {
        return getApplianceTrafficShapingVpnExclusionsByNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> getApplianceTrafficShapingVpnExclusionsByNetworkPlain(GetApplianceTrafficShapingVpnExclusionsByNetworkPlainArgs args) {
        return getApplianceTrafficShapingVpnExclusionsByNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceTrafficShapingVpnExclusionsByNetwork:getApplianceTrafficShapingVpnExclusionsByNetwork", TypeShape.of(GetApplianceTrafficShapingVpnExclusionsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceTrafficShapingVpnExclusionsByNetwork:getApplianceTrafficShapingVpnExclusionsByNetwork", TypeShape.of(GetApplianceTrafficShapingVpnExclusionsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceTrafficShapingVpnExclusionsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceTrafficShapingVpnExclusionsByNetwork(GetApplianceTrafficShapingVpnExclusionsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceTrafficShapingVpnExclusionsByNetworkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingVpnExclusionsByNetworkResult> getApplianceTrafficShapingVpnExclusionsByNetworkPlain(GetApplianceTrafficShapingVpnExclusionsByNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceTrafficShapingVpnExclusionsByNetwork:getApplianceTrafficShapingVpnExclusionsByNetwork", TypeShape.of(GetApplianceTrafficShapingVpnExclusionsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksStatusesOverviewResult> getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs args) {
        return getApplianceUplinksStatusesOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceUplinksStatusesOverviewResult> getApplianceUplinksStatusesOverviewPlain(GetApplianceUplinksStatusesOverviewPlainArgs args) {
        return getApplianceUplinksStatusesOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksStatusesOverviewResult> getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceUplinksStatusesOverview:getApplianceUplinksStatusesOverview", TypeShape.of(GetApplianceUplinksStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksStatusesOverviewResult> getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceUplinksStatusesOverview:getApplianceUplinksStatusesOverview", TypeShape.of(GetApplianceUplinksStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksStatusesOverview(GetApplianceUplinksStatusesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceUplinksStatusesOverviewResult> getApplianceUplinksStatusesOverviewPlain(GetApplianceUplinksStatusesOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceUplinksStatusesOverview:getApplianceUplinksStatusesOverview", TypeShape.of(GetApplianceUplinksStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksUsageByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksUsageByNetworkResult> getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs args) {
        return getApplianceUplinksUsageByNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksUsageByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceUplinksUsageByNetworkResult> getApplianceUplinksUsageByNetworkPlain(GetApplianceUplinksUsageByNetworkPlainArgs args) {
        return getApplianceUplinksUsageByNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksUsageByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksUsageByNetworkResult> getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceUplinksUsageByNetwork:getApplianceUplinksUsageByNetwork", TypeShape.of(GetApplianceUplinksUsageByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksUsageByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceUplinksUsageByNetworkResult> getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceUplinksUsageByNetwork:getApplianceUplinksUsageByNetwork", TypeShape.of(GetApplianceUplinksUsageByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceUplinksUsageByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceUplinksUsageByNetwork(GetApplianceUplinksUsageByNetworkArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceUplinksUsageByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceUplinksUsageByNetworkResult> getApplianceUplinksUsageByNetworkPlain(GetApplianceUplinksUsageByNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceUplinksUsageByNetwork:getApplianceUplinksUsageByNetwork", TypeShape.of(GetApplianceUplinksUsageByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnThirdPartyVpnpeersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnThirdPartyVpnpeersResult> getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs args) {
        return getApplianceVpnThirdPartyVpnpeers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnThirdPartyVpnpeersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceVpnThirdPartyVpnpeersResult> getApplianceVpnThirdPartyVpnpeersPlain(GetApplianceVpnThirdPartyVpnpeersPlainArgs args) {
        return getApplianceVpnThirdPartyVpnpeersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnThirdPartyVpnpeersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnThirdPartyVpnpeersResult> getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceVpnThirdPartyVpnpeers:getApplianceVpnThirdPartyVpnpeers", TypeShape.of(GetApplianceVpnThirdPartyVpnpeersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnThirdPartyVpnpeersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnThirdPartyVpnpeersResult> getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceVpnThirdPartyVpnpeers:getApplianceVpnThirdPartyVpnpeers", TypeShape.of(GetApplianceVpnThirdPartyVpnpeersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnThirdPartyVpnpeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnThirdPartyVpnpeers(GetApplianceVpnThirdPartyVpnpeersArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnThirdPartyVpnpeersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceVpnThirdPartyVpnpeersResult> getApplianceVpnThirdPartyVpnpeersPlain(GetApplianceVpnThirdPartyVpnpeersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceVpnThirdPartyVpnpeers:getApplianceVpnThirdPartyVpnpeers", TypeShape.of(GetApplianceVpnThirdPartyVpnpeersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnVpnFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnVpnFirewallRulesResult> getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs args) {
        return getApplianceVpnVpnFirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnVpnFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceVpnVpnFirewallRulesResult> getApplianceVpnVpnFirewallRulesPlain(GetApplianceVpnVpnFirewallRulesPlainArgs args) {
        return getApplianceVpnVpnFirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnVpnFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnVpnFirewallRulesResult> getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceVpnVpnFirewallRules:getApplianceVpnVpnFirewallRules", TypeShape.of(GetApplianceVpnVpnFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnVpnFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplianceVpnVpnFirewallRulesResult> getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getApplianceVpnVpnFirewallRules:getApplianceVpnVpnFirewallRules", TypeShape.of(GetApplianceVpnVpnFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetApplianceVpnVpnFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getApplianceVpnVpnFirewallRules(GetApplianceVpnVpnFirewallRulesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsApplianceVpnVpnFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplianceVpnVpnFirewallRulesResult> getApplianceVpnVpnFirewallRulesPlain(GetApplianceVpnVpnFirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getApplianceVpnVpnFirewallRules:getApplianceVpnVpnFirewallRules", TypeShape.of(GetApplianceVpnVpnFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetBrandingPoliciesResult> getBrandingPolicies() {
        return getBrandingPolicies(GetBrandingPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBrandingPoliciesResult> getBrandingPoliciesPlain() {
        return getBrandingPoliciesPlain(GetBrandingPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetBrandingPoliciesResult> getBrandingPolicies(GetBrandingPoliciesArgs args) {
        return getBrandingPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBrandingPoliciesResult> getBrandingPoliciesPlain(GetBrandingPoliciesPlainArgs args) {
        return getBrandingPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetBrandingPoliciesResult> getBrandingPolicies(GetBrandingPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getBrandingPolicies:getBrandingPolicies", TypeShape.of(GetBrandingPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetBrandingPoliciesResult> getBrandingPolicies(GetBrandingPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getBrandingPolicies:getBrandingPolicies", TypeShape.of(GetBrandingPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBrandingPoliciesResult> getBrandingPoliciesPlain(GetBrandingPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getBrandingPolicies:getBrandingPolicies", TypeShape.of(GetBrandingPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingPoliciesPrioritiesResult> getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs args) {
        return getBrandingPoliciesPriorities(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingPoliciesPrioritiesResult> getBrandingPoliciesPrioritiesPlain(GetBrandingPoliciesPrioritiesPlainArgs args) {
        return getBrandingPoliciesPrioritiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingPoliciesPrioritiesResult> getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getBrandingPoliciesPriorities:getBrandingPoliciesPriorities", TypeShape.of(GetBrandingPoliciesPrioritiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingPoliciesPrioritiesResult> getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getBrandingPoliciesPriorities:getBrandingPoliciesPriorities", TypeShape.of(GetBrandingPoliciesPrioritiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetBrandingPoliciesPrioritiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getBrandingPoliciesPriorities(GetBrandingPoliciesPrioritiesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingPoliciesPrioritiesResult> getBrandingPoliciesPrioritiesPlain(GetBrandingPoliciesPrioritiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getBrandingPoliciesPriorities:getBrandingPoliciesPriorities", TypeShape.of(GetBrandingPoliciesPrioritiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesAreasByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesAreasByDeviceResult> getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs args) {
        return getCameraBoundariesAreasByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesAreasByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraBoundariesAreasByDeviceResult> getCameraBoundariesAreasByDevicePlain(GetCameraBoundariesAreasByDevicePlainArgs args) {
        return getCameraBoundariesAreasByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesAreasByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesAreasByDeviceResult> getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraBoundariesAreasByDevice:getCameraBoundariesAreasByDevice", TypeShape.of(GetCameraBoundariesAreasByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesAreasByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesAreasByDeviceResult> getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraBoundariesAreasByDevice:getCameraBoundariesAreasByDevice", TypeShape.of(GetCameraBoundariesAreasByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesAreasByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesAreasByDevice(GetCameraBoundariesAreasByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesAreasByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraBoundariesAreasByDeviceResult> getCameraBoundariesAreasByDevicePlain(GetCameraBoundariesAreasByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraBoundariesAreasByDevice:getCameraBoundariesAreasByDevice", TypeShape.of(GetCameraBoundariesAreasByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesLinesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesLinesByDeviceResult> getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs args) {
        return getCameraBoundariesLinesByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesLinesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraBoundariesLinesByDeviceResult> getCameraBoundariesLinesByDevicePlain(GetCameraBoundariesLinesByDevicePlainArgs args) {
        return getCameraBoundariesLinesByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesLinesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesLinesByDeviceResult> getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraBoundariesLinesByDevice:getCameraBoundariesLinesByDevice", TypeShape.of(GetCameraBoundariesLinesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesLinesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraBoundariesLinesByDeviceResult> getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraBoundariesLinesByDevice:getCameraBoundariesLinesByDevice", TypeShape.of(GetCameraBoundariesLinesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraBoundariesLinesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraBoundariesLinesByDevice(GetCameraBoundariesLinesByDeviceArgs.builder()
     *             .organizationId("string")
     *             .serials("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraBoundariesLinesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraBoundariesLinesByDeviceResult> getCameraBoundariesLinesByDevicePlain(GetCameraBoundariesLinesByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraBoundariesLinesByDevice:getCameraBoundariesLinesByDevice", TypeShape.of(GetCameraBoundariesLinesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifacts() {
        return getCameraCustomAnalyticsArtifacts(GetCameraCustomAnalyticsArtifactsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifactsPlain() {
        return getCameraCustomAnalyticsArtifactsPlain(GetCameraCustomAnalyticsArtifactsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifacts(GetCameraCustomAnalyticsArtifactsArgs args) {
        return getCameraCustomAnalyticsArtifacts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifactsPlain(GetCameraCustomAnalyticsArtifactsPlainArgs args) {
        return getCameraCustomAnalyticsArtifactsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifacts(GetCameraCustomAnalyticsArtifactsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraCustomAnalyticsArtifacts:getCameraCustomAnalyticsArtifacts", TypeShape.of(GetCameraCustomAnalyticsArtifactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifacts(GetCameraCustomAnalyticsArtifactsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraCustomAnalyticsArtifacts:getCameraCustomAnalyticsArtifacts", TypeShape.of(GetCameraCustomAnalyticsArtifactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraCustomAnalyticsArtifactsResult> getCameraCustomAnalyticsArtifactsPlain(GetCameraCustomAnalyticsArtifactsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraCustomAnalyticsArtifacts:getCameraCustomAnalyticsArtifacts", TypeShape.of(GetCameraCustomAnalyticsArtifactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs.builder()
     *             .boundaryIds("string")
     *             .boundaryTypes("string")
     *             .duration(1)
     *             .organizationId("string")
     *             .perPage(1)
     *             .ranges("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraDetectionsHistoryByBoundaryByIntervalResult> getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs args) {
        return getCameraDetectionsHistoryByBoundaryByInterval(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs.builder()
     *             .boundaryIds("string")
     *             .boundaryTypes("string")
     *             .duration(1)
     *             .organizationId("string")
     *             .perPage(1)
     *             .ranges("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraDetectionsHistoryByBoundaryByIntervalResult> getCameraDetectionsHistoryByBoundaryByIntervalPlain(GetCameraDetectionsHistoryByBoundaryByIntervalPlainArgs args) {
        return getCameraDetectionsHistoryByBoundaryByIntervalPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs.builder()
     *             .boundaryIds("string")
     *             .boundaryTypes("string")
     *             .duration(1)
     *             .organizationId("string")
     *             .perPage(1)
     *             .ranges("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraDetectionsHistoryByBoundaryByIntervalResult> getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", TypeShape.of(GetCameraDetectionsHistoryByBoundaryByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs.builder()
     *             .boundaryIds("string")
     *             .boundaryTypes("string")
     *             .duration(1)
     *             .organizationId("string")
     *             .perPage(1)
     *             .ranges("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraDetectionsHistoryByBoundaryByIntervalResult> getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", TypeShape.of(GetCameraDetectionsHistoryByBoundaryByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraDetectionsHistoryByBoundaryByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraDetectionsHistoryByBoundaryByInterval(GetCameraDetectionsHistoryByBoundaryByIntervalArgs.builder()
     *             .boundaryIds("string")
     *             .boundaryTypes("string")
     *             .duration(1)
     *             .organizationId("string")
     *             .perPage(1)
     *             .ranges("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraDetectionsHistoryByBoundaryByIntervalResult> getCameraDetectionsHistoryByBoundaryByIntervalPlain(GetCameraDetectionsHistoryByBoundaryByIntervalPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", TypeShape.of(GetCameraDetectionsHistoryByBoundaryByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraPermissions(GetCameraPermissionsArgs.builder()
     *             .organizationId("string")
     *             .permissionScopeId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraPermissionsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraPermissionsResult> getCameraPermissions(GetCameraPermissionsArgs args) {
        return getCameraPermissions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraPermissions(GetCameraPermissionsArgs.builder()
     *             .organizationId("string")
     *             .permissionScopeId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraPermissionsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraPermissionsResult> getCameraPermissionsPlain(GetCameraPermissionsPlainArgs args) {
        return getCameraPermissionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraPermissions(GetCameraPermissionsArgs.builder()
     *             .organizationId("string")
     *             .permissionScopeId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraPermissionsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraPermissionsResult> getCameraPermissions(GetCameraPermissionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraPermissions:getCameraPermissions", TypeShape.of(GetCameraPermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraPermissions(GetCameraPermissionsArgs.builder()
     *             .organizationId("string")
     *             .permissionScopeId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraPermissionsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCameraPermissionsResult> getCameraPermissions(GetCameraPermissionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraPermissions:getCameraPermissions", TypeShape.of(GetCameraPermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCameraPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCameraPermissions(GetCameraPermissionsArgs.builder()
     *             .organizationId("string")
     *             .permissionScopeId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCameraPermissionsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCameraPermissionsResult> getCameraPermissionsPlain(GetCameraPermissionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraPermissions:getCameraPermissions", TypeShape.of(GetCameraPermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraRolesResult> getCameraRoles() {
        return getCameraRoles(GetCameraRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraRolesResult> getCameraRolesPlain() {
        return getCameraRolesPlain(GetCameraRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraRolesResult> getCameraRoles(GetCameraRolesArgs args) {
        return getCameraRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraRolesResult> getCameraRolesPlain(GetCameraRolesPlainArgs args) {
        return getCameraRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraRolesResult> getCameraRoles(GetCameraRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraRoles:getCameraRoles", TypeShape.of(GetCameraRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraRolesResult> getCameraRoles(GetCameraRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCameraRoles:getCameraRoles", TypeShape.of(GetCameraRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraRolesResult> getCameraRolesPlain(GetCameraRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCameraRoles:getCameraRoles", TypeShape.of(GetCameraRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCellularGatewayUplinkStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCellularGatewayUplinkStatusesResult> getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs args) {
        return getCellularGatewayUplinkStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCellularGatewayUplinkStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCellularGatewayUplinkStatusesResult> getCellularGatewayUplinkStatusesPlain(GetCellularGatewayUplinkStatusesPlainArgs args) {
        return getCellularGatewayUplinkStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCellularGatewayUplinkStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCellularGatewayUplinkStatusesResult> getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCellularGatewayUplinkStatuses:getCellularGatewayUplinkStatuses", TypeShape.of(GetCellularGatewayUplinkStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCellularGatewayUplinkStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCellularGatewayUplinkStatusesResult> getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getCellularGatewayUplinkStatuses:getCellularGatewayUplinkStatuses", TypeShape.of(GetCellularGatewayUplinkStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetCellularGatewayUplinkStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getCellularGatewayUplinkStatuses(GetCellularGatewayUplinkStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsCellularGatewayUplinkStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCellularGatewayUplinkStatusesResult> getCellularGatewayUplinkStatusesPlain(GetCellularGatewayUplinkStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getCellularGatewayUplinkStatuses:getCellularGatewayUplinkStatuses", TypeShape.of(GetCellularGatewayUplinkStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsBandwidthUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsBandwidthUsageHistoryResult> getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs args) {
        return getClientsBandwidthUsageHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsBandwidthUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsBandwidthUsageHistoryResult> getClientsBandwidthUsageHistoryPlain(GetClientsBandwidthUsageHistoryPlainArgs args) {
        return getClientsBandwidthUsageHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsBandwidthUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsBandwidthUsageHistoryResult> getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsBandwidthUsageHistory:getClientsBandwidthUsageHistory", TypeShape.of(GetClientsBandwidthUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsBandwidthUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsBandwidthUsageHistoryResult> getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsBandwidthUsageHistory:getClientsBandwidthUsageHistory", TypeShape.of(GetClientsBandwidthUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsBandwidthUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsBandwidthUsageHistory(GetClientsBandwidthUsageHistoryArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsBandwidthUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsBandwidthUsageHistoryResult> getClientsBandwidthUsageHistoryPlain(GetClientsBandwidthUsageHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getClientsBandwidthUsageHistory:getClientsBandwidthUsageHistory", TypeShape.of(GetClientsBandwidthUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args) {
        return getClientsOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsOverviewResult> getClientsOverviewPlain(GetClientsOverviewPlainArgs args) {
        return getClientsOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsOverviewResult> getClientsOverviewPlain(GetClientsOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsSearch(GetClientsSearchArgs.builder()
     *             .endingBefore("string")
     *             .mac("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsSearchExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsSearchResult> getClientsSearch(GetClientsSearchArgs args) {
        return getClientsSearch(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsSearch(GetClientsSearchArgs.builder()
     *             .endingBefore("string")
     *             .mac("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsSearchExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsSearchResult> getClientsSearchPlain(GetClientsSearchPlainArgs args) {
        return getClientsSearchPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsSearch(GetClientsSearchArgs.builder()
     *             .endingBefore("string")
     *             .mac("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsSearchExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsSearchResult> getClientsSearch(GetClientsSearchArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsSearch:getClientsSearch", TypeShape.of(GetClientsSearchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsSearch(GetClientsSearchArgs.builder()
     *             .endingBefore("string")
     *             .mac("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsSearchExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsSearchResult> getClientsSearch(GetClientsSearchArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getClientsSearch:getClientsSearch", TypeShape.of(GetClientsSearchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetClientsSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getClientsSearch(GetClientsSearchArgs.builder()
     *             .endingBefore("string")
     *             .mac("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsClientsSearchExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsSearchResult> getClientsSearchPlain(GetClientsSearchPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getClientsSearch:getClientsSearch", TypeShape.of(GetClientsSearchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesResult> getConfigTemplates() {
        return getConfigTemplates(GetConfigTemplatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesResult> getConfigTemplatesPlain() {
        return getConfigTemplatesPlain(GetConfigTemplatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesResult> getConfigTemplates(GetConfigTemplatesArgs args) {
        return getConfigTemplates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesResult> getConfigTemplatesPlain(GetConfigTemplatesPlainArgs args) {
        return getConfigTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesResult> getConfigTemplates(GetConfigTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplates:getConfigTemplates", TypeShape.of(GetConfigTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesResult> getConfigTemplates(GetConfigTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplates:getConfigTemplates", TypeShape.of(GetConfigTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesResult> getConfigTemplatesPlain(GetConfigTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getConfigTemplates:getConfigTemplates", TypeShape.of(GetConfigTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs.builder()
     *             .configTemplateId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsConfigTemplatesSwitchProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesResult> getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs args) {
        return getConfigTemplatesSwitchProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs.builder()
     *             .configTemplateId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsConfigTemplatesSwitchProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigTemplatesSwitchProfilesResult> getConfigTemplatesSwitchProfilesPlain(GetConfigTemplatesSwitchProfilesPlainArgs args) {
        return getConfigTemplatesSwitchProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs.builder()
     *             .configTemplateId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsConfigTemplatesSwitchProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesResult> getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplatesSwitchProfiles:getConfigTemplatesSwitchProfiles", TypeShape.of(GetConfigTemplatesSwitchProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs.builder()
     *             .configTemplateId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsConfigTemplatesSwitchProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesResult> getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplatesSwitchProfiles:getConfigTemplatesSwitchProfiles", TypeShape.of(GetConfigTemplatesSwitchProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetConfigTemplatesSwitchProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getConfigTemplatesSwitchProfiles(GetConfigTemplatesSwitchProfilesArgs.builder()
     *             .configTemplateId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsConfigTemplatesSwitchProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigTemplatesSwitchProfilesResult> getConfigTemplatesSwitchProfilesPlain(GetConfigTemplatesSwitchProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getConfigTemplatesSwitchProfiles:getConfigTemplatesSwitchProfiles", TypeShape.of(GetConfigTemplatesSwitchProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPorts() {
        return getConfigTemplatesSwitchProfilesPorts(GetConfigTemplatesSwitchProfilesPortsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPortsPlain() {
        return getConfigTemplatesSwitchProfilesPortsPlain(GetConfigTemplatesSwitchProfilesPortsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPorts(GetConfigTemplatesSwitchProfilesPortsArgs args) {
        return getConfigTemplatesSwitchProfilesPorts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPortsPlain(GetConfigTemplatesSwitchProfilesPortsPlainArgs args) {
        return getConfigTemplatesSwitchProfilesPortsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPorts(GetConfigTemplatesSwitchProfilesPortsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplatesSwitchProfilesPorts:getConfigTemplatesSwitchProfilesPorts", TypeShape.of(GetConfigTemplatesSwitchProfilesPortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPorts(GetConfigTemplatesSwitchProfilesPortsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getConfigTemplatesSwitchProfilesPorts:getConfigTemplatesSwitchProfilesPorts", TypeShape.of(GetConfigTemplatesSwitchProfilesPortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetConfigTemplatesSwitchProfilesPortsResult> getConfigTemplatesSwitchProfilesPortsPlain(GetConfigTemplatesSwitchProfilesPortsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getConfigTemplatesSwitchProfilesPorts:getConfigTemplatesSwitchProfilesPorts", TypeShape.of(GetConfigTemplatesSwitchProfilesPortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevices(GetDevicesArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .model("string")
     *             .models("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .sensorAlertProfileIds("string")
     *             .sensorMetrics("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesResult> getDevices(GetDevicesArgs args) {
        return getDevices(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevices(GetDevicesArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .model("string")
     *             .models("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .sensorAlertProfileIds("string")
     *             .sensorMetrics("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesResult> getDevicesPlain(GetDevicesPlainArgs args) {
        return getDevicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevices(GetDevicesArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .model("string")
     *             .models("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .sensorAlertProfileIds("string")
     *             .sensorMetrics("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesResult> getDevices(GetDevicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevices:getDevices", TypeShape.of(GetDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevices(GetDevicesArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .model("string")
     *             .models("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .sensorAlertProfileIds("string")
     *             .sensorMetrics("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesResult> getDevices(GetDevicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevices:getDevices", TypeShape.of(GetDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevices(GetDevicesArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .model("string")
     *             .models("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .sensorAlertProfileIds("string")
     *             .sensorMetrics("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesResult> getDevicesPlain(GetDevicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevices:getDevices", TypeShape.of(GetDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilities(GetDevicesAvailabilitiesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesResult> getDevicesAvailabilities(GetDevicesAvailabilitiesArgs args) {
        return getDevicesAvailabilities(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilities(GetDevicesAvailabilitiesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesAvailabilitiesResult> getDevicesAvailabilitiesPlain(GetDevicesAvailabilitiesPlainArgs args) {
        return getDevicesAvailabilitiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilities(GetDevicesAvailabilitiesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesResult> getDevicesAvailabilities(GetDevicesAvailabilitiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesAvailabilities:getDevicesAvailabilities", TypeShape.of(GetDevicesAvailabilitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilities(GetDevicesAvailabilitiesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesResult> getDevicesAvailabilities(GetDevicesAvailabilitiesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesAvailabilities:getDevicesAvailabilities", TypeShape.of(GetDevicesAvailabilitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilities(GetDevicesAvailabilitiesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesAvailabilitiesResult> getDevicesAvailabilitiesPlain(GetDevicesAvailabilitiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesAvailabilities:getDevicesAvailabilities", TypeShape.of(GetDevicesAvailabilitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesChangeHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesChangeHistoryResult> getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs args) {
        return getDevicesAvailabilitiesChangeHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesChangeHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesAvailabilitiesChangeHistoryResult> getDevicesAvailabilitiesChangeHistoryPlain(GetDevicesAvailabilitiesChangeHistoryPlainArgs args) {
        return getDevicesAvailabilitiesChangeHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesChangeHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesChangeHistoryResult> getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesAvailabilitiesChangeHistory:getDevicesAvailabilitiesChangeHistory", TypeShape.of(GetDevicesAvailabilitiesChangeHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesChangeHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesAvailabilitiesChangeHistoryResult> getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesAvailabilitiesChangeHistory:getDevicesAvailabilitiesChangeHistory", TypeShape.of(GetDevicesAvailabilitiesChangeHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesAvailabilitiesChangeHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesAvailabilitiesChangeHistory(GetDevicesAvailabilitiesChangeHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesAvailabilitiesChangeHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesAvailabilitiesChangeHistoryResult> getDevicesAvailabilitiesChangeHistoryPlain(GetDevicesAvailabilitiesChangeHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesAvailabilitiesChangeHistory:getDevicesAvailabilitiesChangeHistory", TypeShape.of(GetDevicesAvailabilitiesChangeHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesBootsHistory(GetDevicesBootsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .mostRecentPerDevice(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .sortOrder("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesBootsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesBootsHistoryResult> getDevicesBootsHistory(GetDevicesBootsHistoryArgs args) {
        return getDevicesBootsHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesBootsHistory(GetDevicesBootsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .mostRecentPerDevice(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .sortOrder("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesBootsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesBootsHistoryResult> getDevicesBootsHistoryPlain(GetDevicesBootsHistoryPlainArgs args) {
        return getDevicesBootsHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesBootsHistory(GetDevicesBootsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .mostRecentPerDevice(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .sortOrder("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesBootsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesBootsHistoryResult> getDevicesBootsHistory(GetDevicesBootsHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesBootsHistory:getDevicesBootsHistory", TypeShape.of(GetDevicesBootsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesBootsHistory(GetDevicesBootsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .mostRecentPerDevice(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .sortOrder("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesBootsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesBootsHistoryResult> getDevicesBootsHistory(GetDevicesBootsHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesBootsHistory:getDevicesBootsHistory", TypeShape.of(GetDevicesBootsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesBootsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesBootsHistory(GetDevicesBootsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .mostRecentPerDevice(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .sortOrder("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesBootsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesBootsHistoryResult> getDevicesBootsHistoryPlain(GetDevicesBootsHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesBootsHistory:getDevicesBootsHistory", TypeShape.of(GetDevicesBootsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesPowerModulesStatusesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesPowerModulesStatusesByDeviceResult> getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs args) {
        return getDevicesPowerModulesStatusesByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesPowerModulesStatusesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesPowerModulesStatusesByDeviceResult> getDevicesPowerModulesStatusesByDevicePlain(GetDevicesPowerModulesStatusesByDevicePlainArgs args) {
        return getDevicesPowerModulesStatusesByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesPowerModulesStatusesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesPowerModulesStatusesByDeviceResult> getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesPowerModulesStatusesByDevice:getDevicesPowerModulesStatusesByDevice", TypeShape.of(GetDevicesPowerModulesStatusesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesPowerModulesStatusesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesPowerModulesStatusesByDeviceResult> getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesPowerModulesStatusesByDevice:getDevicesPowerModulesStatusesByDevice", TypeShape.of(GetDevicesPowerModulesStatusesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesPowerModulesStatusesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesPowerModulesStatusesByDevice(GetDevicesPowerModulesStatusesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesPowerModulesStatusesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesPowerModulesStatusesByDeviceResult> getDevicesPowerModulesStatusesByDevicePlain(GetDevicesPowerModulesStatusesByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesPowerModulesStatusesByDevice:getDevicesPowerModulesStatusesByDevice", TypeShape.of(GetDevicesPowerModulesStatusesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .status("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesProvisioningStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesProvisioningStatusesResult> getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs args) {
        return getDevicesProvisioningStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .status("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesProvisioningStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesProvisioningStatusesResult> getDevicesProvisioningStatusesPlain(GetDevicesProvisioningStatusesPlainArgs args) {
        return getDevicesProvisioningStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .status("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesProvisioningStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesProvisioningStatusesResult> getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesProvisioningStatuses:getDevicesProvisioningStatuses", TypeShape.of(GetDevicesProvisioningStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .status("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesProvisioningStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesProvisioningStatusesResult> getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesProvisioningStatuses:getDevicesProvisioningStatuses", TypeShape.of(GetDevicesProvisioningStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesProvisioningStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesProvisioningStatuses(GetDevicesProvisioningStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .status("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesProvisioningStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesProvisioningStatusesResult> getDevicesProvisioningStatusesPlain(GetDevicesProvisioningStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesProvisioningStatuses:getDevicesProvisioningStatuses", TypeShape.of(GetDevicesProvisioningStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatuses(GetDevicesStatusesArgs.builder()
     *             .endingBefore("string")
     *             .models("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesResult> getDevicesStatuses(GetDevicesStatusesArgs args) {
        return getDevicesStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatuses(GetDevicesStatusesArgs.builder()
     *             .endingBefore("string")
     *             .models("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesStatusesResult> getDevicesStatusesPlain(GetDevicesStatusesPlainArgs args) {
        return getDevicesStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatuses(GetDevicesStatusesArgs.builder()
     *             .endingBefore("string")
     *             .models("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesResult> getDevicesStatuses(GetDevicesStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesStatuses:getDevicesStatuses", TypeShape.of(GetDevicesStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatuses(GetDevicesStatusesArgs.builder()
     *             .endingBefore("string")
     *             .models("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesResult> getDevicesStatuses(GetDevicesStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesStatuses:getDevicesStatuses", TypeShape.of(GetDevicesStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatuses(GetDevicesStatusesArgs.builder()
     *             .endingBefore("string")
     *             .models("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesStatusesResult> getDevicesStatusesPlain(GetDevicesStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesStatuses:getDevicesStatuses", TypeShape.of(GetDevicesStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs.builder()
     *             .networkIds("string")
     *             .organizationId("string")
     *             .productTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesOverviewResult> getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs args) {
        return getDevicesStatusesOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs.builder()
     *             .networkIds("string")
     *             .organizationId("string")
     *             .productTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesStatusesOverviewResult> getDevicesStatusesOverviewPlain(GetDevicesStatusesOverviewPlainArgs args) {
        return getDevicesStatusesOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs.builder()
     *             .networkIds("string")
     *             .organizationId("string")
     *             .productTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesOverviewResult> getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesStatusesOverview:getDevicesStatusesOverview", TypeShape.of(GetDevicesStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs.builder()
     *             .networkIds("string")
     *             .organizationId("string")
     *             .productTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesStatusesOverviewResult> getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesStatusesOverview:getDevicesStatusesOverview", TypeShape.of(GetDevicesStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesStatusesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesStatusesOverview(GetDevicesStatusesOverviewArgs.builder()
     *             .networkIds("string")
     *             .organizationId("string")
     *             .productTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesStatusesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesStatusesOverviewResult> getDevicesStatusesOverviewPlain(GetDevicesStatusesOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesStatusesOverview:getDevicesStatusesOverview", TypeShape.of(GetDevicesStatusesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksAddressesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksAddressesByDeviceResult> getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs args) {
        return getDevicesUplinksAddressesByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksAddressesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesUplinksAddressesByDeviceResult> getDevicesUplinksAddressesByDevicePlain(GetDevicesUplinksAddressesByDevicePlainArgs args) {
        return getDevicesUplinksAddressesByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksAddressesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksAddressesByDeviceResult> getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesUplinksAddressesByDevice:getDevicesUplinksAddressesByDevice", TypeShape.of(GetDevicesUplinksAddressesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksAddressesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksAddressesByDeviceResult> getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesUplinksAddressesByDevice:getDevicesUplinksAddressesByDevice", TypeShape.of(GetDevicesUplinksAddressesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksAddressesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksAddressesByDevice(GetDevicesUplinksAddressesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .tags("string")
     *             .tagsFilterType("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksAddressesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesUplinksAddressesByDeviceResult> getDevicesUplinksAddressesByDevicePlain(GetDevicesUplinksAddressesByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesUplinksAddressesByDevice:getDevicesUplinksAddressesByDevice", TypeShape.of(GetDevicesUplinksAddressesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs.builder()
     *             .ip("string")
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .uplink("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksLossAndLatencyExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksLossAndLatencyResult> getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs args) {
        return getDevicesUplinksLossAndLatency(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs.builder()
     *             .ip("string")
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .uplink("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksLossAndLatencyExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesUplinksLossAndLatencyResult> getDevicesUplinksLossAndLatencyPlain(GetDevicesUplinksLossAndLatencyPlainArgs args) {
        return getDevicesUplinksLossAndLatencyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs.builder()
     *             .ip("string")
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .uplink("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksLossAndLatencyExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksLossAndLatencyResult> getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesUplinksLossAndLatency:getDevicesUplinksLossAndLatency", TypeShape.of(GetDevicesUplinksLossAndLatencyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs.builder()
     *             .ip("string")
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .uplink("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksLossAndLatencyExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDevicesUplinksLossAndLatencyResult> getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getDevicesUplinksLossAndLatency:getDevicesUplinksLossAndLatency", TypeShape.of(GetDevicesUplinksLossAndLatencyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetDevicesUplinksLossAndLatencyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getDevicesUplinksLossAndLatency(GetDevicesUplinksLossAndLatencyArgs.builder()
     *             .ip("string")
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .uplink("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsDevicesUplinksLossAndLatencyExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDevicesUplinksLossAndLatencyResult> getDevicesUplinksLossAndLatencyPlain(GetDevicesUplinksLossAndLatencyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getDevicesUplinksLossAndLatency:getDevicesUplinksLossAndLatency", TypeShape.of(GetDevicesUplinksLossAndLatencyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesResult> getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs args) {
        return getEarlyAccessFeatures(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEarlyAccessFeaturesResult> getEarlyAccessFeaturesPlain(GetEarlyAccessFeaturesPlainArgs args) {
        return getEarlyAccessFeaturesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesResult> getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getEarlyAccessFeatures:getEarlyAccessFeatures", TypeShape.of(GetEarlyAccessFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesResult> getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getEarlyAccessFeatures:getEarlyAccessFeatures", TypeShape.of(GetEarlyAccessFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeatures(GetEarlyAccessFeaturesArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEarlyAccessFeaturesResult> getEarlyAccessFeaturesPlain(GetEarlyAccessFeaturesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getEarlyAccessFeatures:getEarlyAccessFeatures", TypeShape.of(GetEarlyAccessFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptIns() {
        return getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptInsPlain() {
        return getEarlyAccessFeaturesOptInsPlain(GetEarlyAccessFeaturesOptInsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs args) {
        return getEarlyAccessFeaturesOptIns(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptInsPlain(GetEarlyAccessFeaturesOptInsPlainArgs args) {
        return getEarlyAccessFeaturesOptInsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns", TypeShape.of(GetEarlyAccessFeaturesOptInsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns", TypeShape.of(GetEarlyAccessFeaturesOptInsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetEarlyAccessFeaturesOptInsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getEarlyAccessFeaturesOptIns(GetEarlyAccessFeaturesOptInsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEarlyAccessFeaturesOptInsResult> getEarlyAccessFeaturesOptInsPlain(GetEarlyAccessFeaturesOptInsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns", TypeShape.of(GetEarlyAccessFeaturesOptInsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args) {
        return getFirmwareUpgrades(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesResult> getFirmwareUpgradesPlain(GetFirmwareUpgradesPlainArgs args) {
        return getFirmwareUpgradesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .startingAfter("string")
     *             .statuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesResult> getFirmwareUpgradesPlain(GetFirmwareUpgradesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .firmwareUpgradeBatchIds("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .upgradestatuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesByDeviceResult> getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs args) {
        return getFirmwareUpgradesByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .firmwareUpgradeBatchIds("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .upgradestatuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesByDeviceResult> getFirmwareUpgradesByDevicePlain(GetFirmwareUpgradesByDevicePlainArgs args) {
        return getFirmwareUpgradesByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .firmwareUpgradeBatchIds("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .upgradestatuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesByDeviceResult> getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getFirmwareUpgradesByDevice:getFirmwareUpgradesByDevice", TypeShape.of(GetFirmwareUpgradesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .firmwareUpgradeBatchIds("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .upgradestatuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirmwareUpgradesByDeviceResult> getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getFirmwareUpgradesByDevice:getFirmwareUpgradesByDevice", TypeShape.of(GetFirmwareUpgradesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetFirmwareUpgradesByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getFirmwareUpgradesByDevice(GetFirmwareUpgradesByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .firmwareUpgradeBatchIds("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .upgradestatuses("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsFirmwareUpgradesByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesByDeviceResult> getFirmwareUpgradesByDevicePlain(GetFirmwareUpgradesByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getFirmwareUpgradesByDevice:getFirmwareUpgradesByDevice", TypeShape.of(GetFirmwareUpgradesByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInsightApplications(GetInsightApplicationsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInsightApplicationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInsightApplicationsResult> getInsightApplications(GetInsightApplicationsArgs args) {
        return getInsightApplications(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInsightApplications(GetInsightApplicationsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInsightApplicationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInsightApplicationsResult> getInsightApplicationsPlain(GetInsightApplicationsPlainArgs args) {
        return getInsightApplicationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInsightApplications(GetInsightApplicationsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInsightApplicationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInsightApplicationsResult> getInsightApplications(GetInsightApplicationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInsightApplications:getInsightApplications", TypeShape.of(GetInsightApplicationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInsightApplications(GetInsightApplicationsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInsightApplicationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInsightApplicationsResult> getInsightApplications(GetInsightApplicationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInsightApplications:getInsightApplications", TypeShape.of(GetInsightApplicationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInsightApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInsightApplications(GetInsightApplicationsArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInsightApplicationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInsightApplicationsResult> getInsightApplicationsPlain(GetInsightApplicationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getInsightApplications:getInsightApplications", TypeShape.of(GetInsightApplicationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServers() {
        return getInsightMonitoredMediaServers(GetInsightMonitoredMediaServersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServersPlain() {
        return getInsightMonitoredMediaServersPlain(GetInsightMonitoredMediaServersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServers(GetInsightMonitoredMediaServersArgs args) {
        return getInsightMonitoredMediaServers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServersPlain(GetInsightMonitoredMediaServersPlainArgs args) {
        return getInsightMonitoredMediaServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServers(GetInsightMonitoredMediaServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", TypeShape.of(GetInsightMonitoredMediaServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServers(GetInsightMonitoredMediaServersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", TypeShape.of(GetInsightMonitoredMediaServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInsightMonitoredMediaServersResult> getInsightMonitoredMediaServersPlain(GetInsightMonitoredMediaServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getInsightMonitoredMediaServers:getInsightMonitoredMediaServers", TypeShape.of(GetInsightMonitoredMediaServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInventoryDevicesResult> getInventoryDevices() {
        return getInventoryDevices(GetInventoryDevicesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInventoryDevicesResult> getInventoryDevicesPlain() {
        return getInventoryDevicesPlain(GetInventoryDevicesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInventoryDevicesResult> getInventoryDevices(GetInventoryDevicesArgs args) {
        return getInventoryDevices(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInventoryDevicesResult> getInventoryDevicesPlain(GetInventoryDevicesPlainArgs args) {
        return getInventoryDevicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInventoryDevicesResult> getInventoryDevices(GetInventoryDevicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryDevices:getInventoryDevices", TypeShape.of(GetInventoryDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetInventoryDevicesResult> getInventoryDevices(GetInventoryDevicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryDevices:getInventoryDevices", TypeShape.of(GetInventoryDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetInventoryDevicesResult> getInventoryDevicesPlain(GetInventoryDevicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getInventoryDevices:getInventoryDevices", TypeShape.of(GetInventoryDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs.builder()
     *             .importIds("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringImportsResult> getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs args) {
        return getInventoryOnboardingCloudMonitoringImports(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs.builder()
     *             .importIds("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInventoryOnboardingCloudMonitoringImportsResult> getInventoryOnboardingCloudMonitoringImportsPlain(GetInventoryOnboardingCloudMonitoringImportsPlainArgs args) {
        return getInventoryOnboardingCloudMonitoringImportsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs.builder()
     *             .importIds("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringImportsResult> getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryOnboardingCloudMonitoringImports:getInventoryOnboardingCloudMonitoringImports", TypeShape.of(GetInventoryOnboardingCloudMonitoringImportsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs.builder()
     *             .importIds("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringImportsResult> getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryOnboardingCloudMonitoringImports:getInventoryOnboardingCloudMonitoringImports", TypeShape.of(GetInventoryOnboardingCloudMonitoringImportsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringImportsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringImports(GetInventoryOnboardingCloudMonitoringImportsArgs.builder()
     *             .importIds("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInventoryOnboardingCloudMonitoringImportsResult> getInventoryOnboardingCloudMonitoringImportsPlain(GetInventoryOnboardingCloudMonitoringImportsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getInventoryOnboardingCloudMonitoringImports:getInventoryOnboardingCloudMonitoringImports", TypeShape.of(GetInventoryOnboardingCloudMonitoringImportsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs.builder()
     *             .deviceType("string")
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .search("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringNetworksExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringNetworksResult> getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs args) {
        return getInventoryOnboardingCloudMonitoringNetworks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs.builder()
     *             .deviceType("string")
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .search("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringNetworksExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInventoryOnboardingCloudMonitoringNetworksResult> getInventoryOnboardingCloudMonitoringNetworksPlain(GetInventoryOnboardingCloudMonitoringNetworksPlainArgs args) {
        return getInventoryOnboardingCloudMonitoringNetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs.builder()
     *             .deviceType("string")
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .search("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringNetworksExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringNetworksResult> getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryOnboardingCloudMonitoringNetworks:getInventoryOnboardingCloudMonitoringNetworks", TypeShape.of(GetInventoryOnboardingCloudMonitoringNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs.builder()
     *             .deviceType("string")
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .search("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringNetworksExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInventoryOnboardingCloudMonitoringNetworksResult> getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getInventoryOnboardingCloudMonitoringNetworks:getInventoryOnboardingCloudMonitoringNetworks", TypeShape.of(GetInventoryOnboardingCloudMonitoringNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetInventoryOnboardingCloudMonitoringNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getInventoryOnboardingCloudMonitoringNetworks(GetInventoryOnboardingCloudMonitoringNetworksArgs.builder()
     *             .deviceType("string")
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .search("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsInventoryOnboardingCloudMonitoringNetworksExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInventoryOnboardingCloudMonitoringNetworksResult> getInventoryOnboardingCloudMonitoringNetworksPlain(GetInventoryOnboardingCloudMonitoringNetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getInventoryOnboardingCloudMonitoringNetworks:getInventoryOnboardingCloudMonitoringNetworks", TypeShape.of(GetInventoryOnboardingCloudMonitoringNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicenses(GetLicensesArgs.builder()
     *             .licenseId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesResult> getLicenses(GetLicensesArgs args) {
        return getLicenses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicenses(GetLicensesArgs.builder()
     *             .licenseId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensesResult> getLicensesPlain(GetLicensesPlainArgs args) {
        return getLicensesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicenses(GetLicensesArgs.builder()
     *             .licenseId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesResult> getLicenses(GetLicensesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicenses:getLicenses", TypeShape.of(GetLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicenses(GetLicensesArgs.builder()
     *             .licenseId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesResult> getLicenses(GetLicensesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicenses:getLicenses", TypeShape.of(GetLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicenses(GetLicensesArgs.builder()
     *             .licenseId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensesResult> getLicensesPlain(GetLicensesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getLicenses:getLicenses", TypeShape.of(GetLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensesOverview(GetLicensesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesOverviewResult> getLicensesOverview(GetLicensesOverviewArgs args) {
        return getLicensesOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensesOverview(GetLicensesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensesOverviewResult> getLicensesOverviewPlain(GetLicensesOverviewPlainArgs args) {
        return getLicensesOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensesOverview(GetLicensesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesOverviewResult> getLicensesOverview(GetLicensesOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicensesOverview:getLicensesOverview", TypeShape.of(GetLicensesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensesOverview(GetLicensesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensesOverviewResult> getLicensesOverview(GetLicensesOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicensesOverview:getLicensesOverview", TypeShape.of(GetLicensesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensesOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensesOverview(GetLicensesOverviewArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensesOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensesOverviewResult> getLicensesOverviewPlain(GetLicensesOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getLicensesOverview:getLicensesOverview", TypeShape.of(GetLicensesOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensingCotermLicenses(GetLicensingCotermLicensesArgs.builder()
     *             .endingBefore("string")
     *             .expired(false)
     *             .invalidated(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensingCotermLicensesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensingCotermLicensesResult> getLicensingCotermLicenses(GetLicensingCotermLicensesArgs args) {
        return getLicensingCotermLicenses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensingCotermLicenses(GetLicensingCotermLicensesArgs.builder()
     *             .endingBefore("string")
     *             .expired(false)
     *             .invalidated(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensingCotermLicensesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensingCotermLicensesResult> getLicensingCotermLicensesPlain(GetLicensingCotermLicensesPlainArgs args) {
        return getLicensingCotermLicensesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensingCotermLicenses(GetLicensingCotermLicensesArgs.builder()
     *             .endingBefore("string")
     *             .expired(false)
     *             .invalidated(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensingCotermLicensesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensingCotermLicensesResult> getLicensingCotermLicenses(GetLicensingCotermLicensesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicensingCotermLicenses:getLicensingCotermLicenses", TypeShape.of(GetLicensingCotermLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensingCotermLicenses(GetLicensingCotermLicensesArgs.builder()
     *             .endingBefore("string")
     *             .expired(false)
     *             .invalidated(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensingCotermLicensesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLicensingCotermLicensesResult> getLicensingCotermLicenses(GetLicensingCotermLicensesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLicensingCotermLicenses:getLicensingCotermLicenses", TypeShape.of(GetLicensingCotermLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLicensingCotermLicensesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLicensingCotermLicenses(GetLicensingCotermLicensesArgs.builder()
     *             .endingBefore("string")
     *             .expired(false)
     *             .invalidated(false)
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLicensingCotermLicensesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLicensingCotermLicensesResult> getLicensingCotermLicensesPlain(GetLicensingCotermLicensesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getLicensingCotermLicenses:getLicensingCotermLicenses", TypeShape.of(GetLicensingCotermLicensesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLoginSecurity(GetLoginSecurityArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLoginSecurityExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoginSecurityResult> getLoginSecurity(GetLoginSecurityArgs args) {
        return getLoginSecurity(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLoginSecurity(GetLoginSecurityArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLoginSecurityExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoginSecurityResult> getLoginSecurityPlain(GetLoginSecurityPlainArgs args) {
        return getLoginSecurityPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLoginSecurity(GetLoginSecurityArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLoginSecurityExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoginSecurityResult> getLoginSecurity(GetLoginSecurityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLoginSecurity:getLoginSecurity", TypeShape.of(GetLoginSecurityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLoginSecurity(GetLoginSecurityArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLoginSecurityExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoginSecurityResult> getLoginSecurity(GetLoginSecurityArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getLoginSecurity:getLoginSecurity", TypeShape.of(GetLoginSecurityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetLoginSecurityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getLoginSecurity(GetLoginSecurityArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsLoginSecurityExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoginSecurityResult> getLoginSecurityPlain(GetLoginSecurityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getLoginSecurity:getLoginSecurity", TypeShape.of(GetLoginSecurityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getOpenapiSpec(GetOpenapiSpecArgs.builder()
     *             .organizationId("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsOpenapiSpecExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenapiSpecResult> getOpenapiSpec(GetOpenapiSpecArgs args) {
        return getOpenapiSpec(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getOpenapiSpec(GetOpenapiSpecArgs.builder()
     *             .organizationId("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsOpenapiSpecExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenapiSpecResult> getOpenapiSpecPlain(GetOpenapiSpecPlainArgs args) {
        return getOpenapiSpecPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getOpenapiSpec(GetOpenapiSpecArgs.builder()
     *             .organizationId("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsOpenapiSpecExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenapiSpecResult> getOpenapiSpec(GetOpenapiSpecArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getOpenapiSpec:getOpenapiSpec", TypeShape.of(GetOpenapiSpecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getOpenapiSpec(GetOpenapiSpecArgs.builder()
     *             .organizationId("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsOpenapiSpecExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenapiSpecResult> getOpenapiSpec(GetOpenapiSpecArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getOpenapiSpec:getOpenapiSpec", TypeShape.of(GetOpenapiSpecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetOpenapiSpecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getOpenapiSpec(GetOpenapiSpecArgs.builder()
     *             .organizationId("string")
     *             .version(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsOpenapiSpecExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenapiSpecResult> getOpenapiSpecPlain(GetOpenapiSpecPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getOpenapiSpec:getOpenapiSpec", TypeShape.of(GetOpenapiSpecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsResult> getPolicyObjects() {
        return getPolicyObjects(GetPolicyObjectsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsResult> getPolicyObjectsPlain() {
        return getPolicyObjectsPlain(GetPolicyObjectsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsResult> getPolicyObjects(GetPolicyObjectsArgs args) {
        return getPolicyObjects(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsResult> getPolicyObjectsPlain(GetPolicyObjectsPlainArgs args) {
        return getPolicyObjectsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsResult> getPolicyObjects(GetPolicyObjectsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getPolicyObjects:getPolicyObjects", TypeShape.of(GetPolicyObjectsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsResult> getPolicyObjects(GetPolicyObjectsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getPolicyObjects:getPolicyObjects", TypeShape.of(GetPolicyObjectsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjects(GetPolicyObjectsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsResult> getPolicyObjectsPlain(GetPolicyObjectsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getPolicyObjects:getPolicyObjects", TypeShape.of(GetPolicyObjectsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsGroupsResult> getPolicyObjectsGroups() {
        return getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsGroupsResult> getPolicyObjectsGroupsPlain() {
        return getPolicyObjectsGroupsPlain(GetPolicyObjectsGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsGroupsResult> getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs args) {
        return getPolicyObjectsGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsGroupsResult> getPolicyObjectsGroupsPlain(GetPolicyObjectsGroupsPlainArgs args) {
        return getPolicyObjectsGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsGroupsResult> getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", TypeShape.of(GetPolicyObjectsGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPolicyObjectsGroupsResult> getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", TypeShape.of(GetPolicyObjectsGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetPolicyObjectsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getPolicyObjectsGroups(GetPolicyObjectsGroupsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsPolicyObjectsGroupsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPolicyObjectsGroupsResult> getPolicyObjectsGroupsPlain(GetPolicyObjectsGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getPolicyObjectsGroups:getPolicyObjectsGroups", TypeShape.of(GetPolicyObjectsGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSaml(GetSamlArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSamlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml(GetSamlArgs args) {
        return getSaml(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSaml(GetSamlArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSamlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlResult> getSamlPlain(GetSamlPlainArgs args) {
        return getSamlPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSaml(GetSamlArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSamlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml(GetSamlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSaml:getSaml", TypeShape.of(GetSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSaml(GetSamlArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSamlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml(GetSamlArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSaml:getSaml", TypeShape.of(GetSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSaml(GetSamlArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSamlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlResult> getSamlPlain(GetSamlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSaml:getSaml", TypeShape.of(GetSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlIdpsResult> getSamlIdps() {
        return getSamlIdps(GetSamlIdpsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlIdpsResult> getSamlIdpsPlain() {
        return getSamlIdpsPlain(GetSamlIdpsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlIdpsResult> getSamlIdps(GetSamlIdpsArgs args) {
        return getSamlIdps(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlIdpsResult> getSamlIdpsPlain(GetSamlIdpsPlainArgs args) {
        return getSamlIdpsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlIdpsResult> getSamlIdps(GetSamlIdpsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSamlIdps:getSamlIdps", TypeShape.of(GetSamlIdpsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlIdpsResult> getSamlIdps(GetSamlIdpsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSamlIdps:getSamlIdps", TypeShape.of(GetSamlIdpsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlIdpsResult> getSamlIdpsPlain(GetSamlIdpsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSamlIdps:getSamlIdps", TypeShape.of(GetSamlIdpsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlRolesResult> getSamlRoles() {
        return getSamlRoles(GetSamlRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlRolesResult> getSamlRolesPlain() {
        return getSamlRolesPlain(GetSamlRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlRolesResult> getSamlRoles(GetSamlRolesArgs args) {
        return getSamlRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlRolesResult> getSamlRolesPlain(GetSamlRolesPlainArgs args) {
        return getSamlRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlRolesResult> getSamlRoles(GetSamlRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSamlRoles:getSamlRoles", TypeShape.of(GetSamlRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSamlRolesResult> getSamlRoles(GetSamlRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSamlRoles:getSamlRoles", TypeShape.of(GetSamlRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSamlRolesResult> getSamlRolesPlain(GetSamlRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSamlRoles:getSamlRoles", TypeShape.of(GetSamlRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsHistory(GetSensorReadingsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsHistoryResult> getSensorReadingsHistory(GetSensorReadingsHistoryArgs args) {
        return getSensorReadingsHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsHistory(GetSensorReadingsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSensorReadingsHistoryResult> getSensorReadingsHistoryPlain(GetSensorReadingsHistoryPlainArgs args) {
        return getSensorReadingsHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsHistory(GetSensorReadingsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsHistoryResult> getSensorReadingsHistory(GetSensorReadingsHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSensorReadingsHistory:getSensorReadingsHistory", TypeShape.of(GetSensorReadingsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsHistory(GetSensorReadingsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsHistoryResult> getSensorReadingsHistory(GetSensorReadingsHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSensorReadingsHistory:getSensorReadingsHistory", TypeShape.of(GetSensorReadingsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsHistory(GetSensorReadingsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSensorReadingsHistoryResult> getSensorReadingsHistoryPlain(GetSensorReadingsHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSensorReadingsHistory:getSensorReadingsHistory", TypeShape.of(GetSensorReadingsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsLatest(GetSensorReadingsLatestArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsLatestExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsLatestResult> getSensorReadingsLatest(GetSensorReadingsLatestArgs args) {
        return getSensorReadingsLatest(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsLatest(GetSensorReadingsLatestArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsLatestExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSensorReadingsLatestResult> getSensorReadingsLatestPlain(GetSensorReadingsLatestPlainArgs args) {
        return getSensorReadingsLatestPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsLatest(GetSensorReadingsLatestArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsLatestExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsLatestResult> getSensorReadingsLatest(GetSensorReadingsLatestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSensorReadingsLatest:getSensorReadingsLatest", TypeShape.of(GetSensorReadingsLatestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsLatest(GetSensorReadingsLatestArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsLatestExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSensorReadingsLatestResult> getSensorReadingsLatest(GetSensorReadingsLatestArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSensorReadingsLatest:getSensorReadingsLatest", TypeShape.of(GetSensorReadingsLatestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSensorReadingsLatestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSensorReadingsLatest(GetSensorReadingsLatestArgs.builder()
     *             .endingBefore("string")
     *             .metrics("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSensorReadingsLatestExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSensorReadingsLatestResult> getSensorReadingsLatestPlain(GetSensorReadingsLatestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSensorReadingsLatest:getSensorReadingsLatest", TypeShape.of(GetSensorReadingsLatestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmAdminsRolesResult> getSmAdminsRoles() {
        return getSmAdminsRoles(GetSmAdminsRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmAdminsRolesResult> getSmAdminsRolesPlain() {
        return getSmAdminsRolesPlain(GetSmAdminsRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmAdminsRolesResult> getSmAdminsRoles(GetSmAdminsRolesArgs args) {
        return getSmAdminsRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmAdminsRolesResult> getSmAdminsRolesPlain(GetSmAdminsRolesPlainArgs args) {
        return getSmAdminsRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmAdminsRolesResult> getSmAdminsRoles(GetSmAdminsRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", TypeShape.of(GetSmAdminsRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmAdminsRolesResult> getSmAdminsRoles(GetSmAdminsRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", TypeShape.of(GetSmAdminsRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmAdminsRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmAdminsRoles(GetSmAdminsRolesArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmAdminsRolesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmAdminsRolesResult> getSmAdminsRolesPlain(GetSmAdminsRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSmAdminsRoles:getSmAdminsRoles", TypeShape.of(GetSmAdminsRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmApnsCert(GetSmApnsCertArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmApnsCertExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmApnsCertResult> getSmApnsCert(GetSmApnsCertArgs args) {
        return getSmApnsCert(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmApnsCert(GetSmApnsCertArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmApnsCertExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmApnsCertResult> getSmApnsCertPlain(GetSmApnsCertPlainArgs args) {
        return getSmApnsCertPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmApnsCert(GetSmApnsCertArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmApnsCertExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmApnsCertResult> getSmApnsCert(GetSmApnsCertArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmApnsCert:getSmApnsCert", TypeShape.of(GetSmApnsCertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmApnsCert(GetSmApnsCertArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmApnsCertExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmApnsCertResult> getSmApnsCert(GetSmApnsCertArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmApnsCert:getSmApnsCert", TypeShape.of(GetSmApnsCertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmApnsCertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmApnsCert(GetSmApnsCertArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmApnsCertExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmApnsCertResult> getSmApnsCertPlain(GetSmApnsCertPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSmApnsCert:getSmApnsCert", TypeShape.of(GetSmApnsCertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmSentryPoliciesAssignmentsByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmSentryPoliciesAssignmentsByNetworkResult> getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs args) {
        return getSmSentryPoliciesAssignmentsByNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmSentryPoliciesAssignmentsByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmSentryPoliciesAssignmentsByNetworkResult> getSmSentryPoliciesAssignmentsByNetworkPlain(GetSmSentryPoliciesAssignmentsByNetworkPlainArgs args) {
        return getSmSentryPoliciesAssignmentsByNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmSentryPoliciesAssignmentsByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmSentryPoliciesAssignmentsByNetworkResult> getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmSentryPoliciesAssignmentsByNetwork:getSmSentryPoliciesAssignmentsByNetwork", TypeShape.of(GetSmSentryPoliciesAssignmentsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmSentryPoliciesAssignmentsByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSmSentryPoliciesAssignmentsByNetworkResult> getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmSentryPoliciesAssignmentsByNetwork:getSmSentryPoliciesAssignmentsByNetwork", TypeShape.of(GetSmSentryPoliciesAssignmentsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSmSentryPoliciesAssignmentsByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSmSentryPoliciesAssignmentsByNetwork(GetSmSentryPoliciesAssignmentsByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSmSentryPoliciesAssignmentsByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSmSentryPoliciesAssignmentsByNetworkResult> getSmSentryPoliciesAssignmentsByNetworkPlain(GetSmSentryPoliciesAssignmentsByNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSmSentryPoliciesAssignmentsByNetwork:getSmSentryPoliciesAssignmentsByNetwork", TypeShape.of(GetSmSentryPoliciesAssignmentsByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmVppAccountsResult> getSmVppAccounts() {
        return getSmVppAccounts(GetSmVppAccountsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmVppAccountsResult> getSmVppAccountsPlain() {
        return getSmVppAccountsPlain(GetSmVppAccountsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmVppAccountsResult> getSmVppAccounts(GetSmVppAccountsArgs args) {
        return getSmVppAccounts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmVppAccountsResult> getSmVppAccountsPlain(GetSmVppAccountsPlainArgs args) {
        return getSmVppAccountsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmVppAccountsResult> getSmVppAccounts(GetSmVppAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmVppAccounts:getSmVppAccounts", TypeShape.of(GetSmVppAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmVppAccountsResult> getSmVppAccounts(GetSmVppAccountsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSmVppAccounts:getSmVppAccounts", TypeShape.of(GetSmVppAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmVppAccountsResult> getSmVppAccountsPlain(GetSmVppAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSmVppAccounts:getSmVppAccounts", TypeShape.of(GetSmVppAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSnmp(GetSnmpArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args) {
        return getSnmp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSnmp(GetSnmpArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnmpResult> getSnmpPlain(GetSnmpPlainArgs args) {
        return getSnmpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSnmp(GetSnmpArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSnmp(GetSnmpArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSnmp(GetSnmpArgs.builder()
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnmpResult> getSnmpPlain(GetSnmpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopAppliancesByUtilizationExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopAppliancesByUtilizationResult> getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs args) {
        return getSummaryTopAppliancesByUtilization(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopAppliancesByUtilizationExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopAppliancesByUtilizationResult> getSummaryTopAppliancesByUtilizationPlain(GetSummaryTopAppliancesByUtilizationPlainArgs args) {
        return getSummaryTopAppliancesByUtilizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopAppliancesByUtilizationExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopAppliancesByUtilizationResult> getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopAppliancesByUtilization:getSummaryTopAppliancesByUtilization", TypeShape.of(GetSummaryTopAppliancesByUtilizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopAppliancesByUtilizationExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopAppliancesByUtilizationResult> getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopAppliancesByUtilization:getSummaryTopAppliancesByUtilization", TypeShape.of(GetSummaryTopAppliancesByUtilizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopAppliancesByUtilizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopAppliancesByUtilization(GetSummaryTopAppliancesByUtilizationArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopAppliancesByUtilizationExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopAppliancesByUtilizationResult> getSummaryTopAppliancesByUtilizationPlain(GetSummaryTopAppliancesByUtilizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopAppliancesByUtilization:getSummaryTopAppliancesByUtilization", TypeShape.of(GetSummaryTopAppliancesByUtilizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsByUsageResult> getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs args) {
        return getSummaryTopClientsByUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopClientsByUsageResult> getSummaryTopClientsByUsagePlain(GetSummaryTopClientsByUsagePlainArgs args) {
        return getSummaryTopClientsByUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsByUsageResult> getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopClientsByUsage:getSummaryTopClientsByUsage", TypeShape.of(GetSummaryTopClientsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsByUsageResult> getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopClientsByUsage:getSummaryTopClientsByUsage", TypeShape.of(GetSummaryTopClientsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsByUsage(GetSummaryTopClientsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopClientsByUsageResult> getSummaryTopClientsByUsagePlain(GetSummaryTopClientsByUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopClientsByUsage:getSummaryTopClientsByUsage", TypeShape.of(GetSummaryTopClientsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsManufacturersByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsManufacturersByUsageResult> getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs args) {
        return getSummaryTopClientsManufacturersByUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsManufacturersByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopClientsManufacturersByUsageResult> getSummaryTopClientsManufacturersByUsagePlain(GetSummaryTopClientsManufacturersByUsagePlainArgs args) {
        return getSummaryTopClientsManufacturersByUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsManufacturersByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsManufacturersByUsageResult> getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", TypeShape.of(GetSummaryTopClientsManufacturersByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsManufacturersByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopClientsManufacturersByUsageResult> getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", TypeShape.of(GetSummaryTopClientsManufacturersByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopClientsManufacturersByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopClientsManufacturersByUsage(GetSummaryTopClientsManufacturersByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopClientsManufacturersByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopClientsManufacturersByUsageResult> getSummaryTopClientsManufacturersByUsagePlain(GetSummaryTopClientsManufacturersByUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopClientsManufacturersByUsage:getSummaryTopClientsManufacturersByUsage", TypeShape.of(GetSummaryTopClientsManufacturersByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesByUsageResult> getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs args) {
        return getSummaryTopDevicesByUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopDevicesByUsageResult> getSummaryTopDevicesByUsagePlain(GetSummaryTopDevicesByUsagePlainArgs args) {
        return getSummaryTopDevicesByUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesByUsageResult> getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopDevicesByUsage:getSummaryTopDevicesByUsage", TypeShape.of(GetSummaryTopDevicesByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesByUsageResult> getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopDevicesByUsage:getSummaryTopDevicesByUsage", TypeShape.of(GetSummaryTopDevicesByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesByUsage(GetSummaryTopDevicesByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopDevicesByUsageResult> getSummaryTopDevicesByUsagePlain(GetSummaryTopDevicesByUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopDevicesByUsage:getSummaryTopDevicesByUsage", TypeShape.of(GetSummaryTopDevicesByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesModelsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesModelsByUsageResult> getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs args) {
        return getSummaryTopDevicesModelsByUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesModelsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopDevicesModelsByUsageResult> getSummaryTopDevicesModelsByUsagePlain(GetSummaryTopDevicesModelsByUsagePlainArgs args) {
        return getSummaryTopDevicesModelsByUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesModelsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesModelsByUsageResult> getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopDevicesModelsByUsage:getSummaryTopDevicesModelsByUsage", TypeShape.of(GetSummaryTopDevicesModelsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesModelsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopDevicesModelsByUsageResult> getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopDevicesModelsByUsage:getSummaryTopDevicesModelsByUsage", TypeShape.of(GetSummaryTopDevicesModelsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopDevicesModelsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopDevicesModelsByUsage(GetSummaryTopDevicesModelsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopDevicesModelsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopDevicesModelsByUsageResult> getSummaryTopDevicesModelsByUsagePlain(GetSummaryTopDevicesModelsByUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopDevicesModelsByUsage:getSummaryTopDevicesModelsByUsage", TypeShape.of(GetSummaryTopDevicesModelsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopNetworksByStatusExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopNetworksByStatusResult> getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs args) {
        return getSummaryTopNetworksByStatus(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopNetworksByStatusExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopNetworksByStatusResult> getSummaryTopNetworksByStatusPlain(GetSummaryTopNetworksByStatusPlainArgs args) {
        return getSummaryTopNetworksByStatusPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopNetworksByStatusExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopNetworksByStatusResult> getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopNetworksByStatus:getSummaryTopNetworksByStatus", TypeShape.of(GetSummaryTopNetworksByStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopNetworksByStatusExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopNetworksByStatusResult> getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopNetworksByStatus:getSummaryTopNetworksByStatus", TypeShape.of(GetSummaryTopNetworksByStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopNetworksByStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopNetworksByStatus(GetSummaryTopNetworksByStatusArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopNetworksByStatusExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopNetworksByStatusResult> getSummaryTopNetworksByStatusPlain(GetSummaryTopNetworksByStatusPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopNetworksByStatus:getSummaryTopNetworksByStatus", TypeShape.of(GetSummaryTopNetworksByStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSsidsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSsidsByUsageResult> getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs args) {
        return getSummaryTopSsidsByUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSsidsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopSsidsByUsageResult> getSummaryTopSsidsByUsagePlain(GetSummaryTopSsidsByUsagePlainArgs args) {
        return getSummaryTopSsidsByUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSsidsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSsidsByUsageResult> getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopSsidsByUsage:getSummaryTopSsidsByUsage", TypeShape.of(GetSummaryTopSsidsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSsidsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSsidsByUsageResult> getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopSsidsByUsage:getSummaryTopSsidsByUsage", TypeShape.of(GetSummaryTopSsidsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSsidsByUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSsidsByUsage(GetSummaryTopSsidsByUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSsidsByUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopSsidsByUsageResult> getSummaryTopSsidsByUsagePlain(GetSummaryTopSsidsByUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopSsidsByUsage:getSummaryTopSsidsByUsage", TypeShape.of(GetSummaryTopSsidsByUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSwitchesByEnergyUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSwitchesByEnergyUsageResult> getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs args) {
        return getSummaryTopSwitchesByEnergyUsage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSwitchesByEnergyUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopSwitchesByEnergyUsageResult> getSummaryTopSwitchesByEnergyUsagePlain(GetSummaryTopSwitchesByEnergyUsagePlainArgs args) {
        return getSummaryTopSwitchesByEnergyUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSwitchesByEnergyUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSwitchesByEnergyUsageResult> getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopSwitchesByEnergyUsage:getSummaryTopSwitchesByEnergyUsage", TypeShape.of(GetSummaryTopSwitchesByEnergyUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSwitchesByEnergyUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSummaryTopSwitchesByEnergyUsageResult> getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSummaryTopSwitchesByEnergyUsage:getSummaryTopSwitchesByEnergyUsage", TypeShape.of(GetSummaryTopSwitchesByEnergyUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSummaryTopSwitchesByEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSummaryTopSwitchesByEnergyUsage(GetSummaryTopSwitchesByEnergyUsageArgs.builder()
     *             .organizationId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSummaryTopSwitchesByEnergyUsageExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSummaryTopSwitchesByEnergyUsageResult> getSummaryTopSwitchesByEnergyUsagePlain(GetSummaryTopSwitchesByEnergyUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSummaryTopSwitchesByEnergyUsage:getSummaryTopSwitchesByEnergyUsage", TypeShape.of(GetSummaryTopSwitchesByEnergyUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .portProfileIds("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSwitchPortsBySwitchExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSwitchPortsBySwitchResult> getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs args) {
        return getSwitchPortsBySwitch(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .portProfileIds("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSwitchPortsBySwitchExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSwitchPortsBySwitchResult> getSwitchPortsBySwitchPlain(GetSwitchPortsBySwitchPlainArgs args) {
        return getSwitchPortsBySwitchPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .portProfileIds("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSwitchPortsBySwitchExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSwitchPortsBySwitchResult> getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSwitchPortsBySwitch:getSwitchPortsBySwitch", TypeShape.of(GetSwitchPortsBySwitchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .portProfileIds("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSwitchPortsBySwitchExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSwitchPortsBySwitchResult> getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getSwitchPortsBySwitch:getSwitchPortsBySwitch", TypeShape.of(GetSwitchPortsBySwitchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetSwitchPortsBySwitchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getSwitchPortsBySwitch(GetSwitchPortsBySwitchArgs.builder()
     *             .configurationUpdatedAfter("string")
     *             .endingBefore("string")
     *             .mac("string")
     *             .macs("string")
     *             .name("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .portProfileIds("string")
     *             .serial("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsSwitchPortsBySwitchExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSwitchPortsBySwitchResult> getSwitchPortsBySwitchPlain(GetSwitchPortsBySwitchPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getSwitchPortsBySwitch:getSwitchPortsBySwitch", TypeShape.of(GetSwitchPortsBySwitchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getUplinksStatuses(GetUplinksStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsUplinksStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUplinksStatusesResult> getUplinksStatuses(GetUplinksStatusesArgs args) {
        return getUplinksStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getUplinksStatuses(GetUplinksStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsUplinksStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUplinksStatusesResult> getUplinksStatusesPlain(GetUplinksStatusesPlainArgs args) {
        return getUplinksStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getUplinksStatuses(GetUplinksStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsUplinksStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUplinksStatusesResult> getUplinksStatuses(GetUplinksStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getUplinksStatuses:getUplinksStatuses", TypeShape.of(GetUplinksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getUplinksStatuses(GetUplinksStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsUplinksStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUplinksStatusesResult> getUplinksStatuses(GetUplinksStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getUplinksStatuses:getUplinksStatuses", TypeShape.of(GetUplinksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetUplinksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getUplinksStatuses(GetUplinksStatusesArgs.builder()
     *             .endingBefore("string")
     *             .iccids("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsUplinksStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUplinksStatusesResult> getUplinksStatusesPlain(GetUplinksStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getUplinksStatuses:getUplinksStatuses", TypeShape.of(GetUplinksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs.builder()
     *             .callbackId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksCallbacksStatusesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksCallbacksStatusesResult> getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs args) {
        return getWebhooksCallbacksStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs.builder()
     *             .callbackId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksCallbacksStatusesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebhooksCallbacksStatusesResult> getWebhooksCallbacksStatusesPlain(GetWebhooksCallbacksStatusesPlainArgs args) {
        return getWebhooksCallbacksStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs.builder()
     *             .callbackId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksCallbacksStatusesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksCallbacksStatusesResult> getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWebhooksCallbacksStatuses:getWebhooksCallbacksStatuses", TypeShape.of(GetWebhooksCallbacksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs.builder()
     *             .callbackId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksCallbacksStatusesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksCallbacksStatusesResult> getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWebhooksCallbacksStatuses:getWebhooksCallbacksStatuses", TypeShape.of(GetWebhooksCallbacksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksCallbacksStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksCallbacksStatuses(GetWebhooksCallbacksStatusesArgs.builder()
     *             .callbackId("string")
     *             .organizationId("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksCallbacksStatusesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebhooksCallbacksStatusesResult> getWebhooksCallbacksStatusesPlain(GetWebhooksCallbacksStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWebhooksCallbacksStatuses:getWebhooksCallbacksStatuses", TypeShape.of(GetWebhooksCallbacksStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksLogs(GetWebhooksLogsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .url("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksLogsResult> getWebhooksLogs(GetWebhooksLogsArgs args) {
        return getWebhooksLogs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksLogs(GetWebhooksLogsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .url("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebhooksLogsResult> getWebhooksLogsPlain(GetWebhooksLogsPlainArgs args) {
        return getWebhooksLogsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksLogs(GetWebhooksLogsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .url("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksLogsResult> getWebhooksLogs(GetWebhooksLogsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWebhooksLogs:getWebhooksLogs", TypeShape.of(GetWebhooksLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksLogs(GetWebhooksLogsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .url("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebhooksLogsResult> getWebhooksLogs(GetWebhooksLogsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWebhooksLogs:getWebhooksLogs", TypeShape.of(GetWebhooksLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWebhooksLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWebhooksLogs(GetWebhooksLogsArgs.builder()
     *             .endingBefore("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .url("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWebhooksLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebhooksLogsResult> getWebhooksLogsPlain(GetWebhooksLogsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWebhooksLogs:getWebhooksLogs", TypeShape.of(GetWebhooksLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByDeviceResult> getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs args) {
        return getWirelessDevicesChannelUtilizationByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationByDeviceResult> getWirelessDevicesChannelUtilizationByDevicePlain(GetWirelessDevicesChannelUtilizationByDevicePlainArgs args) {
        return getWirelessDevicesChannelUtilizationByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByDeviceResult> getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationByDevice:getWirelessDevicesChannelUtilizationByDevice", TypeShape.of(GetWirelessDevicesChannelUtilizationByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByDeviceResult> getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationByDevice:getWirelessDevicesChannelUtilizationByDevice", TypeShape.of(GetWirelessDevicesChannelUtilizationByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByDevice(GetWirelessDevicesChannelUtilizationByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationByDeviceResult> getWirelessDevicesChannelUtilizationByDevicePlain(GetWirelessDevicesChannelUtilizationByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesChannelUtilizationByDevice:getWirelessDevicesChannelUtilizationByDevice", TypeShape.of(GetWirelessDevicesChannelUtilizationByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByNetworkResult> getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs args) {
        return getWirelessDevicesChannelUtilizationByNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationByNetworkResult> getWirelessDevicesChannelUtilizationByNetworkPlain(GetWirelessDevicesChannelUtilizationByNetworkPlainArgs args) {
        return getWirelessDevicesChannelUtilizationByNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByNetworkResult> getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationByNetwork:getWirelessDevicesChannelUtilizationByNetwork", TypeShape.of(GetWirelessDevicesChannelUtilizationByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationByNetworkResult> getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationByNetwork:getWirelessDevicesChannelUtilizationByNetwork", TypeShape.of(GetWirelessDevicesChannelUtilizationByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationByNetwork(GetWirelessDevicesChannelUtilizationByNetworkArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationByNetworkResult> getWirelessDevicesChannelUtilizationByNetworkPlain(GetWirelessDevicesChannelUtilizationByNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesChannelUtilizationByNetwork:getWirelessDevicesChannelUtilizationByNetwork", TypeShape.of(GetWirelessDevicesChannelUtilizationByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs args) {
        return getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlain(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlainArgs args) {
        return getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlain(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval:getWirelessDevicesChannelUtilizationHistoryByDeviceByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs args) {
        return getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlain(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlainArgs args) {
        return getWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval:getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval:getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalArgs.builder()
     *             .endingBefore("string")
     *             .interval(1)
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult> getWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlain(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval:getWirelessDevicesChannelUtilizationHistoryByNetworkByInterval", TypeShape.of(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesEthernetStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesEthernetStatusesResult> getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs args) {
        return getWirelessDevicesEthernetStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesEthernetStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesEthernetStatusesResult> getWirelessDevicesEthernetStatusesPlain(GetWirelessDevicesEthernetStatusesPlainArgs args) {
        return getWirelessDevicesEthernetStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesEthernetStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesEthernetStatusesResult> getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesEthernetStatuses:getWirelessDevicesEthernetStatuses", TypeShape.of(GetWirelessDevicesEthernetStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesEthernetStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesEthernetStatusesResult> getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesEthernetStatuses:getWirelessDevicesEthernetStatuses", TypeShape.of(GetWirelessDevicesEthernetStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesEthernetStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesEthernetStatuses(GetWirelessDevicesEthernetStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesEthernetStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesEthernetStatusesResult> getWirelessDevicesEthernetStatusesPlain(GetWirelessDevicesEthernetStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesEthernetStatuses:getWirelessDevicesEthernetStatuses", TypeShape.of(GetWirelessDevicesEthernetStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByClientResult> getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs args) {
        return getWirelessDevicesPacketLossByClient(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByClientResult> getWirelessDevicesPacketLossByClientPlain(GetWirelessDevicesPacketLossByClientPlainArgs args) {
        return getWirelessDevicesPacketLossByClientPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByClientResult> getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByClient:getWirelessDevicesPacketLossByClient", TypeShape.of(GetWirelessDevicesPacketLossByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByClientResult> getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByClient:getWirelessDevicesPacketLossByClient", TypeShape.of(GetWirelessDevicesPacketLossByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByClient(GetWirelessDevicesPacketLossByClientArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .macs("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByClientResult> getWirelessDevicesPacketLossByClientPlain(GetWirelessDevicesPacketLossByClientPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesPacketLossByClient:getWirelessDevicesPacketLossByClient", TypeShape.of(GetWirelessDevicesPacketLossByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByDeviceResult> getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs args) {
        return getWirelessDevicesPacketLossByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByDeviceResult> getWirelessDevicesPacketLossByDevicePlain(GetWirelessDevicesPacketLossByDevicePlainArgs args) {
        return getWirelessDevicesPacketLossByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByDeviceResult> getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByDevice:getWirelessDevicesPacketLossByDevice", TypeShape.of(GetWirelessDevicesPacketLossByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByDeviceResult> getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByDevice:getWirelessDevicesPacketLossByDevice", TypeShape.of(GetWirelessDevicesPacketLossByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByDevice(GetWirelessDevicesPacketLossByDeviceArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByDeviceResult> getWirelessDevicesPacketLossByDevicePlain(GetWirelessDevicesPacketLossByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesPacketLossByDevice:getWirelessDevicesPacketLossByDevice", TypeShape.of(GetWirelessDevicesPacketLossByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByNetworkResult> getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs args) {
        return getWirelessDevicesPacketLossByNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByNetworkResult> getWirelessDevicesPacketLossByNetworkPlain(GetWirelessDevicesPacketLossByNetworkPlainArgs args) {
        return getWirelessDevicesPacketLossByNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByNetworkResult> getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByNetwork:getWirelessDevicesPacketLossByNetwork", TypeShape.of(GetWirelessDevicesPacketLossByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWirelessDevicesPacketLossByNetworkResult> getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:organizations/getWirelessDevicesPacketLossByNetwork:getWirelessDevicesPacketLossByNetwork", TypeShape.of(GetWirelessDevicesPacketLossByNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.organizations.OrganizationsFunctions;
     * import com.pulumi.meraki.organizations.inputs.GetWirelessDevicesPacketLossByNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getWirelessDevicesPacketLossByNetwork(GetWirelessDevicesPacketLossByNetworkArgs.builder()
     *             .bands("string")
     *             .endingBefore("string")
     *             .networkIds("string")
     *             .organizationId("string")
     *             .perPage(1)
     *             .serials("string")
     *             .ssids("string")
     *             .startingAfter("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiOrganizationsWirelessDevicesPacketLossByNetworkExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWirelessDevicesPacketLossByNetworkResult> getWirelessDevicesPacketLossByNetworkPlain(GetWirelessDevicesPacketLossByNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:organizations/getWirelessDevicesPacketLossByNetwork:getWirelessDevicesPacketLossByNetwork", TypeShape.of(GetWirelessDevicesPacketLossByNetworkResult.class), args, Utilities.withVersion(options));
    }
}
