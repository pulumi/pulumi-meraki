// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsTrafficShapingRulesItemRule;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsTrafficShapingRulesItem {
    /**
     * @return Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network&#39;s traffic shaping page. Note that default rules count against the rule limit of 8.
     * 
     */
    private Boolean defaultRulesEnabled;
    /**
     * @return An array of traffic shaping rules. Rules are applied in the order that
     * they are specified in. An empty list (or null) means no rules. Note that
     * you are allowed a maximum of 8 rules.
     * 
     */
    private List<GetWirelessSsidsTrafficShapingRulesItemRule> rules;
    /**
     * @return Whether traffic shaping rules are applied to clients on your SSID.
     * 
     */
    private Boolean trafficShapingEnabled;

    private GetWirelessSsidsTrafficShapingRulesItem() {}
    /**
     * @return Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network&#39;s traffic shaping page. Note that default rules count against the rule limit of 8.
     * 
     */
    public Boolean defaultRulesEnabled() {
        return this.defaultRulesEnabled;
    }
    /**
     * @return An array of traffic shaping rules. Rules are applied in the order that
     * they are specified in. An empty list (or null) means no rules. Note that
     * you are allowed a maximum of 8 rules.
     * 
     */
    public List<GetWirelessSsidsTrafficShapingRulesItemRule> rules() {
        return this.rules;
    }
    /**
     * @return Whether traffic shaping rules are applied to clients on your SSID.
     * 
     */
    public Boolean trafficShapingEnabled() {
        return this.trafficShapingEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsTrafficShapingRulesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean defaultRulesEnabled;
        private List<GetWirelessSsidsTrafficShapingRulesItemRule> rules;
        private Boolean trafficShapingEnabled;
        public Builder() {}
        public Builder(GetWirelessSsidsTrafficShapingRulesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRulesEnabled = defaults.defaultRulesEnabled;
    	      this.rules = defaults.rules;
    	      this.trafficShapingEnabled = defaults.trafficShapingEnabled;
        }

        @CustomType.Setter
        public Builder defaultRulesEnabled(Boolean defaultRulesEnabled) {
            if (defaultRulesEnabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsTrafficShapingRulesItem", "defaultRulesEnabled");
            }
            this.defaultRulesEnabled = defaultRulesEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetWirelessSsidsTrafficShapingRulesItemRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsTrafficShapingRulesItem", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetWirelessSsidsTrafficShapingRulesItemRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder trafficShapingEnabled(Boolean trafficShapingEnabled) {
            if (trafficShapingEnabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsTrafficShapingRulesItem", "trafficShapingEnabled");
            }
            this.trafficShapingEnabled = trafficShapingEnabled;
            return this;
        }
        public GetWirelessSsidsTrafficShapingRulesItem build() {
            final var _resultValue = new GetWirelessSsidsTrafficShapingRulesItem();
            _resultValue.defaultRulesEnabled = defaultRulesEnabled;
            _resultValue.rules = rules;
            _resultValue.trafficShapingEnabled = trafficShapingEnabled;
            return _resultValue;
        }
    }
}
