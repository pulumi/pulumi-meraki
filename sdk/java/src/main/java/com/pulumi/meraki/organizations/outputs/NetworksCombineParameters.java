// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworksCombineParameters {
    /**
     * @return A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
     * 
     */
    private @Nullable String enrollmentString;
    /**
     * @return The name of the combined network
     * 
     */
    private @Nullable String name;
    /**
     * @return A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
     * 
     */
    private @Nullable List<String> networkIds;

    private NetworksCombineParameters() {}
    /**
     * @return A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by &#39;-network_type&#39;. If left empty, all exisitng enrollment strings will be deleted.
     * 
     */
    public Optional<String> enrollmentString() {
        return Optional.ofNullable(this.enrollmentString);
    }
    /**
     * @return The name of the combined network
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
     * 
     */
    public List<String> networkIds() {
        return this.networkIds == null ? List.of() : this.networkIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworksCombineParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String enrollmentString;
        private @Nullable String name;
        private @Nullable List<String> networkIds;
        public Builder() {}
        public Builder(NetworksCombineParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enrollmentString = defaults.enrollmentString;
    	      this.name = defaults.name;
    	      this.networkIds = defaults.networkIds;
        }

        @CustomType.Setter
        public Builder enrollmentString(@Nullable String enrollmentString) {

            this.enrollmentString = enrollmentString;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkIds(@Nullable List<String> networkIds) {

            this.networkIds = networkIds;
            return this;
        }
        public Builder networkIds(String... networkIds) {
            return networkIds(List.of(networkIds));
        }
        public NetworksCombineParameters build() {
            final var _resultValue = new NetworksCombineParameters();
            _resultValue.enrollmentString = enrollmentString;
            _resultValue.name = name;
            _resultValue.networkIds = networkIds;
            return _resultValue;
        }
    }
}
