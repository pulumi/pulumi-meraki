// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetWebhooksCallbacksStatusesItemCreatedBy;
import com.pulumi.meraki.organizations.outputs.GetWebhooksCallbacksStatusesItemWebhook;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWebhooksCallbacksStatusesItem {
    /**
     * @return The ID of the callback
     * 
     */
    private String callbackId;
    /**
     * @return Information around who initiated the callback
     * 
     */
    private GetWebhooksCallbacksStatusesItemCreatedBy createdBy;
    /**
     * @return The errors returned by the callback
     * 
     */
    private List<String> errors;
    /**
     * @return The status of the callback
     * 
     */
    private String status;
    /**
     * @return The webhook receiver used by the callback to send results
     * 
     */
    private GetWebhooksCallbacksStatusesItemWebhook webhook;

    private GetWebhooksCallbacksStatusesItem() {}
    /**
     * @return The ID of the callback
     * 
     */
    public String callbackId() {
        return this.callbackId;
    }
    /**
     * @return Information around who initiated the callback
     * 
     */
    public GetWebhooksCallbacksStatusesItemCreatedBy createdBy() {
        return this.createdBy;
    }
    /**
     * @return The errors returned by the callback
     * 
     */
    public List<String> errors() {
        return this.errors;
    }
    /**
     * @return The status of the callback
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The webhook receiver used by the callback to send results
     * 
     */
    public GetWebhooksCallbacksStatusesItemWebhook webhook() {
        return this.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebhooksCallbacksStatusesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String callbackId;
        private GetWebhooksCallbacksStatusesItemCreatedBy createdBy;
        private List<String> errors;
        private String status;
        private GetWebhooksCallbacksStatusesItemWebhook webhook;
        public Builder() {}
        public Builder(GetWebhooksCallbacksStatusesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.callbackId = defaults.callbackId;
    	      this.createdBy = defaults.createdBy;
    	      this.errors = defaults.errors;
    	      this.status = defaults.status;
    	      this.webhook = defaults.webhook;
        }

        @CustomType.Setter
        public Builder callbackId(String callbackId) {
            if (callbackId == null) {
              throw new MissingRequiredPropertyException("GetWebhooksCallbacksStatusesItem", "callbackId");
            }
            this.callbackId = callbackId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(GetWebhooksCallbacksStatusesItemCreatedBy createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetWebhooksCallbacksStatusesItem", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder errors(List<String> errors) {
            if (errors == null) {
              throw new MissingRequiredPropertyException("GetWebhooksCallbacksStatusesItem", "errors");
            }
            this.errors = errors;
            return this;
        }
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetWebhooksCallbacksStatusesItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder webhook(GetWebhooksCallbacksStatusesItemWebhook webhook) {
            if (webhook == null) {
              throw new MissingRequiredPropertyException("GetWebhooksCallbacksStatusesItem", "webhook");
            }
            this.webhook = webhook;
            return this;
        }
        public GetWebhooksCallbacksStatusesItem build() {
            final var _resultValue = new GetWebhooksCallbacksStatusesItem();
            _resultValue.callbackId = callbackId;
            _resultValue.createdBy = createdBy;
            _resultValue.errors = errors;
            _resultValue.status = status;
            _resultValue.webhook = webhook;
            return _resultValue;
        }
    }
}
