// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSensorAlertsProfilesItemConditionThresholdPm25 {
    /**
     * @return Alerting threshold as PM2.5 parts per million.
     * 
     */
    private Integer concentration;
    /**
     * @return Alerting threshold as a qualitative PM2.5 level.
     * 
     */
    private String quality;

    private GetSensorAlertsProfilesItemConditionThresholdPm25() {}
    /**
     * @return Alerting threshold as PM2.5 parts per million.
     * 
     */
    public Integer concentration() {
        return this.concentration;
    }
    /**
     * @return Alerting threshold as a qualitative PM2.5 level.
     * 
     */
    public String quality() {
        return this.quality;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensorAlertsProfilesItemConditionThresholdPm25 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer concentration;
        private String quality;
        public Builder() {}
        public Builder(GetSensorAlertsProfilesItemConditionThresholdPm25 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concentration = defaults.concentration;
    	      this.quality = defaults.quality;
        }

        @CustomType.Setter
        public Builder concentration(Integer concentration) {
            if (concentration == null) {
              throw new MissingRequiredPropertyException("GetSensorAlertsProfilesItemConditionThresholdPm25", "concentration");
            }
            this.concentration = concentration;
            return this;
        }
        @CustomType.Setter
        public Builder quality(String quality) {
            if (quality == null) {
              throw new MissingRequiredPropertyException("GetSensorAlertsProfilesItemConditionThresholdPm25", "quality");
            }
            this.quality = quality;
            return this;
        }
        public GetSensorAlertsProfilesItemConditionThresholdPm25 build() {
            final var _resultValue = new GetSensorAlertsProfilesItemConditionThresholdPm25();
            _resultValue.concentration = concentration;
            _resultValue.quality = quality;
            return _resultValue;
        }
    }
}
