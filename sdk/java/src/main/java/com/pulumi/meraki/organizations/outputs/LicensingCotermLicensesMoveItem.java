// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.organizations.outputs.LicensingCotermLicensesMoveItemMovedLicense;
import com.pulumi.meraki.organizations.outputs.LicensingCotermLicensesMoveItemRemainderLicense;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class LicensingCotermLicensesMoveItem {
    /**
     * @return Newly moved licenses created in the destination organization of the license move operation
     * 
     */
    private @Nullable List<LicensingCotermLicensesMoveItemMovedLicense> movedLicenses;
    /**
     * @return Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
     * 
     */
    private @Nullable List<LicensingCotermLicensesMoveItemRemainderLicense> remainderLicenses;

    private LicensingCotermLicensesMoveItem() {}
    /**
     * @return Newly moved licenses created in the destination organization of the license move operation
     * 
     */
    public List<LicensingCotermLicensesMoveItemMovedLicense> movedLicenses() {
        return this.movedLicenses == null ? List.of() : this.movedLicenses;
    }
    /**
     * @return Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
     * 
     */
    public List<LicensingCotermLicensesMoveItemRemainderLicense> remainderLicenses() {
        return this.remainderLicenses == null ? List.of() : this.remainderLicenses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicensingCotermLicensesMoveItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<LicensingCotermLicensesMoveItemMovedLicense> movedLicenses;
        private @Nullable List<LicensingCotermLicensesMoveItemRemainderLicense> remainderLicenses;
        public Builder() {}
        public Builder(LicensingCotermLicensesMoveItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.movedLicenses = defaults.movedLicenses;
    	      this.remainderLicenses = defaults.remainderLicenses;
        }

        @CustomType.Setter
        public Builder movedLicenses(@Nullable List<LicensingCotermLicensesMoveItemMovedLicense> movedLicenses) {

            this.movedLicenses = movedLicenses;
            return this;
        }
        public Builder movedLicenses(LicensingCotermLicensesMoveItemMovedLicense... movedLicenses) {
            return movedLicenses(List.of(movedLicenses));
        }
        @CustomType.Setter
        public Builder remainderLicenses(@Nullable List<LicensingCotermLicensesMoveItemRemainderLicense> remainderLicenses) {

            this.remainderLicenses = remainderLicenses;
            return this;
        }
        public Builder remainderLicenses(LicensingCotermLicensesMoveItemRemainderLicense... remainderLicenses) {
            return remainderLicenses(List.of(remainderLicenses));
        }
        public LicensingCotermLicensesMoveItem build() {
            final var _resultValue = new LicensingCotermLicensesMoveItem();
            _resultValue.movedLicenses = movedLicenses;
            _resultValue.remainderLicenses = remainderLicenses;
            return _resultValue;
        }
    }
}
