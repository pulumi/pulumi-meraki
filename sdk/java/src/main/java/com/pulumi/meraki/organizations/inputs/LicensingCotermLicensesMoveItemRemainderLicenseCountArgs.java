// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingCotermLicensesMoveItemRemainderLicenseCountArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingCotermLicensesMoveItemRemainderLicenseCountArgs Empty = new LicensingCotermLicensesMoveItemRemainderLicenseCountArgs();

    /**
     * The number of counts the license contains of this model
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return The number of counts the license contains of this model
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * The license model type
     * 
     */
    @Import(name="model")
    private @Nullable Output<String> model;

    /**
     * @return The license model type
     * 
     */
    public Optional<Output<String>> model() {
        return Optional.ofNullable(this.model);
    }

    private LicensingCotermLicensesMoveItemRemainderLicenseCountArgs() {}

    private LicensingCotermLicensesMoveItemRemainderLicenseCountArgs(LicensingCotermLicensesMoveItemRemainderLicenseCountArgs $) {
        this.count = $.count;
        this.model = $.model;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingCotermLicensesMoveItemRemainderLicenseCountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingCotermLicensesMoveItemRemainderLicenseCountArgs $;

        public Builder() {
            $ = new LicensingCotermLicensesMoveItemRemainderLicenseCountArgs();
        }

        public Builder(LicensingCotermLicensesMoveItemRemainderLicenseCountArgs defaults) {
            $ = new LicensingCotermLicensesMoveItemRemainderLicenseCountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The number of counts the license contains of this model
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The number of counts the license contains of this model
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param model The license model type
         * 
         * @return builder
         * 
         */
        public Builder model(@Nullable Output<String> model) {
            $.model = model;
            return this;
        }

        /**
         * @param model The license model type
         * 
         * @return builder
         * 
         */
        public Builder model(String model) {
            return model(Output.of(model));
        }

        public LicensingCotermLicensesMoveItemRemainderLicenseCountArgs build() {
            return $;
        }
    }

}
