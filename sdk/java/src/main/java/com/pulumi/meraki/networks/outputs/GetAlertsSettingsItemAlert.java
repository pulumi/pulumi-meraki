// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetAlertsSettingsItemAlertAlertDestinations;
import com.pulumi.meraki.networks.outputs.GetAlertsSettingsItemAlertFilters;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertsSettingsItemAlert {
    private GetAlertsSettingsItemAlertAlertDestinations alertDestinations;
    private Boolean enabled;
    private GetAlertsSettingsItemAlertFilters filters;
    private String type;

    private GetAlertsSettingsItemAlert() {}
    public GetAlertsSettingsItemAlertAlertDestinations alertDestinations() {
        return this.alertDestinations;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public GetAlertsSettingsItemAlertFilters filters() {
        return this.filters;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsSettingsItemAlert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetAlertsSettingsItemAlertAlertDestinations alertDestinations;
        private Boolean enabled;
        private GetAlertsSettingsItemAlertFilters filters;
        private String type;
        public Builder() {}
        public Builder(GetAlertsSettingsItemAlert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertDestinations = defaults.alertDestinations;
    	      this.enabled = defaults.enabled;
    	      this.filters = defaults.filters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder alertDestinations(GetAlertsSettingsItemAlertAlertDestinations alertDestinations) {
            if (alertDestinations == null) {
              throw new MissingRequiredPropertyException("GetAlertsSettingsItemAlert", "alertDestinations");
            }
            this.alertDestinations = alertDestinations;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetAlertsSettingsItemAlert", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder filters(GetAlertsSettingsItemAlertFilters filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("GetAlertsSettingsItemAlert", "filters");
            }
            this.filters = filters;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAlertsSettingsItemAlert", "type");
            }
            this.type = type;
            return this;
        }
        public GetAlertsSettingsItemAlert build() {
            final var _resultValue = new GetAlertsSettingsItemAlert();
            _resultValue.alertDestinations = alertDestinations;
            _resultValue.enabled = enabled;
            _resultValue.filters = filters;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
