// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.LiveToolsCableResultPairArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LiveToolsCableResultArgs extends com.pulumi.resources.ResourceArgs {

    public static final LiveToolsCableResultArgs Empty = new LiveToolsCableResultArgs();

    /**
     * If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    @Import(name="error")
    private @Nullable Output<String> error;

    /**
     * @return If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    public Optional<Output<String>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Results for each twisted pair within the cable.
     * 
     */
    @Import(name="pairs")
    private @Nullable Output<List<LiveToolsCableResultPairArgs>> pairs;

    /**
     * @return Results for each twisted pair within the cable.
     * 
     */
    public Optional<Output<List<LiveToolsCableResultPairArgs>>> pairs() {
        return Optional.ofNullable(this.pairs);
    }

    /**
     * The port for which the test was performed.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return The port for which the test was performed.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    @Import(name="speedMbps")
    private @Nullable Output<Integer> speedMbps;

    /**
     * @return Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    public Optional<Output<Integer>> speedMbps() {
        return Optional.ofNullable(this.speedMbps);
    }

    /**
     * The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private LiveToolsCableResultArgs() {}

    private LiveToolsCableResultArgs(LiveToolsCableResultArgs $) {
        this.error = $.error;
        this.pairs = $.pairs;
        this.port = $.port;
        this.speedMbps = $.speedMbps;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiveToolsCableResultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiveToolsCableResultArgs $;

        public Builder() {
            $ = new LiveToolsCableResultArgs();
        }

        public Builder(LiveToolsCableResultArgs defaults) {
            $ = new LiveToolsCableResultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param error If an error occurred during the cable test, the error message will be populated here.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable Output<String> error) {
            $.error = error;
            return this;
        }

        /**
         * @param error If an error occurred during the cable test, the error message will be populated here.
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            return error(Output.of(error));
        }

        /**
         * @param pairs Results for each twisted pair within the cable.
         * 
         * @return builder
         * 
         */
        public Builder pairs(@Nullable Output<List<LiveToolsCableResultPairArgs>> pairs) {
            $.pairs = pairs;
            return this;
        }

        /**
         * @param pairs Results for each twisted pair within the cable.
         * 
         * @return builder
         * 
         */
        public Builder pairs(List<LiveToolsCableResultPairArgs> pairs) {
            return pairs(Output.of(pairs));
        }

        /**
         * @param pairs Results for each twisted pair within the cable.
         * 
         * @return builder
         * 
         */
        public Builder pairs(LiveToolsCableResultPairArgs... pairs) {
            return pairs(List.of(pairs));
        }

        /**
         * @param port The port for which the test was performed.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port for which the test was performed.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param speedMbps Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
         * 
         * @return builder
         * 
         */
        public Builder speedMbps(@Nullable Output<Integer> speedMbps) {
            $.speedMbps = speedMbps;
            return this;
        }

        /**
         * @param speedMbps Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
         * 
         * @return builder
         * 
         */
        public Builder speedMbps(Integer speedMbps) {
            return speedMbps(Output.of(speedMbps));
        }

        /**
         * @param status The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public LiveToolsCableResultArgs build() {
            return $;
        }
    }

}
