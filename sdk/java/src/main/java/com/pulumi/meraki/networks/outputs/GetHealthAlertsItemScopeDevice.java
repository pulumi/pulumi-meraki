// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetHealthAlertsItemScopeDeviceClient;
import com.pulumi.meraki.networks.outputs.GetHealthAlertsItemScopeDeviceLldp;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHealthAlertsItemScopeDevice {
    /**
     * @return Clients related to the device
     * 
     */
    private List<GetHealthAlertsItemScopeDeviceClient> clients;
    /**
     * @return Lldp information
     * 
     */
    private GetHealthAlertsItemScopeDeviceLldp lldp;
    /**
     * @return The mac address of the device
     * 
     */
    private String mac;
    /**
     * @return Name of the device
     * 
     */
    private String name;
    /**
     * @return Product type of the device
     * 
     */
    private String productType;
    /**
     * @return Serial number of the device
     * 
     */
    private String serial;
    /**
     * @return URL to the device
     * 
     */
    private String url;

    private GetHealthAlertsItemScopeDevice() {}
    /**
     * @return Clients related to the device
     * 
     */
    public List<GetHealthAlertsItemScopeDeviceClient> clients() {
        return this.clients;
    }
    /**
     * @return Lldp information
     * 
     */
    public GetHealthAlertsItemScopeDeviceLldp lldp() {
        return this.lldp;
    }
    /**
     * @return The mac address of the device
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Name of the device
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Product type of the device
     * 
     */
    public String productType() {
        return this.productType;
    }
    /**
     * @return Serial number of the device
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return URL to the device
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHealthAlertsItemScopeDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetHealthAlertsItemScopeDeviceClient> clients;
        private GetHealthAlertsItemScopeDeviceLldp lldp;
        private String mac;
        private String name;
        private String productType;
        private String serial;
        private String url;
        public Builder() {}
        public Builder(GetHealthAlertsItemScopeDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clients = defaults.clients;
    	      this.lldp = defaults.lldp;
    	      this.mac = defaults.mac;
    	      this.name = defaults.name;
    	      this.productType = defaults.productType;
    	      this.serial = defaults.serial;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder clients(List<GetHealthAlertsItemScopeDeviceClient> clients) {
            if (clients == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "clients");
            }
            this.clients = clients;
            return this;
        }
        public Builder clients(GetHealthAlertsItemScopeDeviceClient... clients) {
            return clients(List.of(clients));
        }
        @CustomType.Setter
        public Builder lldp(GetHealthAlertsItemScopeDeviceLldp lldp) {
            if (lldp == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "lldp");
            }
            this.lldp = lldp;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder productType(String productType) {
            if (productType == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "productType");
            }
            this.productType = productType;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetHealthAlertsItemScopeDevice", "url");
            }
            this.url = url;
            return this;
        }
        public GetHealthAlertsItemScopeDevice build() {
            final var _resultValue = new GetHealthAlertsItemScopeDevice();
            _resultValue.clients = clients;
            _resultValue.lldp = lldp;
            _resultValue.mac = mac;
            _resultValue.name = name;
            _resultValue.productType = productType;
            _resultValue.serial = serial;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
