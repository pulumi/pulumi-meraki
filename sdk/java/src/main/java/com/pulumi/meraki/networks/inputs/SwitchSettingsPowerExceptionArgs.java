// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchSettingsPowerExceptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchSettingsPowerExceptionArgs Empty = new SwitchSettingsPowerExceptionArgs();

    /**
     * Per switch exception (combined, redundant, useNetworkSetting)
     * 
     */
    @Import(name="powerType")
    private @Nullable Output<String> powerType;

    /**
     * @return Per switch exception (combined, redundant, useNetworkSetting)
     * 
     */
    public Optional<Output<String>> powerType() {
        return Optional.ofNullable(this.powerType);
    }

    /**
     * Serial number of the switch
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return Serial number of the switch
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    private SwitchSettingsPowerExceptionArgs() {}

    private SwitchSettingsPowerExceptionArgs(SwitchSettingsPowerExceptionArgs $) {
        this.powerType = $.powerType;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchSettingsPowerExceptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchSettingsPowerExceptionArgs $;

        public Builder() {
            $ = new SwitchSettingsPowerExceptionArgs();
        }

        public Builder(SwitchSettingsPowerExceptionArgs defaults) {
            $ = new SwitchSettingsPowerExceptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param powerType Per switch exception (combined, redundant, useNetworkSetting)
         * 
         * @return builder
         * 
         */
        public Builder powerType(@Nullable Output<String> powerType) {
            $.powerType = powerType;
            return this;
        }

        /**
         * @param powerType Per switch exception (combined, redundant, useNetworkSetting)
         * 
         * @return builder
         * 
         */
        public Builder powerType(String powerType) {
            return powerType(Output.of(powerType));
        }

        /**
         * @param serial Serial number of the switch
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial Serial number of the switch
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public SwitchSettingsPowerExceptionArgs build() {
            return $;
        }
    }

}
