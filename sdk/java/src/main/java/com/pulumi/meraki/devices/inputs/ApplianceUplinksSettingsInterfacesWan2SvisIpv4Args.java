// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args Empty = new ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args();

    /**
     * IP address and subnet mask when in static mode.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return IP address and subnet mask when in static mode.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The assignment mode for this SVI. Applies only when PPPoE is disabled.
     * 
     */
    @Import(name="assignmentMode")
    private @Nullable Output<String> assignmentMode;

    /**
     * @return The assignment mode for this SVI. Applies only when PPPoE is disabled.
     * 
     */
    public Optional<Output<String>> assignmentMode() {
        return Optional.ofNullable(this.assignmentMode);
    }

    /**
     * Gateway IP address when in static mode.
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return Gateway IP address when in static mode.
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * The nameserver settings for this SVI.
     * 
     */
    @Import(name="nameservers")
    private @Nullable Output<ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs> nameservers;

    /**
     * @return The nameserver settings for this SVI.
     * 
     */
    public Optional<Output<ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs>> nameservers() {
        return Optional.ofNullable(this.nameservers);
    }

    private ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args() {}

    private ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args $) {
        this.address = $.address;
        this.assignmentMode = $.assignmentMode;
        this.gateway = $.gateway;
        this.nameservers = $.nameservers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args $;

        public Builder() {
            $ = new ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args();
        }

        public Builder(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args defaults) {
            $ = new ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param address IP address and subnet mask when in static mode.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address IP address and subnet mask when in static mode.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param assignmentMode The assignment mode for this SVI. Applies only when PPPoE is disabled.
         * 
         * @return builder
         * 
         */
        public Builder assignmentMode(@Nullable Output<String> assignmentMode) {
            $.assignmentMode = assignmentMode;
            return this;
        }

        /**
         * @param assignmentMode The assignment mode for this SVI. Applies only when PPPoE is disabled.
         * 
         * @return builder
         * 
         */
        public Builder assignmentMode(String assignmentMode) {
            return assignmentMode(Output.of(assignmentMode));
        }

        /**
         * @param gateway Gateway IP address when in static mode.
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Gateway IP address when in static mode.
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param nameservers The nameserver settings for this SVI.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(@Nullable Output<ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs> nameservers) {
            $.nameservers = nameservers;
            return this;
        }

        /**
         * @param nameservers The nameserver settings for this SVI.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs nameservers) {
            return nameservers(Output.of(nameservers));
        }

        public ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args build() {
            return $;
        }
    }

}
