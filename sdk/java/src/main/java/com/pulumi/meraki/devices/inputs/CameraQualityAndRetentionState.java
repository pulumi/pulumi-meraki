// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CameraQualityAndRetentionState extends com.pulumi.resources.ResourceArgs {

    public static final CameraQualityAndRetentionState Empty = new CameraQualityAndRetentionState();

    /**
     * Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
     * 
     */
    @Import(name="audioRecordingEnabled")
    private @Nullable Output<Boolean> audioRecordingEnabled;

    /**
     * @return Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
     * 
     */
    public Optional<Output<Boolean>> audioRecordingEnabled() {
        return Optional.ofNullable(this.audioRecordingEnabled);
    }

    /**
     * Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
     * 
     */
    @Import(name="motionBasedRetentionEnabled")
    private @Nullable Output<Boolean> motionBasedRetentionEnabled;

    /**
     * @return Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
     * 
     */
    public Optional<Output<Boolean>> motionBasedRetentionEnabled() {
        return Optional.ofNullable(this.motionBasedRetentionEnabled);
    }

    /**
     * The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
     * 
     */
    @Import(name="motionDetectorVersion")
    private @Nullable Output<Integer> motionDetectorVersion;

    /**
     * @return The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
     * 
     */
    public Optional<Output<Integer>> motionDetectorVersion() {
        return Optional.ofNullable(this.motionDetectorVersion);
    }

    /**
     * The ID of a quality and retention profile to assign to the camera. The profile&#39;s settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return The ID of a quality and retention profile to assign to the camera. The profile&#39;s settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * Quality of the camera. Can be one of &#39;Standard&#39;, &#39;High&#39; or &#39;Enhanced&#39;. Not all qualities are supported by every camera model.
     * 
     */
    @Import(name="quality")
    private @Nullable Output<String> quality;

    /**
     * @return Quality of the camera. Can be one of &#39;Standard&#39;, &#39;High&#39; or &#39;Enhanced&#39;. Not all qualities are supported by every camera model.
     * 
     */
    public Optional<Output<String>> quality() {
        return Optional.ofNullable(this.quality);
    }

    /**
     * Resolution of the camera. Can be one of &#39;1280x720&#39;, &#39;1920x1080&#39;, &#39;1080x1080&#39;, &#39;2112x2112&#39;, &#39;2880x2880&#39;, &#39;2688x1512&#39; or &#39;3840x2160&#39;.Not all resolutions are supported by every camera model.
     * 
     */
    @Import(name="resolution")
    private @Nullable Output<String> resolution;

    /**
     * @return Resolution of the camera. Can be one of &#39;1280x720&#39;, &#39;1920x1080&#39;, &#39;1080x1080&#39;, &#39;2112x2112&#39;, &#39;2880x2880&#39;, &#39;2688x1512&#39; or &#39;3840x2160&#39;.Not all resolutions are supported by every camera model.
     * 
     */
    public Optional<Output<String>> resolution() {
        return Optional.ofNullable(this.resolution);
    }

    /**
     * Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
     * 
     */
    @Import(name="restrictedBandwidthModeEnabled")
    private @Nullable Output<Boolean> restrictedBandwidthModeEnabled;

    /**
     * @return Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
     * 
     */
    public Optional<Output<Boolean>> restrictedBandwidthModeEnabled() {
        return Optional.ofNullable(this.restrictedBandwidthModeEnabled);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    private CameraQualityAndRetentionState() {}

    private CameraQualityAndRetentionState(CameraQualityAndRetentionState $) {
        this.audioRecordingEnabled = $.audioRecordingEnabled;
        this.motionBasedRetentionEnabled = $.motionBasedRetentionEnabled;
        this.motionDetectorVersion = $.motionDetectorVersion;
        this.profileId = $.profileId;
        this.quality = $.quality;
        this.resolution = $.resolution;
        this.restrictedBandwidthModeEnabled = $.restrictedBandwidthModeEnabled;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CameraQualityAndRetentionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CameraQualityAndRetentionState $;

        public Builder() {
            $ = new CameraQualityAndRetentionState();
        }

        public Builder(CameraQualityAndRetentionState defaults) {
            $ = new CameraQualityAndRetentionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param audioRecordingEnabled Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
         * 
         * @return builder
         * 
         */
        public Builder audioRecordingEnabled(@Nullable Output<Boolean> audioRecordingEnabled) {
            $.audioRecordingEnabled = audioRecordingEnabled;
            return this;
        }

        /**
         * @param audioRecordingEnabled Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
         * 
         * @return builder
         * 
         */
        public Builder audioRecordingEnabled(Boolean audioRecordingEnabled) {
            return audioRecordingEnabled(Output.of(audioRecordingEnabled));
        }

        /**
         * @param motionBasedRetentionEnabled Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
         * 
         * @return builder
         * 
         */
        public Builder motionBasedRetentionEnabled(@Nullable Output<Boolean> motionBasedRetentionEnabled) {
            $.motionBasedRetentionEnabled = motionBasedRetentionEnabled;
            return this;
        }

        /**
         * @param motionBasedRetentionEnabled Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
         * 
         * @return builder
         * 
         */
        public Builder motionBasedRetentionEnabled(Boolean motionBasedRetentionEnabled) {
            return motionBasedRetentionEnabled(Output.of(motionBasedRetentionEnabled));
        }

        /**
         * @param motionDetectorVersion The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
         * 
         * @return builder
         * 
         */
        public Builder motionDetectorVersion(@Nullable Output<Integer> motionDetectorVersion) {
            $.motionDetectorVersion = motionDetectorVersion;
            return this;
        }

        /**
         * @param motionDetectorVersion The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
         * 
         * @return builder
         * 
         */
        public Builder motionDetectorVersion(Integer motionDetectorVersion) {
            return motionDetectorVersion(Output.of(motionDetectorVersion));
        }

        /**
         * @param profileId The ID of a quality and retention profile to assign to the camera. The profile&#39;s settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId The ID of a quality and retention profile to assign to the camera. The profile&#39;s settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param quality Quality of the camera. Can be one of &#39;Standard&#39;, &#39;High&#39; or &#39;Enhanced&#39;. Not all qualities are supported by every camera model.
         * 
         * @return builder
         * 
         */
        public Builder quality(@Nullable Output<String> quality) {
            $.quality = quality;
            return this;
        }

        /**
         * @param quality Quality of the camera. Can be one of &#39;Standard&#39;, &#39;High&#39; or &#39;Enhanced&#39;. Not all qualities are supported by every camera model.
         * 
         * @return builder
         * 
         */
        public Builder quality(String quality) {
            return quality(Output.of(quality));
        }

        /**
         * @param resolution Resolution of the camera. Can be one of &#39;1280x720&#39;, &#39;1920x1080&#39;, &#39;1080x1080&#39;, &#39;2112x2112&#39;, &#39;2880x2880&#39;, &#39;2688x1512&#39; or &#39;3840x2160&#39;.Not all resolutions are supported by every camera model.
         * 
         * @return builder
         * 
         */
        public Builder resolution(@Nullable Output<String> resolution) {
            $.resolution = resolution;
            return this;
        }

        /**
         * @param resolution Resolution of the camera. Can be one of &#39;1280x720&#39;, &#39;1920x1080&#39;, &#39;1080x1080&#39;, &#39;2112x2112&#39;, &#39;2880x2880&#39;, &#39;2688x1512&#39; or &#39;3840x2160&#39;.Not all resolutions are supported by every camera model.
         * 
         * @return builder
         * 
         */
        public Builder resolution(String resolution) {
            return resolution(Output.of(resolution));
        }

        /**
         * @param restrictedBandwidthModeEnabled Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
         * 
         * @return builder
         * 
         */
        public Builder restrictedBandwidthModeEnabled(@Nullable Output<Boolean> restrictedBandwidthModeEnabled) {
            $.restrictedBandwidthModeEnabled = restrictedBandwidthModeEnabled;
            return this;
        }

        /**
         * @param restrictedBandwidthModeEnabled Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
         * 
         * @return builder
         * 
         */
        public Builder restrictedBandwidthModeEnabled(Boolean restrictedBandwidthModeEnabled) {
            return restrictedBandwidthModeEnabled(Output.of(restrictedBandwidthModeEnabled));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public CameraQualityAndRetentionState build() {
            return $;
        }
    }

}
