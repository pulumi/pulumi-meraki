// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetManagementInterfaceItemDdnsHostnames;
import com.pulumi.meraki.devices.outputs.GetManagementInterfaceItemWan1;
import com.pulumi.meraki.devices.outputs.GetManagementInterfaceItemWan2;
import java.util.Objects;

@CustomType
public final class GetManagementInterfaceItem {
    /**
     * @return Dynamic DNS hostnames.
     * 
     */
    private GetManagementInterfaceItemDdnsHostnames ddnsHostnames;
    /**
     * @return WAN 1 settings
     * 
     */
    private GetManagementInterfaceItemWan1 wan1;
    /**
     * @return WAN 2 settings (only for MX devices)
     * 
     */
    private GetManagementInterfaceItemWan2 wan2;

    private GetManagementInterfaceItem() {}
    /**
     * @return Dynamic DNS hostnames.
     * 
     */
    public GetManagementInterfaceItemDdnsHostnames ddnsHostnames() {
        return this.ddnsHostnames;
    }
    /**
     * @return WAN 1 settings
     * 
     */
    public GetManagementInterfaceItemWan1 wan1() {
        return this.wan1;
    }
    /**
     * @return WAN 2 settings (only for MX devices)
     * 
     */
    public GetManagementInterfaceItemWan2 wan2() {
        return this.wan2;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementInterfaceItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetManagementInterfaceItemDdnsHostnames ddnsHostnames;
        private GetManagementInterfaceItemWan1 wan1;
        private GetManagementInterfaceItemWan2 wan2;
        public Builder() {}
        public Builder(GetManagementInterfaceItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ddnsHostnames = defaults.ddnsHostnames;
    	      this.wan1 = defaults.wan1;
    	      this.wan2 = defaults.wan2;
        }

        @CustomType.Setter
        public Builder ddnsHostnames(GetManagementInterfaceItemDdnsHostnames ddnsHostnames) {
            if (ddnsHostnames == null) {
              throw new MissingRequiredPropertyException("GetManagementInterfaceItem", "ddnsHostnames");
            }
            this.ddnsHostnames = ddnsHostnames;
            return this;
        }
        @CustomType.Setter
        public Builder wan1(GetManagementInterfaceItemWan1 wan1) {
            if (wan1 == null) {
              throw new MissingRequiredPropertyException("GetManagementInterfaceItem", "wan1");
            }
            this.wan1 = wan1;
            return this;
        }
        @CustomType.Setter
        public Builder wan2(GetManagementInterfaceItemWan2 wan2) {
            if (wan2 == null) {
              throw new MissingRequiredPropertyException("GetManagementInterfaceItem", "wan2");
            }
            this.wan2 = wan2;
            return this;
        }
        public GetManagementInterfaceItem build() {
            final var _resultValue = new GetManagementInterfaceItem();
            _resultValue.ddnsHostnames = ddnsHostnames;
            _resultValue.wan1 = wan1;
            _resultValue.wan2 = wan2;
            return _resultValue;
        }
    }
}
