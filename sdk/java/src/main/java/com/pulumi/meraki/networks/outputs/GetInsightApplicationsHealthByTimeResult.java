// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetInsightApplicationsHealthByTimeItem;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInsightApplicationsHealthByTimeResult {
    /**
     * @return applicationId path parameter. Application ID
     * 
     */
    private String applicationId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Array of ResponseInsightGetNetworkInsightApplicationHealthByTime
     * 
     */
    private List<GetInsightApplicationsHealthByTimeItem> items;
    /**
     * @return networkId path parameter. Network ID
     * 
     */
    private String networkId;
    /**
     * @return resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     * 
     */
    private @Nullable Integer resolution;
    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     * 
     */
    private @Nullable String t0;
    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    private @Nullable String t1;
    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     * 
     */
    private @Nullable Double timespan;

    private GetInsightApplicationsHealthByTimeResult() {}
    /**
     * @return applicationId path parameter. Application ID
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Array of ResponseInsightGetNetworkInsightApplicationHealthByTime
     * 
     */
    public List<GetInsightApplicationsHealthByTimeItem> items() {
        return this.items;
    }
    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return resolution query parameter. The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     * 
     */
    public Optional<Integer> resolution() {
        return Optional.ofNullable(this.resolution);
    }
    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     * 
     */
    public Optional<String> t0() {
        return Optional.ofNullable(this.t0);
    }
    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    public Optional<String> t1() {
        return Optional.ofNullable(this.t1);
    }
    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     * 
     */
    public Optional<Double> timespan() {
        return Optional.ofNullable(this.timespan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInsightApplicationsHealthByTimeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String id;
        private List<GetInsightApplicationsHealthByTimeItem> items;
        private String networkId;
        private @Nullable Integer resolution;
        private @Nullable String t0;
        private @Nullable String t1;
        private @Nullable Double timespan;
        public Builder() {}
        public Builder(GetInsightApplicationsHealthByTimeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.networkId = defaults.networkId;
    	      this.resolution = defaults.resolution;
    	      this.t0 = defaults.t0;
    	      this.t1 = defaults.t1;
    	      this.timespan = defaults.timespan;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetInsightApplicationsHealthByTimeResult", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInsightApplicationsHealthByTimeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetInsightApplicationsHealthByTimeItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetInsightApplicationsHealthByTimeResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetInsightApplicationsHealthByTimeItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetInsightApplicationsHealthByTimeResult", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(@Nullable Integer resolution) {

            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder t0(@Nullable String t0) {

            this.t0 = t0;
            return this;
        }
        @CustomType.Setter
        public Builder t1(@Nullable String t1) {

            this.t1 = t1;
            return this;
        }
        @CustomType.Setter
        public Builder timespan(@Nullable Double timespan) {

            this.timespan = timespan;
            return this;
        }
        public GetInsightApplicationsHealthByTimeResult build() {
            final var _resultValue = new GetInsightApplicationsHealthByTimeResult();
            _resultValue.applicationId = applicationId;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.networkId = networkId;
            _resultValue.resolution = resolution;
            _resultValue.t0 = t0;
            _resultValue.t1 = t1;
            _resultValue.timespan = timespan;
            return _resultValue;
        }
    }
}
