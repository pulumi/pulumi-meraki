// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule {
    /**
     * @return The policy applied to matching traffic. Must be &#39;deny&#39;.
     * 
     */
    private String policy;
    /**
     * @return Type of the L7 Rule. Must be &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39; or &#39;ipRange&#39;
     * 
     */
    private String type;
    /**
     * @return The &#39;value&#39; of what you want to block. If &#39;type&#39; is &#39;host&#39;, &#39;port&#39; or &#39;ipRange&#39;, &#39;value&#39; must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If &#39;type&#39; is &#39;application&#39; or &#39;applicationCategory&#39;, then &#39;value&#39; must be an object with an ID for the application.
     * 
     */
    private String value;

    private GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule() {}
    /**
     * @return The policy applied to matching traffic. Must be &#39;deny&#39;.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return Type of the L7 Rule. Must be &#39;application&#39;, &#39;applicationCategory&#39;, &#39;host&#39;, &#39;port&#39; or &#39;ipRange&#39;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The &#39;value&#39; of what you want to block. If &#39;type&#39; is &#39;host&#39;, &#39;port&#39; or &#39;ipRange&#39;, &#39;value&#39; must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If &#39;type&#39; is &#39;application&#39; or &#39;applicationCategory&#39;, then &#39;value&#39; must be an object with an ID for the application.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String policy;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policy = defaults.policy;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule", "value");
            }
            this.value = value;
            return this;
        }
        public GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule build() {
            final var _resultValue = new GetGroupPoliciesItemFirewallAndTrafficShapingL7FirewallRule();
            _resultValue.policy = policy;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
