// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemAggregation;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemNetwork;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemPort;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesEthernetStatusesItemPower;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWirelessDevicesEthernetStatusesItem {
    /**
     * @return Aggregation details object
     * 
     */
    private GetWirelessDevicesEthernetStatusesItemAggregation aggregation;
    /**
     * @return The name of the AP
     * 
     */
    private String name;
    /**
     * @return Network details object
     * 
     */
    private GetWirelessDevicesEthernetStatusesItemNetwork network;
    /**
     * @return List of port details
     * 
     */
    private List<GetWirelessDevicesEthernetStatusesItemPort> ports;
    /**
     * @return Power details object
     * 
     */
    private GetWirelessDevicesEthernetStatusesItemPower power;
    /**
     * @return The serial number of the AP
     * 
     */
    private String serial;

    private GetWirelessDevicesEthernetStatusesItem() {}
    /**
     * @return Aggregation details object
     * 
     */
    public GetWirelessDevicesEthernetStatusesItemAggregation aggregation() {
        return this.aggregation;
    }
    /**
     * @return The name of the AP
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network details object
     * 
     */
    public GetWirelessDevicesEthernetStatusesItemNetwork network() {
        return this.network;
    }
    /**
     * @return List of port details
     * 
     */
    public List<GetWirelessDevicesEthernetStatusesItemPort> ports() {
        return this.ports;
    }
    /**
     * @return Power details object
     * 
     */
    public GetWirelessDevicesEthernetStatusesItemPower power() {
        return this.power;
    }
    /**
     * @return The serial number of the AP
     * 
     */
    public String serial() {
        return this.serial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessDevicesEthernetStatusesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWirelessDevicesEthernetStatusesItemAggregation aggregation;
        private String name;
        private GetWirelessDevicesEthernetStatusesItemNetwork network;
        private List<GetWirelessDevicesEthernetStatusesItemPort> ports;
        private GetWirelessDevicesEthernetStatusesItemPower power;
        private String serial;
        public Builder() {}
        public Builder(GetWirelessDevicesEthernetStatusesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.ports = defaults.ports;
    	      this.power = defaults.power;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder aggregation(GetWirelessDevicesEthernetStatusesItemAggregation aggregation) {
            if (aggregation == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "aggregation");
            }
            this.aggregation = aggregation;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(GetWirelessDevicesEthernetStatusesItemNetwork network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder ports(List<GetWirelessDevicesEthernetStatusesItemPort> ports) {
            if (ports == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "ports");
            }
            this.ports = ports;
            return this;
        }
        public Builder ports(GetWirelessDevicesEthernetStatusesItemPort... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder power(GetWirelessDevicesEthernetStatusesItemPower power) {
            if (power == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "power");
            }
            this.power = power;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesEthernetStatusesItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        public GetWirelessDevicesEthernetStatusesItem build() {
            final var _resultValue = new GetWirelessDevicesEthernetStatusesItem();
            _resultValue.aggregation = aggregation;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.ports = ports;
            _resultValue.power = power;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
