// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessRfProfilesItemFiveGhzSettings {
    /**
     * @return Sets channel width (MHz) for 5Ghz band. Can be one of &#39;auto&#39;, &#39;20&#39;, &#39;40&#39; or &#39;80&#39;. Defaults to auto.
     * 
     */
    private String channelWidth;
    /**
     * @return Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    private Integer maxPower;
    /**
     * @return Sets min bitrate (Mbps) of 5Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    private Integer minBitrate;
    /**
     * @return Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    private Integer minPower;
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    private Integer rxsop;

    private GetWirelessRfProfilesItemFiveGhzSettings() {}
    /**
     * @return Sets channel width (MHz) for 5Ghz band. Can be one of &#39;auto&#39;, &#39;20&#39;, &#39;40&#39; or &#39;80&#39;. Defaults to auto.
     * 
     */
    public String channelWidth() {
        return this.channelWidth;
    }
    /**
     * @return Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    public Integer maxPower() {
        return this.maxPower;
    }
    /**
     * @return Sets min bitrate (Mbps) of 5Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    public Integer minBitrate() {
        return this.minBitrate;
    }
    /**
     * @return Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    public Integer minPower() {
        return this.minPower;
    }
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    public Integer rxsop() {
        return this.rxsop;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessRfProfilesItemFiveGhzSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String channelWidth;
        private Integer maxPower;
        private Integer minBitrate;
        private Integer minPower;
        private Integer rxsop;
        public Builder() {}
        public Builder(GetWirelessRfProfilesItemFiveGhzSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelWidth = defaults.channelWidth;
    	      this.maxPower = defaults.maxPower;
    	      this.minBitrate = defaults.minBitrate;
    	      this.minPower = defaults.minPower;
    	      this.rxsop = defaults.rxsop;
        }

        @CustomType.Setter
        public Builder channelWidth(String channelWidth) {
            if (channelWidth == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemFiveGhzSettings", "channelWidth");
            }
            this.channelWidth = channelWidth;
            return this;
        }
        @CustomType.Setter
        public Builder maxPower(Integer maxPower) {
            if (maxPower == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemFiveGhzSettings", "maxPower");
            }
            this.maxPower = maxPower;
            return this;
        }
        @CustomType.Setter
        public Builder minBitrate(Integer minBitrate) {
            if (minBitrate == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemFiveGhzSettings", "minBitrate");
            }
            this.minBitrate = minBitrate;
            return this;
        }
        @CustomType.Setter
        public Builder minPower(Integer minPower) {
            if (minPower == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemFiveGhzSettings", "minPower");
            }
            this.minPower = minPower;
            return this;
        }
        @CustomType.Setter
        public Builder rxsop(Integer rxsop) {
            if (rxsop == null) {
              throw new MissingRequiredPropertyException("GetWirelessRfProfilesItemFiveGhzSettings", "rxsop");
            }
            this.rxsop = rxsop;
            return this;
        }
        public GetWirelessRfProfilesItemFiveGhzSettings build() {
            final var _resultValue = new GetWirelessRfProfilesItemFiveGhzSettings();
            _resultValue.channelWidth = channelWidth;
            _resultValue.maxPower = maxPower;
            _resultValue.minBitrate = minBitrate;
            _resultValue.minPower = minPower;
            _resultValue.rxsop = rxsop;
            return _resultValue;
        }
    }
}
