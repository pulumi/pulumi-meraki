// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.administered.outputs.GetLicensingSubscriptionSubscriptionsItemCountsSeats;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetLicensingSubscriptionSubscriptionsItemCounts {
    /**
     * @return Number of networks bound to this subscription
     * 
     */
    private Integer networks;
    /**
     * @return Seat distribution
     * 
     */
    private GetLicensingSubscriptionSubscriptionsItemCountsSeats seats;

    private GetLicensingSubscriptionSubscriptionsItemCounts() {}
    /**
     * @return Number of networks bound to this subscription
     * 
     */
    public Integer networks() {
        return this.networks;
    }
    /**
     * @return Seat distribution
     * 
     */
    public GetLicensingSubscriptionSubscriptionsItemCountsSeats seats() {
        return this.seats;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicensingSubscriptionSubscriptionsItemCounts defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer networks;
        private GetLicensingSubscriptionSubscriptionsItemCountsSeats seats;
        public Builder() {}
        public Builder(GetLicensingSubscriptionSubscriptionsItemCounts defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.networks = defaults.networks;
    	      this.seats = defaults.seats;
        }

        @CustomType.Setter
        public Builder networks(Integer networks) {
            if (networks == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItemCounts", "networks");
            }
            this.networks = networks;
            return this;
        }
        @CustomType.Setter
        public Builder seats(GetLicensingSubscriptionSubscriptionsItemCountsSeats seats) {
            if (seats == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItemCounts", "seats");
            }
            this.seats = seats;
            return this;
        }
        public GetLicensingSubscriptionSubscriptionsItemCounts build() {
            final var _resultValue = new GetLicensingSubscriptionSubscriptionsItemCounts();
            _resultValue.networks = networks;
            _resultValue.seats = seats;
            return _resultValue;
        }
    }
}
