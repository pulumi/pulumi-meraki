// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApiRequestsItem {
    /**
     * @return Database ID for the admin user who made the API request.
     * 
     */
    private String adminId;
    /**
     * @return The host which the API request was directed at.
     * 
     */
    private String host;
    /**
     * @return HTTP method used in the API request.
     * 
     */
    private String method;
    /**
     * @return Operation ID for the endpoint.
     * 
     */
    private String operationId;
    /**
     * @return The API request path.
     * 
     */
    private String path;
    /**
     * @return The query string sent with the API request.
     * 
     */
    private String queryString;
    /**
     * @return API request response code.
     * 
     */
    private Integer responseCode;
    /**
     * @return Public IP address from which the API request was made.
     * 
     */
    private String sourceIp;
    /**
     * @return Timestamp, in iso8601 format, indicating when the API request was made.
     * 
     */
    private String ts;
    /**
     * @return The API request user agent.
     * 
     */
    private String userAgent;
    /**
     * @return API version of the endpoint.
     * 
     */
    private Integer version;

    private GetApiRequestsItem() {}
    /**
     * @return Database ID for the admin user who made the API request.
     * 
     */
    public String adminId() {
        return this.adminId;
    }
    /**
     * @return The host which the API request was directed at.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return HTTP method used in the API request.
     * 
     */
    public String method() {
        return this.method;
    }
    /**
     * @return Operation ID for the endpoint.
     * 
     */
    public String operationId() {
        return this.operationId;
    }
    /**
     * @return The API request path.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The query string sent with the API request.
     * 
     */
    public String queryString() {
        return this.queryString;
    }
    /**
     * @return API request response code.
     * 
     */
    public Integer responseCode() {
        return this.responseCode;
    }
    /**
     * @return Public IP address from which the API request was made.
     * 
     */
    public String sourceIp() {
        return this.sourceIp;
    }
    /**
     * @return Timestamp, in iso8601 format, indicating when the API request was made.
     * 
     */
    public String ts() {
        return this.ts;
    }
    /**
     * @return The API request user agent.
     * 
     */
    public String userAgent() {
        return this.userAgent;
    }
    /**
     * @return API version of the endpoint.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiRequestsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminId;
        private String host;
        private String method;
        private String operationId;
        private String path;
        private String queryString;
        private Integer responseCode;
        private String sourceIp;
        private String ts;
        private String userAgent;
        private Integer version;
        public Builder() {}
        public Builder(GetApiRequestsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminId = defaults.adminId;
    	      this.host = defaults.host;
    	      this.method = defaults.method;
    	      this.operationId = defaults.operationId;
    	      this.path = defaults.path;
    	      this.queryString = defaults.queryString;
    	      this.responseCode = defaults.responseCode;
    	      this.sourceIp = defaults.sourceIp;
    	      this.ts = defaults.ts;
    	      this.userAgent = defaults.userAgent;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder adminId(String adminId) {
            if (adminId == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "adminId");
            }
            this.adminId = adminId;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            if (method == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "method");
            }
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder operationId(String operationId) {
            if (operationId == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "operationId");
            }
            this.operationId = operationId;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder queryString(String queryString) {
            if (queryString == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "queryString");
            }
            this.queryString = queryString;
            return this;
        }
        @CustomType.Setter
        public Builder responseCode(Integer responseCode) {
            if (responseCode == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "responseCode");
            }
            this.responseCode = responseCode;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(String sourceIp) {
            if (sourceIp == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "sourceIp");
            }
            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder ts(String ts) {
            if (ts == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "ts");
            }
            this.ts = ts;
            return this;
        }
        @CustomType.Setter
        public Builder userAgent(String userAgent) {
            if (userAgent == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "userAgent");
            }
            this.userAgent = userAgent;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetApiRequestsItem", "version");
            }
            this.version = version;
            return this;
        }
        public GetApiRequestsItem build() {
            final var _resultValue = new GetApiRequestsItem();
            _resultValue.adminId = adminId;
            _resultValue.host = host;
            _resultValue.method = method;
            _resultValue.operationId = operationId;
            _resultValue.path = path;
            _resultValue.queryString = queryString;
            _resultValue.responseCode = responseCode;
            _resultValue.sourceIp = sourceIp;
            _resultValue.ts = ts;
            _resultValue.userAgent = userAgent;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
