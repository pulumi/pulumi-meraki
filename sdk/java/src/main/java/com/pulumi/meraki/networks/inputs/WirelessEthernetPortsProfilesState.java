// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.WirelessEthernetPortsProfilesPortArgs;
import com.pulumi.meraki.networks.inputs.WirelessEthernetPortsProfilesUsbPortArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessEthernetPortsProfilesState extends com.pulumi.resources.ResourceArgs {

    public static final WirelessEthernetPortsProfilesState Empty = new WirelessEthernetPortsProfilesState();

    /**
     * Is default profile
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return Is default profile
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * AP port profile name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return AP port profile name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * Ports config
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<WirelessEthernetPortsProfilesPortArgs>> ports;

    /**
     * @return Ports config
     * 
     */
    public Optional<Output<List<WirelessEthernetPortsProfilesPortArgs>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * AP port profile ID
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return AP port profile ID
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * Usb ports config
     * 
     */
    @Import(name="usbPorts")
    private @Nullable Output<List<WirelessEthernetPortsProfilesUsbPortArgs>> usbPorts;

    /**
     * @return Usb ports config
     * 
     */
    public Optional<Output<List<WirelessEthernetPortsProfilesUsbPortArgs>>> usbPorts() {
        return Optional.ofNullable(this.usbPorts);
    }

    private WirelessEthernetPortsProfilesState() {}

    private WirelessEthernetPortsProfilesState(WirelessEthernetPortsProfilesState $) {
        this.isDefault = $.isDefault;
        this.name = $.name;
        this.networkId = $.networkId;
        this.ports = $.ports;
        this.profileId = $.profileId;
        this.usbPorts = $.usbPorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessEthernetPortsProfilesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessEthernetPortsProfilesState $;

        public Builder() {
            $ = new WirelessEthernetPortsProfilesState();
        }

        public Builder(WirelessEthernetPortsProfilesState defaults) {
            $ = new WirelessEthernetPortsProfilesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param isDefault Is default profile
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Is default profile
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param name AP port profile name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name AP port profile name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param ports Ports config
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<WirelessEthernetPortsProfilesPortArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports Ports config
         * 
         * @return builder
         * 
         */
        public Builder ports(List<WirelessEthernetPortsProfilesPortArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports Ports config
         * 
         * @return builder
         * 
         */
        public Builder ports(WirelessEthernetPortsProfilesPortArgs... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param profileId AP port profile ID
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId AP port profile ID
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param usbPorts Usb ports config
         * 
         * @return builder
         * 
         */
        public Builder usbPorts(@Nullable Output<List<WirelessEthernetPortsProfilesUsbPortArgs>> usbPorts) {
            $.usbPorts = usbPorts;
            return this;
        }

        /**
         * @param usbPorts Usb ports config
         * 
         * @return builder
         * 
         */
        public Builder usbPorts(List<WirelessEthernetPortsProfilesUsbPortArgs> usbPorts) {
            return usbPorts(Output.of(usbPorts));
        }

        /**
         * @param usbPorts Usb ports config
         * 
         * @return builder
         * 
         */
        public Builder usbPorts(WirelessEthernetPortsProfilesUsbPortArgs... usbPorts) {
            return usbPorts(List.of(usbPorts));
        }

        public WirelessEthernetPortsProfilesState build() {
            return $;
        }
    }

}
