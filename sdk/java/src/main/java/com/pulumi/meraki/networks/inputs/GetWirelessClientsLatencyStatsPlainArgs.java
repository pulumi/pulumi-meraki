// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWirelessClientsLatencyStatsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWirelessClientsLatencyStatsPlainArgs Empty = new GetWirelessClientsLatencyStatsPlainArgs();

    /**
     * apTag query parameter. Filter results by AP Tag
     * 
     */
    @Import(name="apTag")
    private @Nullable String apTag;

    /**
     * @return apTag query parameter. Filter results by AP Tag
     * 
     */
    public Optional<String> apTag() {
        return Optional.ofNullable(this.apTag);
    }

    /**
     * band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
     * 
     */
    @Import(name="band")
    private @Nullable String band;

    /**
     * @return band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
     * 
     */
    public Optional<String> band() {
        return Optional.ofNullable(this.band);
    }

    /**
     * clientId path parameter. Client ID
     * 
     */
    @Import(name="clientId", required=true)
    private String clientId;

    /**
     * @return clientId path parameter. Client ID
     * 
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
     * 
     */
    @Import(name="fields")
    private @Nullable String fields;

    /**
     * @return fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
     * 
     */
    public Optional<String> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private String networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public String networkId() {
        return this.networkId;
    }

    /**
     * ssid query parameter. Filter results by SSID
     * 
     */
    @Import(name="ssid")
    private @Nullable Integer ssid;

    /**
     * @return ssid query parameter. Filter results by SSID
     * 
     */
    public Optional<Integer> ssid() {
        return Optional.ofNullable(this.ssid);
    }

    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
     * 
     */
    @Import(name="t0")
    private @Nullable String t0;

    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
     * 
     */
    public Optional<String> t0() {
        return Optional.ofNullable(this.t0);
    }

    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    @Import(name="t1")
    private @Nullable String t1;

    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * 
     */
    public Optional<String> t1() {
        return Optional.ofNullable(this.t1);
    }

    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
     * 
     */
    @Import(name="timespan")
    private @Nullable Double timespan;

    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
     * 
     */
    public Optional<Double> timespan() {
        return Optional.ofNullable(this.timespan);
    }

    /**
     * vlan query parameter. Filter results by VLAN
     * 
     */
    @Import(name="vlan")
    private @Nullable Integer vlan;

    /**
     * @return vlan query parameter. Filter results by VLAN
     * 
     */
    public Optional<Integer> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    private GetWirelessClientsLatencyStatsPlainArgs() {}

    private GetWirelessClientsLatencyStatsPlainArgs(GetWirelessClientsLatencyStatsPlainArgs $) {
        this.apTag = $.apTag;
        this.band = $.band;
        this.clientId = $.clientId;
        this.fields = $.fields;
        this.networkId = $.networkId;
        this.ssid = $.ssid;
        this.t0 = $.t0;
        this.t1 = $.t1;
        this.timespan = $.timespan;
        this.vlan = $.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWirelessClientsLatencyStatsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWirelessClientsLatencyStatsPlainArgs $;

        public Builder() {
            $ = new GetWirelessClientsLatencyStatsPlainArgs();
        }

        public Builder(GetWirelessClientsLatencyStatsPlainArgs defaults) {
            $ = new GetWirelessClientsLatencyStatsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apTag apTag query parameter. Filter results by AP Tag
         * 
         * @return builder
         * 
         */
        public Builder apTag(@Nullable String apTag) {
            $.apTag = apTag;
            return this;
        }

        /**
         * @param band band query parameter. Filter results by band (either &#39;2.4&#39;, &#39;5&#39; or &#39;6&#39;). Note that data prior to February 2020 will not have band information.
         * 
         * @return builder
         * 
         */
        public Builder band(@Nullable String band) {
            $.band = band;
            return this;
        }

        /**
         * @param clientId clientId path parameter. Client ID
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param fields fields query parameter. Partial selection: If present, this call will return only the selected fields of [&#34;rawDistribution&#34;, &#34;avg&#34;]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable String fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param ssid ssid query parameter. Filter results by SSID
         * 
         * @return builder
         * 
         */
        public Builder ssid(@Nullable Integer ssid) {
            $.ssid = ssid;
            return this;
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(@Nullable String t0) {
            $.t0 = t0;
            return this;
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
         * 
         * @return builder
         * 
         */
        public Builder t1(@Nullable String t1) {
            $.t1 = t1;
            return this;
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
         * 
         * @return builder
         * 
         */
        public Builder timespan(@Nullable Double timespan) {
            $.timespan = timespan;
            return this;
        }

        /**
         * @param vlan vlan query parameter. Filter results by VLAN
         * 
         * @return builder
         * 
         */
        public Builder vlan(@Nullable Integer vlan) {
            $.vlan = vlan;
            return this;
        }

        public GetWirelessClientsLatencyStatsPlainArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("GetWirelessClientsLatencyStatsPlainArgs", "clientId");
            }
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("GetWirelessClientsLatencyStatsPlainArgs", "networkId");
            }
            return $;
        }
    }

}
