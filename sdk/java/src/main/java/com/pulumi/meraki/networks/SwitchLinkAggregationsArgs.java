// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.SwitchLinkAggregationsSwitchPortArgs;
import com.pulumi.meraki.networks.inputs.SwitchLinkAggregationsSwitchProfilePortArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchLinkAggregationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchLinkAggregationsArgs Empty = new SwitchLinkAggregationsArgs();

    /**
     * linkAggregationId path parameter. Link aggregation ID
     * 
     */
    @Import(name="linkAggregationId")
    private @Nullable Output<String> linkAggregationId;

    /**
     * @return linkAggregationId path parameter. Link aggregation ID
     * 
     */
    public Optional<Output<String>> linkAggregationId() {
        return Optional.ofNullable(this.linkAggregationId);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     * 
     */
    @Import(name="switchPorts")
    private @Nullable Output<List<SwitchLinkAggregationsSwitchPortArgs>> switchPorts;

    /**
     * @return Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     * 
     */
    public Optional<Output<List<SwitchLinkAggregationsSwitchPortArgs>>> switchPorts() {
        return Optional.ofNullable(this.switchPorts);
    }

    /**
     * Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     * 
     */
    @Import(name="switchProfilePorts")
    private @Nullable Output<List<SwitchLinkAggregationsSwitchProfilePortArgs>> switchProfilePorts;

    /**
     * @return Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
     * 
     */
    public Optional<Output<List<SwitchLinkAggregationsSwitchProfilePortArgs>>> switchProfilePorts() {
        return Optional.ofNullable(this.switchProfilePorts);
    }

    private SwitchLinkAggregationsArgs() {}

    private SwitchLinkAggregationsArgs(SwitchLinkAggregationsArgs $) {
        this.linkAggregationId = $.linkAggregationId;
        this.networkId = $.networkId;
        this.switchPorts = $.switchPorts;
        this.switchProfilePorts = $.switchProfilePorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchLinkAggregationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchLinkAggregationsArgs $;

        public Builder() {
            $ = new SwitchLinkAggregationsArgs();
        }

        public Builder(SwitchLinkAggregationsArgs defaults) {
            $ = new SwitchLinkAggregationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linkAggregationId linkAggregationId path parameter. Link aggregation ID
         * 
         * @return builder
         * 
         */
        public Builder linkAggregationId(@Nullable Output<String> linkAggregationId) {
            $.linkAggregationId = linkAggregationId;
            return this;
        }

        /**
         * @param linkAggregationId linkAggregationId path parameter. Link aggregation ID
         * 
         * @return builder
         * 
         */
        public Builder linkAggregationId(String linkAggregationId) {
            return linkAggregationId(Output.of(linkAggregationId));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param switchPorts Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchPorts(@Nullable Output<List<SwitchLinkAggregationsSwitchPortArgs>> switchPorts) {
            $.switchPorts = switchPorts;
            return this;
        }

        /**
         * @param switchPorts Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchPorts(List<SwitchLinkAggregationsSwitchPortArgs> switchPorts) {
            return switchPorts(Output.of(switchPorts));
        }

        /**
         * @param switchPorts Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchPorts(SwitchLinkAggregationsSwitchPortArgs... switchPorts) {
            return switchPorts(List.of(switchPorts));
        }

        /**
         * @param switchProfilePorts Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchProfilePorts(@Nullable Output<List<SwitchLinkAggregationsSwitchProfilePortArgs>> switchProfilePorts) {
            $.switchProfilePorts = switchProfilePorts;
            return this;
        }

        /**
         * @param switchProfilePorts Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchProfilePorts(List<SwitchLinkAggregationsSwitchProfilePortArgs> switchProfilePorts) {
            return switchProfilePorts(Output.of(switchProfilePorts));
        }

        /**
         * @param switchProfilePorts Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
         * 
         * @return builder
         * 
         */
        public Builder switchProfilePorts(SwitchLinkAggregationsSwitchProfilePortArgs... switchProfilePorts) {
            return switchProfilePorts(List.of(switchProfilePorts));
        }

        public SwitchLinkAggregationsArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("SwitchLinkAggregationsArgs", "networkId");
            }
            return $;
        }
    }

}
