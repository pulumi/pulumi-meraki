// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs Empty = new SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs();

    /**
     * The IP address of the client which has fixed IP address assigned to it
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return The IP address of the client which has fixed IP address assigned to it
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The MAC address of the client which has fixed IP address
     * 
     */
    @Import(name="mac")
    private @Nullable Output<String> mac;

    /**
     * @return The MAC address of the client which has fixed IP address
     * 
     */
    public Optional<Output<String>> mac() {
        return Optional.ofNullable(this.mac);
    }

    /**
     * The name of the client which has fixed IP address
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the client which has fixed IP address
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs() {}

    private SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs(SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs $) {
        this.ip = $.ip;
        this.mac = $.mac;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs $;

        public Builder() {
            $ = new SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs();
        }

        public Builder(SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs defaults) {
            $ = new SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP address of the client which has fixed IP address assigned to it
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP address of the client which has fixed IP address assigned to it
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param mac The MAC address of the client which has fixed IP address
         * 
         * @return builder
         * 
         */
        public Builder mac(@Nullable Output<String> mac) {
            $.mac = mac;
            return this;
        }

        /**
         * @param mac The MAC address of the client which has fixed IP address
         * 
         * @return builder
         * 
         */
        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        /**
         * @param name The name of the client which has fixed IP address
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the client which has fixed IP address
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public SwitchStacksRoutingInterfacesDhcpFixedIpAssignmentArgs build() {
            return $;
        }
    }

}
