// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LicensingCotermLicensesMoveParametersLicenseCount {
    /**
     * @return The number of counts to move
     * 
     */
    private @Nullable Integer count;
    /**
     * @return The license model type to move counts of
     * 
     */
    private @Nullable String model;

    private LicensingCotermLicensesMoveParametersLicenseCount() {}
    /**
     * @return The number of counts to move
     * 
     */
    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return The license model type to move counts of
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicensingCotermLicensesMoveParametersLicenseCount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer count;
        private @Nullable String model;
        public Builder() {}
        public Builder(LicensingCotermLicensesMoveParametersLicenseCount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.model = defaults.model;
        }

        @CustomType.Setter
        public Builder count(@Nullable Integer count) {

            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder model(@Nullable String model) {

            this.model = model;
            return this;
        }
        public LicensingCotermLicensesMoveParametersLicenseCount build() {
            final var _resultValue = new LicensingCotermLicensesMoveParametersLicenseCount();
            _resultValue.count = count;
            _resultValue.model = model;
            return _resultValue;
        }
    }
}
