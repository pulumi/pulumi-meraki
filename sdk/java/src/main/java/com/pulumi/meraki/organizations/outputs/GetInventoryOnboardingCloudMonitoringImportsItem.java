// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetInventoryOnboardingCloudMonitoringImportsItemDevice;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInventoryOnboardingCloudMonitoringImportsItem {
    /**
     * @return Represents the details of an imported device.
     * 
     */
    private GetInventoryOnboardingCloudMonitoringImportsItemDevice device;
    /**
     * @return Database ID for the new entity entry.
     * 
     */
    private String importId;

    private GetInventoryOnboardingCloudMonitoringImportsItem() {}
    /**
     * @return Represents the details of an imported device.
     * 
     */
    public GetInventoryOnboardingCloudMonitoringImportsItemDevice device() {
        return this.device;
    }
    /**
     * @return Database ID for the new entity entry.
     * 
     */
    public String importId() {
        return this.importId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoryOnboardingCloudMonitoringImportsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetInventoryOnboardingCloudMonitoringImportsItemDevice device;
        private String importId;
        public Builder() {}
        public Builder(GetInventoryOnboardingCloudMonitoringImportsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.importId = defaults.importId;
        }

        @CustomType.Setter
        public Builder device(GetInventoryOnboardingCloudMonitoringImportsItemDevice device) {
            if (device == null) {
              throw new MissingRequiredPropertyException("GetInventoryOnboardingCloudMonitoringImportsItem", "device");
            }
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder importId(String importId) {
            if (importId == null) {
              throw new MissingRequiredPropertyException("GetInventoryOnboardingCloudMonitoringImportsItem", "importId");
            }
            this.importId = importId;
            return this;
        }
        public GetInventoryOnboardingCloudMonitoringImportsItem build() {
            final var _resultValue = new GetInventoryOnboardingCloudMonitoringImportsItem();
            _resultValue.device = device;
            _resultValue.importId = importId;
            return _resultValue;
        }
    }
}
