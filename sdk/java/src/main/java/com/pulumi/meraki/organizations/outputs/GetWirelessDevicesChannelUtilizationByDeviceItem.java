// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationByDeviceItemByBand;
import com.pulumi.meraki.organizations.outputs.GetWirelessDevicesChannelUtilizationByDeviceItemNetwork;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWirelessDevicesChannelUtilizationByDeviceItem {
    /**
     * @return Channel utilization broken down by band.
     * 
     */
    private List<GetWirelessDevicesChannelUtilizationByDeviceItemByBand> byBands;
    /**
     * @return The MAC address of the device.
     * 
     */
    private String mac;
    /**
     * @return Network for the given utilization metrics.
     * 
     */
    private GetWirelessDevicesChannelUtilizationByDeviceItemNetwork network;
    /**
     * @return The serial number for the device.
     * 
     */
    private String serial;

    private GetWirelessDevicesChannelUtilizationByDeviceItem() {}
    /**
     * @return Channel utilization broken down by band.
     * 
     */
    public List<GetWirelessDevicesChannelUtilizationByDeviceItemByBand> byBands() {
        return this.byBands;
    }
    /**
     * @return The MAC address of the device.
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Network for the given utilization metrics.
     * 
     */
    public GetWirelessDevicesChannelUtilizationByDeviceItemNetwork network() {
        return this.network;
    }
    /**
     * @return The serial number for the device.
     * 
     */
    public String serial() {
        return this.serial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessDevicesChannelUtilizationByDeviceItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetWirelessDevicesChannelUtilizationByDeviceItemByBand> byBands;
        private String mac;
        private GetWirelessDevicesChannelUtilizationByDeviceItemNetwork network;
        private String serial;
        public Builder() {}
        public Builder(GetWirelessDevicesChannelUtilizationByDeviceItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.byBands = defaults.byBands;
    	      this.mac = defaults.mac;
    	      this.network = defaults.network;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder byBands(List<GetWirelessDevicesChannelUtilizationByDeviceItemByBand> byBands) {
            if (byBands == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesChannelUtilizationByDeviceItem", "byBands");
            }
            this.byBands = byBands;
            return this;
        }
        public Builder byBands(GetWirelessDevicesChannelUtilizationByDeviceItemByBand... byBands) {
            return byBands(List.of(byBands));
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesChannelUtilizationByDeviceItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder network(GetWirelessDevicesChannelUtilizationByDeviceItemNetwork network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesChannelUtilizationByDeviceItem", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetWirelessDevicesChannelUtilizationByDeviceItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        public GetWirelessDevicesChannelUtilizationByDeviceItem build() {
            final var _resultValue = new GetWirelessDevicesChannelUtilizationByDeviceItem();
            _resultValue.byBands = byBands;
            _resultValue.mac = mac;
            _resultValue.network = network;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
