// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsEapOverrideItemEapolKey {
    /**
     * @return Maximum number of EAPOL key retries.
     * 
     */
    private Integer retries;
    /**
     * @return EAPOL Key timeout in milliseconds.
     * 
     */
    private Integer timeoutInMs;

    private GetWirelessSsidsEapOverrideItemEapolKey() {}
    /**
     * @return Maximum number of EAPOL key retries.
     * 
     */
    public Integer retries() {
        return this.retries;
    }
    /**
     * @return EAPOL Key timeout in milliseconds.
     * 
     */
    public Integer timeoutInMs() {
        return this.timeoutInMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsEapOverrideItemEapolKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer retries;
        private Integer timeoutInMs;
        public Builder() {}
        public Builder(GetWirelessSsidsEapOverrideItemEapolKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retries = defaults.retries;
    	      this.timeoutInMs = defaults.timeoutInMs;
        }

        @CustomType.Setter
        public Builder retries(Integer retries) {
            if (retries == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsEapOverrideItemEapolKey", "retries");
            }
            this.retries = retries;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutInMs(Integer timeoutInMs) {
            if (timeoutInMs == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsEapOverrideItemEapolKey", "timeoutInMs");
            }
            this.timeoutInMs = timeoutInMs;
            return this;
        }
        public GetWirelessSsidsEapOverrideItemEapolKey build() {
            final var _resultValue = new GetWirelessSsidsEapOverrideItemEapolKey();
            _resultValue.retries = retries;
            _resultValue.timeoutInMs = timeoutInMs;
            return _resultValue;
        }
    }
}
