// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetActionBatchesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetActionBatchesPlainArgs Empty = new GetActionBatchesPlainArgs();

    /**
     * actionBatchId path parameter. Action batch ID
     * 
     */
    @Import(name="actionBatchId")
    private @Nullable String actionBatchId;

    /**
     * @return actionBatchId path parameter. Action batch ID
     * 
     */
    public Optional<String> actionBatchId() {
        return Optional.ofNullable(this.actionBatchId);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId")
    private @Nullable String organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetActionBatchesPlainArgs() {}

    private GetActionBatchesPlainArgs(GetActionBatchesPlainArgs $) {
        this.actionBatchId = $.actionBatchId;
        this.organizationId = $.organizationId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetActionBatchesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetActionBatchesPlainArgs $;

        public Builder() {
            $ = new GetActionBatchesPlainArgs();
        }

        public Builder(GetActionBatchesPlainArgs defaults) {
            $ = new GetActionBatchesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionBatchId actionBatchId path parameter. Action batch ID
         * 
         * @return builder
         * 
         */
        public Builder actionBatchId(@Nullable String actionBatchId) {
            $.actionBatchId = actionBatchId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param status status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetActionBatchesPlainArgs build() {
            return $;
        }
    }

}
