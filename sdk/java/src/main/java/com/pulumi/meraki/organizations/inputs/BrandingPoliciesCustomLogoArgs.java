// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.BrandingPoliciesCustomLogoImageArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrandingPoliciesCustomLogoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrandingPoliciesCustomLogoArgs Empty = new BrandingPoliciesCustomLogoArgs();

    /**
     * Whether or not there is a custom logo enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether or not there is a custom logo enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Properties of the image.
     * 
     */
    @Import(name="image")
    private @Nullable Output<BrandingPoliciesCustomLogoImageArgs> image;

    /**
     * @return Properties of the image.
     * 
     */
    public Optional<Output<BrandingPoliciesCustomLogoImageArgs>> image() {
        return Optional.ofNullable(this.image);
    }

    private BrandingPoliciesCustomLogoArgs() {}

    private BrandingPoliciesCustomLogoArgs(BrandingPoliciesCustomLogoArgs $) {
        this.enabled = $.enabled;
        this.image = $.image;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrandingPoliciesCustomLogoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrandingPoliciesCustomLogoArgs $;

        public Builder() {
            $ = new BrandingPoliciesCustomLogoArgs();
        }

        public Builder(BrandingPoliciesCustomLogoArgs defaults) {
            $ = new BrandingPoliciesCustomLogoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not there is a custom logo enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not there is a custom logo enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param image Properties of the image.
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<BrandingPoliciesCustomLogoImageArgs> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image Properties of the image.
         * 
         * @return builder
         * 
         */
        public Builder image(BrandingPoliciesCustomLogoImageArgs image) {
            return image(Output.of(image));
        }

        public BrandingPoliciesCustomLogoArgs build() {
            return $;
        }
    }

}
