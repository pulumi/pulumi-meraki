// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingCotermLicensesMoveItemMovedLicenseEditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingCotermLicensesMoveItemMovedLicenseEditionArgs Empty = new LicensingCotermLicensesMoveItemMovedLicenseEditionArgs();

    /**
     * The name of the license edition
     * 
     */
    @Import(name="edition")
    private @Nullable Output<String> edition;

    /**
     * @return The name of the license edition
     * 
     */
    public Optional<Output<String>> edition() {
        return Optional.ofNullable(this.edition);
    }

    /**
     * The product type of the license edition
     * 
     */
    @Import(name="productType")
    private @Nullable Output<String> productType;

    /**
     * @return The product type of the license edition
     * 
     */
    public Optional<Output<String>> productType() {
        return Optional.ofNullable(this.productType);
    }

    private LicensingCotermLicensesMoveItemMovedLicenseEditionArgs() {}

    private LicensingCotermLicensesMoveItemMovedLicenseEditionArgs(LicensingCotermLicensesMoveItemMovedLicenseEditionArgs $) {
        this.edition = $.edition;
        this.productType = $.productType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingCotermLicensesMoveItemMovedLicenseEditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingCotermLicensesMoveItemMovedLicenseEditionArgs $;

        public Builder() {
            $ = new LicensingCotermLicensesMoveItemMovedLicenseEditionArgs();
        }

        public Builder(LicensingCotermLicensesMoveItemMovedLicenseEditionArgs defaults) {
            $ = new LicensingCotermLicensesMoveItemMovedLicenseEditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param edition The name of the license edition
         * 
         * @return builder
         * 
         */
        public Builder edition(@Nullable Output<String> edition) {
            $.edition = edition;
            return this;
        }

        /**
         * @param edition The name of the license edition
         * 
         * @return builder
         * 
         */
        public Builder edition(String edition) {
            return edition(Output.of(edition));
        }

        /**
         * @param productType The product type of the license edition
         * 
         * @return builder
         * 
         */
        public Builder productType(@Nullable Output<String> productType) {
            $.productType = productType;
            return this;
        }

        /**
         * @param productType The product type of the license edition
         * 
         * @return builder
         * 
         */
        public Builder productType(String productType) {
            return productType(Output.of(productType));
        }

        public LicensingCotermLicensesMoveItemMovedLicenseEditionArgs build() {
            return $;
        }
    }

}
