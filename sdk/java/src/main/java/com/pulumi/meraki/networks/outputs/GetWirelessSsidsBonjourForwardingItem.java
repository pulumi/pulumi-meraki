// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsBonjourForwardingItemException;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsBonjourForwardingItemRule;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsBonjourForwardingItem {
    /**
     * @return If true, Bonjour forwarding is enabled on the SSID.
     * 
     */
    private Boolean enabled;
    /**
     * @return Bonjour forwarding exception
     * 
     */
    private GetWirelessSsidsBonjourForwardingItemException exception;
    /**
     * @return Bonjour forwarding rules
     * 
     */
    private List<GetWirelessSsidsBonjourForwardingItemRule> rules;

    private GetWirelessSsidsBonjourForwardingItem() {}
    /**
     * @return If true, Bonjour forwarding is enabled on the SSID.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Bonjour forwarding exception
     * 
     */
    public GetWirelessSsidsBonjourForwardingItemException exception() {
        return this.exception;
    }
    /**
     * @return Bonjour forwarding rules
     * 
     */
    public List<GetWirelessSsidsBonjourForwardingItemRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsBonjourForwardingItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private GetWirelessSsidsBonjourForwardingItemException exception;
        private List<GetWirelessSsidsBonjourForwardingItemRule> rules;
        public Builder() {}
        public Builder(GetWirelessSsidsBonjourForwardingItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.exception = defaults.exception;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsBonjourForwardingItem", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder exception(GetWirelessSsidsBonjourForwardingItemException exception) {
            if (exception == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsBonjourForwardingItem", "exception");
            }
            this.exception = exception;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetWirelessSsidsBonjourForwardingItemRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsBonjourForwardingItem", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetWirelessSsidsBonjourForwardingItemRule... rules) {
            return rules(List.of(rules));
        }
        public GetWirelessSsidsBonjourForwardingItem build() {
            final var _resultValue = new GetWirelessSsidsBonjourForwardingItem();
            _resultValue.enabled = enabled;
            _resultValue.exception = exception;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
