// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessRfProfilesSixGhzSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessRfProfilesSixGhzSettingsArgs Empty = new WirelessRfProfilesSixGhzSettingsArgs();

    /**
     * Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
     * 
     */
    @Import(name="channelWidth")
    private @Nullable Output<String> channelWidth;

    /**
     * @return Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
     * 
     */
    public Optional<Output<String>> channelWidth() {
        return Optional.ofNullable(this.channelWidth);
    }

    /**
     * Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    @Import(name="maxPower")
    private @Nullable Output<Integer> maxPower;

    /**
     * @return Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    public Optional<Output<Integer>> maxPower() {
        return Optional.ofNullable(this.maxPower);
    }

    /**
     * Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    @Import(name="minBitrate")
    private @Nullable Output<Integer> minBitrate;

    /**
     * @return Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
     * 
     */
    public Optional<Output<Integer>> minBitrate() {
        return Optional.ofNullable(this.minBitrate);
    }

    /**
     * Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    @Import(name="minPower")
    private @Nullable Output<Integer> minPower;

    /**
     * @return Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
     * 
     */
    public Optional<Output<Integer>> minPower() {
        return Optional.ofNullable(this.minPower);
    }

    /**
     * The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    @Import(name="rxsop")
    private @Nullable Output<Integer> rxsop;

    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    public Optional<Output<Integer>> rxsop() {
        return Optional.ofNullable(this.rxsop);
    }

    /**
     * Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
     * 
     */
    @Import(name="validAutoChannels")
    private @Nullable Output<List<Integer>> validAutoChannels;

    /**
     * @return Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
     * 
     */
    public Optional<Output<List<Integer>>> validAutoChannels() {
        return Optional.ofNullable(this.validAutoChannels);
    }

    private WirelessRfProfilesSixGhzSettingsArgs() {}

    private WirelessRfProfilesSixGhzSettingsArgs(WirelessRfProfilesSixGhzSettingsArgs $) {
        this.channelWidth = $.channelWidth;
        this.maxPower = $.maxPower;
        this.minBitrate = $.minBitrate;
        this.minPower = $.minPower;
        this.rxsop = $.rxsop;
        this.validAutoChannels = $.validAutoChannels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessRfProfilesSixGhzSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessRfProfilesSixGhzSettingsArgs $;

        public Builder() {
            $ = new WirelessRfProfilesSixGhzSettingsArgs();
        }

        public Builder(WirelessRfProfilesSixGhzSettingsArgs defaults) {
            $ = new WirelessRfProfilesSixGhzSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelWidth Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
         * 
         * @return builder
         * 
         */
        public Builder channelWidth(@Nullable Output<String> channelWidth) {
            $.channelWidth = channelWidth;
            return this;
        }

        /**
         * @param channelWidth Sets channel width (MHz) for 6Ghz band. Can be one of &#39;0&#39;, &#39;20&#39;, &#39;40&#39;, &#39;80&#39; or &#39;160&#39;. Defaults to auto.
         * 
         * @return builder
         * 
         */
        public Builder channelWidth(String channelWidth) {
            return channelWidth(Output.of(channelWidth));
        }

        /**
         * @param maxPower Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
         * 
         * @return builder
         * 
         */
        public Builder maxPower(@Nullable Output<Integer> maxPower) {
            $.maxPower = maxPower;
            return this;
        }

        /**
         * @param maxPower Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
         * 
         * @return builder
         * 
         */
        public Builder maxPower(Integer maxPower) {
            return maxPower(Output.of(maxPower));
        }

        /**
         * @param minBitrate Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
         * 
         * @return builder
         * 
         */
        public Builder minBitrate(@Nullable Output<Integer> minBitrate) {
            $.minBitrate = minBitrate;
            return this;
        }

        /**
         * @param minBitrate Sets min bitrate (Mbps) of 6Ghz band. Can be one of &#39;6&#39;, &#39;9&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 12.
         * 
         * @return builder
         * 
         */
        public Builder minBitrate(Integer minBitrate) {
            return minBitrate(Output.of(minBitrate));
        }

        /**
         * @param minPower Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
         * 
         * @return builder
         * 
         */
        public Builder minPower(@Nullable Output<Integer> minPower) {
            $.minPower = minPower;
            return this;
        }

        /**
         * @param minPower Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
         * 
         * @return builder
         * 
         */
        public Builder minPower(Integer minPower) {
            return minPower(Output.of(minPower));
        }

        /**
         * @param rxsop The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
         * 
         * @return builder
         * 
         */
        public Builder rxsop(@Nullable Output<Integer> rxsop) {
            $.rxsop = rxsop;
            return this;
        }

        /**
         * @param rxsop The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
         * 
         * @return builder
         * 
         */
        public Builder rxsop(Integer rxsop) {
            return rxsop(Output.of(rxsop));
        }

        /**
         * @param validAutoChannels Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
         * 
         * @return builder
         * 
         */
        public Builder validAutoChannels(@Nullable Output<List<Integer>> validAutoChannels) {
            $.validAutoChannels = validAutoChannels;
            return this;
        }

        /**
         * @param validAutoChannels Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
         * 
         * @return builder
         * 
         */
        public Builder validAutoChannels(List<Integer> validAutoChannels) {
            return validAutoChannels(Output.of(validAutoChannels));
        }

        /**
         * @param validAutoChannels Sets valid auto channels for 6Ghz band. Can be one of &#39;1&#39;, &#39;5&#39;, &#39;9&#39;, &#39;13&#39;, &#39;17&#39;, &#39;21&#39;, &#39;25&#39;, &#39;29&#39;, &#39;33&#39;, &#39;37&#39;, &#39;41&#39;, &#39;45&#39;, &#39;49&#39;, &#39;53&#39;, &#39;57&#39;, &#39;61&#39;, &#39;65&#39;, &#39;69&#39;, &#39;73&#39;, &#39;77&#39;, &#39;81&#39;, &#39;85&#39;, &#39;89&#39;, &#39;93&#39;, &#39;97&#39;, &#39;101&#39;, &#39;105&#39;, &#39;109&#39;, &#39;113&#39;, &#39;117&#39;, &#39;121&#39;, &#39;125&#39;, &#39;129&#39;, &#39;133&#39;, &#39;137&#39;, &#39;141&#39;, &#39;145&#39;, &#39;149&#39;, &#39;153&#39;, &#39;157&#39;, &#39;161&#39;, &#39;165&#39;, &#39;169&#39;, &#39;173&#39;, &#39;177&#39;, &#39;181&#39;, &#39;185&#39;, &#39;189&#39;, &#39;193&#39;, &#39;197&#39;, &#39;201&#39;, &#39;205&#39;, &#39;209&#39;, &#39;213&#39;, &#39;217&#39;, &#39;221&#39;, &#39;225&#39;, &#39;229&#39; or &#39;233&#39;. Defaults to auto.
         * 
         * @return builder
         * 
         */
        public Builder validAutoChannels(Integer... validAutoChannels) {
            return validAutoChannels(List.of(validAutoChannels));
        }

        public WirelessRfProfilesSixGhzSettingsArgs build() {
            return $;
        }
    }

}
