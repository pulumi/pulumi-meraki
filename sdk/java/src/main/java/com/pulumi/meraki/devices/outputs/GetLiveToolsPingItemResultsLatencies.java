// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetLiveToolsPingItemResultsLatencies {
    /**
     * @return Average latency
     * 
     */
    private Double average;
    /**
     * @return Maximum latency
     * 
     */
    private Double maximum;
    /**
     * @return Minimum latency
     * 
     */
    private Double minimum;

    private GetLiveToolsPingItemResultsLatencies() {}
    /**
     * @return Average latency
     * 
     */
    public Double average() {
        return this.average;
    }
    /**
     * @return Maximum latency
     * 
     */
    public Double maximum() {
        return this.maximum;
    }
    /**
     * @return Minimum latency
     * 
     */
    public Double minimum() {
        return this.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLiveToolsPingItemResultsLatencies defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double average;
        private Double maximum;
        private Double minimum;
        public Builder() {}
        public Builder(GetLiveToolsPingItemResultsLatencies defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.average = defaults.average;
    	      this.maximum = defaults.maximum;
    	      this.minimum = defaults.minimum;
        }

        @CustomType.Setter
        public Builder average(Double average) {
            if (average == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsPingItemResultsLatencies", "average");
            }
            this.average = average;
            return this;
        }
        @CustomType.Setter
        public Builder maximum(Double maximum) {
            if (maximum == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsPingItemResultsLatencies", "maximum");
            }
            this.maximum = maximum;
            return this;
        }
        @CustomType.Setter
        public Builder minimum(Double minimum) {
            if (minimum == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsPingItemResultsLatencies", "minimum");
            }
            this.minimum = minimum;
            return this;
        }
        public GetLiveToolsPingItemResultsLatencies build() {
            final var _resultValue = new GetLiveToolsPingItemResultsLatencies();
            _resultValue.average = average;
            _resultValue.maximum = maximum;
            _resultValue.minimum = minimum;
            return _resultValue;
        }
    }
}
