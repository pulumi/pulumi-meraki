// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetAdaptivePolicyOverviewItemCounts {
    /**
     * @return Number of adaptive policies currently in the organization that allow all traffic.
     * 
     */
    private Integer allowPolicies;
    /**
     * @return Number of user-created adaptive policy ACLs currently in the organization.
     * 
     */
    private Integer customAcls;
    /**
     * @return Number of user-created adaptive policy groups currently in the organization.
     * 
     */
    private Integer customGroups;
    /**
     * @return Number of adaptive policies currently in the organization that deny all traffic.
     * 
     */
    private Integer denyPolicies;
    /**
     * @return Number of adaptive policy groups currently in the organization.
     * 
     */
    private Integer groups;
    /**
     * @return Number of adaptive policies currently in the organization.
     * 
     */
    private Integer policies;
    /**
     * @return Number of policy objects (with the adaptive policy type) currently in the organization.
     * 
     */
    private Integer policyObjects;

    private GetAdaptivePolicyOverviewItemCounts() {}
    /**
     * @return Number of adaptive policies currently in the organization that allow all traffic.
     * 
     */
    public Integer allowPolicies() {
        return this.allowPolicies;
    }
    /**
     * @return Number of user-created adaptive policy ACLs currently in the organization.
     * 
     */
    public Integer customAcls() {
        return this.customAcls;
    }
    /**
     * @return Number of user-created adaptive policy groups currently in the organization.
     * 
     */
    public Integer customGroups() {
        return this.customGroups;
    }
    /**
     * @return Number of adaptive policies currently in the organization that deny all traffic.
     * 
     */
    public Integer denyPolicies() {
        return this.denyPolicies;
    }
    /**
     * @return Number of adaptive policy groups currently in the organization.
     * 
     */
    public Integer groups() {
        return this.groups;
    }
    /**
     * @return Number of adaptive policies currently in the organization.
     * 
     */
    public Integer policies() {
        return this.policies;
    }
    /**
     * @return Number of policy objects (with the adaptive policy type) currently in the organization.
     * 
     */
    public Integer policyObjects() {
        return this.policyObjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdaptivePolicyOverviewItemCounts defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer allowPolicies;
        private Integer customAcls;
        private Integer customGroups;
        private Integer denyPolicies;
        private Integer groups;
        private Integer policies;
        private Integer policyObjects;
        public Builder() {}
        public Builder(GetAdaptivePolicyOverviewItemCounts defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPolicies = defaults.allowPolicies;
    	      this.customAcls = defaults.customAcls;
    	      this.customGroups = defaults.customGroups;
    	      this.denyPolicies = defaults.denyPolicies;
    	      this.groups = defaults.groups;
    	      this.policies = defaults.policies;
    	      this.policyObjects = defaults.policyObjects;
        }

        @CustomType.Setter
        public Builder allowPolicies(Integer allowPolicies) {
            if (allowPolicies == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "allowPolicies");
            }
            this.allowPolicies = allowPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder customAcls(Integer customAcls) {
            if (customAcls == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "customAcls");
            }
            this.customAcls = customAcls;
            return this;
        }
        @CustomType.Setter
        public Builder customGroups(Integer customGroups) {
            if (customGroups == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "customGroups");
            }
            this.customGroups = customGroups;
            return this;
        }
        @CustomType.Setter
        public Builder denyPolicies(Integer denyPolicies) {
            if (denyPolicies == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "denyPolicies");
            }
            this.denyPolicies = denyPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder groups(Integer groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "groups");
            }
            this.groups = groups;
            return this;
        }
        @CustomType.Setter
        public Builder policies(Integer policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "policies");
            }
            this.policies = policies;
            return this;
        }
        @CustomType.Setter
        public Builder policyObjects(Integer policyObjects) {
            if (policyObjects == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyOverviewItemCounts", "policyObjects");
            }
            this.policyObjects = policyObjects;
            return this;
        }
        public GetAdaptivePolicyOverviewItemCounts build() {
            final var _resultValue = new GetAdaptivePolicyOverviewItemCounts();
            _resultValue.allowPolicies = allowPolicies;
            _resultValue.customAcls = customAcls;
            _resultValue.customGroups = customGroups;
            _resultValue.denyPolicies = denyPolicies;
            _resultValue.groups = groups;
            _resultValue.policies = policies;
            _resultValue.policyObjects = policyObjects;
            return _resultValue;
        }
    }
}
