// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetWirelessSsidsFirewallL7FirewallRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWirelessSsidsFirewallL7FirewallRulesArgs Empty = new GetWirelessSsidsFirewallL7FirewallRulesArgs();

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * number path parameter.
     * 
     */
    @Import(name="number", required=true)
    private Output<String> number;

    /**
     * @return number path parameter.
     * 
     */
    public Output<String> number() {
        return this.number;
    }

    private GetWirelessSsidsFirewallL7FirewallRulesArgs() {}

    private GetWirelessSsidsFirewallL7FirewallRulesArgs(GetWirelessSsidsFirewallL7FirewallRulesArgs $) {
        this.networkId = $.networkId;
        this.number = $.number;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWirelessSsidsFirewallL7FirewallRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWirelessSsidsFirewallL7FirewallRulesArgs $;

        public Builder() {
            $ = new GetWirelessSsidsFirewallL7FirewallRulesArgs();
        }

        public Builder(GetWirelessSsidsFirewallL7FirewallRulesArgs defaults) {
            $ = new GetWirelessSsidsFirewallL7FirewallRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        public GetWirelessSsidsFirewallL7FirewallRulesArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("GetWirelessSsidsFirewallL7FirewallRulesArgs", "networkId");
            }
            if ($.number == null) {
                throw new MissingRequiredPropertyException("GetWirelessSsidsFirewallL7FirewallRulesArgs", "number");
            }
            return $;
        }
    }

}
