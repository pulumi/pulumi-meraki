// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLiveToolsCableTestItemRequest {
    /**
     * @return A list of ports for which to perform the cable test.
     * 
     */
    private List<String> ports;
    /**
     * @return Device serial number
     * 
     */
    private String serial;

    private GetLiveToolsCableTestItemRequest() {}
    /**
     * @return A list of ports for which to perform the cable test.
     * 
     */
    public List<String> ports() {
        return this.ports;
    }
    /**
     * @return Device serial number
     * 
     */
    public String serial() {
        return this.serial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLiveToolsCableTestItemRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> ports;
        private String serial;
        public Builder() {}
        public Builder(GetLiveToolsCableTestItemRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ports = defaults.ports;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder ports(List<String> ports) {
            if (ports == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemRequest", "ports");
            }
            this.ports = ports;
            return this;
        }
        public Builder ports(String... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemRequest", "serial");
            }
            this.serial = serial;
            return this;
        }
        public GetLiveToolsCableTestItemRequest build() {
            final var _resultValue = new GetLiveToolsCableTestItemRequest();
            _resultValue.ports = ports;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
