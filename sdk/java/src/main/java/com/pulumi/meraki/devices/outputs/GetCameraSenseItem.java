// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetCameraSenseItemAudioDetection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCameraSenseItem {
    private GetCameraSenseItemAudioDetection audioDetection;
    private String mqttBrokerId;
    private List<String> mqttTopics;
    private Boolean senseEnabled;

    private GetCameraSenseItem() {}
    public GetCameraSenseItemAudioDetection audioDetection() {
        return this.audioDetection;
    }
    public String mqttBrokerId() {
        return this.mqttBrokerId;
    }
    public List<String> mqttTopics() {
        return this.mqttTopics;
    }
    public Boolean senseEnabled() {
        return this.senseEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCameraSenseItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetCameraSenseItemAudioDetection audioDetection;
        private String mqttBrokerId;
        private List<String> mqttTopics;
        private Boolean senseEnabled;
        public Builder() {}
        public Builder(GetCameraSenseItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audioDetection = defaults.audioDetection;
    	      this.mqttBrokerId = defaults.mqttBrokerId;
    	      this.mqttTopics = defaults.mqttTopics;
    	      this.senseEnabled = defaults.senseEnabled;
        }

        @CustomType.Setter
        public Builder audioDetection(GetCameraSenseItemAudioDetection audioDetection) {
            if (audioDetection == null) {
              throw new MissingRequiredPropertyException("GetCameraSenseItem", "audioDetection");
            }
            this.audioDetection = audioDetection;
            return this;
        }
        @CustomType.Setter
        public Builder mqttBrokerId(String mqttBrokerId) {
            if (mqttBrokerId == null) {
              throw new MissingRequiredPropertyException("GetCameraSenseItem", "mqttBrokerId");
            }
            this.mqttBrokerId = mqttBrokerId;
            return this;
        }
        @CustomType.Setter
        public Builder mqttTopics(List<String> mqttTopics) {
            if (mqttTopics == null) {
              throw new MissingRequiredPropertyException("GetCameraSenseItem", "mqttTopics");
            }
            this.mqttTopics = mqttTopics;
            return this;
        }
        public Builder mqttTopics(String... mqttTopics) {
            return mqttTopics(List.of(mqttTopics));
        }
        @CustomType.Setter
        public Builder senseEnabled(Boolean senseEnabled) {
            if (senseEnabled == null) {
              throw new MissingRequiredPropertyException("GetCameraSenseItem", "senseEnabled");
            }
            this.senseEnabled = senseEnabled;
            return this;
        }
        public GetCameraSenseItem build() {
            final var _resultValue = new GetCameraSenseItem();
            _resultValue.audioDetection = audioDetection;
            _resultValue.mqttBrokerId = mqttBrokerId;
            _resultValue.mqttTopics = mqttTopics;
            _resultValue.senseEnabled = senseEnabled;
            return _resultValue;
        }
    }
}
