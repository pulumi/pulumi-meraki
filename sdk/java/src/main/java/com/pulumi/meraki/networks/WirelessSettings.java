// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.networks.WirelessSettingsArgs;
import com.pulumi.meraki.networks.inputs.WirelessSettingsState;
import com.pulumi.meraki.networks.outputs.WirelessSettingsNamedVlans;
import com.pulumi.meraki.networks.outputs.WirelessSettingsRegulatoryDomain;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.networks.WirelessSettings;
 * import com.pulumi.meraki.networks.WirelessSettingsArgs;
 * import com.pulumi.meraki.networks.inputs.WirelessSettingsNamedVlansArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WirelessSettings("example", WirelessSettingsArgs.builder()
 *             .ipv6BridgeEnabled(false)
 *             .ledLightsOn(false)
 *             .locationAnalyticsEnabled(false)
 *             .meshingEnabled(true)
 *             .namedVlans(WirelessSettingsNamedVlansArgs.builder()
 *                 .pool_dhcp_monitoring(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .networkId("string")
 *             .upgradestrategy("minimizeUpgradeTime")
 *             .build());
 * 
 *         ctx.export("merakiNetworksWirelessSettingsExample", example);
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:networks/wirelessSettings:WirelessSettings example &#34;network_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:networks/wirelessSettings:WirelessSettings")
public class WirelessSettings extends com.pulumi.resources.CustomResource {
    /**
     * Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
     * 
     */
    @Export(name="ipv6BridgeEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ipv6BridgeEnabled;

    /**
     * @return Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
     * 
     */
    public Output<Boolean> ipv6BridgeEnabled() {
        return this.ipv6BridgeEnabled;
    }
    /**
     * Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
     * 
     */
    @Export(name="ledLightsOn", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ledLightsOn;

    /**
     * @return Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
     * 
     */
    public Output<Boolean> ledLightsOn() {
        return this.ledLightsOn;
    }
    /**
     * Toggle for enabling or disabling location analytics for your network
     * 
     */
    @Export(name="locationAnalyticsEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> locationAnalyticsEnabled;

    /**
     * @return Toggle for enabling or disabling location analytics for your network
     * 
     */
    public Output<Boolean> locationAnalyticsEnabled() {
        return this.locationAnalyticsEnabled;
    }
    /**
     * Toggle for enabling or disabling meshing in a network
     * 
     */
    @Export(name="meshingEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> meshingEnabled;

    /**
     * @return Toggle for enabling or disabling meshing in a network
     * 
     */
    public Output<Boolean> meshingEnabled() {
        return this.meshingEnabled;
    }
    /**
     * Named VLAN settings for wireless networks.
     * 
     */
    @Export(name="namedVlans", refs={WirelessSettingsNamedVlans.class}, tree="[0]")
    private Output<WirelessSettingsNamedVlans> namedVlans;

    /**
     * @return Named VLAN settings for wireless networks.
     * 
     */
    public Output<WirelessSettingsNamedVlans> namedVlans() {
        return this.namedVlans;
    }
    /**
     * networkId path parameter. Network ID
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * Regulatory domain information for this network.
     * 
     */
    @Export(name="regulatoryDomain", refs={WirelessSettingsRegulatoryDomain.class}, tree="[0]")
    private Output<WirelessSettingsRegulatoryDomain> regulatoryDomain;

    /**
     * @return Regulatory domain information for this network.
     * 
     */
    public Output<WirelessSettingsRegulatoryDomain> regulatoryDomain() {
        return this.regulatoryDomain;
    }
    /**
     * The upgrade strategy to apply to the network. Must be one of &#39;minimizeUpgradeTime&#39; or &#39;minimizeClientDowntime&#39;. Requires firmware version MR 26.8 or higher&#39;
     * 
     */
    @Export(name="upgradestrategy", refs={String.class}, tree="[0]")
    private Output<String> upgradestrategy;

    /**
     * @return The upgrade strategy to apply to the network. Must be one of &#39;minimizeUpgradeTime&#39; or &#39;minimizeClientDowntime&#39;. Requires firmware version MR 26.8 or higher&#39;
     * 
     */
    public Output<String> upgradestrategy() {
        return this.upgradestrategy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WirelessSettings(String name) {
        this(name, WirelessSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WirelessSettings(String name, WirelessSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WirelessSettings(String name, WirelessSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/wirelessSettings:WirelessSettings", name, args == null ? WirelessSettingsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WirelessSettings(String name, Output<String> id, @Nullable WirelessSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/wirelessSettings:WirelessSettings", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WirelessSettings get(String name, Output<String> id, @Nullable WirelessSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WirelessSettings(name, id, state, options);
    }
}
