// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WirelessSsidsVpnSplitTunnelRule {
    /**
     * @return Description for this split tunnel rule (optional).
     * 
     */
    private @Nullable String comment;
    /**
     * @return Destination for this split tunnel rule. IP address, fully-qualified domain names (FQDN) or &#39;any&#39;.
     * 
     */
    private @Nullable String destCidr;
    /**
     * @return Destination port for this split tunnel rule, (integer in the range 1-65535), or &#39;any&#39;.
     * 
     */
    private @Nullable String destPort;
    /**
     * @return Traffic policy specified for this split tunnel rule, &#39;allow&#39; or &#39;deny&#39;.
     * 
     */
    private @Nullable String policy;
    /**
     * @return Protocol for this split tunnel rule.
     * 
     */
    private @Nullable String protocol;

    private WirelessSsidsVpnSplitTunnelRule() {}
    /**
     * @return Description for this split tunnel rule (optional).
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return Destination for this split tunnel rule. IP address, fully-qualified domain names (FQDN) or &#39;any&#39;.
     * 
     */
    public Optional<String> destCidr() {
        return Optional.ofNullable(this.destCidr);
    }
    /**
     * @return Destination port for this split tunnel rule, (integer in the range 1-65535), or &#39;any&#39;.
     * 
     */
    public Optional<String> destPort() {
        return Optional.ofNullable(this.destPort);
    }
    /**
     * @return Traffic policy specified for this split tunnel rule, &#39;allow&#39; or &#39;deny&#39;.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return Protocol for this split tunnel rule.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WirelessSsidsVpnSplitTunnelRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private @Nullable String destCidr;
        private @Nullable String destPort;
        private @Nullable String policy;
        private @Nullable String protocol;
        public Builder() {}
        public Builder(WirelessSsidsVpnSplitTunnelRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.destCidr = defaults.destCidr;
    	      this.destPort = defaults.destPort;
    	      this.policy = defaults.policy;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder destCidr(@Nullable String destCidr) {

            this.destCidr = destCidr;
            return this;
        }
        @CustomType.Setter
        public Builder destPort(@Nullable String destPort) {

            this.destPort = destPort;
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {

            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        public WirelessSsidsVpnSplitTunnelRule build() {
            final var _resultValue = new WirelessSsidsVpnSplitTunnelRule();
            _resultValue.comment = comment;
            _resultValue.destCidr = destCidr;
            _resultValue.destPort = destPort;
            _resultValue.policy = policy;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
