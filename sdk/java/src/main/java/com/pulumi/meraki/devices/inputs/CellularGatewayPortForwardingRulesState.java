// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.CellularGatewayPortForwardingRulesRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CellularGatewayPortForwardingRulesState extends com.pulumi.resources.ResourceArgs {

    public static final CellularGatewayPortForwardingRulesState Empty = new CellularGatewayPortForwardingRulesState();

    /**
     * An array of port forwarding params
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<CellularGatewayPortForwardingRulesRuleArgs>> rules;

    /**
     * @return An array of port forwarding params
     * 
     */
    public Optional<Output<List<CellularGatewayPortForwardingRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    private CellularGatewayPortForwardingRulesState() {}

    private CellularGatewayPortForwardingRulesState(CellularGatewayPortForwardingRulesState $) {
        this.rules = $.rules;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CellularGatewayPortForwardingRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CellularGatewayPortForwardingRulesState $;

        public Builder() {
            $ = new CellularGatewayPortForwardingRulesState();
        }

        public Builder(CellularGatewayPortForwardingRulesState defaults) {
            $ = new CellularGatewayPortForwardingRulesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules An array of port forwarding params
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<CellularGatewayPortForwardingRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules An array of port forwarding params
         * 
         * @return builder
         * 
         */
        public Builder rules(List<CellularGatewayPortForwardingRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules An array of port forwarding params
         * 
         * @return builder
         * 
         */
        public Builder rules(CellularGatewayPortForwardingRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public CellularGatewayPortForwardingRulesState build() {
            return $;
        }
    }

}
