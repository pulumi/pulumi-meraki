// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchSettingsPowerException {
    /**
     * @return Per switch exception (combined, redundant, useNetworkSetting)
     * 
     */
    private @Nullable String powerType;
    /**
     * @return Serial number of the switch
     * 
     */
    private @Nullable String serial;

    private SwitchSettingsPowerException() {}
    /**
     * @return Per switch exception (combined, redundant, useNetworkSetting)
     * 
     */
    public Optional<String> powerType() {
        return Optional.ofNullable(this.powerType);
    }
    /**
     * @return Serial number of the switch
     * 
     */
    public Optional<String> serial() {
        return Optional.ofNullable(this.serial);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchSettingsPowerException defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String powerType;
        private @Nullable String serial;
        public Builder() {}
        public Builder(SwitchSettingsPowerException defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.powerType = defaults.powerType;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter
        public Builder powerType(@Nullable String powerType) {

            this.powerType = powerType;
            return this;
        }
        @CustomType.Setter
        public Builder serial(@Nullable String serial) {

            this.serial = serial;
            return this;
        }
        public SwitchSettingsPowerException build() {
            final var _resultValue = new SwitchSettingsPowerException();
            _resultValue.powerType = powerType;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
