// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.SmBypassActivationLockAttemptsDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmBypassActivationLockAttemptsState extends com.pulumi.resources.ResourceArgs {

    public static final SmBypassActivationLockAttemptsState Empty = new SmBypassActivationLockAttemptsState();

    /**
     * attemptId path parameter. Attempt ID
     * 
     */
    @Import(name="attemptId")
    private @Nullable Output<String> attemptId;

    /**
     * @return attemptId path parameter. Attempt ID
     * 
     */
    public Optional<Output<String>> attemptId() {
        return Optional.ofNullable(this.attemptId);
    }

    @Import(name="data")
    private @Nullable Output<SmBypassActivationLockAttemptsDataArgs> data;

    public Optional<Output<SmBypassActivationLockAttemptsDataArgs>> data() {
        return Optional.ofNullable(this.data);
    }

    /**
     * The ids of the devices to attempt activation lock bypass.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return The ids of the devices to attempt activation lock bypass.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private SmBypassActivationLockAttemptsState() {}

    private SmBypassActivationLockAttemptsState(SmBypassActivationLockAttemptsState $) {
        this.attemptId = $.attemptId;
        this.data = $.data;
        this.ids = $.ids;
        this.networkId = $.networkId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmBypassActivationLockAttemptsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmBypassActivationLockAttemptsState $;

        public Builder() {
            $ = new SmBypassActivationLockAttemptsState();
        }

        public Builder(SmBypassActivationLockAttemptsState defaults) {
            $ = new SmBypassActivationLockAttemptsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attemptId attemptId path parameter. Attempt ID
         * 
         * @return builder
         * 
         */
        public Builder attemptId(@Nullable Output<String> attemptId) {
            $.attemptId = attemptId;
            return this;
        }

        /**
         * @param attemptId attemptId path parameter. Attempt ID
         * 
         * @return builder
         * 
         */
        public Builder attemptId(String attemptId) {
            return attemptId(Output.of(attemptId));
        }

        public Builder data(@Nullable Output<SmBypassActivationLockAttemptsDataArgs> data) {
            $.data = data;
            return this;
        }

        public Builder data(SmBypassActivationLockAttemptsDataArgs data) {
            return data(Output.of(data));
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids The ids of the devices to attempt activation lock bypass.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public SmBypassActivationLockAttemptsState build() {
            return $;
        }
    }

}
