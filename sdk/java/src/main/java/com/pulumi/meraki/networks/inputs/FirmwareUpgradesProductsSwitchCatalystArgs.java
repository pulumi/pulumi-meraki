// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesProductsSwitchCatalystNextUpgradeArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirmwareUpgradesProductsSwitchCatalystArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirmwareUpgradesProductsSwitchCatalystArgs Empty = new FirmwareUpgradesProductsSwitchCatalystArgs();

    /**
     * The pending firmware upgrade if it exists
     * 
     */
    @Import(name="nextUpgrade")
    private @Nullable Output<FirmwareUpgradesProductsSwitchCatalystNextUpgradeArgs> nextUpgrade;

    /**
     * @return The pending firmware upgrade if it exists
     * 
     */
    public Optional<Output<FirmwareUpgradesProductsSwitchCatalystNextUpgradeArgs>> nextUpgrade() {
        return Optional.ofNullable(this.nextUpgrade);
    }

    /**
     * Whether or not the network wants beta firmware
     * 
     */
    @Import(name="participateInNextBetaRelease")
    private @Nullable Output<Boolean> participateInNextBetaRelease;

    /**
     * @return Whether or not the network wants beta firmware
     * 
     */
    public Optional<Output<Boolean>> participateInNextBetaRelease() {
        return Optional.ofNullable(this.participateInNextBetaRelease);
    }

    private FirmwareUpgradesProductsSwitchCatalystArgs() {}

    private FirmwareUpgradesProductsSwitchCatalystArgs(FirmwareUpgradesProductsSwitchCatalystArgs $) {
        this.nextUpgrade = $.nextUpgrade;
        this.participateInNextBetaRelease = $.participateInNextBetaRelease;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirmwareUpgradesProductsSwitchCatalystArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirmwareUpgradesProductsSwitchCatalystArgs $;

        public Builder() {
            $ = new FirmwareUpgradesProductsSwitchCatalystArgs();
        }

        public Builder(FirmwareUpgradesProductsSwitchCatalystArgs defaults) {
            $ = new FirmwareUpgradesProductsSwitchCatalystArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nextUpgrade The pending firmware upgrade if it exists
         * 
         * @return builder
         * 
         */
        public Builder nextUpgrade(@Nullable Output<FirmwareUpgradesProductsSwitchCatalystNextUpgradeArgs> nextUpgrade) {
            $.nextUpgrade = nextUpgrade;
            return this;
        }

        /**
         * @param nextUpgrade The pending firmware upgrade if it exists
         * 
         * @return builder
         * 
         */
        public Builder nextUpgrade(FirmwareUpgradesProductsSwitchCatalystNextUpgradeArgs nextUpgrade) {
            return nextUpgrade(Output.of(nextUpgrade));
        }

        /**
         * @param participateInNextBetaRelease Whether or not the network wants beta firmware
         * 
         * @return builder
         * 
         */
        public Builder participateInNextBetaRelease(@Nullable Output<Boolean> participateInNextBetaRelease) {
            $.participateInNextBetaRelease = participateInNextBetaRelease;
            return this;
        }

        /**
         * @param participateInNextBetaRelease Whether or not the network wants beta firmware
         * 
         * @return builder
         * 
         */
        public Builder participateInNextBetaRelease(Boolean participateInNextBetaRelease) {
            return participateInNextBetaRelease(Output.of(participateInNextBetaRelease));
        }

        public FirmwareUpgradesProductsSwitchCatalystArgs build() {
            return $;
        }
    }

}
