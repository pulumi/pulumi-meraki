// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClientsSplashAuthorizationStatusItemSsidsStatus0 {
    private String authorizedAt;
    private String expiresAt;
    private Boolean isAuthorized;

    private GetClientsSplashAuthorizationStatusItemSsidsStatus0() {}
    public String authorizedAt() {
        return this.authorizedAt;
    }
    public String expiresAt() {
        return this.expiresAt;
    }
    public Boolean isAuthorized() {
        return this.isAuthorized;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientsSplashAuthorizationStatusItemSsidsStatus0 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorizedAt;
        private String expiresAt;
        private Boolean isAuthorized;
        public Builder() {}
        public Builder(GetClientsSplashAuthorizationStatusItemSsidsStatus0 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedAt = defaults.authorizedAt;
    	      this.expiresAt = defaults.expiresAt;
    	      this.isAuthorized = defaults.isAuthorized;
        }

        @CustomType.Setter
        public Builder authorizedAt(String authorizedAt) {
            if (authorizedAt == null) {
              throw new MissingRequiredPropertyException("GetClientsSplashAuthorizationStatusItemSsidsStatus0", "authorizedAt");
            }
            this.authorizedAt = authorizedAt;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetClientsSplashAuthorizationStatusItemSsidsStatus0", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder isAuthorized(Boolean isAuthorized) {
            if (isAuthorized == null) {
              throw new MissingRequiredPropertyException("GetClientsSplashAuthorizationStatusItemSsidsStatus0", "isAuthorized");
            }
            this.isAuthorized = isAuthorized;
            return this;
        }
        public GetClientsSplashAuthorizationStatusItemSsidsStatus0 build() {
            final var _resultValue = new GetClientsSplashAuthorizationStatusItemSsidsStatus0();
            _resultValue.authorizedAt = authorizedAt;
            _resultValue.expiresAt = expiresAt;
            _resultValue.isAuthorized = isAuthorized;
            return _resultValue;
        }
    }
}
