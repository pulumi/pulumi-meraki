// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.networks.ClientsSplashAuthorizationStatusArgs;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusState;
import com.pulumi.meraki.networks.outputs.ClientsSplashAuthorizationStatusSsids;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.networks.ClientsSplashAuthorizationStatus;
 * import com.pulumi.meraki.networks.ClientsSplashAuthorizationStatusArgs;
 * import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ClientsSplashAuthorizationStatus("example", ClientsSplashAuthorizationStatusArgs.builder()
 *             .clientId("string")
 *             .networkId("string")
 *             .ssids(ClientsSplashAuthorizationStatusSsidsArgs.builder()
 *                 .status_0(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .status_2(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .build());
 * 
 *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example);
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:networks/clientsSplashAuthorizationStatus:ClientsSplashAuthorizationStatus example &#34;client_id,network_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:networks/clientsSplashAuthorizationStatus:ClientsSplashAuthorizationStatus")
public class ClientsSplashAuthorizationStatus extends com.pulumi.resources.CustomResource {
    /**
     * clientId path parameter. Client ID
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return clientId path parameter. Client ID
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * networkId path parameter. Network ID
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID&#39;s splash frequency. Not all networks support configuring all SSIDs
     * 
     */
    @Export(name="ssids", refs={ClientsSplashAuthorizationStatusSsids.class}, tree="[0]")
    private Output<ClientsSplashAuthorizationStatusSsids> ssids;

    /**
     * @return The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID&#39;s splash frequency. Not all networks support configuring all SSIDs
     * 
     */
    public Output<ClientsSplashAuthorizationStatusSsids> ssids() {
        return this.ssids;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClientsSplashAuthorizationStatus(java.lang.String name) {
        this(name, ClientsSplashAuthorizationStatusArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClientsSplashAuthorizationStatus(java.lang.String name, ClientsSplashAuthorizationStatusArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClientsSplashAuthorizationStatus(java.lang.String name, ClientsSplashAuthorizationStatusArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/clientsSplashAuthorizationStatus:ClientsSplashAuthorizationStatus", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ClientsSplashAuthorizationStatus(java.lang.String name, Output<java.lang.String> id, @Nullable ClientsSplashAuthorizationStatusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/clientsSplashAuthorizationStatus:ClientsSplashAuthorizationStatus", name, state, makeResourceOptions(options, id), false);
    }

    private static ClientsSplashAuthorizationStatusArgs makeArgs(ClientsSplashAuthorizationStatusArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClientsSplashAuthorizationStatusArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClientsSplashAuthorizationStatus get(java.lang.String name, Output<java.lang.String> id, @Nullable ClientsSplashAuthorizationStatusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClientsSplashAuthorizationStatus(name, id, state, options);
    }
}
