// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesRollbacksParametersReasonArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesRollbacksParametersToVersionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirmwareUpgradesRollbacksParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirmwareUpgradesRollbacksParametersArgs Empty = new FirmwareUpgradesRollbacksParametersArgs();

    /**
     * Product type to rollback (if the network is a combined network)
     * 
     */
    @Import(name="product")
    private @Nullable Output<String> product;

    /**
     * @return Product type to rollback (if the network is a combined network)
     * 
     */
    public Optional<Output<String>> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * Reasons for the rollback
     * 
     */
    @Import(name="reasons")
    private @Nullable Output<List<FirmwareUpgradesRollbacksParametersReasonArgs>> reasons;

    /**
     * @return Reasons for the rollback
     * 
     */
    public Optional<Output<List<FirmwareUpgradesRollbacksParametersReasonArgs>>> reasons() {
        return Optional.ofNullable(this.reasons);
    }

    /**
     * Scheduled time for the rollback
     * 
     */
    @Import(name="time")
    private @Nullable Output<String> time;

    /**
     * @return Scheduled time for the rollback
     * 
     */
    public Optional<Output<String>> time() {
        return Optional.ofNullable(this.time);
    }

    /**
     * Version to downgrade to (if the network has firmware flexibility)
     * 
     */
    @Import(name="toVersion")
    private @Nullable Output<FirmwareUpgradesRollbacksParametersToVersionArgs> toVersion;

    /**
     * @return Version to downgrade to (if the network has firmware flexibility)
     * 
     */
    public Optional<Output<FirmwareUpgradesRollbacksParametersToVersionArgs>> toVersion() {
        return Optional.ofNullable(this.toVersion);
    }

    private FirmwareUpgradesRollbacksParametersArgs() {}

    private FirmwareUpgradesRollbacksParametersArgs(FirmwareUpgradesRollbacksParametersArgs $) {
        this.product = $.product;
        this.reasons = $.reasons;
        this.time = $.time;
        this.toVersion = $.toVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirmwareUpgradesRollbacksParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirmwareUpgradesRollbacksParametersArgs $;

        public Builder() {
            $ = new FirmwareUpgradesRollbacksParametersArgs();
        }

        public Builder(FirmwareUpgradesRollbacksParametersArgs defaults) {
            $ = new FirmwareUpgradesRollbacksParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param product Product type to rollback (if the network is a combined network)
         * 
         * @return builder
         * 
         */
        public Builder product(@Nullable Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product Product type to rollback (if the network is a combined network)
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(@Nullable Output<List<FirmwareUpgradesRollbacksParametersReasonArgs>> reasons) {
            $.reasons = reasons;
            return this;
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(List<FirmwareUpgradesRollbacksParametersReasonArgs> reasons) {
            return reasons(Output.of(reasons));
        }

        /**
         * @param reasons Reasons for the rollback
         * 
         * @return builder
         * 
         */
        public Builder reasons(FirmwareUpgradesRollbacksParametersReasonArgs... reasons) {
            return reasons(List.of(reasons));
        }

        /**
         * @param time Scheduled time for the rollback
         * 
         * @return builder
         * 
         */
        public Builder time(@Nullable Output<String> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time Scheduled time for the rollback
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            return time(Output.of(time));
        }

        /**
         * @param toVersion Version to downgrade to (if the network has firmware flexibility)
         * 
         * @return builder
         * 
         */
        public Builder toVersion(@Nullable Output<FirmwareUpgradesRollbacksParametersToVersionArgs> toVersion) {
            $.toVersion = toVersion;
            return this;
        }

        /**
         * @param toVersion Version to downgrade to (if the network has firmware flexibility)
         * 
         * @return builder
         * 
         */
        public Builder toVersion(FirmwareUpgradesRollbacksParametersToVersionArgs toVersion) {
            return toVersion(Output.of(toVersion));
        }

        public FirmwareUpgradesRollbacksParametersArgs build() {
            return $;
        }
    }

}
