// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWirelessRfProfilesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWirelessRfProfilesPlainArgs Empty = new GetWirelessRfProfilesPlainArgs();

    /**
     * includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
     * 
     */
    @Import(name="includeTemplateProfiles")
    private @Nullable Boolean includeTemplateProfiles;

    /**
     * @return includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
     * 
     */
    public Optional<Boolean> includeTemplateProfiles() {
        return Optional.ofNullable(this.includeTemplateProfiles);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable String networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<String> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * rfProfileId path parameter. Rf profile ID
     * 
     */
    @Import(name="rfProfileId")
    private @Nullable String rfProfileId;

    /**
     * @return rfProfileId path parameter. Rf profile ID
     * 
     */
    public Optional<String> rfProfileId() {
        return Optional.ofNullable(this.rfProfileId);
    }

    private GetWirelessRfProfilesPlainArgs() {}

    private GetWirelessRfProfilesPlainArgs(GetWirelessRfProfilesPlainArgs $) {
        this.includeTemplateProfiles = $.includeTemplateProfiles;
        this.networkId = $.networkId;
        this.rfProfileId = $.rfProfileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWirelessRfProfilesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWirelessRfProfilesPlainArgs $;

        public Builder() {
            $ = new GetWirelessRfProfilesPlainArgs();
        }

        public Builder(GetWirelessRfProfilesPlainArgs defaults) {
            $ = new GetWirelessRfProfilesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeTemplateProfiles includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder includeTemplateProfiles(@Nullable Boolean includeTemplateProfiles) {
            $.includeTemplateProfiles = includeTemplateProfiles;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable String networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param rfProfileId rfProfileId path parameter. Rf profile ID
         * 
         * @return builder
         * 
         */
        public Builder rfProfileId(@Nullable String rfProfileId) {
            $.rfProfileId = rfProfileId;
            return this;
        }

        public GetWirelessRfProfilesPlainArgs build() {
            return $;
        }
    }

}
