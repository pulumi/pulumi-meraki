// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WirelessRfProfilesTwoFourGhzSettings {
    /**
     * @return Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
     * 
     */
    private @Nullable Boolean axEnabled;
    /**
     * @return Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    private @Nullable Integer maxPower;
    /**
     * @return Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of &#39;1&#39;, &#39;2&#39;, &#39;5.5&#39;, &#39;6&#39;, &#39;9&#39;, &#39;11&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 11.
     * 
     */
    private @Nullable Double minBitrate;
    /**
     * @return Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
     * 
     */
    private @Nullable Integer minPower;
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    private @Nullable Integer rxsop;
    /**
     * @return Sets valid auto channels for 2.4Ghz band. Can be one of &#39;1&#39;, &#39;6&#39; or &#39;11&#39;. Defaults to [1, 6, 11].
     * 
     */
    private @Nullable List<Integer> validAutoChannels;

    private WirelessRfProfilesTwoFourGhzSettings() {}
    /**
     * @return Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
     * 
     */
    public Optional<Boolean> axEnabled() {
        return Optional.ofNullable(this.axEnabled);
    }
    /**
     * @return Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
     * 
     */
    public Optional<Integer> maxPower() {
        return Optional.ofNullable(this.maxPower);
    }
    /**
     * @return Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of &#39;1&#39;, &#39;2&#39;, &#39;5.5&#39;, &#39;6&#39;, &#39;9&#39;, &#39;11&#39;, &#39;12&#39;, &#39;18&#39;, &#39;24&#39;, &#39;36&#39;, &#39;48&#39; or &#39;54&#39;. Defaults to 11.
     * 
     */
    public Optional<Double> minBitrate() {
        return Optional.ofNullable(this.minBitrate);
    }
    /**
     * @return Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
     * 
     */
    public Optional<Integer> minPower() {
        return Optional.ofNullable(this.minPower);
    }
    /**
     * @return The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
     * 
     */
    public Optional<Integer> rxsop() {
        return Optional.ofNullable(this.rxsop);
    }
    /**
     * @return Sets valid auto channels for 2.4Ghz band. Can be one of &#39;1&#39;, &#39;6&#39; or &#39;11&#39;. Defaults to [1, 6, 11].
     * 
     */
    public List<Integer> validAutoChannels() {
        return this.validAutoChannels == null ? List.of() : this.validAutoChannels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WirelessRfProfilesTwoFourGhzSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean axEnabled;
        private @Nullable Integer maxPower;
        private @Nullable Double minBitrate;
        private @Nullable Integer minPower;
        private @Nullable Integer rxsop;
        private @Nullable List<Integer> validAutoChannels;
        public Builder() {}
        public Builder(WirelessRfProfilesTwoFourGhzSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.axEnabled = defaults.axEnabled;
    	      this.maxPower = defaults.maxPower;
    	      this.minBitrate = defaults.minBitrate;
    	      this.minPower = defaults.minPower;
    	      this.rxsop = defaults.rxsop;
    	      this.validAutoChannels = defaults.validAutoChannels;
        }

        @CustomType.Setter
        public Builder axEnabled(@Nullable Boolean axEnabled) {

            this.axEnabled = axEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxPower(@Nullable Integer maxPower) {

            this.maxPower = maxPower;
            return this;
        }
        @CustomType.Setter
        public Builder minBitrate(@Nullable Double minBitrate) {

            this.minBitrate = minBitrate;
            return this;
        }
        @CustomType.Setter
        public Builder minPower(@Nullable Integer minPower) {

            this.minPower = minPower;
            return this;
        }
        @CustomType.Setter
        public Builder rxsop(@Nullable Integer rxsop) {

            this.rxsop = rxsop;
            return this;
        }
        @CustomType.Setter
        public Builder validAutoChannels(@Nullable List<Integer> validAutoChannels) {

            this.validAutoChannels = validAutoChannels;
            return this;
        }
        public Builder validAutoChannels(Integer... validAutoChannels) {
            return validAutoChannels(List.of(validAutoChannels));
        }
        public WirelessRfProfilesTwoFourGhzSettings build() {
            final var _resultValue = new WirelessRfProfilesTwoFourGhzSettings();
            _resultValue.axEnabled = axEnabled;
            _resultValue.maxPower = maxPower;
            _resultValue.minBitrate = minBitrate;
            _resultValue.minPower = minPower;
            _resultValue.rxsop = rxsop;
            _resultValue.validAutoChannels = validAutoChannels;
            return _resultValue;
        }
    }
}
