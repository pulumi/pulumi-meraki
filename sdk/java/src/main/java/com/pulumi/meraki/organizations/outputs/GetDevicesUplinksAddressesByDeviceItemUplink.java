// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetDevicesUplinksAddressesByDeviceItemUplinkAddress;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDevicesUplinksAddressesByDeviceItemUplink {
    /**
     * @return Available addresses for the interface.
     * 
     */
    private List<GetDevicesUplinksAddressesByDeviceItemUplinkAddress> addresses;
    /**
     * @return Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
     * 
     */
    private String interface_;

    private GetDevicesUplinksAddressesByDeviceItemUplink() {}
    /**
     * @return Available addresses for the interface.
     * 
     */
    public List<GetDevicesUplinksAddressesByDeviceItemUplinkAddress> addresses() {
        return this.addresses;
    }
    /**
     * @return Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
     * 
     */
    public String interface_() {
        return this.interface_;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesUplinksAddressesByDeviceItemUplink defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDevicesUplinksAddressesByDeviceItemUplinkAddress> addresses;
        private String interface_;
        public Builder() {}
        public Builder(GetDevicesUplinksAddressesByDeviceItemUplink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.interface_ = defaults.interface_;
        }

        @CustomType.Setter
        public Builder addresses(List<GetDevicesUplinksAddressesByDeviceItemUplinkAddress> addresses) {
            if (addresses == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksAddressesByDeviceItemUplink", "addresses");
            }
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(GetDevicesUplinksAddressesByDeviceItemUplinkAddress... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksAddressesByDeviceItemUplink", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        public GetDevicesUplinksAddressesByDeviceItemUplink build() {
            final var _resultValue = new GetDevicesUplinksAddressesByDeviceItemUplink();
            _resultValue.addresses = addresses;
            _resultValue.interface_ = interface_;
            return _resultValue;
        }
    }
}
