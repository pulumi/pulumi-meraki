// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.administered.outputs.GetLicensingSubscriptionSubscriptionsItemCounts;
import com.pulumi.meraki.administered.outputs.GetLicensingSubscriptionSubscriptionsItemEntitlement;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLicensingSubscriptionSubscriptionsItem {
    /**
     * @return Numeric breakdown of network and entitlement counts
     * 
     */
    private GetLicensingSubscriptionSubscriptionsItemCounts counts;
    /**
     * @return Subscription description
     * 
     */
    private String description;
    /**
     * @return Subscription expiration date
     * 
     */
    private String endDate;
    /**
     * @return Entitlement info
     * 
     */
    private List<GetLicensingSubscriptionSubscriptionsItemEntitlement> entitlements;
    /**
     * @return Subscription name
     * 
     */
    private String name;
    /**
     * @return Products the subscription has entitlements for
     * 
     */
    private List<String> productTypes;
    /**
     * @return Subscription start date
     * 
     */
    private String startDate;
    /**
     * @return Subscription status
     * 
     */
    private String status;
    /**
     * @return Subscription&#39;s ID
     * 
     */
    private String subscriptionId;
    /**
     * @return Web order id
     * 
     */
    private String webOrderId;

    private GetLicensingSubscriptionSubscriptionsItem() {}
    /**
     * @return Numeric breakdown of network and entitlement counts
     * 
     */
    public GetLicensingSubscriptionSubscriptionsItemCounts counts() {
        return this.counts;
    }
    /**
     * @return Subscription description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Subscription expiration date
     * 
     */
    public String endDate() {
        return this.endDate;
    }
    /**
     * @return Entitlement info
     * 
     */
    public List<GetLicensingSubscriptionSubscriptionsItemEntitlement> entitlements() {
        return this.entitlements;
    }
    /**
     * @return Subscription name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Products the subscription has entitlements for
     * 
     */
    public List<String> productTypes() {
        return this.productTypes;
    }
    /**
     * @return Subscription start date
     * 
     */
    public String startDate() {
        return this.startDate;
    }
    /**
     * @return Subscription status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Subscription&#39;s ID
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Web order id
     * 
     */
    public String webOrderId() {
        return this.webOrderId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicensingSubscriptionSubscriptionsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetLicensingSubscriptionSubscriptionsItemCounts counts;
        private String description;
        private String endDate;
        private List<GetLicensingSubscriptionSubscriptionsItemEntitlement> entitlements;
        private String name;
        private List<String> productTypes;
        private String startDate;
        private String status;
        private String subscriptionId;
        private String webOrderId;
        public Builder() {}
        public Builder(GetLicensingSubscriptionSubscriptionsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.counts = defaults.counts;
    	      this.description = defaults.description;
    	      this.endDate = defaults.endDate;
    	      this.entitlements = defaults.entitlements;
    	      this.name = defaults.name;
    	      this.productTypes = defaults.productTypes;
    	      this.startDate = defaults.startDate;
    	      this.status = defaults.status;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.webOrderId = defaults.webOrderId;
        }

        @CustomType.Setter
        public Builder counts(GetLicensingSubscriptionSubscriptionsItemCounts counts) {
            if (counts == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "counts");
            }
            this.counts = counts;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endDate(String endDate) {
            if (endDate == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "endDate");
            }
            this.endDate = endDate;
            return this;
        }
        @CustomType.Setter
        public Builder entitlements(List<GetLicensingSubscriptionSubscriptionsItemEntitlement> entitlements) {
            if (entitlements == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "entitlements");
            }
            this.entitlements = entitlements;
            return this;
        }
        public Builder entitlements(GetLicensingSubscriptionSubscriptionsItemEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder productTypes(List<String> productTypes) {
            if (productTypes == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "productTypes");
            }
            this.productTypes = productTypes;
            return this;
        }
        public Builder productTypes(String... productTypes) {
            return productTypes(List.of(productTypes));
        }
        @CustomType.Setter
        public Builder startDate(String startDate) {
            if (startDate == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "startDate");
            }
            this.startDate = startDate;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder webOrderId(String webOrderId) {
            if (webOrderId == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionSubscriptionsItem", "webOrderId");
            }
            this.webOrderId = webOrderId;
            return this;
        }
        public GetLicensingSubscriptionSubscriptionsItem build() {
            final var _resultValue = new GetLicensingSubscriptionSubscriptionsItem();
            _resultValue.counts = counts;
            _resultValue.description = description;
            _resultValue.endDate = endDate;
            _resultValue.entitlements = entitlements;
            _resultValue.name = name;
            _resultValue.productTypes = productTypes;
            _resultValue.startDate = startDate;
            _resultValue.status = status;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.webOrderId = webOrderId;
            return _resultValue;
        }
    }
}
