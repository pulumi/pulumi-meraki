// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesProductsSwitchAvailableVersionArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesProductsSwitchCurrentVersionArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesProductsSwitchLastUpgradeArgs;
import com.pulumi.meraki.networks.inputs.FirmwareUpgradesProductsSwitchNextUpgradeArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirmwareUpgradesProductsSwitchArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirmwareUpgradesProductsSwitchArgs Empty = new FirmwareUpgradesProductsSwitchArgs();

    /**
     * Firmware versions available for upgrade
     * 
     */
    @Import(name="availableVersions")
    private @Nullable Output<List<FirmwareUpgradesProductsSwitchAvailableVersionArgs>> availableVersions;

    /**
     * @return Firmware versions available for upgrade
     * 
     */
    public Optional<Output<List<FirmwareUpgradesProductsSwitchAvailableVersionArgs>>> availableVersions() {
        return Optional.ofNullable(this.availableVersions);
    }

    /**
     * Details of the current version on the device
     * 
     */
    @Import(name="currentVersion")
    private @Nullable Output<FirmwareUpgradesProductsSwitchCurrentVersionArgs> currentVersion;

    /**
     * @return Details of the current version on the device
     * 
     */
    public Optional<Output<FirmwareUpgradesProductsSwitchCurrentVersionArgs>> currentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }

    /**
     * Details of the last firmware upgrade on the device
     * 
     */
    @Import(name="lastUpgrade")
    private @Nullable Output<FirmwareUpgradesProductsSwitchLastUpgradeArgs> lastUpgrade;

    /**
     * @return Details of the last firmware upgrade on the device
     * 
     */
    public Optional<Output<FirmwareUpgradesProductsSwitchLastUpgradeArgs>> lastUpgrade() {
        return Optional.ofNullable(this.lastUpgrade);
    }

    /**
     * Details of the next firmware upgrade on the device
     * 
     */
    @Import(name="nextUpgrade")
    private @Nullable Output<FirmwareUpgradesProductsSwitchNextUpgradeArgs> nextUpgrade;

    /**
     * @return Details of the next firmware upgrade on the device
     * 
     */
    public Optional<Output<FirmwareUpgradesProductsSwitchNextUpgradeArgs>> nextUpgrade() {
        return Optional.ofNullable(this.nextUpgrade);
    }

    /**
     * Whether or not the network wants beta firmware
     * 
     */
    @Import(name="participateInNextBetaRelease")
    private @Nullable Output<Boolean> participateInNextBetaRelease;

    /**
     * @return Whether or not the network wants beta firmware
     * 
     */
    public Optional<Output<Boolean>> participateInNextBetaRelease() {
        return Optional.ofNullable(this.participateInNextBetaRelease);
    }

    private FirmwareUpgradesProductsSwitchArgs() {}

    private FirmwareUpgradesProductsSwitchArgs(FirmwareUpgradesProductsSwitchArgs $) {
        this.availableVersions = $.availableVersions;
        this.currentVersion = $.currentVersion;
        this.lastUpgrade = $.lastUpgrade;
        this.nextUpgrade = $.nextUpgrade;
        this.participateInNextBetaRelease = $.participateInNextBetaRelease;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirmwareUpgradesProductsSwitchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirmwareUpgradesProductsSwitchArgs $;

        public Builder() {
            $ = new FirmwareUpgradesProductsSwitchArgs();
        }

        public Builder(FirmwareUpgradesProductsSwitchArgs defaults) {
            $ = new FirmwareUpgradesProductsSwitchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availableVersions Firmware versions available for upgrade
         * 
         * @return builder
         * 
         */
        public Builder availableVersions(@Nullable Output<List<FirmwareUpgradesProductsSwitchAvailableVersionArgs>> availableVersions) {
            $.availableVersions = availableVersions;
            return this;
        }

        /**
         * @param availableVersions Firmware versions available for upgrade
         * 
         * @return builder
         * 
         */
        public Builder availableVersions(List<FirmwareUpgradesProductsSwitchAvailableVersionArgs> availableVersions) {
            return availableVersions(Output.of(availableVersions));
        }

        /**
         * @param availableVersions Firmware versions available for upgrade
         * 
         * @return builder
         * 
         */
        public Builder availableVersions(FirmwareUpgradesProductsSwitchAvailableVersionArgs... availableVersions) {
            return availableVersions(List.of(availableVersions));
        }

        /**
         * @param currentVersion Details of the current version on the device
         * 
         * @return builder
         * 
         */
        public Builder currentVersion(@Nullable Output<FirmwareUpgradesProductsSwitchCurrentVersionArgs> currentVersion) {
            $.currentVersion = currentVersion;
            return this;
        }

        /**
         * @param currentVersion Details of the current version on the device
         * 
         * @return builder
         * 
         */
        public Builder currentVersion(FirmwareUpgradesProductsSwitchCurrentVersionArgs currentVersion) {
            return currentVersion(Output.of(currentVersion));
        }

        /**
         * @param lastUpgrade Details of the last firmware upgrade on the device
         * 
         * @return builder
         * 
         */
        public Builder lastUpgrade(@Nullable Output<FirmwareUpgradesProductsSwitchLastUpgradeArgs> lastUpgrade) {
            $.lastUpgrade = lastUpgrade;
            return this;
        }

        /**
         * @param lastUpgrade Details of the last firmware upgrade on the device
         * 
         * @return builder
         * 
         */
        public Builder lastUpgrade(FirmwareUpgradesProductsSwitchLastUpgradeArgs lastUpgrade) {
            return lastUpgrade(Output.of(lastUpgrade));
        }

        /**
         * @param nextUpgrade Details of the next firmware upgrade on the device
         * 
         * @return builder
         * 
         */
        public Builder nextUpgrade(@Nullable Output<FirmwareUpgradesProductsSwitchNextUpgradeArgs> nextUpgrade) {
            $.nextUpgrade = nextUpgrade;
            return this;
        }

        /**
         * @param nextUpgrade Details of the next firmware upgrade on the device
         * 
         * @return builder
         * 
         */
        public Builder nextUpgrade(FirmwareUpgradesProductsSwitchNextUpgradeArgs nextUpgrade) {
            return nextUpgrade(Output.of(nextUpgrade));
        }

        /**
         * @param participateInNextBetaRelease Whether or not the network wants beta firmware
         * 
         * @return builder
         * 
         */
        public Builder participateInNextBetaRelease(@Nullable Output<Boolean> participateInNextBetaRelease) {
            $.participateInNextBetaRelease = participateInNextBetaRelease;
            return this;
        }

        /**
         * @param participateInNextBetaRelease Whether or not the network wants beta firmware
         * 
         * @return builder
         * 
         */
        public Builder participateInNextBetaRelease(Boolean participateInNextBetaRelease) {
            return participateInNextBetaRelease(Output.of(participateInNextBetaRelease));
        }

        public FirmwareUpgradesProductsSwitchArgs build() {
            return $;
        }
    }

}
