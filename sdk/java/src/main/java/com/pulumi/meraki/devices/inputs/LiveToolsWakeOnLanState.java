// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.LiveToolsWakeOnLanCallbackArgs;
import com.pulumi.meraki.devices.inputs.LiveToolsWakeOnLanRequestArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LiveToolsWakeOnLanState extends com.pulumi.resources.ResourceArgs {

    public static final LiveToolsWakeOnLanState Empty = new LiveToolsWakeOnLanState();

    /**
     * Details for the callback. Please include either an httpServerId OR url and sharedSecret
     * 
     */
    @Import(name="callback")
    private @Nullable Output<LiveToolsWakeOnLanCallbackArgs> callback;

    /**
     * @return Details for the callback. Please include either an httpServerId OR url and sharedSecret
     * 
     */
    public Optional<Output<LiveToolsWakeOnLanCallbackArgs>> callback() {
        return Optional.ofNullable(this.callback);
    }

    /**
     * An error message for a failed execution
     * 
     */
    @Import(name="error")
    private @Nullable Output<String> error;

    /**
     * @return An error message for a failed execution
     * 
     */
    public Optional<Output<String>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * The target&#39;s MAC address
     * 
     */
    @Import(name="mac")
    private @Nullable Output<String> mac;

    /**
     * @return The target&#39;s MAC address
     * 
     */
    public Optional<Output<String>> mac() {
        return Optional.ofNullable(this.mac);
    }

    /**
     * The parameters of the Wake-on-LAN request
     * 
     */
    @Import(name="request")
    private @Nullable Output<LiveToolsWakeOnLanRequestArgs> request;

    /**
     * @return The parameters of the Wake-on-LAN request
     * 
     */
    public Optional<Output<LiveToolsWakeOnLanRequestArgs>> request() {
        return Optional.ofNullable(this.request);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * Status of the Wake-on-LAN request
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the Wake-on-LAN request
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * GET this url to check the status of your ping request
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return GET this url to check the status of your ping request
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * The target&#39;s VLAN (1 to 4094)
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    /**
     * @return The target&#39;s VLAN (1 to 4094)
     * 
     */
    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    /**
     * ID of the Wake-on-LAN job
     * 
     */
    @Import(name="wakeOnLanId")
    private @Nullable Output<String> wakeOnLanId;

    /**
     * @return ID of the Wake-on-LAN job
     * 
     */
    public Optional<Output<String>> wakeOnLanId() {
        return Optional.ofNullable(this.wakeOnLanId);
    }

    private LiveToolsWakeOnLanState() {}

    private LiveToolsWakeOnLanState(LiveToolsWakeOnLanState $) {
        this.callback = $.callback;
        this.error = $.error;
        this.mac = $.mac;
        this.request = $.request;
        this.serial = $.serial;
        this.status = $.status;
        this.url = $.url;
        this.vlanId = $.vlanId;
        this.wakeOnLanId = $.wakeOnLanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiveToolsWakeOnLanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiveToolsWakeOnLanState $;

        public Builder() {
            $ = new LiveToolsWakeOnLanState();
        }

        public Builder(LiveToolsWakeOnLanState defaults) {
            $ = new LiveToolsWakeOnLanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param callback Details for the callback. Please include either an httpServerId OR url and sharedSecret
         * 
         * @return builder
         * 
         */
        public Builder callback(@Nullable Output<LiveToolsWakeOnLanCallbackArgs> callback) {
            $.callback = callback;
            return this;
        }

        /**
         * @param callback Details for the callback. Please include either an httpServerId OR url and sharedSecret
         * 
         * @return builder
         * 
         */
        public Builder callback(LiveToolsWakeOnLanCallbackArgs callback) {
            return callback(Output.of(callback));
        }

        /**
         * @param error An error message for a failed execution
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable Output<String> error) {
            $.error = error;
            return this;
        }

        /**
         * @param error An error message for a failed execution
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            return error(Output.of(error));
        }

        /**
         * @param mac The target&#39;s MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(@Nullable Output<String> mac) {
            $.mac = mac;
            return this;
        }

        /**
         * @param mac The target&#39;s MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        /**
         * @param request The parameters of the Wake-on-LAN request
         * 
         * @return builder
         * 
         */
        public Builder request(@Nullable Output<LiveToolsWakeOnLanRequestArgs> request) {
            $.request = request;
            return this;
        }

        /**
         * @param request The parameters of the Wake-on-LAN request
         * 
         * @return builder
         * 
         */
        public Builder request(LiveToolsWakeOnLanRequestArgs request) {
            return request(Output.of(request));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param status Status of the Wake-on-LAN request
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the Wake-on-LAN request
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param url GET this url to check the status of your ping request
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url GET this url to check the status of your ping request
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param vlanId The target&#39;s VLAN (1 to 4094)
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId The target&#39;s VLAN (1 to 4094)
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        /**
         * @param wakeOnLanId ID of the Wake-on-LAN job
         * 
         * @return builder
         * 
         */
        public Builder wakeOnLanId(@Nullable Output<String> wakeOnLanId) {
            $.wakeOnLanId = wakeOnLanId;
            return this;
        }

        /**
         * @param wakeOnLanId ID of the Wake-on-LAN job
         * 
         * @return builder
         * 
         */
        public Builder wakeOnLanId(String wakeOnLanId) {
            return wakeOnLanId(Output.of(wakeOnLanId));
        }

        public LiveToolsWakeOnLanState build() {
            return $;
        }
    }

}
