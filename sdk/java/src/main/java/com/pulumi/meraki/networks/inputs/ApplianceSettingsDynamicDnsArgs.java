// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplianceSettingsDynamicDnsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplianceSettingsDynamicDnsArgs Empty = new ApplianceSettingsDynamicDnsArgs();

    /**
     * Dynamic DNS enabled
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Dynamic DNS enabled
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Dynamic DNS url prefix. DDNS must be enabled to update
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Dynamic DNS url prefix. DDNS must be enabled to update
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Dynamic DNS url. DDNS must be enabled to update
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return Dynamic DNS url. DDNS must be enabled to update
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private ApplianceSettingsDynamicDnsArgs() {}

    private ApplianceSettingsDynamicDnsArgs(ApplianceSettingsDynamicDnsArgs $) {
        this.enabled = $.enabled;
        this.prefix = $.prefix;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceSettingsDynamicDnsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceSettingsDynamicDnsArgs $;

        public Builder() {
            $ = new ApplianceSettingsDynamicDnsArgs();
        }

        public Builder(ApplianceSettingsDynamicDnsArgs defaults) {
            $ = new ApplianceSettingsDynamicDnsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Dynamic DNS enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Dynamic DNS enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param prefix Dynamic DNS url prefix. DDNS must be enabled to update
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Dynamic DNS url prefix. DDNS must be enabled to update
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param url Dynamic DNS url. DDNS must be enabled to update
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Dynamic DNS url. DDNS must be enabled to update
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public ApplianceSettingsDynamicDnsArgs build() {
            return $;
        }
    }

}
