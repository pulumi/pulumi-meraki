// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.devices.outputs.LiveToolsCableResultPair;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LiveToolsCableResult {
    /**
     * @return If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    private @Nullable String error;
    /**
     * @return Results for each twisted pair within the cable.
     * 
     */
    private @Nullable List<LiveToolsCableResultPair> pairs;
    /**
     * @return The port for which the test was performed.
     * 
     */
    private @Nullable String port;
    /**
     * @return Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    private @Nullable Integer speedMbps;
    /**
     * @return The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    private @Nullable String status;

    private LiveToolsCableResult() {}
    /**
     * @return If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    public Optional<String> error() {
        return Optional.ofNullable(this.error);
    }
    /**
     * @return Results for each twisted pair within the cable.
     * 
     */
    public List<LiveToolsCableResultPair> pairs() {
        return this.pairs == null ? List.of() : this.pairs;
    }
    /**
     * @return The port for which the test was performed.
     * 
     */
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    public Optional<Integer> speedMbps() {
        return Optional.ofNullable(this.speedMbps);
    }
    /**
     * @return The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LiveToolsCableResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String error;
        private @Nullable List<LiveToolsCableResultPair> pairs;
        private @Nullable String port;
        private @Nullable Integer speedMbps;
        private @Nullable String status;
        public Builder() {}
        public Builder(LiveToolsCableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.error = defaults.error;
    	      this.pairs = defaults.pairs;
    	      this.port = defaults.port;
    	      this.speedMbps = defaults.speedMbps;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder error(@Nullable String error) {

            this.error = error;
            return this;
        }
        @CustomType.Setter
        public Builder pairs(@Nullable List<LiveToolsCableResultPair> pairs) {

            this.pairs = pairs;
            return this;
        }
        public Builder pairs(LiveToolsCableResultPair... pairs) {
            return pairs(List.of(pairs));
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder speedMbps(@Nullable Integer speedMbps) {

            this.speedMbps = speedMbps;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public LiveToolsCableResult build() {
            final var _resultValue = new LiveToolsCableResult();
            _resultValue.error = error;
            _resultValue.pairs = pairs;
            _resultValue.port = port;
            _resultValue.speedMbps = speedMbps;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
