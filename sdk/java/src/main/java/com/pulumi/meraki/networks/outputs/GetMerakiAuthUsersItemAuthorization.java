// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMerakiAuthUsersItemAuthorization {
    /**
     * @return User is authorized by the account email address
     * 
     */
    private String authorizedByEmail;
    /**
     * @return User is authorized by the account name
     * 
     */
    private String authorizedByName;
    /**
     * @return Authorized zone of the user
     * 
     */
    private String authorizedZone;
    /**
     * @return Authorization expiration time
     * 
     */
    private String expiresAt;
    /**
     * @return SSID number
     * 
     */
    private Integer ssidNumber;

    private GetMerakiAuthUsersItemAuthorization() {}
    /**
     * @return User is authorized by the account email address
     * 
     */
    public String authorizedByEmail() {
        return this.authorizedByEmail;
    }
    /**
     * @return User is authorized by the account name
     * 
     */
    public String authorizedByName() {
        return this.authorizedByName;
    }
    /**
     * @return Authorized zone of the user
     * 
     */
    public String authorizedZone() {
        return this.authorizedZone;
    }
    /**
     * @return Authorization expiration time
     * 
     */
    public String expiresAt() {
        return this.expiresAt;
    }
    /**
     * @return SSID number
     * 
     */
    public Integer ssidNumber() {
        return this.ssidNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMerakiAuthUsersItemAuthorization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorizedByEmail;
        private String authorizedByName;
        private String authorizedZone;
        private String expiresAt;
        private Integer ssidNumber;
        public Builder() {}
        public Builder(GetMerakiAuthUsersItemAuthorization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedByEmail = defaults.authorizedByEmail;
    	      this.authorizedByName = defaults.authorizedByName;
    	      this.authorizedZone = defaults.authorizedZone;
    	      this.expiresAt = defaults.expiresAt;
    	      this.ssidNumber = defaults.ssidNumber;
        }

        @CustomType.Setter
        public Builder authorizedByEmail(String authorizedByEmail) {
            if (authorizedByEmail == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItemAuthorization", "authorizedByEmail");
            }
            this.authorizedByEmail = authorizedByEmail;
            return this;
        }
        @CustomType.Setter
        public Builder authorizedByName(String authorizedByName) {
            if (authorizedByName == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItemAuthorization", "authorizedByName");
            }
            this.authorizedByName = authorizedByName;
            return this;
        }
        @CustomType.Setter
        public Builder authorizedZone(String authorizedZone) {
            if (authorizedZone == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItemAuthorization", "authorizedZone");
            }
            this.authorizedZone = authorizedZone;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItemAuthorization", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder ssidNumber(Integer ssidNumber) {
            if (ssidNumber == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItemAuthorization", "ssidNumber");
            }
            this.ssidNumber = ssidNumber;
            return this;
        }
        public GetMerakiAuthUsersItemAuthorization build() {
            final var _resultValue = new GetMerakiAuthUsersItemAuthorization();
            _resultValue.authorizedByEmail = authorizedByEmail;
            _resultValue.authorizedByName = authorizedByName;
            _resultValue.authorizedZone = authorizedZone;
            _resultValue.expiresAt = expiresAt;
            _resultValue.ssidNumber = ssidNumber;
            return _resultValue;
        }
    }
}
