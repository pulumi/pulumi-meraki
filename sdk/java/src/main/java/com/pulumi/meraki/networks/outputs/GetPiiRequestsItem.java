// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPiiRequestsItem {
    /**
     * @return The request&#39;s completion time
     * 
     */
    private Integer completedAt;
    /**
     * @return The request&#39;s creation time
     * 
     */
    private Integer createdAt;
    /**
     * @return The stringified array of datasets related to the provided key that should be deleted.
     * 
     */
    private String datasets;
    /**
     * @return The network or organization identifier
     * 
     */
    private String id;
    /**
     * @return The MAC address of the PII request
     * 
     */
    private String mac;
    /**
     * @return The network identifier
     * 
     */
    private String networkId;
    /**
     * @return If the data returned is organization-wide. False indicates the data is network-wide.
     * 
     */
    private Boolean organizationWide;
    /**
     * @return The status of the PII request
     * 
     */
    private String status;
    /**
     * @return The type of PII request
     * 
     */
    private String type;

    private GetPiiRequestsItem() {}
    /**
     * @return The request&#39;s completion time
     * 
     */
    public Integer completedAt() {
        return this.completedAt;
    }
    /**
     * @return The request&#39;s creation time
     * 
     */
    public Integer createdAt() {
        return this.createdAt;
    }
    /**
     * @return The stringified array of datasets related to the provided key that should be deleted.
     * 
     */
    public String datasets() {
        return this.datasets;
    }
    /**
     * @return The network or organization identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The MAC address of the PII request
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return The network identifier
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return If the data returned is organization-wide. False indicates the data is network-wide.
     * 
     */
    public Boolean organizationWide() {
        return this.organizationWide;
    }
    /**
     * @return The status of the PII request
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The type of PII request
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPiiRequestsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer completedAt;
        private Integer createdAt;
        private String datasets;
        private String id;
        private String mac;
        private String networkId;
        private Boolean organizationWide;
        private String status;
        private String type;
        public Builder() {}
        public Builder(GetPiiRequestsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completedAt = defaults.completedAt;
    	      this.createdAt = defaults.createdAt;
    	      this.datasets = defaults.datasets;
    	      this.id = defaults.id;
    	      this.mac = defaults.mac;
    	      this.networkId = defaults.networkId;
    	      this.organizationWide = defaults.organizationWide;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder completedAt(Integer completedAt) {
            if (completedAt == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "completedAt");
            }
            this.completedAt = completedAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(Integer createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder datasets(String datasets) {
            if (datasets == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "datasets");
            }
            this.datasets = datasets;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder organizationWide(Boolean organizationWide) {
            if (organizationWide == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "organizationWide");
            }
            this.organizationWide = organizationWide;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPiiRequestsItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetPiiRequestsItem build() {
            final var _resultValue = new GetPiiRequestsItem();
            _resultValue.completedAt = completedAt;
            _resultValue.createdAt = createdAt;
            _resultValue.datasets = datasets;
            _resultValue.id = id;
            _resultValue.mac = mac;
            _resultValue.networkId = networkId;
            _resultValue.organizationWide = organizationWide;
            _resultValue.status = status;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
