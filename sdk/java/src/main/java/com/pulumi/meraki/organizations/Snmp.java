// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.organizations.SnmpArgs;
import com.pulumi.meraki.organizations.inputs.SnmpState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.organizations.Snmp;
 * import com.pulumi.meraki.organizations.SnmpArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Snmp("example", SnmpArgs.builder()
 *             .organizationId("string")
 *             .peerIps("123.123.123.1")
 *             .v2cEnabled(false)
 *             .v3AuthMode("SHA")
 *             .v3AuthPass("password")
 *             .v3Enabled(true)
 *             .v3PrivMode("AES128")
 *             .v3PrivPass("password")
 *             .build());
 * 
 *         ctx.export("merakiOrganizationsSnmpExample", example);
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:organizations/snmp:Snmp example &#34;organization_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:organizations/snmp:Snmp")
public class Snmp extends com.pulumi.resources.CustomResource {
    /**
     * The hostname of the SNMP server.
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return The hostname of the SNMP server.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The list of IPv4 addresses that are allowed to access the SNMP server.
     * 
     */
    @Export(name="peerIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> peerIps;

    /**
     * @return The list of IPv4 addresses that are allowed to access the SNMP server.
     * 
     */
    public Output<List<String>> peerIps() {
        return this.peerIps;
    }
    /**
     * The port of the SNMP server.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return The port of the SNMP server.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The community string for SNMP version 2c, if enabled.
     * 
     */
    @Export(name="v2CommunityString", refs={String.class}, tree="[0]")
    private Output<String> v2CommunityString;

    /**
     * @return The community string for SNMP version 2c, if enabled.
     * 
     */
    public Output<String> v2CommunityString() {
        return this.v2CommunityString;
    }
    /**
     * Boolean indicating whether SNMP version 2c is enabled for the organization.
     * 
     */
    @Export(name="v2cEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> v2cEnabled;

    /**
     * @return Boolean indicating whether SNMP version 2c is enabled for the organization.
     * 
     */
    public Output<Boolean> v2cEnabled() {
        return this.v2cEnabled;
    }
    /**
     * The SNMP version 3 authentication mode. Can be either &#39;MD5&#39; or &#39;SHA&#39;.
     * 
     */
    @Export(name="v3AuthMode", refs={String.class}, tree="[0]")
    private Output<String> v3AuthMode;

    /**
     * @return The SNMP version 3 authentication mode. Can be either &#39;MD5&#39; or &#39;SHA&#39;.
     * 
     */
    public Output<String> v3AuthMode() {
        return this.v3AuthMode;
    }
    /**
     * The SNMP version 3 authentication password. Must be at least 8 characters if specified.
     * 
     */
    @Export(name="v3AuthPass", refs={String.class}, tree="[0]")
    private Output<String> v3AuthPass;

    /**
     * @return The SNMP version 3 authentication password. Must be at least 8 characters if specified.
     * 
     */
    public Output<String> v3AuthPass() {
        return this.v3AuthPass;
    }
    /**
     * Boolean indicating whether SNMP version 3 is enabled for the organization.
     * 
     */
    @Export(name="v3Enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> v3Enabled;

    /**
     * @return Boolean indicating whether SNMP version 3 is enabled for the organization.
     * 
     */
    public Output<Boolean> v3Enabled() {
        return this.v3Enabled;
    }
    /**
     * The SNMP version 3 privacy mode. Can be either &#39;DES&#39; or &#39;AES128&#39;.
     * 
     */
    @Export(name="v3PrivMode", refs={String.class}, tree="[0]")
    private Output<String> v3PrivMode;

    /**
     * @return The SNMP version 3 privacy mode. Can be either &#39;DES&#39; or &#39;AES128&#39;.
     * 
     */
    public Output<String> v3PrivMode() {
        return this.v3PrivMode;
    }
    /**
     * The SNMP version 3 privacy password. Must be at least 8 characters if specified.
     * 
     */
    @Export(name="v3PrivPass", refs={String.class}, tree="[0]")
    private Output<String> v3PrivPass;

    /**
     * @return The SNMP version 3 privacy password. Must be at least 8 characters if specified.
     * 
     */
    public Output<String> v3PrivPass() {
        return this.v3PrivPass;
    }
    /**
     * The user for SNMP version 3, if enabled.
     * 
     */
    @Export(name="v3User", refs={String.class}, tree="[0]")
    private Output<String> v3User;

    /**
     * @return The user for SNMP version 3, if enabled.
     * 
     */
    public Output<String> v3User() {
        return this.v3User;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Snmp(java.lang.String name) {
        this(name, SnmpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Snmp(java.lang.String name, SnmpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Snmp(java.lang.String name, SnmpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/snmp:Snmp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Snmp(java.lang.String name, Output<java.lang.String> id, @Nullable SnmpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/snmp:Snmp", name, state, makeResourceOptions(options, id), false);
    }

    private static SnmpArgs makeArgs(SnmpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnmpArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Snmp get(java.lang.String name, Output<java.lang.String> id, @Nullable SnmpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Snmp(name, id, state, options);
    }
}
