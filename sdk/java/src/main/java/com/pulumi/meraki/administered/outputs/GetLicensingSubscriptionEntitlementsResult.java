// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.administered.outputs.GetLicensingSubscriptionEntitlementsItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetLicensingSubscriptionEntitlementsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private GetLicensingSubscriptionEntitlementsItem item;
    /**
     * @return skus query parameter. Filter to entitlements with the specified SKUs
     * 
     */
    private @Nullable List<String> skuses;

    private GetLicensingSubscriptionEntitlementsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public GetLicensingSubscriptionEntitlementsItem item() {
        return this.item;
    }
    /**
     * @return skus query parameter. Filter to entitlements with the specified SKUs
     * 
     */
    public List<String> skuses() {
        return this.skuses == null ? List.of() : this.skuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicensingSubscriptionEntitlementsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private GetLicensingSubscriptionEntitlementsItem item;
        private @Nullable List<String> skuses;
        public Builder() {}
        public Builder(GetLicensingSubscriptionEntitlementsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.item = defaults.item;
    	      this.skuses = defaults.skuses;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionEntitlementsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder item(GetLicensingSubscriptionEntitlementsItem item) {
            if (item == null) {
              throw new MissingRequiredPropertyException("GetLicensingSubscriptionEntitlementsResult", "item");
            }
            this.item = item;
            return this;
        }
        @CustomType.Setter
        public Builder skuses(@Nullable List<String> skuses) {

            this.skuses = skuses;
            return this;
        }
        public Builder skuses(String... skuses) {
            return skuses(List.of(skuses));
        }
        public GetLicensingSubscriptionEntitlementsResult build() {
            final var _resultValue = new GetLicensingSubscriptionEntitlementsResult();
            _resultValue.id = id;
            _resultValue.item = item;
            _resultValue.skuses = skuses;
            return _resultValue;
        }
    }
}
