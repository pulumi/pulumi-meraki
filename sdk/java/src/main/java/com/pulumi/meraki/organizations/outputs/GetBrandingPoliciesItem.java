// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetBrandingPoliciesItemAdminSettings;
import com.pulumi.meraki.organizations.outputs.GetBrandingPoliciesItemCustomLogo;
import com.pulumi.meraki.organizations.outputs.GetBrandingPoliciesItemHelpSettings;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBrandingPoliciesItem {
    /**
     * @return Settings for describing which kinds of admins this policy applies to.
     * 
     */
    private GetBrandingPoliciesItemAdminSettings adminSettings;
    /**
     * @return Properties describing the custom logo attached to the branding policy.
     * 
     */
    private GetBrandingPoliciesItemCustomLogo customLogo;
    /**
     * @return Boolean indicating whether this policy is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return Settings for describing the modifications to various Help page features. Each property in this object accepts one of
     *   &#39;default or inherit&#39; (do not modify functionality), &#39;hide&#39; (remove the section from Dashboard), or &#39;show&#39; (always show
     *   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
     *   Dashboard; see the documentation for each property to see the allowed values.
     * 
     */
    private GetBrandingPoliciesItemHelpSettings helpSettings;
    /**
     * @return Name of the Dashboard branding policy.
     * 
     */
    private String name;

    private GetBrandingPoliciesItem() {}
    /**
     * @return Settings for describing which kinds of admins this policy applies to.
     * 
     */
    public GetBrandingPoliciesItemAdminSettings adminSettings() {
        return this.adminSettings;
    }
    /**
     * @return Properties describing the custom logo attached to the branding policy.
     * 
     */
    public GetBrandingPoliciesItemCustomLogo customLogo() {
        return this.customLogo;
    }
    /**
     * @return Boolean indicating whether this policy is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Settings for describing the modifications to various Help page features. Each property in this object accepts one of
     *   &#39;default or inherit&#39; (do not modify functionality), &#39;hide&#39; (remove the section from Dashboard), or &#39;show&#39; (always show
     *   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
     *   Dashboard; see the documentation for each property to see the allowed values.
     * 
     */
    public GetBrandingPoliciesItemHelpSettings helpSettings() {
        return this.helpSettings;
    }
    /**
     * @return Name of the Dashboard branding policy.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrandingPoliciesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetBrandingPoliciesItemAdminSettings adminSettings;
        private GetBrandingPoliciesItemCustomLogo customLogo;
        private Boolean enabled;
        private GetBrandingPoliciesItemHelpSettings helpSettings;
        private String name;
        public Builder() {}
        public Builder(GetBrandingPoliciesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminSettings = defaults.adminSettings;
    	      this.customLogo = defaults.customLogo;
    	      this.enabled = defaults.enabled;
    	      this.helpSettings = defaults.helpSettings;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder adminSettings(GetBrandingPoliciesItemAdminSettings adminSettings) {
            if (adminSettings == null) {
              throw new MissingRequiredPropertyException("GetBrandingPoliciesItem", "adminSettings");
            }
            this.adminSettings = adminSettings;
            return this;
        }
        @CustomType.Setter
        public Builder customLogo(GetBrandingPoliciesItemCustomLogo customLogo) {
            if (customLogo == null) {
              throw new MissingRequiredPropertyException("GetBrandingPoliciesItem", "customLogo");
            }
            this.customLogo = customLogo;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetBrandingPoliciesItem", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder helpSettings(GetBrandingPoliciesItemHelpSettings helpSettings) {
            if (helpSettings == null) {
              throw new MissingRequiredPropertyException("GetBrandingPoliciesItem", "helpSettings");
            }
            this.helpSettings = helpSettings;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBrandingPoliciesItem", "name");
            }
            this.name = name;
            return this;
        }
        public GetBrandingPoliciesItem build() {
            final var _resultValue = new GetBrandingPoliciesItem();
            _resultValue.adminSettings = adminSettings;
            _resultValue.customLogo = customLogo;
            _resultValue.enabled = enabled;
            _resultValue.helpSettings = helpSettings;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
