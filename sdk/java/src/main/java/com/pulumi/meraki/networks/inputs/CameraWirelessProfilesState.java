// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.CameraWirelessProfilesIdentityArgs;
import com.pulumi.meraki.networks.inputs.CameraWirelessProfilesSsidArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CameraWirelessProfilesState extends com.pulumi.resources.ResourceArgs {

    public static final CameraWirelessProfilesState Empty = new CameraWirelessProfilesState();

    @Import(name="appliedDeviceCount")
    private @Nullable Output<Integer> appliedDeviceCount;

    public Optional<Output<Integer>> appliedDeviceCount() {
        return Optional.ofNullable(this.appliedDeviceCount);
    }

    /**
     * The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<CameraWirelessProfilesIdentityArgs> identity;

    /**
     * @return The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
     * 
     */
    public Optional<Output<CameraWirelessProfilesIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The name of the camera wireless profile. This parameter is required.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the camera wireless profile. This parameter is required.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * The details of the SSID config.
     * 
     */
    @Import(name="ssid")
    private @Nullable Output<CameraWirelessProfilesSsidArgs> ssid;

    /**
     * @return The details of the SSID config.
     * 
     */
    public Optional<Output<CameraWirelessProfilesSsidArgs>> ssid() {
        return Optional.ofNullable(this.ssid);
    }

    /**
     * wirelessProfileId path parameter. Wireless profile ID
     * 
     */
    @Import(name="wirelessProfileId")
    private @Nullable Output<String> wirelessProfileId;

    /**
     * @return wirelessProfileId path parameter. Wireless profile ID
     * 
     */
    public Optional<Output<String>> wirelessProfileId() {
        return Optional.ofNullable(this.wirelessProfileId);
    }

    private CameraWirelessProfilesState() {}

    private CameraWirelessProfilesState(CameraWirelessProfilesState $) {
        this.appliedDeviceCount = $.appliedDeviceCount;
        this.identity = $.identity;
        this.name = $.name;
        this.networkId = $.networkId;
        this.ssid = $.ssid;
        this.wirelessProfileId = $.wirelessProfileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CameraWirelessProfilesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CameraWirelessProfilesState $;

        public Builder() {
            $ = new CameraWirelessProfilesState();
        }

        public Builder(CameraWirelessProfilesState defaults) {
            $ = new CameraWirelessProfilesState(Objects.requireNonNull(defaults));
        }

        public Builder appliedDeviceCount(@Nullable Output<Integer> appliedDeviceCount) {
            $.appliedDeviceCount = appliedDeviceCount;
            return this;
        }

        public Builder appliedDeviceCount(Integer appliedDeviceCount) {
            return appliedDeviceCount(Output.of(appliedDeviceCount));
        }

        /**
         * @param identity The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<CameraWirelessProfilesIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
         * 
         * @return builder
         * 
         */
        public Builder identity(CameraWirelessProfilesIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param name The name of the camera wireless profile. This parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the camera wireless profile. This parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param ssid The details of the SSID config.
         * 
         * @return builder
         * 
         */
        public Builder ssid(@Nullable Output<CameraWirelessProfilesSsidArgs> ssid) {
            $.ssid = ssid;
            return this;
        }

        /**
         * @param ssid The details of the SSID config.
         * 
         * @return builder
         * 
         */
        public Builder ssid(CameraWirelessProfilesSsidArgs ssid) {
            return ssid(Output.of(ssid));
        }

        /**
         * @param wirelessProfileId wirelessProfileId path parameter. Wireless profile ID
         * 
         * @return builder
         * 
         */
        public Builder wirelessProfileId(@Nullable Output<String> wirelessProfileId) {
            $.wirelessProfileId = wirelessProfileId;
            return this;
        }

        /**
         * @param wirelessProfileId wirelessProfileId path parameter. Wireless profile ID
         * 
         * @return builder
         * 
         */
        public Builder wirelessProfileId(String wirelessProfileId) {
            return wirelessProfileId(Output.of(wirelessProfileId));
        }

        public CameraWirelessProfilesState build() {
            return $;
        }
    }

}
