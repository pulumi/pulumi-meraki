// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.inputs.CellularGatewayLanFixedIpAssignmentArgs;
import com.pulumi.meraki.devices.inputs.CellularGatewayLanReservedIpRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CellularGatewayLanArgs extends com.pulumi.resources.ResourceArgs {

    public static final CellularGatewayLanArgs Empty = new CellularGatewayLanArgs();

    /**
     * list of all fixed IP assignments for a single MG
     * 
     */
    @Import(name="fixedIpAssignments")
    private @Nullable Output<List<CellularGatewayLanFixedIpAssignmentArgs>> fixedIpAssignments;

    /**
     * @return list of all fixed IP assignments for a single MG
     * 
     */
    public Optional<Output<List<CellularGatewayLanFixedIpAssignmentArgs>>> fixedIpAssignments() {
        return Optional.ofNullable(this.fixedIpAssignments);
    }

    /**
     * list of all reserved IP ranges for a single MG
     * 
     */
    @Import(name="reservedIpRanges")
    private @Nullable Output<List<CellularGatewayLanReservedIpRangeArgs>> reservedIpRanges;

    /**
     * @return list of all reserved IP ranges for a single MG
     * 
     */
    public Optional<Output<List<CellularGatewayLanReservedIpRangeArgs>>> reservedIpRanges() {
        return Optional.ofNullable(this.reservedIpRanges);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial", required=true)
    private Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Output<String> serial() {
        return this.serial;
    }

    private CellularGatewayLanArgs() {}

    private CellularGatewayLanArgs(CellularGatewayLanArgs $) {
        this.fixedIpAssignments = $.fixedIpAssignments;
        this.reservedIpRanges = $.reservedIpRanges;
        this.serial = $.serial;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CellularGatewayLanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CellularGatewayLanArgs $;

        public Builder() {
            $ = new CellularGatewayLanArgs();
        }

        public Builder(CellularGatewayLanArgs defaults) {
            $ = new CellularGatewayLanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fixedIpAssignments list of all fixed IP assignments for a single MG
         * 
         * @return builder
         * 
         */
        public Builder fixedIpAssignments(@Nullable Output<List<CellularGatewayLanFixedIpAssignmentArgs>> fixedIpAssignments) {
            $.fixedIpAssignments = fixedIpAssignments;
            return this;
        }

        /**
         * @param fixedIpAssignments list of all fixed IP assignments for a single MG
         * 
         * @return builder
         * 
         */
        public Builder fixedIpAssignments(List<CellularGatewayLanFixedIpAssignmentArgs> fixedIpAssignments) {
            return fixedIpAssignments(Output.of(fixedIpAssignments));
        }

        /**
         * @param fixedIpAssignments list of all fixed IP assignments for a single MG
         * 
         * @return builder
         * 
         */
        public Builder fixedIpAssignments(CellularGatewayLanFixedIpAssignmentArgs... fixedIpAssignments) {
            return fixedIpAssignments(List.of(fixedIpAssignments));
        }

        /**
         * @param reservedIpRanges list of all reserved IP ranges for a single MG
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(@Nullable Output<List<CellularGatewayLanReservedIpRangeArgs>> reservedIpRanges) {
            $.reservedIpRanges = reservedIpRanges;
            return this;
        }

        /**
         * @param reservedIpRanges list of all reserved IP ranges for a single MG
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(List<CellularGatewayLanReservedIpRangeArgs> reservedIpRanges) {
            return reservedIpRanges(Output.of(reservedIpRanges));
        }

        /**
         * @param reservedIpRanges list of all reserved IP ranges for a single MG
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(CellularGatewayLanReservedIpRangeArgs... reservedIpRanges) {
            return reservedIpRanges(List.of(reservedIpRanges));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        public CellularGatewayLanArgs build() {
            if ($.serial == null) {
                throw new MissingRequiredPropertyException("CellularGatewayLanArgs", "serial");
            }
            return $;
        }
    }

}
