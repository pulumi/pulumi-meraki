// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplianceUplinksUsageByNetworkItemByUplink {
    /**
     * @return Uplink name
     * 
     */
    private String interface_;
    /**
     * @return Bytes received
     * 
     */
    private Integer received;
    /**
     * @return Bytes sent
     * 
     */
    private Integer sent;
    /**
     * @return Uplink serial
     * 
     */
    private String serial;

    private GetApplianceUplinksUsageByNetworkItemByUplink() {}
    /**
     * @return Uplink name
     * 
     */
    public String interface_() {
        return this.interface_;
    }
    /**
     * @return Bytes received
     * 
     */
    public Integer received() {
        return this.received;
    }
    /**
     * @return Bytes sent
     * 
     */
    public Integer sent() {
        return this.sent;
    }
    /**
     * @return Uplink serial
     * 
     */
    public String serial() {
        return this.serial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceUplinksUsageByNetworkItemByUplink defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String interface_;
        private Integer received;
        private Integer sent;
        private String serial;
        public Builder() {}
        public Builder(GetApplianceUplinksUsageByNetworkItemByUplink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interface_ = defaults.interface_;
    	      this.received = defaults.received;
    	      this.sent = defaults.sent;
    	      this.serial = defaults.serial;
        }

        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksUsageByNetworkItemByUplink", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder received(Integer received) {
            if (received == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksUsageByNetworkItemByUplink", "received");
            }
            this.received = received;
            return this;
        }
        @CustomType.Setter
        public Builder sent(Integer sent) {
            if (sent == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksUsageByNetworkItemByUplink", "sent");
            }
            this.sent = sent;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksUsageByNetworkItemByUplink", "serial");
            }
            this.serial = serial;
            return this;
        }
        public GetApplianceUplinksUsageByNetworkItemByUplink build() {
            final var _resultValue = new GetApplianceUplinksUsageByNetworkItemByUplink();
            _resultValue.interface_ = interface_;
            _resultValue.received = received;
            _resultValue.sent = sent;
            _resultValue.serial = serial;
            return _resultValue;
        }
    }
}
