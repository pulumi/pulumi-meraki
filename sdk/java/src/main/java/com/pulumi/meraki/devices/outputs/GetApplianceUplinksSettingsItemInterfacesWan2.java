// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetApplianceUplinksSettingsItemInterfacesWan2Pppoe;
import com.pulumi.meraki.devices.outputs.GetApplianceUplinksSettingsItemInterfacesWan2Svis;
import com.pulumi.meraki.devices.outputs.GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetApplianceUplinksSettingsItemInterfacesWan2 {
    /**
     * @return Enable or disable the interface.
     * 
     */
    private Boolean enabled;
    /**
     * @return Configuration options for PPPoE.
     * 
     */
    private GetApplianceUplinksSettingsItemInterfacesWan2Pppoe pppoe;
    /**
     * @return SVI settings by protocol.
     * 
     */
    private GetApplianceUplinksSettingsItemInterfacesWan2Svis svis;
    /**
     * @return VLAN tagging settings.
     * 
     */
    private GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging vlanTagging;

    private GetApplianceUplinksSettingsItemInterfacesWan2() {}
    /**
     * @return Enable or disable the interface.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Configuration options for PPPoE.
     * 
     */
    public GetApplianceUplinksSettingsItemInterfacesWan2Pppoe pppoe() {
        return this.pppoe;
    }
    /**
     * @return SVI settings by protocol.
     * 
     */
    public GetApplianceUplinksSettingsItemInterfacesWan2Svis svis() {
        return this.svis;
    }
    /**
     * @return VLAN tagging settings.
     * 
     */
    public GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging vlanTagging() {
        return this.vlanTagging;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceUplinksSettingsItemInterfacesWan2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private GetApplianceUplinksSettingsItemInterfacesWan2Pppoe pppoe;
        private GetApplianceUplinksSettingsItemInterfacesWan2Svis svis;
        private GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging vlanTagging;
        public Builder() {}
        public Builder(GetApplianceUplinksSettingsItemInterfacesWan2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.pppoe = defaults.pppoe;
    	      this.svis = defaults.svis;
    	      this.vlanTagging = defaults.vlanTagging;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksSettingsItemInterfacesWan2", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder pppoe(GetApplianceUplinksSettingsItemInterfacesWan2Pppoe pppoe) {
            if (pppoe == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksSettingsItemInterfacesWan2", "pppoe");
            }
            this.pppoe = pppoe;
            return this;
        }
        @CustomType.Setter
        public Builder svis(GetApplianceUplinksSettingsItemInterfacesWan2Svis svis) {
            if (svis == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksSettingsItemInterfacesWan2", "svis");
            }
            this.svis = svis;
            return this;
        }
        @CustomType.Setter
        public Builder vlanTagging(GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging vlanTagging) {
            if (vlanTagging == null) {
              throw new MissingRequiredPropertyException("GetApplianceUplinksSettingsItemInterfacesWan2", "vlanTagging");
            }
            this.vlanTagging = vlanTagging;
            return this;
        }
        public GetApplianceUplinksSettingsItemInterfacesWan2 build() {
            final var _resultValue = new GetApplianceUplinksSettingsItemInterfacesWan2();
            _resultValue.enabled = enabled;
            _resultValue.pppoe = pppoe;
            _resultValue.svis = svis;
            _resultValue.vlanTagging = vlanTagging;
            return _resultValue;
        }
    }
}
