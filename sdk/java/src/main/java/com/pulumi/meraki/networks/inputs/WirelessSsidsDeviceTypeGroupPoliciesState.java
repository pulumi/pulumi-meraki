// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsDeviceTypeGroupPoliciesState extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsDeviceTypeGroupPoliciesState Empty = new WirelessSsidsDeviceTypeGroupPoliciesState();

    /**
     * List of device type policies.
     * 
     */
    @Import(name="deviceTypePolicies")
    private @Nullable Output<List<WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs>> deviceTypePolicies;

    /**
     * @return List of device type policies.
     * 
     */
    public Optional<Output<List<WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs>>> deviceTypePolicies() {
        return Optional.ofNullable(this.deviceTypePolicies);
    }

    /**
     * If true, the SSID device type group policies are enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If true, the SSID device type group policies are enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * number path parameter.
     * 
     */
    @Import(name="number")
    private @Nullable Output<String> number;

    /**
     * @return number path parameter.
     * 
     */
    public Optional<Output<String>> number() {
        return Optional.ofNullable(this.number);
    }

    private WirelessSsidsDeviceTypeGroupPoliciesState() {}

    private WirelessSsidsDeviceTypeGroupPoliciesState(WirelessSsidsDeviceTypeGroupPoliciesState $) {
        this.deviceTypePolicies = $.deviceTypePolicies;
        this.enabled = $.enabled;
        this.networkId = $.networkId;
        this.number = $.number;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsDeviceTypeGroupPoliciesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsDeviceTypeGroupPoliciesState $;

        public Builder() {
            $ = new WirelessSsidsDeviceTypeGroupPoliciesState();
        }

        public Builder(WirelessSsidsDeviceTypeGroupPoliciesState defaults) {
            $ = new WirelessSsidsDeviceTypeGroupPoliciesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceTypePolicies List of device type policies.
         * 
         * @return builder
         * 
         */
        public Builder deviceTypePolicies(@Nullable Output<List<WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs>> deviceTypePolicies) {
            $.deviceTypePolicies = deviceTypePolicies;
            return this;
        }

        /**
         * @param deviceTypePolicies List of device type policies.
         * 
         * @return builder
         * 
         */
        public Builder deviceTypePolicies(List<WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs> deviceTypePolicies) {
            return deviceTypePolicies(Output.of(deviceTypePolicies));
        }

        /**
         * @param deviceTypePolicies List of device type policies.
         * 
         * @return builder
         * 
         */
        public Builder deviceTypePolicies(WirelessSsidsDeviceTypeGroupPoliciesDeviceTypePolicyArgs... deviceTypePolicies) {
            return deviceTypePolicies(List.of(deviceTypePolicies));
        }

        /**
         * @param enabled If true, the SSID device type group policies are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If true, the SSID device type group policies are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(@Nullable Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number number path parameter.
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        public WirelessSsidsDeviceTypeGroupPoliciesState build() {
            return $;
        }
    }

}
