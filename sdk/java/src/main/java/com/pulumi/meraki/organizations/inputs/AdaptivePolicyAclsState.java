// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.AdaptivePolicyAclsRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdaptivePolicyAclsState extends com.pulumi.resources.ResourceArgs {

    public static final AdaptivePolicyAclsState Empty = new AdaptivePolicyAclsState();

    /**
     * ID of the adaptive policy ACL
     * 
     */
    @Import(name="aclId")
    private @Nullable Output<String> aclId;

    /**
     * @return ID of the adaptive policy ACL
     * 
     */
    public Optional<Output<String>> aclId() {
        return Optional.ofNullable(this.aclId);
    }

    /**
     * When the adaptive policy ACL was created
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return When the adaptive policy ACL was created
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Description of the adaptive policy ACL
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the adaptive policy ACL
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * IP version of adpative policy ACL
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return IP version of adpative policy ACL
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * Name of the adaptive policy ACL
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the adaptive policy ACL
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * An ordered array of the adaptive policy ACL rules
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<AdaptivePolicyAclsRuleArgs>> rules;

    /**
     * @return An ordered array of the adaptive policy ACL rules
     * 
     */
    public Optional<Output<List<AdaptivePolicyAclsRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * When the adaptive policy ACL was last updated
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return When the adaptive policy ACL was last updated
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private AdaptivePolicyAclsState() {}

    private AdaptivePolicyAclsState(AdaptivePolicyAclsState $) {
        this.aclId = $.aclId;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.ipVersion = $.ipVersion;
        this.name = $.name;
        this.organizationId = $.organizationId;
        this.rules = $.rules;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdaptivePolicyAclsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdaptivePolicyAclsState $;

        public Builder() {
            $ = new AdaptivePolicyAclsState();
        }

        public Builder(AdaptivePolicyAclsState defaults) {
            $ = new AdaptivePolicyAclsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclId ID of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder aclId(@Nullable Output<String> aclId) {
            $.aclId = aclId;
            return this;
        }

        /**
         * @param aclId ID of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder aclId(String aclId) {
            return aclId(Output.of(aclId));
        }

        /**
         * @param createdAt When the adaptive policy ACL was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt When the adaptive policy ACL was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Description of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipVersion IP version of adpative policy ACL
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion IP version of adpative policy ACL
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param name Name of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the adaptive policy ACL
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param rules An ordered array of the adaptive policy ACL rules
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<AdaptivePolicyAclsRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules An ordered array of the adaptive policy ACL rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<AdaptivePolicyAclsRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules An ordered array of the adaptive policy ACL rules
         * 
         * @return builder
         * 
         */
        public Builder rules(AdaptivePolicyAclsRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param updatedAt When the adaptive policy ACL was last updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt When the adaptive policy ACL was last updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public AdaptivePolicyAclsState build() {
            return $;
        }
    }

}
