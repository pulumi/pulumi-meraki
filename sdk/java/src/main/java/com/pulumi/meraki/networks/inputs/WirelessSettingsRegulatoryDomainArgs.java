// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSettingsRegulatoryDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSettingsRegulatoryDomainArgs Empty = new WirelessSettingsRegulatoryDomainArgs();

    /**
     * The country code of the regulatory domain.
     * 
     */
    @Import(name="countryCode")
    private @Nullable Output<String> countryCode;

    /**
     * @return The country code of the regulatory domain.
     * 
     */
    public Optional<Output<String>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    /**
     * The name of the regulatory domain for this network.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the regulatory domain for this network.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether or not the regulatory domain for this network permits Wifi 6E.
     * 
     */
    @Import(name="permits6e")
    private @Nullable Output<Boolean> permits6e;

    /**
     * @return Whether or not the regulatory domain for this network permits Wifi 6E.
     * 
     */
    public Optional<Output<Boolean>> permits6e() {
        return Optional.ofNullable(this.permits6e);
    }

    private WirelessSettingsRegulatoryDomainArgs() {}

    private WirelessSettingsRegulatoryDomainArgs(WirelessSettingsRegulatoryDomainArgs $) {
        this.countryCode = $.countryCode;
        this.name = $.name;
        this.permits6e = $.permits6e;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSettingsRegulatoryDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSettingsRegulatoryDomainArgs $;

        public Builder() {
            $ = new WirelessSettingsRegulatoryDomainArgs();
        }

        public Builder(WirelessSettingsRegulatoryDomainArgs defaults) {
            $ = new WirelessSettingsRegulatoryDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param countryCode The country code of the regulatory domain.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(@Nullable Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        /**
         * @param countryCode The country code of the regulatory domain.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        /**
         * @param name The name of the regulatory domain for this network.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the regulatory domain for this network.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param permits6e Whether or not the regulatory domain for this network permits Wifi 6E.
         * 
         * @return builder
         * 
         */
        public Builder permits6e(@Nullable Output<Boolean> permits6e) {
            $.permits6e = permits6e;
            return this;
        }

        /**
         * @param permits6e Whether or not the regulatory domain for this network permits Wifi 6E.
         * 
         * @return builder
         * 
         */
        public Builder permits6e(Boolean permits6e) {
            return permits6e(Output.of(permits6e));
        }

        public WirelessSettingsRegulatoryDomainArgs build() {
            return $;
        }
    }

}
