// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.networks.outputs.SwitchRoutingOspfV3Area;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchRoutingOspfV3 {
    /**
     * @return OSPF v3 areas
     * 
     */
    private @Nullable List<SwitchRoutingOspfV3Area> areas;
    /**
     * @return Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
     * 
     */
    private @Nullable Integer deadTimerInSeconds;
    /**
     * @return Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
     * 
     */
    private @Nullable Integer helloTimerInSeconds;

    private SwitchRoutingOspfV3() {}
    /**
     * @return OSPF v3 areas
     * 
     */
    public List<SwitchRoutingOspfV3Area> areas() {
        return this.areas == null ? List.of() : this.areas;
    }
    /**
     * @return Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
     * 
     */
    public Optional<Integer> deadTimerInSeconds() {
        return Optional.ofNullable(this.deadTimerInSeconds);
    }
    /**
     * @return Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
     * 
     */
    public Optional<Integer> helloTimerInSeconds() {
        return Optional.ofNullable(this.helloTimerInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchRoutingOspfV3 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SwitchRoutingOspfV3Area> areas;
        private @Nullable Integer deadTimerInSeconds;
        private @Nullable Boolean enabled;
        private @Nullable Integer helloTimerInSeconds;
        public Builder() {}
        public Builder(SwitchRoutingOspfV3 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areas = defaults.areas;
    	      this.deadTimerInSeconds = defaults.deadTimerInSeconds;
    	      this.enabled = defaults.enabled;
    	      this.helloTimerInSeconds = defaults.helloTimerInSeconds;
        }

        @CustomType.Setter
        public Builder areas(@Nullable List<SwitchRoutingOspfV3Area> areas) {

            this.areas = areas;
            return this;
        }
        public Builder areas(SwitchRoutingOspfV3Area... areas) {
            return areas(List.of(areas));
        }
        @CustomType.Setter
        public Builder deadTimerInSeconds(@Nullable Integer deadTimerInSeconds) {

            this.deadTimerInSeconds = deadTimerInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder helloTimerInSeconds(@Nullable Integer helloTimerInSeconds) {

            this.helloTimerInSeconds = helloTimerInSeconds;
            return this;
        }
        public SwitchRoutingOspfV3 build() {
            final var _resultValue = new SwitchRoutingOspfV3();
            _resultValue.areas = areas;
            _resultValue.deadTimerInSeconds = deadTimerInSeconds;
            _resultValue.enabled = enabled;
            _resultValue.helloTimerInSeconds = helloTimerInSeconds;
            return _resultValue;
        }
    }
}
