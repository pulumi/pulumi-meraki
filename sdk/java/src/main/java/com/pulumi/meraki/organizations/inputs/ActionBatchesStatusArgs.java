// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.ActionBatchesStatusCreatedResourceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionBatchesStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionBatchesStatusArgs Empty = new ActionBatchesStatusArgs();

    /**
     * Flag describing whether all actions in the action batch have completed
     * 
     */
    @Import(name="completed")
    private @Nullable Output<Boolean> completed;

    /**
     * @return Flag describing whether all actions in the action batch have completed
     * 
     */
    public Optional<Output<Boolean>> completed() {
        return Optional.ofNullable(this.completed);
    }

    /**
     * Resources created as a result of this action batch
     * 
     */
    @Import(name="createdResources")
    private @Nullable Output<List<ActionBatchesStatusCreatedResourceArgs>> createdResources;

    /**
     * @return Resources created as a result of this action batch
     * 
     */
    public Optional<Output<List<ActionBatchesStatusCreatedResourceArgs>>> createdResources() {
        return Optional.ofNullable(this.createdResources);
    }

    /**
     * List of errors encountered when running actions in the action batch
     * 
     */
    @Import(name="errors")
    private @Nullable Output<List<String>> errors;

    /**
     * @return List of errors encountered when running actions in the action batch
     * 
     */
    public Optional<Output<List<String>>> errors() {
        return Optional.ofNullable(this.errors);
    }

    /**
     * Flag describing whether any actions in the action batch failed
     * 
     */
    @Import(name="failed")
    private @Nullable Output<Boolean> failed;

    /**
     * @return Flag describing whether any actions in the action batch failed
     * 
     */
    public Optional<Output<Boolean>> failed() {
        return Optional.ofNullable(this.failed);
    }

    private ActionBatchesStatusArgs() {}

    private ActionBatchesStatusArgs(ActionBatchesStatusArgs $) {
        this.completed = $.completed;
        this.createdResources = $.createdResources;
        this.errors = $.errors;
        this.failed = $.failed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionBatchesStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionBatchesStatusArgs $;

        public Builder() {
            $ = new ActionBatchesStatusArgs();
        }

        public Builder(ActionBatchesStatusArgs defaults) {
            $ = new ActionBatchesStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param completed Flag describing whether all actions in the action batch have completed
         * 
         * @return builder
         * 
         */
        public Builder completed(@Nullable Output<Boolean> completed) {
            $.completed = completed;
            return this;
        }

        /**
         * @param completed Flag describing whether all actions in the action batch have completed
         * 
         * @return builder
         * 
         */
        public Builder completed(Boolean completed) {
            return completed(Output.of(completed));
        }

        /**
         * @param createdResources Resources created as a result of this action batch
         * 
         * @return builder
         * 
         */
        public Builder createdResources(@Nullable Output<List<ActionBatchesStatusCreatedResourceArgs>> createdResources) {
            $.createdResources = createdResources;
            return this;
        }

        /**
         * @param createdResources Resources created as a result of this action batch
         * 
         * @return builder
         * 
         */
        public Builder createdResources(List<ActionBatchesStatusCreatedResourceArgs> createdResources) {
            return createdResources(Output.of(createdResources));
        }

        /**
         * @param createdResources Resources created as a result of this action batch
         * 
         * @return builder
         * 
         */
        public Builder createdResources(ActionBatchesStatusCreatedResourceArgs... createdResources) {
            return createdResources(List.of(createdResources));
        }

        /**
         * @param errors List of errors encountered when running actions in the action batch
         * 
         * @return builder
         * 
         */
        public Builder errors(@Nullable Output<List<String>> errors) {
            $.errors = errors;
            return this;
        }

        /**
         * @param errors List of errors encountered when running actions in the action batch
         * 
         * @return builder
         * 
         */
        public Builder errors(List<String> errors) {
            return errors(Output.of(errors));
        }

        /**
         * @param errors List of errors encountered when running actions in the action batch
         * 
         * @return builder
         * 
         */
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }

        /**
         * @param failed Flag describing whether any actions in the action batch failed
         * 
         * @return builder
         * 
         */
        public Builder failed(@Nullable Output<Boolean> failed) {
            $.failed = failed;
            return this;
        }

        /**
         * @param failed Flag describing whether any actions in the action batch failed
         * 
         * @return builder
         * 
         */
        public Builder failed(Boolean failed) {
            return failed(Output.of(failed));
        }

        public ActionBatchesStatusArgs build() {
            return $;
        }
    }

}
