// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.organizations.CameraRolesArgs;
import com.pulumi.meraki.organizations.inputs.CameraRolesState;
import com.pulumi.meraki.organizations.outputs.CameraRolesAppliedOnDevice;
import com.pulumi.meraki.organizations.outputs.CameraRolesAppliedOnNetwork;
import com.pulumi.meraki.organizations.outputs.CameraRolesAppliedOrgWide;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.organizations.CameraRoles;
 * import com.pulumi.meraki.organizations.CameraRolesArgs;
 * import com.pulumi.meraki.organizations.inputs.CameraRolesAppliedOnDeviceArgs;
 * import com.pulumi.meraki.organizations.inputs.CameraRolesAppliedOnNetworkArgs;
 * import com.pulumi.meraki.organizations.inputs.CameraRolesAppliedOrgWideArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CameraRoles("example", CameraRolesArgs.builder()
 *             .appliedOnDevices(CameraRolesAppliedOnDeviceArgs.builder()
 *                 .id("")
 *                 .permission_scope_id("1")
 *                 .tag("reception-desk")
 *                 .build())
 *             .appliedOnNetworks(CameraRolesAppliedOnNetworkArgs.builder()
 *                 .id("")
 *                 .permission_scope_id("2")
 *                 .tag("building-a")
 *                 .build())
 *             .appliedOrgWides(CameraRolesAppliedOrgWideArgs.builder()
 *                 .permission_scope_id("2")
 *                 .build())
 *             .name("Security_Guard")
 *             .organizationId("string")
 *             .build());
 * 
 *         ctx.export("merakiOrganizationsCameraRolesExample", example);
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:organizations/cameraRoles:CameraRoles example &#34;organization_id,role_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:organizations/cameraRoles:CameraRoles")
public class CameraRoles extends com.pulumi.resources.CustomResource {
    /**
     * Device tag on which this specified permission is applied.
     * 
     */
    @Export(name="appliedOnDevices", refs={List.class,CameraRolesAppliedOnDevice.class}, tree="[0,1]")
    private Output<List<CameraRolesAppliedOnDevice>> appliedOnDevices;

    /**
     * @return Device tag on which this specified permission is applied.
     * 
     */
    public Output<List<CameraRolesAppliedOnDevice>> appliedOnDevices() {
        return this.appliedOnDevices;
    }
    /**
     * Network tag on which this specified permission is applied.
     * 
     */
    @Export(name="appliedOnNetworks", refs={List.class,CameraRolesAppliedOnNetwork.class}, tree="[0,1]")
    private Output<List<CameraRolesAppliedOnNetwork>> appliedOnNetworks;

    /**
     * @return Network tag on which this specified permission is applied.
     * 
     */
    public Output<List<CameraRolesAppliedOnNetwork>> appliedOnNetworks() {
        return this.appliedOnNetworks;
    }
    /**
     * Permissions to be applied org wide.
     * 
     */
    @Export(name="appliedOrgWides", refs={List.class,CameraRolesAppliedOrgWide.class}, tree="[0,1]")
    private Output<List<CameraRolesAppliedOrgWide>> appliedOrgWides;

    /**
     * @return Permissions to be applied org wide.
     * 
     */
    public Output<List<CameraRolesAppliedOrgWide>> appliedOrgWides() {
        return this.appliedOrgWides;
    }
    /**
     * The name of the new role. Must be unique. This parameter is required.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the new role. Must be unique. This parameter is required.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * roleId path parameter. Role ID
     * 
     */
    @Export(name="roleId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> roleId;

    /**
     * @return roleId path parameter. Role ID
     * 
     */
    public Output<Optional<String>> roleId() {
        return Codegen.optional(this.roleId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CameraRoles(String name) {
        this(name, CameraRolesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CameraRoles(String name, CameraRolesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CameraRoles(String name, CameraRolesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/cameraRoles:CameraRoles", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private CameraRoles(String name, Output<String> id, @Nullable CameraRolesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:organizations/cameraRoles:CameraRoles", name, state, makeResourceOptions(options, id));
    }

    private static CameraRolesArgs makeArgs(CameraRolesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CameraRolesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CameraRoles get(String name, Output<String> id, @Nullable CameraRolesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CameraRoles(name, id, state, options);
    }
}
