// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmDevicesCheckinParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final SmDevicesCheckinParametersArgs Empty = new SmDevicesCheckinParametersArgs();

    /**
     * The ids of the devices to be checked-in.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return The ids of the devices to be checked-in.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * The serials of the devices to be checked-in.
     * 
     */
    @Import(name="serials")
    private @Nullable Output<List<String>> serials;

    /**
     * @return The serials of the devices to be checked-in.
     * 
     */
    public Optional<Output<List<String>>> serials() {
        return Optional.ofNullable(this.serials);
    }

    /**
     * The wifiMacs of the devices to be checked-in.
     * 
     */
    @Import(name="wifiMacs")
    private @Nullable Output<List<String>> wifiMacs;

    /**
     * @return The wifiMacs of the devices to be checked-in.
     * 
     */
    public Optional<Output<List<String>>> wifiMacs() {
        return Optional.ofNullable(this.wifiMacs);
    }

    private SmDevicesCheckinParametersArgs() {}

    private SmDevicesCheckinParametersArgs(SmDevicesCheckinParametersArgs $) {
        this.ids = $.ids;
        this.scopes = $.scopes;
        this.serials = $.serials;
        this.wifiMacs = $.wifiMacs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmDevicesCheckinParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmDevicesCheckinParametersArgs $;

        public Builder() {
            $ = new SmDevicesCheckinParametersArgs();
        }

        public Builder(SmDevicesCheckinParametersArgs defaults) {
            $ = new SmDevicesCheckinParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids The ids of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids The ids of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids The ids of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param scopes The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param serials The serials of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder serials(@Nullable Output<List<String>> serials) {
            $.serials = serials;
            return this;
        }

        /**
         * @param serials The serials of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder serials(List<String> serials) {
            return serials(Output.of(serials));
        }

        /**
         * @param serials The serials of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder serials(String... serials) {
            return serials(List.of(serials));
        }

        /**
         * @param wifiMacs The wifiMacs of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder wifiMacs(@Nullable Output<List<String>> wifiMacs) {
            $.wifiMacs = wifiMacs;
            return this;
        }

        /**
         * @param wifiMacs The wifiMacs of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder wifiMacs(List<String> wifiMacs) {
            return wifiMacs(Output.of(wifiMacs));
        }

        /**
         * @param wifiMacs The wifiMacs of the devices to be checked-in.
         * 
         * @return builder
         * 
         */
        public Builder wifiMacs(String... wifiMacs) {
            return wifiMacs(List.of(wifiMacs));
        }

        public SmDevicesCheckinParametersArgs build() {
            return $;
        }
    }

}
