// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.administered.inputs.LicensingSubscriptionSubscriptionsClaimParametersArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingSubscriptionSubscriptionsClaimArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingSubscriptionSubscriptionsClaimArgs Empty = new LicensingSubscriptionSubscriptionsClaimArgs();

    @Import(name="parameters", required=true)
    private Output<LicensingSubscriptionSubscriptionsClaimParametersArgs> parameters;

    public Output<LicensingSubscriptionSubscriptionsClaimParametersArgs> parameters() {
        return this.parameters;
    }

    /**
     * validate query parameter. Check if the provided claim key is valid and can be claimed into the organization.
     * 
     */
    @Import(name="validate")
    private @Nullable Output<Boolean> validate;

    /**
     * @return validate query parameter. Check if the provided claim key is valid and can be claimed into the organization.
     * 
     */
    public Optional<Output<Boolean>> validate() {
        return Optional.ofNullable(this.validate);
    }

    private LicensingSubscriptionSubscriptionsClaimArgs() {}

    private LicensingSubscriptionSubscriptionsClaimArgs(LicensingSubscriptionSubscriptionsClaimArgs $) {
        this.parameters = $.parameters;
        this.validate = $.validate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingSubscriptionSubscriptionsClaimArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingSubscriptionSubscriptionsClaimArgs $;

        public Builder() {
            $ = new LicensingSubscriptionSubscriptionsClaimArgs();
        }

        public Builder(LicensingSubscriptionSubscriptionsClaimArgs defaults) {
            $ = new LicensingSubscriptionSubscriptionsClaimArgs(Objects.requireNonNull(defaults));
        }

        public Builder parameters(Output<LicensingSubscriptionSubscriptionsClaimParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(LicensingSubscriptionSubscriptionsClaimParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param validate validate query parameter. Check if the provided claim key is valid and can be claimed into the organization.
         * 
         * @return builder
         * 
         */
        public Builder validate(@Nullable Output<Boolean> validate) {
            $.validate = validate;
            return this;
        }

        /**
         * @param validate validate query parameter. Check if the provided claim key is valid and can be claimed into the organization.
         * 
         * @return builder
         * 
         */
        public Builder validate(Boolean validate) {
            return validate(Output.of(validate));
        }

        public LicensingSubscriptionSubscriptionsClaimArgs build() {
            if ($.parameters == null) {
                throw new MissingRequiredPropertyException("LicensingSubscriptionSubscriptionsClaimArgs", "parameters");
            }
            return $;
        }
    }

}
