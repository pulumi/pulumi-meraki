// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSwitchDhcpV4ServersSeenItemIpv4 {
    /**
     * @return IPv4 address of the server.
     * 
     */
    private String address;
    /**
     * @return IPv4 gateway address of the server.
     * 
     */
    private String gateway;
    /**
     * @return Subnet of the server.
     * 
     */
    private String subnet;

    private GetSwitchDhcpV4ServersSeenItemIpv4() {}
    /**
     * @return IPv4 address of the server.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return IPv4 gateway address of the server.
     * 
     */
    public String gateway() {
        return this.gateway;
    }
    /**
     * @return Subnet of the server.
     * 
     */
    public String subnet() {
        return this.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchDhcpV4ServersSeenItemIpv4 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String gateway;
        private String subnet;
        public Builder() {}
        public Builder(GetSwitchDhcpV4ServersSeenItemIpv4 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.gateway = defaults.gateway;
    	      this.subnet = defaults.subnet;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpV4ServersSeenItemIpv4", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder gateway(String gateway) {
            if (gateway == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpV4ServersSeenItemIpv4", "gateway");
            }
            this.gateway = gateway;
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            if (subnet == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpV4ServersSeenItemIpv4", "subnet");
            }
            this.subnet = subnet;
            return this;
        }
        public GetSwitchDhcpV4ServersSeenItemIpv4 build() {
            final var _resultValue = new GetSwitchDhcpV4ServersSeenItemIpv4();
            _resultValue.address = address;
            _resultValue.gateway = gateway;
            _resultValue.subnet = subnet;
            return _resultValue;
        }
    }
}
