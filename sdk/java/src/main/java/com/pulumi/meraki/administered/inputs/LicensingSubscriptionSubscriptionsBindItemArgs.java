// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.administered.inputs.LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs;
import com.pulumi.meraki.administered.inputs.LicensingSubscriptionSubscriptionsBindItemNetworkArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingSubscriptionSubscriptionsBindItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingSubscriptionSubscriptionsBindItemArgs Empty = new LicensingSubscriptionSubscriptionsBindItemArgs();

    /**
     * Array of errors if failed
     * 
     */
    @Import(name="errors")
    private @Nullable Output<List<String>> errors;

    /**
     * @return Array of errors if failed
     * 
     */
    public Optional<Output<List<String>>> errors() {
        return Optional.ofNullable(this.errors);
    }

    /**
     * A list of entitlements required to successfully bind the networks to the subscription
     * 
     */
    @Import(name="insufficientEntitlements")
    private @Nullable Output<List<LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs>> insufficientEntitlements;

    /**
     * @return A list of entitlements required to successfully bind the networks to the subscription
     * 
     */
    public Optional<Output<List<LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs>>> insufficientEntitlements() {
        return Optional.ofNullable(this.insufficientEntitlements);
    }

    /**
     * Unbound networks
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<LicensingSubscriptionSubscriptionsBindItemNetworkArgs>> networks;

    /**
     * @return Unbound networks
     * 
     */
    public Optional<Output<List<LicensingSubscriptionSubscriptionsBindItemNetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    /**
     * Subscription ID
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return Subscription ID
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private LicensingSubscriptionSubscriptionsBindItemArgs() {}

    private LicensingSubscriptionSubscriptionsBindItemArgs(LicensingSubscriptionSubscriptionsBindItemArgs $) {
        this.errors = $.errors;
        this.insufficientEntitlements = $.insufficientEntitlements;
        this.networks = $.networks;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingSubscriptionSubscriptionsBindItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingSubscriptionSubscriptionsBindItemArgs $;

        public Builder() {
            $ = new LicensingSubscriptionSubscriptionsBindItemArgs();
        }

        public Builder(LicensingSubscriptionSubscriptionsBindItemArgs defaults) {
            $ = new LicensingSubscriptionSubscriptionsBindItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param errors Array of errors if failed
         * 
         * @return builder
         * 
         */
        public Builder errors(@Nullable Output<List<String>> errors) {
            $.errors = errors;
            return this;
        }

        /**
         * @param errors Array of errors if failed
         * 
         * @return builder
         * 
         */
        public Builder errors(List<String> errors) {
            return errors(Output.of(errors));
        }

        /**
         * @param errors Array of errors if failed
         * 
         * @return builder
         * 
         */
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }

        /**
         * @param insufficientEntitlements A list of entitlements required to successfully bind the networks to the subscription
         * 
         * @return builder
         * 
         */
        public Builder insufficientEntitlements(@Nullable Output<List<LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs>> insufficientEntitlements) {
            $.insufficientEntitlements = insufficientEntitlements;
            return this;
        }

        /**
         * @param insufficientEntitlements A list of entitlements required to successfully bind the networks to the subscription
         * 
         * @return builder
         * 
         */
        public Builder insufficientEntitlements(List<LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs> insufficientEntitlements) {
            return insufficientEntitlements(Output.of(insufficientEntitlements));
        }

        /**
         * @param insufficientEntitlements A list of entitlements required to successfully bind the networks to the subscription
         * 
         * @return builder
         * 
         */
        public Builder insufficientEntitlements(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs... insufficientEntitlements) {
            return insufficientEntitlements(List.of(insufficientEntitlements));
        }

        /**
         * @param networks Unbound networks
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<LicensingSubscriptionSubscriptionsBindItemNetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Unbound networks
         * 
         * @return builder
         * 
         */
        public Builder networks(List<LicensingSubscriptionSubscriptionsBindItemNetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks Unbound networks
         * 
         * @return builder
         * 
         */
        public Builder networks(LicensingSubscriptionSubscriptionsBindItemNetworkArgs... networks) {
            return networks(List.of(networks));
        }

        /**
         * @param subscriptionId Subscription ID
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Subscription ID
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public LicensingSubscriptionSubscriptionsBindItemArgs build() {
            return $;
        }
    }

}
