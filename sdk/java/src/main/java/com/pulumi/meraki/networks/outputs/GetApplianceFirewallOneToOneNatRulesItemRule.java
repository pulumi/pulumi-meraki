// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceFirewallOneToOneNatRulesItemRule {
    private List<GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound> allowedInbounds;
    private String lanIp;
    private String name;
    private String publicIp;
    private String uplink;

    private GetApplianceFirewallOneToOneNatRulesItemRule() {}
    public List<GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound> allowedInbounds() {
        return this.allowedInbounds;
    }
    public String lanIp() {
        return this.lanIp;
    }
    public String name() {
        return this.name;
    }
    public String publicIp() {
        return this.publicIp;
    }
    public String uplink() {
        return this.uplink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceFirewallOneToOneNatRulesItemRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound> allowedInbounds;
        private String lanIp;
        private String name;
        private String publicIp;
        private String uplink;
        public Builder() {}
        public Builder(GetApplianceFirewallOneToOneNatRulesItemRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedInbounds = defaults.allowedInbounds;
    	      this.lanIp = defaults.lanIp;
    	      this.name = defaults.name;
    	      this.publicIp = defaults.publicIp;
    	      this.uplink = defaults.uplink;
        }

        @CustomType.Setter
        public Builder allowedInbounds(List<GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound> allowedInbounds) {
            if (allowedInbounds == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRule", "allowedInbounds");
            }
            this.allowedInbounds = allowedInbounds;
            return this;
        }
        public Builder allowedInbounds(GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound... allowedInbounds) {
            return allowedInbounds(List.of(allowedInbounds));
        }
        @CustomType.Setter
        public Builder lanIp(String lanIp) {
            if (lanIp == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRule", "lanIp");
            }
            this.lanIp = lanIp;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            if (publicIp == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRule", "publicIp");
            }
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder uplink(String uplink) {
            if (uplink == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRule", "uplink");
            }
            this.uplink = uplink;
            return this;
        }
        public GetApplianceFirewallOneToOneNatRulesItemRule build() {
            final var _resultValue = new GetApplianceFirewallOneToOneNatRulesItemRule();
            _resultValue.allowedInbounds = allowedInbounds;
            _resultValue.lanIp = lanIp;
            _resultValue.name = name;
            _resultValue.publicIp = publicIp;
            _resultValue.uplink = uplink;
            return _resultValue;
        }
    }
}
