// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetUplinksStatusesItemHighAvailability;
import com.pulumi.meraki.organizations.outputs.GetUplinksStatusesItemUplink;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUplinksStatusesItem {
    /**
     * @return Device High Availability Capabilities
     * 
     */
    private GetUplinksStatusesItemHighAvailability highAvailability;
    /**
     * @return Last reported time for the device
     * 
     */
    private String lastReportedAt;
    /**
     * @return The uplink model
     * 
     */
    private String model;
    /**
     * @return Network identifier
     * 
     */
    private String networkId;
    /**
     * @return The uplink serial
     * 
     */
    private String serial;
    /**
     * @return Uplinks
     * 
     */
    private List<GetUplinksStatusesItemUplink> uplinks;

    private GetUplinksStatusesItem() {}
    /**
     * @return Device High Availability Capabilities
     * 
     */
    public GetUplinksStatusesItemHighAvailability highAvailability() {
        return this.highAvailability;
    }
    /**
     * @return Last reported time for the device
     * 
     */
    public String lastReportedAt() {
        return this.lastReportedAt;
    }
    /**
     * @return The uplink model
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return Network identifier
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return The uplink serial
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Uplinks
     * 
     */
    public List<GetUplinksStatusesItemUplink> uplinks() {
        return this.uplinks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUplinksStatusesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetUplinksStatusesItemHighAvailability highAvailability;
        private String lastReportedAt;
        private String model;
        private String networkId;
        private String serial;
        private List<GetUplinksStatusesItemUplink> uplinks;
        public Builder() {}
        public Builder(GetUplinksStatusesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.highAvailability = defaults.highAvailability;
    	      this.lastReportedAt = defaults.lastReportedAt;
    	      this.model = defaults.model;
    	      this.networkId = defaults.networkId;
    	      this.serial = defaults.serial;
    	      this.uplinks = defaults.uplinks;
        }

        @CustomType.Setter
        public Builder highAvailability(GetUplinksStatusesItemHighAvailability highAvailability) {
            if (highAvailability == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "highAvailability");
            }
            this.highAvailability = highAvailability;
            return this;
        }
        @CustomType.Setter
        public Builder lastReportedAt(String lastReportedAt) {
            if (lastReportedAt == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "lastReportedAt");
            }
            this.lastReportedAt = lastReportedAt;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder uplinks(List<GetUplinksStatusesItemUplink> uplinks) {
            if (uplinks == null) {
              throw new MissingRequiredPropertyException("GetUplinksStatusesItem", "uplinks");
            }
            this.uplinks = uplinks;
            return this;
        }
        public Builder uplinks(GetUplinksStatusesItemUplink... uplinks) {
            return uplinks(List.of(uplinks));
        }
        public GetUplinksStatusesItem build() {
            final var _resultValue = new GetUplinksStatusesItem();
            _resultValue.highAvailability = highAvailability;
            _resultValue.lastReportedAt = lastReportedAt;
            _resultValue.model = model;
            _resultValue.networkId = networkId;
            _resultValue.serial = serial;
            _resultValue.uplinks = uplinks;
            return _resultValue;
        }
    }
}
