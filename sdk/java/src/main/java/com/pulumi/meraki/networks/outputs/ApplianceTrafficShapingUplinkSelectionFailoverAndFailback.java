// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.networks.outputs.ApplianceTrafficShapingUplinkSelectionFailoverAndFailbackImmediate;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplianceTrafficShapingUplinkSelectionFailoverAndFailback {
    /**
     * @return Immediate WAN failover and failback
     * 
     */
    private @Nullable ApplianceTrafficShapingUplinkSelectionFailoverAndFailbackImmediate immediate;

    private ApplianceTrafficShapingUplinkSelectionFailoverAndFailback() {}
    /**
     * @return Immediate WAN failover and failback
     * 
     */
    public Optional<ApplianceTrafficShapingUplinkSelectionFailoverAndFailbackImmediate> immediate() {
        return Optional.ofNullable(this.immediate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplianceTrafficShapingUplinkSelectionFailoverAndFailback defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ApplianceTrafficShapingUplinkSelectionFailoverAndFailbackImmediate immediate;
        public Builder() {}
        public Builder(ApplianceTrafficShapingUplinkSelectionFailoverAndFailback defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.immediate = defaults.immediate;
        }

        @CustomType.Setter
        public Builder immediate(@Nullable ApplianceTrafficShapingUplinkSelectionFailoverAndFailbackImmediate immediate) {

            this.immediate = immediate;
            return this;
        }
        public ApplianceTrafficShapingUplinkSelectionFailoverAndFailback build() {
            final var _resultValue = new ApplianceTrafficShapingUplinkSelectionFailoverAndFailback();
            _resultValue.immediate = immediate;
            return _resultValue;
        }
    }
}
