// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetDevicesUplinksLossAndLatencyItemTimeSeries;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDevicesUplinksLossAndLatencyItem {
    /**
     * @return IP address of uplink
     * 
     */
    private String ip;
    /**
     * @return Network ID
     * 
     */
    private String networkId;
    /**
     * @return Serial of MX device
     * 
     */
    private String serial;
    /**
     * @return Loss and latency timeseries data
     * 
     */
    private List<GetDevicesUplinksLossAndLatencyItemTimeSeries> timeSeries;
    /**
     * @return Uplink interface (wan1, wan2, or cellular)
     * 
     */
    private String uplink;

    private GetDevicesUplinksLossAndLatencyItem() {}
    /**
     * @return IP address of uplink
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return Network ID
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Serial of MX device
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Loss and latency timeseries data
     * 
     */
    public List<GetDevicesUplinksLossAndLatencyItemTimeSeries> timeSeries() {
        return this.timeSeries;
    }
    /**
     * @return Uplink interface (wan1, wan2, or cellular)
     * 
     */
    public String uplink() {
        return this.uplink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesUplinksLossAndLatencyItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ip;
        private String networkId;
        private String serial;
        private List<GetDevicesUplinksLossAndLatencyItemTimeSeries> timeSeries;
        private String uplink;
        public Builder() {}
        public Builder(GetDevicesUplinksLossAndLatencyItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.networkId = defaults.networkId;
    	      this.serial = defaults.serial;
    	      this.timeSeries = defaults.timeSeries;
    	      this.uplink = defaults.uplink;
        }

        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyItem", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder timeSeries(List<GetDevicesUplinksLossAndLatencyItemTimeSeries> timeSeries) {
            if (timeSeries == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyItem", "timeSeries");
            }
            this.timeSeries = timeSeries;
            return this;
        }
        public Builder timeSeries(GetDevicesUplinksLossAndLatencyItemTimeSeries... timeSeries) {
            return timeSeries(List.of(timeSeries));
        }
        @CustomType.Setter
        public Builder uplink(String uplink) {
            if (uplink == null) {
              throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyItem", "uplink");
            }
            this.uplink = uplink;
            return this;
        }
        public GetDevicesUplinksLossAndLatencyItem build() {
            final var _resultValue = new GetDevicesUplinksLossAndLatencyItem();
            _resultValue.ip = ip;
            _resultValue.networkId = networkId;
            _resultValue.serial = serial;
            _resultValue.timeSeries = timeSeries;
            _resultValue.uplink = uplink;
            return _resultValue;
        }
    }
}
