// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus0Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus10Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus11Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus12Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus13Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus14Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus1Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus2Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus3Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus4Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus5Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus6Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus7Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus8Args;
import com.pulumi.meraki.networks.inputs.ClientsSplashAuthorizationStatusSsidsStatus9Args;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientsSplashAuthorizationStatusSsidsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientsSplashAuthorizationStatusSsidsArgs Empty = new ClientsSplashAuthorizationStatusSsidsArgs();

    /**
     * Splash authorization for SSID 0
     * 
     */
    @Import(name="status0")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus0Args> status0;

    /**
     * @return Splash authorization for SSID 0
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus0Args>> status0() {
        return Optional.ofNullable(this.status0);
    }

    /**
     * Splash authorization for SSID 1
     * 
     */
    @Import(name="status1")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus1Args> status1;

    /**
     * @return Splash authorization for SSID 1
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus1Args>> status1() {
        return Optional.ofNullable(this.status1);
    }

    /**
     * Splash authorization for SSID 10
     * 
     */
    @Import(name="status10")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus10Args> status10;

    /**
     * @return Splash authorization for SSID 10
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus10Args>> status10() {
        return Optional.ofNullable(this.status10);
    }

    /**
     * Splash authorization for SSID 11
     * 
     */
    @Import(name="status11")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus11Args> status11;

    /**
     * @return Splash authorization for SSID 11
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus11Args>> status11() {
        return Optional.ofNullable(this.status11);
    }

    /**
     * Splash authorization for SSID 12
     * 
     */
    @Import(name="status12")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus12Args> status12;

    /**
     * @return Splash authorization for SSID 12
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus12Args>> status12() {
        return Optional.ofNullable(this.status12);
    }

    /**
     * Splash authorization for SSID 13
     * 
     */
    @Import(name="status13")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus13Args> status13;

    /**
     * @return Splash authorization for SSID 13
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus13Args>> status13() {
        return Optional.ofNullable(this.status13);
    }

    /**
     * Splash authorization for SSID 14
     * 
     */
    @Import(name="status14")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus14Args> status14;

    /**
     * @return Splash authorization for SSID 14
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus14Args>> status14() {
        return Optional.ofNullable(this.status14);
    }

    /**
     * Splash authorization for SSID 2
     * 
     */
    @Import(name="status2")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus2Args> status2;

    /**
     * @return Splash authorization for SSID 2
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus2Args>> status2() {
        return Optional.ofNullable(this.status2);
    }

    /**
     * Splash authorization for SSID 3
     * 
     */
    @Import(name="status3")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus3Args> status3;

    /**
     * @return Splash authorization for SSID 3
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus3Args>> status3() {
        return Optional.ofNullable(this.status3);
    }

    /**
     * Splash authorization for SSID 4
     * 
     */
    @Import(name="status4")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus4Args> status4;

    /**
     * @return Splash authorization for SSID 4
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus4Args>> status4() {
        return Optional.ofNullable(this.status4);
    }

    /**
     * Splash authorization for SSID 5
     * 
     */
    @Import(name="status5")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus5Args> status5;

    /**
     * @return Splash authorization for SSID 5
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus5Args>> status5() {
        return Optional.ofNullable(this.status5);
    }

    /**
     * Splash authorization for SSID 6
     * 
     */
    @Import(name="status6")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus6Args> status6;

    /**
     * @return Splash authorization for SSID 6
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus6Args>> status6() {
        return Optional.ofNullable(this.status6);
    }

    /**
     * Splash authorization for SSID 7
     * 
     */
    @Import(name="status7")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus7Args> status7;

    /**
     * @return Splash authorization for SSID 7
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus7Args>> status7() {
        return Optional.ofNullable(this.status7);
    }

    /**
     * Splash authorization for SSID 8
     * 
     */
    @Import(name="status8")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus8Args> status8;

    /**
     * @return Splash authorization for SSID 8
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus8Args>> status8() {
        return Optional.ofNullable(this.status8);
    }

    /**
     * Splash authorization for SSID 9
     * 
     */
    @Import(name="status9")
    private @Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus9Args> status9;

    /**
     * @return Splash authorization for SSID 9
     * 
     */
    public Optional<Output<ClientsSplashAuthorizationStatusSsidsStatus9Args>> status9() {
        return Optional.ofNullable(this.status9);
    }

    private ClientsSplashAuthorizationStatusSsidsArgs() {}

    private ClientsSplashAuthorizationStatusSsidsArgs(ClientsSplashAuthorizationStatusSsidsArgs $) {
        this.status0 = $.status0;
        this.status1 = $.status1;
        this.status10 = $.status10;
        this.status11 = $.status11;
        this.status12 = $.status12;
        this.status13 = $.status13;
        this.status14 = $.status14;
        this.status2 = $.status2;
        this.status3 = $.status3;
        this.status4 = $.status4;
        this.status5 = $.status5;
        this.status6 = $.status6;
        this.status7 = $.status7;
        this.status8 = $.status8;
        this.status9 = $.status9;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientsSplashAuthorizationStatusSsidsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientsSplashAuthorizationStatusSsidsArgs $;

        public Builder() {
            $ = new ClientsSplashAuthorizationStatusSsidsArgs();
        }

        public Builder(ClientsSplashAuthorizationStatusSsidsArgs defaults) {
            $ = new ClientsSplashAuthorizationStatusSsidsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param status0 Splash authorization for SSID 0
         * 
         * @return builder
         * 
         */
        public Builder status0(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus0Args> status0) {
            $.status0 = status0;
            return this;
        }

        /**
         * @param status0 Splash authorization for SSID 0
         * 
         * @return builder
         * 
         */
        public Builder status0(ClientsSplashAuthorizationStatusSsidsStatus0Args status0) {
            return status0(Output.of(status0));
        }

        /**
         * @param status1 Splash authorization for SSID 1
         * 
         * @return builder
         * 
         */
        public Builder status1(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus1Args> status1) {
            $.status1 = status1;
            return this;
        }

        /**
         * @param status1 Splash authorization for SSID 1
         * 
         * @return builder
         * 
         */
        public Builder status1(ClientsSplashAuthorizationStatusSsidsStatus1Args status1) {
            return status1(Output.of(status1));
        }

        /**
         * @param status10 Splash authorization for SSID 10
         * 
         * @return builder
         * 
         */
        public Builder status10(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus10Args> status10) {
            $.status10 = status10;
            return this;
        }

        /**
         * @param status10 Splash authorization for SSID 10
         * 
         * @return builder
         * 
         */
        public Builder status10(ClientsSplashAuthorizationStatusSsidsStatus10Args status10) {
            return status10(Output.of(status10));
        }

        /**
         * @param status11 Splash authorization for SSID 11
         * 
         * @return builder
         * 
         */
        public Builder status11(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus11Args> status11) {
            $.status11 = status11;
            return this;
        }

        /**
         * @param status11 Splash authorization for SSID 11
         * 
         * @return builder
         * 
         */
        public Builder status11(ClientsSplashAuthorizationStatusSsidsStatus11Args status11) {
            return status11(Output.of(status11));
        }

        /**
         * @param status12 Splash authorization for SSID 12
         * 
         * @return builder
         * 
         */
        public Builder status12(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus12Args> status12) {
            $.status12 = status12;
            return this;
        }

        /**
         * @param status12 Splash authorization for SSID 12
         * 
         * @return builder
         * 
         */
        public Builder status12(ClientsSplashAuthorizationStatusSsidsStatus12Args status12) {
            return status12(Output.of(status12));
        }

        /**
         * @param status13 Splash authorization for SSID 13
         * 
         * @return builder
         * 
         */
        public Builder status13(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus13Args> status13) {
            $.status13 = status13;
            return this;
        }

        /**
         * @param status13 Splash authorization for SSID 13
         * 
         * @return builder
         * 
         */
        public Builder status13(ClientsSplashAuthorizationStatusSsidsStatus13Args status13) {
            return status13(Output.of(status13));
        }

        /**
         * @param status14 Splash authorization for SSID 14
         * 
         * @return builder
         * 
         */
        public Builder status14(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus14Args> status14) {
            $.status14 = status14;
            return this;
        }

        /**
         * @param status14 Splash authorization for SSID 14
         * 
         * @return builder
         * 
         */
        public Builder status14(ClientsSplashAuthorizationStatusSsidsStatus14Args status14) {
            return status14(Output.of(status14));
        }

        /**
         * @param status2 Splash authorization for SSID 2
         * 
         * @return builder
         * 
         */
        public Builder status2(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus2Args> status2) {
            $.status2 = status2;
            return this;
        }

        /**
         * @param status2 Splash authorization for SSID 2
         * 
         * @return builder
         * 
         */
        public Builder status2(ClientsSplashAuthorizationStatusSsidsStatus2Args status2) {
            return status2(Output.of(status2));
        }

        /**
         * @param status3 Splash authorization for SSID 3
         * 
         * @return builder
         * 
         */
        public Builder status3(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus3Args> status3) {
            $.status3 = status3;
            return this;
        }

        /**
         * @param status3 Splash authorization for SSID 3
         * 
         * @return builder
         * 
         */
        public Builder status3(ClientsSplashAuthorizationStatusSsidsStatus3Args status3) {
            return status3(Output.of(status3));
        }

        /**
         * @param status4 Splash authorization for SSID 4
         * 
         * @return builder
         * 
         */
        public Builder status4(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus4Args> status4) {
            $.status4 = status4;
            return this;
        }

        /**
         * @param status4 Splash authorization for SSID 4
         * 
         * @return builder
         * 
         */
        public Builder status4(ClientsSplashAuthorizationStatusSsidsStatus4Args status4) {
            return status4(Output.of(status4));
        }

        /**
         * @param status5 Splash authorization for SSID 5
         * 
         * @return builder
         * 
         */
        public Builder status5(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus5Args> status5) {
            $.status5 = status5;
            return this;
        }

        /**
         * @param status5 Splash authorization for SSID 5
         * 
         * @return builder
         * 
         */
        public Builder status5(ClientsSplashAuthorizationStatusSsidsStatus5Args status5) {
            return status5(Output.of(status5));
        }

        /**
         * @param status6 Splash authorization for SSID 6
         * 
         * @return builder
         * 
         */
        public Builder status6(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus6Args> status6) {
            $.status6 = status6;
            return this;
        }

        /**
         * @param status6 Splash authorization for SSID 6
         * 
         * @return builder
         * 
         */
        public Builder status6(ClientsSplashAuthorizationStatusSsidsStatus6Args status6) {
            return status6(Output.of(status6));
        }

        /**
         * @param status7 Splash authorization for SSID 7
         * 
         * @return builder
         * 
         */
        public Builder status7(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus7Args> status7) {
            $.status7 = status7;
            return this;
        }

        /**
         * @param status7 Splash authorization for SSID 7
         * 
         * @return builder
         * 
         */
        public Builder status7(ClientsSplashAuthorizationStatusSsidsStatus7Args status7) {
            return status7(Output.of(status7));
        }

        /**
         * @param status8 Splash authorization for SSID 8
         * 
         * @return builder
         * 
         */
        public Builder status8(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus8Args> status8) {
            $.status8 = status8;
            return this;
        }

        /**
         * @param status8 Splash authorization for SSID 8
         * 
         * @return builder
         * 
         */
        public Builder status8(ClientsSplashAuthorizationStatusSsidsStatus8Args status8) {
            return status8(Output.of(status8));
        }

        /**
         * @param status9 Splash authorization for SSID 9
         * 
         * @return builder
         * 
         */
        public Builder status9(@Nullable Output<ClientsSplashAuthorizationStatusSsidsStatus9Args> status9) {
            $.status9 = status9;
            return this;
        }

        /**
         * @param status9 Splash authorization for SSID 9
         * 
         * @return builder
         * 
         */
        public Builder status9(ClientsSplashAuthorizationStatusSsidsStatus9Args status9) {
            return status9(Output.of(status9));
        }

        public ClientsSplashAuthorizationStatusSsidsArgs build() {
            return $;
        }
    }

}
