// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopAppliancesByUtilizationItemNetwork;
import com.pulumi.meraki.organizations.outputs.GetSummaryTopAppliancesByUtilizationItemUtilization;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSummaryTopAppliancesByUtilizationItem {
    /**
     * @return Mac address of the appliance
     * 
     */
    private String mac;
    /**
     * @return Model of the appliance
     * 
     */
    private String model;
    /**
     * @return Name of the appliance
     * 
     */
    private String name;
    /**
     * @return Network info
     * 
     */
    private GetSummaryTopAppliancesByUtilizationItemNetwork network;
    /**
     * @return Serial number of the appliance
     * 
     */
    private String serial;
    /**
     * @return Utilization of the appliance
     * 
     */
    private GetSummaryTopAppliancesByUtilizationItemUtilization utilization;

    private GetSummaryTopAppliancesByUtilizationItem() {}
    /**
     * @return Mac address of the appliance
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Model of the appliance
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return Name of the appliance
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network info
     * 
     */
    public GetSummaryTopAppliancesByUtilizationItemNetwork network() {
        return this.network;
    }
    /**
     * @return Serial number of the appliance
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Utilization of the appliance
     * 
     */
    public GetSummaryTopAppliancesByUtilizationItemUtilization utilization() {
        return this.utilization;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSummaryTopAppliancesByUtilizationItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mac;
        private String model;
        private String name;
        private GetSummaryTopAppliancesByUtilizationItemNetwork network;
        private String serial;
        private GetSummaryTopAppliancesByUtilizationItemUtilization utilization;
        public Builder() {}
        public Builder(GetSummaryTopAppliancesByUtilizationItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.serial = defaults.serial;
    	      this.utilization = defaults.utilization;
        }

        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(GetSummaryTopAppliancesByUtilizationItemNetwork network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder utilization(GetSummaryTopAppliancesByUtilizationItemUtilization utilization) {
            if (utilization == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopAppliancesByUtilizationItem", "utilization");
            }
            this.utilization = utilization;
            return this;
        }
        public GetSummaryTopAppliancesByUtilizationItem build() {
            final var _resultValue = new GetSummaryTopAppliancesByUtilizationItem();
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.serial = serial;
            _resultValue.utilization = utilization;
            return _resultValue;
        }
    }
}
