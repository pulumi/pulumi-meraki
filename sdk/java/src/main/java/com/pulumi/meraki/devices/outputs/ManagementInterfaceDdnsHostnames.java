// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementInterfaceDdnsHostnames {
    /**
     * @return Active dynamic DNS hostname.
     * 
     */
    private @Nullable String activeDdnsHostname;
    /**
     * @return WAN 1 dynamic DNS hostname.
     * 
     */
    private @Nullable String ddnsHostnameWan1;
    /**
     * @return WAN 2 dynamic DNS hostname.
     * 
     */
    private @Nullable String ddnsHostnameWan2;

    private ManagementInterfaceDdnsHostnames() {}
    /**
     * @return Active dynamic DNS hostname.
     * 
     */
    public Optional<String> activeDdnsHostname() {
        return Optional.ofNullable(this.activeDdnsHostname);
    }
    /**
     * @return WAN 1 dynamic DNS hostname.
     * 
     */
    public Optional<String> ddnsHostnameWan1() {
        return Optional.ofNullable(this.ddnsHostnameWan1);
    }
    /**
     * @return WAN 2 dynamic DNS hostname.
     * 
     */
    public Optional<String> ddnsHostnameWan2() {
        return Optional.ofNullable(this.ddnsHostnameWan2);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementInterfaceDdnsHostnames defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activeDdnsHostname;
        private @Nullable String ddnsHostnameWan1;
        private @Nullable String ddnsHostnameWan2;
        public Builder() {}
        public Builder(ManagementInterfaceDdnsHostnames defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDdnsHostname = defaults.activeDdnsHostname;
    	      this.ddnsHostnameWan1 = defaults.ddnsHostnameWan1;
    	      this.ddnsHostnameWan2 = defaults.ddnsHostnameWan2;
        }

        @CustomType.Setter
        public Builder activeDdnsHostname(@Nullable String activeDdnsHostname) {

            this.activeDdnsHostname = activeDdnsHostname;
            return this;
        }
        @CustomType.Setter
        public Builder ddnsHostnameWan1(@Nullable String ddnsHostnameWan1) {

            this.ddnsHostnameWan1 = ddnsHostnameWan1;
            return this;
        }
        @CustomType.Setter
        public Builder ddnsHostnameWan2(@Nullable String ddnsHostnameWan2) {

            this.ddnsHostnameWan2 = ddnsHostnameWan2;
            return this;
        }
        public ManagementInterfaceDdnsHostnames build() {
            final var _resultValue = new ManagementInterfaceDdnsHostnames();
            _resultValue.activeDdnsHostname = activeDdnsHostname;
            _resultValue.ddnsHostnameWan1 = ddnsHostnameWan1;
            _resultValue.ddnsHostnameWan2 = ddnsHostnameWan2;
            return _resultValue;
        }
    }
}
