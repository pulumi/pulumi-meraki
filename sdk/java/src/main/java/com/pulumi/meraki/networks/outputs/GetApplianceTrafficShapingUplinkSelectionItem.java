// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceTrafficShapingUplinkSelectionItem {
    /**
     * @return Whether active-active AutoVPN is enabled
     * 
     */
    private Boolean activeActiveAutoVpnEnabled;
    /**
     * @return The default uplink. Must be one of: &#39;wan1&#39; or &#39;wan2&#39;
     * 
     */
    private String defaultUplink;
    /**
     * @return WAN failover and failback
     * 
     */
    private GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback failoverAndFailback;
    /**
     * @return Whether load balancing is enabled
     * 
     */
    private Boolean loadBalancingEnabled;
    /**
     * @return Uplink preference rules for VPN traffic
     * 
     */
    private List<GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference> vpnTrafficUplinkPreferences;
    /**
     * @return Uplink preference rules for WAN traffic
     * 
     */
    private List<GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference> wanTrafficUplinkPreferences;

    private GetApplianceTrafficShapingUplinkSelectionItem() {}
    /**
     * @return Whether active-active AutoVPN is enabled
     * 
     */
    public Boolean activeActiveAutoVpnEnabled() {
        return this.activeActiveAutoVpnEnabled;
    }
    /**
     * @return The default uplink. Must be one of: &#39;wan1&#39; or &#39;wan2&#39;
     * 
     */
    public String defaultUplink() {
        return this.defaultUplink;
    }
    /**
     * @return WAN failover and failback
     * 
     */
    public GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback failoverAndFailback() {
        return this.failoverAndFailback;
    }
    /**
     * @return Whether load balancing is enabled
     * 
     */
    public Boolean loadBalancingEnabled() {
        return this.loadBalancingEnabled;
    }
    /**
     * @return Uplink preference rules for VPN traffic
     * 
     */
    public List<GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference> vpnTrafficUplinkPreferences() {
        return this.vpnTrafficUplinkPreferences;
    }
    /**
     * @return Uplink preference rules for WAN traffic
     * 
     */
    public List<GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference> wanTrafficUplinkPreferences() {
        return this.wanTrafficUplinkPreferences;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceTrafficShapingUplinkSelectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean activeActiveAutoVpnEnabled;
        private String defaultUplink;
        private GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback failoverAndFailback;
        private Boolean loadBalancingEnabled;
        private List<GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference> vpnTrafficUplinkPreferences;
        private List<GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference> wanTrafficUplinkPreferences;
        public Builder() {}
        public Builder(GetApplianceTrafficShapingUplinkSelectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeActiveAutoVpnEnabled = defaults.activeActiveAutoVpnEnabled;
    	      this.defaultUplink = defaults.defaultUplink;
    	      this.failoverAndFailback = defaults.failoverAndFailback;
    	      this.loadBalancingEnabled = defaults.loadBalancingEnabled;
    	      this.vpnTrafficUplinkPreferences = defaults.vpnTrafficUplinkPreferences;
    	      this.wanTrafficUplinkPreferences = defaults.wanTrafficUplinkPreferences;
        }

        @CustomType.Setter
        public Builder activeActiveAutoVpnEnabled(Boolean activeActiveAutoVpnEnabled) {
            if (activeActiveAutoVpnEnabled == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "activeActiveAutoVpnEnabled");
            }
            this.activeActiveAutoVpnEnabled = activeActiveAutoVpnEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder defaultUplink(String defaultUplink) {
            if (defaultUplink == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "defaultUplink");
            }
            this.defaultUplink = defaultUplink;
            return this;
        }
        @CustomType.Setter
        public Builder failoverAndFailback(GetApplianceTrafficShapingUplinkSelectionItemFailoverAndFailback failoverAndFailback) {
            if (failoverAndFailback == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "failoverAndFailback");
            }
            this.failoverAndFailback = failoverAndFailback;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancingEnabled(Boolean loadBalancingEnabled) {
            if (loadBalancingEnabled == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "loadBalancingEnabled");
            }
            this.loadBalancingEnabled = loadBalancingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder vpnTrafficUplinkPreferences(List<GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference> vpnTrafficUplinkPreferences) {
            if (vpnTrafficUplinkPreferences == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "vpnTrafficUplinkPreferences");
            }
            this.vpnTrafficUplinkPreferences = vpnTrafficUplinkPreferences;
            return this;
        }
        public Builder vpnTrafficUplinkPreferences(GetApplianceTrafficShapingUplinkSelectionItemVpnTrafficUplinkPreference... vpnTrafficUplinkPreferences) {
            return vpnTrafficUplinkPreferences(List.of(vpnTrafficUplinkPreferences));
        }
        @CustomType.Setter
        public Builder wanTrafficUplinkPreferences(List<GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference> wanTrafficUplinkPreferences) {
            if (wanTrafficUplinkPreferences == null) {
              throw new MissingRequiredPropertyException("GetApplianceTrafficShapingUplinkSelectionItem", "wanTrafficUplinkPreferences");
            }
            this.wanTrafficUplinkPreferences = wanTrafficUplinkPreferences;
            return this;
        }
        public Builder wanTrafficUplinkPreferences(GetApplianceTrafficShapingUplinkSelectionItemWanTrafficUplinkPreference... wanTrafficUplinkPreferences) {
            return wanTrafficUplinkPreferences(List.of(wanTrafficUplinkPreferences));
        }
        public GetApplianceTrafficShapingUplinkSelectionItem build() {
            final var _resultValue = new GetApplianceTrafficShapingUplinkSelectionItem();
            _resultValue.activeActiveAutoVpnEnabled = activeActiveAutoVpnEnabled;
            _resultValue.defaultUplink = defaultUplink;
            _resultValue.failoverAndFailback = failoverAndFailback;
            _resultValue.loadBalancingEnabled = loadBalancingEnabled;
            _resultValue.vpnTrafficUplinkPreferences = vpnTrafficUplinkPreferences;
            _resultValue.wanTrafficUplinkPreferences = wanTrafficUplinkPreferences;
            return _resultValue;
        }
    }
}
