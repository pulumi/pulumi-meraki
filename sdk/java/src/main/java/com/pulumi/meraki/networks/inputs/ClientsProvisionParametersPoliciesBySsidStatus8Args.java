// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientsProvisionParametersPoliciesBySsidStatus8Args extends com.pulumi.resources.ResourceArgs {

    public static final ClientsProvisionParametersPoliciesBySsidStatus8Args Empty = new ClientsProvisionParametersPoliciesBySsidStatus8Args();

    /**
     * The policy to apply to the specified client. Can be &#39;Allowed&#39;, &#39;Blocked&#39;, &#39;Normal&#39; or &#39;Group policy&#39;. Required.
     * 
     */
    @Import(name="devicePolicy")
    private @Nullable Output<String> devicePolicy;

    /**
     * @return The policy to apply to the specified client. Can be &#39;Allowed&#39;, &#39;Blocked&#39;, &#39;Normal&#39; or &#39;Group policy&#39;. Required.
     * 
     */
    public Optional<Output<String>> devicePolicy() {
        return Optional.ofNullable(this.devicePolicy);
    }

    /**
     * The ID of the desired group policy to apply to the client. Required if &#39;devicePolicy&#39; is set to &#34;Group policy&#34;. Otherwise this is ignored.
     * 
     */
    @Import(name="groupPolicyId")
    private @Nullable Output<String> groupPolicyId;

    /**
     * @return The ID of the desired group policy to apply to the client. Required if &#39;devicePolicy&#39; is set to &#34;Group policy&#34;. Otherwise this is ignored.
     * 
     */
    public Optional<Output<String>> groupPolicyId() {
        return Optional.ofNullable(this.groupPolicyId);
    }

    private ClientsProvisionParametersPoliciesBySsidStatus8Args() {}

    private ClientsProvisionParametersPoliciesBySsidStatus8Args(ClientsProvisionParametersPoliciesBySsidStatus8Args $) {
        this.devicePolicy = $.devicePolicy;
        this.groupPolicyId = $.groupPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientsProvisionParametersPoliciesBySsidStatus8Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientsProvisionParametersPoliciesBySsidStatus8Args $;

        public Builder() {
            $ = new ClientsProvisionParametersPoliciesBySsidStatus8Args();
        }

        public Builder(ClientsProvisionParametersPoliciesBySsidStatus8Args defaults) {
            $ = new ClientsProvisionParametersPoliciesBySsidStatus8Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param devicePolicy The policy to apply to the specified client. Can be &#39;Allowed&#39;, &#39;Blocked&#39;, &#39;Normal&#39; or &#39;Group policy&#39;. Required.
         * 
         * @return builder
         * 
         */
        public Builder devicePolicy(@Nullable Output<String> devicePolicy) {
            $.devicePolicy = devicePolicy;
            return this;
        }

        /**
         * @param devicePolicy The policy to apply to the specified client. Can be &#39;Allowed&#39;, &#39;Blocked&#39;, &#39;Normal&#39; or &#39;Group policy&#39;. Required.
         * 
         * @return builder
         * 
         */
        public Builder devicePolicy(String devicePolicy) {
            return devicePolicy(Output.of(devicePolicy));
        }

        /**
         * @param groupPolicyId The ID of the desired group policy to apply to the client. Required if &#39;devicePolicy&#39; is set to &#34;Group policy&#34;. Otherwise this is ignored.
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(@Nullable Output<String> groupPolicyId) {
            $.groupPolicyId = groupPolicyId;
            return this;
        }

        /**
         * @param groupPolicyId The ID of the desired group policy to apply to the client. Required if &#39;devicePolicy&#39; is set to &#34;Group policy&#34;. Otherwise this is ignored.
         * 
         * @return builder
         * 
         */
        public Builder groupPolicyId(String groupPolicyId) {
            return groupPolicyId(Output.of(groupPolicyId));
        }

        public ClientsProvisionParametersPoliciesBySsidStatus8Args build() {
            return $;
        }
    }

}
