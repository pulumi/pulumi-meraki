// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSmDevicesItem {
    /**
     * @return The Meraki Id of the device record.
     * 
     */
    private String id;
    /**
     * @return The IP address of the device.
     * 
     */
    private String ip;
    /**
     * @return The name of the device.
     * 
     */
    private String name;
    /**
     * @return Notes associated with the device.
     * 
     */
    private String notes;
    /**
     * @return The name of the device OS.
     * 
     */
    private String osName;
    /**
     * @return The device serial.
     * 
     */
    private String serial;
    /**
     * @return The device serial number.
     * 
     */
    private String serialNumber;
    /**
     * @return The name of the SSID the device was last connected to.
     * 
     */
    private String ssid;
    /**
     * @return The device model.
     * 
     */
    private String systemModel;
    /**
     * @return An array of tags associated with the device.
     * 
     */
    private List<String> tags;
    /**
     * @return The UUID of the device.
     * 
     */
    private String uuid;
    /**
     * @return The MAC of the device.
     * 
     */
    private String wifiMac;

    private GetSmDevicesItem() {}
    /**
     * @return The Meraki Id of the device record.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP address of the device.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The name of the device.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Notes associated with the device.
     * 
     */
    public String notes() {
        return this.notes;
    }
    /**
     * @return The name of the device OS.
     * 
     */
    public String osName() {
        return this.osName;
    }
    /**
     * @return The device serial.
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return The device serial number.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The name of the SSID the device was last connected to.
     * 
     */
    public String ssid() {
        return this.ssid;
    }
    /**
     * @return The device model.
     * 
     */
    public String systemModel() {
        return this.systemModel;
    }
    /**
     * @return An array of tags associated with the device.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The UUID of the device.
     * 
     */
    public String uuid() {
        return this.uuid;
    }
    /**
     * @return The MAC of the device.
     * 
     */
    public String wifiMac() {
        return this.wifiMac;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSmDevicesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String ip;
        private String name;
        private String notes;
        private String osName;
        private String serial;
        private String serialNumber;
        private String ssid;
        private String systemModel;
        private List<String> tags;
        private String uuid;
        private String wifiMac;
        public Builder() {}
        public Builder(GetSmDevicesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.name = defaults.name;
    	      this.notes = defaults.notes;
    	      this.osName = defaults.osName;
    	      this.serial = defaults.serial;
    	      this.serialNumber = defaults.serialNumber;
    	      this.ssid = defaults.ssid;
    	      this.systemModel = defaults.systemModel;
    	      this.tags = defaults.tags;
    	      this.uuid = defaults.uuid;
    	      this.wifiMac = defaults.wifiMac;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notes(String notes) {
            if (notes == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "notes");
            }
            this.notes = notes;
            return this;
        }
        @CustomType.Setter
        public Builder osName(String osName) {
            if (osName == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "osName");
            }
            this.osName = osName;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder ssid(String ssid) {
            if (ssid == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "ssid");
            }
            this.ssid = ssid;
            return this;
        }
        @CustomType.Setter
        public Builder systemModel(String systemModel) {
            if (systemModel == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "systemModel");
            }
            this.systemModel = systemModel;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder wifiMac(String wifiMac) {
            if (wifiMac == null) {
              throw new MissingRequiredPropertyException("GetSmDevicesItem", "wifiMac");
            }
            this.wifiMac = wifiMac;
            return this;
        }
        public GetSmDevicesItem build() {
            final var _resultValue = new GetSmDevicesItem();
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.name = name;
            _resultValue.notes = notes;
            _resultValue.osName = osName;
            _resultValue.serial = serial;
            _resultValue.serialNumber = serialNumber;
            _resultValue.ssid = ssid;
            _resultValue.systemModel = systemModel;
            _resultValue.tags = tags;
            _resultValue.uuid = uuid;
            _resultValue.wifiMac = wifiMac;
            return _resultValue;
        }
    }
}
