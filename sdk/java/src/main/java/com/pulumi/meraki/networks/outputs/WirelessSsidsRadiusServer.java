// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WirelessSsidsRadiusServer {
    /**
     * @return Certificate used for authorization for the RADSEC Server
     * 
     */
    private @Nullable String caCertificate;
    /**
     * @return IP address of your RADIUS server
     * 
     */
    private @Nullable String host;
    /**
     * @return The ID of the Openroaming Certificate attached to radius server.
     * 
     */
    private @Nullable Integer openRoamingCertificateId;
    /**
     * @return UDP port the RADIUS server listens on for Access-requests
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Use RADSEC (TLS over TCP) to connect to this RADIUS server. Requires radiusProxyEnabled.
     * 
     */
    private @Nullable Boolean radsecEnabled;
    /**
     * @return RADIUS client shared secret
     * 
     */
    private @Nullable String secret;

    private WirelessSsidsRadiusServer() {}
    /**
     * @return Certificate used for authorization for the RADSEC Server
     * 
     */
    public Optional<String> caCertificate() {
        return Optional.ofNullable(this.caCertificate);
    }
    /**
     * @return IP address of your RADIUS server
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return The ID of the Openroaming Certificate attached to radius server.
     * 
     */
    public Optional<Integer> openRoamingCertificateId() {
        return Optional.ofNullable(this.openRoamingCertificateId);
    }
    /**
     * @return UDP port the RADIUS server listens on for Access-requests
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Use RADSEC (TLS over TCP) to connect to this RADIUS server. Requires radiusProxyEnabled.
     * 
     */
    public Optional<Boolean> radsecEnabled() {
        return Optional.ofNullable(this.radsecEnabled);
    }
    /**
     * @return RADIUS client shared secret
     * 
     */
    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WirelessSsidsRadiusServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String caCertificate;
        private @Nullable String host;
        private @Nullable Integer openRoamingCertificateId;
        private @Nullable Integer port;
        private @Nullable Boolean radsecEnabled;
        private @Nullable String secret;
        public Builder() {}
        public Builder(WirelessSsidsRadiusServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caCertificate = defaults.caCertificate;
    	      this.host = defaults.host;
    	      this.openRoamingCertificateId = defaults.openRoamingCertificateId;
    	      this.port = defaults.port;
    	      this.radsecEnabled = defaults.radsecEnabled;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder caCertificate(@Nullable String caCertificate) {

            this.caCertificate = caCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder openRoamingCertificateId(@Nullable Integer openRoamingCertificateId) {

            this.openRoamingCertificateId = openRoamingCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder radsecEnabled(@Nullable Boolean radsecEnabled) {

            this.radsecEnabled = radsecEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable String secret) {

            this.secret = secret;
            return this;
        }
        public WirelessSsidsRadiusServer build() {
            final var _resultValue = new WirelessSsidsRadiusServer();
            _resultValue.caCertificate = caCertificate;
            _resultValue.host = host;
            _resultValue.openRoamingCertificateId = openRoamingCertificateId;
            _resultValue.port = port;
            _resultValue.radsecEnabled = radsecEnabled;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
