// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWebhooksHttpServersItemPayloadTemplate;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWebhooksHttpServersItem {
    /**
     * @return A Base64 encoded ID.
     * 
     */
    private String id;
    /**
     * @return A name for easy reference to the HTTP server
     * 
     */
    private String name;
    /**
     * @return A Meraki network ID.
     * 
     */
    private String networkId;
    /**
     * @return The payload template to use when posting data to the HTTP server.
     * 
     */
    private GetWebhooksHttpServersItemPayloadTemplate payloadTemplate;
    /**
     * @return The URL of the HTTP server.
     * 
     */
    private String url;

    private GetWebhooksHttpServersItem() {}
    /**
     * @return A Base64 encoded ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A name for easy reference to the HTTP server
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A Meraki network ID.
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return The payload template to use when posting data to the HTTP server.
     * 
     */
    public GetWebhooksHttpServersItemPayloadTemplate payloadTemplate() {
        return this.payloadTemplate;
    }
    /**
     * @return The URL of the HTTP server.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebhooksHttpServersItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String networkId;
        private GetWebhooksHttpServersItemPayloadTemplate payloadTemplate;
        private String url;
        public Builder() {}
        public Builder(GetWebhooksHttpServersItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.payloadTemplate = defaults.payloadTemplate;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWebhooksHttpServersItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWebhooksHttpServersItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetWebhooksHttpServersItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder payloadTemplate(GetWebhooksHttpServersItemPayloadTemplate payloadTemplate) {
            if (payloadTemplate == null) {
              throw new MissingRequiredPropertyException("GetWebhooksHttpServersItem", "payloadTemplate");
            }
            this.payloadTemplate = payloadTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetWebhooksHttpServersItem", "url");
            }
            this.url = url;
            return this;
        }
        public GetWebhooksHttpServersItem build() {
            final var _resultValue = new GetWebhooksHttpServersItem();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.networkId = networkId;
            _resultValue.payloadTemplate = payloadTemplate;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
