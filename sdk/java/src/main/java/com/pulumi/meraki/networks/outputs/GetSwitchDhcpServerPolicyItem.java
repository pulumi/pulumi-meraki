// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpServerPolicyItemAlerts;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpServerPolicyItemArpInspection;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSwitchDhcpServerPolicyItem {
    /**
     * @return Email alert settings for DHCP servers
     * 
     */
    private GetSwitchDhcpServerPolicyItemAlerts alerts;
    /**
     * @return List the MAC addresses of DHCP servers to permit on the network when defaultPolicy is set
     * to block.An empty array will clear the entries.
     * 
     */
    private List<String> allowedServers;
    /**
     * @return Dynamic ARP Inspection settings
     * 
     */
    private GetSwitchDhcpServerPolicyItemArpInspection arpInspection;
    /**
     * @return List the MAC addresses of DHCP servers to block on the network when defaultPolicy is set
     * to allow.An empty array will clear the entries.
     * 
     */
    private List<String> blockedServers;
    /**
     * @return &#39;allow&#39; or &#39;block&#39; new DHCP servers. Default value is &#39;allow&#39;.
     * 
     */
    private String defaultPolicy;

    private GetSwitchDhcpServerPolicyItem() {}
    /**
     * @return Email alert settings for DHCP servers
     * 
     */
    public GetSwitchDhcpServerPolicyItemAlerts alerts() {
        return this.alerts;
    }
    /**
     * @return List the MAC addresses of DHCP servers to permit on the network when defaultPolicy is set
     * to block.An empty array will clear the entries.
     * 
     */
    public List<String> allowedServers() {
        return this.allowedServers;
    }
    /**
     * @return Dynamic ARP Inspection settings
     * 
     */
    public GetSwitchDhcpServerPolicyItemArpInspection arpInspection() {
        return this.arpInspection;
    }
    /**
     * @return List the MAC addresses of DHCP servers to block on the network when defaultPolicy is set
     * to allow.An empty array will clear the entries.
     * 
     */
    public List<String> blockedServers() {
        return this.blockedServers;
    }
    /**
     * @return &#39;allow&#39; or &#39;block&#39; new DHCP servers. Default value is &#39;allow&#39;.
     * 
     */
    public String defaultPolicy() {
        return this.defaultPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchDhcpServerPolicyItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetSwitchDhcpServerPolicyItemAlerts alerts;
        private List<String> allowedServers;
        private GetSwitchDhcpServerPolicyItemArpInspection arpInspection;
        private List<String> blockedServers;
        private String defaultPolicy;
        public Builder() {}
        public Builder(GetSwitchDhcpServerPolicyItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alerts = defaults.alerts;
    	      this.allowedServers = defaults.allowedServers;
    	      this.arpInspection = defaults.arpInspection;
    	      this.blockedServers = defaults.blockedServers;
    	      this.defaultPolicy = defaults.defaultPolicy;
        }

        @CustomType.Setter
        public Builder alerts(GetSwitchDhcpServerPolicyItemAlerts alerts) {
            if (alerts == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyItem", "alerts");
            }
            this.alerts = alerts;
            return this;
        }
        @CustomType.Setter
        public Builder allowedServers(List<String> allowedServers) {
            if (allowedServers == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyItem", "allowedServers");
            }
            this.allowedServers = allowedServers;
            return this;
        }
        public Builder allowedServers(String... allowedServers) {
            return allowedServers(List.of(allowedServers));
        }
        @CustomType.Setter
        public Builder arpInspection(GetSwitchDhcpServerPolicyItemArpInspection arpInspection) {
            if (arpInspection == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyItem", "arpInspection");
            }
            this.arpInspection = arpInspection;
            return this;
        }
        @CustomType.Setter
        public Builder blockedServers(List<String> blockedServers) {
            if (blockedServers == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyItem", "blockedServers");
            }
            this.blockedServers = blockedServers;
            return this;
        }
        public Builder blockedServers(String... blockedServers) {
            return blockedServers(List.of(blockedServers));
        }
        @CustomType.Setter
        public Builder defaultPolicy(String defaultPolicy) {
            if (defaultPolicy == null) {
              throw new MissingRequiredPropertyException("GetSwitchDhcpServerPolicyItem", "defaultPolicy");
            }
            this.defaultPolicy = defaultPolicy;
            return this;
        }
        public GetSwitchDhcpServerPolicyItem build() {
            final var _resultValue = new GetSwitchDhcpServerPolicyItem();
            _resultValue.alerts = alerts;
            _resultValue.allowedServers = allowedServers;
            _resultValue.arpInspection = arpInspection;
            _resultValue.blockedServers = blockedServers;
            _resultValue.defaultPolicy = defaultPolicy;
            return _resultValue;
        }
    }
}
