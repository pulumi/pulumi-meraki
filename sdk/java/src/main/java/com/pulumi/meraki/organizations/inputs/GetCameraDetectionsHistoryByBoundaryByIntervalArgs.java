// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCameraDetectionsHistoryByBoundaryByIntervalArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCameraDetectionsHistoryByBoundaryByIntervalArgs Empty = new GetCameraDetectionsHistoryByBoundaryByIntervalArgs();

    /**
     * boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
     * 
     */
    @Import(name="boundaryIds", required=true)
    private Output<List<String>> boundaryIds;

    /**
     * @return boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
     * 
     */
    public Output<List<String>> boundaryIds() {
        return this.boundaryIds;
    }

    /**
     * boundaryTypes query parameter. The detection types. Defaults to &#39;person&#39;.
     * 
     */
    @Import(name="boundaryTypes")
    private @Nullable Output<List<String>> boundaryTypes;

    /**
     * @return boundaryTypes query parameter. The detection types. Defaults to &#39;person&#39;.
     * 
     */
    public Optional<Output<List<String>>> boundaryTypes() {
        return Optional.ofNullable(this.boundaryTypes);
    }

    /**
     * duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
     * 
     */
    @Import(name="perPage")
    private @Nullable Output<Integer> perPage;

    /**
     * @return perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
     * 
     */
    public Optional<Output<Integer>> perPage() {
        return Optional.ofNullable(this.perPage);
    }

    /**
     * ranges query parameter. A list of time ranges with intervals
     * 
     */
    @Import(name="ranges", required=true)
    private Output<List<String>> ranges;

    /**
     * @return ranges query parameter. A list of time ranges with intervals
     * 
     */
    public Output<List<String>> ranges() {
        return this.ranges;
    }

    private GetCameraDetectionsHistoryByBoundaryByIntervalArgs() {}

    private GetCameraDetectionsHistoryByBoundaryByIntervalArgs(GetCameraDetectionsHistoryByBoundaryByIntervalArgs $) {
        this.boundaryIds = $.boundaryIds;
        this.boundaryTypes = $.boundaryTypes;
        this.duration = $.duration;
        this.organizationId = $.organizationId;
        this.perPage = $.perPage;
        this.ranges = $.ranges;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCameraDetectionsHistoryByBoundaryByIntervalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCameraDetectionsHistoryByBoundaryByIntervalArgs $;

        public Builder() {
            $ = new GetCameraDetectionsHistoryByBoundaryByIntervalArgs();
        }

        public Builder(GetCameraDetectionsHistoryByBoundaryByIntervalArgs defaults) {
            $ = new GetCameraDetectionsHistoryByBoundaryByIntervalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param boundaryIds boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
         * 
         * @return builder
         * 
         */
        public Builder boundaryIds(Output<List<String>> boundaryIds) {
            $.boundaryIds = boundaryIds;
            return this;
        }

        /**
         * @param boundaryIds boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
         * 
         * @return builder
         * 
         */
        public Builder boundaryIds(List<String> boundaryIds) {
            return boundaryIds(Output.of(boundaryIds));
        }

        /**
         * @param boundaryIds boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
         * 
         * @return builder
         * 
         */
        public Builder boundaryIds(String... boundaryIds) {
            return boundaryIds(List.of(boundaryIds));
        }

        /**
         * @param boundaryTypes boundaryTypes query parameter. The detection types. Defaults to &#39;person&#39;.
         * 
         * @return builder
         * 
         */
        public Builder boundaryTypes(@Nullable Output<List<String>> boundaryTypes) {
            $.boundaryTypes = boundaryTypes;
            return this;
        }

        /**
         * @param boundaryTypes boundaryTypes query parameter. The detection types. Defaults to &#39;person&#39;.
         * 
         * @return builder
         * 
         */
        public Builder boundaryTypes(List<String> boundaryTypes) {
            return boundaryTypes(Output.of(boundaryTypes));
        }

        /**
         * @param boundaryTypes boundaryTypes query parameter. The detection types. Defaults to &#39;person&#39;.
         * 
         * @return builder
         * 
         */
        public Builder boundaryTypes(String... boundaryTypes) {
            return boundaryTypes(List.of(boundaryTypes));
        }

        /**
         * @param duration duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param perPage perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
         * 
         * @return builder
         * 
         */
        public Builder perPage(@Nullable Output<Integer> perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param perPage perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
         * 
         * @return builder
         * 
         */
        public Builder perPage(Integer perPage) {
            return perPage(Output.of(perPage));
        }

        /**
         * @param ranges ranges query parameter. A list of time ranges with intervals
         * 
         * @return builder
         * 
         */
        public Builder ranges(Output<List<String>> ranges) {
            $.ranges = ranges;
            return this;
        }

        /**
         * @param ranges ranges query parameter. A list of time ranges with intervals
         * 
         * @return builder
         * 
         */
        public Builder ranges(List<String> ranges) {
            return ranges(Output.of(ranges));
        }

        /**
         * @param ranges ranges query parameter. A list of time ranges with intervals
         * 
         * @return builder
         * 
         */
        public Builder ranges(String... ranges) {
            return ranges(List.of(ranges));
        }

        public GetCameraDetectionsHistoryByBoundaryByIntervalArgs build() {
            if ($.boundaryIds == null) {
                throw new MissingRequiredPropertyException("GetCameraDetectionsHistoryByBoundaryByIntervalArgs", "boundaryIds");
            }
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetCameraDetectionsHistoryByBoundaryByIntervalArgs", "organizationId");
            }
            if ($.ranges == null) {
                throw new MissingRequiredPropertyException("GetCameraDetectionsHistoryByBoundaryByIntervalArgs", "ranges");
            }
            return $;
        }
    }

}
