// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CellularGatewaySubnetPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final CellularGatewaySubnetPoolArgs Empty = new CellularGatewaySubnetPoolArgs();

    /**
     * CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * Mask used for the subnet of all MGs in  this network.
     * 
     */
    @Import(name="mask")
    private @Nullable Output<Integer> mask;

    /**
     * @return Mask used for the subnet of all MGs in  this network.
     * 
     */
    public Optional<Output<Integer>> mask() {
        return Optional.ofNullable(this.mask);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    private CellularGatewaySubnetPoolArgs() {}

    private CellularGatewaySubnetPoolArgs(CellularGatewaySubnetPoolArgs $) {
        this.cidr = $.cidr;
        this.mask = $.mask;
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CellularGatewaySubnetPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CellularGatewaySubnetPoolArgs $;

        public Builder() {
            $ = new CellularGatewaySubnetPoolArgs();
        }

        public Builder(CellularGatewaySubnetPoolArgs defaults) {
            $ = new CellularGatewaySubnetPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param mask Mask used for the subnet of all MGs in  this network.
         * 
         * @return builder
         * 
         */
        public Builder mask(@Nullable Output<Integer> mask) {
            $.mask = mask;
            return this;
        }

        /**
         * @param mask Mask used for the subnet of all MGs in  this network.
         * 
         * @return builder
         * 
         */
        public Builder mask(Integer mask) {
            return mask(Output.of(mask));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        public CellularGatewaySubnetPoolArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("CellularGatewaySubnetPoolArgs", "networkId");
            }
            return $;
        }
    }

}
