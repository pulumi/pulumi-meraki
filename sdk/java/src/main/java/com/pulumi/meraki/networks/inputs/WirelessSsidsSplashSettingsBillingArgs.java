// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.networks.inputs.WirelessSsidsSplashSettingsBillingFreeAccessArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsSplashSettingsBillingArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsSplashSettingsBillingArgs Empty = new WirelessSsidsSplashSettingsBillingArgs();

    /**
     * Details associated with a free access plan with limits
     * 
     */
    @Import(name="freeAccess")
    private @Nullable Output<WirelessSsidsSplashSettingsBillingFreeAccessArgs> freeAccess;

    /**
     * @return Details associated with a free access plan with limits
     * 
     */
    public Optional<Output<WirelessSsidsSplashSettingsBillingFreeAccessArgs>> freeAccess() {
        return Optional.ofNullable(this.freeAccess);
    }

    /**
     * Whether or not billing uses the fast login prepaid access option.
     * 
     */
    @Import(name="prepaidAccessFastLoginEnabled")
    private @Nullable Output<Boolean> prepaidAccessFastLoginEnabled;

    /**
     * @return Whether or not billing uses the fast login prepaid access option.
     * 
     */
    public Optional<Output<Boolean>> prepaidAccessFastLoginEnabled() {
        return Optional.ofNullable(this.prepaidAccessFastLoginEnabled);
    }

    /**
     * The email address that reeceives replies from clients
     * 
     */
    @Import(name="replyToEmailAddress")
    private @Nullable Output<String> replyToEmailAddress;

    /**
     * @return The email address that reeceives replies from clients
     * 
     */
    public Optional<Output<String>> replyToEmailAddress() {
        return Optional.ofNullable(this.replyToEmailAddress);
    }

    private WirelessSsidsSplashSettingsBillingArgs() {}

    private WirelessSsidsSplashSettingsBillingArgs(WirelessSsidsSplashSettingsBillingArgs $) {
        this.freeAccess = $.freeAccess;
        this.prepaidAccessFastLoginEnabled = $.prepaidAccessFastLoginEnabled;
        this.replyToEmailAddress = $.replyToEmailAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsSplashSettingsBillingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsSplashSettingsBillingArgs $;

        public Builder() {
            $ = new WirelessSsidsSplashSettingsBillingArgs();
        }

        public Builder(WirelessSsidsSplashSettingsBillingArgs defaults) {
            $ = new WirelessSsidsSplashSettingsBillingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param freeAccess Details associated with a free access plan with limits
         * 
         * @return builder
         * 
         */
        public Builder freeAccess(@Nullable Output<WirelessSsidsSplashSettingsBillingFreeAccessArgs> freeAccess) {
            $.freeAccess = freeAccess;
            return this;
        }

        /**
         * @param freeAccess Details associated with a free access plan with limits
         * 
         * @return builder
         * 
         */
        public Builder freeAccess(WirelessSsidsSplashSettingsBillingFreeAccessArgs freeAccess) {
            return freeAccess(Output.of(freeAccess));
        }

        /**
         * @param prepaidAccessFastLoginEnabled Whether or not billing uses the fast login prepaid access option.
         * 
         * @return builder
         * 
         */
        public Builder prepaidAccessFastLoginEnabled(@Nullable Output<Boolean> prepaidAccessFastLoginEnabled) {
            $.prepaidAccessFastLoginEnabled = prepaidAccessFastLoginEnabled;
            return this;
        }

        /**
         * @param prepaidAccessFastLoginEnabled Whether or not billing uses the fast login prepaid access option.
         * 
         * @return builder
         * 
         */
        public Builder prepaidAccessFastLoginEnabled(Boolean prepaidAccessFastLoginEnabled) {
            return prepaidAccessFastLoginEnabled(Output.of(prepaidAccessFastLoginEnabled));
        }

        /**
         * @param replyToEmailAddress The email address that reeceives replies from clients
         * 
         * @return builder
         * 
         */
        public Builder replyToEmailAddress(@Nullable Output<String> replyToEmailAddress) {
            $.replyToEmailAddress = replyToEmailAddress;
            return this;
        }

        /**
         * @param replyToEmailAddress The email address that reeceives replies from clients
         * 
         * @return builder
         * 
         */
        public Builder replyToEmailAddress(String replyToEmailAddress) {
            return replyToEmailAddress(Output.of(replyToEmailAddress));
        }

        public WirelessSsidsSplashSettingsBillingArgs build() {
            return $;
        }
    }

}
