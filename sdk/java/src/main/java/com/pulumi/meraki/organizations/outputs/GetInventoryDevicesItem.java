// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetInventoryDevicesItemDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInventoryDevicesItem {
    /**
     * @return Claimed time of the device
     * 
     */
    private String claimedAt;
    /**
     * @return Country/region code from device, network, or store order
     * 
     */
    private String countryCode;
    /**
     * @return Additional device information
     * 
     */
    private List<GetInventoryDevicesItemDetail> details;
    /**
     * @return License expiration date of the device
     * 
     */
    private String licenseExpirationDate;
    /**
     * @return MAC address of the device
     * 
     */
    private String mac;
    /**
     * @return Model type of the device
     * 
     */
    private String model;
    /**
     * @return Name of the device
     * 
     */
    private String name;
    /**
     * @return Network Id of the device
     * 
     */
    private String networkId;
    /**
     * @return Order number of the device
     * 
     */
    private String orderNumber;
    /**
     * @return Product type of the device
     * 
     */
    private String productType;
    /**
     * @return Serial number of the device
     * 
     */
    private String serial;
    /**
     * @return Device tags
     * 
     */
    private List<String> tags;

    private GetInventoryDevicesItem() {}
    /**
     * @return Claimed time of the device
     * 
     */
    public String claimedAt() {
        return this.claimedAt;
    }
    /**
     * @return Country/region code from device, network, or store order
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return Additional device information
     * 
     */
    public List<GetInventoryDevicesItemDetail> details() {
        return this.details;
    }
    /**
     * @return License expiration date of the device
     * 
     */
    public String licenseExpirationDate() {
        return this.licenseExpirationDate;
    }
    /**
     * @return MAC address of the device
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Model type of the device
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return Name of the device
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network Id of the device
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Order number of the device
     * 
     */
    public String orderNumber() {
        return this.orderNumber;
    }
    /**
     * @return Product type of the device
     * 
     */
    public String productType() {
        return this.productType;
    }
    /**
     * @return Serial number of the device
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Device tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoryDevicesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String claimedAt;
        private String countryCode;
        private List<GetInventoryDevicesItemDetail> details;
        private String licenseExpirationDate;
        private String mac;
        private String model;
        private String name;
        private String networkId;
        private String orderNumber;
        private String productType;
        private String serial;
        private List<String> tags;
        public Builder() {}
        public Builder(GetInventoryDevicesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimedAt = defaults.claimedAt;
    	      this.countryCode = defaults.countryCode;
    	      this.details = defaults.details;
    	      this.licenseExpirationDate = defaults.licenseExpirationDate;
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.orderNumber = defaults.orderNumber;
    	      this.productType = defaults.productType;
    	      this.serial = defaults.serial;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder claimedAt(String claimedAt) {
            if (claimedAt == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "claimedAt");
            }
            this.claimedAt = claimedAt;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            if (countryCode == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "countryCode");
            }
            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder details(List<GetInventoryDevicesItemDetail> details) {
            if (details == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "details");
            }
            this.details = details;
            return this;
        }
        public Builder details(GetInventoryDevicesItemDetail... details) {
            return details(List.of(details));
        }
        @CustomType.Setter
        public Builder licenseExpirationDate(String licenseExpirationDate) {
            if (licenseExpirationDate == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "licenseExpirationDate");
            }
            this.licenseExpirationDate = licenseExpirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder orderNumber(String orderNumber) {
            if (orderNumber == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "orderNumber");
            }
            this.orderNumber = orderNumber;
            return this;
        }
        @CustomType.Setter
        public Builder productType(String productType) {
            if (productType == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "productType");
            }
            this.productType = productType;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetInventoryDevicesItem", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetInventoryDevicesItem build() {
            final var _resultValue = new GetInventoryDevicesItem();
            _resultValue.claimedAt = claimedAt;
            _resultValue.countryCode = countryCode;
            _resultValue.details = details;
            _resultValue.licenseExpirationDate = licenseExpirationDate;
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.name = name;
            _resultValue.networkId = networkId;
            _resultValue.orderNumber = orderNumber;
            _resultValue.productType = productType;
            _resultValue.serial = serial;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
