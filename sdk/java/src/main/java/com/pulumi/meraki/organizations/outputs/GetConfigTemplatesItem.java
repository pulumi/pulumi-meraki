// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigTemplatesItem {
    /**
     * @return The ID of the network or config template to copy configuration from
     * 
     */
    private String id;
    /**
     * @return The name of the configuration template
     * 
     */
    private String name;
    /**
     * @return The product types of the configuration template
     * 
     */
    private List<String> productTypes;
    /**
     * @return The timezone of the configuration template. For a list of allowed timezones, please see the &#39;TZ&#39; column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
     * 
     */
    private String timeZone;

    private GetConfigTemplatesItem() {}
    /**
     * @return The ID of the network or config template to copy configuration from
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the configuration template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The product types of the configuration template
     * 
     */
    public List<String> productTypes() {
        return this.productTypes;
    }
    /**
     * @return The timezone of the configuration template. For a list of allowed timezones, please see the &#39;TZ&#39; column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigTemplatesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private List<String> productTypes;
        private String timeZone;
        public Builder() {}
        public Builder(GetConfigTemplatesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.productTypes = defaults.productTypes;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigTemplatesItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetConfigTemplatesItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder productTypes(List<String> productTypes) {
            if (productTypes == null) {
              throw new MissingRequiredPropertyException("GetConfigTemplatesItem", "productTypes");
            }
            this.productTypes = productTypes;
            return this;
        }
        public Builder productTypes(String... productTypes) {
            return productTypes(List.of(productTypes));
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetConfigTemplatesItem", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        public GetConfigTemplatesItem build() {
            final var _resultValue = new GetConfigTemplatesItem();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.productTypes = productTypes;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
