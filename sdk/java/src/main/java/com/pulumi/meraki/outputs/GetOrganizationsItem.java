// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.outputs.GetOrganizationsItemApi;
import com.pulumi.meraki.outputs.GetOrganizationsItemCloud;
import com.pulumi.meraki.outputs.GetOrganizationsItemLicensing;
import com.pulumi.meraki.outputs.GetOrganizationsItemManagement;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOrganizationsItem {
    /**
     * @return API related settings
     * 
     */
    private GetOrganizationsItemApi api;
    /**
     * @return Data for this organization
     * 
     */
    private GetOrganizationsItemCloud cloud;
    /**
     * @return Organization ID
     * 
     */
    private String id;
    /**
     * @return Licensing related settings
     * 
     */
    private GetOrganizationsItemLicensing licensing;
    /**
     * @return Information about the organization&#39;s management system
     * 
     */
    private GetOrganizationsItemManagement management;
    /**
     * @return Organization name
     * 
     */
    private String name;
    /**
     * @return Organization URL
     * 
     */
    private String url;

    private GetOrganizationsItem() {}
    /**
     * @return API related settings
     * 
     */
    public GetOrganizationsItemApi api() {
        return this.api;
    }
    /**
     * @return Data for this organization
     * 
     */
    public GetOrganizationsItemCloud cloud() {
        return this.cloud;
    }
    /**
     * @return Organization ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Licensing related settings
     * 
     */
    public GetOrganizationsItemLicensing licensing() {
        return this.licensing;
    }
    /**
     * @return Information about the organization&#39;s management system
     * 
     */
    public GetOrganizationsItemManagement management() {
        return this.management;
    }
    /**
     * @return Organization name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Organization URL
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetOrganizationsItemApi api;
        private GetOrganizationsItemCloud cloud;
        private String id;
        private GetOrganizationsItemLicensing licensing;
        private GetOrganizationsItemManagement management;
        private String name;
        private String url;
        public Builder() {}
        public Builder(GetOrganizationsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.api = defaults.api;
    	      this.cloud = defaults.cloud;
    	      this.id = defaults.id;
    	      this.licensing = defaults.licensing;
    	      this.management = defaults.management;
    	      this.name = defaults.name;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder api(GetOrganizationsItemApi api) {
            if (api == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "api");
            }
            this.api = api;
            return this;
        }
        @CustomType.Setter
        public Builder cloud(GetOrganizationsItemCloud cloud) {
            if (cloud == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "cloud");
            }
            this.cloud = cloud;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder licensing(GetOrganizationsItemLicensing licensing) {
            if (licensing == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "licensing");
            }
            this.licensing = licensing;
            return this;
        }
        @CustomType.Setter
        public Builder management(GetOrganizationsItemManagement management) {
            if (management == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "management");
            }
            this.management = management;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsItem", "url");
            }
            this.url = url;
            return this;
        }
        public GetOrganizationsItem build() {
            final var _resultValue = new GetOrganizationsItem();
            _resultValue.api = api;
            _resultValue.cloud = cloud;
            _resultValue.id = id;
            _resultValue.licensing = licensing;
            _resultValue.management = management;
            _resultValue.name = name;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
