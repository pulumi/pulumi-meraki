// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetDevicesStatusesOverviewItemCountsByStatus {
    /**
     * @return alerting count
     * 
     */
    private Integer alerting;
    /**
     * @return dormant count
     * 
     */
    private Integer dormant;
    /**
     * @return offline count
     * 
     */
    private Integer offline;
    /**
     * @return online count
     * 
     */
    private Integer online;

    private GetDevicesStatusesOverviewItemCountsByStatus() {}
    /**
     * @return alerting count
     * 
     */
    public Integer alerting() {
        return this.alerting;
    }
    /**
     * @return dormant count
     * 
     */
    public Integer dormant() {
        return this.dormant;
    }
    /**
     * @return offline count
     * 
     */
    public Integer offline() {
        return this.offline;
    }
    /**
     * @return online count
     * 
     */
    public Integer online() {
        return this.online;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesStatusesOverviewItemCountsByStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer alerting;
        private Integer dormant;
        private Integer offline;
        private Integer online;
        public Builder() {}
        public Builder(GetDevicesStatusesOverviewItemCountsByStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alerting = defaults.alerting;
    	      this.dormant = defaults.dormant;
    	      this.offline = defaults.offline;
    	      this.online = defaults.online;
        }

        @CustomType.Setter
        public Builder alerting(Integer alerting) {
            if (alerting == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesOverviewItemCountsByStatus", "alerting");
            }
            this.alerting = alerting;
            return this;
        }
        @CustomType.Setter
        public Builder dormant(Integer dormant) {
            if (dormant == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesOverviewItemCountsByStatus", "dormant");
            }
            this.dormant = dormant;
            return this;
        }
        @CustomType.Setter
        public Builder offline(Integer offline) {
            if (offline == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesOverviewItemCountsByStatus", "offline");
            }
            this.offline = offline;
            return this;
        }
        @CustomType.Setter
        public Builder online(Integer online) {
            if (online == null) {
              throw new MissingRequiredPropertyException("GetDevicesStatusesOverviewItemCountsByStatus", "online");
            }
            this.online = online;
            return this;
        }
        public GetDevicesStatusesOverviewItemCountsByStatus build() {
            final var _resultValue = new GetDevicesStatusesOverviewItemCountsByStatus();
            _resultValue.alerting = alerting;
            _resultValue.dormant = dormant;
            _resultValue.offline = offline;
            _resultValue.online = online;
            return _resultValue;
        }
    }
}
