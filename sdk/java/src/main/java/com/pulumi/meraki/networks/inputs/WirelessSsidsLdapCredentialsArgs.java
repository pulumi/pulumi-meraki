// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessSsidsLdapCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessSsidsLdapCredentialsArgs Empty = new WirelessSsidsLdapCredentialsArgs();

    /**
     * The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com).
     * 
     */
    @Import(name="distinguishedName")
    private @Nullable Output<String> distinguishedName;

    /**
     * @return The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com).
     * 
     */
    public Optional<Output<String>> distinguishedName() {
        return Optional.ofNullable(this.distinguishedName);
    }

    /**
     * The password of the LDAP user account.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the LDAP user account.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    private WirelessSsidsLdapCredentialsArgs() {}

    private WirelessSsidsLdapCredentialsArgs(WirelessSsidsLdapCredentialsArgs $) {
        this.distinguishedName = $.distinguishedName;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessSsidsLdapCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessSsidsLdapCredentialsArgs $;

        public Builder() {
            $ = new WirelessSsidsLdapCredentialsArgs();
        }

        public Builder(WirelessSsidsLdapCredentialsArgs defaults) {
            $ = new WirelessSsidsLdapCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param distinguishedName The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com).
         * 
         * @return builder
         * 
         */
        public Builder distinguishedName(@Nullable Output<String> distinguishedName) {
            $.distinguishedName = distinguishedName;
            return this;
        }

        /**
         * @param distinguishedName The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com).
         * 
         * @return builder
         * 
         */
        public Builder distinguishedName(String distinguishedName) {
            return distinguishedName(Output.of(distinguishedName));
        }

        /**
         * @param password The password of the LDAP user account.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the LDAP user account.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public WirelessSsidsLdapCredentialsArgs build() {
            return $;
        }
    }

}
