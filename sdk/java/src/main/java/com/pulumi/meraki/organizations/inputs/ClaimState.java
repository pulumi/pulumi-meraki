// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.organizations.inputs.ClaimItemArgs;
import com.pulumi.meraki.organizations.inputs.ClaimParametersArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClaimState extends com.pulumi.resources.ResourceArgs {

    public static final ClaimState Empty = new ClaimState();

    @Import(name="item")
    private @Nullable Output<ClaimItemArgs> item;

    public Optional<Output<ClaimItemArgs>> item() {
        return Optional.ofNullable(this.item);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    @Import(name="parameters")
    private @Nullable Output<ClaimParametersArgs> parameters;

    public Optional<Output<ClaimParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private ClaimState() {}

    private ClaimState(ClaimState $) {
        this.item = $.item;
        this.organizationId = $.organizationId;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClaimState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClaimState $;

        public Builder() {
            $ = new ClaimState();
        }

        public Builder(ClaimState defaults) {
            $ = new ClaimState(Objects.requireNonNull(defaults));
        }

        public Builder item(@Nullable Output<ClaimItemArgs> item) {
            $.item = item;
            return this;
        }

        public Builder item(ClaimItemArgs item) {
            return item(Output.of(item));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder parameters(@Nullable Output<ClaimParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(ClaimParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public ClaimState build() {
            return $;
        }
    }

}
