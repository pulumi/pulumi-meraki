// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetAlertsHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetAlertsSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetAppliancePortsArgs;
import com.pulumi.meraki.networks.inputs.GetAppliancePortsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetAppliancePrefixesDelegatedStaticsArgs;
import com.pulumi.meraki.networks.inputs.GetAppliancePrefixesDelegatedStaticsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwarePlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSsidsArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceSsidsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVlansArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVlansPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnPlainArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
import com.pulumi.meraki.networks.inputs.GetApplianceWarmSparePlainArgs;
import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
import com.pulumi.meraki.networks.inputs.GetBluetoothClientsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCameraQualityRetentionProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetCameraQualityRetentionProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCameraWirelessProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetCameraWirelessProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolPlainArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkPlainArgs;
import com.pulumi.meraki.networks.inputs.GetClientsArgs;
import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
import com.pulumi.meraki.networks.inputs.GetClientsOverviewPlainArgs;
import com.pulumi.meraki.networks.inputs.GetClientsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
import com.pulumi.meraki.networks.inputs.GetClientsPolicyPlainArgs;
import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusPlainArgs;
import com.pulumi.meraki.networks.inputs.GetEventsArgs;
import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
import com.pulumi.meraki.networks.inputs.GetEventsEventTypesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetEventsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedGroupsArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedGroupsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetFloorPlansArgs;
import com.pulumi.meraki.networks.inputs.GetFloorPlansPlainArgs;
import com.pulumi.meraki.networks.inputs.GetGroupPoliciesArgs;
import com.pulumi.meraki.networks.inputs.GetGroupPoliciesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
import com.pulumi.meraki.networks.inputs.GetHealthAlertsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimePlainArgs;
import com.pulumi.meraki.networks.inputs.GetMerakiAuthUsersArgs;
import com.pulumi.meraki.networks.inputs.GetMerakiAuthUsersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
import com.pulumi.meraki.networks.inputs.GetNetflowPlainArgs;
import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysPlainArgs;
import com.pulumi.meraki.networks.inputs.GetPiiRequestsArgs;
import com.pulumi.meraki.networks.inputs.GetPiiRequestsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyPlainArgs;
import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyPlainArgs;
import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
import com.pulumi.meraki.networks.inputs.GetPoliciesByClientPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetSensorAlertsProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSensorMqttBrokersArgs;
import com.pulumi.meraki.networks.inputs.GetSensorMqttBrokersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetSmProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmTargetGroupsArgs;
import com.pulumi.meraki.networks.inputs.GetSmTargetGroupsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
import com.pulumi.meraki.networks.inputs.GetSnmpPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAccessPoliciesArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAccessPoliciesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfacePlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchMtuPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchQosRulesOrderArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchQosRulesOrderPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastRendezvousPointsArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastRendezvousPointsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingStaticRoutesArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingStaticRoutesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStormControlPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
import com.pulumi.meraki.networks.inputs.GetSwitchStpPlainArgs;
import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
import com.pulumi.meraki.networks.inputs.GetSyslogServersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerPlainArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisPlainArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDevicePlainArgs;
import com.pulumi.meraki.networks.inputs.GetVlanProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksHttpServersArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksHttpServersPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksPayloadTemplatesArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksPayloadTemplatesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfacePlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessBillingPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverridePlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20PlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsIdentityPsksArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsIdentityPsksPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnPlainArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryPlainArgs;
import com.pulumi.meraki.networks.outputs.GetAlertsHistoryResult;
import com.pulumi.meraki.networks.outputs.GetAlertsSettingsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceConnectivityMonitoringDestinationsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceContentFilteringCategoriesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceContentFilteringResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallCellularFirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallFirewalledServicesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallInboundFirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallL3FirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallL7FirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallOneToManyNatRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallOneToOneNatRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallPortForwardingRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceFirewallSettingsResult;
import com.pulumi.meraki.networks.outputs.GetAppliancePortsResult;
import com.pulumi.meraki.networks.outputs.GetAppliancePrefixesDelegatedStaticsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceRfProfilesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceSecurityIntrusionResult;
import com.pulumi.meraki.networks.outputs.GetApplianceSecurityMalwareResult;
import com.pulumi.meraki.networks.outputs.GetApplianceSettingsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceSingleLanResult;
import com.pulumi.meraki.networks.outputs.GetApplianceSsidsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingResult;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingRulesResult;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkBandwidthResult;
import com.pulumi.meraki.networks.outputs.GetApplianceTrafficShapingUplinkSelectionResult;
import com.pulumi.meraki.networks.outputs.GetApplianceVlansResult;
import com.pulumi.meraki.networks.outputs.GetApplianceVlansSettingsResult;
import com.pulumi.meraki.networks.outputs.GetApplianceVpnBgpResult;
import com.pulumi.meraki.networks.outputs.GetApplianceVpnSiteToSiteVpnResult;
import com.pulumi.meraki.networks.outputs.GetApplianceWarmSpareResult;
import com.pulumi.meraki.networks.outputs.GetBluetoothClientsResult;
import com.pulumi.meraki.networks.outputs.GetCameraQualityRetentionProfilesResult;
import com.pulumi.meraki.networks.outputs.GetCameraWirelessProfilesResult;
import com.pulumi.meraki.networks.outputs.GetCellularGatewayConnectivityMonitoringDestinationsResult;
import com.pulumi.meraki.networks.outputs.GetCellularGatewayDhcpResult;
import com.pulumi.meraki.networks.outputs.GetCellularGatewaySubnetPoolResult;
import com.pulumi.meraki.networks.outputs.GetCellularGatewayUplinkResult;
import com.pulumi.meraki.networks.outputs.GetClientsOverviewResult;
import com.pulumi.meraki.networks.outputs.GetClientsPolicyResult;
import com.pulumi.meraki.networks.outputs.GetClientsResult;
import com.pulumi.meraki.networks.outputs.GetClientsSplashAuthorizationStatusResult;
import com.pulumi.meraki.networks.outputs.GetEventsEventTypesResult;
import com.pulumi.meraki.networks.outputs.GetEventsResult;
import com.pulumi.meraki.networks.outputs.GetFirmwareUpgradesResult;
import com.pulumi.meraki.networks.outputs.GetFirmwareUpgradesStagedEventsResult;
import com.pulumi.meraki.networks.outputs.GetFirmwareUpgradesStagedGroupsResult;
import com.pulumi.meraki.networks.outputs.GetFirmwareUpgradesStagedStagesResult;
import com.pulumi.meraki.networks.outputs.GetFloorPlansResult;
import com.pulumi.meraki.networks.outputs.GetGroupPoliciesResult;
import com.pulumi.meraki.networks.outputs.GetHealthAlertsResult;
import com.pulumi.meraki.networks.outputs.GetInsightApplicationsHealthByTimeResult;
import com.pulumi.meraki.networks.outputs.GetMerakiAuthUsersResult;
import com.pulumi.meraki.networks.outputs.GetNetflowResult;
import com.pulumi.meraki.networks.outputs.GetPiiPiiKeysResult;
import com.pulumi.meraki.networks.outputs.GetPiiRequestsResult;
import com.pulumi.meraki.networks.outputs.GetPiiSmDevicesForKeyResult;
import com.pulumi.meraki.networks.outputs.GetPiiSmOwnersForKeyResult;
import com.pulumi.meraki.networks.outputs.GetPoliciesByClientResult;
import com.pulumi.meraki.networks.outputs.GetSensorAlertsCurrentOverviewByMetricResult;
import com.pulumi.meraki.networks.outputs.GetSensorAlertsOverviewByMetricResult;
import com.pulumi.meraki.networks.outputs.GetSensorAlertsProfilesResult;
import com.pulumi.meraki.networks.outputs.GetSensorMqttBrokersResult;
import com.pulumi.meraki.networks.outputs.GetSensorRelationshipsResult;
import com.pulumi.meraki.networks.outputs.GetSettingsResult;
import com.pulumi.meraki.networks.outputs.GetSmBypassActivationLockAttemptsResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesCellularUsageHistoryResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesCertsResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesConnectivityResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesDesktopLogsResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesDeviceCommandLogsResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesDeviceProfilesResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesNetworkAdaptersResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesPerformanceHistoryResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesSecurityCentersResult;
import com.pulumi.meraki.networks.outputs.GetSmDevicesWlanListsResult;
import com.pulumi.meraki.networks.outputs.GetSmProfilesResult;
import com.pulumi.meraki.networks.outputs.GetSmTargetGroupsResult;
import com.pulumi.meraki.networks.outputs.GetSmTrustedAccessConfigsResult;
import com.pulumi.meraki.networks.outputs.GetSmUserAccessDevicesResult;
import com.pulumi.meraki.networks.outputs.GetSmUsersDeviceProfilesResult;
import com.pulumi.meraki.networks.outputs.GetSmUsersResult;
import com.pulumi.meraki.networks.outputs.GetSmUsersSoftwaresResult;
import com.pulumi.meraki.networks.outputs.GetSnmpResult;
import com.pulumi.meraki.networks.outputs.GetSwitchAccessControlListsResult;
import com.pulumi.meraki.networks.outputs.GetSwitchAccessPoliciesResult;
import com.pulumi.meraki.networks.outputs.GetSwitchAlternateManagementInterfaceResult;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpServerPolicyResult;
import com.pulumi.meraki.networks.outputs.GetSwitchDhcpV4ServersSeenResult;
import com.pulumi.meraki.networks.outputs.GetSwitchDscpToCosMappingsResult;
import com.pulumi.meraki.networks.outputs.GetSwitchLinkAggregationsResult;
import com.pulumi.meraki.networks.outputs.GetSwitchMtuResult;
import com.pulumi.meraki.networks.outputs.GetSwitchPortSchedulesResult;
import com.pulumi.meraki.networks.outputs.GetSwitchQosRulesOrderResult;
import com.pulumi.meraki.networks.outputs.GetSwitchRoutingMulticastRendezvousPointsResult;
import com.pulumi.meraki.networks.outputs.GetSwitchRoutingMulticastResult;
import com.pulumi.meraki.networks.outputs.GetSwitchRoutingOspfResult;
import com.pulumi.meraki.networks.outputs.GetSwitchSettingsResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStacksResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStacksRoutingInterfacesDhcpResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStacksRoutingInterfacesResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStacksRoutingStaticRoutesResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStormControlResult;
import com.pulumi.meraki.networks.outputs.GetSwitchStpResult;
import com.pulumi.meraki.networks.outputs.GetSyslogServersResult;
import com.pulumi.meraki.networks.outputs.GetTopologyLinkLayerResult;
import com.pulumi.meraki.networks.outputs.GetTrafficAnalysisResult;
import com.pulumi.meraki.networks.outputs.GetTrafficShapingApplicationCategoriesResult;
import com.pulumi.meraki.networks.outputs.GetTrafficShapingDscpTaggingOptionsResult;
import com.pulumi.meraki.networks.outputs.GetVlanProfilesAssignmentsByDeviceResult;
import com.pulumi.meraki.networks.outputs.GetVlanProfilesResult;
import com.pulumi.meraki.networks.outputs.GetWebhooksHttpServersResult;
import com.pulumi.meraki.networks.outputs.GetWebhooksPayloadTemplatesResult;
import com.pulumi.meraki.networks.outputs.GetWebhooksWebhookTestsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessAlternateManagementInterfaceResult;
import com.pulumi.meraki.networks.outputs.GetWirelessBillingResult;
import com.pulumi.meraki.networks.outputs.GetWirelessBluetoothSettingsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessChannelUtilizationHistoryResult;
import com.pulumi.meraki.networks.outputs.GetWirelessClientCountHistoryResult;
import com.pulumi.meraki.networks.outputs.GetWirelessClientsConnectionStatsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessClientsLatencyStatsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessConnectionStatsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessDataRateHistoryResult;
import com.pulumi.meraki.networks.outputs.GetWirelessDevicesConnectionStatsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessEthernetPortsProfilesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessFailedConnectionsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessLatencyHistoryResult;
import com.pulumi.meraki.networks.outputs.GetWirelessLatencyStatsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessMeshStatusesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessRfProfilesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSettingsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSignalQualityHistoryResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsBonjourForwardingResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsDeviceTypeGroupPoliciesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsEapOverrideResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsFirewallL3FirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsFirewallL7FirewallRulesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsHotspot20Result;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsIdentityPsksResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsSchedulesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsSplashSettingsResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsTrafficShapingRulesResult;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsVpnResult;
import com.pulumi.meraki.networks.outputs.GetWirelessUsageHistoryResult;
import java.util.concurrent.CompletableFuture;

public final class NetworksFunctions {
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsHistory(GetAlertsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsHistoryResult> getAlertsHistory(GetAlertsHistoryArgs args) {
        return getAlertsHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsHistory(GetAlertsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertsHistoryResult> getAlertsHistoryPlain(GetAlertsHistoryPlainArgs args) {
        return getAlertsHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsHistory(GetAlertsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsHistoryResult> getAlertsHistory(GetAlertsHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAlertsHistory:getAlertsHistory", TypeShape.of(GetAlertsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsHistory(GetAlertsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsHistoryResult> getAlertsHistory(GetAlertsHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAlertsHistory:getAlertsHistory", TypeShape.of(GetAlertsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsHistory(GetAlertsHistoryArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertsHistoryResult> getAlertsHistoryPlain(GetAlertsHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getAlertsHistory:getAlertsHistory", TypeShape.of(GetAlertsHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsSettings(GetAlertsSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsSettingsResult> getAlertsSettings(GetAlertsSettingsArgs args) {
        return getAlertsSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsSettings(GetAlertsSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertsSettingsResult> getAlertsSettingsPlain(GetAlertsSettingsPlainArgs args) {
        return getAlertsSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsSettings(GetAlertsSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsSettingsResult> getAlertsSettings(GetAlertsSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAlertsSettings:getAlertsSettings", TypeShape.of(GetAlertsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsSettings(GetAlertsSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertsSettingsResult> getAlertsSettings(GetAlertsSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAlertsSettings:getAlertsSettings", TypeShape.of(GetAlertsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetAlertsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getAlertsSettings(GetAlertsSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksAlertsSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertsSettingsResult> getAlertsSettingsPlain(GetAlertsSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getAlertsSettings:getAlertsSettings", TypeShape.of(GetAlertsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceConnectivityMonitoringDestinationsResult> getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs args) {
        return getApplianceConnectivityMonitoringDestinations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceConnectivityMonitoringDestinationsResult> getApplianceConnectivityMonitoringDestinationsPlain(GetApplianceConnectivityMonitoringDestinationsPlainArgs args) {
        return getApplianceConnectivityMonitoringDestinationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceConnectivityMonitoringDestinationsResult> getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceConnectivityMonitoringDestinations:getApplianceConnectivityMonitoringDestinations", TypeShape.of(GetApplianceConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceConnectivityMonitoringDestinationsResult> getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceConnectivityMonitoringDestinations:getApplianceConnectivityMonitoringDestinations", TypeShape.of(GetApplianceConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceConnectivityMonitoringDestinations(GetApplianceConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceConnectivityMonitoringDestinationsResult> getApplianceConnectivityMonitoringDestinationsPlain(GetApplianceConnectivityMonitoringDestinationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceConnectivityMonitoringDestinations:getApplianceConnectivityMonitoringDestinations", TypeShape.of(GetApplianceConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFiltering(GetApplianceContentFilteringArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringResult> getApplianceContentFiltering(GetApplianceContentFilteringArgs args) {
        return getApplianceContentFiltering(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFiltering(GetApplianceContentFilteringArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceContentFilteringResult> getApplianceContentFilteringPlain(GetApplianceContentFilteringPlainArgs args) {
        return getApplianceContentFilteringPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFiltering(GetApplianceContentFilteringArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringResult> getApplianceContentFiltering(GetApplianceContentFilteringArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceContentFiltering:getApplianceContentFiltering", TypeShape.of(GetApplianceContentFilteringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFiltering(GetApplianceContentFilteringArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringResult> getApplianceContentFiltering(GetApplianceContentFilteringArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceContentFiltering:getApplianceContentFiltering", TypeShape.of(GetApplianceContentFilteringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFiltering(GetApplianceContentFilteringArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceContentFilteringResult> getApplianceContentFilteringPlain(GetApplianceContentFilteringPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceContentFiltering:getApplianceContentFiltering", TypeShape.of(GetApplianceContentFilteringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringCategoriesResult> getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs args) {
        return getApplianceContentFilteringCategories(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceContentFilteringCategoriesResult> getApplianceContentFilteringCategoriesPlain(GetApplianceContentFilteringCategoriesPlainArgs args) {
        return getApplianceContentFilteringCategoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringCategoriesResult> getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceContentFilteringCategories:getApplianceContentFilteringCategories", TypeShape.of(GetApplianceContentFilteringCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceContentFilteringCategoriesResult> getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceContentFilteringCategories:getApplianceContentFilteringCategories", TypeShape.of(GetApplianceContentFilteringCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceContentFilteringCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceContentFilteringCategories(GetApplianceContentFilteringCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceContentFilteringCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceContentFilteringCategoriesResult> getApplianceContentFilteringCategoriesPlain(GetApplianceContentFilteringCategoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceContentFilteringCategories:getApplianceContentFilteringCategories", TypeShape.of(GetApplianceContentFilteringCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallCellularFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallCellularFirewallRulesResult> getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs args) {
        return getApplianceFirewallCellularFirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallCellularFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallCellularFirewallRulesResult> getApplianceFirewallCellularFirewallRulesPlain(GetApplianceFirewallCellularFirewallRulesPlainArgs args) {
        return getApplianceFirewallCellularFirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallCellularFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallCellularFirewallRulesResult> getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallCellularFirewallRules:getApplianceFirewallCellularFirewallRules", TypeShape.of(GetApplianceFirewallCellularFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallCellularFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallCellularFirewallRulesResult> getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallCellularFirewallRules:getApplianceFirewallCellularFirewallRules", TypeShape.of(GetApplianceFirewallCellularFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallCellularFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallCellularFirewallRules(GetApplianceFirewallCellularFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallCellularFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallCellularFirewallRulesResult> getApplianceFirewallCellularFirewallRulesPlain(GetApplianceFirewallCellularFirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallCellularFirewallRules:getApplianceFirewallCellularFirewallRules", TypeShape.of(GetApplianceFirewallCellularFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs.builder()
     *             .networkId("string")
     *             .service("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallFirewalledServicesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallFirewalledServicesResult> getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs args) {
        return getApplianceFirewallFirewalledServices(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs.builder()
     *             .networkId("string")
     *             .service("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallFirewalledServicesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallFirewalledServicesResult> getApplianceFirewallFirewalledServicesPlain(GetApplianceFirewallFirewalledServicesPlainArgs args) {
        return getApplianceFirewallFirewalledServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs.builder()
     *             .networkId("string")
     *             .service("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallFirewalledServicesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallFirewalledServicesResult> getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallFirewalledServices:getApplianceFirewallFirewalledServices", TypeShape.of(GetApplianceFirewallFirewalledServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs.builder()
     *             .networkId("string")
     *             .service("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallFirewalledServicesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallFirewalledServicesResult> getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallFirewalledServices:getApplianceFirewallFirewalledServices", TypeShape.of(GetApplianceFirewallFirewalledServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallFirewalledServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallFirewalledServices(GetApplianceFirewallFirewalledServicesArgs.builder()
     *             .networkId("string")
     *             .service("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallFirewalledServicesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallFirewalledServicesResult> getApplianceFirewallFirewalledServicesPlain(GetApplianceFirewallFirewalledServicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallFirewalledServices:getApplianceFirewallFirewalledServices", TypeShape.of(GetApplianceFirewallFirewalledServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallInboundFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallInboundFirewallRulesResult> getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs args) {
        return getApplianceFirewallInboundFirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallInboundFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallInboundFirewallRulesResult> getApplianceFirewallInboundFirewallRulesPlain(GetApplianceFirewallInboundFirewallRulesPlainArgs args) {
        return getApplianceFirewallInboundFirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallInboundFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallInboundFirewallRulesResult> getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallInboundFirewallRules:getApplianceFirewallInboundFirewallRules", TypeShape.of(GetApplianceFirewallInboundFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallInboundFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallInboundFirewallRulesResult> getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallInboundFirewallRules:getApplianceFirewallInboundFirewallRules", TypeShape.of(GetApplianceFirewallInboundFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallInboundFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallInboundFirewallRules(GetApplianceFirewallInboundFirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallInboundFirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallInboundFirewallRulesResult> getApplianceFirewallInboundFirewallRulesPlain(GetApplianceFirewallInboundFirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallInboundFirewallRules:getApplianceFirewallInboundFirewallRules", TypeShape.of(GetApplianceFirewallInboundFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL3FirewallRulesResult> getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs args) {
        return getApplianceFirewallL3FirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL3FirewallRulesResult> getApplianceFirewallL3FirewallRulesPlain(GetApplianceFirewallL3FirewallRulesPlainArgs args) {
        return getApplianceFirewallL3FirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL3FirewallRulesResult> getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL3FirewallRules:getApplianceFirewallL3FirewallRules", TypeShape.of(GetApplianceFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL3FirewallRulesResult> getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL3FirewallRules:getApplianceFirewallL3FirewallRules", TypeShape.of(GetApplianceFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL3FirewallRules(GetApplianceFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL3FirewallRulesResult> getApplianceFirewallL3FirewallRulesPlain(GetApplianceFirewallL3FirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallL3FirewallRules:getApplianceFirewallL3FirewallRules", TypeShape.of(GetApplianceFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesResult> getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs args) {
        return getApplianceFirewallL7FirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL7FirewallRulesResult> getApplianceFirewallL7FirewallRulesPlain(GetApplianceFirewallL7FirewallRulesPlainArgs args) {
        return getApplianceFirewallL7FirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesResult> getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL7FirewallRules:getApplianceFirewallL7FirewallRules", TypeShape.of(GetApplianceFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesResult> getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL7FirewallRules:getApplianceFirewallL7FirewallRules", TypeShape.of(GetApplianceFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRules(GetApplianceFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL7FirewallRulesResult> getApplianceFirewallL7FirewallRulesPlain(GetApplianceFirewallL7FirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallL7FirewallRules:getApplianceFirewallL7FirewallRules", TypeShape.of(GetApplianceFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult> getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs args) {
        return getApplianceFirewallL7FirewallRulesApplicationCategories(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult> getApplianceFirewallL7FirewallRulesApplicationCategoriesPlain(GetApplianceFirewallL7FirewallRulesApplicationCategoriesPlainArgs args) {
        return getApplianceFirewallL7FirewallRulesApplicationCategoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult> getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL7FirewallRulesApplicationCategories:getApplianceFirewallL7FirewallRulesApplicationCategories", TypeShape.of(GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult> getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallL7FirewallRulesApplicationCategories:getApplianceFirewallL7FirewallRulesApplicationCategories", TypeShape.of(GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallL7FirewallRulesApplicationCategories(GetApplianceFirewallL7FirewallRulesApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallL7FirewallRulesApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult> getApplianceFirewallL7FirewallRulesApplicationCategoriesPlain(GetApplianceFirewallL7FirewallRulesApplicationCategoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallL7FirewallRulesApplicationCategories:getApplianceFirewallL7FirewallRulesApplicationCategories", TypeShape.of(GetApplianceFirewallL7FirewallRulesApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToManyNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToManyNatRulesResult> getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs args) {
        return getApplianceFirewallOneToManyNatRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToManyNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallOneToManyNatRulesResult> getApplianceFirewallOneToManyNatRulesPlain(GetApplianceFirewallOneToManyNatRulesPlainArgs args) {
        return getApplianceFirewallOneToManyNatRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToManyNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToManyNatRulesResult> getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallOneToManyNatRules:getApplianceFirewallOneToManyNatRules", TypeShape.of(GetApplianceFirewallOneToManyNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToManyNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToManyNatRulesResult> getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallOneToManyNatRules:getApplianceFirewallOneToManyNatRules", TypeShape.of(GetApplianceFirewallOneToManyNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToManyNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToManyNatRules(GetApplianceFirewallOneToManyNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToManyNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallOneToManyNatRulesResult> getApplianceFirewallOneToManyNatRulesPlain(GetApplianceFirewallOneToManyNatRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallOneToManyNatRules:getApplianceFirewallOneToManyNatRules", TypeShape.of(GetApplianceFirewallOneToManyNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToOneNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToOneNatRulesResult> getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs args) {
        return getApplianceFirewallOneToOneNatRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToOneNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallOneToOneNatRulesResult> getApplianceFirewallOneToOneNatRulesPlain(GetApplianceFirewallOneToOneNatRulesPlainArgs args) {
        return getApplianceFirewallOneToOneNatRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToOneNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToOneNatRulesResult> getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallOneToOneNatRules:getApplianceFirewallOneToOneNatRules", TypeShape.of(GetApplianceFirewallOneToOneNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToOneNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallOneToOneNatRulesResult> getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallOneToOneNatRules:getApplianceFirewallOneToOneNatRules", TypeShape.of(GetApplianceFirewallOneToOneNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallOneToOneNatRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallOneToOneNatRules(GetApplianceFirewallOneToOneNatRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallOneToOneNatRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallOneToOneNatRulesResult> getApplianceFirewallOneToOneNatRulesPlain(GetApplianceFirewallOneToOneNatRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallOneToOneNatRules:getApplianceFirewallOneToOneNatRules", TypeShape.of(GetApplianceFirewallOneToOneNatRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallPortForwardingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallPortForwardingRulesResult> getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs args) {
        return getApplianceFirewallPortForwardingRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallPortForwardingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallPortForwardingRulesResult> getApplianceFirewallPortForwardingRulesPlain(GetApplianceFirewallPortForwardingRulesPlainArgs args) {
        return getApplianceFirewallPortForwardingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallPortForwardingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallPortForwardingRulesResult> getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallPortForwardingRules:getApplianceFirewallPortForwardingRules", TypeShape.of(GetApplianceFirewallPortForwardingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallPortForwardingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallPortForwardingRulesResult> getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallPortForwardingRules:getApplianceFirewallPortForwardingRules", TypeShape.of(GetApplianceFirewallPortForwardingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallPortForwardingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallPortForwardingRules(GetApplianceFirewallPortForwardingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallPortForwardingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallPortForwardingRulesResult> getApplianceFirewallPortForwardingRulesPlain(GetApplianceFirewallPortForwardingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallPortForwardingRules:getApplianceFirewallPortForwardingRules", TypeShape.of(GetApplianceFirewallPortForwardingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallSettingsResult> getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs args) {
        return getApplianceFirewallSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallSettingsResult> getApplianceFirewallSettingsPlain(GetApplianceFirewallSettingsPlainArgs args) {
        return getApplianceFirewallSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallSettingsResult> getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallSettings:getApplianceFirewallSettings", TypeShape.of(GetApplianceFirewallSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceFirewallSettingsResult> getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceFirewallSettings:getApplianceFirewallSettings", TypeShape.of(GetApplianceFirewallSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceFirewallSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceFirewallSettings(GetApplianceFirewallSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceFirewallSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceFirewallSettingsResult> getApplianceFirewallSettingsPlain(GetApplianceFirewallSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceFirewallSettings:getApplianceFirewallSettings", TypeShape.of(GetApplianceFirewallSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePortsResult> getAppliancePorts() {
        return getAppliancePorts(GetAppliancePortsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePortsResult> getAppliancePortsPlain() {
        return getAppliancePortsPlain(GetAppliancePortsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePortsResult> getAppliancePorts(GetAppliancePortsArgs args) {
        return getAppliancePorts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePortsResult> getAppliancePortsPlain(GetAppliancePortsPlainArgs args) {
        return getAppliancePortsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePortsResult> getAppliancePorts(GetAppliancePortsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAppliancePorts:getAppliancePorts", TypeShape.of(GetAppliancePortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePortsResult> getAppliancePorts(GetAppliancePortsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAppliancePorts:getAppliancePorts", TypeShape.of(GetAppliancePortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePortsResult> getAppliancePortsPlain(GetAppliancePortsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getAppliancePorts:getAppliancePorts", TypeShape.of(GetAppliancePortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStatics() {
        return getAppliancePrefixesDelegatedStatics(GetAppliancePrefixesDelegatedStaticsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStaticsPlain() {
        return getAppliancePrefixesDelegatedStaticsPlain(GetAppliancePrefixesDelegatedStaticsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStatics(GetAppliancePrefixesDelegatedStaticsArgs args) {
        return getAppliancePrefixesDelegatedStatics(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStaticsPlain(GetAppliancePrefixesDelegatedStaticsPlainArgs args) {
        return getAppliancePrefixesDelegatedStaticsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStatics(GetAppliancePrefixesDelegatedStaticsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAppliancePrefixesDelegatedStatics:getAppliancePrefixesDelegatedStatics", TypeShape.of(GetAppliancePrefixesDelegatedStaticsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStatics(GetAppliancePrefixesDelegatedStaticsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getAppliancePrefixesDelegatedStatics:getAppliancePrefixesDelegatedStatics", TypeShape.of(GetAppliancePrefixesDelegatedStaticsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAppliancePrefixesDelegatedStaticsResult> getAppliancePrefixesDelegatedStaticsPlain(GetAppliancePrefixesDelegatedStaticsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getAppliancePrefixesDelegatedStatics:getAppliancePrefixesDelegatedStatics", TypeShape.of(GetAppliancePrefixesDelegatedStaticsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceRfProfilesResult> getApplianceRfProfiles() {
        return getApplianceRfProfiles(GetApplianceRfProfilesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceRfProfilesResult> getApplianceRfProfilesPlain() {
        return getApplianceRfProfilesPlain(GetApplianceRfProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceRfProfilesResult> getApplianceRfProfiles(GetApplianceRfProfilesArgs args) {
        return getApplianceRfProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceRfProfilesResult> getApplianceRfProfilesPlain(GetApplianceRfProfilesPlainArgs args) {
        return getApplianceRfProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceRfProfilesResult> getApplianceRfProfiles(GetApplianceRfProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceRfProfiles:getApplianceRfProfiles", TypeShape.of(GetApplianceRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceRfProfilesResult> getApplianceRfProfiles(GetApplianceRfProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceRfProfiles:getApplianceRfProfiles", TypeShape.of(GetApplianceRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceRfProfiles(GetApplianceRfProfilesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceRfProfilesResult> getApplianceRfProfilesPlain(GetApplianceRfProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceRfProfiles:getApplianceRfProfiles", TypeShape.of(GetApplianceRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args) {
        return getApplianceSecurityIntrusion(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusionPlain(GetApplianceSecurityIntrusionPlainArgs args) {
        return getApplianceSecurityIntrusionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityIntrusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityIntrusion(GetApplianceSecurityIntrusionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityIntrusionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSecurityIntrusionResult> getApplianceSecurityIntrusionPlain(GetApplianceSecurityIntrusionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceSecurityIntrusion:getApplianceSecurityIntrusion", TypeShape.of(GetApplianceSecurityIntrusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityMalwareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityMalwareResult> getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs args) {
        return getApplianceSecurityMalware(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityMalwareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSecurityMalwareResult> getApplianceSecurityMalwarePlain(GetApplianceSecurityMalwarePlainArgs args) {
        return getApplianceSecurityMalwarePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityMalwareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityMalwareResult> getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSecurityMalware:getApplianceSecurityMalware", TypeShape.of(GetApplianceSecurityMalwareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityMalwareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSecurityMalwareResult> getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSecurityMalware:getApplianceSecurityMalware", TypeShape.of(GetApplianceSecurityMalwareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSecurityMalwareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSecurityMalware(GetApplianceSecurityMalwareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSecurityMalwareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSecurityMalwareResult> getApplianceSecurityMalwarePlain(GetApplianceSecurityMalwarePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceSecurityMalware:getApplianceSecurityMalware", TypeShape.of(GetApplianceSecurityMalwareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSettings(GetApplianceSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSettingsResult> getApplianceSettings(GetApplianceSettingsArgs args) {
        return getApplianceSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSettings(GetApplianceSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSettingsResult> getApplianceSettingsPlain(GetApplianceSettingsPlainArgs args) {
        return getApplianceSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSettings(GetApplianceSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSettingsResult> getApplianceSettings(GetApplianceSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSettings:getApplianceSettings", TypeShape.of(GetApplianceSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSettings(GetApplianceSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSettingsResult> getApplianceSettings(GetApplianceSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSettings:getApplianceSettings", TypeShape.of(GetApplianceSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSettings(GetApplianceSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSettingsResult> getApplianceSettingsPlain(GetApplianceSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceSettings:getApplianceSettings", TypeShape.of(GetApplianceSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSingleLan(GetApplianceSingleLanArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSingleLanExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSingleLanResult> getApplianceSingleLan(GetApplianceSingleLanArgs args) {
        return getApplianceSingleLan(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSingleLan(GetApplianceSingleLanArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSingleLanExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSingleLanResult> getApplianceSingleLanPlain(GetApplianceSingleLanPlainArgs args) {
        return getApplianceSingleLanPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSingleLan(GetApplianceSingleLanArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSingleLanExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSingleLanResult> getApplianceSingleLan(GetApplianceSingleLanArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSingleLan:getApplianceSingleLan", TypeShape.of(GetApplianceSingleLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSingleLan(GetApplianceSingleLanArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSingleLanExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceSingleLanResult> getApplianceSingleLan(GetApplianceSingleLanArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSingleLan:getApplianceSingleLan", TypeShape.of(GetApplianceSingleLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceSingleLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceSingleLan(GetApplianceSingleLanArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceSingleLanExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceSingleLanResult> getApplianceSingleLanPlain(GetApplianceSingleLanPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceSingleLan:getApplianceSingleLan", TypeShape.of(GetApplianceSingleLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceSsidsResult> getApplianceSsids() {
        return getApplianceSsids(GetApplianceSsidsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceSsidsResult> getApplianceSsidsPlain() {
        return getApplianceSsidsPlain(GetApplianceSsidsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceSsidsResult> getApplianceSsids(GetApplianceSsidsArgs args) {
        return getApplianceSsids(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceSsidsResult> getApplianceSsidsPlain(GetApplianceSsidsPlainArgs args) {
        return getApplianceSsidsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceSsidsResult> getApplianceSsids(GetApplianceSsidsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSsids:getApplianceSsids", TypeShape.of(GetApplianceSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceSsidsResult> getApplianceSsids(GetApplianceSsidsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceSsids:getApplianceSsids", TypeShape.of(GetApplianceSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceSsidsResult> getApplianceSsidsPlain(GetApplianceSsidsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceSsids:getApplianceSsids", TypeShape.of(GetApplianceSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShaping(GetApplianceTrafficShapingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingResult> getApplianceTrafficShaping(GetApplianceTrafficShapingArgs args) {
        return getApplianceTrafficShaping(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShaping(GetApplianceTrafficShapingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingResult> getApplianceTrafficShapingPlain(GetApplianceTrafficShapingPlainArgs args) {
        return getApplianceTrafficShapingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShaping(GetApplianceTrafficShapingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingResult> getApplianceTrafficShaping(GetApplianceTrafficShapingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShaping:getApplianceTrafficShaping", TypeShape.of(GetApplianceTrafficShapingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShaping(GetApplianceTrafficShapingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingResult> getApplianceTrafficShaping(GetApplianceTrafficShapingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShaping:getApplianceTrafficShaping", TypeShape.of(GetApplianceTrafficShapingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShaping(GetApplianceTrafficShapingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingResult> getApplianceTrafficShapingPlain(GetApplianceTrafficShapingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceTrafficShaping:getApplianceTrafficShaping", TypeShape.of(GetApplianceTrafficShapingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingRulesResult> getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs args) {
        return getApplianceTrafficShapingRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingRulesResult> getApplianceTrafficShapingRulesPlain(GetApplianceTrafficShapingRulesPlainArgs args) {
        return getApplianceTrafficShapingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingRulesResult> getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingRules:getApplianceTrafficShapingRules", TypeShape.of(GetApplianceTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingRulesResult> getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingRules:getApplianceTrafficShapingRules", TypeShape.of(GetApplianceTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingRules(GetApplianceTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingRulesResult> getApplianceTrafficShapingRulesPlain(GetApplianceTrafficShapingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceTrafficShapingRules:getApplianceTrafficShapingRules", TypeShape.of(GetApplianceTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkBandwidthResult> getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs args) {
        return getApplianceTrafficShapingUplinkBandwidth(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingUplinkBandwidthResult> getApplianceTrafficShapingUplinkBandwidthPlain(GetApplianceTrafficShapingUplinkBandwidthPlainArgs args) {
        return getApplianceTrafficShapingUplinkBandwidthPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkBandwidthResult> getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingUplinkBandwidth:getApplianceTrafficShapingUplinkBandwidth", TypeShape.of(GetApplianceTrafficShapingUplinkBandwidthResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkBandwidthResult> getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingUplinkBandwidth:getApplianceTrafficShapingUplinkBandwidth", TypeShape.of(GetApplianceTrafficShapingUplinkBandwidthResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkBandwidthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkBandwidth(GetApplianceTrafficShapingUplinkBandwidthArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingUplinkBandwidthResult> getApplianceTrafficShapingUplinkBandwidthPlain(GetApplianceTrafficShapingUplinkBandwidthPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceTrafficShapingUplinkBandwidth:getApplianceTrafficShapingUplinkBandwidth", TypeShape.of(GetApplianceTrafficShapingUplinkBandwidthResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkSelectionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkSelectionResult> getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs args) {
        return getApplianceTrafficShapingUplinkSelection(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkSelectionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingUplinkSelectionResult> getApplianceTrafficShapingUplinkSelectionPlain(GetApplianceTrafficShapingUplinkSelectionPlainArgs args) {
        return getApplianceTrafficShapingUplinkSelectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkSelectionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkSelectionResult> getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingUplinkSelection:getApplianceTrafficShapingUplinkSelection", TypeShape.of(GetApplianceTrafficShapingUplinkSelectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkSelectionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceTrafficShapingUplinkSelectionResult> getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceTrafficShapingUplinkSelection:getApplianceTrafficShapingUplinkSelection", TypeShape.of(GetApplianceTrafficShapingUplinkSelectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceTrafficShapingUplinkSelectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceTrafficShapingUplinkSelection(GetApplianceTrafficShapingUplinkSelectionArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceTrafficShapingUplinkSelectionExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceTrafficShapingUplinkSelectionResult> getApplianceTrafficShapingUplinkSelectionPlain(GetApplianceTrafficShapingUplinkSelectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceTrafficShapingUplinkSelection:getApplianceTrafficShapingUplinkSelection", TypeShape.of(GetApplianceTrafficShapingUplinkSelectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceVlansResult> getApplianceVlans() {
        return getApplianceVlans(GetApplianceVlansArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceVlansResult> getApplianceVlansPlain() {
        return getApplianceVlansPlain(GetApplianceVlansPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceVlansResult> getApplianceVlans(GetApplianceVlansArgs args) {
        return getApplianceVlans(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceVlansResult> getApplianceVlansPlain(GetApplianceVlansPlainArgs args) {
        return getApplianceVlansPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceVlansResult> getApplianceVlans(GetApplianceVlansArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVlans:getApplianceVlans", TypeShape.of(GetApplianceVlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetApplianceVlansResult> getApplianceVlans(GetApplianceVlansArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVlans:getApplianceVlans", TypeShape.of(GetApplianceVlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApplianceVlansResult> getApplianceVlansPlain(GetApplianceVlansPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceVlans:getApplianceVlans", TypeShape.of(GetApplianceVlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVlansSettings(GetApplianceVlansSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVlansSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVlansSettingsResult> getApplianceVlansSettings(GetApplianceVlansSettingsArgs args) {
        return getApplianceVlansSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVlansSettings(GetApplianceVlansSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVlansSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVlansSettingsResult> getApplianceVlansSettingsPlain(GetApplianceVlansSettingsPlainArgs args) {
        return getApplianceVlansSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVlansSettings(GetApplianceVlansSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVlansSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVlansSettingsResult> getApplianceVlansSettings(GetApplianceVlansSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVlansSettings:getApplianceVlansSettings", TypeShape.of(GetApplianceVlansSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVlansSettings(GetApplianceVlansSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVlansSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVlansSettingsResult> getApplianceVlansSettings(GetApplianceVlansSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVlansSettings:getApplianceVlansSettings", TypeShape.of(GetApplianceVlansSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVlansSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVlansSettings(GetApplianceVlansSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVlansSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVlansSettingsResult> getApplianceVlansSettingsPlain(GetApplianceVlansSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceVlansSettings:getApplianceVlansSettings", TypeShape.of(GetApplianceVlansSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnBgp(GetApplianceVpnBgpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnBgpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnBgpResult> getApplianceVpnBgp(GetApplianceVpnBgpArgs args) {
        return getApplianceVpnBgp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnBgp(GetApplianceVpnBgpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnBgpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVpnBgpResult> getApplianceVpnBgpPlain(GetApplianceVpnBgpPlainArgs args) {
        return getApplianceVpnBgpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnBgp(GetApplianceVpnBgpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnBgpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnBgpResult> getApplianceVpnBgp(GetApplianceVpnBgpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVpnBgp:getApplianceVpnBgp", TypeShape.of(GetApplianceVpnBgpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnBgp(GetApplianceVpnBgpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnBgpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnBgpResult> getApplianceVpnBgp(GetApplianceVpnBgpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVpnBgp:getApplianceVpnBgp", TypeShape.of(GetApplianceVpnBgpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnBgpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnBgp(GetApplianceVpnBgpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnBgpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVpnBgpResult> getApplianceVpnBgpPlain(GetApplianceVpnBgpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceVpnBgp:getApplianceVpnBgp", TypeShape.of(GetApplianceVpnBgpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnSiteToSiteVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnSiteToSiteVpnResult> getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs args) {
        return getApplianceVpnSiteToSiteVpn(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnSiteToSiteVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVpnSiteToSiteVpnResult> getApplianceVpnSiteToSiteVpnPlain(GetApplianceVpnSiteToSiteVpnPlainArgs args) {
        return getApplianceVpnSiteToSiteVpnPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnSiteToSiteVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnSiteToSiteVpnResult> getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVpnSiteToSiteVpn:getApplianceVpnSiteToSiteVpn", TypeShape.of(GetApplianceVpnSiteToSiteVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnSiteToSiteVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceVpnSiteToSiteVpnResult> getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceVpnSiteToSiteVpn:getApplianceVpnSiteToSiteVpn", TypeShape.of(GetApplianceVpnSiteToSiteVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceVpnSiteToSiteVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceVpnSiteToSiteVpn(GetApplianceVpnSiteToSiteVpnArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceVpnSiteToSiteVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceVpnSiteToSiteVpnResult> getApplianceVpnSiteToSiteVpnPlain(GetApplianceVpnSiteToSiteVpnPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceVpnSiteToSiteVpn:getApplianceVpnSiteToSiteVpn", TypeShape.of(GetApplianceVpnSiteToSiteVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceWarmSpare(GetApplianceWarmSpareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceWarmSpareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceWarmSpareResult> getApplianceWarmSpare(GetApplianceWarmSpareArgs args) {
        return getApplianceWarmSpare(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceWarmSpare(GetApplianceWarmSpareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceWarmSpareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceWarmSpareResult> getApplianceWarmSparePlain(GetApplianceWarmSparePlainArgs args) {
        return getApplianceWarmSparePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceWarmSpare(GetApplianceWarmSpareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceWarmSpareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceWarmSpareResult> getApplianceWarmSpare(GetApplianceWarmSpareArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceWarmSpare:getApplianceWarmSpare", TypeShape.of(GetApplianceWarmSpareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceWarmSpare(GetApplianceWarmSpareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceWarmSpareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetApplianceWarmSpareResult> getApplianceWarmSpare(GetApplianceWarmSpareArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getApplianceWarmSpare:getApplianceWarmSpare", TypeShape.of(GetApplianceWarmSpareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetApplianceWarmSpareArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getApplianceWarmSpare(GetApplianceWarmSpareArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksApplianceWarmSpareExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetApplianceWarmSpareResult> getApplianceWarmSparePlain(GetApplianceWarmSparePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getApplianceWarmSpare:getApplianceWarmSpare", TypeShape.of(GetApplianceWarmSpareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getBluetoothClients(GetBluetoothClientsArgs.builder()
     *             .bluetoothClientId("string")
     *             .connectivityHistoryTimespan(1)
     *             .includeConnectivityHistory(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksBluetoothClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBluetoothClientsResult> getBluetoothClients(GetBluetoothClientsArgs args) {
        return getBluetoothClients(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getBluetoothClients(GetBluetoothClientsArgs.builder()
     *             .bluetoothClientId("string")
     *             .connectivityHistoryTimespan(1)
     *             .includeConnectivityHistory(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksBluetoothClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBluetoothClientsResult> getBluetoothClientsPlain(GetBluetoothClientsPlainArgs args) {
        return getBluetoothClientsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getBluetoothClients(GetBluetoothClientsArgs.builder()
     *             .bluetoothClientId("string")
     *             .connectivityHistoryTimespan(1)
     *             .includeConnectivityHistory(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksBluetoothClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBluetoothClientsResult> getBluetoothClients(GetBluetoothClientsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getBluetoothClients:getBluetoothClients", TypeShape.of(GetBluetoothClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getBluetoothClients(GetBluetoothClientsArgs.builder()
     *             .bluetoothClientId("string")
     *             .connectivityHistoryTimespan(1)
     *             .includeConnectivityHistory(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksBluetoothClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBluetoothClientsResult> getBluetoothClients(GetBluetoothClientsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getBluetoothClients:getBluetoothClients", TypeShape.of(GetBluetoothClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetBluetoothClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getBluetoothClients(GetBluetoothClientsArgs.builder()
     *             .bluetoothClientId("string")
     *             .connectivityHistoryTimespan(1)
     *             .includeConnectivityHistory(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksBluetoothClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBluetoothClientsResult> getBluetoothClientsPlain(GetBluetoothClientsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getBluetoothClients:getBluetoothClients", TypeShape.of(GetBluetoothClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfiles() {
        return getCameraQualityRetentionProfiles(GetCameraQualityRetentionProfilesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfilesPlain() {
        return getCameraQualityRetentionProfilesPlain(GetCameraQualityRetentionProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfiles(GetCameraQualityRetentionProfilesArgs args) {
        return getCameraQualityRetentionProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfilesPlain(GetCameraQualityRetentionProfilesPlainArgs args) {
        return getCameraQualityRetentionProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfiles(GetCameraQualityRetentionProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCameraQualityRetentionProfiles:getCameraQualityRetentionProfiles", TypeShape.of(GetCameraQualityRetentionProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfiles(GetCameraQualityRetentionProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCameraQualityRetentionProfiles:getCameraQualityRetentionProfiles", TypeShape.of(GetCameraQualityRetentionProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraQualityRetentionProfilesResult> getCameraQualityRetentionProfilesPlain(GetCameraQualityRetentionProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCameraQualityRetentionProfiles:getCameraQualityRetentionProfiles", TypeShape.of(GetCameraQualityRetentionProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraWirelessProfilesResult> getCameraWirelessProfiles() {
        return getCameraWirelessProfiles(GetCameraWirelessProfilesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraWirelessProfilesResult> getCameraWirelessProfilesPlain() {
        return getCameraWirelessProfilesPlain(GetCameraWirelessProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraWirelessProfilesResult> getCameraWirelessProfiles(GetCameraWirelessProfilesArgs args) {
        return getCameraWirelessProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraWirelessProfilesResult> getCameraWirelessProfilesPlain(GetCameraWirelessProfilesPlainArgs args) {
        return getCameraWirelessProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraWirelessProfilesResult> getCameraWirelessProfiles(GetCameraWirelessProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCameraWirelessProfiles:getCameraWirelessProfiles", TypeShape.of(GetCameraWirelessProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetCameraWirelessProfilesResult> getCameraWirelessProfiles(GetCameraWirelessProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCameraWirelessProfiles:getCameraWirelessProfiles", TypeShape.of(GetCameraWirelessProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCameraWirelessProfilesResult> getCameraWirelessProfilesPlain(GetCameraWirelessProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCameraWirelessProfiles:getCameraWirelessProfiles", TypeShape.of(GetCameraWirelessProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayConnectivityMonitoringDestinationsResult> getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs args) {
        return getCellularGatewayConnectivityMonitoringDestinations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayConnectivityMonitoringDestinationsResult> getCellularGatewayConnectivityMonitoringDestinationsPlain(GetCellularGatewayConnectivityMonitoringDestinationsPlainArgs args) {
        return getCellularGatewayConnectivityMonitoringDestinationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayConnectivityMonitoringDestinationsResult> getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayConnectivityMonitoringDestinations:getCellularGatewayConnectivityMonitoringDestinations", TypeShape.of(GetCellularGatewayConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayConnectivityMonitoringDestinationsResult> getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayConnectivityMonitoringDestinations:getCellularGatewayConnectivityMonitoringDestinations", TypeShape.of(GetCellularGatewayConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayConnectivityMonitoringDestinationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayConnectivityMonitoringDestinations(GetCellularGatewayConnectivityMonitoringDestinationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayConnectivityMonitoringDestinationsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayConnectivityMonitoringDestinationsResult> getCellularGatewayConnectivityMonitoringDestinationsPlain(GetCellularGatewayConnectivityMonitoringDestinationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCellularGatewayConnectivityMonitoringDestinations:getCellularGatewayConnectivityMonitoringDestinations", TypeShape.of(GetCellularGatewayConnectivityMonitoringDestinationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayDhcp(GetCellularGatewayDhcpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayDhcpResult> getCellularGatewayDhcp(GetCellularGatewayDhcpArgs args) {
        return getCellularGatewayDhcp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayDhcp(GetCellularGatewayDhcpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayDhcpResult> getCellularGatewayDhcpPlain(GetCellularGatewayDhcpPlainArgs args) {
        return getCellularGatewayDhcpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayDhcp(GetCellularGatewayDhcpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayDhcpResult> getCellularGatewayDhcp(GetCellularGatewayDhcpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayDhcp:getCellularGatewayDhcp", TypeShape.of(GetCellularGatewayDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayDhcp(GetCellularGatewayDhcpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayDhcpResult> getCellularGatewayDhcp(GetCellularGatewayDhcpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayDhcp:getCellularGatewayDhcp", TypeShape.of(GetCellularGatewayDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayDhcp(GetCellularGatewayDhcpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayDhcpResult> getCellularGatewayDhcpPlain(GetCellularGatewayDhcpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCellularGatewayDhcp:getCellularGatewayDhcp", TypeShape.of(GetCellularGatewayDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewaySubnetPoolExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewaySubnetPoolResult> getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs args) {
        return getCellularGatewaySubnetPool(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewaySubnetPoolExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewaySubnetPoolResult> getCellularGatewaySubnetPoolPlain(GetCellularGatewaySubnetPoolPlainArgs args) {
        return getCellularGatewaySubnetPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewaySubnetPoolExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewaySubnetPoolResult> getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewaySubnetPool:getCellularGatewaySubnetPool", TypeShape.of(GetCellularGatewaySubnetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewaySubnetPoolExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewaySubnetPoolResult> getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewaySubnetPool:getCellularGatewaySubnetPool", TypeShape.of(GetCellularGatewaySubnetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewaySubnetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewaySubnetPool(GetCellularGatewaySubnetPoolArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewaySubnetPoolExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewaySubnetPoolResult> getCellularGatewaySubnetPoolPlain(GetCellularGatewaySubnetPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCellularGatewaySubnetPool:getCellularGatewaySubnetPool", TypeShape.of(GetCellularGatewaySubnetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayUplink(GetCellularGatewayUplinkArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayUplinkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayUplinkResult> getCellularGatewayUplink(GetCellularGatewayUplinkArgs args) {
        return getCellularGatewayUplink(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayUplink(GetCellularGatewayUplinkArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayUplinkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayUplinkResult> getCellularGatewayUplinkPlain(GetCellularGatewayUplinkPlainArgs args) {
        return getCellularGatewayUplinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayUplink(GetCellularGatewayUplinkArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayUplinkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayUplinkResult> getCellularGatewayUplink(GetCellularGatewayUplinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayUplink:getCellularGatewayUplink", TypeShape.of(GetCellularGatewayUplinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayUplink(GetCellularGatewayUplinkArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayUplinkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCellularGatewayUplinkResult> getCellularGatewayUplink(GetCellularGatewayUplinkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getCellularGatewayUplink:getCellularGatewayUplink", TypeShape.of(GetCellularGatewayUplinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetCellularGatewayUplinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getCellularGatewayUplink(GetCellularGatewayUplinkArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksCellularGatewayUplinkExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCellularGatewayUplinkResult> getCellularGatewayUplinkPlain(GetCellularGatewayUplinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getCellularGatewayUplink:getCellularGatewayUplink", TypeShape.of(GetCellularGatewayUplinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClients(GetClientsArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args) {
        return getClients(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClients(GetClientsArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsResult> getClientsPlain(GetClientsPlainArgs args) {
        return getClientsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClients(GetClientsArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClients(GetClientsArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClients(GetClientsArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsResult> getClientsPlain(GetClientsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args) {
        return getClientsOverview(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsOverviewResult> getClientsOverviewPlain(GetClientsOverviewPlainArgs args) {
        return getClientsOverviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsOverviewResult> getClientsOverview(GetClientsOverviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsOverviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsOverview(GetClientsOverviewArgs.builder()
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsOverviewExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsOverviewResult> getClientsOverviewPlain(GetClientsOverviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getClientsOverview:getClientsOverview", TypeShape.of(GetClientsOverviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsPolicy(GetClientsPolicyArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsPolicyResult> getClientsPolicy(GetClientsPolicyArgs args) {
        return getClientsPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsPolicy(GetClientsPolicyArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsPolicyResult> getClientsPolicyPlain(GetClientsPolicyPlainArgs args) {
        return getClientsPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsPolicy(GetClientsPolicyArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsPolicyResult> getClientsPolicy(GetClientsPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsPolicy:getClientsPolicy", TypeShape.of(GetClientsPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsPolicy(GetClientsPolicyArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsPolicyResult> getClientsPolicy(GetClientsPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsPolicy:getClientsPolicy", TypeShape.of(GetClientsPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsPolicy(GetClientsPolicyArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsPolicyResult> getClientsPolicyPlain(GetClientsPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getClientsPolicy:getClientsPolicy", TypeShape.of(GetClientsPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsSplashAuthorizationStatusResult> getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs args) {
        return getClientsSplashAuthorizationStatus(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsSplashAuthorizationStatusResult> getClientsSplashAuthorizationStatusPlain(GetClientsSplashAuthorizationStatusPlainArgs args) {
        return getClientsSplashAuthorizationStatusPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsSplashAuthorizationStatusResult> getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsSplashAuthorizationStatus:getClientsSplashAuthorizationStatus", TypeShape.of(GetClientsSplashAuthorizationStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetClientsSplashAuthorizationStatusResult> getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getClientsSplashAuthorizationStatus:getClientsSplashAuthorizationStatus", TypeShape.of(GetClientsSplashAuthorizationStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetClientsSplashAuthorizationStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getClientsSplashAuthorizationStatus(GetClientsSplashAuthorizationStatusArgs.builder()
     *             .clientId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksClientsSplashAuthorizationStatusExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetClientsSplashAuthorizationStatusResult> getClientsSplashAuthorizationStatusPlain(GetClientsSplashAuthorizationStatusPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getClientsSplashAuthorizationStatus:getClientsSplashAuthorizationStatus", TypeShape.of(GetClientsSplashAuthorizationStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEvents(GetEventsArgs.builder()
     *             .clientIp("string")
     *             .clientMac("string")
     *             .clientName("string")
     *             .deviceMac("string")
     *             .deviceName("string")
     *             .deviceSerial("string")
     *             .endingBefore("string")
     *             .excludedEventTypes("string")
     *             .includedEventTypes("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productType("string")
     *             .smDeviceMac("string")
     *             .smDeviceName("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args) {
        return getEvents(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEvents(GetEventsArgs.builder()
     *             .clientIp("string")
     *             .clientMac("string")
     *             .clientName("string")
     *             .deviceMac("string")
     *             .deviceName("string")
     *             .deviceSerial("string")
     *             .endingBefore("string")
     *             .excludedEventTypes("string")
     *             .includedEventTypes("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productType("string")
     *             .smDeviceMac("string")
     *             .smDeviceName("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEventsResult> getEventsPlain(GetEventsPlainArgs args) {
        return getEventsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEvents(GetEventsArgs.builder()
     *             .clientIp("string")
     *             .clientMac("string")
     *             .clientName("string")
     *             .deviceMac("string")
     *             .deviceName("string")
     *             .deviceSerial("string")
     *             .endingBefore("string")
     *             .excludedEventTypes("string")
     *             .includedEventTypes("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productType("string")
     *             .smDeviceMac("string")
     *             .smDeviceName("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEvents(GetEventsArgs.builder()
     *             .clientIp("string")
     *             .clientMac("string")
     *             .clientName("string")
     *             .deviceMac("string")
     *             .deviceName("string")
     *             .deviceSerial("string")
     *             .endingBefore("string")
     *             .excludedEventTypes("string")
     *             .includedEventTypes("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productType("string")
     *             .smDeviceMac("string")
     *             .smDeviceName("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEvents(GetEventsArgs.builder()
     *             .clientIp("string")
     *             .clientMac("string")
     *             .clientName("string")
     *             .deviceMac("string")
     *             .deviceName("string")
     *             .deviceSerial("string")
     *             .endingBefore("string")
     *             .excludedEventTypes("string")
     *             .includedEventTypes("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productType("string")
     *             .smDeviceMac("string")
     *             .smDeviceName("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEventsResult> getEventsPlain(GetEventsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEventsEventTypes(GetEventsEventTypesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsEventTypesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsEventTypesResult> getEventsEventTypes(GetEventsEventTypesArgs args) {
        return getEventsEventTypes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEventsEventTypes(GetEventsEventTypesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsEventTypesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEventsEventTypesResult> getEventsEventTypesPlain(GetEventsEventTypesPlainArgs args) {
        return getEventsEventTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEventsEventTypes(GetEventsEventTypesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsEventTypesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsEventTypesResult> getEventsEventTypes(GetEventsEventTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getEventsEventTypes:getEventsEventTypes", TypeShape.of(GetEventsEventTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEventsEventTypes(GetEventsEventTypesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsEventTypesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEventsEventTypesResult> getEventsEventTypes(GetEventsEventTypesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getEventsEventTypes:getEventsEventTypes", TypeShape.of(GetEventsEventTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetEventsEventTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getEventsEventTypes(GetEventsEventTypesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksEventsEventTypesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEventsEventTypesResult> getEventsEventTypesPlain(GetEventsEventTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getEventsEventTypes:getEventsEventTypes", TypeShape.of(GetEventsEventTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args) {
        return getFirmwareUpgrades(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesResult> getFirmwareUpgradesPlain(GetFirmwareUpgradesPlainArgs args) {
        return getFirmwareUpgradesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesResult> getFirmwareUpgrades(GetFirmwareUpgradesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgrades(GetFirmwareUpgradesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesResult> getFirmwareUpgradesPlain(GetFirmwareUpgradesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getFirmwareUpgrades:getFirmwareUpgrades", TypeShape.of(GetFirmwareUpgradesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedEventsResult> getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs args) {
        return getFirmwareUpgradesStagedEvents(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedEventsResult> getFirmwareUpgradesStagedEventsPlain(GetFirmwareUpgradesStagedEventsPlainArgs args) {
        return getFirmwareUpgradesStagedEventsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedEventsResult> getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedEvents:getFirmwareUpgradesStagedEvents", TypeShape.of(GetFirmwareUpgradesStagedEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedEventsResult> getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedEvents:getFirmwareUpgradesStagedEvents", TypeShape.of(GetFirmwareUpgradesStagedEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedEvents(GetFirmwareUpgradesStagedEventsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedEventsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedEventsResult> getFirmwareUpgradesStagedEventsPlain(GetFirmwareUpgradesStagedEventsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getFirmwareUpgradesStagedEvents:getFirmwareUpgradesStagedEvents", TypeShape.of(GetFirmwareUpgradesStagedEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroups() {
        return getFirmwareUpgradesStagedGroups(GetFirmwareUpgradesStagedGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroupsPlain() {
        return getFirmwareUpgradesStagedGroupsPlain(GetFirmwareUpgradesStagedGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroups(GetFirmwareUpgradesStagedGroupsArgs args) {
        return getFirmwareUpgradesStagedGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroupsPlain(GetFirmwareUpgradesStagedGroupsPlainArgs args) {
        return getFirmwareUpgradesStagedGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroups(GetFirmwareUpgradesStagedGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedGroups:getFirmwareUpgradesStagedGroups", TypeShape.of(GetFirmwareUpgradesStagedGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroups(GetFirmwareUpgradesStagedGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedGroups:getFirmwareUpgradesStagedGroups", TypeShape.of(GetFirmwareUpgradesStagedGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedGroupsResult> getFirmwareUpgradesStagedGroupsPlain(GetFirmwareUpgradesStagedGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getFirmwareUpgradesStagedGroups:getFirmwareUpgradesStagedGroups", TypeShape.of(GetFirmwareUpgradesStagedGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedStagesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedStagesResult> getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs args) {
        return getFirmwareUpgradesStagedStages(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedStagesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedStagesResult> getFirmwareUpgradesStagedStagesPlain(GetFirmwareUpgradesStagedStagesPlainArgs args) {
        return getFirmwareUpgradesStagedStagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedStagesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedStagesResult> getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedStages:getFirmwareUpgradesStagedStages", TypeShape.of(GetFirmwareUpgradesStagedStagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedStagesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFirmwareUpgradesStagedStagesResult> getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFirmwareUpgradesStagedStages:getFirmwareUpgradesStagedStages", TypeShape.of(GetFirmwareUpgradesStagedStagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetFirmwareUpgradesStagedStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getFirmwareUpgradesStagedStages(GetFirmwareUpgradesStagedStagesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksFirmwareUpgradesStagedStagesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFirmwareUpgradesStagedStagesResult> getFirmwareUpgradesStagedStagesPlain(GetFirmwareUpgradesStagedStagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getFirmwareUpgradesStagedStages:getFirmwareUpgradesStagedStages", TypeShape.of(GetFirmwareUpgradesStagedStagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFloorPlansResult> getFloorPlans() {
        return getFloorPlans(GetFloorPlansArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFloorPlansResult> getFloorPlansPlain() {
        return getFloorPlansPlain(GetFloorPlansPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFloorPlansResult> getFloorPlans(GetFloorPlansArgs args) {
        return getFloorPlans(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFloorPlansResult> getFloorPlansPlain(GetFloorPlansPlainArgs args) {
        return getFloorPlansPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFloorPlansResult> getFloorPlans(GetFloorPlansArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFloorPlans:getFloorPlans", TypeShape.of(GetFloorPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetFloorPlansResult> getFloorPlans(GetFloorPlansArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getFloorPlans:getFloorPlans", TypeShape.of(GetFloorPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFloorPlansResult> getFloorPlansPlain(GetFloorPlansPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getFloorPlans:getFloorPlans", TypeShape.of(GetFloorPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetGroupPoliciesResult> getGroupPolicies() {
        return getGroupPolicies(GetGroupPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGroupPoliciesResult> getGroupPoliciesPlain() {
        return getGroupPoliciesPlain(GetGroupPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetGroupPoliciesResult> getGroupPolicies(GetGroupPoliciesArgs args) {
        return getGroupPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGroupPoliciesResult> getGroupPoliciesPlain(GetGroupPoliciesPlainArgs args) {
        return getGroupPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetGroupPoliciesResult> getGroupPolicies(GetGroupPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getGroupPolicies:getGroupPolicies", TypeShape.of(GetGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetGroupPoliciesResult> getGroupPolicies(GetGroupPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getGroupPolicies:getGroupPolicies", TypeShape.of(GetGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGroupPoliciesResult> getGroupPoliciesPlain(GetGroupPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getGroupPolicies:getGroupPolicies", TypeShape.of(GetGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getHealthAlerts(GetHealthAlertsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksHealthAlertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHealthAlertsResult> getHealthAlerts(GetHealthAlertsArgs args) {
        return getHealthAlerts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getHealthAlerts(GetHealthAlertsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksHealthAlertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetHealthAlertsResult> getHealthAlertsPlain(GetHealthAlertsPlainArgs args) {
        return getHealthAlertsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getHealthAlerts(GetHealthAlertsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksHealthAlertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHealthAlertsResult> getHealthAlerts(GetHealthAlertsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getHealthAlerts:getHealthAlerts", TypeShape.of(GetHealthAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getHealthAlerts(GetHealthAlertsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksHealthAlertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHealthAlertsResult> getHealthAlerts(GetHealthAlertsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getHealthAlerts:getHealthAlerts", TypeShape.of(GetHealthAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetHealthAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getHealthAlerts(GetHealthAlertsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksHealthAlertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetHealthAlertsResult> getHealthAlertsPlain(GetHealthAlertsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getHealthAlerts:getHealthAlerts", TypeShape.of(GetHealthAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs.builder()
     *             .applicationId("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksInsightApplicationsHealthByTimeExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInsightApplicationsHealthByTimeResult> getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs args) {
        return getInsightApplicationsHealthByTime(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs.builder()
     *             .applicationId("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksInsightApplicationsHealthByTimeExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInsightApplicationsHealthByTimeResult> getInsightApplicationsHealthByTimePlain(GetInsightApplicationsHealthByTimePlainArgs args) {
        return getInsightApplicationsHealthByTimePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs.builder()
     *             .applicationId("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksInsightApplicationsHealthByTimeExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInsightApplicationsHealthByTimeResult> getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getInsightApplicationsHealthByTime:getInsightApplicationsHealthByTime", TypeShape.of(GetInsightApplicationsHealthByTimeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs.builder()
     *             .applicationId("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksInsightApplicationsHealthByTimeExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInsightApplicationsHealthByTimeResult> getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getInsightApplicationsHealthByTime:getInsightApplicationsHealthByTime", TypeShape.of(GetInsightApplicationsHealthByTimeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetInsightApplicationsHealthByTimeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getInsightApplicationsHealthByTime(GetInsightApplicationsHealthByTimeArgs.builder()
     *             .applicationId("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksInsightApplicationsHealthByTimeExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInsightApplicationsHealthByTimeResult> getInsightApplicationsHealthByTimePlain(GetInsightApplicationsHealthByTimePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getInsightApplicationsHealthByTime:getInsightApplicationsHealthByTime", TypeShape.of(GetInsightApplicationsHealthByTimeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetMerakiAuthUsersResult> getMerakiAuthUsers() {
        return getMerakiAuthUsers(GetMerakiAuthUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMerakiAuthUsersResult> getMerakiAuthUsersPlain() {
        return getMerakiAuthUsersPlain(GetMerakiAuthUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetMerakiAuthUsersResult> getMerakiAuthUsers(GetMerakiAuthUsersArgs args) {
        return getMerakiAuthUsers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMerakiAuthUsersResult> getMerakiAuthUsersPlain(GetMerakiAuthUsersPlainArgs args) {
        return getMerakiAuthUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetMerakiAuthUsersResult> getMerakiAuthUsers(GetMerakiAuthUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getMerakiAuthUsers:getMerakiAuthUsers", TypeShape.of(GetMerakiAuthUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetMerakiAuthUsersResult> getMerakiAuthUsers(GetMerakiAuthUsersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getMerakiAuthUsers:getMerakiAuthUsers", TypeShape.of(GetMerakiAuthUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMerakiAuthUsersResult> getMerakiAuthUsersPlain(GetMerakiAuthUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getMerakiAuthUsers:getMerakiAuthUsers", TypeShape.of(GetMerakiAuthUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getNetflow(GetNetflowArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksNetflowExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetflowResult> getNetflow(GetNetflowArgs args) {
        return getNetflow(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getNetflow(GetNetflowArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksNetflowExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNetflowResult> getNetflowPlain(GetNetflowPlainArgs args) {
        return getNetflowPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getNetflow(GetNetflowArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksNetflowExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetflowResult> getNetflow(GetNetflowArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getNetflow:getNetflow", TypeShape.of(GetNetflowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getNetflow(GetNetflowArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksNetflowExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetflowResult> getNetflow(GetNetflowArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getNetflow:getNetflow", TypeShape.of(GetNetflowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetNetflowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getNetflow(GetNetflowArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksNetflowExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNetflowResult> getNetflowPlain(GetNetflowPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getNetflow:getNetflow", TypeShape.of(GetNetflowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiPiiKeys(GetPiiPiiKeysArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiPiiKeysExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiPiiKeysResult> getPiiPiiKeys(GetPiiPiiKeysArgs args) {
        return getPiiPiiKeys(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiPiiKeys(GetPiiPiiKeysArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiPiiKeysExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiPiiKeysResult> getPiiPiiKeysPlain(GetPiiPiiKeysPlainArgs args) {
        return getPiiPiiKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiPiiKeys(GetPiiPiiKeysArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiPiiKeysExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiPiiKeysResult> getPiiPiiKeys(GetPiiPiiKeysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiPiiKeys:getPiiPiiKeys", TypeShape.of(GetPiiPiiKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiPiiKeys(GetPiiPiiKeysArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiPiiKeysExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiPiiKeysResult> getPiiPiiKeys(GetPiiPiiKeysArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiPiiKeys:getPiiPiiKeys", TypeShape.of(GetPiiPiiKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiPiiKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiPiiKeys(GetPiiPiiKeysArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiPiiKeysExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiPiiKeysResult> getPiiPiiKeysPlain(GetPiiPiiKeysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getPiiPiiKeys:getPiiPiiKeys", TypeShape.of(GetPiiPiiKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetPiiRequestsResult> getPiiRequests() {
        return getPiiRequests(GetPiiRequestsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPiiRequestsResult> getPiiRequestsPlain() {
        return getPiiRequestsPlain(GetPiiRequestsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetPiiRequestsResult> getPiiRequests(GetPiiRequestsArgs args) {
        return getPiiRequests(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPiiRequestsResult> getPiiRequestsPlain(GetPiiRequestsPlainArgs args) {
        return getPiiRequestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetPiiRequestsResult> getPiiRequests(GetPiiRequestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiRequests:getPiiRequests", TypeShape.of(GetPiiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetPiiRequestsResult> getPiiRequests(GetPiiRequestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiRequests:getPiiRequests", TypeShape.of(GetPiiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPiiRequestsResult> getPiiRequestsPlain(GetPiiRequestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getPiiRequests:getPiiRequests", TypeShape.of(GetPiiRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmDevicesForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmDevicesForKeyResult> getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs args) {
        return getPiiSmDevicesForKey(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmDevicesForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiSmDevicesForKeyResult> getPiiSmDevicesForKeyPlain(GetPiiSmDevicesForKeyPlainArgs args) {
        return getPiiSmDevicesForKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmDevicesForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmDevicesForKeyResult> getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiSmDevicesForKey:getPiiSmDevicesForKey", TypeShape.of(GetPiiSmDevicesForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmDevicesForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmDevicesForKeyResult> getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiSmDevicesForKey:getPiiSmDevicesForKey", TypeShape.of(GetPiiSmDevicesForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmDevicesForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmDevicesForKey(GetPiiSmDevicesForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmDevicesForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiSmDevicesForKeyResult> getPiiSmDevicesForKeyPlain(GetPiiSmDevicesForKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getPiiSmDevicesForKey:getPiiSmDevicesForKey", TypeShape.of(GetPiiSmDevicesForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmOwnersForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmOwnersForKeyResult> getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs args) {
        return getPiiSmOwnersForKey(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmOwnersForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiSmOwnersForKeyResult> getPiiSmOwnersForKeyPlain(GetPiiSmOwnersForKeyPlainArgs args) {
        return getPiiSmOwnersForKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmOwnersForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmOwnersForKeyResult> getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", TypeShape.of(GetPiiSmOwnersForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmOwnersForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPiiSmOwnersForKeyResult> getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", TypeShape.of(GetPiiSmOwnersForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPiiSmOwnersForKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPiiSmOwnersForKey(GetPiiSmOwnersForKeyArgs.builder()
     *             .bluetoothMac("string")
     *             .email("string")
     *             .imei("string")
     *             .mac("string")
     *             .networkId("string")
     *             .serial("string")
     *             .username("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksPiiSmOwnersForKeyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPiiSmOwnersForKeyResult> getPiiSmOwnersForKeyPlain(GetPiiSmOwnersForKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getPiiSmOwnersForKey:getPiiSmOwnersForKey", TypeShape.of(GetPiiSmOwnersForKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPoliciesByClient(GetPoliciesByClientArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksPoliciesByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPoliciesByClientResult> getPoliciesByClient(GetPoliciesByClientArgs args) {
        return getPoliciesByClient(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPoliciesByClient(GetPoliciesByClientArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksPoliciesByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPoliciesByClientResult> getPoliciesByClientPlain(GetPoliciesByClientPlainArgs args) {
        return getPoliciesByClientPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPoliciesByClient(GetPoliciesByClientArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksPoliciesByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPoliciesByClientResult> getPoliciesByClient(GetPoliciesByClientArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPoliciesByClient:getPoliciesByClient", TypeShape.of(GetPoliciesByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPoliciesByClient(GetPoliciesByClientArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksPoliciesByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPoliciesByClientResult> getPoliciesByClient(GetPoliciesByClientArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getPoliciesByClient:getPoliciesByClient", TypeShape.of(GetPoliciesByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetPoliciesByClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getPoliciesByClient(GetPoliciesByClientArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksPoliciesByClientExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPoliciesByClientResult> getPoliciesByClientPlain(GetPoliciesByClientPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getPoliciesByClient:getPoliciesByClient", TypeShape.of(GetPoliciesByClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsCurrentOverviewByMetricExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsCurrentOverviewByMetricResult> getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs args) {
        return getSensorAlertsCurrentOverviewByMetric(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsCurrentOverviewByMetricExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorAlertsCurrentOverviewByMetricResult> getSensorAlertsCurrentOverviewByMetricPlain(GetSensorAlertsCurrentOverviewByMetricPlainArgs args) {
        return getSensorAlertsCurrentOverviewByMetricPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsCurrentOverviewByMetricExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsCurrentOverviewByMetricResult> getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsCurrentOverviewByMetric:getSensorAlertsCurrentOverviewByMetric", TypeShape.of(GetSensorAlertsCurrentOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsCurrentOverviewByMetricExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsCurrentOverviewByMetricResult> getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsCurrentOverviewByMetric:getSensorAlertsCurrentOverviewByMetric", TypeShape.of(GetSensorAlertsCurrentOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsCurrentOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsCurrentOverviewByMetric(GetSensorAlertsCurrentOverviewByMetricArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsCurrentOverviewByMetricExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorAlertsCurrentOverviewByMetricResult> getSensorAlertsCurrentOverviewByMetricPlain(GetSensorAlertsCurrentOverviewByMetricPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSensorAlertsCurrentOverviewByMetric:getSensorAlertsCurrentOverviewByMetric", TypeShape.of(GetSensorAlertsCurrentOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs.builder()
     *             .interval(1)
     *             .networkId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsOverviewByMetricExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsOverviewByMetricResult> getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs args) {
        return getSensorAlertsOverviewByMetric(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs.builder()
     *             .interval(1)
     *             .networkId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsOverviewByMetricExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorAlertsOverviewByMetricResult> getSensorAlertsOverviewByMetricPlain(GetSensorAlertsOverviewByMetricPlainArgs args) {
        return getSensorAlertsOverviewByMetricPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs.builder()
     *             .interval(1)
     *             .networkId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsOverviewByMetricExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsOverviewByMetricResult> getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", TypeShape.of(GetSensorAlertsOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs.builder()
     *             .interval(1)
     *             .networkId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsOverviewByMetricExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorAlertsOverviewByMetricResult> getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", TypeShape.of(GetSensorAlertsOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorAlertsOverviewByMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorAlertsOverviewByMetric(GetSensorAlertsOverviewByMetricArgs.builder()
     *             .interval(1)
     *             .networkId("string")
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorAlertsOverviewByMetricExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorAlertsOverviewByMetricResult> getSensorAlertsOverviewByMetricPlain(GetSensorAlertsOverviewByMetricPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", TypeShape.of(GetSensorAlertsOverviewByMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorAlertsProfilesResult> getSensorAlertsProfiles() {
        return getSensorAlertsProfiles(GetSensorAlertsProfilesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorAlertsProfilesResult> getSensorAlertsProfilesPlain() {
        return getSensorAlertsProfilesPlain(GetSensorAlertsProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorAlertsProfilesResult> getSensorAlertsProfiles(GetSensorAlertsProfilesArgs args) {
        return getSensorAlertsProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorAlertsProfilesResult> getSensorAlertsProfilesPlain(GetSensorAlertsProfilesPlainArgs args) {
        return getSensorAlertsProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorAlertsProfilesResult> getSensorAlertsProfiles(GetSensorAlertsProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsProfiles:getSensorAlertsProfiles", TypeShape.of(GetSensorAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorAlertsProfilesResult> getSensorAlertsProfiles(GetSensorAlertsProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorAlertsProfiles:getSensorAlertsProfiles", TypeShape.of(GetSensorAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorAlertsProfilesResult> getSensorAlertsProfilesPlain(GetSensorAlertsProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSensorAlertsProfiles:getSensorAlertsProfiles", TypeShape.of(GetSensorAlertsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorMqttBrokersResult> getSensorMqttBrokers() {
        return getSensorMqttBrokers(GetSensorMqttBrokersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorMqttBrokersResult> getSensorMqttBrokersPlain() {
        return getSensorMqttBrokersPlain(GetSensorMqttBrokersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorMqttBrokersResult> getSensorMqttBrokers(GetSensorMqttBrokersArgs args) {
        return getSensorMqttBrokers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorMqttBrokersResult> getSensorMqttBrokersPlain(GetSensorMqttBrokersPlainArgs args) {
        return getSensorMqttBrokersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorMqttBrokersResult> getSensorMqttBrokers(GetSensorMqttBrokersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", TypeShape.of(GetSensorMqttBrokersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSensorMqttBrokersResult> getSensorMqttBrokers(GetSensorMqttBrokersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", TypeShape.of(GetSensorMqttBrokersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSensorMqttBrokersResult> getSensorMqttBrokersPlain(GetSensorMqttBrokersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", TypeShape.of(GetSensorMqttBrokersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorRelationships(GetSensorRelationshipsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorRelationshipsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorRelationshipsResult> getSensorRelationships(GetSensorRelationshipsArgs args) {
        return getSensorRelationships(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorRelationships(GetSensorRelationshipsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorRelationshipsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorRelationshipsResult> getSensorRelationshipsPlain(GetSensorRelationshipsPlainArgs args) {
        return getSensorRelationshipsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorRelationships(GetSensorRelationshipsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorRelationshipsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorRelationshipsResult> getSensorRelationships(GetSensorRelationshipsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorRelationships:getSensorRelationships", TypeShape.of(GetSensorRelationshipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorRelationships(GetSensorRelationshipsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorRelationshipsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSensorRelationshipsResult> getSensorRelationships(GetSensorRelationshipsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSensorRelationships:getSensorRelationships", TypeShape.of(GetSensorRelationshipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSensorRelationshipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSensorRelationships(GetSensorRelationshipsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSensorRelationshipsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSensorRelationshipsResult> getSensorRelationshipsPlain(GetSensorRelationshipsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSensorRelationships:getSensorRelationships", TypeShape.of(GetSensorRelationshipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSettings(GetSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSettingsResult> getSettings(GetSettingsArgs args) {
        return getSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSettings(GetSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSettingsResult> getSettingsPlain(GetSettingsPlainArgs args) {
        return getSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSettings(GetSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSettingsResult> getSettings(GetSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSettings:getSettings", TypeShape.of(GetSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSettings(GetSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSettingsResult> getSettings(GetSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSettings:getSettings", TypeShape.of(GetSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSettings(GetSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSettingsResult> getSettingsPlain(GetSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSettings:getSettings", TypeShape.of(GetSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs.builder()
     *             .attemptId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmBypassActivationLockAttemptsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmBypassActivationLockAttemptsResult> getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs args) {
        return getSmBypassActivationLockAttempts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs.builder()
     *             .attemptId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmBypassActivationLockAttemptsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmBypassActivationLockAttemptsResult> getSmBypassActivationLockAttemptsPlain(GetSmBypassActivationLockAttemptsPlainArgs args) {
        return getSmBypassActivationLockAttemptsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs.builder()
     *             .attemptId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmBypassActivationLockAttemptsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmBypassActivationLockAttemptsResult> getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmBypassActivationLockAttempts:getSmBypassActivationLockAttempts", TypeShape.of(GetSmBypassActivationLockAttemptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs.builder()
     *             .attemptId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmBypassActivationLockAttemptsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmBypassActivationLockAttemptsResult> getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmBypassActivationLockAttempts:getSmBypassActivationLockAttempts", TypeShape.of(GetSmBypassActivationLockAttemptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmBypassActivationLockAttemptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmBypassActivationLockAttempts(GetSmBypassActivationLockAttemptsArgs.builder()
     *             .attemptId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmBypassActivationLockAttemptsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmBypassActivationLockAttemptsResult> getSmBypassActivationLockAttemptsPlain(GetSmBypassActivationLockAttemptsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmBypassActivationLockAttempts:getSmBypassActivationLockAttempts", TypeShape.of(GetSmBypassActivationLockAttemptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevices(GetSmDevicesArgs.builder()
     *             .endingBefore("string")
     *             .fields("string")
     *             .ids("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .scopes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .systemTypes("string")
     *             .uuids("string")
     *             .wifiMacs("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesResult> getSmDevices(GetSmDevicesArgs args) {
        return getSmDevices(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevices(GetSmDevicesArgs.builder()
     *             .endingBefore("string")
     *             .fields("string")
     *             .ids("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .scopes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .systemTypes("string")
     *             .uuids("string")
     *             .wifiMacs("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesResult> getSmDevicesPlain(GetSmDevicesPlainArgs args) {
        return getSmDevicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevices(GetSmDevicesArgs.builder()
     *             .endingBefore("string")
     *             .fields("string")
     *             .ids("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .scopes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .systemTypes("string")
     *             .uuids("string")
     *             .wifiMacs("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesResult> getSmDevices(GetSmDevicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevices:getSmDevices", TypeShape.of(GetSmDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevices(GetSmDevicesArgs.builder()
     *             .endingBefore("string")
     *             .fields("string")
     *             .ids("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .scopes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .systemTypes("string")
     *             .uuids("string")
     *             .wifiMacs("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesResult> getSmDevices(GetSmDevicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevices:getSmDevices", TypeShape.of(GetSmDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevices(GetSmDevicesArgs.builder()
     *             .endingBefore("string")
     *             .fields("string")
     *             .ids("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .scopes("string")
     *             .serials("string")
     *             .startingAfter("string")
     *             .systemTypes("string")
     *             .uuids("string")
     *             .wifiMacs("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesResult> getSmDevicesPlain(GetSmDevicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevices:getSmDevices", TypeShape.of(GetSmDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCellularUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCellularUsageHistoryResult> getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs args) {
        return getSmDevicesCellularUsageHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCellularUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesCellularUsageHistoryResult> getSmDevicesCellularUsageHistoryPlain(GetSmDevicesCellularUsageHistoryPlainArgs args) {
        return getSmDevicesCellularUsageHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCellularUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCellularUsageHistoryResult> getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesCellularUsageHistory:getSmDevicesCellularUsageHistory", TypeShape.of(GetSmDevicesCellularUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCellularUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCellularUsageHistoryResult> getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesCellularUsageHistory:getSmDevicesCellularUsageHistory", TypeShape.of(GetSmDevicesCellularUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCellularUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCellularUsageHistory(GetSmDevicesCellularUsageHistoryArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCellularUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesCellularUsageHistoryResult> getSmDevicesCellularUsageHistoryPlain(GetSmDevicesCellularUsageHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesCellularUsageHistory:getSmDevicesCellularUsageHistory", TypeShape.of(GetSmDevicesCellularUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCerts(GetSmDevicesCertsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCertsResult> getSmDevicesCerts(GetSmDevicesCertsArgs args) {
        return getSmDevicesCerts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCerts(GetSmDevicesCertsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesCertsResult> getSmDevicesCertsPlain(GetSmDevicesCertsPlainArgs args) {
        return getSmDevicesCertsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCerts(GetSmDevicesCertsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCertsResult> getSmDevicesCerts(GetSmDevicesCertsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesCerts:getSmDevicesCerts", TypeShape.of(GetSmDevicesCertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCerts(GetSmDevicesCertsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesCertsResult> getSmDevicesCerts(GetSmDevicesCertsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesCerts:getSmDevicesCerts", TypeShape.of(GetSmDevicesCertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesCertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesCerts(GetSmDevicesCertsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesCertsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesCertsResult> getSmDevicesCertsPlain(GetSmDevicesCertsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesCerts:getSmDevicesCerts", TypeShape.of(GetSmDevicesCertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesConnectivity(GetSmDevicesConnectivityArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesConnectivityExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesConnectivityResult> getSmDevicesConnectivity(GetSmDevicesConnectivityArgs args) {
        return getSmDevicesConnectivity(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesConnectivity(GetSmDevicesConnectivityArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesConnectivityExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesConnectivityResult> getSmDevicesConnectivityPlain(GetSmDevicesConnectivityPlainArgs args) {
        return getSmDevicesConnectivityPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesConnectivity(GetSmDevicesConnectivityArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesConnectivityExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesConnectivityResult> getSmDevicesConnectivity(GetSmDevicesConnectivityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesConnectivity:getSmDevicesConnectivity", TypeShape.of(GetSmDevicesConnectivityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesConnectivity(GetSmDevicesConnectivityArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesConnectivityExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesConnectivityResult> getSmDevicesConnectivity(GetSmDevicesConnectivityArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesConnectivity:getSmDevicesConnectivity", TypeShape.of(GetSmDevicesConnectivityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesConnectivityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesConnectivity(GetSmDevicesConnectivityArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesConnectivityExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesConnectivityResult> getSmDevicesConnectivityPlain(GetSmDevicesConnectivityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesConnectivity:getSmDevicesConnectivity", TypeShape.of(GetSmDevicesConnectivityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDesktopLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDesktopLogsResult> getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs args) {
        return getSmDevicesDesktopLogs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDesktopLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDesktopLogsResult> getSmDevicesDesktopLogsPlain(GetSmDevicesDesktopLogsPlainArgs args) {
        return getSmDevicesDesktopLogsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDesktopLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDesktopLogsResult> getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDesktopLogs:getSmDevicesDesktopLogs", TypeShape.of(GetSmDevicesDesktopLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDesktopLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDesktopLogsResult> getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDesktopLogs:getSmDevicesDesktopLogs", TypeShape.of(GetSmDevicesDesktopLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDesktopLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDesktopLogs(GetSmDevicesDesktopLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDesktopLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDesktopLogsResult> getSmDevicesDesktopLogsPlain(GetSmDevicesDesktopLogsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesDesktopLogs:getSmDevicesDesktopLogs", TypeShape.of(GetSmDevicesDesktopLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceCommandLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceCommandLogsResult> getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs args) {
        return getSmDevicesDeviceCommandLogs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceCommandLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDeviceCommandLogsResult> getSmDevicesDeviceCommandLogsPlain(GetSmDevicesDeviceCommandLogsPlainArgs args) {
        return getSmDevicesDeviceCommandLogsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceCommandLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceCommandLogsResult> getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDeviceCommandLogs:getSmDevicesDeviceCommandLogs", TypeShape.of(GetSmDevicesDeviceCommandLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceCommandLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceCommandLogsResult> getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDeviceCommandLogs:getSmDevicesDeviceCommandLogs", TypeShape.of(GetSmDevicesDeviceCommandLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceCommandLogsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceCommandLogs(GetSmDevicesDeviceCommandLogsArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceCommandLogsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDeviceCommandLogsResult> getSmDevicesDeviceCommandLogsPlain(GetSmDevicesDeviceCommandLogsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesDeviceCommandLogs:getSmDevicesDeviceCommandLogs", TypeShape.of(GetSmDevicesDeviceCommandLogsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceProfilesResult> getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs args) {
        return getSmDevicesDeviceProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDeviceProfilesResult> getSmDevicesDeviceProfilesPlain(GetSmDevicesDeviceProfilesPlainArgs args) {
        return getSmDevicesDeviceProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceProfilesResult> getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDeviceProfiles:getSmDevicesDeviceProfiles", TypeShape.of(GetSmDevicesDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesDeviceProfilesResult> getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesDeviceProfiles:getSmDevicesDeviceProfiles", TypeShape.of(GetSmDevicesDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesDeviceProfiles(GetSmDevicesDeviceProfilesArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesDeviceProfilesResult> getSmDevicesDeviceProfilesPlain(GetSmDevicesDeviceProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesDeviceProfiles:getSmDevicesDeviceProfiles", TypeShape.of(GetSmDevicesDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesNetworkAdaptersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesNetworkAdaptersResult> getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs args) {
        return getSmDevicesNetworkAdapters(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesNetworkAdaptersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesNetworkAdaptersResult> getSmDevicesNetworkAdaptersPlain(GetSmDevicesNetworkAdaptersPlainArgs args) {
        return getSmDevicesNetworkAdaptersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesNetworkAdaptersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesNetworkAdaptersResult> getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesNetworkAdapters:getSmDevicesNetworkAdapters", TypeShape.of(GetSmDevicesNetworkAdaptersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesNetworkAdaptersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesNetworkAdaptersResult> getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesNetworkAdapters:getSmDevicesNetworkAdapters", TypeShape.of(GetSmDevicesNetworkAdaptersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesNetworkAdaptersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesNetworkAdapters(GetSmDevicesNetworkAdaptersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesNetworkAdaptersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesNetworkAdaptersResult> getSmDevicesNetworkAdaptersPlain(GetSmDevicesNetworkAdaptersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesNetworkAdapters:getSmDevicesNetworkAdapters", TypeShape.of(GetSmDevicesNetworkAdaptersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesPerformanceHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesPerformanceHistoryResult> getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs args) {
        return getSmDevicesPerformanceHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesPerformanceHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesPerformanceHistoryResult> getSmDevicesPerformanceHistoryPlain(GetSmDevicesPerformanceHistoryPlainArgs args) {
        return getSmDevicesPerformanceHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesPerformanceHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesPerformanceHistoryResult> getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesPerformanceHistory:getSmDevicesPerformanceHistory", TypeShape.of(GetSmDevicesPerformanceHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesPerformanceHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesPerformanceHistoryResult> getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesPerformanceHistory:getSmDevicesPerformanceHistory", TypeShape.of(GetSmDevicesPerformanceHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesPerformanceHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesPerformanceHistory(GetSmDevicesPerformanceHistoryArgs.builder()
     *             .deviceId("string")
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesPerformanceHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesPerformanceHistoryResult> getSmDevicesPerformanceHistoryPlain(GetSmDevicesPerformanceHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesPerformanceHistory:getSmDevicesPerformanceHistory", TypeShape.of(GetSmDevicesPerformanceHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCenters() {
        return getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCentersPlain() {
        return getSmDevicesSecurityCentersPlain(GetSmDevicesSecurityCentersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs args) {
        return getSmDevicesSecurityCenters(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCentersPlain(GetSmDevicesSecurityCentersPlainArgs args) {
        return getSmDevicesSecurityCentersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesSecurityCenters:getSmDevicesSecurityCenters", TypeShape.of(GetSmDevicesSecurityCentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesSecurityCenters:getSmDevicesSecurityCenters", TypeShape.of(GetSmDevicesSecurityCentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesSecurityCentersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesSecurityCenters(GetSmDevicesSecurityCentersArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesSecurityCentersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesSecurityCentersResult> getSmDevicesSecurityCentersPlain(GetSmDevicesSecurityCentersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesSecurityCenters:getSmDevicesSecurityCenters", TypeShape.of(GetSmDevicesSecurityCentersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesWlanLists(GetSmDevicesWlanListsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesWlanListsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesWlanListsResult> getSmDevicesWlanLists(GetSmDevicesWlanListsArgs args) {
        return getSmDevicesWlanLists(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesWlanLists(GetSmDevicesWlanListsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesWlanListsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesWlanListsResult> getSmDevicesWlanListsPlain(GetSmDevicesWlanListsPlainArgs args) {
        return getSmDevicesWlanListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesWlanLists(GetSmDevicesWlanListsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesWlanListsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesWlanListsResult> getSmDevicesWlanLists(GetSmDevicesWlanListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesWlanLists:getSmDevicesWlanLists", TypeShape.of(GetSmDevicesWlanListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesWlanLists(GetSmDevicesWlanListsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesWlanListsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmDevicesWlanListsResult> getSmDevicesWlanLists(GetSmDevicesWlanListsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmDevicesWlanLists:getSmDevicesWlanLists", TypeShape.of(GetSmDevicesWlanListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmDevicesWlanListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmDevicesWlanLists(GetSmDevicesWlanListsArgs.builder()
     *             .deviceId("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmDevicesWlanListsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmDevicesWlanListsResult> getSmDevicesWlanListsPlain(GetSmDevicesWlanListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmDevicesWlanLists:getSmDevicesWlanLists", TypeShape.of(GetSmDevicesWlanListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmProfiles(GetSmProfilesArgs.builder()
     *             .networkId("string")
     *             .payloadTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmProfilesResult> getSmProfiles(GetSmProfilesArgs args) {
        return getSmProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmProfiles(GetSmProfilesArgs.builder()
     *             .networkId("string")
     *             .payloadTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmProfilesResult> getSmProfilesPlain(GetSmProfilesPlainArgs args) {
        return getSmProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmProfiles(GetSmProfilesArgs.builder()
     *             .networkId("string")
     *             .payloadTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmProfilesResult> getSmProfiles(GetSmProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmProfiles:getSmProfiles", TypeShape.of(GetSmProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmProfiles(GetSmProfilesArgs.builder()
     *             .networkId("string")
     *             .payloadTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmProfilesResult> getSmProfiles(GetSmProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmProfiles:getSmProfiles", TypeShape.of(GetSmProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmProfiles(GetSmProfilesArgs.builder()
     *             .networkId("string")
     *             .payloadTypes("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmProfilesResult> getSmProfilesPlain(GetSmProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmProfiles:getSmProfiles", TypeShape.of(GetSmProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmTargetGroupsResult> getSmTargetGroups() {
        return getSmTargetGroups(GetSmTargetGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmTargetGroupsResult> getSmTargetGroupsPlain() {
        return getSmTargetGroupsPlain(GetSmTargetGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmTargetGroupsResult> getSmTargetGroups(GetSmTargetGroupsArgs args) {
        return getSmTargetGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmTargetGroupsResult> getSmTargetGroupsPlain(GetSmTargetGroupsPlainArgs args) {
        return getSmTargetGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmTargetGroupsResult> getSmTargetGroups(GetSmTargetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmTargetGroups:getSmTargetGroups", TypeShape.of(GetSmTargetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSmTargetGroupsResult> getSmTargetGroups(GetSmTargetGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmTargetGroups:getSmTargetGroups", TypeShape.of(GetSmTargetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSmTargetGroupsResult> getSmTargetGroupsPlain(GetSmTargetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmTargetGroups:getSmTargetGroups", TypeShape.of(GetSmTargetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmTrustedAccessConfigsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmTrustedAccessConfigsResult> getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs args) {
        return getSmTrustedAccessConfigs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmTrustedAccessConfigsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmTrustedAccessConfigsResult> getSmTrustedAccessConfigsPlain(GetSmTrustedAccessConfigsPlainArgs args) {
        return getSmTrustedAccessConfigsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmTrustedAccessConfigsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmTrustedAccessConfigsResult> getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmTrustedAccessConfigs:getSmTrustedAccessConfigs", TypeShape.of(GetSmTrustedAccessConfigsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmTrustedAccessConfigsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmTrustedAccessConfigsResult> getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmTrustedAccessConfigs:getSmTrustedAccessConfigs", TypeShape.of(GetSmTrustedAccessConfigsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmTrustedAccessConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmTrustedAccessConfigs(GetSmTrustedAccessConfigsArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmTrustedAccessConfigsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmTrustedAccessConfigsResult> getSmTrustedAccessConfigsPlain(GetSmTrustedAccessConfigsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmTrustedAccessConfigs:getSmTrustedAccessConfigs", TypeShape.of(GetSmTrustedAccessConfigsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUserAccessDevices(GetSmUserAccessDevicesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUserAccessDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUserAccessDevicesResult> getSmUserAccessDevices(GetSmUserAccessDevicesArgs args) {
        return getSmUserAccessDevices(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUserAccessDevices(GetSmUserAccessDevicesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUserAccessDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUserAccessDevicesResult> getSmUserAccessDevicesPlain(GetSmUserAccessDevicesPlainArgs args) {
        return getSmUserAccessDevicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUserAccessDevices(GetSmUserAccessDevicesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUserAccessDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUserAccessDevicesResult> getSmUserAccessDevices(GetSmUserAccessDevicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUserAccessDevices:getSmUserAccessDevices", TypeShape.of(GetSmUserAccessDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUserAccessDevices(GetSmUserAccessDevicesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUserAccessDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUserAccessDevicesResult> getSmUserAccessDevices(GetSmUserAccessDevicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUserAccessDevices:getSmUserAccessDevices", TypeShape.of(GetSmUserAccessDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUserAccessDevicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUserAccessDevices(GetSmUserAccessDevicesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUserAccessDevicesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUserAccessDevicesResult> getSmUserAccessDevicesPlain(GetSmUserAccessDevicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmUserAccessDevices:getSmUserAccessDevices", TypeShape.of(GetSmUserAccessDevicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsers(GetSmUsersArgs.builder()
     *             .emails("string")
     *             .ids("string")
     *             .networkId("string")
     *             .scopes("string")
     *             .usernames("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersResult> getSmUsers(GetSmUsersArgs args) {
        return getSmUsers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsers(GetSmUsersArgs.builder()
     *             .emails("string")
     *             .ids("string")
     *             .networkId("string")
     *             .scopes("string")
     *             .usernames("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersResult> getSmUsersPlain(GetSmUsersPlainArgs args) {
        return getSmUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsers(GetSmUsersArgs.builder()
     *             .emails("string")
     *             .ids("string")
     *             .networkId("string")
     *             .scopes("string")
     *             .usernames("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersResult> getSmUsers(GetSmUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsers:getSmUsers", TypeShape.of(GetSmUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsers(GetSmUsersArgs.builder()
     *             .emails("string")
     *             .ids("string")
     *             .networkId("string")
     *             .scopes("string")
     *             .usernames("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersResult> getSmUsers(GetSmUsersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsers:getSmUsers", TypeShape.of(GetSmUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsers(GetSmUsersArgs.builder()
     *             .emails("string")
     *             .ids("string")
     *             .networkId("string")
     *             .scopes("string")
     *             .usernames("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersResult> getSmUsersPlain(GetSmUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmUsers:getSmUsers", TypeShape.of(GetSmUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersDeviceProfilesResult> getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs args) {
        return getSmUsersDeviceProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersDeviceProfilesResult> getSmUsersDeviceProfilesPlain(GetSmUsersDeviceProfilesPlainArgs args) {
        return getSmUsersDeviceProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersDeviceProfilesResult> getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsersDeviceProfiles:getSmUsersDeviceProfiles", TypeShape.of(GetSmUsersDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersDeviceProfilesResult> getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsersDeviceProfiles:getSmUsersDeviceProfiles", TypeShape.of(GetSmUsersDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersDeviceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersDeviceProfiles(GetSmUsersDeviceProfilesArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersDeviceProfilesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersDeviceProfilesResult> getSmUsersDeviceProfilesPlain(GetSmUsersDeviceProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmUsersDeviceProfiles:getSmUsersDeviceProfiles", TypeShape.of(GetSmUsersDeviceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersSoftwares(GetSmUsersSoftwaresArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersSoftwaresExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersSoftwaresResult> getSmUsersSoftwares(GetSmUsersSoftwaresArgs args) {
        return getSmUsersSoftwares(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersSoftwares(GetSmUsersSoftwaresArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersSoftwaresExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersSoftwaresResult> getSmUsersSoftwaresPlain(GetSmUsersSoftwaresPlainArgs args) {
        return getSmUsersSoftwaresPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersSoftwares(GetSmUsersSoftwaresArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersSoftwaresExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersSoftwaresResult> getSmUsersSoftwares(GetSmUsersSoftwaresArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsersSoftwares:getSmUsersSoftwares", TypeShape.of(GetSmUsersSoftwaresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersSoftwares(GetSmUsersSoftwaresArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersSoftwaresExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSmUsersSoftwaresResult> getSmUsersSoftwares(GetSmUsersSoftwaresArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSmUsersSoftwares:getSmUsersSoftwares", TypeShape.of(GetSmUsersSoftwaresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSmUsersSoftwaresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSmUsersSoftwares(GetSmUsersSoftwaresArgs.builder()
     *             .networkId("string")
     *             .userId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSmUsersSoftwaresExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSmUsersSoftwaresResult> getSmUsersSoftwaresPlain(GetSmUsersSoftwaresPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSmUsersSoftwares:getSmUsersSoftwares", TypeShape.of(GetSmUsersSoftwaresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSnmp(GetSnmpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args) {
        return getSnmp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSnmp(GetSnmpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSnmpResult> getSnmpPlain(GetSnmpPlainArgs args) {
        return getSnmpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSnmp(GetSnmpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSnmp(GetSnmpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSnmpResult> getSnmp(GetSnmpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSnmpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSnmp(GetSnmpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSnmpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSnmpResult> getSnmpPlain(GetSnmpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSnmp:getSnmp", TypeShape.of(GetSnmpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAccessControlLists(GetSwitchAccessControlListsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAccessControlListsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAccessControlListsResult> getSwitchAccessControlLists(GetSwitchAccessControlListsArgs args) {
        return getSwitchAccessControlLists(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAccessControlLists(GetSwitchAccessControlListsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAccessControlListsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchAccessControlListsResult> getSwitchAccessControlListsPlain(GetSwitchAccessControlListsPlainArgs args) {
        return getSwitchAccessControlListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAccessControlLists(GetSwitchAccessControlListsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAccessControlListsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAccessControlListsResult> getSwitchAccessControlLists(GetSwitchAccessControlListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAccessControlLists:getSwitchAccessControlLists", TypeShape.of(GetSwitchAccessControlListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAccessControlLists(GetSwitchAccessControlListsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAccessControlListsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAccessControlListsResult> getSwitchAccessControlLists(GetSwitchAccessControlListsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAccessControlLists:getSwitchAccessControlLists", TypeShape.of(GetSwitchAccessControlListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAccessControlListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAccessControlLists(GetSwitchAccessControlListsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAccessControlListsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchAccessControlListsResult> getSwitchAccessControlListsPlain(GetSwitchAccessControlListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchAccessControlLists:getSwitchAccessControlLists", TypeShape.of(GetSwitchAccessControlListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchAccessPoliciesResult> getSwitchAccessPolicies() {
        return getSwitchAccessPolicies(GetSwitchAccessPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchAccessPoliciesResult> getSwitchAccessPoliciesPlain() {
        return getSwitchAccessPoliciesPlain(GetSwitchAccessPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchAccessPoliciesResult> getSwitchAccessPolicies(GetSwitchAccessPoliciesArgs args) {
        return getSwitchAccessPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchAccessPoliciesResult> getSwitchAccessPoliciesPlain(GetSwitchAccessPoliciesPlainArgs args) {
        return getSwitchAccessPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchAccessPoliciesResult> getSwitchAccessPolicies(GetSwitchAccessPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAccessPolicies:getSwitchAccessPolicies", TypeShape.of(GetSwitchAccessPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchAccessPoliciesResult> getSwitchAccessPolicies(GetSwitchAccessPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAccessPolicies:getSwitchAccessPolicies", TypeShape.of(GetSwitchAccessPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchAccessPoliciesResult> getSwitchAccessPoliciesPlain(GetSwitchAccessPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchAccessPolicies:getSwitchAccessPolicies", TypeShape.of(GetSwitchAccessPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAlternateManagementInterfaceResult> getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs args) {
        return getSwitchAlternateManagementInterface(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchAlternateManagementInterfaceResult> getSwitchAlternateManagementInterfacePlain(GetSwitchAlternateManagementInterfacePlainArgs args) {
        return getSwitchAlternateManagementInterfacePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAlternateManagementInterfaceResult> getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAlternateManagementInterface:getSwitchAlternateManagementInterface", TypeShape.of(GetSwitchAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchAlternateManagementInterfaceResult> getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchAlternateManagementInterface:getSwitchAlternateManagementInterface", TypeShape.of(GetSwitchAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchAlternateManagementInterface(GetSwitchAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchAlternateManagementInterfaceResult> getSwitchAlternateManagementInterfacePlain(GetSwitchAlternateManagementInterfacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchAlternateManagementInterface:getSwitchAlternateManagementInterface", TypeShape.of(GetSwitchAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyResult> getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs args) {
        return getSwitchDhcpServerPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyResult> getSwitchDhcpServerPolicyPlain(GetSwitchDhcpServerPolicyPlainArgs args) {
        return getSwitchDhcpServerPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyResult> getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicy:getSwitchDhcpServerPolicy", TypeShape.of(GetSwitchDhcpServerPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyResult> getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicy:getSwitchDhcpServerPolicy", TypeShape.of(GetSwitchDhcpServerPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicy(GetSwitchDhcpServerPolicyArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyResult> getSwitchDhcpServerPolicyPlain(GetSwitchDhcpServerPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchDhcpServerPolicy:getSwitchDhcpServerPolicy", TypeShape.of(GetSwitchDhcpServerPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult> getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs args) {
        return getSwitchDhcpServerPolicyArpInspectionTrustedServers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult> getSwitchDhcpServerPolicyArpInspectionTrustedServersPlain(GetSwitchDhcpServerPolicyArpInspectionTrustedServersPlainArgs args) {
        return getSwitchDhcpServerPolicyArpInspectionTrustedServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult> getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicyArpInspectionTrustedServers:getSwitchDhcpServerPolicyArpInspectionTrustedServers", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult> getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicyArpInspectionTrustedServers:getSwitchDhcpServerPolicyArpInspectionTrustedServers", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionTrustedServers(GetSwitchDhcpServerPolicyArpInspectionTrustedServersArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionTrustedServersExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult> getSwitchDhcpServerPolicyArpInspectionTrustedServersPlain(GetSwitchDhcpServerPolicyArpInspectionTrustedServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchDhcpServerPolicyArpInspectionTrustedServers:getSwitchDhcpServerPolicyArpInspectionTrustedServers", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionTrustedServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionWarningsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult> getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs args) {
        return getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionWarningsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult> getSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlain(GetSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlainArgs args) {
        return getSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionWarningsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult> getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicyArpInspectionWarningsByDevice:getSwitchDhcpServerPolicyArpInspectionWarningsByDevice", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionWarningsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult> getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpServerPolicyArpInspectionWarningsByDevice:getSwitchDhcpServerPolicyArpInspectionWarningsByDevice", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpServerPolicyArpInspectionWarningsByDevice(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpServerPolicyArpInspectionWarningsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult> getSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlain(GetSwitchDhcpServerPolicyArpInspectionWarningsByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchDhcpServerPolicyArpInspectionWarningsByDevice:getSwitchDhcpServerPolicyArpInspectionWarningsByDevice", TypeShape.of(GetSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpV4ServersSeenExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpV4ServersSeenResult> getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs args) {
        return getSwitchDhcpV4ServersSeen(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpV4ServersSeenExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpV4ServersSeenResult> getSwitchDhcpV4ServersSeenPlain(GetSwitchDhcpV4ServersSeenPlainArgs args) {
        return getSwitchDhcpV4ServersSeenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpV4ServersSeenExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpV4ServersSeenResult> getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpV4ServersSeen:getSwitchDhcpV4ServersSeen", TypeShape.of(GetSwitchDhcpV4ServersSeenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpV4ServersSeenExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDhcpV4ServersSeenResult> getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDhcpV4ServersSeen:getSwitchDhcpV4ServersSeen", TypeShape.of(GetSwitchDhcpV4ServersSeenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDhcpV4ServersSeenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDhcpV4ServersSeen(GetSwitchDhcpV4ServersSeenArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .t0("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDhcpV4ServersSeenExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDhcpV4ServersSeenResult> getSwitchDhcpV4ServersSeenPlain(GetSwitchDhcpV4ServersSeenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchDhcpV4ServersSeen:getSwitchDhcpV4ServersSeen", TypeShape.of(GetSwitchDhcpV4ServersSeenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDscpToCosMappingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDscpToCosMappingsResult> getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs args) {
        return getSwitchDscpToCosMappings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDscpToCosMappingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDscpToCosMappingsResult> getSwitchDscpToCosMappingsPlain(GetSwitchDscpToCosMappingsPlainArgs args) {
        return getSwitchDscpToCosMappingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDscpToCosMappingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDscpToCosMappingsResult> getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDscpToCosMappings:getSwitchDscpToCosMappings", TypeShape.of(GetSwitchDscpToCosMappingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDscpToCosMappingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchDscpToCosMappingsResult> getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchDscpToCosMappings:getSwitchDscpToCosMappings", TypeShape.of(GetSwitchDscpToCosMappingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchDscpToCosMappingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchDscpToCosMappings(GetSwitchDscpToCosMappingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchDscpToCosMappingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchDscpToCosMappingsResult> getSwitchDscpToCosMappingsPlain(GetSwitchDscpToCosMappingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchDscpToCosMappings:getSwitchDscpToCosMappings", TypeShape.of(GetSwitchDscpToCosMappingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchLinkAggregationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchLinkAggregationsResult> getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs args) {
        return getSwitchLinkAggregations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchLinkAggregationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchLinkAggregationsResult> getSwitchLinkAggregationsPlain(GetSwitchLinkAggregationsPlainArgs args) {
        return getSwitchLinkAggregationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchLinkAggregationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchLinkAggregationsResult> getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchLinkAggregations:getSwitchLinkAggregations", TypeShape.of(GetSwitchLinkAggregationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchLinkAggregationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchLinkAggregationsResult> getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchLinkAggregations:getSwitchLinkAggregations", TypeShape.of(GetSwitchLinkAggregationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchLinkAggregationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchLinkAggregations(GetSwitchLinkAggregationsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchLinkAggregationsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchLinkAggregationsResult> getSwitchLinkAggregationsPlain(GetSwitchLinkAggregationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchLinkAggregations:getSwitchLinkAggregations", TypeShape.of(GetSwitchLinkAggregationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchMtu(GetSwitchMtuArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchMtuExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchMtuResult> getSwitchMtu(GetSwitchMtuArgs args) {
        return getSwitchMtu(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchMtu(GetSwitchMtuArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchMtuExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchMtuResult> getSwitchMtuPlain(GetSwitchMtuPlainArgs args) {
        return getSwitchMtuPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchMtu(GetSwitchMtuArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchMtuExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchMtuResult> getSwitchMtu(GetSwitchMtuArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchMtu:getSwitchMtu", TypeShape.of(GetSwitchMtuResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchMtu(GetSwitchMtuArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchMtuExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchMtuResult> getSwitchMtu(GetSwitchMtuArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchMtu:getSwitchMtu", TypeShape.of(GetSwitchMtuResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchMtuArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchMtu(GetSwitchMtuArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchMtuExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchMtuResult> getSwitchMtuPlain(GetSwitchMtuPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchMtu:getSwitchMtu", TypeShape.of(GetSwitchMtuResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchPortSchedules(GetSwitchPortSchedulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchPortSchedulesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchPortSchedulesResult> getSwitchPortSchedules(GetSwitchPortSchedulesArgs args) {
        return getSwitchPortSchedules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchPortSchedules(GetSwitchPortSchedulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchPortSchedulesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchPortSchedulesResult> getSwitchPortSchedulesPlain(GetSwitchPortSchedulesPlainArgs args) {
        return getSwitchPortSchedulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchPortSchedules(GetSwitchPortSchedulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchPortSchedulesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchPortSchedulesResult> getSwitchPortSchedules(GetSwitchPortSchedulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchPortSchedules:getSwitchPortSchedules", TypeShape.of(GetSwitchPortSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchPortSchedules(GetSwitchPortSchedulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchPortSchedulesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchPortSchedulesResult> getSwitchPortSchedules(GetSwitchPortSchedulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchPortSchedules:getSwitchPortSchedules", TypeShape.of(GetSwitchPortSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchPortSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchPortSchedules(GetSwitchPortSchedulesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchPortSchedulesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchPortSchedulesResult> getSwitchPortSchedulesPlain(GetSwitchPortSchedulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchPortSchedules:getSwitchPortSchedules", TypeShape.of(GetSwitchPortSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrder() {
        return getSwitchQosRulesOrder(GetSwitchQosRulesOrderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrderPlain() {
        return getSwitchQosRulesOrderPlain(GetSwitchQosRulesOrderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrder(GetSwitchQosRulesOrderArgs args) {
        return getSwitchQosRulesOrder(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrderPlain(GetSwitchQosRulesOrderPlainArgs args) {
        return getSwitchQosRulesOrderPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrder(GetSwitchQosRulesOrderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchQosRulesOrder:getSwitchQosRulesOrder", TypeShape.of(GetSwitchQosRulesOrderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrder(GetSwitchQosRulesOrderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchQosRulesOrder:getSwitchQosRulesOrder", TypeShape.of(GetSwitchQosRulesOrderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchQosRulesOrderResult> getSwitchQosRulesOrderPlain(GetSwitchQosRulesOrderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchQosRulesOrder:getSwitchQosRulesOrder", TypeShape.of(GetSwitchQosRulesOrderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingMulticastExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingMulticastResult> getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs args) {
        return getSwitchRoutingMulticast(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingMulticastExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchRoutingMulticastResult> getSwitchRoutingMulticastPlain(GetSwitchRoutingMulticastPlainArgs args) {
        return getSwitchRoutingMulticastPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingMulticastExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingMulticastResult> getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingMulticast:getSwitchRoutingMulticast", TypeShape.of(GetSwitchRoutingMulticastResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingMulticastExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingMulticastResult> getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingMulticast:getSwitchRoutingMulticast", TypeShape.of(GetSwitchRoutingMulticastResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingMulticastArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingMulticast(GetSwitchRoutingMulticastArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingMulticastExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchRoutingMulticastResult> getSwitchRoutingMulticastPlain(GetSwitchRoutingMulticastPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchRoutingMulticast:getSwitchRoutingMulticast", TypeShape.of(GetSwitchRoutingMulticastResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPoints() {
        return getSwitchRoutingMulticastRendezvousPoints(GetSwitchRoutingMulticastRendezvousPointsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPointsPlain() {
        return getSwitchRoutingMulticastRendezvousPointsPlain(GetSwitchRoutingMulticastRendezvousPointsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPoints(GetSwitchRoutingMulticastRendezvousPointsArgs args) {
        return getSwitchRoutingMulticastRendezvousPoints(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPointsPlain(GetSwitchRoutingMulticastRendezvousPointsPlainArgs args) {
        return getSwitchRoutingMulticastRendezvousPointsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPoints(GetSwitchRoutingMulticastRendezvousPointsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingMulticastRendezvousPoints:getSwitchRoutingMulticastRendezvousPoints", TypeShape.of(GetSwitchRoutingMulticastRendezvousPointsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPoints(GetSwitchRoutingMulticastRendezvousPointsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingMulticastRendezvousPoints:getSwitchRoutingMulticastRendezvousPoints", TypeShape.of(GetSwitchRoutingMulticastRendezvousPointsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchRoutingMulticastRendezvousPointsResult> getSwitchRoutingMulticastRendezvousPointsPlain(GetSwitchRoutingMulticastRendezvousPointsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchRoutingMulticastRendezvousPoints:getSwitchRoutingMulticastRendezvousPoints", TypeShape.of(GetSwitchRoutingMulticastRendezvousPointsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingOspf(GetSwitchRoutingOspfArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingOspfExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingOspfResult> getSwitchRoutingOspf(GetSwitchRoutingOspfArgs args) {
        return getSwitchRoutingOspf(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingOspf(GetSwitchRoutingOspfArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingOspfExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchRoutingOspfResult> getSwitchRoutingOspfPlain(GetSwitchRoutingOspfPlainArgs args) {
        return getSwitchRoutingOspfPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingOspf(GetSwitchRoutingOspfArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingOspfExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingOspfResult> getSwitchRoutingOspf(GetSwitchRoutingOspfArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingOspf:getSwitchRoutingOspf", TypeShape.of(GetSwitchRoutingOspfResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingOspf(GetSwitchRoutingOspfArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingOspfExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchRoutingOspfResult> getSwitchRoutingOspf(GetSwitchRoutingOspfArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchRoutingOspf:getSwitchRoutingOspf", TypeShape.of(GetSwitchRoutingOspfResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchRoutingOspfArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchRoutingOspf(GetSwitchRoutingOspfArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchRoutingOspfExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchRoutingOspfResult> getSwitchRoutingOspfPlain(GetSwitchRoutingOspfPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchRoutingOspf:getSwitchRoutingOspf", TypeShape.of(GetSwitchRoutingOspfResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchSettings(GetSwitchSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchSettingsResult> getSwitchSettings(GetSwitchSettingsArgs args) {
        return getSwitchSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchSettings(GetSwitchSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchSettingsResult> getSwitchSettingsPlain(GetSwitchSettingsPlainArgs args) {
        return getSwitchSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchSettings(GetSwitchSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchSettingsResult> getSwitchSettings(GetSwitchSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchSettings:getSwitchSettings", TypeShape.of(GetSwitchSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchSettings(GetSwitchSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchSettingsResult> getSwitchSettings(GetSwitchSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchSettings:getSwitchSettings", TypeShape.of(GetSwitchSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchSettings(GetSwitchSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchSettingsResult> getSwitchSettingsPlain(GetSwitchSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchSettings:getSwitchSettings", TypeShape.of(GetSwitchSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksResult> getSwitchStacks() {
        return getSwitchStacks(GetSwitchStacksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksResult> getSwitchStacksPlain() {
        return getSwitchStacksPlain(GetSwitchStacksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksResult> getSwitchStacks(GetSwitchStacksArgs args) {
        return getSwitchStacks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksResult> getSwitchStacksPlain(GetSwitchStacksPlainArgs args) {
        return getSwitchStacksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksResult> getSwitchStacks(GetSwitchStacksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacks:getSwitchStacks", TypeShape.of(GetSwitchStacksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksResult> getSwitchStacks(GetSwitchStacksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacks:getSwitchStacks", TypeShape.of(GetSwitchStacksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksResult> getSwitchStacksPlain(GetSwitchStacksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStacks:getSwitchStacks", TypeShape.of(GetSwitchStacksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfaces() {
        return getSwitchStacksRoutingInterfaces(GetSwitchStacksRoutingInterfacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfacesPlain() {
        return getSwitchStacksRoutingInterfacesPlain(GetSwitchStacksRoutingInterfacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfaces(GetSwitchStacksRoutingInterfacesArgs args) {
        return getSwitchStacksRoutingInterfaces(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfacesPlain(GetSwitchStacksRoutingInterfacesPlainArgs args) {
        return getSwitchStacksRoutingInterfacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfaces(GetSwitchStacksRoutingInterfacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", TypeShape.of(GetSwitchStacksRoutingInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfaces(GetSwitchStacksRoutingInterfacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", TypeShape.of(GetSwitchStacksRoutingInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingInterfacesResult> getSwitchStacksRoutingInterfacesPlain(GetSwitchStacksRoutingInterfacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces", TypeShape.of(GetSwitchStacksRoutingInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs.builder()
     *             .interfaceId("string")
     *             .networkId("string")
     *             .switchStackId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesDhcpResult> getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs args) {
        return getSwitchStacksRoutingInterfacesDhcp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs.builder()
     *             .interfaceId("string")
     *             .networkId("string")
     *             .switchStackId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingInterfacesDhcpResult> getSwitchStacksRoutingInterfacesDhcpPlain(GetSwitchStacksRoutingInterfacesDhcpPlainArgs args) {
        return getSwitchStacksRoutingInterfacesDhcpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs.builder()
     *             .interfaceId("string")
     *             .networkId("string")
     *             .switchStackId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesDhcpResult> getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingInterfacesDhcp:getSwitchStacksRoutingInterfacesDhcp", TypeShape.of(GetSwitchStacksRoutingInterfacesDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs.builder()
     *             .interfaceId("string")
     *             .networkId("string")
     *             .switchStackId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStacksRoutingInterfacesDhcpResult> getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingInterfacesDhcp:getSwitchStacksRoutingInterfacesDhcp", TypeShape.of(GetSwitchStacksRoutingInterfacesDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStacksRoutingInterfacesDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStacksRoutingInterfacesDhcp(GetSwitchStacksRoutingInterfacesDhcpArgs.builder()
     *             .interfaceId("string")
     *             .networkId("string")
     *             .switchStackId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingInterfacesDhcpResult> getSwitchStacksRoutingInterfacesDhcpPlain(GetSwitchStacksRoutingInterfacesDhcpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStacksRoutingInterfacesDhcp:getSwitchStacksRoutingInterfacesDhcp", TypeShape.of(GetSwitchStacksRoutingInterfacesDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutes() {
        return getSwitchStacksRoutingStaticRoutes(GetSwitchStacksRoutingStaticRoutesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutesPlain() {
        return getSwitchStacksRoutingStaticRoutesPlain(GetSwitchStacksRoutingStaticRoutesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutes(GetSwitchStacksRoutingStaticRoutesArgs args) {
        return getSwitchStacksRoutingStaticRoutes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutesPlain(GetSwitchStacksRoutingStaticRoutesPlainArgs args) {
        return getSwitchStacksRoutingStaticRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutes(GetSwitchStacksRoutingStaticRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", TypeShape.of(GetSwitchStacksRoutingStaticRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutes(GetSwitchStacksRoutingStaticRoutesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", TypeShape.of(GetSwitchStacksRoutingStaticRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSwitchStacksRoutingStaticRoutesResult> getSwitchStacksRoutingStaticRoutesPlain(GetSwitchStacksRoutingStaticRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", TypeShape.of(GetSwitchStacksRoutingStaticRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStormControl(GetSwitchStormControlArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStormControlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStormControlResult> getSwitchStormControl(GetSwitchStormControlArgs args) {
        return getSwitchStormControl(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStormControl(GetSwitchStormControlArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStormControlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStormControlResult> getSwitchStormControlPlain(GetSwitchStormControlPlainArgs args) {
        return getSwitchStormControlPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStormControl(GetSwitchStormControlArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStormControlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStormControlResult> getSwitchStormControl(GetSwitchStormControlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStormControl:getSwitchStormControl", TypeShape.of(GetSwitchStormControlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStormControl(GetSwitchStormControlArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStormControlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStormControlResult> getSwitchStormControl(GetSwitchStormControlArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStormControl:getSwitchStormControl", TypeShape.of(GetSwitchStormControlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStormControlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStormControl(GetSwitchStormControlArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStormControlExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStormControlResult> getSwitchStormControlPlain(GetSwitchStormControlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStormControl:getSwitchStormControl", TypeShape.of(GetSwitchStormControlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStp(GetSwitchStpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStpResult> getSwitchStp(GetSwitchStpArgs args) {
        return getSwitchStp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStp(GetSwitchStpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStpResult> getSwitchStpPlain(GetSwitchStpPlainArgs args) {
        return getSwitchStpPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStp(GetSwitchStpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStpResult> getSwitchStp(GetSwitchStpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStp:getSwitchStp", TypeShape.of(GetSwitchStpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStp(GetSwitchStpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSwitchStpResult> getSwitchStp(GetSwitchStpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSwitchStp:getSwitchStp", TypeShape.of(GetSwitchStpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSwitchStpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSwitchStp(GetSwitchStpArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSwitchStpExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSwitchStpResult> getSwitchStpPlain(GetSwitchStpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSwitchStp:getSwitchStp", TypeShape.of(GetSwitchStpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSyslogServers(GetSyslogServersArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSyslogServersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSyslogServersResult> getSyslogServers(GetSyslogServersArgs args) {
        return getSyslogServers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSyslogServers(GetSyslogServersArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSyslogServersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSyslogServersResult> getSyslogServersPlain(GetSyslogServersPlainArgs args) {
        return getSyslogServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSyslogServers(GetSyslogServersArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSyslogServersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSyslogServersResult> getSyslogServers(GetSyslogServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSyslogServers:getSyslogServers", TypeShape.of(GetSyslogServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSyslogServers(GetSyslogServersArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSyslogServersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSyslogServersResult> getSyslogServers(GetSyslogServersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getSyslogServers:getSyslogServers", TypeShape.of(GetSyslogServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetSyslogServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getSyslogServers(GetSyslogServersArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksSyslogServersExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSyslogServersResult> getSyslogServersPlain(GetSyslogServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getSyslogServers:getSyslogServers", TypeShape.of(GetSyslogServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTopologyLinkLayer(GetTopologyLinkLayerArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTopologyLinkLayerExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTopologyLinkLayerResult> getTopologyLinkLayer(GetTopologyLinkLayerArgs args) {
        return getTopologyLinkLayer(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTopologyLinkLayer(GetTopologyLinkLayerArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTopologyLinkLayerExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTopologyLinkLayerResult> getTopologyLinkLayerPlain(GetTopologyLinkLayerPlainArgs args) {
        return getTopologyLinkLayerPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTopologyLinkLayer(GetTopologyLinkLayerArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTopologyLinkLayerExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTopologyLinkLayerResult> getTopologyLinkLayer(GetTopologyLinkLayerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTopologyLinkLayer:getTopologyLinkLayer", TypeShape.of(GetTopologyLinkLayerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTopologyLinkLayer(GetTopologyLinkLayerArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTopologyLinkLayerExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTopologyLinkLayerResult> getTopologyLinkLayer(GetTopologyLinkLayerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTopologyLinkLayer:getTopologyLinkLayer", TypeShape.of(GetTopologyLinkLayerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTopologyLinkLayerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTopologyLinkLayer(GetTopologyLinkLayerArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTopologyLinkLayerExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTopologyLinkLayerResult> getTopologyLinkLayerPlain(GetTopologyLinkLayerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getTopologyLinkLayer:getTopologyLinkLayer", TypeShape.of(GetTopologyLinkLayerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficAnalysis(GetTrafficAnalysisArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficAnalysisExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficAnalysisResult> getTrafficAnalysis(GetTrafficAnalysisArgs args) {
        return getTrafficAnalysis(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficAnalysis(GetTrafficAnalysisArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficAnalysisExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficAnalysisResult> getTrafficAnalysisPlain(GetTrafficAnalysisPlainArgs args) {
        return getTrafficAnalysisPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficAnalysis(GetTrafficAnalysisArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficAnalysisExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficAnalysisResult> getTrafficAnalysis(GetTrafficAnalysisArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficAnalysis:getTrafficAnalysis", TypeShape.of(GetTrafficAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficAnalysis(GetTrafficAnalysisArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficAnalysisExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficAnalysisResult> getTrafficAnalysis(GetTrafficAnalysisArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficAnalysis:getTrafficAnalysis", TypeShape.of(GetTrafficAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficAnalysisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficAnalysis(GetTrafficAnalysisArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficAnalysisExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficAnalysisResult> getTrafficAnalysisPlain(GetTrafficAnalysisPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getTrafficAnalysis:getTrafficAnalysis", TypeShape.of(GetTrafficAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingApplicationCategoriesResult> getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs args) {
        return getTrafficShapingApplicationCategories(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficShapingApplicationCategoriesResult> getTrafficShapingApplicationCategoriesPlain(GetTrafficShapingApplicationCategoriesPlainArgs args) {
        return getTrafficShapingApplicationCategoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingApplicationCategoriesResult> getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficShapingApplicationCategories:getTrafficShapingApplicationCategories", TypeShape.of(GetTrafficShapingApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingApplicationCategoriesResult> getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficShapingApplicationCategories:getTrafficShapingApplicationCategories", TypeShape.of(GetTrafficShapingApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingApplicationCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingApplicationCategories(GetTrafficShapingApplicationCategoriesArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingApplicationCategoriesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficShapingApplicationCategoriesResult> getTrafficShapingApplicationCategoriesPlain(GetTrafficShapingApplicationCategoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getTrafficShapingApplicationCategories:getTrafficShapingApplicationCategories", TypeShape.of(GetTrafficShapingApplicationCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingDscpTaggingOptionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingDscpTaggingOptionsResult> getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs args) {
        return getTrafficShapingDscpTaggingOptions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingDscpTaggingOptionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficShapingDscpTaggingOptionsResult> getTrafficShapingDscpTaggingOptionsPlain(GetTrafficShapingDscpTaggingOptionsPlainArgs args) {
        return getTrafficShapingDscpTaggingOptionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingDscpTaggingOptionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingDscpTaggingOptionsResult> getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficShapingDscpTaggingOptions:getTrafficShapingDscpTaggingOptions", TypeShape.of(GetTrafficShapingDscpTaggingOptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingDscpTaggingOptionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrafficShapingDscpTaggingOptionsResult> getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getTrafficShapingDscpTaggingOptions:getTrafficShapingDscpTaggingOptions", TypeShape.of(GetTrafficShapingDscpTaggingOptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetTrafficShapingDscpTaggingOptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getTrafficShapingDscpTaggingOptions(GetTrafficShapingDscpTaggingOptionsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksTrafficShapingDscpTaggingOptionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrafficShapingDscpTaggingOptionsResult> getTrafficShapingDscpTaggingOptionsPlain(GetTrafficShapingDscpTaggingOptionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getTrafficShapingDscpTaggingOptions:getTrafficShapingDscpTaggingOptions", TypeShape.of(GetTrafficShapingDscpTaggingOptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfiles(GetVlanProfilesArgs.builder()
     *             .iname("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesResult> getVlanProfiles(GetVlanProfilesArgs args) {
        return getVlanProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfiles(GetVlanProfilesArgs.builder()
     *             .iname("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetVlanProfilesResult> getVlanProfilesPlain(GetVlanProfilesPlainArgs args) {
        return getVlanProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfiles(GetVlanProfilesArgs.builder()
     *             .iname("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesResult> getVlanProfiles(GetVlanProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getVlanProfiles:getVlanProfiles", TypeShape.of(GetVlanProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfiles(GetVlanProfilesArgs.builder()
     *             .iname("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesResult> getVlanProfiles(GetVlanProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getVlanProfiles:getVlanProfiles", TypeShape.of(GetVlanProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfiles(GetVlanProfilesArgs.builder()
     *             .iname("string")
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetVlanProfilesResult> getVlanProfilesPlain(GetVlanProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getVlanProfiles:getVlanProfiles", TypeShape.of(GetVlanProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .stackIds("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesAssignmentsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesAssignmentsByDeviceResult> getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs args) {
        return getVlanProfilesAssignmentsByDevice(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .stackIds("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesAssignmentsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetVlanProfilesAssignmentsByDeviceResult> getVlanProfilesAssignmentsByDevicePlain(GetVlanProfilesAssignmentsByDevicePlainArgs args) {
        return getVlanProfilesAssignmentsByDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .stackIds("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesAssignmentsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesAssignmentsByDeviceResult> getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getVlanProfilesAssignmentsByDevice:getVlanProfilesAssignmentsByDevice", TypeShape.of(GetVlanProfilesAssignmentsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .stackIds("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesAssignmentsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetVlanProfilesAssignmentsByDeviceResult> getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getVlanProfilesAssignmentsByDevice:getVlanProfilesAssignmentsByDevice", TypeShape.of(GetVlanProfilesAssignmentsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetVlanProfilesAssignmentsByDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getVlanProfilesAssignmentsByDevice(GetVlanProfilesAssignmentsByDeviceArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .productTypes("string")
     *             .serials("string")
     *             .stackIds("string")
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksVlanProfilesAssignmentsByDeviceExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetVlanProfilesAssignmentsByDeviceResult> getVlanProfilesAssignmentsByDevicePlain(GetVlanProfilesAssignmentsByDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getVlanProfilesAssignmentsByDevice:getVlanProfilesAssignmentsByDevice", TypeShape.of(GetVlanProfilesAssignmentsByDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksHttpServersResult> getWebhooksHttpServers() {
        return getWebhooksHttpServers(GetWebhooksHttpServersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksHttpServersResult> getWebhooksHttpServersPlain() {
        return getWebhooksHttpServersPlain(GetWebhooksHttpServersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksHttpServersResult> getWebhooksHttpServers(GetWebhooksHttpServersArgs args) {
        return getWebhooksHttpServers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksHttpServersResult> getWebhooksHttpServersPlain(GetWebhooksHttpServersPlainArgs args) {
        return getWebhooksHttpServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksHttpServersResult> getWebhooksHttpServers(GetWebhooksHttpServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksHttpServers:getWebhooksHttpServers", TypeShape.of(GetWebhooksHttpServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksHttpServersResult> getWebhooksHttpServers(GetWebhooksHttpServersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksHttpServers:getWebhooksHttpServers", TypeShape.of(GetWebhooksHttpServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksHttpServersResult> getWebhooksHttpServersPlain(GetWebhooksHttpServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWebhooksHttpServers:getWebhooksHttpServers", TypeShape.of(GetWebhooksHttpServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplates() {
        return getWebhooksPayloadTemplates(GetWebhooksPayloadTemplatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplatesPlain() {
        return getWebhooksPayloadTemplatesPlain(GetWebhooksPayloadTemplatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplates(GetWebhooksPayloadTemplatesArgs args) {
        return getWebhooksPayloadTemplates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplatesPlain(GetWebhooksPayloadTemplatesPlainArgs args) {
        return getWebhooksPayloadTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplates(GetWebhooksPayloadTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksPayloadTemplates:getWebhooksPayloadTemplates", TypeShape.of(GetWebhooksPayloadTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplates(GetWebhooksPayloadTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksPayloadTemplates:getWebhooksPayloadTemplates", TypeShape.of(GetWebhooksPayloadTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWebhooksPayloadTemplatesResult> getWebhooksPayloadTemplatesPlain(GetWebhooksPayloadTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWebhooksPayloadTemplates:getWebhooksPayloadTemplates", TypeShape.of(GetWebhooksPayloadTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs.builder()
     *             .networkId("string")
     *             .webhookTestId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWebhooksWebhookTestsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWebhooksWebhookTestsResult> getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs args) {
        return getWebhooksWebhookTests(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs.builder()
     *             .networkId("string")
     *             .webhookTestId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWebhooksWebhookTestsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWebhooksWebhookTestsResult> getWebhooksWebhookTestsPlain(GetWebhooksWebhookTestsPlainArgs args) {
        return getWebhooksWebhookTestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs.builder()
     *             .networkId("string")
     *             .webhookTestId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWebhooksWebhookTestsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWebhooksWebhookTestsResult> getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksWebhookTests:getWebhooksWebhookTests", TypeShape.of(GetWebhooksWebhookTestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs.builder()
     *             .networkId("string")
     *             .webhookTestId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWebhooksWebhookTestsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWebhooksWebhookTestsResult> getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWebhooksWebhookTests:getWebhooksWebhookTests", TypeShape.of(GetWebhooksWebhookTestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWebhooksWebhookTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWebhooksWebhookTests(GetWebhooksWebhookTestsArgs.builder()
     *             .networkId("string")
     *             .webhookTestId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWebhooksWebhookTestsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWebhooksWebhookTestsResult> getWebhooksWebhookTestsPlain(GetWebhooksWebhookTestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWebhooksWebhookTests:getWebhooksWebhookTests", TypeShape.of(GetWebhooksWebhookTestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessAlternateManagementInterfaceResult> getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs args) {
        return getWirelessAlternateManagementInterface(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessAlternateManagementInterfaceResult> getWirelessAlternateManagementInterfacePlain(GetWirelessAlternateManagementInterfacePlainArgs args) {
        return getWirelessAlternateManagementInterfacePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessAlternateManagementInterfaceResult> getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessAlternateManagementInterface:getWirelessAlternateManagementInterface", TypeShape.of(GetWirelessAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessAlternateManagementInterfaceResult> getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessAlternateManagementInterface:getWirelessAlternateManagementInterface", TypeShape.of(GetWirelessAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessAlternateManagementInterfaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessAlternateManagementInterface(GetWirelessAlternateManagementInterfaceArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessAlternateManagementInterfaceExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessAlternateManagementInterfaceResult> getWirelessAlternateManagementInterfacePlain(GetWirelessAlternateManagementInterfacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessAlternateManagementInterface:getWirelessAlternateManagementInterface", TypeShape.of(GetWirelessAlternateManagementInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBilling(GetWirelessBillingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBillingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBillingResult> getWirelessBilling(GetWirelessBillingArgs args) {
        return getWirelessBilling(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBilling(GetWirelessBillingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBillingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessBillingResult> getWirelessBillingPlain(GetWirelessBillingPlainArgs args) {
        return getWirelessBillingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBilling(GetWirelessBillingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBillingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBillingResult> getWirelessBilling(GetWirelessBillingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessBilling:getWirelessBilling", TypeShape.of(GetWirelessBillingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBilling(GetWirelessBillingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBillingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBillingResult> getWirelessBilling(GetWirelessBillingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessBilling:getWirelessBilling", TypeShape.of(GetWirelessBillingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBillingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBilling(GetWirelessBillingArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBillingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessBillingResult> getWirelessBillingPlain(GetWirelessBillingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessBilling:getWirelessBilling", TypeShape.of(GetWirelessBillingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBluetoothSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBluetoothSettingsResult> getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs args) {
        return getWirelessBluetoothSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBluetoothSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessBluetoothSettingsResult> getWirelessBluetoothSettingsPlain(GetWirelessBluetoothSettingsPlainArgs args) {
        return getWirelessBluetoothSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBluetoothSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBluetoothSettingsResult> getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessBluetoothSettings:getWirelessBluetoothSettings", TypeShape.of(GetWirelessBluetoothSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBluetoothSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessBluetoothSettingsResult> getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessBluetoothSettings:getWirelessBluetoothSettings", TypeShape.of(GetWirelessBluetoothSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessBluetoothSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessBluetoothSettings(GetWirelessBluetoothSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessBluetoothSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessBluetoothSettingsResult> getWirelessBluetoothSettingsPlain(GetWirelessBluetoothSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessBluetoothSettings:getWirelessBluetoothSettings", TypeShape.of(GetWirelessBluetoothSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessChannelUtilizationHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessChannelUtilizationHistoryResult> getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs args) {
        return getWirelessChannelUtilizationHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessChannelUtilizationHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessChannelUtilizationHistoryResult> getWirelessChannelUtilizationHistoryPlain(GetWirelessChannelUtilizationHistoryPlainArgs args) {
        return getWirelessChannelUtilizationHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessChannelUtilizationHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessChannelUtilizationHistoryResult> getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessChannelUtilizationHistory:getWirelessChannelUtilizationHistory", TypeShape.of(GetWirelessChannelUtilizationHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessChannelUtilizationHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessChannelUtilizationHistoryResult> getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessChannelUtilizationHistory:getWirelessChannelUtilizationHistory", TypeShape.of(GetWirelessChannelUtilizationHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessChannelUtilizationHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessChannelUtilizationHistory(GetWirelessChannelUtilizationHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessChannelUtilizationHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessChannelUtilizationHistoryResult> getWirelessChannelUtilizationHistoryPlain(GetWirelessChannelUtilizationHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessChannelUtilizationHistory:getWirelessChannelUtilizationHistory", TypeShape.of(GetWirelessChannelUtilizationHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientCountHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientCountHistoryResult> getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs args) {
        return getWirelessClientCountHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientCountHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientCountHistoryResult> getWirelessClientCountHistoryPlain(GetWirelessClientCountHistoryPlainArgs args) {
        return getWirelessClientCountHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientCountHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientCountHistoryResult> getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientCountHistory:getWirelessClientCountHistory", TypeShape.of(GetWirelessClientCountHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientCountHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientCountHistoryResult> getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientCountHistory:getWirelessClientCountHistory", TypeShape.of(GetWirelessClientCountHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientCountHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientCountHistory(GetWirelessClientCountHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientCountHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientCountHistoryResult> getWirelessClientCountHistoryPlain(GetWirelessClientCountHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessClientCountHistory:getWirelessClientCountHistory", TypeShape.of(GetWirelessClientCountHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsConnectionStatsResult> getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs args) {
        return getWirelessClientsConnectionStats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientsConnectionStatsResult> getWirelessClientsConnectionStatsPlain(GetWirelessClientsConnectionStatsPlainArgs args) {
        return getWirelessClientsConnectionStatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsConnectionStatsResult> getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientsConnectionStats:getWirelessClientsConnectionStats", TypeShape.of(GetWirelessClientsConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsConnectionStatsResult> getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientsConnectionStats:getWirelessClientsConnectionStats", TypeShape.of(GetWirelessClientsConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsConnectionStats(GetWirelessClientsConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientsConnectionStatsResult> getWirelessClientsConnectionStatsPlain(GetWirelessClientsConnectionStatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessClientsConnectionStats:getWirelessClientsConnectionStats", TypeShape.of(GetWirelessClientsConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsLatencyStatsResult> getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs args) {
        return getWirelessClientsLatencyStats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientsLatencyStatsResult> getWirelessClientsLatencyStatsPlain(GetWirelessClientsLatencyStatsPlainArgs args) {
        return getWirelessClientsLatencyStatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsLatencyStatsResult> getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientsLatencyStats:getWirelessClientsLatencyStats", TypeShape.of(GetWirelessClientsLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessClientsLatencyStatsResult> getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessClientsLatencyStats:getWirelessClientsLatencyStats", TypeShape.of(GetWirelessClientsLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessClientsLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessClientsLatencyStats(GetWirelessClientsLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessClientsLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessClientsLatencyStatsResult> getWirelessClientsLatencyStatsPlain(GetWirelessClientsLatencyStatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessClientsLatencyStats:getWirelessClientsLatencyStats", TypeShape.of(GetWirelessClientsLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessConnectionStats(GetWirelessConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessConnectionStatsResult> getWirelessConnectionStats(GetWirelessConnectionStatsArgs args) {
        return getWirelessConnectionStats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessConnectionStats(GetWirelessConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessConnectionStatsResult> getWirelessConnectionStatsPlain(GetWirelessConnectionStatsPlainArgs args) {
        return getWirelessConnectionStatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessConnectionStats(GetWirelessConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessConnectionStatsResult> getWirelessConnectionStats(GetWirelessConnectionStatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessConnectionStats:getWirelessConnectionStats", TypeShape.of(GetWirelessConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessConnectionStats(GetWirelessConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessConnectionStatsResult> getWirelessConnectionStats(GetWirelessConnectionStatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessConnectionStats:getWirelessConnectionStats", TypeShape.of(GetWirelessConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessConnectionStats(GetWirelessConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessConnectionStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessConnectionStatsResult> getWirelessConnectionStatsPlain(GetWirelessConnectionStatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessConnectionStats:getWirelessConnectionStats", TypeShape.of(GetWirelessConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDataRateHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDataRateHistoryResult> getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs args) {
        return getWirelessDataRateHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDataRateHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessDataRateHistoryResult> getWirelessDataRateHistoryPlain(GetWirelessDataRateHistoryPlainArgs args) {
        return getWirelessDataRateHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDataRateHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDataRateHistoryResult> getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessDataRateHistory:getWirelessDataRateHistory", TypeShape.of(GetWirelessDataRateHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDataRateHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDataRateHistoryResult> getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessDataRateHistory:getWirelessDataRateHistory", TypeShape.of(GetWirelessDataRateHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDataRateHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDataRateHistory(GetWirelessDataRateHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDataRateHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessDataRateHistoryResult> getWirelessDataRateHistoryPlain(GetWirelessDataRateHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessDataRateHistory:getWirelessDataRateHistory", TypeShape.of(GetWirelessDataRateHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDevicesConnectionStatsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDevicesConnectionStatsResult> getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs args) {
        return getWirelessDevicesConnectionStats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDevicesConnectionStatsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessDevicesConnectionStatsResult> getWirelessDevicesConnectionStatsPlain(GetWirelessDevicesConnectionStatsPlainArgs args) {
        return getWirelessDevicesConnectionStatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDevicesConnectionStatsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDevicesConnectionStatsResult> getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessDevicesConnectionStats:getWirelessDevicesConnectionStats", TypeShape.of(GetWirelessDevicesConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDevicesConnectionStatsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessDevicesConnectionStatsResult> getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessDevicesConnectionStats:getWirelessDevicesConnectionStats", TypeShape.of(GetWirelessDevicesConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessDevicesConnectionStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessDevicesConnectionStats(GetWirelessDevicesConnectionStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessDevicesConnectionStatsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessDevicesConnectionStatsResult> getWirelessDevicesConnectionStatsPlain(GetWirelessDevicesConnectionStatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessDevicesConnectionStats:getWirelessDevicesConnectionStats", TypeShape.of(GetWirelessDevicesConnectionStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs.builder()
     *             .networkId("string")
     *             .profileId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessEthernetPortsProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessEthernetPortsProfilesResult> getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs args) {
        return getWirelessEthernetPortsProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs.builder()
     *             .networkId("string")
     *             .profileId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessEthernetPortsProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessEthernetPortsProfilesResult> getWirelessEthernetPortsProfilesPlain(GetWirelessEthernetPortsProfilesPlainArgs args) {
        return getWirelessEthernetPortsProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs.builder()
     *             .networkId("string")
     *             .profileId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessEthernetPortsProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessEthernetPortsProfilesResult> getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessEthernetPortsProfiles:getWirelessEthernetPortsProfiles", TypeShape.of(GetWirelessEthernetPortsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs.builder()
     *             .networkId("string")
     *             .profileId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessEthernetPortsProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessEthernetPortsProfilesResult> getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessEthernetPortsProfiles:getWirelessEthernetPortsProfiles", TypeShape.of(GetWirelessEthernetPortsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessEthernetPortsProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessEthernetPortsProfiles(GetWirelessEthernetPortsProfilesArgs.builder()
     *             .networkId("string")
     *             .profileId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessEthernetPortsProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessEthernetPortsProfilesResult> getWirelessEthernetPortsProfilesPlain(GetWirelessEthernetPortsProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessEthernetPortsProfiles:getWirelessEthernetPortsProfiles", TypeShape.of(GetWirelessEthernetPortsProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessFailedConnections(GetWirelessFailedConnectionsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .serial("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessFailedConnectionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessFailedConnectionsResult> getWirelessFailedConnections(GetWirelessFailedConnectionsArgs args) {
        return getWirelessFailedConnections(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessFailedConnections(GetWirelessFailedConnectionsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .serial("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessFailedConnectionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessFailedConnectionsResult> getWirelessFailedConnectionsPlain(GetWirelessFailedConnectionsPlainArgs args) {
        return getWirelessFailedConnectionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessFailedConnections(GetWirelessFailedConnectionsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .serial("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessFailedConnectionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessFailedConnectionsResult> getWirelessFailedConnections(GetWirelessFailedConnectionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessFailedConnections:getWirelessFailedConnections", TypeShape.of(GetWirelessFailedConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessFailedConnections(GetWirelessFailedConnectionsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .serial("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessFailedConnectionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessFailedConnectionsResult> getWirelessFailedConnections(GetWirelessFailedConnectionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessFailedConnections:getWirelessFailedConnections", TypeShape.of(GetWirelessFailedConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessFailedConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessFailedConnections(GetWirelessFailedConnectionsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .clientId("string")
     *             .networkId("string")
     *             .serial("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessFailedConnectionsExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessFailedConnectionsResult> getWirelessFailedConnectionsPlain(GetWirelessFailedConnectionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessFailedConnections:getWirelessFailedConnections", TypeShape.of(GetWirelessFailedConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs.builder()
     *             .accessCategory("string")
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyHistoryResult> getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs args) {
        return getWirelessLatencyHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs.builder()
     *             .accessCategory("string")
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessLatencyHistoryResult> getWirelessLatencyHistoryPlain(GetWirelessLatencyHistoryPlainArgs args) {
        return getWirelessLatencyHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs.builder()
     *             .accessCategory("string")
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyHistoryResult> getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessLatencyHistory:getWirelessLatencyHistory", TypeShape.of(GetWirelessLatencyHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs.builder()
     *             .accessCategory("string")
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyHistoryResult> getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessLatencyHistory:getWirelessLatencyHistory", TypeShape.of(GetWirelessLatencyHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyHistory(GetWirelessLatencyHistoryArgs.builder()
     *             .accessCategory("string")
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessLatencyHistoryResult> getWirelessLatencyHistoryPlain(GetWirelessLatencyHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessLatencyHistory:getWirelessLatencyHistory", TypeShape.of(GetWirelessLatencyHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyStats(GetWirelessLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyStatsResult> getWirelessLatencyStats(GetWirelessLatencyStatsArgs args) {
        return getWirelessLatencyStats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyStats(GetWirelessLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessLatencyStatsResult> getWirelessLatencyStatsPlain(GetWirelessLatencyStatsPlainArgs args) {
        return getWirelessLatencyStatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyStats(GetWirelessLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyStatsResult> getWirelessLatencyStats(GetWirelessLatencyStatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessLatencyStats:getWirelessLatencyStats", TypeShape.of(GetWirelessLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyStats(GetWirelessLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessLatencyStatsResult> getWirelessLatencyStats(GetWirelessLatencyStatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessLatencyStats:getWirelessLatencyStats", TypeShape.of(GetWirelessLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessLatencyStatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessLatencyStats(GetWirelessLatencyStatsArgs.builder()
     *             .apTag("string")
     *             .band("string")
     *             .fields("string")
     *             .networkId("string")
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .vlan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessLatencyStatsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessLatencyStatsResult> getWirelessLatencyStatsPlain(GetWirelessLatencyStatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessLatencyStats:getWirelessLatencyStats", TypeShape.of(GetWirelessLatencyStatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessMeshStatuses(GetWirelessMeshStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessMeshStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessMeshStatusesResult> getWirelessMeshStatuses(GetWirelessMeshStatusesArgs args) {
        return getWirelessMeshStatuses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessMeshStatuses(GetWirelessMeshStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessMeshStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessMeshStatusesResult> getWirelessMeshStatusesPlain(GetWirelessMeshStatusesPlainArgs args) {
        return getWirelessMeshStatusesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessMeshStatuses(GetWirelessMeshStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessMeshStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessMeshStatusesResult> getWirelessMeshStatuses(GetWirelessMeshStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessMeshStatuses:getWirelessMeshStatuses", TypeShape.of(GetWirelessMeshStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessMeshStatuses(GetWirelessMeshStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessMeshStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessMeshStatusesResult> getWirelessMeshStatuses(GetWirelessMeshStatusesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessMeshStatuses:getWirelessMeshStatuses", TypeShape.of(GetWirelessMeshStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessMeshStatusesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessMeshStatuses(GetWirelessMeshStatusesArgs.builder()
     *             .endingBefore("string")
     *             .networkId("string")
     *             .perPage(1)
     *             .startingAfter("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessMeshStatusesExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessMeshStatusesResult> getWirelessMeshStatusesPlain(GetWirelessMeshStatusesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessMeshStatuses:getWirelessMeshStatuses", TypeShape.of(GetWirelessMeshStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessRfProfilesResult> getWirelessRfProfiles() {
        return getWirelessRfProfiles(GetWirelessRfProfilesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessRfProfilesResult> getWirelessRfProfilesPlain() {
        return getWirelessRfProfilesPlain(GetWirelessRfProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessRfProfilesResult> getWirelessRfProfiles(GetWirelessRfProfilesArgs args) {
        return getWirelessRfProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessRfProfilesResult> getWirelessRfProfilesPlain(GetWirelessRfProfilesPlainArgs args) {
        return getWirelessRfProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessRfProfilesResult> getWirelessRfProfiles(GetWirelessRfProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", TypeShape.of(GetWirelessRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessRfProfilesResult> getWirelessRfProfiles(GetWirelessRfProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", TypeShape.of(GetWirelessRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessRfProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessRfProfiles(GetWirelessRfProfilesArgs.builder()
     *             .includeTemplateProfiles(false)
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessRfProfilesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessRfProfilesResult> getWirelessRfProfilesPlain(GetWirelessRfProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", TypeShape.of(GetWirelessRfProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSettings(GetWirelessSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSettingsResult> getWirelessSettings(GetWirelessSettingsArgs args) {
        return getWirelessSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSettings(GetWirelessSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSettingsResult> getWirelessSettingsPlain(GetWirelessSettingsPlainArgs args) {
        return getWirelessSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSettings(GetWirelessSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSettingsResult> getWirelessSettings(GetWirelessSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSettings:getWirelessSettings", TypeShape.of(GetWirelessSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSettings(GetWirelessSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSettingsResult> getWirelessSettings(GetWirelessSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSettings:getWirelessSettings", TypeShape.of(GetWirelessSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSettings(GetWirelessSettingsArgs.builder()
     *             .networkId("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSettingsResult> getWirelessSettingsPlain(GetWirelessSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSettings:getWirelessSettings", TypeShape.of(GetWirelessSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSignalQualityHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSignalQualityHistoryResult> getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs args) {
        return getWirelessSignalQualityHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSignalQualityHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSignalQualityHistoryResult> getWirelessSignalQualityHistoryPlain(GetWirelessSignalQualityHistoryPlainArgs args) {
        return getWirelessSignalQualityHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSignalQualityHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSignalQualityHistoryResult> getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSignalQualityHistory:getWirelessSignalQualityHistory", TypeShape.of(GetWirelessSignalQualityHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSignalQualityHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSignalQualityHistoryResult> getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSignalQualityHistory:getWirelessSignalQualityHistory", TypeShape.of(GetWirelessSignalQualityHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSignalQualityHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSignalQualityHistory(GetWirelessSignalQualityHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSignalQualityHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSignalQualityHistoryResult> getWirelessSignalQualityHistoryPlain(GetWirelessSignalQualityHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSignalQualityHistory:getWirelessSignalQualityHistory", TypeShape.of(GetWirelessSignalQualityHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsResult> getWirelessSsids() {
        return getWirelessSsids(GetWirelessSsidsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsResult> getWirelessSsidsPlain() {
        return getWirelessSsidsPlain(GetWirelessSsidsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsResult> getWirelessSsids(GetWirelessSsidsArgs args) {
        return getWirelessSsids(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsResult> getWirelessSsidsPlain(GetWirelessSsidsPlainArgs args) {
        return getWirelessSsidsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsResult> getWirelessSsids(GetWirelessSsidsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsids:getWirelessSsids", TypeShape.of(GetWirelessSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsResult> getWirelessSsids(GetWirelessSsidsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsids:getWirelessSsids", TypeShape.of(GetWirelessSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsResult> getWirelessSsidsPlain(GetWirelessSsidsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsids:getWirelessSsids", TypeShape.of(GetWirelessSsidsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsBonjourForwardingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsBonjourForwardingResult> getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs args) {
        return getWirelessSsidsBonjourForwarding(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsBonjourForwardingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsBonjourForwardingResult> getWirelessSsidsBonjourForwardingPlain(GetWirelessSsidsBonjourForwardingPlainArgs args) {
        return getWirelessSsidsBonjourForwardingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsBonjourForwardingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsBonjourForwardingResult> getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsBonjourForwarding:getWirelessSsidsBonjourForwarding", TypeShape.of(GetWirelessSsidsBonjourForwardingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsBonjourForwardingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsBonjourForwardingResult> getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsBonjourForwarding:getWirelessSsidsBonjourForwarding", TypeShape.of(GetWirelessSsidsBonjourForwardingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsBonjourForwardingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsBonjourForwarding(GetWirelessSsidsBonjourForwardingArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsBonjourForwardingExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsBonjourForwardingResult> getWirelessSsidsBonjourForwardingPlain(GetWirelessSsidsBonjourForwardingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsBonjourForwarding:getWirelessSsidsBonjourForwarding", TypeShape.of(GetWirelessSsidsBonjourForwardingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsDeviceTypeGroupPoliciesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsDeviceTypeGroupPoliciesResult> getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs args) {
        return getWirelessSsidsDeviceTypeGroupPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsDeviceTypeGroupPoliciesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsDeviceTypeGroupPoliciesResult> getWirelessSsidsDeviceTypeGroupPoliciesPlain(GetWirelessSsidsDeviceTypeGroupPoliciesPlainArgs args) {
        return getWirelessSsidsDeviceTypeGroupPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsDeviceTypeGroupPoliciesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsDeviceTypeGroupPoliciesResult> getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsDeviceTypeGroupPolicies:getWirelessSsidsDeviceTypeGroupPolicies", TypeShape.of(GetWirelessSsidsDeviceTypeGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsDeviceTypeGroupPoliciesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsDeviceTypeGroupPoliciesResult> getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsDeviceTypeGroupPolicies:getWirelessSsidsDeviceTypeGroupPolicies", TypeShape.of(GetWirelessSsidsDeviceTypeGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsDeviceTypeGroupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsDeviceTypeGroupPolicies(GetWirelessSsidsDeviceTypeGroupPoliciesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsDeviceTypeGroupPoliciesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsDeviceTypeGroupPoliciesResult> getWirelessSsidsDeviceTypeGroupPoliciesPlain(GetWirelessSsidsDeviceTypeGroupPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsDeviceTypeGroupPolicies:getWirelessSsidsDeviceTypeGroupPolicies", TypeShape.of(GetWirelessSsidsDeviceTypeGroupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsEapOverrideExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsEapOverrideResult> getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs args) {
        return getWirelessSsidsEapOverride(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsEapOverrideExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsEapOverrideResult> getWirelessSsidsEapOverridePlain(GetWirelessSsidsEapOverridePlainArgs args) {
        return getWirelessSsidsEapOverridePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsEapOverrideExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsEapOverrideResult> getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsEapOverride:getWirelessSsidsEapOverride", TypeShape.of(GetWirelessSsidsEapOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsEapOverrideExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsEapOverrideResult> getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsEapOverride:getWirelessSsidsEapOverride", TypeShape.of(GetWirelessSsidsEapOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsEapOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsEapOverride(GetWirelessSsidsEapOverrideArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsEapOverrideExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsEapOverrideResult> getWirelessSsidsEapOverridePlain(GetWirelessSsidsEapOverridePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsEapOverride:getWirelessSsidsEapOverride", TypeShape.of(GetWirelessSsidsEapOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL3FirewallRulesResult> getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs args) {
        return getWirelessSsidsFirewallL3FirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsFirewallL3FirewallRulesResult> getWirelessSsidsFirewallL3FirewallRulesPlain(GetWirelessSsidsFirewallL3FirewallRulesPlainArgs args) {
        return getWirelessSsidsFirewallL3FirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL3FirewallRulesResult> getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsFirewallL3FirewallRules:getWirelessSsidsFirewallL3FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL3FirewallRulesResult> getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsFirewallL3FirewallRules:getWirelessSsidsFirewallL3FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL3FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL3FirewallRules(GetWirelessSsidsFirewallL3FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL3FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsFirewallL3FirewallRulesResult> getWirelessSsidsFirewallL3FirewallRulesPlain(GetWirelessSsidsFirewallL3FirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsFirewallL3FirewallRules:getWirelessSsidsFirewallL3FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL3FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL7FirewallRulesResult> getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs args) {
        return getWirelessSsidsFirewallL7FirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsFirewallL7FirewallRulesResult> getWirelessSsidsFirewallL7FirewallRulesPlain(GetWirelessSsidsFirewallL7FirewallRulesPlainArgs args) {
        return getWirelessSsidsFirewallL7FirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL7FirewallRulesResult> getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsFirewallL7FirewallRules:getWirelessSsidsFirewallL7FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsFirewallL7FirewallRulesResult> getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsFirewallL7FirewallRules:getWirelessSsidsFirewallL7FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsFirewallL7FirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsFirewallL7FirewallRules(GetWirelessSsidsFirewallL7FirewallRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsFirewallL7FirewallRulesResult> getWirelessSsidsFirewallL7FirewallRulesPlain(GetWirelessSsidsFirewallL7FirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsFirewallL7FirewallRules:getWirelessSsidsFirewallL7FirewallRules", TypeShape.of(GetWirelessSsidsFirewallL7FirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsHotspot20Example", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsHotspot20Result> getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args args) {
        return getWirelessSsidsHotspot20(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsHotspot20Example", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsHotspot20Result> getWirelessSsidsHotspot20Plain(GetWirelessSsidsHotspot20PlainArgs args) {
        return getWirelessSsidsHotspot20Plain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsHotspot20Example", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsHotspot20Result> getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsHotspot20:getWirelessSsidsHotspot20", TypeShape.of(GetWirelessSsidsHotspot20Result.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsHotspot20Example", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsHotspot20Result> getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsHotspot20:getWirelessSsidsHotspot20", TypeShape.of(GetWirelessSsidsHotspot20Result.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsHotspot20Args;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsHotspot20(GetWirelessSsidsHotspot20Args.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsHotspot20Example", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsHotspot20Result> getWirelessSsidsHotspot20Plain(GetWirelessSsidsHotspot20PlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsHotspot20:getWirelessSsidsHotspot20", TypeShape.of(GetWirelessSsidsHotspot20Result.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsks() {
        return getWirelessSsidsIdentityPsks(GetWirelessSsidsIdentityPsksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsksPlain() {
        return getWirelessSsidsIdentityPsksPlain(GetWirelessSsidsIdentityPsksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsks(GetWirelessSsidsIdentityPsksArgs args) {
        return getWirelessSsidsIdentityPsks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsksPlain(GetWirelessSsidsIdentityPsksPlainArgs args) {
        return getWirelessSsidsIdentityPsksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsks(GetWirelessSsidsIdentityPsksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", TypeShape.of(GetWirelessSsidsIdentityPsksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static Output<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsks(GetWirelessSsidsIdentityPsksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", TypeShape.of(GetWirelessSsidsIdentityPsksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetWirelessSsidsIdentityPsksResult> getWirelessSsidsIdentityPsksPlain(GetWirelessSsidsIdentityPsksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsIdentityPsks:getWirelessSsidsIdentityPsks", TypeShape.of(GetWirelessSsidsIdentityPsksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSchedulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSchedulesResult> getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs args) {
        return getWirelessSsidsSchedules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSchedulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsSchedulesResult> getWirelessSsidsSchedulesPlain(GetWirelessSsidsSchedulesPlainArgs args) {
        return getWirelessSsidsSchedulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSchedulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSchedulesResult> getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsSchedules:getWirelessSsidsSchedules", TypeShape.of(GetWirelessSsidsSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSchedulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSchedulesResult> getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsSchedules:getWirelessSsidsSchedules", TypeShape.of(GetWirelessSsidsSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSchedules(GetWirelessSsidsSchedulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSchedulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsSchedulesResult> getWirelessSsidsSchedulesPlain(GetWirelessSsidsSchedulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsSchedules:getWirelessSsidsSchedules", TypeShape.of(GetWirelessSsidsSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSplashSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSplashSettingsResult> getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs args) {
        return getWirelessSsidsSplashSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSplashSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsSplashSettingsResult> getWirelessSsidsSplashSettingsPlain(GetWirelessSsidsSplashSettingsPlainArgs args) {
        return getWirelessSsidsSplashSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSplashSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSplashSettingsResult> getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsSplashSettings:getWirelessSsidsSplashSettings", TypeShape.of(GetWirelessSsidsSplashSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSplashSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsSplashSettingsResult> getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsSplashSettings:getWirelessSsidsSplashSettings", TypeShape.of(GetWirelessSsidsSplashSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsSplashSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsSplashSettings(GetWirelessSsidsSplashSettingsArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsSplashSettingsExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsSplashSettingsResult> getWirelessSsidsSplashSettingsPlain(GetWirelessSsidsSplashSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsSplashSettings:getWirelessSsidsSplashSettings", TypeShape.of(GetWirelessSsidsSplashSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsTrafficShapingRulesResult> getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs args) {
        return getWirelessSsidsTrafficShapingRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsTrafficShapingRulesResult> getWirelessSsidsTrafficShapingRulesPlain(GetWirelessSsidsTrafficShapingRulesPlainArgs args) {
        return getWirelessSsidsTrafficShapingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsTrafficShapingRulesResult> getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsTrafficShapingRules:getWirelessSsidsTrafficShapingRules", TypeShape.of(GetWirelessSsidsTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsTrafficShapingRulesResult> getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsTrafficShapingRules:getWirelessSsidsTrafficShapingRules", TypeShape.of(GetWirelessSsidsTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsTrafficShapingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsTrafficShapingRules(GetWirelessSsidsTrafficShapingRulesArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsTrafficShapingRulesResult> getWirelessSsidsTrafficShapingRulesPlain(GetWirelessSsidsTrafficShapingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsTrafficShapingRules:getWirelessSsidsTrafficShapingRules", TypeShape.of(GetWirelessSsidsTrafficShapingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsVpn(GetWirelessSsidsVpnArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsVpnResult> getWirelessSsidsVpn(GetWirelessSsidsVpnArgs args) {
        return getWirelessSsidsVpn(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsVpn(GetWirelessSsidsVpnArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsVpnResult> getWirelessSsidsVpnPlain(GetWirelessSsidsVpnPlainArgs args) {
        return getWirelessSsidsVpnPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsVpn(GetWirelessSsidsVpnArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsVpnResult> getWirelessSsidsVpn(GetWirelessSsidsVpnArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsVpn:getWirelessSsidsVpn", TypeShape.of(GetWirelessSsidsVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsVpn(GetWirelessSsidsVpnArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessSsidsVpnResult> getWirelessSsidsVpn(GetWirelessSsidsVpnArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessSsidsVpn:getWirelessSsidsVpn", TypeShape.of(GetWirelessSsidsVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessSsidsVpnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessSsidsVpn(GetWirelessSsidsVpnArgs.builder()
     *             .networkId("string")
     *             .number("string")
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessSsidsVpnExample", example.item());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessSsidsVpnResult> getWirelessSsidsVpnPlain(GetWirelessSsidsVpnPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessSsidsVpn:getWirelessSsidsVpn", TypeShape.of(GetWirelessSsidsVpnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessUsageHistory(GetWirelessUsageHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessUsageHistoryResult> getWirelessUsageHistory(GetWirelessUsageHistoryArgs args) {
        return getWirelessUsageHistory(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessUsageHistory(GetWirelessUsageHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessUsageHistoryResult> getWirelessUsageHistoryPlain(GetWirelessUsageHistoryPlainArgs args) {
        return getWirelessUsageHistoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessUsageHistory(GetWirelessUsageHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessUsageHistoryResult> getWirelessUsageHistory(GetWirelessUsageHistoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessUsageHistory:getWirelessUsageHistory", TypeShape.of(GetWirelessUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessUsageHistory(GetWirelessUsageHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetWirelessUsageHistoryResult> getWirelessUsageHistory(GetWirelessUsageHistoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("meraki:networks/getWirelessUsageHistory:getWirelessUsageHistory", TypeShape.of(GetWirelessUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.meraki.networks.NetworksFunctions;
     * import com.pulumi.meraki.networks.inputs.GetWirelessUsageHistoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NetworksFunctions.getWirelessUsageHistory(GetWirelessUsageHistoryArgs.builder()
     *             .apTag("string")
     *             .autoResolution(false)
     *             .band("string")
     *             .clientId("string")
     *             .deviceSerial("string")
     *             .networkId("string")
     *             .resolution(1)
     *             .ssid(1)
     *             .t0("string")
     *             .t1("string")
     *             .timespan(1)
     *             .build());
     * 
     *         ctx.export("merakiNetworksWirelessUsageHistoryExample", example.items());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetWirelessUsageHistoryResult> getWirelessUsageHistoryPlain(GetWirelessUsageHistoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("meraki:networks/getWirelessUsageHistory:getWirelessUsageHistory", TypeShape.of(GetWirelessUsageHistoryResult.class), args, Utilities.withVersion(options));
    }
}
