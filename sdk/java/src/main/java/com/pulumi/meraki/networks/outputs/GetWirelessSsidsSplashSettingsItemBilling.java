// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessSsidsSplashSettingsItemBillingFreeAccess;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsSplashSettingsItemBilling {
    /**
     * @return Details associated with a free access plan with limits
     * 
     */
    private GetWirelessSsidsSplashSettingsItemBillingFreeAccess freeAccess;
    /**
     * @return Whether or not billing uses the fast login prepaid access option.
     * 
     */
    private Boolean prepaidAccessFastLoginEnabled;
    /**
     * @return The email address that reeceives replies from clients
     * 
     */
    private String replyToEmailAddress;

    private GetWirelessSsidsSplashSettingsItemBilling() {}
    /**
     * @return Details associated with a free access plan with limits
     * 
     */
    public GetWirelessSsidsSplashSettingsItemBillingFreeAccess freeAccess() {
        return this.freeAccess;
    }
    /**
     * @return Whether or not billing uses the fast login prepaid access option.
     * 
     */
    public Boolean prepaidAccessFastLoginEnabled() {
        return this.prepaidAccessFastLoginEnabled;
    }
    /**
     * @return The email address that reeceives replies from clients
     * 
     */
    public String replyToEmailAddress() {
        return this.replyToEmailAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsSplashSettingsItemBilling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWirelessSsidsSplashSettingsItemBillingFreeAccess freeAccess;
        private Boolean prepaidAccessFastLoginEnabled;
        private String replyToEmailAddress;
        public Builder() {}
        public Builder(GetWirelessSsidsSplashSettingsItemBilling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.freeAccess = defaults.freeAccess;
    	      this.prepaidAccessFastLoginEnabled = defaults.prepaidAccessFastLoginEnabled;
    	      this.replyToEmailAddress = defaults.replyToEmailAddress;
        }

        @CustomType.Setter
        public Builder freeAccess(GetWirelessSsidsSplashSettingsItemBillingFreeAccess freeAccess) {
            if (freeAccess == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsSplashSettingsItemBilling", "freeAccess");
            }
            this.freeAccess = freeAccess;
            return this;
        }
        @CustomType.Setter
        public Builder prepaidAccessFastLoginEnabled(Boolean prepaidAccessFastLoginEnabled) {
            if (prepaidAccessFastLoginEnabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsSplashSettingsItemBilling", "prepaidAccessFastLoginEnabled");
            }
            this.prepaidAccessFastLoginEnabled = prepaidAccessFastLoginEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder replyToEmailAddress(String replyToEmailAddress) {
            if (replyToEmailAddress == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsSplashSettingsItemBilling", "replyToEmailAddress");
            }
            this.replyToEmailAddress = replyToEmailAddress;
            return this;
        }
        public GetWirelessSsidsSplashSettingsItemBilling build() {
            final var _resultValue = new GetWirelessSsidsSplashSettingsItemBilling();
            _resultValue.freeAccess = freeAccess;
            _resultValue.prepaidAccessFastLoginEnabled = prepaidAccessFastLoginEnabled;
            _resultValue.replyToEmailAddress = replyToEmailAddress;
            return _resultValue;
        }
    }
}
