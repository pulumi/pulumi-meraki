// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.SwitchMtuOverrideArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchMtuArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchMtuArgs Empty = new SwitchMtuArgs();

    /**
     * MTU size for the entire network. Default value is 9578.
     * 
     */
    @Import(name="defaultMtuSize")
    private @Nullable Output<Integer> defaultMtuSize;

    /**
     * @return MTU size for the entire network. Default value is 9578.
     * 
     */
    public Optional<Output<Integer>> defaultMtuSize() {
        return Optional.ofNullable(this.defaultMtuSize);
    }

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * Override MTU size for individual switches or switch templates.
     * An empty array will clear overrides.
     * 
     */
    @Import(name="overrides")
    private @Nullable Output<List<SwitchMtuOverrideArgs>> overrides;

    /**
     * @return Override MTU size for individual switches or switch templates.
     * An empty array will clear overrides.
     * 
     */
    public Optional<Output<List<SwitchMtuOverrideArgs>>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    private SwitchMtuArgs() {}

    private SwitchMtuArgs(SwitchMtuArgs $) {
        this.defaultMtuSize = $.defaultMtuSize;
        this.networkId = $.networkId;
        this.overrides = $.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchMtuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchMtuArgs $;

        public Builder() {
            $ = new SwitchMtuArgs();
        }

        public Builder(SwitchMtuArgs defaults) {
            $ = new SwitchMtuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultMtuSize MTU size for the entire network. Default value is 9578.
         * 
         * @return builder
         * 
         */
        public Builder defaultMtuSize(@Nullable Output<Integer> defaultMtuSize) {
            $.defaultMtuSize = defaultMtuSize;
            return this;
        }

        /**
         * @param defaultMtuSize MTU size for the entire network. Default value is 9578.
         * 
         * @return builder
         * 
         */
        public Builder defaultMtuSize(Integer defaultMtuSize) {
            return defaultMtuSize(Output.of(defaultMtuSize));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param overrides Override MTU size for individual switches or switch templates.
         * An empty array will clear overrides.
         * 
         * @return builder
         * 
         */
        public Builder overrides(@Nullable Output<List<SwitchMtuOverrideArgs>> overrides) {
            $.overrides = overrides;
            return this;
        }

        /**
         * @param overrides Override MTU size for individual switches or switch templates.
         * An empty array will clear overrides.
         * 
         * @return builder
         * 
         */
        public Builder overrides(List<SwitchMtuOverrideArgs> overrides) {
            return overrides(Output.of(overrides));
        }

        /**
         * @param overrides Override MTU size for individual switches or switch templates.
         * An empty array will clear overrides.
         * 
         * @return builder
         * 
         */
        public Builder overrides(SwitchMtuOverrideArgs... overrides) {
            return overrides(List.of(overrides));
        }

        public SwitchMtuArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("SwitchMtuArgs", "networkId");
            }
            return $;
        }
    }

}
