// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchAccessPoliciesDot1x {
    /**
     * @return Supports either &#39;both&#39; or &#39;inbound&#39;. Set to &#39;inbound&#39; to allow unauthorized egress on the switchport. Set to &#39;both&#39; to control both traffic directions with authorization. Defaults to &#39;both&#39;
     * 
     */
    private @Nullable String controlDirection;

    private SwitchAccessPoliciesDot1x() {}
    /**
     * @return Supports either &#39;both&#39; or &#39;inbound&#39;. Set to &#39;inbound&#39; to allow unauthorized egress on the switchport. Set to &#39;both&#39; to control both traffic directions with authorization. Defaults to &#39;both&#39;
     * 
     */
    public Optional<String> controlDirection() {
        return Optional.ofNullable(this.controlDirection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchAccessPoliciesDot1x defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String controlDirection;
        public Builder() {}
        public Builder(SwitchAccessPoliciesDot1x defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlDirection = defaults.controlDirection;
        }

        @CustomType.Setter
        public Builder controlDirection(@Nullable String controlDirection) {

            this.controlDirection = controlDirection;
            return this;
        }
        public SwitchAccessPoliciesDot1x build() {
            final var _resultValue = new SwitchAccessPoliciesDot1x();
            _resultValue.controlDirection = controlDirection;
            return _resultValue;
        }
    }
}
