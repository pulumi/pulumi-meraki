// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCellularGatewayDhcpItem {
    /**
     * @return DHCP Lease time for all MG in the network.
     * 
     */
    private String dhcpLeaseTime;
    /**
     * @return List of fixed IPs representing the the DNS Name servers when the mode is &#39;custom&#39;.
     * 
     */
    private List<String> dnsCustomNameservers;
    /**
     * @return DNS name servers mode for all MG in the network.
     * 
     */
    private String dnsNameservers;

    private GetCellularGatewayDhcpItem() {}
    /**
     * @return DHCP Lease time for all MG in the network.
     * 
     */
    public String dhcpLeaseTime() {
        return this.dhcpLeaseTime;
    }
    /**
     * @return List of fixed IPs representing the the DNS Name servers when the mode is &#39;custom&#39;.
     * 
     */
    public List<String> dnsCustomNameservers() {
        return this.dnsCustomNameservers;
    }
    /**
     * @return DNS name servers mode for all MG in the network.
     * 
     */
    public String dnsNameservers() {
        return this.dnsNameservers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCellularGatewayDhcpItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dhcpLeaseTime;
        private List<String> dnsCustomNameservers;
        private String dnsNameservers;
        public Builder() {}
        public Builder(GetCellularGatewayDhcpItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dhcpLeaseTime = defaults.dhcpLeaseTime;
    	      this.dnsCustomNameservers = defaults.dnsCustomNameservers;
    	      this.dnsNameservers = defaults.dnsNameservers;
        }

        @CustomType.Setter
        public Builder dhcpLeaseTime(String dhcpLeaseTime) {
            if (dhcpLeaseTime == null) {
              throw new MissingRequiredPropertyException("GetCellularGatewayDhcpItem", "dhcpLeaseTime");
            }
            this.dhcpLeaseTime = dhcpLeaseTime;
            return this;
        }
        @CustomType.Setter
        public Builder dnsCustomNameservers(List<String> dnsCustomNameservers) {
            if (dnsCustomNameservers == null) {
              throw new MissingRequiredPropertyException("GetCellularGatewayDhcpItem", "dnsCustomNameservers");
            }
            this.dnsCustomNameservers = dnsCustomNameservers;
            return this;
        }
        public Builder dnsCustomNameservers(String... dnsCustomNameservers) {
            return dnsCustomNameservers(List.of(dnsCustomNameservers));
        }
        @CustomType.Setter
        public Builder dnsNameservers(String dnsNameservers) {
            if (dnsNameservers == null) {
              throw new MissingRequiredPropertyException("GetCellularGatewayDhcpItem", "dnsNameservers");
            }
            this.dnsNameservers = dnsNameservers;
            return this;
        }
        public GetCellularGatewayDhcpItem build() {
            final var _resultValue = new GetCellularGatewayDhcpItem();
            _resultValue.dhcpLeaseTime = dhcpLeaseTime;
            _resultValue.dnsCustomNameservers = dnsCustomNameservers;
            _resultValue.dnsNameservers = dnsNameservers;
            return _resultValue;
        }
    }
}
