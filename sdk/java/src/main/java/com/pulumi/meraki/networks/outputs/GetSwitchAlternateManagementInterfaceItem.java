// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetSwitchAlternateManagementInterfaceItemSwitch;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSwitchAlternateManagementInterfaceItem {
    /**
     * @return Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
     * 
     */
    private Boolean enabled;
    /**
     * @return Can be one or more of the following values: &#39;radius&#39;, &#39;snmp&#39; or &#39;syslog&#39;
     * 
     */
    private List<String> protocols;
    /**
     * @return Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put &#39;switches&#39; in the body when updating template networks. Also, an empty &#39;switches&#39; array will remove all previous assignments
     * 
     */
    private List<GetSwitchAlternateManagementInterfaceItemSwitch> switches;
    /**
     * @return Alternate management VLAN, must be between 1 and 4094
     * 
     */
    private Integer vlanId;

    private GetSwitchAlternateManagementInterfaceItem() {}
    /**
     * @return Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Can be one or more of the following values: &#39;radius&#39;, &#39;snmp&#39; or &#39;syslog&#39;
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    /**
     * @return Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put &#39;switches&#39; in the body when updating template networks. Also, an empty &#39;switches&#39; array will remove all previous assignments
     * 
     */
    public List<GetSwitchAlternateManagementInterfaceItemSwitch> switches() {
        return this.switches;
    }
    /**
     * @return Alternate management VLAN, must be between 1 and 4094
     * 
     */
    public Integer vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchAlternateManagementInterfaceItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private List<String> protocols;
        private List<GetSwitchAlternateManagementInterfaceItemSwitch> switches;
        private Integer vlanId;
        public Builder() {}
        public Builder(GetSwitchAlternateManagementInterfaceItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.protocols = defaults.protocols;
    	      this.switches = defaults.switches;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetSwitchAlternateManagementInterfaceItem", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            if (protocols == null) {
              throw new MissingRequiredPropertyException("GetSwitchAlternateManagementInterfaceItem", "protocols");
            }
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder switches(List<GetSwitchAlternateManagementInterfaceItemSwitch> switches) {
            if (switches == null) {
              throw new MissingRequiredPropertyException("GetSwitchAlternateManagementInterfaceItem", "switches");
            }
            this.switches = switches;
            return this;
        }
        public Builder switches(GetSwitchAlternateManagementInterfaceItemSwitch... switches) {
            return switches(List.of(switches));
        }
        @CustomType.Setter
        public Builder vlanId(Integer vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetSwitchAlternateManagementInterfaceItem", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public GetSwitchAlternateManagementInterfaceItem build() {
            final var _resultValue = new GetSwitchAlternateManagementInterfaceItem();
            _resultValue.enabled = enabled;
            _resultValue.protocols = protocols;
            _resultValue.switches = switches;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
