// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplianceVpnBgpItemNeighbor {
    private Boolean allowTransit;
    private Integer ebgpHoldTimer;
    private Integer ebgpMultihop;
    private String ip;
    private Integer receiveLimit;
    private Integer remoteAsNumber;

    private GetApplianceVpnBgpItemNeighbor() {}
    public Boolean allowTransit() {
        return this.allowTransit;
    }
    public Integer ebgpHoldTimer() {
        return this.ebgpHoldTimer;
    }
    public Integer ebgpMultihop() {
        return this.ebgpMultihop;
    }
    public String ip() {
        return this.ip;
    }
    public Integer receiveLimit() {
        return this.receiveLimit;
    }
    public Integer remoteAsNumber() {
        return this.remoteAsNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceVpnBgpItemNeighbor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowTransit;
        private Integer ebgpHoldTimer;
        private Integer ebgpMultihop;
        private String ip;
        private Integer receiveLimit;
        private Integer remoteAsNumber;
        public Builder() {}
        public Builder(GetApplianceVpnBgpItemNeighbor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTransit = defaults.allowTransit;
    	      this.ebgpHoldTimer = defaults.ebgpHoldTimer;
    	      this.ebgpMultihop = defaults.ebgpMultihop;
    	      this.ip = defaults.ip;
    	      this.receiveLimit = defaults.receiveLimit;
    	      this.remoteAsNumber = defaults.remoteAsNumber;
        }

        @CustomType.Setter
        public Builder allowTransit(Boolean allowTransit) {
            if (allowTransit == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "allowTransit");
            }
            this.allowTransit = allowTransit;
            return this;
        }
        @CustomType.Setter
        public Builder ebgpHoldTimer(Integer ebgpHoldTimer) {
            if (ebgpHoldTimer == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "ebgpHoldTimer");
            }
            this.ebgpHoldTimer = ebgpHoldTimer;
            return this;
        }
        @CustomType.Setter
        public Builder ebgpMultihop(Integer ebgpMultihop) {
            if (ebgpMultihop == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "ebgpMultihop");
            }
            this.ebgpMultihop = ebgpMultihop;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder receiveLimit(Integer receiveLimit) {
            if (receiveLimit == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "receiveLimit");
            }
            this.receiveLimit = receiveLimit;
            return this;
        }
        @CustomType.Setter
        public Builder remoteAsNumber(Integer remoteAsNumber) {
            if (remoteAsNumber == null) {
              throw new MissingRequiredPropertyException("GetApplianceVpnBgpItemNeighbor", "remoteAsNumber");
            }
            this.remoteAsNumber = remoteAsNumber;
            return this;
        }
        public GetApplianceVpnBgpItemNeighbor build() {
            final var _resultValue = new GetApplianceVpnBgpItemNeighbor();
            _resultValue.allowTransit = allowTransit;
            _resultValue.ebgpHoldTimer = ebgpHoldTimer;
            _resultValue.ebgpMultihop = ebgpMultihop;
            _resultValue.ip = ip;
            _resultValue.receiveLimit = receiveLimit;
            _resultValue.remoteAsNumber = remoteAsNumber;
            return _resultValue;
        }
    }
}
