// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.inputs.AdaptivePolicyPoliciesAclArgs;
import com.pulumi.meraki.organizations.inputs.AdaptivePolicyPoliciesDestinationGroupArgs;
import com.pulumi.meraki.organizations.inputs.AdaptivePolicyPoliciesSourceGroupArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdaptivePolicyPoliciesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdaptivePolicyPoliciesArgs Empty = new AdaptivePolicyPoliciesArgs();

    /**
     * An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
     * 
     */
    @Import(name="acls")
    private @Nullable Output<List<AdaptivePolicyPoliciesAclArgs>> acls;

    /**
     * @return An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
     * 
     */
    public Optional<Output<List<AdaptivePolicyPoliciesAclArgs>>> acls() {
        return Optional.ofNullable(this.acls);
    }

    /**
     * The destination adaptive policy group (requires one unique attribute)
     * 
     */
    @Import(name="destinationGroup")
    private @Nullable Output<AdaptivePolicyPoliciesDestinationGroupArgs> destinationGroup;

    /**
     * @return The destination adaptive policy group (requires one unique attribute)
     * 
     */
    public Optional<Output<AdaptivePolicyPoliciesDestinationGroupArgs>> destinationGroup() {
        return Optional.ofNullable(this.destinationGroup);
    }

    /**
     * The rule to apply if there is no matching ACL (default: &#34;default&#34;)
     * 
     */
    @Import(name="lastEntryRule")
    private @Nullable Output<String> lastEntryRule;

    /**
     * @return The rule to apply if there is no matching ACL (default: &#34;default&#34;)
     * 
     */
    public Optional<Output<String>> lastEntryRule() {
        return Optional.ofNullable(this.lastEntryRule);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * The source adaptive policy group (requires one unique attribute)
     * 
     */
    @Import(name="sourceGroup")
    private @Nullable Output<AdaptivePolicyPoliciesSourceGroupArgs> sourceGroup;

    /**
     * @return The source adaptive policy group (requires one unique attribute)
     * 
     */
    public Optional<Output<AdaptivePolicyPoliciesSourceGroupArgs>> sourceGroup() {
        return Optional.ofNullable(this.sourceGroup);
    }

    private AdaptivePolicyPoliciesArgs() {}

    private AdaptivePolicyPoliciesArgs(AdaptivePolicyPoliciesArgs $) {
        this.acls = $.acls;
        this.destinationGroup = $.destinationGroup;
        this.lastEntryRule = $.lastEntryRule;
        this.organizationId = $.organizationId;
        this.sourceGroup = $.sourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdaptivePolicyPoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdaptivePolicyPoliciesArgs $;

        public Builder() {
            $ = new AdaptivePolicyPoliciesArgs();
        }

        public Builder(AdaptivePolicyPoliciesArgs defaults) {
            $ = new AdaptivePolicyPoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acls An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
         * 
         * @return builder
         * 
         */
        public Builder acls(@Nullable Output<List<AdaptivePolicyPoliciesAclArgs>> acls) {
            $.acls = acls;
            return this;
        }

        /**
         * @param acls An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
         * 
         * @return builder
         * 
         */
        public Builder acls(List<AdaptivePolicyPoliciesAclArgs> acls) {
            return acls(Output.of(acls));
        }

        /**
         * @param acls An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
         * 
         * @return builder
         * 
         */
        public Builder acls(AdaptivePolicyPoliciesAclArgs... acls) {
            return acls(List.of(acls));
        }

        /**
         * @param destinationGroup The destination adaptive policy group (requires one unique attribute)
         * 
         * @return builder
         * 
         */
        public Builder destinationGroup(@Nullable Output<AdaptivePolicyPoliciesDestinationGroupArgs> destinationGroup) {
            $.destinationGroup = destinationGroup;
            return this;
        }

        /**
         * @param destinationGroup The destination adaptive policy group (requires one unique attribute)
         * 
         * @return builder
         * 
         */
        public Builder destinationGroup(AdaptivePolicyPoliciesDestinationGroupArgs destinationGroup) {
            return destinationGroup(Output.of(destinationGroup));
        }

        /**
         * @param lastEntryRule The rule to apply if there is no matching ACL (default: &#34;default&#34;)
         * 
         * @return builder
         * 
         */
        public Builder lastEntryRule(@Nullable Output<String> lastEntryRule) {
            $.lastEntryRule = lastEntryRule;
            return this;
        }

        /**
         * @param lastEntryRule The rule to apply if there is no matching ACL (default: &#34;default&#34;)
         * 
         * @return builder
         * 
         */
        public Builder lastEntryRule(String lastEntryRule) {
            return lastEntryRule(Output.of(lastEntryRule));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param sourceGroup The source adaptive policy group (requires one unique attribute)
         * 
         * @return builder
         * 
         */
        public Builder sourceGroup(@Nullable Output<AdaptivePolicyPoliciesSourceGroupArgs> sourceGroup) {
            $.sourceGroup = sourceGroup;
            return this;
        }

        /**
         * @param sourceGroup The source adaptive policy group (requires one unique attribute)
         * 
         * @return builder
         * 
         */
        public Builder sourceGroup(AdaptivePolicyPoliciesSourceGroupArgs sourceGroup) {
            return sourceGroup(Output.of(sourceGroup));
        }

        public AdaptivePolicyPoliciesArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("AdaptivePolicyPoliciesArgs", "organizationId");
            }
            return $;
        }
    }

}
