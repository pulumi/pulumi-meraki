// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetSummaryTopDevicesModelsByUsageItemUsage {
    /**
     * @return Average usage in megabytes
     * 
     */
    private Double average;
    /**
     * @return Total usage in megabytes
     * 
     */
    private Double total;

    private GetSummaryTopDevicesModelsByUsageItemUsage() {}
    /**
     * @return Average usage in megabytes
     * 
     */
    public Double average() {
        return this.average;
    }
    /**
     * @return Total usage in megabytes
     * 
     */
    public Double total() {
        return this.total;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSummaryTopDevicesModelsByUsageItemUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double average;
        private Double total;
        public Builder() {}
        public Builder(GetSummaryTopDevicesModelsByUsageItemUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.average = defaults.average;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder average(Double average) {
            if (average == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopDevicesModelsByUsageItemUsage", "average");
            }
            this.average = average;
            return this;
        }
        @CustomType.Setter
        public Builder total(Double total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetSummaryTopDevicesModelsByUsageItemUsage", "total");
            }
            this.total = total;
            return this;
        }
        public GetSummaryTopDevicesModelsByUsageItemUsage build() {
            final var _resultValue = new GetSummaryTopDevicesModelsByUsageItemUsage();
            _resultValue.average = average;
            _resultValue.total = total;
            return _resultValue;
        }
    }
}
