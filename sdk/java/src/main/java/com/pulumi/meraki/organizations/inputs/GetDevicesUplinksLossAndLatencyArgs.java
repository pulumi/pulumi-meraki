// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDevicesUplinksLossAndLatencyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDevicesUplinksLossAndLatencyArgs Empty = new GetDevicesUplinksLossAndLatencyArgs();

    /**
     * ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * organizationId path parameter. Organization ID
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
     * 
     */
    @Import(name="t0")
    private @Nullable Output<String> t0;

    /**
     * @return t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
     * 
     */
    public Optional<Output<String>> t0() {
        return Optional.ofNullable(this.t0);
    }

    /**
     * t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
     * 
     */
    @Import(name="t1")
    private @Nullable Output<String> t1;

    /**
     * @return t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
     * 
     */
    public Optional<Output<String>> t1() {
        return Optional.ofNullable(this.t1);
    }

    /**
     * timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
     * 
     */
    @Import(name="timespan")
    private @Nullable Output<Double> timespan;

    /**
     * @return timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
     * 
     */
    public Optional<Output<Double>> timespan() {
        return Optional.ofNullable(this.timespan);
    }

    /**
     * uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
     * 
     */
    @Import(name="uplink")
    private @Nullable Output<String> uplink;

    /**
     * @return uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
     * 
     */
    public Optional<Output<String>> uplink() {
        return Optional.ofNullable(this.uplink);
    }

    private GetDevicesUplinksLossAndLatencyArgs() {}

    private GetDevicesUplinksLossAndLatencyArgs(GetDevicesUplinksLossAndLatencyArgs $) {
        this.ip = $.ip;
        this.organizationId = $.organizationId;
        this.t0 = $.t0;
        this.t1 = $.t1;
        this.timespan = $.timespan;
        this.uplink = $.uplink;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDevicesUplinksLossAndLatencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDevicesUplinksLossAndLatencyArgs $;

        public Builder() {
            $ = new GetDevicesUplinksLossAndLatencyArgs();
        }

        public Builder(GetDevicesUplinksLossAndLatencyArgs defaults) {
            $ = new GetDevicesUplinksLossAndLatencyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip ip query parameter. Optional filter for a specific destination IP. Default will return all destination IPs.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId organizationId path parameter. Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(@Nullable Output<String> t0) {
            $.t0 = t0;
            return this;
        }

        /**
         * @param t0 t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
         * 
         * @return builder
         * 
         */
        public Builder t0(String t0) {
            return t0(Output.of(t0));
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
         * 
         * @return builder
         * 
         */
        public Builder t1(@Nullable Output<String> t1) {
            $.t1 = t1;
            return this;
        }

        /**
         * @param t1 t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
         * 
         * @return builder
         * 
         */
        public Builder t1(String t1) {
            return t1(Output.of(t1));
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder timespan(@Nullable Output<Double> timespan) {
            $.timespan = timespan;
            return this;
        }

        /**
         * @param timespan timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder timespan(Double timespan) {
            return timespan(Output.of(timespan));
        }

        /**
         * @param uplink uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
         * 
         * @return builder
         * 
         */
        public Builder uplink(@Nullable Output<String> uplink) {
            $.uplink = uplink;
            return this;
        }

        /**
         * @param uplink uplink query parameter. Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
         * 
         * @return builder
         * 
         */
        public Builder uplink(String uplink) {
            return uplink(Output.of(uplink));
        }

        public GetDevicesUplinksLossAndLatencyArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetDevicesUplinksLossAndLatencyArgs", "organizationId");
            }
            return $;
        }
    }

}
