// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebhooksPayloadTemplatesHeader {
    /**
     * @return The name of the header attribute
     * 
     */
    private @Nullable String name;
    /**
     * @return The value returned in the header attribute, in liquid template
     * 
     */
    private @Nullable String template;

    private WebhooksPayloadTemplatesHeader() {}
    /**
     * @return The name of the header attribute
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The value returned in the header attribute, in liquid template
     * 
     */
    public Optional<String> template() {
        return Optional.ofNullable(this.template);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhooksPayloadTemplatesHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable String template;
        public Builder() {}
        public Builder(WebhooksPayloadTemplatesHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder template(@Nullable String template) {

            this.template = template;
            return this;
        }
        public WebhooksPayloadTemplatesHeader build() {
            final var _resultValue = new WebhooksPayloadTemplatesHeader();
            _resultValue.name = name;
            _resultValue.template = template;
            return _resultValue;
        }
    }
}
