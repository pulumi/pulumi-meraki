// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsEapOverrideItemIdentity {
    /**
     * @return Maximum number of EAP retries.
     * 
     */
    private Integer retries;
    /**
     * @return EAP timeout in seconds.
     * 
     */
    private Integer timeout;

    private GetWirelessSsidsEapOverrideItemIdentity() {}
    /**
     * @return Maximum number of EAP retries.
     * 
     */
    public Integer retries() {
        return this.retries;
    }
    /**
     * @return EAP timeout in seconds.
     * 
     */
    public Integer timeout() {
        return this.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsEapOverrideItemIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer retries;
        private Integer timeout;
        public Builder() {}
        public Builder(GetWirelessSsidsEapOverrideItemIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retries = defaults.retries;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder retries(Integer retries) {
            if (retries == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsEapOverrideItemIdentity", "retries");
            }
            this.retries = retries;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsEapOverrideItemIdentity", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        public GetWirelessSsidsEapOverrideItemIdentity build() {
            final var _resultValue = new GetWirelessSsidsEapOverrideItemIdentity();
            _resultValue.retries = retries;
            _resultValue.timeout = timeout;
            return _resultValue;
        }
    }
}
