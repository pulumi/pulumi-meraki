// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.meraki.networks.outputs.ApplianceFirewallOneToOneNatRulesRuleAllowedInbound;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplianceFirewallOneToOneNatRulesRule {
    /**
     * @return The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
     * 
     */
    private @Nullable List<ApplianceFirewallOneToOneNatRulesRuleAllowedInbound> allowedInbounds;
    /**
     * @return The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     * 
     */
    private @Nullable String lanIp;
    /**
     * @return A descriptive name for the rule
     * 
     */
    private @Nullable String name;
    /**
     * @return The IP address that will be used to access the internal resource from the WAN
     * 
     */
    private @Nullable String publicIp;
    /**
     * @return The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
     * 
     */
    private @Nullable String uplink;

    private ApplianceFirewallOneToOneNatRulesRule() {}
    /**
     * @return The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
     * 
     */
    public List<ApplianceFirewallOneToOneNatRulesRuleAllowedInbound> allowedInbounds() {
        return this.allowedInbounds == null ? List.of() : this.allowedInbounds;
    }
    /**
     * @return The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     * 
     */
    public Optional<String> lanIp() {
        return Optional.ofNullable(this.lanIp);
    }
    /**
     * @return A descriptive name for the rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The IP address that will be used to access the internal resource from the WAN
     * 
     */
    public Optional<String> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }
    /**
     * @return The physical WAN interface on which the traffic will arrive (&#39;internet1&#39; or, if available, &#39;internet2&#39;)
     * 
     */
    public Optional<String> uplink() {
        return Optional.ofNullable(this.uplink);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplianceFirewallOneToOneNatRulesRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ApplianceFirewallOneToOneNatRulesRuleAllowedInbound> allowedInbounds;
        private @Nullable String lanIp;
        private @Nullable String name;
        private @Nullable String publicIp;
        private @Nullable String uplink;
        public Builder() {}
        public Builder(ApplianceFirewallOneToOneNatRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedInbounds = defaults.allowedInbounds;
    	      this.lanIp = defaults.lanIp;
    	      this.name = defaults.name;
    	      this.publicIp = defaults.publicIp;
    	      this.uplink = defaults.uplink;
        }

        @CustomType.Setter
        public Builder allowedInbounds(@Nullable List<ApplianceFirewallOneToOneNatRulesRuleAllowedInbound> allowedInbounds) {

            this.allowedInbounds = allowedInbounds;
            return this;
        }
        public Builder allowedInbounds(ApplianceFirewallOneToOneNatRulesRuleAllowedInbound... allowedInbounds) {
            return allowedInbounds(List.of(allowedInbounds));
        }
        @CustomType.Setter
        public Builder lanIp(@Nullable String lanIp) {

            this.lanIp = lanIp;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(@Nullable String publicIp) {

            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder uplink(@Nullable String uplink) {

            this.uplink = uplink;
            return this;
        }
        public ApplianceFirewallOneToOneNatRulesRule build() {
            final var _resultValue = new ApplianceFirewallOneToOneNatRulesRule();
            _resultValue.allowedInbounds = allowedInbounds;
            _resultValue.lanIp = lanIp;
            _resultValue.name = name;
            _resultValue.publicIp = publicIp;
            _resultValue.uplink = uplink;
            return _resultValue;
        }
    }
}
