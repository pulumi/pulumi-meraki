// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetActionBatchesItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetActionBatchesResult {
    /**
     * @return actionBatchId path parameter. Action batch ID
     * 
     */
    private @Nullable String actionBatchId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private GetActionBatchesItem item;
    /**
     * @return Array of ResponseOrganizationsGetOrganizationActionBatches
     * 
     */
    private List<GetActionBatchesItem> items;
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    private @Nullable String organizationId;
    /**
     * @return status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
     * 
     */
    private @Nullable String status;

    private GetActionBatchesResult() {}
    /**
     * @return actionBatchId path parameter. Action batch ID
     * 
     */
    public Optional<String> actionBatchId() {
        return Optional.ofNullable(this.actionBatchId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public GetActionBatchesItem item() {
        return this.item;
    }
    /**
     * @return Array of ResponseOrganizationsGetOrganizationActionBatches
     * 
     */
    public List<GetActionBatchesItem> items() {
        return this.items;
    }
    /**
     * @return organizationId path parameter. Organization ID
     * 
     */
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }
    /**
     * @return status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetActionBatchesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionBatchId;
        private String id;
        private GetActionBatchesItem item;
        private List<GetActionBatchesItem> items;
        private @Nullable String organizationId;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetActionBatchesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionBatchId = defaults.actionBatchId;
    	      this.id = defaults.id;
    	      this.item = defaults.item;
    	      this.items = defaults.items;
    	      this.organizationId = defaults.organizationId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder actionBatchId(@Nullable String actionBatchId) {

            this.actionBatchId = actionBatchId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetActionBatchesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder item(GetActionBatchesItem item) {
            if (item == null) {
              throw new MissingRequiredPropertyException("GetActionBatchesResult", "item");
            }
            this.item = item;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetActionBatchesItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetActionBatchesResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetActionBatchesItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder organizationId(@Nullable String organizationId) {

            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetActionBatchesResult build() {
            final var _resultValue = new GetActionBatchesResult();
            _resultValue.actionBatchId = actionBatchId;
            _resultValue.id = id;
            _resultValue.item = item;
            _resultValue.items = items;
            _resultValue.organizationId = organizationId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
