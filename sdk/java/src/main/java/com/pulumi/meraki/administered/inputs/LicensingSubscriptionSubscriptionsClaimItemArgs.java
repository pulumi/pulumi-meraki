// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.administered.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.administered.inputs.LicensingSubscriptionSubscriptionsClaimItemCountsArgs;
import com.pulumi.meraki.administered.inputs.LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicensingSubscriptionSubscriptionsClaimItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicensingSubscriptionSubscriptionsClaimItemArgs Empty = new LicensingSubscriptionSubscriptionsClaimItemArgs();

    /**
     * Numeric breakdown of network and entitlement counts
     * 
     */
    @Import(name="counts")
    private @Nullable Output<LicensingSubscriptionSubscriptionsClaimItemCountsArgs> counts;

    /**
     * @return Numeric breakdown of network and entitlement counts
     * 
     */
    public Optional<Output<LicensingSubscriptionSubscriptionsClaimItemCountsArgs>> counts() {
        return Optional.ofNullable(this.counts);
    }

    /**
     * Subscription description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Subscription description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Subscription expiration date
     * 
     */
    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    /**
     * @return Subscription expiration date
     * 
     */
    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * Entitlement info
     * 
     */
    @Import(name="entitlements")
    private @Nullable Output<List<LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs>> entitlements;

    /**
     * @return Entitlement info
     * 
     */
    public Optional<Output<List<LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs>>> entitlements() {
        return Optional.ofNullable(this.entitlements);
    }

    /**
     * Subscription name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Subscription name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Products the subscription has entitlements for
     * 
     */
    @Import(name="productTypes")
    private @Nullable Output<List<String>> productTypes;

    /**
     * @return Products the subscription has entitlements for
     * 
     */
    public Optional<Output<List<String>>> productTypes() {
        return Optional.ofNullable(this.productTypes);
    }

    /**
     * Subscription start date
     * 
     */
    @Import(name="startDate")
    private @Nullable Output<String> startDate;

    /**
     * @return Subscription start date
     * 
     */
    public Optional<Output<String>> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * Subscription status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Subscription status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Subscription&#39;s ID
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return Subscription&#39;s ID
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * Web order id
     * 
     */
    @Import(name="webOrderId")
    private @Nullable Output<String> webOrderId;

    /**
     * @return Web order id
     * 
     */
    public Optional<Output<String>> webOrderId() {
        return Optional.ofNullable(this.webOrderId);
    }

    private LicensingSubscriptionSubscriptionsClaimItemArgs() {}

    private LicensingSubscriptionSubscriptionsClaimItemArgs(LicensingSubscriptionSubscriptionsClaimItemArgs $) {
        this.counts = $.counts;
        this.description = $.description;
        this.endDate = $.endDate;
        this.entitlements = $.entitlements;
        this.name = $.name;
        this.productTypes = $.productTypes;
        this.startDate = $.startDate;
        this.status = $.status;
        this.subscriptionId = $.subscriptionId;
        this.webOrderId = $.webOrderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicensingSubscriptionSubscriptionsClaimItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicensingSubscriptionSubscriptionsClaimItemArgs $;

        public Builder() {
            $ = new LicensingSubscriptionSubscriptionsClaimItemArgs();
        }

        public Builder(LicensingSubscriptionSubscriptionsClaimItemArgs defaults) {
            $ = new LicensingSubscriptionSubscriptionsClaimItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param counts Numeric breakdown of network and entitlement counts
         * 
         * @return builder
         * 
         */
        public Builder counts(@Nullable Output<LicensingSubscriptionSubscriptionsClaimItemCountsArgs> counts) {
            $.counts = counts;
            return this;
        }

        /**
         * @param counts Numeric breakdown of network and entitlement counts
         * 
         * @return builder
         * 
         */
        public Builder counts(LicensingSubscriptionSubscriptionsClaimItemCountsArgs counts) {
            return counts(Output.of(counts));
        }

        /**
         * @param description Subscription description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Subscription description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param endDate Subscription expiration date
         * 
         * @return builder
         * 
         */
        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param endDate Subscription expiration date
         * 
         * @return builder
         * 
         */
        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        /**
         * @param entitlements Entitlement info
         * 
         * @return builder
         * 
         */
        public Builder entitlements(@Nullable Output<List<LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs>> entitlements) {
            $.entitlements = entitlements;
            return this;
        }

        /**
         * @param entitlements Entitlement info
         * 
         * @return builder
         * 
         */
        public Builder entitlements(List<LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs> entitlements) {
            return entitlements(Output.of(entitlements));
        }

        /**
         * @param entitlements Entitlement info
         * 
         * @return builder
         * 
         */
        public Builder entitlements(LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs... entitlements) {
            return entitlements(List.of(entitlements));
        }

        /**
         * @param name Subscription name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Subscription name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param productTypes Products the subscription has entitlements for
         * 
         * @return builder
         * 
         */
        public Builder productTypes(@Nullable Output<List<String>> productTypes) {
            $.productTypes = productTypes;
            return this;
        }

        /**
         * @param productTypes Products the subscription has entitlements for
         * 
         * @return builder
         * 
         */
        public Builder productTypes(List<String> productTypes) {
            return productTypes(Output.of(productTypes));
        }

        /**
         * @param productTypes Products the subscription has entitlements for
         * 
         * @return builder
         * 
         */
        public Builder productTypes(String... productTypes) {
            return productTypes(List.of(productTypes));
        }

        /**
         * @param startDate Subscription start date
         * 
         * @return builder
         * 
         */
        public Builder startDate(@Nullable Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate Subscription start date
         * 
         * @return builder
         * 
         */
        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        /**
         * @param status Subscription status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Subscription status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param subscriptionId Subscription&#39;s ID
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Subscription&#39;s ID
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param webOrderId Web order id
         * 
         * @return builder
         * 
         */
        public Builder webOrderId(@Nullable Output<String> webOrderId) {
            $.webOrderId = webOrderId;
            return this;
        }

        /**
         * @param webOrderId Web order id
         * 
         * @return builder
         * 
         */
        public Builder webOrderId(String webOrderId) {
            return webOrderId(Output.of(webOrderId));
        }

        public LicensingSubscriptionSubscriptionsClaimItemArgs build() {
            return $;
        }
    }

}
