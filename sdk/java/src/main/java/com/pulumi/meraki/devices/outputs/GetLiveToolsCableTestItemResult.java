// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.devices.outputs.GetLiveToolsCableTestItemResultPair;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLiveToolsCableTestItemResult {
    /**
     * @return If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    private String error;
    /**
     * @return Results for each twisted pair within the cable.
     * 
     */
    private List<GetLiveToolsCableTestItemResultPair> pairs;
    /**
     * @return The port for which the test was performed.
     * 
     */
    private String port;
    /**
     * @return Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    private Integer speedMbps;
    /**
     * @return The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    private String status;

    private GetLiveToolsCableTestItemResult() {}
    /**
     * @return If an error occurred during the cable test, the error message will be populated here.
     * 
     */
    public String error() {
        return this.error;
    }
    /**
     * @return Results for each twisted pair within the cable.
     * 
     */
    public List<GetLiveToolsCableTestItemResultPair> pairs() {
        return this.pairs;
    }
    /**
     * @return The port for which the test was performed.
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
     * 
     */
    public Integer speedMbps() {
        return this.speedMbps;
    }
    /**
     * @return The current status of the port. If the cable test is still being performed on the port, &#34;in-progress&#34; is used. If an error occurred during the cable test, &#34;error&#34; is used and the error property will be populated.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLiveToolsCableTestItemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String error;
        private List<GetLiveToolsCableTestItemResultPair> pairs;
        private String port;
        private Integer speedMbps;
        private String status;
        public Builder() {}
        public Builder(GetLiveToolsCableTestItemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.error = defaults.error;
    	      this.pairs = defaults.pairs;
    	      this.port = defaults.port;
    	      this.speedMbps = defaults.speedMbps;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder error(String error) {
            if (error == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemResult", "error");
            }
            this.error = error;
            return this;
        }
        @CustomType.Setter
        public Builder pairs(List<GetLiveToolsCableTestItemResultPair> pairs) {
            if (pairs == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemResult", "pairs");
            }
            this.pairs = pairs;
            return this;
        }
        public Builder pairs(GetLiveToolsCableTestItemResultPair... pairs) {
            return pairs(List.of(pairs));
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemResult", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder speedMbps(Integer speedMbps) {
            if (speedMbps == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemResult", "speedMbps");
            }
            this.speedMbps = speedMbps;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetLiveToolsCableTestItemResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetLiveToolsCableTestItemResult build() {
            final var _resultValue = new GetLiveToolsCableTestItemResult();
            _resultValue.error = error;
            _resultValue.pairs = pairs;
            _resultValue.port = port;
            _resultValue.speedMbps = speedMbps;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
