// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessFailedConnectionsItem {
    /**
     * @return Client Mac
     * 
     */
    private String clientMac;
    /**
     * @return The failed onboarding step. One of: assoc, auth, dhcp, dns.
     * 
     */
    private String failureStep;
    /**
     * @return Serial Number
     * 
     */
    private String serial;
    /**
     * @return SSID Number
     * 
     */
    private Integer ssidNumber;
    /**
     * @return The timestamp when the client mac failed
     * 
     */
    private String ts;
    /**
     * @return The failure type in the onboarding step
     * 
     */
    private String type;
    /**
     * @return LAN
     * 
     */
    private Integer vlan;

    private GetWirelessFailedConnectionsItem() {}
    /**
     * @return Client Mac
     * 
     */
    public String clientMac() {
        return this.clientMac;
    }
    /**
     * @return The failed onboarding step. One of: assoc, auth, dhcp, dns.
     * 
     */
    public String failureStep() {
        return this.failureStep;
    }
    /**
     * @return Serial Number
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return SSID Number
     * 
     */
    public Integer ssidNumber() {
        return this.ssidNumber;
    }
    /**
     * @return The timestamp when the client mac failed
     * 
     */
    public String ts() {
        return this.ts;
    }
    /**
     * @return The failure type in the onboarding step
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return LAN
     * 
     */
    public Integer vlan() {
        return this.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessFailedConnectionsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientMac;
        private String failureStep;
        private String serial;
        private Integer ssidNumber;
        private String ts;
        private String type;
        private Integer vlan;
        public Builder() {}
        public Builder(GetWirelessFailedConnectionsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientMac = defaults.clientMac;
    	      this.failureStep = defaults.failureStep;
    	      this.serial = defaults.serial;
    	      this.ssidNumber = defaults.ssidNumber;
    	      this.ts = defaults.ts;
    	      this.type = defaults.type;
    	      this.vlan = defaults.vlan;
        }

        @CustomType.Setter
        public Builder clientMac(String clientMac) {
            if (clientMac == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "clientMac");
            }
            this.clientMac = clientMac;
            return this;
        }
        @CustomType.Setter
        public Builder failureStep(String failureStep) {
            if (failureStep == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "failureStep");
            }
            this.failureStep = failureStep;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder ssidNumber(Integer ssidNumber) {
            if (ssidNumber == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "ssidNumber");
            }
            this.ssidNumber = ssidNumber;
            return this;
        }
        @CustomType.Setter
        public Builder ts(String ts) {
            if (ts == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "ts");
            }
            this.ts = ts;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vlan(Integer vlan) {
            if (vlan == null) {
              throw new MissingRequiredPropertyException("GetWirelessFailedConnectionsItem", "vlan");
            }
            this.vlan = vlan;
            return this;
        }
        public GetWirelessFailedConnectionsItem build() {
            final var _resultValue = new GetWirelessFailedConnectionsItem();
            _resultValue.clientMac = clientMac;
            _resultValue.failureStep = failureStep;
            _resultValue.serial = serial;
            _resultValue.ssidNumber = ssidNumber;
            _resultValue.ts = ts;
            _resultValue.type = type;
            _resultValue.vlan = vlan;
            return _resultValue;
        }
    }
}
