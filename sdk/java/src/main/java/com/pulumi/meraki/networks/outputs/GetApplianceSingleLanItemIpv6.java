// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetApplianceSingleLanItemIpv6PrefixAssignment;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceSingleLanItemIpv6 {
    /**
     * @return Enable IPv6 on single LAN
     * 
     */
    private Boolean enabled;
    /**
     * @return Prefix assignments on the single LAN
     * 
     */
    private List<GetApplianceSingleLanItemIpv6PrefixAssignment> prefixAssignments;

    private GetApplianceSingleLanItemIpv6() {}
    /**
     * @return Enable IPv6 on single LAN
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Prefix assignments on the single LAN
     * 
     */
    public List<GetApplianceSingleLanItemIpv6PrefixAssignment> prefixAssignments() {
        return this.prefixAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceSingleLanItemIpv6 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private List<GetApplianceSingleLanItemIpv6PrefixAssignment> prefixAssignments;
        public Builder() {}
        public Builder(GetApplianceSingleLanItemIpv6 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.prefixAssignments = defaults.prefixAssignments;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetApplianceSingleLanItemIpv6", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder prefixAssignments(List<GetApplianceSingleLanItemIpv6PrefixAssignment> prefixAssignments) {
            if (prefixAssignments == null) {
              throw new MissingRequiredPropertyException("GetApplianceSingleLanItemIpv6", "prefixAssignments");
            }
            this.prefixAssignments = prefixAssignments;
            return this;
        }
        public Builder prefixAssignments(GetApplianceSingleLanItemIpv6PrefixAssignment... prefixAssignments) {
            return prefixAssignments(List.of(prefixAssignments));
        }
        public GetApplianceSingleLanItemIpv6 build() {
            final var _resultValue = new GetApplianceSingleLanItemIpv6();
            _resultValue.enabled = enabled;
            _resultValue.prefixAssignments = prefixAssignments;
            return _resultValue;
        }
    }
}
