// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloneItemLicensingArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloneItemLicensingArgs Empty = new CloneItemLicensingArgs();

    /**
     * Organization licensing model. Can be &#39;co-term&#39;, &#39;per-device&#39;, or &#39;subscription&#39;.
     * 
     */
    @Import(name="model")
    private @Nullable Output<String> model;

    /**
     * @return Organization licensing model. Can be &#39;co-term&#39;, &#39;per-device&#39;, or &#39;subscription&#39;.
     * 
     */
    public Optional<Output<String>> model() {
        return Optional.ofNullable(this.model);
    }

    private CloneItemLicensingArgs() {}

    private CloneItemLicensingArgs(CloneItemLicensingArgs $) {
        this.model = $.model;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloneItemLicensingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloneItemLicensingArgs $;

        public Builder() {
            $ = new CloneItemLicensingArgs();
        }

        public Builder(CloneItemLicensingArgs defaults) {
            $ = new CloneItemLicensingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param model Organization licensing model. Can be &#39;co-term&#39;, &#39;per-device&#39;, or &#39;subscription&#39;.
         * 
         * @return builder
         * 
         */
        public Builder model(@Nullable Output<String> model) {
            $.model = model;
            return this;
        }

        /**
         * @param model Organization licensing model. Can be &#39;co-term&#39;, &#39;per-device&#39;, or &#39;subscription&#39;.
         * 
         * @return builder
         * 
         */
        public Builder model(String model) {
            return model(Output.of(model));
        }

        public CloneItemLicensingArgs build() {
            return $;
        }
    }

}
