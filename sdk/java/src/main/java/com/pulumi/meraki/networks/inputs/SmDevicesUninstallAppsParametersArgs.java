// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmDevicesUninstallAppsParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final SmDevicesUninstallAppsParametersArgs Empty = new SmDevicesUninstallAppsParametersArgs();

    /**
     * ids of applications to be uninstalled
     * 
     */
    @Import(name="appIds")
    private @Nullable Output<List<String>> appIds;

    /**
     * @return ids of applications to be uninstalled
     * 
     */
    public Optional<Output<List<String>>> appIds() {
        return Optional.ofNullable(this.appIds);
    }

    private SmDevicesUninstallAppsParametersArgs() {}

    private SmDevicesUninstallAppsParametersArgs(SmDevicesUninstallAppsParametersArgs $) {
        this.appIds = $.appIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmDevicesUninstallAppsParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmDevicesUninstallAppsParametersArgs $;

        public Builder() {
            $ = new SmDevicesUninstallAppsParametersArgs();
        }

        public Builder(SmDevicesUninstallAppsParametersArgs defaults) {
            $ = new SmDevicesUninstallAppsParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appIds ids of applications to be uninstalled
         * 
         * @return builder
         * 
         */
        public Builder appIds(@Nullable Output<List<String>> appIds) {
            $.appIds = appIds;
            return this;
        }

        /**
         * @param appIds ids of applications to be uninstalled
         * 
         * @return builder
         * 
         */
        public Builder appIds(List<String> appIds) {
            return appIds(Output.of(appIds));
        }

        /**
         * @param appIds ids of applications to be uninstalled
         * 
         * @return builder
         * 
         */
        public Builder appIds(String... appIds) {
            return appIds(List.of(appIds));
        }

        public SmDevicesUninstallAppsParametersArgs build() {
            return $;
        }
    }

}
