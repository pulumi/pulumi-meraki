// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetSensorReadingsHistoryItemTemperature {
    /**
     * @return Temperature reading in degrees Celsius.
     * 
     */
    private Double celsius;
    /**
     * @return Temperature reading in degrees Fahrenheit.
     * 
     */
    private Double fahrenheit;

    private GetSensorReadingsHistoryItemTemperature() {}
    /**
     * @return Temperature reading in degrees Celsius.
     * 
     */
    public Double celsius() {
        return this.celsius;
    }
    /**
     * @return Temperature reading in degrees Fahrenheit.
     * 
     */
    public Double fahrenheit() {
        return this.fahrenheit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensorReadingsHistoryItemTemperature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double celsius;
        private Double fahrenheit;
        public Builder() {}
        public Builder(GetSensorReadingsHistoryItemTemperature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.celsius = defaults.celsius;
    	      this.fahrenheit = defaults.fahrenheit;
        }

        @CustomType.Setter
        public Builder celsius(Double celsius) {
            if (celsius == null) {
              throw new MissingRequiredPropertyException("GetSensorReadingsHistoryItemTemperature", "celsius");
            }
            this.celsius = celsius;
            return this;
        }
        @CustomType.Setter
        public Builder fahrenheit(Double fahrenheit) {
            if (fahrenheit == null) {
              throw new MissingRequiredPropertyException("GetSensorReadingsHistoryItemTemperature", "fahrenheit");
            }
            this.fahrenheit = fahrenheit;
            return this;
        }
        public GetSensorReadingsHistoryItemTemperature build() {
            final var _resultValue = new GetSensorReadingsHistoryItemTemperature();
            _resultValue.celsius = celsius;
            _resultValue.fahrenheit = fahrenheit;
            return _resultValue;
        }
    }
}
