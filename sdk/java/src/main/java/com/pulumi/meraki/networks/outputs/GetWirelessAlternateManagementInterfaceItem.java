// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetWirelessAlternateManagementInterfaceItemAccessPoint;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWirelessAlternateManagementInterfaceItem {
    private List<GetWirelessAlternateManagementInterfaceItemAccessPoint> accessPoints;
    private Boolean enabled;
    private List<String> protocols;
    private Integer vlanId;

    private GetWirelessAlternateManagementInterfaceItem() {}
    public List<GetWirelessAlternateManagementInterfaceItemAccessPoint> accessPoints() {
        return this.accessPoints;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public List<String> protocols() {
        return this.protocols;
    }
    public Integer vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessAlternateManagementInterfaceItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetWirelessAlternateManagementInterfaceItemAccessPoint> accessPoints;
        private Boolean enabled;
        private List<String> protocols;
        private Integer vlanId;
        public Builder() {}
        public Builder(GetWirelessAlternateManagementInterfaceItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPoints = defaults.accessPoints;
    	      this.enabled = defaults.enabled;
    	      this.protocols = defaults.protocols;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder accessPoints(List<GetWirelessAlternateManagementInterfaceItemAccessPoint> accessPoints) {
            if (accessPoints == null) {
              throw new MissingRequiredPropertyException("GetWirelessAlternateManagementInterfaceItem", "accessPoints");
            }
            this.accessPoints = accessPoints;
            return this;
        }
        public Builder accessPoints(GetWirelessAlternateManagementInterfaceItemAccessPoint... accessPoints) {
            return accessPoints(List.of(accessPoints));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetWirelessAlternateManagementInterfaceItem", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            if (protocols == null) {
              throw new MissingRequiredPropertyException("GetWirelessAlternateManagementInterfaceItem", "protocols");
            }
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder vlanId(Integer vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetWirelessAlternateManagementInterfaceItem", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public GetWirelessAlternateManagementInterfaceItem build() {
            final var _resultValue = new GetWirelessAlternateManagementInterfaceItem();
            _resultValue.accessPoints = accessPoints;
            _resultValue.enabled = enabled;
            _resultValue.protocols = protocols;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
