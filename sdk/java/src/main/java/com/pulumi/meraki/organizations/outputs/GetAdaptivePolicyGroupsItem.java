// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.organizations.outputs.GetAdaptivePolicyGroupsItemPolicyObject;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAdaptivePolicyGroupsItem {
    private String createdAt;
    private String description;
    private String groupId;
    private Boolean isDefaultGroup;
    private String name;
    private List<GetAdaptivePolicyGroupsItemPolicyObject> policyObjects;
    private List<String> requiredIpMappings;
    private Integer sgt;
    private String updatedAt;

    private GetAdaptivePolicyGroupsItem() {}
    public String createdAt() {
        return this.createdAt;
    }
    public String description() {
        return this.description;
    }
    public String groupId() {
        return this.groupId;
    }
    public Boolean isDefaultGroup() {
        return this.isDefaultGroup;
    }
    public String name() {
        return this.name;
    }
    public List<GetAdaptivePolicyGroupsItemPolicyObject> policyObjects() {
        return this.policyObjects;
    }
    public List<String> requiredIpMappings() {
        return this.requiredIpMappings;
    }
    public Integer sgt() {
        return this.sgt;
    }
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdaptivePolicyGroupsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String description;
        private String groupId;
        private Boolean isDefaultGroup;
        private String name;
        private List<GetAdaptivePolicyGroupsItemPolicyObject> policyObjects;
        private List<String> requiredIpMappings;
        private Integer sgt;
        private String updatedAt;
        public Builder() {}
        public Builder(GetAdaptivePolicyGroupsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.groupId = defaults.groupId;
    	      this.isDefaultGroup = defaults.isDefaultGroup;
    	      this.name = defaults.name;
    	      this.policyObjects = defaults.policyObjects;
    	      this.requiredIpMappings = defaults.requiredIpMappings;
    	      this.sgt = defaults.sgt;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder isDefaultGroup(Boolean isDefaultGroup) {
            if (isDefaultGroup == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "isDefaultGroup");
            }
            this.isDefaultGroup = isDefaultGroup;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyObjects(List<GetAdaptivePolicyGroupsItemPolicyObject> policyObjects) {
            if (policyObjects == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "policyObjects");
            }
            this.policyObjects = policyObjects;
            return this;
        }
        public Builder policyObjects(GetAdaptivePolicyGroupsItemPolicyObject... policyObjects) {
            return policyObjects(List.of(policyObjects));
        }
        @CustomType.Setter
        public Builder requiredIpMappings(List<String> requiredIpMappings) {
            if (requiredIpMappings == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "requiredIpMappings");
            }
            this.requiredIpMappings = requiredIpMappings;
            return this;
        }
        public Builder requiredIpMappings(String... requiredIpMappings) {
            return requiredIpMappings(List.of(requiredIpMappings));
        }
        @CustomType.Setter
        public Builder sgt(Integer sgt) {
            if (sgt == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "sgt");
            }
            this.sgt = sgt;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetAdaptivePolicyGroupsItem", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetAdaptivePolicyGroupsItem build() {
            final var _resultValue = new GetAdaptivePolicyGroupsItem();
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.groupId = groupId;
            _resultValue.isDefaultGroup = isDefaultGroup;
            _resultValue.name = name;
            _resultValue.policyObjects = policyObjects;
            _resultValue.requiredIpMappings = requiredIpMappings;
            _resultValue.sgt = sgt;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
