// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.meraki.devices.inputs.WirelessRadioSettingsFiveGhzSettingsArgs;
import com.pulumi.meraki.devices.inputs.WirelessRadioSettingsTwoFourGhzSettingsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessRadioSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final WirelessRadioSettingsState Empty = new WirelessRadioSettingsState();

    /**
     * Manual radio settings for 5 GHz.
     * 
     */
    @Import(name="fiveGhzSettings")
    private @Nullable Output<WirelessRadioSettingsFiveGhzSettingsArgs> fiveGhzSettings;

    /**
     * @return Manual radio settings for 5 GHz.
     * 
     */
    public Optional<Output<WirelessRadioSettingsFiveGhzSettingsArgs>> fiveGhzSettings() {
        return Optional.ofNullable(this.fiveGhzSettings);
    }

    /**
     * The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
     * 
     */
    @Import(name="rfProfileId")
    private @Nullable Output<String> rfProfileId;

    /**
     * @return The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
     * 
     */
    public Optional<Output<String>> rfProfileId() {
        return Optional.ofNullable(this.rfProfileId);
    }

    /**
     * serial path parameter.
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return serial path parameter.
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * Manual radio settings for 2.4 GHz.
     * 
     */
    @Import(name="twoFourGhzSettings")
    private @Nullable Output<WirelessRadioSettingsTwoFourGhzSettingsArgs> twoFourGhzSettings;

    /**
     * @return Manual radio settings for 2.4 GHz.
     * 
     */
    public Optional<Output<WirelessRadioSettingsTwoFourGhzSettingsArgs>> twoFourGhzSettings() {
        return Optional.ofNullable(this.twoFourGhzSettings);
    }

    private WirelessRadioSettingsState() {}

    private WirelessRadioSettingsState(WirelessRadioSettingsState $) {
        this.fiveGhzSettings = $.fiveGhzSettings;
        this.rfProfileId = $.rfProfileId;
        this.serial = $.serial;
        this.twoFourGhzSettings = $.twoFourGhzSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessRadioSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessRadioSettingsState $;

        public Builder() {
            $ = new WirelessRadioSettingsState();
        }

        public Builder(WirelessRadioSettingsState defaults) {
            $ = new WirelessRadioSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fiveGhzSettings Manual radio settings for 5 GHz.
         * 
         * @return builder
         * 
         */
        public Builder fiveGhzSettings(@Nullable Output<WirelessRadioSettingsFiveGhzSettingsArgs> fiveGhzSettings) {
            $.fiveGhzSettings = fiveGhzSettings;
            return this;
        }

        /**
         * @param fiveGhzSettings Manual radio settings for 5 GHz.
         * 
         * @return builder
         * 
         */
        public Builder fiveGhzSettings(WirelessRadioSettingsFiveGhzSettingsArgs fiveGhzSettings) {
            return fiveGhzSettings(Output.of(fiveGhzSettings));
        }

        /**
         * @param rfProfileId The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
         * 
         * @return builder
         * 
         */
        public Builder rfProfileId(@Nullable Output<String> rfProfileId) {
            $.rfProfileId = rfProfileId;
            return this;
        }

        /**
         * @param rfProfileId The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
         * 
         * @return builder
         * 
         */
        public Builder rfProfileId(String rfProfileId) {
            return rfProfileId(Output.of(rfProfileId));
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial serial path parameter.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param twoFourGhzSettings Manual radio settings for 2.4 GHz.
         * 
         * @return builder
         * 
         */
        public Builder twoFourGhzSettings(@Nullable Output<WirelessRadioSettingsTwoFourGhzSettingsArgs> twoFourGhzSettings) {
            $.twoFourGhzSettings = twoFourGhzSettings;
            return this;
        }

        /**
         * @param twoFourGhzSettings Manual radio settings for 2.4 GHz.
         * 
         * @return builder
         * 
         */
        public Builder twoFourGhzSettings(WirelessRadioSettingsTwoFourGhzSettingsArgs twoFourGhzSettings) {
            return twoFourGhzSettings(Output.of(twoFourGhzSettings));
        }

        public WirelessRadioSettingsState build() {
            return $;
        }
    }

}
