// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.meraki.Utilities;
import com.pulumi.meraki.networks.AppliancePortsArgs;
import com.pulumi.meraki.networks.inputs.AppliancePortsState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.meraki.networks.AppliancePorts;
 * import com.pulumi.meraki.networks.AppliancePortsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AppliancePorts("example", AppliancePortsArgs.builder()
 *             .accessPolicy("open")
 *             .allowedVlans("all")
 *             .dropUntaggedTraffic(false)
 *             .enabled(true)
 *             .networkId("string")
 *             .portId("string")
 *             .type("access")
 *             .vlan(3)
 *             .build());
 * 
 *         ctx.export("merakiNetworksAppliancePortsExample", example);
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import meraki:networks/appliancePorts:AppliancePorts example &#34;network_id,port_id&#34;
 * ```
 * 
 */
@ResourceType(type="meraki:networks/appliancePorts:AppliancePorts")
public class AppliancePorts extends com.pulumi.resources.CustomResource {
    /**
     * The name of the policy. Only applicable to Access ports.
     * 
     */
    @Export(name="accessPolicy", refs={String.class}, tree="[0]")
    private Output<String> accessPolicy;

    /**
     * @return The name of the policy. Only applicable to Access ports.
     * 
     */
    public Output<String> accessPolicy() {
        return this.accessPolicy;
    }
    /**
     * Comma-delimited list of the VLAN ID&#39;s allowed on the port, or &#39;all&#39; to permit all VLAN&#39;s on the port.
     * 
     */
    @Export(name="allowedVlans", refs={String.class}, tree="[0]")
    private Output<String> allowedVlans;

    /**
     * @return Comma-delimited list of the VLAN ID&#39;s allowed on the port, or &#39;all&#39; to permit all VLAN&#39;s on the port.
     * 
     */
    public Output<String> allowedVlans() {
        return this.allowedVlans;
    }
    /**
     * Whether the trunk port can drop all untagged traffic.
     * 
     */
    @Export(name="dropUntaggedTraffic", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dropUntaggedTraffic;

    /**
     * @return Whether the trunk port can drop all untagged traffic.
     * 
     */
    public Output<Boolean> dropUntaggedTraffic() {
        return this.dropUntaggedTraffic;
    }
    /**
     * The status of the port
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return The status of the port
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * networkId path parameter. Network ID
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * Number of the port
     * 
     */
    @Export(name="number", refs={Integer.class}, tree="[0]")
    private Output<Integer> number;

    /**
     * @return Number of the port
     * 
     */
    public Output<Integer> number() {
        return this.number;
    }
    /**
     * portId path parameter. Port ID
     * 
     */
    @Export(name="portId", refs={String.class}, tree="[0]")
    private Output<String> portId;

    /**
     * @return portId path parameter. Port ID
     * 
     */
    public Output<String> portId() {
        return this.portId;
    }
    /**
     * The type of the port: &#39;access&#39; or &#39;trunk&#39;.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the port: &#39;access&#39; or &#39;trunk&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
     * 
     */
    @Export(name="vlan", refs={Integer.class}, tree="[0]")
    private Output<Integer> vlan;

    /**
     * @return Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
     * 
     */
    public Output<Integer> vlan() {
        return this.vlan;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppliancePorts(java.lang.String name) {
        this(name, AppliancePortsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppliancePorts(java.lang.String name, AppliancePortsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppliancePorts(java.lang.String name, AppliancePortsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/appliancePorts:AppliancePorts", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppliancePorts(java.lang.String name, Output<java.lang.String> id, @Nullable AppliancePortsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("meraki:networks/appliancePorts:AppliancePorts", name, state, makeResourceOptions(options, id), false);
    }

    private static AppliancePortsArgs makeArgs(AppliancePortsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppliancePortsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-meraki")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppliancePorts get(java.lang.String name, Output<java.lang.String> id, @Nullable AppliancePortsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppliancePorts(name, id, state, options);
    }
}
