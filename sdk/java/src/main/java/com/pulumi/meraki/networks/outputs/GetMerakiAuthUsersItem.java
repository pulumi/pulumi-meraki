// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.outputs.GetMerakiAuthUsersItemAuthorization;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMerakiAuthUsersItem {
    /**
     * @return Authorization type for user.
     * 
     */
    private String accountType;
    /**
     * @return User authorization info
     * 
     */
    private List<GetMerakiAuthUsersItemAuthorization> authorizations;
    /**
     * @return Creation time of the user
     * 
     */
    private String createdAt;
    /**
     * @return Email address of the user
     * 
     */
    private String email;
    /**
     * @return Meraki auth user id
     * 
     */
    private String id;
    /**
     * @return Whether or not the user is a Dashboard administrator
     * 
     */
    private Boolean isAdmin;
    /**
     * @return Name of the user
     * 
     */
    private String name;

    private GetMerakiAuthUsersItem() {}
    /**
     * @return Authorization type for user.
     * 
     */
    public String accountType() {
        return this.accountType;
    }
    /**
     * @return User authorization info
     * 
     */
    public List<GetMerakiAuthUsersItemAuthorization> authorizations() {
        return this.authorizations;
    }
    /**
     * @return Creation time of the user
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Email address of the user
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return Meraki auth user id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether or not the user is a Dashboard administrator
     * 
     */
    public Boolean isAdmin() {
        return this.isAdmin;
    }
    /**
     * @return Name of the user
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMerakiAuthUsersItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountType;
        private List<GetMerakiAuthUsersItemAuthorization> authorizations;
        private String createdAt;
        private String email;
        private String id;
        private Boolean isAdmin;
        private String name;
        public Builder() {}
        public Builder(GetMerakiAuthUsersItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountType = defaults.accountType;
    	      this.authorizations = defaults.authorizations;
    	      this.createdAt = defaults.createdAt;
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.isAdmin = defaults.isAdmin;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder accountType(String accountType) {
            if (accountType == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "accountType");
            }
            this.accountType = accountType;
            return this;
        }
        @CustomType.Setter
        public Builder authorizations(List<GetMerakiAuthUsersItemAuthorization> authorizations) {
            if (authorizations == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "authorizations");
            }
            this.authorizations = authorizations;
            return this;
        }
        public Builder authorizations(GetMerakiAuthUsersItemAuthorization... authorizations) {
            return authorizations(List.of(authorizations));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAdmin(Boolean isAdmin) {
            if (isAdmin == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "isAdmin");
            }
            this.isAdmin = isAdmin;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMerakiAuthUsersItem", "name");
            }
            this.name = name;
            return this;
        }
        public GetMerakiAuthUsersItem build() {
            final var _resultValue = new GetMerakiAuthUsersItem();
            _resultValue.accountType = accountType;
            _resultValue.authorizations = authorizations;
            _resultValue.createdAt = createdAt;
            _resultValue.email = email;
            _resultValue.id = id;
            _resultValue.isAdmin = isAdmin;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
