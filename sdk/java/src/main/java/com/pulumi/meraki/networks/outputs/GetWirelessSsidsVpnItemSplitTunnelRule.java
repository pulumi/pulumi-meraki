// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWirelessSsidsVpnItemSplitTunnelRule {
    private String comment;
    private String destCidr;
    private String destPort;
    private String policy;
    private String protocol;

    private GetWirelessSsidsVpnItemSplitTunnelRule() {}
    public String comment() {
        return this.comment;
    }
    public String destCidr() {
        return this.destCidr;
    }
    public String destPort() {
        return this.destPort;
    }
    public String policy() {
        return this.policy;
    }
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWirelessSsidsVpnItemSplitTunnelRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String destCidr;
        private String destPort;
        private String policy;
        private String protocol;
        public Builder() {}
        public Builder(GetWirelessSsidsVpnItemSplitTunnelRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.destCidr = defaults.destCidr;
    	      this.destPort = defaults.destPort;
    	      this.policy = defaults.policy;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsVpnItemSplitTunnelRule", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder destCidr(String destCidr) {
            if (destCidr == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsVpnItemSplitTunnelRule", "destCidr");
            }
            this.destCidr = destCidr;
            return this;
        }
        @CustomType.Setter
        public Builder destPort(String destPort) {
            if (destPort == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsVpnItemSplitTunnelRule", "destPort");
            }
            this.destPort = destPort;
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsVpnItemSplitTunnelRule", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetWirelessSsidsVpnItemSplitTunnelRule", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetWirelessSsidsVpnItemSplitTunnelRule build() {
            final var _resultValue = new GetWirelessSsidsVpnItemSplitTunnelRule();
            _resultValue.comment = comment;
            _resultValue.destCidr = destCidr;
            _resultValue.destPort = destPort;
            _resultValue.policy = policy;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
