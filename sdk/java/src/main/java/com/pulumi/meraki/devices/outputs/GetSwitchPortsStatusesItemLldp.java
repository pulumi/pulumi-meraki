// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSwitchPortsStatusesItemLldp {
    /**
     * @return The device&#39;s chassis ID.
     * 
     */
    private String chassisId;
    /**
     * @return The device&#39;s management IP.
     * 
     */
    private String managementAddress;
    /**
     * @return The device&#39;s management VLAN.
     * 
     */
    private Integer managementVlan;
    /**
     * @return Description of the port from which the LLDP packet was sent.
     * 
     */
    private String portDescription;
    /**
     * @return Identifies the port from which the LLDP packet was sent
     * 
     */
    private String portId;
    /**
     * @return The port&#39;s VLAN.
     * 
     */
    private Integer portVlan;
    /**
     * @return Identifies the device type, which indicates the functional capabilities of the device.
     * 
     */
    private String systemCapabilities;
    /**
     * @return The device&#39;s system description.
     * 
     */
    private String systemDescription;
    /**
     * @return The device&#39;s system name.
     * 
     */
    private String systemName;

    private GetSwitchPortsStatusesItemLldp() {}
    /**
     * @return The device&#39;s chassis ID.
     * 
     */
    public String chassisId() {
        return this.chassisId;
    }
    /**
     * @return The device&#39;s management IP.
     * 
     */
    public String managementAddress() {
        return this.managementAddress;
    }
    /**
     * @return The device&#39;s management VLAN.
     * 
     */
    public Integer managementVlan() {
        return this.managementVlan;
    }
    /**
     * @return Description of the port from which the LLDP packet was sent.
     * 
     */
    public String portDescription() {
        return this.portDescription;
    }
    /**
     * @return Identifies the port from which the LLDP packet was sent
     * 
     */
    public String portId() {
        return this.portId;
    }
    /**
     * @return The port&#39;s VLAN.
     * 
     */
    public Integer portVlan() {
        return this.portVlan;
    }
    /**
     * @return Identifies the device type, which indicates the functional capabilities of the device.
     * 
     */
    public String systemCapabilities() {
        return this.systemCapabilities;
    }
    /**
     * @return The device&#39;s system description.
     * 
     */
    public String systemDescription() {
        return this.systemDescription;
    }
    /**
     * @return The device&#39;s system name.
     * 
     */
    public String systemName() {
        return this.systemName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchPortsStatusesItemLldp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chassisId;
        private String managementAddress;
        private Integer managementVlan;
        private String portDescription;
        private String portId;
        private Integer portVlan;
        private String systemCapabilities;
        private String systemDescription;
        private String systemName;
        public Builder() {}
        public Builder(GetSwitchPortsStatusesItemLldp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chassisId = defaults.chassisId;
    	      this.managementAddress = defaults.managementAddress;
    	      this.managementVlan = defaults.managementVlan;
    	      this.portDescription = defaults.portDescription;
    	      this.portId = defaults.portId;
    	      this.portVlan = defaults.portVlan;
    	      this.systemCapabilities = defaults.systemCapabilities;
    	      this.systemDescription = defaults.systemDescription;
    	      this.systemName = defaults.systemName;
        }

        @CustomType.Setter
        public Builder chassisId(String chassisId) {
            if (chassisId == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "chassisId");
            }
            this.chassisId = chassisId;
            return this;
        }
        @CustomType.Setter
        public Builder managementAddress(String managementAddress) {
            if (managementAddress == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "managementAddress");
            }
            this.managementAddress = managementAddress;
            return this;
        }
        @CustomType.Setter
        public Builder managementVlan(Integer managementVlan) {
            if (managementVlan == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "managementVlan");
            }
            this.managementVlan = managementVlan;
            return this;
        }
        @CustomType.Setter
        public Builder portDescription(String portDescription) {
            if (portDescription == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "portDescription");
            }
            this.portDescription = portDescription;
            return this;
        }
        @CustomType.Setter
        public Builder portId(String portId) {
            if (portId == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "portId");
            }
            this.portId = portId;
            return this;
        }
        @CustomType.Setter
        public Builder portVlan(Integer portVlan) {
            if (portVlan == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "portVlan");
            }
            this.portVlan = portVlan;
            return this;
        }
        @CustomType.Setter
        public Builder systemCapabilities(String systemCapabilities) {
            if (systemCapabilities == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "systemCapabilities");
            }
            this.systemCapabilities = systemCapabilities;
            return this;
        }
        @CustomType.Setter
        public Builder systemDescription(String systemDescription) {
            if (systemDescription == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "systemDescription");
            }
            this.systemDescription = systemDescription;
            return this;
        }
        @CustomType.Setter
        public Builder systemName(String systemName) {
            if (systemName == null) {
              throw new MissingRequiredPropertyException("GetSwitchPortsStatusesItemLldp", "systemName");
            }
            this.systemName = systemName;
            return this;
        }
        public GetSwitchPortsStatusesItemLldp build() {
            final var _resultValue = new GetSwitchPortsStatusesItemLldp();
            _resultValue.chassisId = chassisId;
            _resultValue.managementAddress = managementAddress;
            _resultValue.managementVlan = managementVlan;
            _resultValue.portDescription = portDescription;
            _resultValue.portId = portId;
            _resultValue.portVlan = portVlan;
            _resultValue.systemCapabilities = systemCapabilities;
            _resultValue.systemDescription = systemDescription;
            _resultValue.systemName = systemName;
            return _resultValue;
        }
    }
}
