// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound {
    private List<String> allowedIps;
    private List<String> destinationPorts;
    private String protocol;

    private GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound() {}
    public List<String> allowedIps() {
        return this.allowedIps;
    }
    public List<String> destinationPorts() {
        return this.destinationPorts;
    }
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedIps;
        private List<String> destinationPorts;
        private String protocol;
        public Builder() {}
        public Builder(GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIps = defaults.allowedIps;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder allowedIps(List<String> allowedIps) {
            if (allowedIps == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound", "allowedIps");
            }
            this.allowedIps = allowedIps;
            return this;
        }
        public Builder allowedIps(String... allowedIps) {
            return allowedIps(List.of(allowedIps));
        }
        @CustomType.Setter
        public Builder destinationPorts(List<String> destinationPorts) {
            if (destinationPorts == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound", "destinationPorts");
            }
            this.destinationPorts = destinationPorts;
            return this;
        }
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound build() {
            final var _resultValue = new GetApplianceFirewallOneToOneNatRulesItemRuleAllowedInbound();
            _resultValue.allowedIps = allowedIps;
            _resultValue.destinationPorts = destinationPorts;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
