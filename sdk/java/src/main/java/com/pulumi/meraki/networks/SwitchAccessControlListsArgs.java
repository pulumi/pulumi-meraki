// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.meraki.networks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.meraki.networks.inputs.SwitchAccessControlListsRuleArgs;
import com.pulumi.meraki.networks.inputs.SwitchAccessControlListsRulesResponseArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchAccessControlListsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchAccessControlListsArgs Empty = new SwitchAccessControlListsArgs();

    /**
     * networkId path parameter. Network ID
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return networkId path parameter. Network ID
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * An ordered array of the access control list rules
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<SwitchAccessControlListsRuleArgs>> rules;

    /**
     * @return An ordered array of the access control list rules
     * 
     */
    public Optional<Output<List<SwitchAccessControlListsRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * An ordered array of the access control list rules
     * 
     */
    @Import(name="rulesResponses")
    private @Nullable Output<List<SwitchAccessControlListsRulesResponseArgs>> rulesResponses;

    /**
     * @return An ordered array of the access control list rules
     * 
     */
    public Optional<Output<List<SwitchAccessControlListsRulesResponseArgs>>> rulesResponses() {
        return Optional.ofNullable(this.rulesResponses);
    }

    private SwitchAccessControlListsArgs() {}

    private SwitchAccessControlListsArgs(SwitchAccessControlListsArgs $) {
        this.networkId = $.networkId;
        this.rules = $.rules;
        this.rulesResponses = $.rulesResponses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchAccessControlListsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchAccessControlListsArgs $;

        public Builder() {
            $ = new SwitchAccessControlListsArgs();
        }

        public Builder(SwitchAccessControlListsArgs defaults) {
            $ = new SwitchAccessControlListsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId networkId path parameter. Network ID
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param rules An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<SwitchAccessControlListsRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<SwitchAccessControlListsRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rules(SwitchAccessControlListsRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param rulesResponses An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rulesResponses(@Nullable Output<List<SwitchAccessControlListsRulesResponseArgs>> rulesResponses) {
            $.rulesResponses = rulesResponses;
            return this;
        }

        /**
         * @param rulesResponses An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rulesResponses(List<SwitchAccessControlListsRulesResponseArgs> rulesResponses) {
            return rulesResponses(Output.of(rulesResponses));
        }

        /**
         * @param rulesResponses An ordered array of the access control list rules
         * 
         * @return builder
         * 
         */
        public Builder rulesResponses(SwitchAccessControlListsRulesResponseArgs... rulesResponses) {
            return rulesResponses(List.of(rulesResponses));
        }

        public SwitchAccessControlListsArgs build() {
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("SwitchAccessControlListsArgs", "networkId");
            }
            return $;
        }
    }

}
