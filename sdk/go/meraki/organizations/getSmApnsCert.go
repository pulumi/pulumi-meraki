// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.GetSmApnsCert(ctx, &organizations.GetSmApnsCertArgs{
//				OrganizationId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsSmApnsCertExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func GetSmApnsCert(ctx *pulumi.Context, args *GetSmApnsCertArgs, opts ...pulumi.InvokeOption) (*GetSmApnsCertResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSmApnsCertResult
	err := ctx.Invoke("meraki:organizations/getSmApnsCert:getSmApnsCert", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSmApnsCert.
type GetSmApnsCertArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getSmApnsCert.
type GetSmApnsCertResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string            `pulumi:"id"`
	Item GetSmApnsCertItem `pulumi:"item"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

func GetSmApnsCertOutput(ctx *pulumi.Context, args GetSmApnsCertOutputArgs, opts ...pulumi.InvokeOption) GetSmApnsCertResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSmApnsCertResultOutput, error) {
			args := v.(GetSmApnsCertArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:organizations/getSmApnsCert:getSmApnsCert", args, GetSmApnsCertResultOutput{}, options).(GetSmApnsCertResultOutput), nil
		}).(GetSmApnsCertResultOutput)
}

// A collection of arguments for invoking getSmApnsCert.
type GetSmApnsCertOutputArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (GetSmApnsCertOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmApnsCertArgs)(nil)).Elem()
}

// A collection of values returned by getSmApnsCert.
type GetSmApnsCertResultOutput struct{ *pulumi.OutputState }

func (GetSmApnsCertResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmApnsCertResult)(nil)).Elem()
}

func (o GetSmApnsCertResultOutput) ToGetSmApnsCertResultOutput() GetSmApnsCertResultOutput {
	return o
}

func (o GetSmApnsCertResultOutput) ToGetSmApnsCertResultOutputWithContext(ctx context.Context) GetSmApnsCertResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSmApnsCertResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmApnsCertResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSmApnsCertResultOutput) Item() GetSmApnsCertItemOutput {
	return o.ApplyT(func(v GetSmApnsCertResult) GetSmApnsCertItem { return v.Item }).(GetSmApnsCertItemOutput)
}

// organizationId path parameter. Organization ID
func (o GetSmApnsCertResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmApnsCertResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSmApnsCertResultOutput{})
}
