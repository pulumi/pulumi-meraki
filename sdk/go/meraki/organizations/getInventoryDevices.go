// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func GetInventoryDevices(ctx *pulumi.Context, args *GetInventoryDevicesArgs, opts ...pulumi.InvokeOption) (*GetInventoryDevicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInventoryDevicesResult
	err := ctx.Invoke("meraki:organizations/getInventoryDevices:getInventoryDevices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInventoryDevices.
type GetInventoryDevicesArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// macs query parameter. Search for devices in inventory based on mac addresses.
	Macs []string `pulumi:"macs"`
	// models query parameter. Search for devices in inventory based on model.
	Models []string `pulumi:"models"`
	// networkIds query parameter. Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.
	NetworkIds []string `pulumi:"networkIds"`
	// orderNumbers query parameter. Search for devices in inventory based on order numbers.
	OrderNumbers []string `pulumi:"orderNumbers"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
	ProductTypes []string `pulumi:"productTypes"`
	// search query parameter. Search for devices in inventory based on serial number, mac address, or model.
	Search *string `pulumi:"search"`
	// serial path parameter.
	Serial *string `pulumi:"serial"`
	// serials query parameter. Search for devices in inventory based on serials.
	Serials []string `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// tags query parameter. Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
	TagsFilterType *string `pulumi:"tagsFilterType"`
	// usedState query parameter. Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
	UsedState *string `pulumi:"usedState"`
}

// A collection of values returned by getInventoryDevices.
type GetInventoryDevicesResult struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// The provider-assigned unique ID for this managed resource.
	Id   string                  `pulumi:"id"`
	Item GetInventoryDevicesItem `pulumi:"item"`
	// Array of ResponseOrganizationsGetOrganizationInventoryDevices
	Items []GetInventoryDevicesItem `pulumi:"items"`
	// macs query parameter. Search for devices in inventory based on mac addresses.
	Macs []string `pulumi:"macs"`
	// models query parameter. Search for devices in inventory based on model.
	Models []string `pulumi:"models"`
	// networkIds query parameter. Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.
	NetworkIds []string `pulumi:"networkIds"`
	// orderNumbers query parameter. Search for devices in inventory based on order numbers.
	OrderNumbers []string `pulumi:"orderNumbers"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
	ProductTypes []string `pulumi:"productTypes"`
	// search query parameter. Search for devices in inventory based on serial number, mac address, or model.
	Search *string `pulumi:"search"`
	// serial path parameter.
	Serial *string `pulumi:"serial"`
	// serials query parameter. Search for devices in inventory based on serials.
	Serials []string `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// tags query parameter. Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
	TagsFilterType *string `pulumi:"tagsFilterType"`
	// usedState query parameter. Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
	UsedState *string `pulumi:"usedState"`
}

func GetInventoryDevicesOutput(ctx *pulumi.Context, args GetInventoryDevicesOutputArgs, opts ...pulumi.InvokeOption) GetInventoryDevicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInventoryDevicesResultOutput, error) {
			args := v.(GetInventoryDevicesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetInventoryDevicesResult
			secret, err := ctx.InvokePackageRaw("meraki:organizations/getInventoryDevices:getInventoryDevices", args, &rv, "", opts...)
			if err != nil {
				return GetInventoryDevicesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetInventoryDevicesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetInventoryDevicesResultOutput), nil
			}
			return output, nil
		}).(GetInventoryDevicesResultOutput)
}

// A collection of arguments for invoking getInventoryDevices.
type GetInventoryDevicesOutputArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore pulumi.StringPtrInput `pulumi:"endingBefore"`
	// macs query parameter. Search for devices in inventory based on mac addresses.
	Macs pulumi.StringArrayInput `pulumi:"macs"`
	// models query parameter. Search for devices in inventory based on model.
	Models pulumi.StringArrayInput `pulumi:"models"`
	// networkIds query parameter. Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
	// orderNumbers query parameter. Search for devices in inventory based on order numbers.
	OrderNumbers pulumi.StringArrayInput `pulumi:"orderNumbers"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// productTypes query parameter. Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// search query parameter. Search for devices in inventory based on serial number, mac address, or model.
	Search pulumi.StringPtrInput `pulumi:"search"`
	// serial path parameter.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// serials query parameter. Search for devices in inventory based on serials.
	Serials pulumi.StringArrayInput `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter pulumi.StringPtrInput `pulumi:"startingAfter"`
	// tags query parameter. Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// tagsFilterType query parameter. To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
	TagsFilterType pulumi.StringPtrInput `pulumi:"tagsFilterType"`
	// usedState query parameter. Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
	UsedState pulumi.StringPtrInput `pulumi:"usedState"`
}

func (GetInventoryDevicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesArgs)(nil)).Elem()
}

// A collection of values returned by getInventoryDevices.
type GetInventoryDevicesResultOutput struct{ *pulumi.OutputState }

func (GetInventoryDevicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesResult)(nil)).Elem()
}

func (o GetInventoryDevicesResultOutput) ToGetInventoryDevicesResultOutput() GetInventoryDevicesResultOutput {
	return o
}

func (o GetInventoryDevicesResultOutput) ToGetInventoryDevicesResultOutputWithContext(ctx context.Context) GetInventoryDevicesResultOutput {
	return o
}

// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetInventoryDevicesResultOutput) EndingBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.EndingBefore }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInventoryDevicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInventoryDevicesResultOutput) Item() GetInventoryDevicesItemOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) GetInventoryDevicesItem { return v.Item }).(GetInventoryDevicesItemOutput)
}

// Array of ResponseOrganizationsGetOrganizationInventoryDevices
func (o GetInventoryDevicesResultOutput) Items() GetInventoryDevicesItemArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []GetInventoryDevicesItem { return v.Items }).(GetInventoryDevicesItemArrayOutput)
}

// macs query parameter. Search for devices in inventory based on mac addresses.
func (o GetInventoryDevicesResultOutput) Macs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.Macs }).(pulumi.StringArrayOutput)
}

// models query parameter. Search for devices in inventory based on model.
func (o GetInventoryDevicesResultOutput) Models() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.Models }).(pulumi.StringArrayOutput)
}

// networkIds query parameter. Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.
func (o GetInventoryDevicesResultOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// orderNumbers query parameter. Search for devices in inventory based on order numbers.
func (o GetInventoryDevicesResultOutput) OrderNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.OrderNumbers }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o GetInventoryDevicesResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
func (o GetInventoryDevicesResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// productTypes query parameter. Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
func (o GetInventoryDevicesResultOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// search query parameter. Search for devices in inventory based on serial number, mac address, or model.
func (o GetInventoryDevicesResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

// serial path parameter.
func (o GetInventoryDevicesResultOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// serials query parameter. Search for devices in inventory based on serials.
func (o GetInventoryDevicesResultOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetInventoryDevicesResultOutput) StartingAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.StartingAfter }).(pulumi.StringPtrOutput)
}

// tags query parameter. Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
func (o GetInventoryDevicesResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// tagsFilterType query parameter. To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
func (o GetInventoryDevicesResultOutput) TagsFilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.TagsFilterType }).(pulumi.StringPtrOutput)
}

// usedState query parameter. Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
func (o GetInventoryDevicesResultOutput) UsedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryDevicesResult) *string { return v.UsedState }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInventoryDevicesResultOutput{})
}
