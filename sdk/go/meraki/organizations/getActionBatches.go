// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupActionBatches(ctx *pulumi.Context, args *LookupActionBatchesArgs, opts ...pulumi.InvokeOption) (*LookupActionBatchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupActionBatchesResult
	err := ctx.Invoke("meraki:organizations/getActionBatches:getActionBatches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getActionBatches.
type LookupActionBatchesArgs struct {
	// actionBatchId path parameter. Action batch ID
	ActionBatchId *string `pulumi:"actionBatchId"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getActionBatches.
type LookupActionBatchesResult struct {
	// actionBatchId path parameter. Action batch ID
	ActionBatchId *string `pulumi:"actionBatchId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string               `pulumi:"id"`
	Item GetActionBatchesItem `pulumi:"item"`
	// Array of ResponseOrganizationsGetOrganizationActionBatches
	Items []GetActionBatchesItem `pulumi:"items"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
	Status *string `pulumi:"status"`
}

func LookupActionBatchesOutput(ctx *pulumi.Context, args LookupActionBatchesOutputArgs, opts ...pulumi.InvokeOption) LookupActionBatchesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupActionBatchesResult, error) {
			args := v.(LookupActionBatchesArgs)
			r, err := LookupActionBatches(ctx, &args, opts...)
			var s LookupActionBatchesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupActionBatchesResultOutput)
}

// A collection of arguments for invoking getActionBatches.
type LookupActionBatchesOutputArgs struct {
	// actionBatchId path parameter. Action batch ID
	ActionBatchId pulumi.StringPtrInput `pulumi:"actionBatchId"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupActionBatchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActionBatchesArgs)(nil)).Elem()
}

// A collection of values returned by getActionBatches.
type LookupActionBatchesResultOutput struct{ *pulumi.OutputState }

func (LookupActionBatchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActionBatchesResult)(nil)).Elem()
}

func (o LookupActionBatchesResultOutput) ToLookupActionBatchesResultOutput() LookupActionBatchesResultOutput {
	return o
}

func (o LookupActionBatchesResultOutput) ToLookupActionBatchesResultOutputWithContext(ctx context.Context) LookupActionBatchesResultOutput {
	return o
}

// actionBatchId path parameter. Action batch ID
func (o LookupActionBatchesResultOutput) ActionBatchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) *string { return v.ActionBatchId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupActionBatchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupActionBatchesResultOutput) Item() GetActionBatchesItemOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) GetActionBatchesItem { return v.Item }).(GetActionBatchesItemOutput)
}

// Array of ResponseOrganizationsGetOrganizationActionBatches
func (o LookupActionBatchesResultOutput) Items() GetActionBatchesItemArrayOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) []GetActionBatchesItem { return v.Items }).(GetActionBatchesItemArrayOutput)
}

// organizationId path parameter. Organization ID
func (o LookupActionBatchesResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// status query parameter. Filter batches by status. Valid types are pending, completed, and failed.
func (o LookupActionBatchesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActionBatchesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupActionBatchesResultOutput{})
}
