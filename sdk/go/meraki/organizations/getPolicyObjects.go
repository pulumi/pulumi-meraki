// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.LookupPolicyObjects(ctx, &organizations.LookupPolicyObjectsArgs{
//				EndingBefore:   pulumi.StringRef("string"),
//				OrganizationId: pulumi.StringRef("string"),
//				PerPage:        pulumi.IntRef(1),
//				StartingAfter:  pulumi.StringRef("string"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsPolicyObjectsExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupPolicyObjects(ctx *pulumi.Context, args *LookupPolicyObjectsArgs, opts ...pulumi.InvokeOption) (*LookupPolicyObjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyObjectsResult
	err := ctx.Invoke("meraki:organizations/getPolicyObjects:getPolicyObjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyObjects.
type LookupPolicyObjectsArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
	PerPage *int `pulumi:"perPage"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId *string `pulumi:"policyObjectId"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
}

// A collection of values returned by getPolicyObjects.
type LookupPolicyObjectsResult struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// The provider-assigned unique ID for this managed resource.
	Id   string               `pulumi:"id"`
	Item GetPolicyObjectsItem `pulumi:"item"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
	PerPage *int `pulumi:"perPage"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId *string `pulumi:"policyObjectId"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
}

func LookupPolicyObjectsOutput(ctx *pulumi.Context, args LookupPolicyObjectsOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyObjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPolicyObjectsResultOutput, error) {
			args := v.(LookupPolicyObjectsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:organizations/getPolicyObjects:getPolicyObjects", args, LookupPolicyObjectsResultOutput{}, options).(LookupPolicyObjectsResultOutput), nil
		}).(LookupPolicyObjectsResultOutput)
}

// A collection of arguments for invoking getPolicyObjects.
type LookupPolicyObjectsOutputArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore pulumi.StringPtrInput `pulumi:"endingBefore"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId pulumi.StringPtrInput `pulumi:"policyObjectId"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter pulumi.StringPtrInput `pulumi:"startingAfter"`
}

func (LookupPolicyObjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyObjectsArgs)(nil)).Elem()
}

// A collection of values returned by getPolicyObjects.
type LookupPolicyObjectsResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyObjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyObjectsResult)(nil)).Elem()
}

func (o LookupPolicyObjectsResultOutput) ToLookupPolicyObjectsResultOutput() LookupPolicyObjectsResultOutput {
	return o
}

func (o LookupPolicyObjectsResultOutput) ToLookupPolicyObjectsResultOutputWithContext(ctx context.Context) LookupPolicyObjectsResultOutput {
	return o
}

// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o LookupPolicyObjectsResultOutput) EndingBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) *string { return v.EndingBefore }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPolicyObjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPolicyObjectsResultOutput) Item() GetPolicyObjectsItemOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) GetPolicyObjectsItem { return v.Item }).(GetPolicyObjectsItemOutput)
}

// organizationId path parameter. Organization ID
func (o LookupPolicyObjectsResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 10 5000. Default is 5000.
func (o LookupPolicyObjectsResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// policyObjectId path parameter. Policy object ID
func (o LookupPolicyObjectsResultOutput) PolicyObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) *string { return v.PolicyObjectId }).(pulumi.StringPtrOutput)
}

// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o LookupPolicyObjectsResultOutput) StartingAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyObjectsResult) *string { return v.StartingAfter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyObjectsResultOutput{})
}
