// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewAlertsProfiles(ctx, "example", &organizations.AlertsProfilesArgs{
//				AlertCondition: &organizations.AlertsProfilesAlertConditionArgs{
//					Bit_rate_bps: 10000,
//					Duration:     pulumi.Int(60),
//					Interface:    pulumi.String("wan1"),
//					Jitter_ms:    100,
//					Latency_ms:   100,
//					Loss_ratio:   0.1,
//					Mos:          pulumi.Float64(3.5),
//					Window:       pulumi.Int(600),
//				},
//				Description: pulumi.String("WAN 1 high utilization"),
//				NetworkTags: pulumi.StringArray{
//					pulumi.String("tag1"),
//					pulumi.String("tag2"),
//				},
//				OrganizationId: pulumi.String("string"),
//				Recipients: &organizations.AlertsProfilesRecipientsArgs{
//					Emails: pulumi.StringArray{
//						pulumi.String("admin@example.org"),
//					},
//					Http_server_ids: []string{
//						"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==",
//					},
//				},
//				Type: pulumi.String("wanUtilization"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsAlertsProfilesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/alertsProfiles:AlertsProfiles example "organization_id"
// ```
type AlertsProfiles struct {
	pulumi.CustomResourceState

	// The conditions that determine if the alert triggers
	AlertCondition AlertsProfilesAlertConditionOutput `pulumi:"alertCondition"`
	// alertConfigId path parameter. Alert config ID
	AlertConfigId pulumi.StringOutput `pulumi:"alertConfigId"`
	// User supplied description of the alert
	Description pulumi.StringOutput `pulumi:"description"`
	// Is the alert config enabled
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Networks with these tags will be monitored for the alert
	NetworkTags pulumi.StringArrayOutput `pulumi:"networkTags"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// List of recipients that will recieve the alert.
	Recipients AlertsProfilesRecipientsOutput `pulumi:"recipients"`
	// The alert type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAlertsProfiles registers a new resource with the given unique name, arguments, and options.
func NewAlertsProfiles(ctx *pulumi.Context,
	name string, args *AlertsProfilesArgs, opts ...pulumi.ResourceOption) (*AlertsProfiles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertsProfiles
	err := ctx.RegisterResource("meraki:organizations/alertsProfiles:AlertsProfiles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertsProfiles gets an existing AlertsProfiles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertsProfiles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertsProfilesState, opts ...pulumi.ResourceOption) (*AlertsProfiles, error) {
	var resource AlertsProfiles
	err := ctx.ReadResource("meraki:organizations/alertsProfiles:AlertsProfiles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertsProfiles resources.
type alertsProfilesState struct {
	// The conditions that determine if the alert triggers
	AlertCondition *AlertsProfilesAlertCondition `pulumi:"alertCondition"`
	// alertConfigId path parameter. Alert config ID
	AlertConfigId *string `pulumi:"alertConfigId"`
	// User supplied description of the alert
	Description *string `pulumi:"description"`
	// Is the alert config enabled
	Enabled *bool `pulumi:"enabled"`
	// Networks with these tags will be monitored for the alert
	NetworkTags []string `pulumi:"networkTags"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// List of recipients that will recieve the alert.
	Recipients *AlertsProfilesRecipients `pulumi:"recipients"`
	// The alert type
	Type *string `pulumi:"type"`
}

type AlertsProfilesState struct {
	// The conditions that determine if the alert triggers
	AlertCondition AlertsProfilesAlertConditionPtrInput
	// alertConfigId path parameter. Alert config ID
	AlertConfigId pulumi.StringPtrInput
	// User supplied description of the alert
	Description pulumi.StringPtrInput
	// Is the alert config enabled
	Enabled pulumi.BoolPtrInput
	// Networks with these tags will be monitored for the alert
	NetworkTags pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	// List of recipients that will recieve the alert.
	Recipients AlertsProfilesRecipientsPtrInput
	// The alert type
	Type pulumi.StringPtrInput
}

func (AlertsProfilesState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertsProfilesState)(nil)).Elem()
}

type alertsProfilesArgs struct {
	// The conditions that determine if the alert triggers
	AlertCondition *AlertsProfilesAlertCondition `pulumi:"alertCondition"`
	// alertConfigId path parameter. Alert config ID
	AlertConfigId *string `pulumi:"alertConfigId"`
	// User supplied description of the alert
	Description *string `pulumi:"description"`
	// Is the alert config enabled
	Enabled *bool `pulumi:"enabled"`
	// Networks with these tags will be monitored for the alert
	NetworkTags []string `pulumi:"networkTags"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// List of recipients that will recieve the alert.
	Recipients *AlertsProfilesRecipients `pulumi:"recipients"`
	// The alert type
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a AlertsProfiles resource.
type AlertsProfilesArgs struct {
	// The conditions that determine if the alert triggers
	AlertCondition AlertsProfilesAlertConditionPtrInput
	// alertConfigId path parameter. Alert config ID
	AlertConfigId pulumi.StringPtrInput
	// User supplied description of the alert
	Description pulumi.StringPtrInput
	// Is the alert config enabled
	Enabled pulumi.BoolPtrInput
	// Networks with these tags will be monitored for the alert
	NetworkTags pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	// List of recipients that will recieve the alert.
	Recipients AlertsProfilesRecipientsPtrInput
	// The alert type
	Type pulumi.StringPtrInput
}

func (AlertsProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertsProfilesArgs)(nil)).Elem()
}

type AlertsProfilesInput interface {
	pulumi.Input

	ToAlertsProfilesOutput() AlertsProfilesOutput
	ToAlertsProfilesOutputWithContext(ctx context.Context) AlertsProfilesOutput
}

func (*AlertsProfiles) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfiles)(nil)).Elem()
}

func (i *AlertsProfiles) ToAlertsProfilesOutput() AlertsProfilesOutput {
	return i.ToAlertsProfilesOutputWithContext(context.Background())
}

func (i *AlertsProfiles) ToAlertsProfilesOutputWithContext(ctx context.Context) AlertsProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesOutput)
}

// AlertsProfilesArrayInput is an input type that accepts AlertsProfilesArray and AlertsProfilesArrayOutput values.
// You can construct a concrete instance of `AlertsProfilesArrayInput` via:
//
//	AlertsProfilesArray{ AlertsProfilesArgs{...} }
type AlertsProfilesArrayInput interface {
	pulumi.Input

	ToAlertsProfilesArrayOutput() AlertsProfilesArrayOutput
	ToAlertsProfilesArrayOutputWithContext(context.Context) AlertsProfilesArrayOutput
}

type AlertsProfilesArray []AlertsProfilesInput

func (AlertsProfilesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertsProfiles)(nil)).Elem()
}

func (i AlertsProfilesArray) ToAlertsProfilesArrayOutput() AlertsProfilesArrayOutput {
	return i.ToAlertsProfilesArrayOutputWithContext(context.Background())
}

func (i AlertsProfilesArray) ToAlertsProfilesArrayOutputWithContext(ctx context.Context) AlertsProfilesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesArrayOutput)
}

// AlertsProfilesMapInput is an input type that accepts AlertsProfilesMap and AlertsProfilesMapOutput values.
// You can construct a concrete instance of `AlertsProfilesMapInput` via:
//
//	AlertsProfilesMap{ "key": AlertsProfilesArgs{...} }
type AlertsProfilesMapInput interface {
	pulumi.Input

	ToAlertsProfilesMapOutput() AlertsProfilesMapOutput
	ToAlertsProfilesMapOutputWithContext(context.Context) AlertsProfilesMapOutput
}

type AlertsProfilesMap map[string]AlertsProfilesInput

func (AlertsProfilesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertsProfiles)(nil)).Elem()
}

func (i AlertsProfilesMap) ToAlertsProfilesMapOutput() AlertsProfilesMapOutput {
	return i.ToAlertsProfilesMapOutputWithContext(context.Background())
}

func (i AlertsProfilesMap) ToAlertsProfilesMapOutputWithContext(ctx context.Context) AlertsProfilesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesMapOutput)
}

type AlertsProfilesOutput struct{ *pulumi.OutputState }

func (AlertsProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfiles)(nil)).Elem()
}

func (o AlertsProfilesOutput) ToAlertsProfilesOutput() AlertsProfilesOutput {
	return o
}

func (o AlertsProfilesOutput) ToAlertsProfilesOutputWithContext(ctx context.Context) AlertsProfilesOutput {
	return o
}

// The conditions that determine if the alert triggers
func (o AlertsProfilesOutput) AlertCondition() AlertsProfilesAlertConditionOutput {
	return o.ApplyT(func(v *AlertsProfiles) AlertsProfilesAlertConditionOutput { return v.AlertCondition }).(AlertsProfilesAlertConditionOutput)
}

// alertConfigId path parameter. Alert config ID
func (o AlertsProfilesOutput) AlertConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.StringOutput { return v.AlertConfigId }).(pulumi.StringOutput)
}

// User supplied description of the alert
func (o AlertsProfilesOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Is the alert config enabled
func (o AlertsProfilesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Networks with these tags will be monitored for the alert
func (o AlertsProfilesOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.StringArrayOutput { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o AlertsProfilesOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// List of recipients that will recieve the alert.
func (o AlertsProfilesOutput) Recipients() AlertsProfilesRecipientsOutput {
	return o.ApplyT(func(v *AlertsProfiles) AlertsProfilesRecipientsOutput { return v.Recipients }).(AlertsProfilesRecipientsOutput)
}

// The alert type
func (o AlertsProfilesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertsProfiles) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type AlertsProfilesArrayOutput struct{ *pulumi.OutputState }

func (AlertsProfilesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertsProfiles)(nil)).Elem()
}

func (o AlertsProfilesArrayOutput) ToAlertsProfilesArrayOutput() AlertsProfilesArrayOutput {
	return o
}

func (o AlertsProfilesArrayOutput) ToAlertsProfilesArrayOutputWithContext(ctx context.Context) AlertsProfilesArrayOutput {
	return o
}

func (o AlertsProfilesArrayOutput) Index(i pulumi.IntInput) AlertsProfilesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertsProfiles {
		return vs[0].([]*AlertsProfiles)[vs[1].(int)]
	}).(AlertsProfilesOutput)
}

type AlertsProfilesMapOutput struct{ *pulumi.OutputState }

func (AlertsProfilesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertsProfiles)(nil)).Elem()
}

func (o AlertsProfilesMapOutput) ToAlertsProfilesMapOutput() AlertsProfilesMapOutput {
	return o
}

func (o AlertsProfilesMapOutput) ToAlertsProfilesMapOutputWithContext(ctx context.Context) AlertsProfilesMapOutput {
	return o
}

func (o AlertsProfilesMapOutput) MapIndex(k pulumi.StringInput) AlertsProfilesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertsProfiles {
		return vs[0].(map[string]*AlertsProfiles)[vs[1].(string)]
	}).(AlertsProfilesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesInput)(nil)).Elem(), &AlertsProfiles{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesArrayInput)(nil)).Elem(), AlertsProfilesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesMapInput)(nil)).Elem(), AlertsProfilesMap{})
	pulumi.RegisterOutputType(AlertsProfilesOutput{})
	pulumi.RegisterOutputType(AlertsProfilesArrayOutput{})
	pulumi.RegisterOutputType(AlertsProfilesMapOutput{})
}
