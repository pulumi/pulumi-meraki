// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewPolicyObjects(ctx, "example", &organizations.PolicyObjectsArgs{
//				Category: pulumi.String("network"),
//				Cidr:     pulumi.String("10.0.0.0/24"),
//				Fqdn:     pulumi.String("example.com"),
//				GroupIds: pulumi.StringArray{
//					pulumi.String("8"),
//				},
//				Ip:             pulumi.String("1.2.3.4"),
//				Mask:           pulumi.String("255.255.0.0"),
//				Name:           pulumi.String("Web Servers - Datacenter 10"),
//				OrganizationId: pulumi.String("string"),
//				Type:           pulumi.String("cidr"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsPolicyObjectsExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/policyObjects:PolicyObjects example "organization_id,policy_object_id"
// ```
type PolicyObjects struct {
	pulumi.CustomResourceState

	// Category of a policy object (one of: adaptivePolicy, network)
	Category pulumi.StringOutput `pulumi:"category"`
	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr      pulumi.StringOutput `pulumi:"cidr"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// The IDs of policy object groups the policy object belongs to
	GroupIds pulumi.StringArrayOutput `pulumi:"groupIds"`
	// IP Address of a policy object (e.g. "1.2.3.4")
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Mask of a policy object (e.g. "255.255.0.0")
	Mask pulumi.StringOutput `pulumi:"mask"`
	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       pulumi.StringOutput      `pulumi:"name"`
	NetworkIds pulumi.StringArrayOutput `pulumi:"networkIds"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId pulumi.StringOutput `pulumi:"policyObjectId"`
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type      pulumi.StringOutput `pulumi:"type"`
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewPolicyObjects registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjects(ctx *pulumi.Context,
	name string, args *PolicyObjectsArgs, opts ...pulumi.ResourceOption) (*PolicyObjects, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjects
	err := ctx.RegisterResource("meraki:organizations/policyObjects:PolicyObjects", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjects gets an existing PolicyObjects resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjects(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectsState, opts ...pulumi.ResourceOption) (*PolicyObjects, error) {
	var resource PolicyObjects
	err := ctx.ReadResource("meraki:organizations/policyObjects:PolicyObjects", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjects resources.
type policyObjectsState struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category *string `pulumi:"category"`
	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr      *string `pulumi:"cidr"`
	CreatedAt *string `pulumi:"createdAt"`
	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn *string `pulumi:"fqdn"`
	// The IDs of policy object groups the policy object belongs to
	GroupIds []string `pulumi:"groupIds"`
	// IP Address of a policy object (e.g. "1.2.3.4")
	Ip *string `pulumi:"ip"`
	// Mask of a policy object (e.g. "255.255.0.0")
	Mask *string `pulumi:"mask"`
	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       *string  `pulumi:"name"`
	NetworkIds []string `pulumi:"networkIds"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId *string `pulumi:"policyObjectId"`
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

type PolicyObjectsState struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category pulumi.StringPtrInput
	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr      pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn pulumi.StringPtrInput
	// The IDs of policy object groups the policy object belongs to
	GroupIds pulumi.StringArrayInput
	// IP Address of a policy object (e.g. "1.2.3.4")
	Ip pulumi.StringPtrInput
	// Mask of a policy object (e.g. "255.255.0.0")
	Mask pulumi.StringPtrInput
	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       pulumi.StringPtrInput
	NetworkIds pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId pulumi.StringPtrInput
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type      pulumi.StringPtrInput
	UpdatedAt pulumi.StringPtrInput
}

func (PolicyObjectsState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectsState)(nil)).Elem()
}

type policyObjectsArgs struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category *string `pulumi:"category"`
	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr *string `pulumi:"cidr"`
	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn *string `pulumi:"fqdn"`
	// The IDs of policy object groups the policy object belongs to
	GroupIds []string `pulumi:"groupIds"`
	// IP Address of a policy object (e.g. "1.2.3.4")
	Ip *string `pulumi:"ip"`
	// Mask of a policy object (e.g. "255.255.0.0")
	Mask *string `pulumi:"mask"`
	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name *string `pulumi:"name"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId *string `pulumi:"policyObjectId"`
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a PolicyObjects resource.
type PolicyObjectsArgs struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category pulumi.StringPtrInput
	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr pulumi.StringPtrInput
	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn pulumi.StringPtrInput
	// The IDs of policy object groups the policy object belongs to
	GroupIds pulumi.StringArrayInput
	// IP Address of a policy object (e.g. "1.2.3.4")
	Ip pulumi.StringPtrInput
	// Mask of a policy object (e.g. "255.255.0.0")
	Mask pulumi.StringPtrInput
	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name pulumi.StringPtrInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	// policyObjectId path parameter. Policy object ID
	PolicyObjectId pulumi.StringPtrInput
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type pulumi.StringPtrInput
}

func (PolicyObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectsArgs)(nil)).Elem()
}

type PolicyObjectsInput interface {
	pulumi.Input

	ToPolicyObjectsOutput() PolicyObjectsOutput
	ToPolicyObjectsOutputWithContext(ctx context.Context) PolicyObjectsOutput
}

func (*PolicyObjects) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjects)(nil)).Elem()
}

func (i *PolicyObjects) ToPolicyObjectsOutput() PolicyObjectsOutput {
	return i.ToPolicyObjectsOutputWithContext(context.Background())
}

func (i *PolicyObjects) ToPolicyObjectsOutputWithContext(ctx context.Context) PolicyObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsOutput)
}

// PolicyObjectsArrayInput is an input type that accepts PolicyObjectsArray and PolicyObjectsArrayOutput values.
// You can construct a concrete instance of `PolicyObjectsArrayInput` via:
//
//	PolicyObjectsArray{ PolicyObjectsArgs{...} }
type PolicyObjectsArrayInput interface {
	pulumi.Input

	ToPolicyObjectsArrayOutput() PolicyObjectsArrayOutput
	ToPolicyObjectsArrayOutputWithContext(context.Context) PolicyObjectsArrayOutput
}

type PolicyObjectsArray []PolicyObjectsInput

func (PolicyObjectsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjects)(nil)).Elem()
}

func (i PolicyObjectsArray) ToPolicyObjectsArrayOutput() PolicyObjectsArrayOutput {
	return i.ToPolicyObjectsArrayOutputWithContext(context.Background())
}

func (i PolicyObjectsArray) ToPolicyObjectsArrayOutputWithContext(ctx context.Context) PolicyObjectsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsArrayOutput)
}

// PolicyObjectsMapInput is an input type that accepts PolicyObjectsMap and PolicyObjectsMapOutput values.
// You can construct a concrete instance of `PolicyObjectsMapInput` via:
//
//	PolicyObjectsMap{ "key": PolicyObjectsArgs{...} }
type PolicyObjectsMapInput interface {
	pulumi.Input

	ToPolicyObjectsMapOutput() PolicyObjectsMapOutput
	ToPolicyObjectsMapOutputWithContext(context.Context) PolicyObjectsMapOutput
}

type PolicyObjectsMap map[string]PolicyObjectsInput

func (PolicyObjectsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjects)(nil)).Elem()
}

func (i PolicyObjectsMap) ToPolicyObjectsMapOutput() PolicyObjectsMapOutput {
	return i.ToPolicyObjectsMapOutputWithContext(context.Background())
}

func (i PolicyObjectsMap) ToPolicyObjectsMapOutputWithContext(ctx context.Context) PolicyObjectsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsMapOutput)
}

type PolicyObjectsOutput struct{ *pulumi.OutputState }

func (PolicyObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjects)(nil)).Elem()
}

func (o PolicyObjectsOutput) ToPolicyObjectsOutput() PolicyObjectsOutput {
	return o
}

func (o PolicyObjectsOutput) ToPolicyObjectsOutputWithContext(ctx context.Context) PolicyObjectsOutput {
	return o
}

// Category of a policy object (one of: adaptivePolicy, network)
func (o PolicyObjectsOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// CIDR Value of a policy object (e.g. 10.11.12.1/24")
func (o PolicyObjectsOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

func (o PolicyObjectsOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Fully qualified domain name of policy object (e.g. "example.com")
func (o PolicyObjectsOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// The IDs of policy object groups the policy object belongs to
func (o PolicyObjectsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringArrayOutput { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// IP Address of a policy object (e.g. "1.2.3.4")
func (o PolicyObjectsOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Mask of a policy object (e.g. "255.255.0.0")
func (o PolicyObjectsOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Mask }).(pulumi.StringOutput)
}

// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
func (o PolicyObjectsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyObjectsOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringArrayOutput { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o PolicyObjectsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// policyObjectId path parameter. Policy object ID
func (o PolicyObjectsOutput) PolicyObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.PolicyObjectId }).(pulumi.StringOutput)
}

// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
func (o PolicyObjectsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o PolicyObjectsOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjects) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type PolicyObjectsArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjects)(nil)).Elem()
}

func (o PolicyObjectsArrayOutput) ToPolicyObjectsArrayOutput() PolicyObjectsArrayOutput {
	return o
}

func (o PolicyObjectsArrayOutput) ToPolicyObjectsArrayOutputWithContext(ctx context.Context) PolicyObjectsArrayOutput {
	return o
}

func (o PolicyObjectsArrayOutput) Index(i pulumi.IntInput) PolicyObjectsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjects {
		return vs[0].([]*PolicyObjects)[vs[1].(int)]
	}).(PolicyObjectsOutput)
}

type PolicyObjectsMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjects)(nil)).Elem()
}

func (o PolicyObjectsMapOutput) ToPolicyObjectsMapOutput() PolicyObjectsMapOutput {
	return o
}

func (o PolicyObjectsMapOutput) ToPolicyObjectsMapOutputWithContext(ctx context.Context) PolicyObjectsMapOutput {
	return o
}

func (o PolicyObjectsMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjects {
		return vs[0].(map[string]*PolicyObjects)[vs[1].(string)]
	}).(PolicyObjectsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsInput)(nil)).Elem(), &PolicyObjects{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsArrayInput)(nil)).Elem(), PolicyObjectsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsMapInput)(nil)).Elem(), PolicyObjectsMap{})
	pulumi.RegisterOutputType(PolicyObjectsOutput{})
	pulumi.RegisterOutputType(PolicyObjectsArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectsMapOutput{})
}
