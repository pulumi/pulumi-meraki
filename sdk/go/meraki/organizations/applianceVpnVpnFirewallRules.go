// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/applianceVpnVpnFirewallRules:ApplianceVpnVpnFirewallRules example "organization_id"
// ```
type ApplianceVpnVpnFirewallRules struct {
	pulumi.CustomResourceState

	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceVpnVpnFirewallRulesRuleArrayOutput `pulumi:"rules"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolOutput `pulumi:"syslogDefaultRule"`
}

// NewApplianceVpnVpnFirewallRules registers a new resource with the given unique name, arguments, and options.
func NewApplianceVpnVpnFirewallRules(ctx *pulumi.Context,
	name string, args *ApplianceVpnVpnFirewallRulesArgs, opts ...pulumi.ResourceOption) (*ApplianceVpnVpnFirewallRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceVpnVpnFirewallRules
	err := ctx.RegisterResource("meraki:organizations/applianceVpnVpnFirewallRules:ApplianceVpnVpnFirewallRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceVpnVpnFirewallRules gets an existing ApplianceVpnVpnFirewallRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceVpnVpnFirewallRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceVpnVpnFirewallRulesState, opts ...pulumi.ResourceOption) (*ApplianceVpnVpnFirewallRules, error) {
	var resource ApplianceVpnVpnFirewallRules
	err := ctx.ReadResource("meraki:organizations/applianceVpnVpnFirewallRules:ApplianceVpnVpnFirewallRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceVpnVpnFirewallRules resources.
type applianceVpnVpnFirewallRulesState struct {
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceVpnVpnFirewallRulesRule `pulumi:"rules"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule *bool `pulumi:"syslogDefaultRule"`
}

type ApplianceVpnVpnFirewallRulesState struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceVpnVpnFirewallRulesRuleArrayInput
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolPtrInput
}

func (ApplianceVpnVpnFirewallRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceVpnVpnFirewallRulesState)(nil)).Elem()
}

type applianceVpnVpnFirewallRulesArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceVpnVpnFirewallRulesRule `pulumi:"rules"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule *bool `pulumi:"syslogDefaultRule"`
}

// The set of arguments for constructing a ApplianceVpnVpnFirewallRules resource.
type ApplianceVpnVpnFirewallRulesArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceVpnVpnFirewallRulesRuleArrayInput
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolPtrInput
}

func (ApplianceVpnVpnFirewallRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceVpnVpnFirewallRulesArgs)(nil)).Elem()
}

type ApplianceVpnVpnFirewallRulesInput interface {
	pulumi.Input

	ToApplianceVpnVpnFirewallRulesOutput() ApplianceVpnVpnFirewallRulesOutput
	ToApplianceVpnVpnFirewallRulesOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesOutput
}

func (*ApplianceVpnVpnFirewallRules) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (i *ApplianceVpnVpnFirewallRules) ToApplianceVpnVpnFirewallRulesOutput() ApplianceVpnVpnFirewallRulesOutput {
	return i.ToApplianceVpnVpnFirewallRulesOutputWithContext(context.Background())
}

func (i *ApplianceVpnVpnFirewallRules) ToApplianceVpnVpnFirewallRulesOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnVpnFirewallRulesOutput)
}

// ApplianceVpnVpnFirewallRulesArrayInput is an input type that accepts ApplianceVpnVpnFirewallRulesArray and ApplianceVpnVpnFirewallRulesArrayOutput values.
// You can construct a concrete instance of `ApplianceVpnVpnFirewallRulesArrayInput` via:
//
//	ApplianceVpnVpnFirewallRulesArray{ ApplianceVpnVpnFirewallRulesArgs{...} }
type ApplianceVpnVpnFirewallRulesArrayInput interface {
	pulumi.Input

	ToApplianceVpnVpnFirewallRulesArrayOutput() ApplianceVpnVpnFirewallRulesArrayOutput
	ToApplianceVpnVpnFirewallRulesArrayOutputWithContext(context.Context) ApplianceVpnVpnFirewallRulesArrayOutput
}

type ApplianceVpnVpnFirewallRulesArray []ApplianceVpnVpnFirewallRulesInput

func (ApplianceVpnVpnFirewallRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (i ApplianceVpnVpnFirewallRulesArray) ToApplianceVpnVpnFirewallRulesArrayOutput() ApplianceVpnVpnFirewallRulesArrayOutput {
	return i.ToApplianceVpnVpnFirewallRulesArrayOutputWithContext(context.Background())
}

func (i ApplianceVpnVpnFirewallRulesArray) ToApplianceVpnVpnFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnVpnFirewallRulesArrayOutput)
}

// ApplianceVpnVpnFirewallRulesMapInput is an input type that accepts ApplianceVpnVpnFirewallRulesMap and ApplianceVpnVpnFirewallRulesMapOutput values.
// You can construct a concrete instance of `ApplianceVpnVpnFirewallRulesMapInput` via:
//
//	ApplianceVpnVpnFirewallRulesMap{ "key": ApplianceVpnVpnFirewallRulesArgs{...} }
type ApplianceVpnVpnFirewallRulesMapInput interface {
	pulumi.Input

	ToApplianceVpnVpnFirewallRulesMapOutput() ApplianceVpnVpnFirewallRulesMapOutput
	ToApplianceVpnVpnFirewallRulesMapOutputWithContext(context.Context) ApplianceVpnVpnFirewallRulesMapOutput
}

type ApplianceVpnVpnFirewallRulesMap map[string]ApplianceVpnVpnFirewallRulesInput

func (ApplianceVpnVpnFirewallRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (i ApplianceVpnVpnFirewallRulesMap) ToApplianceVpnVpnFirewallRulesMapOutput() ApplianceVpnVpnFirewallRulesMapOutput {
	return i.ToApplianceVpnVpnFirewallRulesMapOutputWithContext(context.Background())
}

func (i ApplianceVpnVpnFirewallRulesMap) ToApplianceVpnVpnFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnVpnFirewallRulesMapOutput)
}

type ApplianceVpnVpnFirewallRulesOutput struct{ *pulumi.OutputState }

func (ApplianceVpnVpnFirewallRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (o ApplianceVpnVpnFirewallRulesOutput) ToApplianceVpnVpnFirewallRulesOutput() ApplianceVpnVpnFirewallRulesOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesOutput) ToApplianceVpnVpnFirewallRulesOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesOutput {
	return o
}

// organizationId path parameter. Organization ID
func (o ApplianceVpnVpnFirewallRulesOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceVpnVpnFirewallRules) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// An ordered array of the firewall rules (not including the default rule)
func (o ApplianceVpnVpnFirewallRulesOutput) Rules() ApplianceVpnVpnFirewallRulesRuleArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnVpnFirewallRules) ApplianceVpnVpnFirewallRulesRuleArrayOutput { return v.Rules }).(ApplianceVpnVpnFirewallRulesRuleArrayOutput)
}

// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
func (o ApplianceVpnVpnFirewallRulesOutput) SyslogDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApplianceVpnVpnFirewallRules) pulumi.BoolOutput { return v.SyslogDefaultRule }).(pulumi.BoolOutput)
}

type ApplianceVpnVpnFirewallRulesArrayOutput struct{ *pulumi.OutputState }

func (ApplianceVpnVpnFirewallRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (o ApplianceVpnVpnFirewallRulesArrayOutput) ToApplianceVpnVpnFirewallRulesArrayOutput() ApplianceVpnVpnFirewallRulesArrayOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesArrayOutput) ToApplianceVpnVpnFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesArrayOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesArrayOutput) Index(i pulumi.IntInput) ApplianceVpnVpnFirewallRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceVpnVpnFirewallRules {
		return vs[0].([]*ApplianceVpnVpnFirewallRules)[vs[1].(int)]
	}).(ApplianceVpnVpnFirewallRulesOutput)
}

type ApplianceVpnVpnFirewallRulesMapOutput struct{ *pulumi.OutputState }

func (ApplianceVpnVpnFirewallRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceVpnVpnFirewallRules)(nil)).Elem()
}

func (o ApplianceVpnVpnFirewallRulesMapOutput) ToApplianceVpnVpnFirewallRulesMapOutput() ApplianceVpnVpnFirewallRulesMapOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesMapOutput) ToApplianceVpnVpnFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesMapOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesMapOutput) MapIndex(k pulumi.StringInput) ApplianceVpnVpnFirewallRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceVpnVpnFirewallRules {
		return vs[0].(map[string]*ApplianceVpnVpnFirewallRules)[vs[1].(string)]
	}).(ApplianceVpnVpnFirewallRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnVpnFirewallRulesInput)(nil)).Elem(), &ApplianceVpnVpnFirewallRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnVpnFirewallRulesArrayInput)(nil)).Elem(), ApplianceVpnVpnFirewallRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnVpnFirewallRulesMapInput)(nil)).Elem(), ApplianceVpnVpnFirewallRulesMap{})
	pulumi.RegisterOutputType(ApplianceVpnVpnFirewallRulesOutput{})
	pulumi.RegisterOutputType(ApplianceVpnVpnFirewallRulesArrayOutput{})
	pulumi.RegisterOutputType(ApplianceVpnVpnFirewallRulesMapOutput{})
}
