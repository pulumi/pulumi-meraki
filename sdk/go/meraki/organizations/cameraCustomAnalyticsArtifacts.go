// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewCameraCustomAnalyticsArtifacts(ctx, "example", &organizations.CameraCustomAnalyticsArtifactsArgs{
//				Name:           pulumi.String("example"),
//				OrganizationId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsCameraCustomAnalyticsArtifactsExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/cameraCustomAnalyticsArtifacts:CameraCustomAnalyticsArtifacts example "artifact_id,organization_id"
// ```
type CameraCustomAnalyticsArtifacts struct {
	pulumi.CustomResourceState

	// Custom analytics artifact ID
	ArtifactId pulumi.StringOutput `pulumi:"artifactId"`
	// Custom analytics artifact name
	Name pulumi.StringOutput `pulumi:"name"`
	// Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Custom analytics artifact status
	Status CameraCustomAnalyticsArtifactsStatusOutput `pulumi:"status"`
}

// NewCameraCustomAnalyticsArtifacts registers a new resource with the given unique name, arguments, and options.
func NewCameraCustomAnalyticsArtifacts(ctx *pulumi.Context,
	name string, args *CameraCustomAnalyticsArtifactsArgs, opts ...pulumi.ResourceOption) (*CameraCustomAnalyticsArtifacts, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CameraCustomAnalyticsArtifacts
	err := ctx.RegisterResource("meraki:organizations/cameraCustomAnalyticsArtifacts:CameraCustomAnalyticsArtifacts", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCameraCustomAnalyticsArtifacts gets an existing CameraCustomAnalyticsArtifacts resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCameraCustomAnalyticsArtifacts(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CameraCustomAnalyticsArtifactsState, opts ...pulumi.ResourceOption) (*CameraCustomAnalyticsArtifacts, error) {
	var resource CameraCustomAnalyticsArtifacts
	err := ctx.ReadResource("meraki:organizations/cameraCustomAnalyticsArtifacts:CameraCustomAnalyticsArtifacts", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CameraCustomAnalyticsArtifacts resources.
type cameraCustomAnalyticsArtifactsState struct {
	// Custom analytics artifact ID
	ArtifactId *string `pulumi:"artifactId"`
	// Custom analytics artifact name
	Name *string `pulumi:"name"`
	// Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// Custom analytics artifact status
	Status *CameraCustomAnalyticsArtifactsStatus `pulumi:"status"`
}

type CameraCustomAnalyticsArtifactsState struct {
	// Custom analytics artifact ID
	ArtifactId pulumi.StringPtrInput
	// Custom analytics artifact name
	Name pulumi.StringPtrInput
	// Organization ID
	OrganizationId pulumi.StringPtrInput
	// Custom analytics artifact status
	Status CameraCustomAnalyticsArtifactsStatusPtrInput
}

func (CameraCustomAnalyticsArtifactsState) ElementType() reflect.Type {
	return reflect.TypeOf((*cameraCustomAnalyticsArtifactsState)(nil)).Elem()
}

type cameraCustomAnalyticsArtifactsArgs struct {
	// Custom analytics artifact ID
	ArtifactId *string `pulumi:"artifactId"`
	// Custom analytics artifact name
	Name *string `pulumi:"name"`
	// Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

// The set of arguments for constructing a CameraCustomAnalyticsArtifacts resource.
type CameraCustomAnalyticsArtifactsArgs struct {
	// Custom analytics artifact ID
	ArtifactId pulumi.StringPtrInput
	// Custom analytics artifact name
	Name pulumi.StringPtrInput
	// Organization ID
	OrganizationId pulumi.StringInput
}

func (CameraCustomAnalyticsArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cameraCustomAnalyticsArtifactsArgs)(nil)).Elem()
}

type CameraCustomAnalyticsArtifactsInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsArtifactsOutput() CameraCustomAnalyticsArtifactsOutput
	ToCameraCustomAnalyticsArtifactsOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsOutput
}

func (*CameraCustomAnalyticsArtifacts) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (i *CameraCustomAnalyticsArtifacts) ToCameraCustomAnalyticsArtifactsOutput() CameraCustomAnalyticsArtifactsOutput {
	return i.ToCameraCustomAnalyticsArtifactsOutputWithContext(context.Background())
}

func (i *CameraCustomAnalyticsArtifacts) ToCameraCustomAnalyticsArtifactsOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsOutput)
}

// CameraCustomAnalyticsArtifactsArrayInput is an input type that accepts CameraCustomAnalyticsArtifactsArray and CameraCustomAnalyticsArtifactsArrayOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsArtifactsArrayInput` via:
//
//	CameraCustomAnalyticsArtifactsArray{ CameraCustomAnalyticsArtifactsArgs{...} }
type CameraCustomAnalyticsArtifactsArrayInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsArtifactsArrayOutput() CameraCustomAnalyticsArtifactsArrayOutput
	ToCameraCustomAnalyticsArtifactsArrayOutputWithContext(context.Context) CameraCustomAnalyticsArtifactsArrayOutput
}

type CameraCustomAnalyticsArtifactsArray []CameraCustomAnalyticsArtifactsInput

func (CameraCustomAnalyticsArtifactsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (i CameraCustomAnalyticsArtifactsArray) ToCameraCustomAnalyticsArtifactsArrayOutput() CameraCustomAnalyticsArtifactsArrayOutput {
	return i.ToCameraCustomAnalyticsArtifactsArrayOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsArtifactsArray) ToCameraCustomAnalyticsArtifactsArrayOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsArrayOutput)
}

// CameraCustomAnalyticsArtifactsMapInput is an input type that accepts CameraCustomAnalyticsArtifactsMap and CameraCustomAnalyticsArtifactsMapOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsArtifactsMapInput` via:
//
//	CameraCustomAnalyticsArtifactsMap{ "key": CameraCustomAnalyticsArtifactsArgs{...} }
type CameraCustomAnalyticsArtifactsMapInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsArtifactsMapOutput() CameraCustomAnalyticsArtifactsMapOutput
	ToCameraCustomAnalyticsArtifactsMapOutputWithContext(context.Context) CameraCustomAnalyticsArtifactsMapOutput
}

type CameraCustomAnalyticsArtifactsMap map[string]CameraCustomAnalyticsArtifactsInput

func (CameraCustomAnalyticsArtifactsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (i CameraCustomAnalyticsArtifactsMap) ToCameraCustomAnalyticsArtifactsMapOutput() CameraCustomAnalyticsArtifactsMapOutput {
	return i.ToCameraCustomAnalyticsArtifactsMapOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsArtifactsMap) ToCameraCustomAnalyticsArtifactsMapOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsMapOutput)
}

type CameraCustomAnalyticsArtifactsOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (o CameraCustomAnalyticsArtifactsOutput) ToCameraCustomAnalyticsArtifactsOutput() CameraCustomAnalyticsArtifactsOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsOutput) ToCameraCustomAnalyticsArtifactsOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsOutput {
	return o
}

// Custom analytics artifact ID
func (o CameraCustomAnalyticsArtifactsOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifacts) pulumi.StringOutput { return v.ArtifactId }).(pulumi.StringOutput)
}

// Custom analytics artifact name
func (o CameraCustomAnalyticsArtifactsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifacts) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Organization ID
func (o CameraCustomAnalyticsArtifactsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifacts) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Custom analytics artifact status
func (o CameraCustomAnalyticsArtifactsOutput) Status() CameraCustomAnalyticsArtifactsStatusOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifacts) CameraCustomAnalyticsArtifactsStatusOutput { return v.Status }).(CameraCustomAnalyticsArtifactsStatusOutput)
}

type CameraCustomAnalyticsArtifactsArrayOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsArtifactsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (o CameraCustomAnalyticsArtifactsArrayOutput) ToCameraCustomAnalyticsArtifactsArrayOutput() CameraCustomAnalyticsArtifactsArrayOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsArrayOutput) ToCameraCustomAnalyticsArtifactsArrayOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsArrayOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsArrayOutput) Index(i pulumi.IntInput) CameraCustomAnalyticsArtifactsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CameraCustomAnalyticsArtifacts {
		return vs[0].([]*CameraCustomAnalyticsArtifacts)[vs[1].(int)]
	}).(CameraCustomAnalyticsArtifactsOutput)
}

type CameraCustomAnalyticsArtifactsMapOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsArtifactsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CameraCustomAnalyticsArtifacts)(nil)).Elem()
}

func (o CameraCustomAnalyticsArtifactsMapOutput) ToCameraCustomAnalyticsArtifactsMapOutput() CameraCustomAnalyticsArtifactsMapOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsMapOutput) ToCameraCustomAnalyticsArtifactsMapOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsMapOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsMapOutput) MapIndex(k pulumi.StringInput) CameraCustomAnalyticsArtifactsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CameraCustomAnalyticsArtifacts {
		return vs[0].(map[string]*CameraCustomAnalyticsArtifacts)[vs[1].(string)]
	}).(CameraCustomAnalyticsArtifactsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsArtifactsInput)(nil)).Elem(), &CameraCustomAnalyticsArtifacts{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsArtifactsArrayInput)(nil)).Elem(), CameraCustomAnalyticsArtifactsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsArtifactsMapInput)(nil)).Elem(), CameraCustomAnalyticsArtifactsMap{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsArtifactsOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsArtifactsArrayOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsArtifactsMapOutput{})
}
