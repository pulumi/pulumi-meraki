// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewBrandingPoliciesPriorities(ctx, "example", &organizations.BrandingPoliciesPrioritiesArgs{
//				BrandingPolicyIds: pulumi.StringArray{
//					pulumi.String("123"),
//					pulumi.String("456"),
//					pulumi.String("789"),
//				},
//				OrganizationId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsBrandingPoliciesPrioritiesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/brandingPoliciesPriorities:BrandingPoliciesPriorities example "organization_id"
// ```
type BrandingPoliciesPriorities struct {
	pulumi.CustomResourceState

	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds pulumi.StringArrayOutput `pulumi:"brandingPolicyIds"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
}

// NewBrandingPoliciesPriorities registers a new resource with the given unique name, arguments, and options.
func NewBrandingPoliciesPriorities(ctx *pulumi.Context,
	name string, args *BrandingPoliciesPrioritiesArgs, opts ...pulumi.ResourceOption) (*BrandingPoliciesPriorities, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BrandingPoliciesPriorities
	err := ctx.RegisterResource("meraki:organizations/brandingPoliciesPriorities:BrandingPoliciesPriorities", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrandingPoliciesPriorities gets an existing BrandingPoliciesPriorities resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrandingPoliciesPriorities(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrandingPoliciesPrioritiesState, opts ...pulumi.ResourceOption) (*BrandingPoliciesPriorities, error) {
	var resource BrandingPoliciesPriorities
	err := ctx.ReadResource("meraki:organizations/brandingPoliciesPriorities:BrandingPoliciesPriorities", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BrandingPoliciesPriorities resources.
type brandingPoliciesPrioritiesState struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds []string `pulumi:"brandingPolicyIds"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
}

type BrandingPoliciesPrioritiesState struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
}

func (BrandingPoliciesPrioritiesState) ElementType() reflect.Type {
	return reflect.TypeOf((*brandingPoliciesPrioritiesState)(nil)).Elem()
}

type brandingPoliciesPrioritiesArgs struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds []string `pulumi:"brandingPolicyIds"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

// The set of arguments for constructing a BrandingPoliciesPriorities resource.
type BrandingPoliciesPrioritiesArgs struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
}

func (BrandingPoliciesPrioritiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brandingPoliciesPrioritiesArgs)(nil)).Elem()
}

type BrandingPoliciesPrioritiesInput interface {
	pulumi.Input

	ToBrandingPoliciesPrioritiesOutput() BrandingPoliciesPrioritiesOutput
	ToBrandingPoliciesPrioritiesOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesOutput
}

func (*BrandingPoliciesPriorities) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesPriorities)(nil)).Elem()
}

func (i *BrandingPoliciesPriorities) ToBrandingPoliciesPrioritiesOutput() BrandingPoliciesPrioritiesOutput {
	return i.ToBrandingPoliciesPrioritiesOutputWithContext(context.Background())
}

func (i *BrandingPoliciesPriorities) ToBrandingPoliciesPrioritiesOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesPrioritiesOutput)
}

// BrandingPoliciesPrioritiesArrayInput is an input type that accepts BrandingPoliciesPrioritiesArray and BrandingPoliciesPrioritiesArrayOutput values.
// You can construct a concrete instance of `BrandingPoliciesPrioritiesArrayInput` via:
//
//	BrandingPoliciesPrioritiesArray{ BrandingPoliciesPrioritiesArgs{...} }
type BrandingPoliciesPrioritiesArrayInput interface {
	pulumi.Input

	ToBrandingPoliciesPrioritiesArrayOutput() BrandingPoliciesPrioritiesArrayOutput
	ToBrandingPoliciesPrioritiesArrayOutputWithContext(context.Context) BrandingPoliciesPrioritiesArrayOutput
}

type BrandingPoliciesPrioritiesArray []BrandingPoliciesPrioritiesInput

func (BrandingPoliciesPrioritiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BrandingPoliciesPriorities)(nil)).Elem()
}

func (i BrandingPoliciesPrioritiesArray) ToBrandingPoliciesPrioritiesArrayOutput() BrandingPoliciesPrioritiesArrayOutput {
	return i.ToBrandingPoliciesPrioritiesArrayOutputWithContext(context.Background())
}

func (i BrandingPoliciesPrioritiesArray) ToBrandingPoliciesPrioritiesArrayOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesPrioritiesArrayOutput)
}

// BrandingPoliciesPrioritiesMapInput is an input type that accepts BrandingPoliciesPrioritiesMap and BrandingPoliciesPrioritiesMapOutput values.
// You can construct a concrete instance of `BrandingPoliciesPrioritiesMapInput` via:
//
//	BrandingPoliciesPrioritiesMap{ "key": BrandingPoliciesPrioritiesArgs{...} }
type BrandingPoliciesPrioritiesMapInput interface {
	pulumi.Input

	ToBrandingPoliciesPrioritiesMapOutput() BrandingPoliciesPrioritiesMapOutput
	ToBrandingPoliciesPrioritiesMapOutputWithContext(context.Context) BrandingPoliciesPrioritiesMapOutput
}

type BrandingPoliciesPrioritiesMap map[string]BrandingPoliciesPrioritiesInput

func (BrandingPoliciesPrioritiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BrandingPoliciesPriorities)(nil)).Elem()
}

func (i BrandingPoliciesPrioritiesMap) ToBrandingPoliciesPrioritiesMapOutput() BrandingPoliciesPrioritiesMapOutput {
	return i.ToBrandingPoliciesPrioritiesMapOutputWithContext(context.Background())
}

func (i BrandingPoliciesPrioritiesMap) ToBrandingPoliciesPrioritiesMapOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesPrioritiesMapOutput)
}

type BrandingPoliciesPrioritiesOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesPrioritiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesPriorities)(nil)).Elem()
}

func (o BrandingPoliciesPrioritiesOutput) ToBrandingPoliciesPrioritiesOutput() BrandingPoliciesPrioritiesOutput {
	return o
}

func (o BrandingPoliciesPrioritiesOutput) ToBrandingPoliciesPrioritiesOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesOutput {
	return o
}

// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
func (o BrandingPoliciesPrioritiesOutput) BrandingPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrandingPoliciesPriorities) pulumi.StringArrayOutput { return v.BrandingPolicyIds }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o BrandingPoliciesPrioritiesOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BrandingPoliciesPriorities) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

type BrandingPoliciesPrioritiesArrayOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesPrioritiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BrandingPoliciesPriorities)(nil)).Elem()
}

func (o BrandingPoliciesPrioritiesArrayOutput) ToBrandingPoliciesPrioritiesArrayOutput() BrandingPoliciesPrioritiesArrayOutput {
	return o
}

func (o BrandingPoliciesPrioritiesArrayOutput) ToBrandingPoliciesPrioritiesArrayOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesArrayOutput {
	return o
}

func (o BrandingPoliciesPrioritiesArrayOutput) Index(i pulumi.IntInput) BrandingPoliciesPrioritiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BrandingPoliciesPriorities {
		return vs[0].([]*BrandingPoliciesPriorities)[vs[1].(int)]
	}).(BrandingPoliciesPrioritiesOutput)
}

type BrandingPoliciesPrioritiesMapOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesPrioritiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BrandingPoliciesPriorities)(nil)).Elem()
}

func (o BrandingPoliciesPrioritiesMapOutput) ToBrandingPoliciesPrioritiesMapOutput() BrandingPoliciesPrioritiesMapOutput {
	return o
}

func (o BrandingPoliciesPrioritiesMapOutput) ToBrandingPoliciesPrioritiesMapOutputWithContext(ctx context.Context) BrandingPoliciesPrioritiesMapOutput {
	return o
}

func (o BrandingPoliciesPrioritiesMapOutput) MapIndex(k pulumi.StringInput) BrandingPoliciesPrioritiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BrandingPoliciesPriorities {
		return vs[0].(map[string]*BrandingPoliciesPriorities)[vs[1].(string)]
	}).(BrandingPoliciesPrioritiesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesPrioritiesInput)(nil)).Elem(), &BrandingPoliciesPriorities{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesPrioritiesArrayInput)(nil)).Elem(), BrandingPoliciesPrioritiesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesPrioritiesMapInput)(nil)).Elem(), BrandingPoliciesPrioritiesMap{})
	pulumi.RegisterOutputType(BrandingPoliciesPrioritiesOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesPrioritiesArrayOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesPrioritiesMapOutput{})
}
