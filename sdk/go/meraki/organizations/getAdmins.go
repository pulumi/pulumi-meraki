// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.LookupAdmins(ctx, &organizations.LookupAdminsArgs{
//				OrganizationId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsAdminsExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func LookupAdmins(ctx *pulumi.Context, args *LookupAdminsArgs, opts ...pulumi.InvokeOption) (*LookupAdminsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAdminsResult
	err := ctx.Invoke("meraki:organizations/getAdmins:getAdmins", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAdmins.
type LookupAdminsArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getAdmins.
type LookupAdminsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseOrganizationsGetOrganizationAdmins
	Items []GetAdminsItem `pulumi:"items"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

func LookupAdminsOutput(ctx *pulumi.Context, args LookupAdminsOutputArgs, opts ...pulumi.InvokeOption) LookupAdminsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAdminsResult, error) {
			args := v.(LookupAdminsArgs)
			r, err := LookupAdmins(ctx, &args, opts...)
			var s LookupAdminsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAdminsResultOutput)
}

// A collection of arguments for invoking getAdmins.
type LookupAdminsOutputArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupAdminsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdminsArgs)(nil)).Elem()
}

// A collection of values returned by getAdmins.
type LookupAdminsResultOutput struct{ *pulumi.OutputState }

func (LookupAdminsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdminsResult)(nil)).Elem()
}

func (o LookupAdminsResultOutput) ToLookupAdminsResultOutput() LookupAdminsResultOutput {
	return o
}

func (o LookupAdminsResultOutput) ToLookupAdminsResultOutputWithContext(ctx context.Context) LookupAdminsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAdminsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdminsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseOrganizationsGetOrganizationAdmins
func (o LookupAdminsResultOutput) Items() GetAdminsItemArrayOutput {
	return o.ApplyT(func(v LookupAdminsResult) []GetAdminsItem { return v.Items }).(GetAdminsItemArrayOutput)
}

// organizationId path parameter. Organization ID
func (o LookupAdminsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdminsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAdminsResultOutput{})
}
