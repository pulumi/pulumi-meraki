// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewSwitchDevicesClone(ctx, "example", &organizations.SwitchDevicesCloneArgs{
//				OrganizationId: pulumi.String("string"),
//				Parameters: &organizations.SwitchDevicesCloneParametersArgs{
//					Source_serial: "Q234-ABCD-5678",
//					Target_serials: []string{
//						"Q234-ABCD-0001",
//						"Q234-ABCD-0002",
//						"Q234-ABCD-0003",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsSwitchDevicesCloneExample", example)
//			return nil
//		})
//	}
//
// ```
type SwitchDevicesClone struct {
	pulumi.CustomResourceState

	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput                `pulumi:"organizationId"`
	Parameters     SwitchDevicesCloneParametersOutput `pulumi:"parameters"`
}

// NewSwitchDevicesClone registers a new resource with the given unique name, arguments, and options.
func NewSwitchDevicesClone(ctx *pulumi.Context,
	name string, args *SwitchDevicesCloneArgs, opts ...pulumi.ResourceOption) (*SwitchDevicesClone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchDevicesClone
	err := ctx.RegisterResource("meraki:organizations/switchDevicesClone:SwitchDevicesClone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchDevicesClone gets an existing SwitchDevicesClone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchDevicesClone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchDevicesCloneState, opts ...pulumi.ResourceOption) (*SwitchDevicesClone, error) {
	var resource SwitchDevicesClone
	err := ctx.ReadResource("meraki:organizations/switchDevicesClone:SwitchDevicesClone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchDevicesClone resources.
type switchDevicesCloneState struct {
	// organizationId path parameter. Organization ID
	OrganizationId *string                       `pulumi:"organizationId"`
	Parameters     *SwitchDevicesCloneParameters `pulumi:"parameters"`
}

type SwitchDevicesCloneState struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	Parameters     SwitchDevicesCloneParametersPtrInput
}

func (SwitchDevicesCloneState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchDevicesCloneState)(nil)).Elem()
}

type switchDevicesCloneArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId string                       `pulumi:"organizationId"`
	Parameters     SwitchDevicesCloneParameters `pulumi:"parameters"`
}

// The set of arguments for constructing a SwitchDevicesClone resource.
type SwitchDevicesCloneArgs struct {
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	Parameters     SwitchDevicesCloneParametersInput
}

func (SwitchDevicesCloneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchDevicesCloneArgs)(nil)).Elem()
}

type SwitchDevicesCloneInput interface {
	pulumi.Input

	ToSwitchDevicesCloneOutput() SwitchDevicesCloneOutput
	ToSwitchDevicesCloneOutputWithContext(ctx context.Context) SwitchDevicesCloneOutput
}

func (*SwitchDevicesClone) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDevicesClone)(nil)).Elem()
}

func (i *SwitchDevicesClone) ToSwitchDevicesCloneOutput() SwitchDevicesCloneOutput {
	return i.ToSwitchDevicesCloneOutputWithContext(context.Background())
}

func (i *SwitchDevicesClone) ToSwitchDevicesCloneOutputWithContext(ctx context.Context) SwitchDevicesCloneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneOutput)
}

// SwitchDevicesCloneArrayInput is an input type that accepts SwitchDevicesCloneArray and SwitchDevicesCloneArrayOutput values.
// You can construct a concrete instance of `SwitchDevicesCloneArrayInput` via:
//
//	SwitchDevicesCloneArray{ SwitchDevicesCloneArgs{...} }
type SwitchDevicesCloneArrayInput interface {
	pulumi.Input

	ToSwitchDevicesCloneArrayOutput() SwitchDevicesCloneArrayOutput
	ToSwitchDevicesCloneArrayOutputWithContext(context.Context) SwitchDevicesCloneArrayOutput
}

type SwitchDevicesCloneArray []SwitchDevicesCloneInput

func (SwitchDevicesCloneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchDevicesClone)(nil)).Elem()
}

func (i SwitchDevicesCloneArray) ToSwitchDevicesCloneArrayOutput() SwitchDevicesCloneArrayOutput {
	return i.ToSwitchDevicesCloneArrayOutputWithContext(context.Background())
}

func (i SwitchDevicesCloneArray) ToSwitchDevicesCloneArrayOutputWithContext(ctx context.Context) SwitchDevicesCloneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneArrayOutput)
}

// SwitchDevicesCloneMapInput is an input type that accepts SwitchDevicesCloneMap and SwitchDevicesCloneMapOutput values.
// You can construct a concrete instance of `SwitchDevicesCloneMapInput` via:
//
//	SwitchDevicesCloneMap{ "key": SwitchDevicesCloneArgs{...} }
type SwitchDevicesCloneMapInput interface {
	pulumi.Input

	ToSwitchDevicesCloneMapOutput() SwitchDevicesCloneMapOutput
	ToSwitchDevicesCloneMapOutputWithContext(context.Context) SwitchDevicesCloneMapOutput
}

type SwitchDevicesCloneMap map[string]SwitchDevicesCloneInput

func (SwitchDevicesCloneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchDevicesClone)(nil)).Elem()
}

func (i SwitchDevicesCloneMap) ToSwitchDevicesCloneMapOutput() SwitchDevicesCloneMapOutput {
	return i.ToSwitchDevicesCloneMapOutputWithContext(context.Background())
}

func (i SwitchDevicesCloneMap) ToSwitchDevicesCloneMapOutputWithContext(ctx context.Context) SwitchDevicesCloneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneMapOutput)
}

type SwitchDevicesCloneOutput struct{ *pulumi.OutputState }

func (SwitchDevicesCloneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDevicesClone)(nil)).Elem()
}

func (o SwitchDevicesCloneOutput) ToSwitchDevicesCloneOutput() SwitchDevicesCloneOutput {
	return o
}

func (o SwitchDevicesCloneOutput) ToSwitchDevicesCloneOutputWithContext(ctx context.Context) SwitchDevicesCloneOutput {
	return o
}

// organizationId path parameter. Organization ID
func (o SwitchDevicesCloneOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchDevicesClone) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o SwitchDevicesCloneOutput) Parameters() SwitchDevicesCloneParametersOutput {
	return o.ApplyT(func(v *SwitchDevicesClone) SwitchDevicesCloneParametersOutput { return v.Parameters }).(SwitchDevicesCloneParametersOutput)
}

type SwitchDevicesCloneArrayOutput struct{ *pulumi.OutputState }

func (SwitchDevicesCloneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchDevicesClone)(nil)).Elem()
}

func (o SwitchDevicesCloneArrayOutput) ToSwitchDevicesCloneArrayOutput() SwitchDevicesCloneArrayOutput {
	return o
}

func (o SwitchDevicesCloneArrayOutput) ToSwitchDevicesCloneArrayOutputWithContext(ctx context.Context) SwitchDevicesCloneArrayOutput {
	return o
}

func (o SwitchDevicesCloneArrayOutput) Index(i pulumi.IntInput) SwitchDevicesCloneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchDevicesClone {
		return vs[0].([]*SwitchDevicesClone)[vs[1].(int)]
	}).(SwitchDevicesCloneOutput)
}

type SwitchDevicesCloneMapOutput struct{ *pulumi.OutputState }

func (SwitchDevicesCloneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchDevicesClone)(nil)).Elem()
}

func (o SwitchDevicesCloneMapOutput) ToSwitchDevicesCloneMapOutput() SwitchDevicesCloneMapOutput {
	return o
}

func (o SwitchDevicesCloneMapOutput) ToSwitchDevicesCloneMapOutputWithContext(ctx context.Context) SwitchDevicesCloneMapOutput {
	return o
}

func (o SwitchDevicesCloneMapOutput) MapIndex(k pulumi.StringInput) SwitchDevicesCloneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchDevicesClone {
		return vs[0].(map[string]*SwitchDevicesClone)[vs[1].(string)]
	}).(SwitchDevicesCloneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDevicesCloneInput)(nil)).Elem(), &SwitchDevicesClone{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDevicesCloneArrayInput)(nil)).Elem(), SwitchDevicesCloneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDevicesCloneMapInput)(nil)).Elem(), SwitchDevicesCloneMap{})
	pulumi.RegisterOutputType(SwitchDevicesCloneOutput{})
	pulumi.RegisterOutputType(SwitchDevicesCloneArrayOutput{})
	pulumi.RegisterOutputType(SwitchDevicesCloneMapOutput{})
}
