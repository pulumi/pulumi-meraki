// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.GetDevicesStatuses(ctx, &organizations.GetDevicesStatusesArgs{
//				EndingBefore: pulumi.StringRef("string"),
//				Models: []string{
//					"string",
//				},
//				NetworkIds: []string{
//					"string",
//				},
//				OrganizationId: "string",
//				PerPage:        pulumi.IntRef(1),
//				ProductTypes: []string{
//					"string",
//				},
//				Serials: []string{
//					"string",
//				},
//				StartingAfter: pulumi.StringRef("string"),
//				Statuses: []string{
//					"string",
//				},
//				Tags: []string{
//					"string",
//				},
//				TagsFilterType: pulumi.StringRef("string"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsDevicesStatusesExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func GetDevicesStatuses(ctx *pulumi.Context, args *GetDevicesStatusesArgs, opts ...pulumi.InvokeOption) (*GetDevicesStatusesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDevicesStatusesResult
	err := ctx.Invoke("meraki:organizations/getDevicesStatuses:getDevicesStatuses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDevicesStatuses.
type GetDevicesStatusesArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// models query parameter. Optional parameter to filter devices by models.
	Models []string `pulumi:"models"`
	// networkIds query parameter. Optional parameter to filter devices by network ids.
	NetworkIds []string `pulumi:"networkIds"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
	ProductTypes []string `pulumi:"productTypes"`
	// serials query parameter. Optional parameter to filter devices by serials.
	Serials []string `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// statuses query parameter. Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
	Statuses []string `pulumi:"statuses"`
	// tags query parameter. An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType *string `pulumi:"tagsFilterType"`
}

// A collection of values returned by getDevicesStatuses.
type GetDevicesStatusesResult struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseOrganizationsGetOrganizationDevicesStatuses
	Items []GetDevicesStatusesItem `pulumi:"items"`
	// models query parameter. Optional parameter to filter devices by models.
	Models []string `pulumi:"models"`
	// networkIds query parameter. Optional parameter to filter devices by network ids.
	NetworkIds []string `pulumi:"networkIds"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
	ProductTypes []string `pulumi:"productTypes"`
	// serials query parameter. Optional parameter to filter devices by serials.
	Serials []string `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// statuses query parameter. Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
	Statuses []string `pulumi:"statuses"`
	// tags query parameter. An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType *string `pulumi:"tagsFilterType"`
}

func GetDevicesStatusesOutput(ctx *pulumi.Context, args GetDevicesStatusesOutputArgs, opts ...pulumi.InvokeOption) GetDevicesStatusesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDevicesStatusesResultOutput, error) {
			args := v.(GetDevicesStatusesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDevicesStatusesResult
			secret, err := ctx.InvokePackageRaw("meraki:organizations/getDevicesStatuses:getDevicesStatuses", args, &rv, "", opts...)
			if err != nil {
				return GetDevicesStatusesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDevicesStatusesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDevicesStatusesResultOutput), nil
			}
			return output, nil
		}).(GetDevicesStatusesResultOutput)
}

// A collection of arguments for invoking getDevicesStatuses.
type GetDevicesStatusesOutputArgs struct {
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore pulumi.StringPtrInput `pulumi:"endingBefore"`
	// models query parameter. Optional parameter to filter devices by models.
	Models pulumi.StringArrayInput `pulumi:"models"`
	// networkIds query parameter. Optional parameter to filter devices by network ids.
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// productTypes query parameter. An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// serials query parameter. Optional parameter to filter devices by serials.
	Serials pulumi.StringArrayInput `pulumi:"serials"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter pulumi.StringPtrInput `pulumi:"startingAfter"`
	// statuses query parameter. Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// tags query parameter. An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType pulumi.StringPtrInput `pulumi:"tagsFilterType"`
}

func (GetDevicesStatusesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesArgs)(nil)).Elem()
}

// A collection of values returned by getDevicesStatuses.
type GetDevicesStatusesResultOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesResult)(nil)).Elem()
}

func (o GetDevicesStatusesResultOutput) ToGetDevicesStatusesResultOutput() GetDevicesStatusesResultOutput {
	return o
}

func (o GetDevicesStatusesResultOutput) ToGetDevicesStatusesResultOutputWithContext(ctx context.Context) GetDevicesStatusesResultOutput {
	return o
}

// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetDevicesStatusesResultOutput) EndingBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) *string { return v.EndingBefore }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDevicesStatusesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseOrganizationsGetOrganizationDevicesStatuses
func (o GetDevicesStatusesResultOutput) Items() GetDevicesStatusesItemArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []GetDevicesStatusesItem { return v.Items }).(GetDevicesStatusesItemArrayOutput)
}

// models query parameter. Optional parameter to filter devices by models.
func (o GetDevicesStatusesResultOutput) Models() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.Models }).(pulumi.StringArrayOutput)
}

// networkIds query parameter. Optional parameter to filter devices by network ids.
func (o GetDevicesStatusesResultOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o GetDevicesStatusesResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
func (o GetDevicesStatusesResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// productTypes query parameter. An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
func (o GetDevicesStatusesResultOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// serials query parameter. Optional parameter to filter devices by serials.
func (o GetDevicesStatusesResultOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetDevicesStatusesResultOutput) StartingAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) *string { return v.StartingAfter }).(pulumi.StringPtrOutput)
}

// statuses query parameter. Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
func (o GetDevicesStatusesResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

// tags query parameter. An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
func (o GetDevicesStatusesResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
func (o GetDevicesStatusesResultOutput) TagsFilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDevicesStatusesResult) *string { return v.TagsFilterType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDevicesStatusesResultOutput{})
}
