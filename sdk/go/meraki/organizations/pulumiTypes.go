// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ActionBatchesAction struct {
	// Data provided in the body of the Action. Contents depend on the Action type
	Body *string `pulumi:"body"`
	// The operation to be used by this action
	Operation *string `pulumi:"operation"`
	// Unique identifier for the resource to be acted on
	Resource *string `pulumi:"resource"`
}

// ActionBatchesActionInput is an input type that accepts ActionBatchesActionArgs and ActionBatchesActionOutput values.
// You can construct a concrete instance of `ActionBatchesActionInput` via:
//
//	ActionBatchesActionArgs{...}
type ActionBatchesActionInput interface {
	pulumi.Input

	ToActionBatchesActionOutput() ActionBatchesActionOutput
	ToActionBatchesActionOutputWithContext(context.Context) ActionBatchesActionOutput
}

type ActionBatchesActionArgs struct {
	// Data provided in the body of the Action. Contents depend on the Action type
	Body pulumi.StringPtrInput `pulumi:"body"`
	// The operation to be used by this action
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// Unique identifier for the resource to be acted on
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (ActionBatchesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesAction)(nil)).Elem()
}

func (i ActionBatchesActionArgs) ToActionBatchesActionOutput() ActionBatchesActionOutput {
	return i.ToActionBatchesActionOutputWithContext(context.Background())
}

func (i ActionBatchesActionArgs) ToActionBatchesActionOutputWithContext(ctx context.Context) ActionBatchesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesActionOutput)
}

// ActionBatchesActionArrayInput is an input type that accepts ActionBatchesActionArray and ActionBatchesActionArrayOutput values.
// You can construct a concrete instance of `ActionBatchesActionArrayInput` via:
//
//	ActionBatchesActionArray{ ActionBatchesActionArgs{...} }
type ActionBatchesActionArrayInput interface {
	pulumi.Input

	ToActionBatchesActionArrayOutput() ActionBatchesActionArrayOutput
	ToActionBatchesActionArrayOutputWithContext(context.Context) ActionBatchesActionArrayOutput
}

type ActionBatchesActionArray []ActionBatchesActionInput

func (ActionBatchesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionBatchesAction)(nil)).Elem()
}

func (i ActionBatchesActionArray) ToActionBatchesActionArrayOutput() ActionBatchesActionArrayOutput {
	return i.ToActionBatchesActionArrayOutputWithContext(context.Background())
}

func (i ActionBatchesActionArray) ToActionBatchesActionArrayOutputWithContext(ctx context.Context) ActionBatchesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesActionArrayOutput)
}

type ActionBatchesActionOutput struct{ *pulumi.OutputState }

func (ActionBatchesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesAction)(nil)).Elem()
}

func (o ActionBatchesActionOutput) ToActionBatchesActionOutput() ActionBatchesActionOutput {
	return o
}

func (o ActionBatchesActionOutput) ToActionBatchesActionOutputWithContext(ctx context.Context) ActionBatchesActionOutput {
	return o
}

// Data provided in the body of the Action. Contents depend on the Action type
func (o ActionBatchesActionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesAction) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// The operation to be used by this action
func (o ActionBatchesActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// Unique identifier for the resource to be acted on
func (o ActionBatchesActionOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesAction) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type ActionBatchesActionArrayOutput struct{ *pulumi.OutputState }

func (ActionBatchesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionBatchesAction)(nil)).Elem()
}

func (o ActionBatchesActionArrayOutput) ToActionBatchesActionArrayOutput() ActionBatchesActionArrayOutput {
	return o
}

func (o ActionBatchesActionArrayOutput) ToActionBatchesActionArrayOutputWithContext(ctx context.Context) ActionBatchesActionArrayOutput {
	return o
}

func (o ActionBatchesActionArrayOutput) Index(i pulumi.IntInput) ActionBatchesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionBatchesAction {
		return vs[0].([]ActionBatchesAction)[vs[1].(int)]
	}).(ActionBatchesActionOutput)
}

type ActionBatchesCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *ActionBatchesCallbackHttpServer `pulumi:"httpServer"`
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id *string `pulumi:"id"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *ActionBatchesCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The status of the callback
	Status *string `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url *string `pulumi:"url"`
}

// ActionBatchesCallbackInput is an input type that accepts ActionBatchesCallbackArgs and ActionBatchesCallbackOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackInput` via:
//
//	ActionBatchesCallbackArgs{...}
type ActionBatchesCallbackInput interface {
	pulumi.Input

	ToActionBatchesCallbackOutput() ActionBatchesCallbackOutput
	ToActionBatchesCallbackOutputWithContext(context.Context) ActionBatchesCallbackOutput
}

type ActionBatchesCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer ActionBatchesCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The payload template of the webhook used for the callback
	PayloadTemplate ActionBatchesCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The status of the callback
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ActionBatchesCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallback)(nil)).Elem()
}

func (i ActionBatchesCallbackArgs) ToActionBatchesCallbackOutput() ActionBatchesCallbackOutput {
	return i.ToActionBatchesCallbackOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackArgs) ToActionBatchesCallbackOutputWithContext(ctx context.Context) ActionBatchesCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackOutput)
}

func (i ActionBatchesCallbackArgs) ToActionBatchesCallbackPtrOutput() ActionBatchesCallbackPtrOutput {
	return i.ToActionBatchesCallbackPtrOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackArgs) ToActionBatchesCallbackPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackOutput).ToActionBatchesCallbackPtrOutputWithContext(ctx)
}

// ActionBatchesCallbackPtrInput is an input type that accepts ActionBatchesCallbackArgs, ActionBatchesCallbackPtr and ActionBatchesCallbackPtrOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackPtrInput` via:
//
//	        ActionBatchesCallbackArgs{...}
//
//	or:
//
//	        nil
type ActionBatchesCallbackPtrInput interface {
	pulumi.Input

	ToActionBatchesCallbackPtrOutput() ActionBatchesCallbackPtrOutput
	ToActionBatchesCallbackPtrOutputWithContext(context.Context) ActionBatchesCallbackPtrOutput
}

type actionBatchesCallbackPtrType ActionBatchesCallbackArgs

func ActionBatchesCallbackPtr(v *ActionBatchesCallbackArgs) ActionBatchesCallbackPtrInput {
	return (*actionBatchesCallbackPtrType)(v)
}

func (*actionBatchesCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallback)(nil)).Elem()
}

func (i *actionBatchesCallbackPtrType) ToActionBatchesCallbackPtrOutput() ActionBatchesCallbackPtrOutput {
	return i.ToActionBatchesCallbackPtrOutputWithContext(context.Background())
}

func (i *actionBatchesCallbackPtrType) ToActionBatchesCallbackPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackPtrOutput)
}

type ActionBatchesCallbackOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallback)(nil)).Elem()
}

func (o ActionBatchesCallbackOutput) ToActionBatchesCallbackOutput() ActionBatchesCallbackOutput {
	return o
}

func (o ActionBatchesCallbackOutput) ToActionBatchesCallbackOutputWithContext(ctx context.Context) ActionBatchesCallbackOutput {
	return o
}

func (o ActionBatchesCallbackOutput) ToActionBatchesCallbackPtrOutput() ActionBatchesCallbackPtrOutput {
	return o.ToActionBatchesCallbackPtrOutputWithContext(context.Background())
}

func (o ActionBatchesCallbackOutput) ToActionBatchesCallbackPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionBatchesCallback) *ActionBatchesCallback {
		return &v
	}).(ActionBatchesCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o ActionBatchesCallbackOutput) HttpServer() ActionBatchesCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *ActionBatchesCallbackHttpServer { return v.HttpServer }).(ActionBatchesCallbackHttpServerPtrOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o ActionBatchesCallbackOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The payload template of the webhook used for the callback
func (o ActionBatchesCallbackOutput) PayloadTemplate() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *ActionBatchesCallbackPayloadTemplate { return v.PayloadTemplate }).(ActionBatchesCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o ActionBatchesCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o ActionBatchesCallbackOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o ActionBatchesCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ActionBatchesCallbackPtrOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallback)(nil)).Elem()
}

func (o ActionBatchesCallbackPtrOutput) ToActionBatchesCallbackPtrOutput() ActionBatchesCallbackPtrOutput {
	return o
}

func (o ActionBatchesCallbackPtrOutput) ToActionBatchesCallbackPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPtrOutput {
	return o
}

func (o ActionBatchesCallbackPtrOutput) Elem() ActionBatchesCallbackOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) ActionBatchesCallback {
		if v != nil {
			return *v
		}
		var ret ActionBatchesCallback
		return ret
	}).(ActionBatchesCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o ActionBatchesCallbackPtrOutput) HttpServer() ActionBatchesCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *ActionBatchesCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(ActionBatchesCallbackHttpServerPtrOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o ActionBatchesCallbackPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The payload template of the webhook used for the callback
func (o ActionBatchesCallbackPtrOutput) PayloadTemplate() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *ActionBatchesCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(ActionBatchesCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o ActionBatchesCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o ActionBatchesCallbackPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o ActionBatchesCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ActionBatchesCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// ActionBatchesCallbackHttpServerInput is an input type that accepts ActionBatchesCallbackHttpServerArgs and ActionBatchesCallbackHttpServerOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackHttpServerInput` via:
//
//	ActionBatchesCallbackHttpServerArgs{...}
type ActionBatchesCallbackHttpServerInput interface {
	pulumi.Input

	ToActionBatchesCallbackHttpServerOutput() ActionBatchesCallbackHttpServerOutput
	ToActionBatchesCallbackHttpServerOutputWithContext(context.Context) ActionBatchesCallbackHttpServerOutput
}

type ActionBatchesCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ActionBatchesCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallbackHttpServer)(nil)).Elem()
}

func (i ActionBatchesCallbackHttpServerArgs) ToActionBatchesCallbackHttpServerOutput() ActionBatchesCallbackHttpServerOutput {
	return i.ToActionBatchesCallbackHttpServerOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackHttpServerArgs) ToActionBatchesCallbackHttpServerOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackHttpServerOutput)
}

func (i ActionBatchesCallbackHttpServerArgs) ToActionBatchesCallbackHttpServerPtrOutput() ActionBatchesCallbackHttpServerPtrOutput {
	return i.ToActionBatchesCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackHttpServerArgs) ToActionBatchesCallbackHttpServerPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackHttpServerOutput).ToActionBatchesCallbackHttpServerPtrOutputWithContext(ctx)
}

// ActionBatchesCallbackHttpServerPtrInput is an input type that accepts ActionBatchesCallbackHttpServerArgs, ActionBatchesCallbackHttpServerPtr and ActionBatchesCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackHttpServerPtrInput` via:
//
//	        ActionBatchesCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type ActionBatchesCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToActionBatchesCallbackHttpServerPtrOutput() ActionBatchesCallbackHttpServerPtrOutput
	ToActionBatchesCallbackHttpServerPtrOutputWithContext(context.Context) ActionBatchesCallbackHttpServerPtrOutput
}

type actionBatchesCallbackHttpServerPtrType ActionBatchesCallbackHttpServerArgs

func ActionBatchesCallbackHttpServerPtr(v *ActionBatchesCallbackHttpServerArgs) ActionBatchesCallbackHttpServerPtrInput {
	return (*actionBatchesCallbackHttpServerPtrType)(v)
}

func (*actionBatchesCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallbackHttpServer)(nil)).Elem()
}

func (i *actionBatchesCallbackHttpServerPtrType) ToActionBatchesCallbackHttpServerPtrOutput() ActionBatchesCallbackHttpServerPtrOutput {
	return i.ToActionBatchesCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *actionBatchesCallbackHttpServerPtrType) ToActionBatchesCallbackHttpServerPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackHttpServerPtrOutput)
}

type ActionBatchesCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallbackHttpServer)(nil)).Elem()
}

func (o ActionBatchesCallbackHttpServerOutput) ToActionBatchesCallbackHttpServerOutput() ActionBatchesCallbackHttpServerOutput {
	return o
}

func (o ActionBatchesCallbackHttpServerOutput) ToActionBatchesCallbackHttpServerOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerOutput {
	return o
}

func (o ActionBatchesCallbackHttpServerOutput) ToActionBatchesCallbackHttpServerPtrOutput() ActionBatchesCallbackHttpServerPtrOutput {
	return o.ToActionBatchesCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o ActionBatchesCallbackHttpServerOutput) ToActionBatchesCallbackHttpServerPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionBatchesCallbackHttpServer) *ActionBatchesCallbackHttpServer {
		return &v
	}).(ActionBatchesCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o ActionBatchesCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ActionBatchesCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallbackHttpServer)(nil)).Elem()
}

func (o ActionBatchesCallbackHttpServerPtrOutput) ToActionBatchesCallbackHttpServerPtrOutput() ActionBatchesCallbackHttpServerPtrOutput {
	return o
}

func (o ActionBatchesCallbackHttpServerPtrOutput) ToActionBatchesCallbackHttpServerPtrOutputWithContext(ctx context.Context) ActionBatchesCallbackHttpServerPtrOutput {
	return o
}

func (o ActionBatchesCallbackHttpServerPtrOutput) Elem() ActionBatchesCallbackHttpServerOutput {
	return o.ApplyT(func(v *ActionBatchesCallbackHttpServer) ActionBatchesCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret ActionBatchesCallbackHttpServer
		return ret
	}).(ActionBatchesCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o ActionBatchesCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ActionBatchesCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// ActionBatchesCallbackPayloadTemplateInput is an input type that accepts ActionBatchesCallbackPayloadTemplateArgs and ActionBatchesCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackPayloadTemplateInput` via:
//
//	ActionBatchesCallbackPayloadTemplateArgs{...}
type ActionBatchesCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToActionBatchesCallbackPayloadTemplateOutput() ActionBatchesCallbackPayloadTemplateOutput
	ToActionBatchesCallbackPayloadTemplateOutputWithContext(context.Context) ActionBatchesCallbackPayloadTemplateOutput
}

type ActionBatchesCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ActionBatchesCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallbackPayloadTemplate)(nil)).Elem()
}

func (i ActionBatchesCallbackPayloadTemplateArgs) ToActionBatchesCallbackPayloadTemplateOutput() ActionBatchesCallbackPayloadTemplateOutput {
	return i.ToActionBatchesCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackPayloadTemplateArgs) ToActionBatchesCallbackPayloadTemplateOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackPayloadTemplateOutput)
}

func (i ActionBatchesCallbackPayloadTemplateArgs) ToActionBatchesCallbackPayloadTemplatePtrOutput() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return i.ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i ActionBatchesCallbackPayloadTemplateArgs) ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackPayloadTemplateOutput).ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// ActionBatchesCallbackPayloadTemplatePtrInput is an input type that accepts ActionBatchesCallbackPayloadTemplateArgs, ActionBatchesCallbackPayloadTemplatePtr and ActionBatchesCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `ActionBatchesCallbackPayloadTemplatePtrInput` via:
//
//	        ActionBatchesCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type ActionBatchesCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToActionBatchesCallbackPayloadTemplatePtrOutput() ActionBatchesCallbackPayloadTemplatePtrOutput
	ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(context.Context) ActionBatchesCallbackPayloadTemplatePtrOutput
}

type actionBatchesCallbackPayloadTemplatePtrType ActionBatchesCallbackPayloadTemplateArgs

func ActionBatchesCallbackPayloadTemplatePtr(v *ActionBatchesCallbackPayloadTemplateArgs) ActionBatchesCallbackPayloadTemplatePtrInput {
	return (*actionBatchesCallbackPayloadTemplatePtrType)(v)
}

func (*actionBatchesCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallbackPayloadTemplate)(nil)).Elem()
}

func (i *actionBatchesCallbackPayloadTemplatePtrType) ToActionBatchesCallbackPayloadTemplatePtrOutput() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return i.ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *actionBatchesCallbackPayloadTemplatePtrType) ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesCallbackPayloadTemplatePtrOutput)
}

type ActionBatchesCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesCallbackPayloadTemplate)(nil)).Elem()
}

func (o ActionBatchesCallbackPayloadTemplateOutput) ToActionBatchesCallbackPayloadTemplateOutput() ActionBatchesCallbackPayloadTemplateOutput {
	return o
}

func (o ActionBatchesCallbackPayloadTemplateOutput) ToActionBatchesCallbackPayloadTemplateOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplateOutput {
	return o
}

func (o ActionBatchesCallbackPayloadTemplateOutput) ToActionBatchesCallbackPayloadTemplatePtrOutput() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o.ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o ActionBatchesCallbackPayloadTemplateOutput) ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionBatchesCallbackPayloadTemplate) *ActionBatchesCallbackPayloadTemplate {
		return &v
	}).(ActionBatchesCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o ActionBatchesCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ActionBatchesCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (ActionBatchesCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesCallbackPayloadTemplate)(nil)).Elem()
}

func (o ActionBatchesCallbackPayloadTemplatePtrOutput) ToActionBatchesCallbackPayloadTemplatePtrOutput() ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o
}

func (o ActionBatchesCallbackPayloadTemplatePtrOutput) ToActionBatchesCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) ActionBatchesCallbackPayloadTemplatePtrOutput {
	return o
}

func (o ActionBatchesCallbackPayloadTemplatePtrOutput) Elem() ActionBatchesCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *ActionBatchesCallbackPayloadTemplate) ActionBatchesCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret ActionBatchesCallbackPayloadTemplate
		return ret
	}).(ActionBatchesCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o ActionBatchesCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionBatchesCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ActionBatchesStatus struct {
	// Flag describing whether all actions in the action batch have completed
	Completed *bool `pulumi:"completed"`
	// Resources created as a result of this action batch
	CreatedResources []ActionBatchesStatusCreatedResource `pulumi:"createdResources"`
	// List of errors encountered when running actions in the action batch
	Errors []string `pulumi:"errors"`
	// Flag describing whether any actions in the action batch failed
	Failed *bool `pulumi:"failed"`
}

// ActionBatchesStatusInput is an input type that accepts ActionBatchesStatusArgs and ActionBatchesStatusOutput values.
// You can construct a concrete instance of `ActionBatchesStatusInput` via:
//
//	ActionBatchesStatusArgs{...}
type ActionBatchesStatusInput interface {
	pulumi.Input

	ToActionBatchesStatusOutput() ActionBatchesStatusOutput
	ToActionBatchesStatusOutputWithContext(context.Context) ActionBatchesStatusOutput
}

type ActionBatchesStatusArgs struct {
	// Flag describing whether all actions in the action batch have completed
	Completed pulumi.BoolPtrInput `pulumi:"completed"`
	// Resources created as a result of this action batch
	CreatedResources ActionBatchesStatusCreatedResourceArrayInput `pulumi:"createdResources"`
	// List of errors encountered when running actions in the action batch
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// Flag describing whether any actions in the action batch failed
	Failed pulumi.BoolPtrInput `pulumi:"failed"`
}

func (ActionBatchesStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesStatus)(nil)).Elem()
}

func (i ActionBatchesStatusArgs) ToActionBatchesStatusOutput() ActionBatchesStatusOutput {
	return i.ToActionBatchesStatusOutputWithContext(context.Background())
}

func (i ActionBatchesStatusArgs) ToActionBatchesStatusOutputWithContext(ctx context.Context) ActionBatchesStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesStatusOutput)
}

func (i ActionBatchesStatusArgs) ToActionBatchesStatusPtrOutput() ActionBatchesStatusPtrOutput {
	return i.ToActionBatchesStatusPtrOutputWithContext(context.Background())
}

func (i ActionBatchesStatusArgs) ToActionBatchesStatusPtrOutputWithContext(ctx context.Context) ActionBatchesStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesStatusOutput).ToActionBatchesStatusPtrOutputWithContext(ctx)
}

// ActionBatchesStatusPtrInput is an input type that accepts ActionBatchesStatusArgs, ActionBatchesStatusPtr and ActionBatchesStatusPtrOutput values.
// You can construct a concrete instance of `ActionBatchesStatusPtrInput` via:
//
//	        ActionBatchesStatusArgs{...}
//
//	or:
//
//	        nil
type ActionBatchesStatusPtrInput interface {
	pulumi.Input

	ToActionBatchesStatusPtrOutput() ActionBatchesStatusPtrOutput
	ToActionBatchesStatusPtrOutputWithContext(context.Context) ActionBatchesStatusPtrOutput
}

type actionBatchesStatusPtrType ActionBatchesStatusArgs

func ActionBatchesStatusPtr(v *ActionBatchesStatusArgs) ActionBatchesStatusPtrInput {
	return (*actionBatchesStatusPtrType)(v)
}

func (*actionBatchesStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesStatus)(nil)).Elem()
}

func (i *actionBatchesStatusPtrType) ToActionBatchesStatusPtrOutput() ActionBatchesStatusPtrOutput {
	return i.ToActionBatchesStatusPtrOutputWithContext(context.Background())
}

func (i *actionBatchesStatusPtrType) ToActionBatchesStatusPtrOutputWithContext(ctx context.Context) ActionBatchesStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesStatusPtrOutput)
}

type ActionBatchesStatusOutput struct{ *pulumi.OutputState }

func (ActionBatchesStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesStatus)(nil)).Elem()
}

func (o ActionBatchesStatusOutput) ToActionBatchesStatusOutput() ActionBatchesStatusOutput {
	return o
}

func (o ActionBatchesStatusOutput) ToActionBatchesStatusOutputWithContext(ctx context.Context) ActionBatchesStatusOutput {
	return o
}

func (o ActionBatchesStatusOutput) ToActionBatchesStatusPtrOutput() ActionBatchesStatusPtrOutput {
	return o.ToActionBatchesStatusPtrOutputWithContext(context.Background())
}

func (o ActionBatchesStatusOutput) ToActionBatchesStatusPtrOutputWithContext(ctx context.Context) ActionBatchesStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionBatchesStatus) *ActionBatchesStatus {
		return &v
	}).(ActionBatchesStatusPtrOutput)
}

// Flag describing whether all actions in the action batch have completed
func (o ActionBatchesStatusOutput) Completed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionBatchesStatus) *bool { return v.Completed }).(pulumi.BoolPtrOutput)
}

// Resources created as a result of this action batch
func (o ActionBatchesStatusOutput) CreatedResources() ActionBatchesStatusCreatedResourceArrayOutput {
	return o.ApplyT(func(v ActionBatchesStatus) []ActionBatchesStatusCreatedResource { return v.CreatedResources }).(ActionBatchesStatusCreatedResourceArrayOutput)
}

// List of errors encountered when running actions in the action batch
func (o ActionBatchesStatusOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionBatchesStatus) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// Flag describing whether any actions in the action batch failed
func (o ActionBatchesStatusOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionBatchesStatus) *bool { return v.Failed }).(pulumi.BoolPtrOutput)
}

type ActionBatchesStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionBatchesStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionBatchesStatus)(nil)).Elem()
}

func (o ActionBatchesStatusPtrOutput) ToActionBatchesStatusPtrOutput() ActionBatchesStatusPtrOutput {
	return o
}

func (o ActionBatchesStatusPtrOutput) ToActionBatchesStatusPtrOutputWithContext(ctx context.Context) ActionBatchesStatusPtrOutput {
	return o
}

func (o ActionBatchesStatusPtrOutput) Elem() ActionBatchesStatusOutput {
	return o.ApplyT(func(v *ActionBatchesStatus) ActionBatchesStatus {
		if v != nil {
			return *v
		}
		var ret ActionBatchesStatus
		return ret
	}).(ActionBatchesStatusOutput)
}

// Flag describing whether all actions in the action batch have completed
func (o ActionBatchesStatusPtrOutput) Completed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionBatchesStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.BoolPtrOutput)
}

// Resources created as a result of this action batch
func (o ActionBatchesStatusPtrOutput) CreatedResources() ActionBatchesStatusCreatedResourceArrayOutput {
	return o.ApplyT(func(v *ActionBatchesStatus) []ActionBatchesStatusCreatedResource {
		if v == nil {
			return nil
		}
		return v.CreatedResources
	}).(ActionBatchesStatusCreatedResourceArrayOutput)
}

// List of errors encountered when running actions in the action batch
func (o ActionBatchesStatusPtrOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActionBatchesStatus) []string {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(pulumi.StringArrayOutput)
}

// Flag describing whether any actions in the action batch failed
func (o ActionBatchesStatusPtrOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionBatchesStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Failed
	}).(pulumi.BoolPtrOutput)
}

type ActionBatchesStatusCreatedResource struct {
	// ID of the created resource
	Id *string `pulumi:"id"`
	// URI, not including base, of the created resource
	Uri *string `pulumi:"uri"`
}

// ActionBatchesStatusCreatedResourceInput is an input type that accepts ActionBatchesStatusCreatedResourceArgs and ActionBatchesStatusCreatedResourceOutput values.
// You can construct a concrete instance of `ActionBatchesStatusCreatedResourceInput` via:
//
//	ActionBatchesStatusCreatedResourceArgs{...}
type ActionBatchesStatusCreatedResourceInput interface {
	pulumi.Input

	ToActionBatchesStatusCreatedResourceOutput() ActionBatchesStatusCreatedResourceOutput
	ToActionBatchesStatusCreatedResourceOutputWithContext(context.Context) ActionBatchesStatusCreatedResourceOutput
}

type ActionBatchesStatusCreatedResourceArgs struct {
	// ID of the created resource
	Id pulumi.StringPtrInput `pulumi:"id"`
	// URI, not including base, of the created resource
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ActionBatchesStatusCreatedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesStatusCreatedResource)(nil)).Elem()
}

func (i ActionBatchesStatusCreatedResourceArgs) ToActionBatchesStatusCreatedResourceOutput() ActionBatchesStatusCreatedResourceOutput {
	return i.ToActionBatchesStatusCreatedResourceOutputWithContext(context.Background())
}

func (i ActionBatchesStatusCreatedResourceArgs) ToActionBatchesStatusCreatedResourceOutputWithContext(ctx context.Context) ActionBatchesStatusCreatedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesStatusCreatedResourceOutput)
}

// ActionBatchesStatusCreatedResourceArrayInput is an input type that accepts ActionBatchesStatusCreatedResourceArray and ActionBatchesStatusCreatedResourceArrayOutput values.
// You can construct a concrete instance of `ActionBatchesStatusCreatedResourceArrayInput` via:
//
//	ActionBatchesStatusCreatedResourceArray{ ActionBatchesStatusCreatedResourceArgs{...} }
type ActionBatchesStatusCreatedResourceArrayInput interface {
	pulumi.Input

	ToActionBatchesStatusCreatedResourceArrayOutput() ActionBatchesStatusCreatedResourceArrayOutput
	ToActionBatchesStatusCreatedResourceArrayOutputWithContext(context.Context) ActionBatchesStatusCreatedResourceArrayOutput
}

type ActionBatchesStatusCreatedResourceArray []ActionBatchesStatusCreatedResourceInput

func (ActionBatchesStatusCreatedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionBatchesStatusCreatedResource)(nil)).Elem()
}

func (i ActionBatchesStatusCreatedResourceArray) ToActionBatchesStatusCreatedResourceArrayOutput() ActionBatchesStatusCreatedResourceArrayOutput {
	return i.ToActionBatchesStatusCreatedResourceArrayOutputWithContext(context.Background())
}

func (i ActionBatchesStatusCreatedResourceArray) ToActionBatchesStatusCreatedResourceArrayOutputWithContext(ctx context.Context) ActionBatchesStatusCreatedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionBatchesStatusCreatedResourceArrayOutput)
}

type ActionBatchesStatusCreatedResourceOutput struct{ *pulumi.OutputState }

func (ActionBatchesStatusCreatedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionBatchesStatusCreatedResource)(nil)).Elem()
}

func (o ActionBatchesStatusCreatedResourceOutput) ToActionBatchesStatusCreatedResourceOutput() ActionBatchesStatusCreatedResourceOutput {
	return o
}

func (o ActionBatchesStatusCreatedResourceOutput) ToActionBatchesStatusCreatedResourceOutputWithContext(ctx context.Context) ActionBatchesStatusCreatedResourceOutput {
	return o
}

// ID of the created resource
func (o ActionBatchesStatusCreatedResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesStatusCreatedResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// URI, not including base, of the created resource
func (o ActionBatchesStatusCreatedResourceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionBatchesStatusCreatedResource) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ActionBatchesStatusCreatedResourceArrayOutput struct{ *pulumi.OutputState }

func (ActionBatchesStatusCreatedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionBatchesStatusCreatedResource)(nil)).Elem()
}

func (o ActionBatchesStatusCreatedResourceArrayOutput) ToActionBatchesStatusCreatedResourceArrayOutput() ActionBatchesStatusCreatedResourceArrayOutput {
	return o
}

func (o ActionBatchesStatusCreatedResourceArrayOutput) ToActionBatchesStatusCreatedResourceArrayOutputWithContext(ctx context.Context) ActionBatchesStatusCreatedResourceArrayOutput {
	return o
}

func (o ActionBatchesStatusCreatedResourceArrayOutput) Index(i pulumi.IntInput) ActionBatchesStatusCreatedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionBatchesStatusCreatedResource {
		return vs[0].([]ActionBatchesStatusCreatedResource)[vs[1].(int)]
	}).(ActionBatchesStatusCreatedResourceOutput)
}

type AdaptivePolicyAclsRule struct {
	// Destination port
	DstPort *string `pulumi:"dstPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy *string `pulumi:"policy"`
	// The type of protocol
	Protocol *string `pulumi:"protocol"`
	// Source port
	SrcPort *string `pulumi:"srcPort"`
}

// AdaptivePolicyAclsRuleInput is an input type that accepts AdaptivePolicyAclsRuleArgs and AdaptivePolicyAclsRuleOutput values.
// You can construct a concrete instance of `AdaptivePolicyAclsRuleInput` via:
//
//	AdaptivePolicyAclsRuleArgs{...}
type AdaptivePolicyAclsRuleInput interface {
	pulumi.Input

	ToAdaptivePolicyAclsRuleOutput() AdaptivePolicyAclsRuleOutput
	ToAdaptivePolicyAclsRuleOutputWithContext(context.Context) AdaptivePolicyAclsRuleOutput
}

type AdaptivePolicyAclsRuleArgs struct {
	// Destination port
	DstPort pulumi.StringPtrInput `pulumi:"dstPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The type of protocol
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Source port
	SrcPort pulumi.StringPtrInput `pulumi:"srcPort"`
}

func (AdaptivePolicyAclsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyAclsRule)(nil)).Elem()
}

func (i AdaptivePolicyAclsRuleArgs) ToAdaptivePolicyAclsRuleOutput() AdaptivePolicyAclsRuleOutput {
	return i.ToAdaptivePolicyAclsRuleOutputWithContext(context.Background())
}

func (i AdaptivePolicyAclsRuleArgs) ToAdaptivePolicyAclsRuleOutputWithContext(ctx context.Context) AdaptivePolicyAclsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyAclsRuleOutput)
}

// AdaptivePolicyAclsRuleArrayInput is an input type that accepts AdaptivePolicyAclsRuleArray and AdaptivePolicyAclsRuleArrayOutput values.
// You can construct a concrete instance of `AdaptivePolicyAclsRuleArrayInput` via:
//
//	AdaptivePolicyAclsRuleArray{ AdaptivePolicyAclsRuleArgs{...} }
type AdaptivePolicyAclsRuleArrayInput interface {
	pulumi.Input

	ToAdaptivePolicyAclsRuleArrayOutput() AdaptivePolicyAclsRuleArrayOutput
	ToAdaptivePolicyAclsRuleArrayOutputWithContext(context.Context) AdaptivePolicyAclsRuleArrayOutput
}

type AdaptivePolicyAclsRuleArray []AdaptivePolicyAclsRuleInput

func (AdaptivePolicyAclsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyAclsRule)(nil)).Elem()
}

func (i AdaptivePolicyAclsRuleArray) ToAdaptivePolicyAclsRuleArrayOutput() AdaptivePolicyAclsRuleArrayOutput {
	return i.ToAdaptivePolicyAclsRuleArrayOutputWithContext(context.Background())
}

func (i AdaptivePolicyAclsRuleArray) ToAdaptivePolicyAclsRuleArrayOutputWithContext(ctx context.Context) AdaptivePolicyAclsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyAclsRuleArrayOutput)
}

type AdaptivePolicyAclsRuleOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyAclsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyAclsRule)(nil)).Elem()
}

func (o AdaptivePolicyAclsRuleOutput) ToAdaptivePolicyAclsRuleOutput() AdaptivePolicyAclsRuleOutput {
	return o
}

func (o AdaptivePolicyAclsRuleOutput) ToAdaptivePolicyAclsRuleOutputWithContext(ctx context.Context) AdaptivePolicyAclsRuleOutput {
	return o
}

// Destination port
func (o AdaptivePolicyAclsRuleOutput) DstPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyAclsRule) *string { return v.DstPort }).(pulumi.StringPtrOutput)
}

// 'allow' or 'deny' traffic specified by this rule
func (o AdaptivePolicyAclsRuleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyAclsRule) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The type of protocol
func (o AdaptivePolicyAclsRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyAclsRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source port
func (o AdaptivePolicyAclsRuleOutput) SrcPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyAclsRule) *string { return v.SrcPort }).(pulumi.StringPtrOutput)
}

type AdaptivePolicyAclsRuleArrayOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyAclsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyAclsRule)(nil)).Elem()
}

func (o AdaptivePolicyAclsRuleArrayOutput) ToAdaptivePolicyAclsRuleArrayOutput() AdaptivePolicyAclsRuleArrayOutput {
	return o
}

func (o AdaptivePolicyAclsRuleArrayOutput) ToAdaptivePolicyAclsRuleArrayOutputWithContext(ctx context.Context) AdaptivePolicyAclsRuleArrayOutput {
	return o
}

func (o AdaptivePolicyAclsRuleArrayOutput) Index(i pulumi.IntInput) AdaptivePolicyAclsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdaptivePolicyAclsRule {
		return vs[0].([]AdaptivePolicyAclsRule)[vs[1].(int)]
	}).(AdaptivePolicyAclsRuleOutput)
}

type AdaptivePolicyGroupsPolicyObject struct {
	// The ID of the policy object
	Id *string `pulumi:"id"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// AdaptivePolicyGroupsPolicyObjectInput is an input type that accepts AdaptivePolicyGroupsPolicyObjectArgs and AdaptivePolicyGroupsPolicyObjectOutput values.
// You can construct a concrete instance of `AdaptivePolicyGroupsPolicyObjectInput` via:
//
//	AdaptivePolicyGroupsPolicyObjectArgs{...}
type AdaptivePolicyGroupsPolicyObjectInput interface {
	pulumi.Input

	ToAdaptivePolicyGroupsPolicyObjectOutput() AdaptivePolicyGroupsPolicyObjectOutput
	ToAdaptivePolicyGroupsPolicyObjectOutputWithContext(context.Context) AdaptivePolicyGroupsPolicyObjectOutput
}

type AdaptivePolicyGroupsPolicyObjectArgs struct {
	// The ID of the policy object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy object
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AdaptivePolicyGroupsPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyGroupsPolicyObject)(nil)).Elem()
}

func (i AdaptivePolicyGroupsPolicyObjectArgs) ToAdaptivePolicyGroupsPolicyObjectOutput() AdaptivePolicyGroupsPolicyObjectOutput {
	return i.ToAdaptivePolicyGroupsPolicyObjectOutputWithContext(context.Background())
}

func (i AdaptivePolicyGroupsPolicyObjectArgs) ToAdaptivePolicyGroupsPolicyObjectOutputWithContext(ctx context.Context) AdaptivePolicyGroupsPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyGroupsPolicyObjectOutput)
}

// AdaptivePolicyGroupsPolicyObjectArrayInput is an input type that accepts AdaptivePolicyGroupsPolicyObjectArray and AdaptivePolicyGroupsPolicyObjectArrayOutput values.
// You can construct a concrete instance of `AdaptivePolicyGroupsPolicyObjectArrayInput` via:
//
//	AdaptivePolicyGroupsPolicyObjectArray{ AdaptivePolicyGroupsPolicyObjectArgs{...} }
type AdaptivePolicyGroupsPolicyObjectArrayInput interface {
	pulumi.Input

	ToAdaptivePolicyGroupsPolicyObjectArrayOutput() AdaptivePolicyGroupsPolicyObjectArrayOutput
	ToAdaptivePolicyGroupsPolicyObjectArrayOutputWithContext(context.Context) AdaptivePolicyGroupsPolicyObjectArrayOutput
}

type AdaptivePolicyGroupsPolicyObjectArray []AdaptivePolicyGroupsPolicyObjectInput

func (AdaptivePolicyGroupsPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyGroupsPolicyObject)(nil)).Elem()
}

func (i AdaptivePolicyGroupsPolicyObjectArray) ToAdaptivePolicyGroupsPolicyObjectArrayOutput() AdaptivePolicyGroupsPolicyObjectArrayOutput {
	return i.ToAdaptivePolicyGroupsPolicyObjectArrayOutputWithContext(context.Background())
}

func (i AdaptivePolicyGroupsPolicyObjectArray) ToAdaptivePolicyGroupsPolicyObjectArrayOutputWithContext(ctx context.Context) AdaptivePolicyGroupsPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyGroupsPolicyObjectArrayOutput)
}

type AdaptivePolicyGroupsPolicyObjectOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyGroupsPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyGroupsPolicyObject)(nil)).Elem()
}

func (o AdaptivePolicyGroupsPolicyObjectOutput) ToAdaptivePolicyGroupsPolicyObjectOutput() AdaptivePolicyGroupsPolicyObjectOutput {
	return o
}

func (o AdaptivePolicyGroupsPolicyObjectOutput) ToAdaptivePolicyGroupsPolicyObjectOutputWithContext(ctx context.Context) AdaptivePolicyGroupsPolicyObjectOutput {
	return o
}

// The ID of the policy object
func (o AdaptivePolicyGroupsPolicyObjectOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyGroupsPolicyObject) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy object
func (o AdaptivePolicyGroupsPolicyObjectOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyGroupsPolicyObject) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AdaptivePolicyGroupsPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyGroupsPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyGroupsPolicyObject)(nil)).Elem()
}

func (o AdaptivePolicyGroupsPolicyObjectArrayOutput) ToAdaptivePolicyGroupsPolicyObjectArrayOutput() AdaptivePolicyGroupsPolicyObjectArrayOutput {
	return o
}

func (o AdaptivePolicyGroupsPolicyObjectArrayOutput) ToAdaptivePolicyGroupsPolicyObjectArrayOutputWithContext(ctx context.Context) AdaptivePolicyGroupsPolicyObjectArrayOutput {
	return o
}

func (o AdaptivePolicyGroupsPolicyObjectArrayOutput) Index(i pulumi.IntInput) AdaptivePolicyGroupsPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdaptivePolicyGroupsPolicyObject {
		return vs[0].([]AdaptivePolicyGroupsPolicyObject)[vs[1].(int)]
	}).(AdaptivePolicyGroupsPolicyObjectOutput)
}

type AdaptivePolicyPoliciesAcl struct {
	// The ID of the adaptive policy ACL
	Id *string `pulumi:"id"`
	// The name of the adaptive policy ACL
	Name *string `pulumi:"name"`
}

// AdaptivePolicyPoliciesAclInput is an input type that accepts AdaptivePolicyPoliciesAclArgs and AdaptivePolicyPoliciesAclOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesAclInput` via:
//
//	AdaptivePolicyPoliciesAclArgs{...}
type AdaptivePolicyPoliciesAclInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesAclOutput() AdaptivePolicyPoliciesAclOutput
	ToAdaptivePolicyPoliciesAclOutputWithContext(context.Context) AdaptivePolicyPoliciesAclOutput
}

type AdaptivePolicyPoliciesAclArgs struct {
	// The ID of the adaptive policy ACL
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the adaptive policy ACL
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AdaptivePolicyPoliciesAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesAcl)(nil)).Elem()
}

func (i AdaptivePolicyPoliciesAclArgs) ToAdaptivePolicyPoliciesAclOutput() AdaptivePolicyPoliciesAclOutput {
	return i.ToAdaptivePolicyPoliciesAclOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesAclArgs) ToAdaptivePolicyPoliciesAclOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesAclOutput)
}

// AdaptivePolicyPoliciesAclArrayInput is an input type that accepts AdaptivePolicyPoliciesAclArray and AdaptivePolicyPoliciesAclArrayOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesAclArrayInput` via:
//
//	AdaptivePolicyPoliciesAclArray{ AdaptivePolicyPoliciesAclArgs{...} }
type AdaptivePolicyPoliciesAclArrayInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesAclArrayOutput() AdaptivePolicyPoliciesAclArrayOutput
	ToAdaptivePolicyPoliciesAclArrayOutputWithContext(context.Context) AdaptivePolicyPoliciesAclArrayOutput
}

type AdaptivePolicyPoliciesAclArray []AdaptivePolicyPoliciesAclInput

func (AdaptivePolicyPoliciesAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyPoliciesAcl)(nil)).Elem()
}

func (i AdaptivePolicyPoliciesAclArray) ToAdaptivePolicyPoliciesAclArrayOutput() AdaptivePolicyPoliciesAclArrayOutput {
	return i.ToAdaptivePolicyPoliciesAclArrayOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesAclArray) ToAdaptivePolicyPoliciesAclArrayOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesAclArrayOutput)
}

type AdaptivePolicyPoliciesAclOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesAcl)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesAclOutput) ToAdaptivePolicyPoliciesAclOutput() AdaptivePolicyPoliciesAclOutput {
	return o
}

func (o AdaptivePolicyPoliciesAclOutput) ToAdaptivePolicyPoliciesAclOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesAclOutput {
	return o
}

// The ID of the adaptive policy ACL
func (o AdaptivePolicyPoliciesAclOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesAcl) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the adaptive policy ACL
func (o AdaptivePolicyPoliciesAclOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesAcl) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AdaptivePolicyPoliciesAclArrayOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptivePolicyPoliciesAcl)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesAclArrayOutput) ToAdaptivePolicyPoliciesAclArrayOutput() AdaptivePolicyPoliciesAclArrayOutput {
	return o
}

func (o AdaptivePolicyPoliciesAclArrayOutput) ToAdaptivePolicyPoliciesAclArrayOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesAclArrayOutput {
	return o
}

func (o AdaptivePolicyPoliciesAclArrayOutput) Index(i pulumi.IntInput) AdaptivePolicyPoliciesAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdaptivePolicyPoliciesAcl {
		return vs[0].([]AdaptivePolicyPoliciesAcl)[vs[1].(int)]
	}).(AdaptivePolicyPoliciesAclOutput)
}

type AdaptivePolicyPoliciesDestinationGroup struct {
	// The ID of the destination adaptive policy group
	Id *string `pulumi:"id"`
	// The name of the destination adaptive policy group
	Name *string `pulumi:"name"`
	// The SGT of the destination adaptive policy group
	Sgt *int `pulumi:"sgt"`
}

// AdaptivePolicyPoliciesDestinationGroupInput is an input type that accepts AdaptivePolicyPoliciesDestinationGroupArgs and AdaptivePolicyPoliciesDestinationGroupOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesDestinationGroupInput` via:
//
//	AdaptivePolicyPoliciesDestinationGroupArgs{...}
type AdaptivePolicyPoliciesDestinationGroupInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesDestinationGroupOutput() AdaptivePolicyPoliciesDestinationGroupOutput
	ToAdaptivePolicyPoliciesDestinationGroupOutputWithContext(context.Context) AdaptivePolicyPoliciesDestinationGroupOutput
}

type AdaptivePolicyPoliciesDestinationGroupArgs struct {
	// The ID of the destination adaptive policy group
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the destination adaptive policy group
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SGT of the destination adaptive policy group
	Sgt pulumi.IntPtrInput `pulumi:"sgt"`
}

func (AdaptivePolicyPoliciesDestinationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesDestinationGroup)(nil)).Elem()
}

func (i AdaptivePolicyPoliciesDestinationGroupArgs) ToAdaptivePolicyPoliciesDestinationGroupOutput() AdaptivePolicyPoliciesDestinationGroupOutput {
	return i.ToAdaptivePolicyPoliciesDestinationGroupOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesDestinationGroupArgs) ToAdaptivePolicyPoliciesDestinationGroupOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesDestinationGroupOutput)
}

func (i AdaptivePolicyPoliciesDestinationGroupArgs) ToAdaptivePolicyPoliciesDestinationGroupPtrOutput() AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return i.ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesDestinationGroupArgs) ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesDestinationGroupOutput).ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(ctx)
}

// AdaptivePolicyPoliciesDestinationGroupPtrInput is an input type that accepts AdaptivePolicyPoliciesDestinationGroupArgs, AdaptivePolicyPoliciesDestinationGroupPtr and AdaptivePolicyPoliciesDestinationGroupPtrOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesDestinationGroupPtrInput` via:
//
//	        AdaptivePolicyPoliciesDestinationGroupArgs{...}
//
//	or:
//
//	        nil
type AdaptivePolicyPoliciesDestinationGroupPtrInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesDestinationGroupPtrOutput() AdaptivePolicyPoliciesDestinationGroupPtrOutput
	ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(context.Context) AdaptivePolicyPoliciesDestinationGroupPtrOutput
}

type adaptivePolicyPoliciesDestinationGroupPtrType AdaptivePolicyPoliciesDestinationGroupArgs

func AdaptivePolicyPoliciesDestinationGroupPtr(v *AdaptivePolicyPoliciesDestinationGroupArgs) AdaptivePolicyPoliciesDestinationGroupPtrInput {
	return (*adaptivePolicyPoliciesDestinationGroupPtrType)(v)
}

func (*adaptivePolicyPoliciesDestinationGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptivePolicyPoliciesDestinationGroup)(nil)).Elem()
}

func (i *adaptivePolicyPoliciesDestinationGroupPtrType) ToAdaptivePolicyPoliciesDestinationGroupPtrOutput() AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return i.ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(context.Background())
}

func (i *adaptivePolicyPoliciesDestinationGroupPtrType) ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesDestinationGroupPtrOutput)
}

type AdaptivePolicyPoliciesDestinationGroupOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesDestinationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesDestinationGroup)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesDestinationGroupOutput) ToAdaptivePolicyPoliciesDestinationGroupOutput() AdaptivePolicyPoliciesDestinationGroupOutput {
	return o
}

func (o AdaptivePolicyPoliciesDestinationGroupOutput) ToAdaptivePolicyPoliciesDestinationGroupOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupOutput {
	return o
}

func (o AdaptivePolicyPoliciesDestinationGroupOutput) ToAdaptivePolicyPoliciesDestinationGroupPtrOutput() AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return o.ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(context.Background())
}

func (o AdaptivePolicyPoliciesDestinationGroupOutput) ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdaptivePolicyPoliciesDestinationGroup) *AdaptivePolicyPoliciesDestinationGroup {
		return &v
	}).(AdaptivePolicyPoliciesDestinationGroupPtrOutput)
}

// The ID of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesDestinationGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesDestinationGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SGT of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupOutput) Sgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesDestinationGroup) *int { return v.Sgt }).(pulumi.IntPtrOutput)
}

type AdaptivePolicyPoliciesDestinationGroupPtrOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesDestinationGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptivePolicyPoliciesDestinationGroup)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) ToAdaptivePolicyPoliciesDestinationGroupPtrOutput() AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return o
}

func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) ToAdaptivePolicyPoliciesDestinationGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesDestinationGroupPtrOutput {
	return o
}

func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) Elem() AdaptivePolicyPoliciesDestinationGroupOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesDestinationGroup) AdaptivePolicyPoliciesDestinationGroup {
		if v != nil {
			return *v
		}
		var ret AdaptivePolicyPoliciesDestinationGroup
		return ret
	}).(AdaptivePolicyPoliciesDestinationGroupOutput)
}

// The ID of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesDestinationGroup) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesDestinationGroup) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SGT of the destination adaptive policy group
func (o AdaptivePolicyPoliciesDestinationGroupPtrOutput) Sgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesDestinationGroup) *int {
		if v == nil {
			return nil
		}
		return v.Sgt
	}).(pulumi.IntPtrOutput)
}

type AdaptivePolicyPoliciesSourceGroup struct {
	// The ID of the source adaptive policy group
	Id *string `pulumi:"id"`
	// The name of the source adaptive policy group
	Name *string `pulumi:"name"`
	// The SGT of the source adaptive policy group
	Sgt *int `pulumi:"sgt"`
}

// AdaptivePolicyPoliciesSourceGroupInput is an input type that accepts AdaptivePolicyPoliciesSourceGroupArgs and AdaptivePolicyPoliciesSourceGroupOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesSourceGroupInput` via:
//
//	AdaptivePolicyPoliciesSourceGroupArgs{...}
type AdaptivePolicyPoliciesSourceGroupInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesSourceGroupOutput() AdaptivePolicyPoliciesSourceGroupOutput
	ToAdaptivePolicyPoliciesSourceGroupOutputWithContext(context.Context) AdaptivePolicyPoliciesSourceGroupOutput
}

type AdaptivePolicyPoliciesSourceGroupArgs struct {
	// The ID of the source adaptive policy group
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the source adaptive policy group
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SGT of the source adaptive policy group
	Sgt pulumi.IntPtrInput `pulumi:"sgt"`
}

func (AdaptivePolicyPoliciesSourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesSourceGroup)(nil)).Elem()
}

func (i AdaptivePolicyPoliciesSourceGroupArgs) ToAdaptivePolicyPoliciesSourceGroupOutput() AdaptivePolicyPoliciesSourceGroupOutput {
	return i.ToAdaptivePolicyPoliciesSourceGroupOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesSourceGroupArgs) ToAdaptivePolicyPoliciesSourceGroupOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesSourceGroupOutput)
}

func (i AdaptivePolicyPoliciesSourceGroupArgs) ToAdaptivePolicyPoliciesSourceGroupPtrOutput() AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return i.ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(context.Background())
}

func (i AdaptivePolicyPoliciesSourceGroupArgs) ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesSourceGroupOutput).ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(ctx)
}

// AdaptivePolicyPoliciesSourceGroupPtrInput is an input type that accepts AdaptivePolicyPoliciesSourceGroupArgs, AdaptivePolicyPoliciesSourceGroupPtr and AdaptivePolicyPoliciesSourceGroupPtrOutput values.
// You can construct a concrete instance of `AdaptivePolicyPoliciesSourceGroupPtrInput` via:
//
//	        AdaptivePolicyPoliciesSourceGroupArgs{...}
//
//	or:
//
//	        nil
type AdaptivePolicyPoliciesSourceGroupPtrInput interface {
	pulumi.Input

	ToAdaptivePolicyPoliciesSourceGroupPtrOutput() AdaptivePolicyPoliciesSourceGroupPtrOutput
	ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(context.Context) AdaptivePolicyPoliciesSourceGroupPtrOutput
}

type adaptivePolicyPoliciesSourceGroupPtrType AdaptivePolicyPoliciesSourceGroupArgs

func AdaptivePolicyPoliciesSourceGroupPtr(v *AdaptivePolicyPoliciesSourceGroupArgs) AdaptivePolicyPoliciesSourceGroupPtrInput {
	return (*adaptivePolicyPoliciesSourceGroupPtrType)(v)
}

func (*adaptivePolicyPoliciesSourceGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptivePolicyPoliciesSourceGroup)(nil)).Elem()
}

func (i *adaptivePolicyPoliciesSourceGroupPtrType) ToAdaptivePolicyPoliciesSourceGroupPtrOutput() AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return i.ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(context.Background())
}

func (i *adaptivePolicyPoliciesSourceGroupPtrType) ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptivePolicyPoliciesSourceGroupPtrOutput)
}

type AdaptivePolicyPoliciesSourceGroupOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesSourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptivePolicyPoliciesSourceGroup)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesSourceGroupOutput) ToAdaptivePolicyPoliciesSourceGroupOutput() AdaptivePolicyPoliciesSourceGroupOutput {
	return o
}

func (o AdaptivePolicyPoliciesSourceGroupOutput) ToAdaptivePolicyPoliciesSourceGroupOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupOutput {
	return o
}

func (o AdaptivePolicyPoliciesSourceGroupOutput) ToAdaptivePolicyPoliciesSourceGroupPtrOutput() AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return o.ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(context.Background())
}

func (o AdaptivePolicyPoliciesSourceGroupOutput) ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdaptivePolicyPoliciesSourceGroup) *AdaptivePolicyPoliciesSourceGroup {
		return &v
	}).(AdaptivePolicyPoliciesSourceGroupPtrOutput)
}

// The ID of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesSourceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesSourceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SGT of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupOutput) Sgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdaptivePolicyPoliciesSourceGroup) *int { return v.Sgt }).(pulumi.IntPtrOutput)
}

type AdaptivePolicyPoliciesSourceGroupPtrOutput struct{ *pulumi.OutputState }

func (AdaptivePolicyPoliciesSourceGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptivePolicyPoliciesSourceGroup)(nil)).Elem()
}

func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) ToAdaptivePolicyPoliciesSourceGroupPtrOutput() AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return o
}

func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) ToAdaptivePolicyPoliciesSourceGroupPtrOutputWithContext(ctx context.Context) AdaptivePolicyPoliciesSourceGroupPtrOutput {
	return o
}

func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) Elem() AdaptivePolicyPoliciesSourceGroupOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesSourceGroup) AdaptivePolicyPoliciesSourceGroup {
		if v != nil {
			return *v
		}
		var ret AdaptivePolicyPoliciesSourceGroup
		return ret
	}).(AdaptivePolicyPoliciesSourceGroupOutput)
}

// The ID of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesSourceGroup) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesSourceGroup) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SGT of the source adaptive policy group
func (o AdaptivePolicyPoliciesSourceGroupPtrOutput) Sgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdaptivePolicyPoliciesSourceGroup) *int {
		if v == nil {
			return nil
		}
		return v.Sgt
	}).(pulumi.IntPtrOutput)
}

type AdminsNetwork struct {
	// Admin's level of access to the network
	Access *string `pulumi:"access"`
	// Network ID
	Id *string `pulumi:"id"`
}

// AdminsNetworkInput is an input type that accepts AdminsNetworkArgs and AdminsNetworkOutput values.
// You can construct a concrete instance of `AdminsNetworkInput` via:
//
//	AdminsNetworkArgs{...}
type AdminsNetworkInput interface {
	pulumi.Input

	ToAdminsNetworkOutput() AdminsNetworkOutput
	ToAdminsNetworkOutputWithContext(context.Context) AdminsNetworkOutput
}

type AdminsNetworkArgs struct {
	// Admin's level of access to the network
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Network ID
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (AdminsNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminsNetwork)(nil)).Elem()
}

func (i AdminsNetworkArgs) ToAdminsNetworkOutput() AdminsNetworkOutput {
	return i.ToAdminsNetworkOutputWithContext(context.Background())
}

func (i AdminsNetworkArgs) ToAdminsNetworkOutputWithContext(ctx context.Context) AdminsNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminsNetworkOutput)
}

// AdminsNetworkArrayInput is an input type that accepts AdminsNetworkArray and AdminsNetworkArrayOutput values.
// You can construct a concrete instance of `AdminsNetworkArrayInput` via:
//
//	AdminsNetworkArray{ AdminsNetworkArgs{...} }
type AdminsNetworkArrayInput interface {
	pulumi.Input

	ToAdminsNetworkArrayOutput() AdminsNetworkArrayOutput
	ToAdminsNetworkArrayOutputWithContext(context.Context) AdminsNetworkArrayOutput
}

type AdminsNetworkArray []AdminsNetworkInput

func (AdminsNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminsNetwork)(nil)).Elem()
}

func (i AdminsNetworkArray) ToAdminsNetworkArrayOutput() AdminsNetworkArrayOutput {
	return i.ToAdminsNetworkArrayOutputWithContext(context.Background())
}

func (i AdminsNetworkArray) ToAdminsNetworkArrayOutputWithContext(ctx context.Context) AdminsNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminsNetworkArrayOutput)
}

type AdminsNetworkOutput struct{ *pulumi.OutputState }

func (AdminsNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminsNetwork)(nil)).Elem()
}

func (o AdminsNetworkOutput) ToAdminsNetworkOutput() AdminsNetworkOutput {
	return o
}

func (o AdminsNetworkOutput) ToAdminsNetworkOutputWithContext(ctx context.Context) AdminsNetworkOutput {
	return o
}

// Admin's level of access to the network
func (o AdminsNetworkOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminsNetwork) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Network ID
func (o AdminsNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminsNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AdminsNetworkArrayOutput struct{ *pulumi.OutputState }

func (AdminsNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminsNetwork)(nil)).Elem()
}

func (o AdminsNetworkArrayOutput) ToAdminsNetworkArrayOutput() AdminsNetworkArrayOutput {
	return o
}

func (o AdminsNetworkArrayOutput) ToAdminsNetworkArrayOutputWithContext(ctx context.Context) AdminsNetworkArrayOutput {
	return o
}

func (o AdminsNetworkArrayOutput) Index(i pulumi.IntInput) AdminsNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminsNetwork {
		return vs[0].([]AdminsNetwork)[vs[1].(int)]
	}).(AdminsNetworkOutput)
}

type AdminsTag struct {
	// Access level for the tag
	Access *string `pulumi:"access"`
	// Tag value
	Tag *string `pulumi:"tag"`
}

// AdminsTagInput is an input type that accepts AdminsTagArgs and AdminsTagOutput values.
// You can construct a concrete instance of `AdminsTagInput` via:
//
//	AdminsTagArgs{...}
type AdminsTagInput interface {
	pulumi.Input

	ToAdminsTagOutput() AdminsTagOutput
	ToAdminsTagOutputWithContext(context.Context) AdminsTagOutput
}

type AdminsTagArgs struct {
	// Access level for the tag
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Tag value
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (AdminsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminsTag)(nil)).Elem()
}

func (i AdminsTagArgs) ToAdminsTagOutput() AdminsTagOutput {
	return i.ToAdminsTagOutputWithContext(context.Background())
}

func (i AdminsTagArgs) ToAdminsTagOutputWithContext(ctx context.Context) AdminsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminsTagOutput)
}

// AdminsTagArrayInput is an input type that accepts AdminsTagArray and AdminsTagArrayOutput values.
// You can construct a concrete instance of `AdminsTagArrayInput` via:
//
//	AdminsTagArray{ AdminsTagArgs{...} }
type AdminsTagArrayInput interface {
	pulumi.Input

	ToAdminsTagArrayOutput() AdminsTagArrayOutput
	ToAdminsTagArrayOutputWithContext(context.Context) AdminsTagArrayOutput
}

type AdminsTagArray []AdminsTagInput

func (AdminsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminsTag)(nil)).Elem()
}

func (i AdminsTagArray) ToAdminsTagArrayOutput() AdminsTagArrayOutput {
	return i.ToAdminsTagArrayOutputWithContext(context.Background())
}

func (i AdminsTagArray) ToAdminsTagArrayOutputWithContext(ctx context.Context) AdminsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminsTagArrayOutput)
}

type AdminsTagOutput struct{ *pulumi.OutputState }

func (AdminsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminsTag)(nil)).Elem()
}

func (o AdminsTagOutput) ToAdminsTagOutput() AdminsTagOutput {
	return o
}

func (o AdminsTagOutput) ToAdminsTagOutputWithContext(ctx context.Context) AdminsTagOutput {
	return o
}

// Access level for the tag
func (o AdminsTagOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminsTag) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Tag value
func (o AdminsTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminsTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AdminsTagArrayOutput struct{ *pulumi.OutputState }

func (AdminsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminsTag)(nil)).Elem()
}

func (o AdminsTagArrayOutput) ToAdminsTagArrayOutput() AdminsTagArrayOutput {
	return o
}

func (o AdminsTagArrayOutput) ToAdminsTagArrayOutputWithContext(ctx context.Context) AdminsTagArrayOutput {
	return o
}

func (o AdminsTagArrayOutput) Index(i pulumi.IntInput) AdminsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminsTag {
		return vs[0].([]AdminsTag)[vs[1].(int)]
	}).(AdminsTagOutput)
}

type AlertsProfilesAlertCondition struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps *int `pulumi:"bitRateBps"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration *int `pulumi:"duration"`
	// The uplink observed for the alert
	Interface *string `pulumi:"interface"`
	// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
	JitterMs *int `pulumi:"jitterMs"`
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
	LatencyMs *int `pulumi:"latencyMs"`
	// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
	LossRatio *float64 `pulumi:"lossRatio"`
	// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
	Mos *float64 `pulumi:"mos"`
	// The look back period in seconds for sensing the alert
	Window *int `pulumi:"window"`
}

// AlertsProfilesAlertConditionInput is an input type that accepts AlertsProfilesAlertConditionArgs and AlertsProfilesAlertConditionOutput values.
// You can construct a concrete instance of `AlertsProfilesAlertConditionInput` via:
//
//	AlertsProfilesAlertConditionArgs{...}
type AlertsProfilesAlertConditionInput interface {
	pulumi.Input

	ToAlertsProfilesAlertConditionOutput() AlertsProfilesAlertConditionOutput
	ToAlertsProfilesAlertConditionOutputWithContext(context.Context) AlertsProfilesAlertConditionOutput
}

type AlertsProfilesAlertConditionArgs struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps pulumi.IntPtrInput `pulumi:"bitRateBps"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// The uplink observed for the alert
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
	JitterMs pulumi.IntPtrInput `pulumi:"jitterMs"`
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
	LatencyMs pulumi.IntPtrInput `pulumi:"latencyMs"`
	// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
	LossRatio pulumi.Float64PtrInput `pulumi:"lossRatio"`
	// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
	Mos pulumi.Float64PtrInput `pulumi:"mos"`
	// The look back period in seconds for sensing the alert
	Window pulumi.IntPtrInput `pulumi:"window"`
}

func (AlertsProfilesAlertConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsProfilesAlertCondition)(nil)).Elem()
}

func (i AlertsProfilesAlertConditionArgs) ToAlertsProfilesAlertConditionOutput() AlertsProfilesAlertConditionOutput {
	return i.ToAlertsProfilesAlertConditionOutputWithContext(context.Background())
}

func (i AlertsProfilesAlertConditionArgs) ToAlertsProfilesAlertConditionOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesAlertConditionOutput)
}

func (i AlertsProfilesAlertConditionArgs) ToAlertsProfilesAlertConditionPtrOutput() AlertsProfilesAlertConditionPtrOutput {
	return i.ToAlertsProfilesAlertConditionPtrOutputWithContext(context.Background())
}

func (i AlertsProfilesAlertConditionArgs) ToAlertsProfilesAlertConditionPtrOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesAlertConditionOutput).ToAlertsProfilesAlertConditionPtrOutputWithContext(ctx)
}

// AlertsProfilesAlertConditionPtrInput is an input type that accepts AlertsProfilesAlertConditionArgs, AlertsProfilesAlertConditionPtr and AlertsProfilesAlertConditionPtrOutput values.
// You can construct a concrete instance of `AlertsProfilesAlertConditionPtrInput` via:
//
//	        AlertsProfilesAlertConditionArgs{...}
//
//	or:
//
//	        nil
type AlertsProfilesAlertConditionPtrInput interface {
	pulumi.Input

	ToAlertsProfilesAlertConditionPtrOutput() AlertsProfilesAlertConditionPtrOutput
	ToAlertsProfilesAlertConditionPtrOutputWithContext(context.Context) AlertsProfilesAlertConditionPtrOutput
}

type alertsProfilesAlertConditionPtrType AlertsProfilesAlertConditionArgs

func AlertsProfilesAlertConditionPtr(v *AlertsProfilesAlertConditionArgs) AlertsProfilesAlertConditionPtrInput {
	return (*alertsProfilesAlertConditionPtrType)(v)
}

func (*alertsProfilesAlertConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfilesAlertCondition)(nil)).Elem()
}

func (i *alertsProfilesAlertConditionPtrType) ToAlertsProfilesAlertConditionPtrOutput() AlertsProfilesAlertConditionPtrOutput {
	return i.ToAlertsProfilesAlertConditionPtrOutputWithContext(context.Background())
}

func (i *alertsProfilesAlertConditionPtrType) ToAlertsProfilesAlertConditionPtrOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesAlertConditionPtrOutput)
}

type AlertsProfilesAlertConditionOutput struct{ *pulumi.OutputState }

func (AlertsProfilesAlertConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsProfilesAlertCondition)(nil)).Elem()
}

func (o AlertsProfilesAlertConditionOutput) ToAlertsProfilesAlertConditionOutput() AlertsProfilesAlertConditionOutput {
	return o
}

func (o AlertsProfilesAlertConditionOutput) ToAlertsProfilesAlertConditionOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionOutput {
	return o
}

func (o AlertsProfilesAlertConditionOutput) ToAlertsProfilesAlertConditionPtrOutput() AlertsProfilesAlertConditionPtrOutput {
	return o.ToAlertsProfilesAlertConditionPtrOutputWithContext(context.Background())
}

func (o AlertsProfilesAlertConditionOutput) ToAlertsProfilesAlertConditionPtrOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertsProfilesAlertCondition) *AlertsProfilesAlertCondition {
		return &v
	}).(AlertsProfilesAlertConditionPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
func (o AlertsProfilesAlertConditionOutput) BitRateBps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *int { return v.BitRateBps }).(pulumi.IntPtrOutput)
}

// The total duration in seconds that the threshold should be crossed before alerting
func (o AlertsProfilesAlertConditionOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The uplink observed for the alert
func (o AlertsProfilesAlertConditionOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
func (o AlertsProfilesAlertConditionOutput) JitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *int { return v.JitterMs }).(pulumi.IntPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
func (o AlertsProfilesAlertConditionOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *int { return v.LatencyMs }).(pulumi.IntPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
func (o AlertsProfilesAlertConditionOutput) LossRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *float64 { return v.LossRatio }).(pulumi.Float64PtrOutput)
}

// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
func (o AlertsProfilesAlertConditionOutput) Mos() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *float64 { return v.Mos }).(pulumi.Float64PtrOutput)
}

// The look back period in seconds for sensing the alert
func (o AlertsProfilesAlertConditionOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertsProfilesAlertCondition) *int { return v.Window }).(pulumi.IntPtrOutput)
}

type AlertsProfilesAlertConditionPtrOutput struct{ *pulumi.OutputState }

func (AlertsProfilesAlertConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfilesAlertCondition)(nil)).Elem()
}

func (o AlertsProfilesAlertConditionPtrOutput) ToAlertsProfilesAlertConditionPtrOutput() AlertsProfilesAlertConditionPtrOutput {
	return o
}

func (o AlertsProfilesAlertConditionPtrOutput) ToAlertsProfilesAlertConditionPtrOutputWithContext(ctx context.Context) AlertsProfilesAlertConditionPtrOutput {
	return o
}

func (o AlertsProfilesAlertConditionPtrOutput) Elem() AlertsProfilesAlertConditionOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) AlertsProfilesAlertCondition {
		if v != nil {
			return *v
		}
		var ret AlertsProfilesAlertCondition
		return ret
	}).(AlertsProfilesAlertConditionOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
func (o AlertsProfilesAlertConditionPtrOutput) BitRateBps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *int {
		if v == nil {
			return nil
		}
		return v.BitRateBps
	}).(pulumi.IntPtrOutput)
}

// The total duration in seconds that the threshold should be crossed before alerting
func (o AlertsProfilesAlertConditionPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// The uplink observed for the alert
func (o AlertsProfilesAlertConditionPtrOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *string {
		if v == nil {
			return nil
		}
		return v.Interface
	}).(pulumi.StringPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
func (o AlertsProfilesAlertConditionPtrOutput) JitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *int {
		if v == nil {
			return nil
		}
		return v.JitterMs
	}).(pulumi.IntPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
func (o AlertsProfilesAlertConditionPtrOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *int {
		if v == nil {
			return nil
		}
		return v.LatencyMs
	}).(pulumi.IntPtrOutput)
}

// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
func (o AlertsProfilesAlertConditionPtrOutput) LossRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *float64 {
		if v == nil {
			return nil
		}
		return v.LossRatio
	}).(pulumi.Float64PtrOutput)
}

// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
func (o AlertsProfilesAlertConditionPtrOutput) Mos() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *float64 {
		if v == nil {
			return nil
		}
		return v.Mos
	}).(pulumi.Float64PtrOutput)
}

// The look back period in seconds for sensing the alert
func (o AlertsProfilesAlertConditionPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertsProfilesAlertCondition) *int {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.IntPtrOutput)
}

type AlertsProfilesRecipients struct {
	// A list of emails that will receive information about the alert
	Emails []string `pulumi:"emails"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HttpServerIds []string `pulumi:"httpServerIds"`
}

// AlertsProfilesRecipientsInput is an input type that accepts AlertsProfilesRecipientsArgs and AlertsProfilesRecipientsOutput values.
// You can construct a concrete instance of `AlertsProfilesRecipientsInput` via:
//
//	AlertsProfilesRecipientsArgs{...}
type AlertsProfilesRecipientsInput interface {
	pulumi.Input

	ToAlertsProfilesRecipientsOutput() AlertsProfilesRecipientsOutput
	ToAlertsProfilesRecipientsOutputWithContext(context.Context) AlertsProfilesRecipientsOutput
}

type AlertsProfilesRecipientsArgs struct {
	// A list of emails that will receive information about the alert
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HttpServerIds pulumi.StringArrayInput `pulumi:"httpServerIds"`
}

func (AlertsProfilesRecipientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsProfilesRecipients)(nil)).Elem()
}

func (i AlertsProfilesRecipientsArgs) ToAlertsProfilesRecipientsOutput() AlertsProfilesRecipientsOutput {
	return i.ToAlertsProfilesRecipientsOutputWithContext(context.Background())
}

func (i AlertsProfilesRecipientsArgs) ToAlertsProfilesRecipientsOutputWithContext(ctx context.Context) AlertsProfilesRecipientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesRecipientsOutput)
}

func (i AlertsProfilesRecipientsArgs) ToAlertsProfilesRecipientsPtrOutput() AlertsProfilesRecipientsPtrOutput {
	return i.ToAlertsProfilesRecipientsPtrOutputWithContext(context.Background())
}

func (i AlertsProfilesRecipientsArgs) ToAlertsProfilesRecipientsPtrOutputWithContext(ctx context.Context) AlertsProfilesRecipientsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesRecipientsOutput).ToAlertsProfilesRecipientsPtrOutputWithContext(ctx)
}

// AlertsProfilesRecipientsPtrInput is an input type that accepts AlertsProfilesRecipientsArgs, AlertsProfilesRecipientsPtr and AlertsProfilesRecipientsPtrOutput values.
// You can construct a concrete instance of `AlertsProfilesRecipientsPtrInput` via:
//
//	        AlertsProfilesRecipientsArgs{...}
//
//	or:
//
//	        nil
type AlertsProfilesRecipientsPtrInput interface {
	pulumi.Input

	ToAlertsProfilesRecipientsPtrOutput() AlertsProfilesRecipientsPtrOutput
	ToAlertsProfilesRecipientsPtrOutputWithContext(context.Context) AlertsProfilesRecipientsPtrOutput
}

type alertsProfilesRecipientsPtrType AlertsProfilesRecipientsArgs

func AlertsProfilesRecipientsPtr(v *AlertsProfilesRecipientsArgs) AlertsProfilesRecipientsPtrInput {
	return (*alertsProfilesRecipientsPtrType)(v)
}

func (*alertsProfilesRecipientsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfilesRecipients)(nil)).Elem()
}

func (i *alertsProfilesRecipientsPtrType) ToAlertsProfilesRecipientsPtrOutput() AlertsProfilesRecipientsPtrOutput {
	return i.ToAlertsProfilesRecipientsPtrOutputWithContext(context.Background())
}

func (i *alertsProfilesRecipientsPtrType) ToAlertsProfilesRecipientsPtrOutputWithContext(ctx context.Context) AlertsProfilesRecipientsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsProfilesRecipientsPtrOutput)
}

type AlertsProfilesRecipientsOutput struct{ *pulumi.OutputState }

func (AlertsProfilesRecipientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsProfilesRecipients)(nil)).Elem()
}

func (o AlertsProfilesRecipientsOutput) ToAlertsProfilesRecipientsOutput() AlertsProfilesRecipientsOutput {
	return o
}

func (o AlertsProfilesRecipientsOutput) ToAlertsProfilesRecipientsOutputWithContext(ctx context.Context) AlertsProfilesRecipientsOutput {
	return o
}

func (o AlertsProfilesRecipientsOutput) ToAlertsProfilesRecipientsPtrOutput() AlertsProfilesRecipientsPtrOutput {
	return o.ToAlertsProfilesRecipientsPtrOutputWithContext(context.Background())
}

func (o AlertsProfilesRecipientsOutput) ToAlertsProfilesRecipientsPtrOutputWithContext(ctx context.Context) AlertsProfilesRecipientsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertsProfilesRecipients) *AlertsProfilesRecipients {
		return &v
	}).(AlertsProfilesRecipientsPtrOutput)
}

// A list of emails that will receive information about the alert
func (o AlertsProfilesRecipientsOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertsProfilesRecipients) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list base64 encoded urls of webhook endpoints that will receive information about the alert
func (o AlertsProfilesRecipientsOutput) HttpServerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertsProfilesRecipients) []string { return v.HttpServerIds }).(pulumi.StringArrayOutput)
}

type AlertsProfilesRecipientsPtrOutput struct{ *pulumi.OutputState }

func (AlertsProfilesRecipientsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsProfilesRecipients)(nil)).Elem()
}

func (o AlertsProfilesRecipientsPtrOutput) ToAlertsProfilesRecipientsPtrOutput() AlertsProfilesRecipientsPtrOutput {
	return o
}

func (o AlertsProfilesRecipientsPtrOutput) ToAlertsProfilesRecipientsPtrOutputWithContext(ctx context.Context) AlertsProfilesRecipientsPtrOutput {
	return o
}

func (o AlertsProfilesRecipientsPtrOutput) Elem() AlertsProfilesRecipientsOutput {
	return o.ApplyT(func(v *AlertsProfilesRecipients) AlertsProfilesRecipients {
		if v != nil {
			return *v
		}
		var ret AlertsProfilesRecipients
		return ret
	}).(AlertsProfilesRecipientsOutput)
}

// A list of emails that will receive information about the alert
func (o AlertsProfilesRecipientsPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertsProfilesRecipients) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// A list base64 encoded urls of webhook endpoints that will receive information about the alert
func (o AlertsProfilesRecipientsPtrOutput) HttpServerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertsProfilesRecipients) []string {
		if v == nil {
			return nil
		}
		return v.HttpServerIds
	}).(pulumi.StringArrayOutput)
}

type ApplianceSecurityIntrusionAllowedRule struct {
	// Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
	Message *string `pulumi:"message"`
	// A rule identifier of the format meraki:intrusion/snort/GID/\n\n/SID/\n\n. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
	RuleId *string `pulumi:"ruleId"`
}

// ApplianceSecurityIntrusionAllowedRuleInput is an input type that accepts ApplianceSecurityIntrusionAllowedRuleArgs and ApplianceSecurityIntrusionAllowedRuleOutput values.
// You can construct a concrete instance of `ApplianceSecurityIntrusionAllowedRuleInput` via:
//
//	ApplianceSecurityIntrusionAllowedRuleArgs{...}
type ApplianceSecurityIntrusionAllowedRuleInput interface {
	pulumi.Input

	ToApplianceSecurityIntrusionAllowedRuleOutput() ApplianceSecurityIntrusionAllowedRuleOutput
	ToApplianceSecurityIntrusionAllowedRuleOutputWithContext(context.Context) ApplianceSecurityIntrusionAllowedRuleOutput
}

type ApplianceSecurityIntrusionAllowedRuleArgs struct {
	// Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A rule identifier of the format meraki:intrusion/snort/GID/\n\n/SID/\n\n. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
	RuleId pulumi.StringPtrInput `pulumi:"ruleId"`
}

func (ApplianceSecurityIntrusionAllowedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceSecurityIntrusionAllowedRule)(nil)).Elem()
}

func (i ApplianceSecurityIntrusionAllowedRuleArgs) ToApplianceSecurityIntrusionAllowedRuleOutput() ApplianceSecurityIntrusionAllowedRuleOutput {
	return i.ToApplianceSecurityIntrusionAllowedRuleOutputWithContext(context.Background())
}

func (i ApplianceSecurityIntrusionAllowedRuleArgs) ToApplianceSecurityIntrusionAllowedRuleOutputWithContext(ctx context.Context) ApplianceSecurityIntrusionAllowedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceSecurityIntrusionAllowedRuleOutput)
}

// ApplianceSecurityIntrusionAllowedRuleArrayInput is an input type that accepts ApplianceSecurityIntrusionAllowedRuleArray and ApplianceSecurityIntrusionAllowedRuleArrayOutput values.
// You can construct a concrete instance of `ApplianceSecurityIntrusionAllowedRuleArrayInput` via:
//
//	ApplianceSecurityIntrusionAllowedRuleArray{ ApplianceSecurityIntrusionAllowedRuleArgs{...} }
type ApplianceSecurityIntrusionAllowedRuleArrayInput interface {
	pulumi.Input

	ToApplianceSecurityIntrusionAllowedRuleArrayOutput() ApplianceSecurityIntrusionAllowedRuleArrayOutput
	ToApplianceSecurityIntrusionAllowedRuleArrayOutputWithContext(context.Context) ApplianceSecurityIntrusionAllowedRuleArrayOutput
}

type ApplianceSecurityIntrusionAllowedRuleArray []ApplianceSecurityIntrusionAllowedRuleInput

func (ApplianceSecurityIntrusionAllowedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceSecurityIntrusionAllowedRule)(nil)).Elem()
}

func (i ApplianceSecurityIntrusionAllowedRuleArray) ToApplianceSecurityIntrusionAllowedRuleArrayOutput() ApplianceSecurityIntrusionAllowedRuleArrayOutput {
	return i.ToApplianceSecurityIntrusionAllowedRuleArrayOutputWithContext(context.Background())
}

func (i ApplianceSecurityIntrusionAllowedRuleArray) ToApplianceSecurityIntrusionAllowedRuleArrayOutputWithContext(ctx context.Context) ApplianceSecurityIntrusionAllowedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceSecurityIntrusionAllowedRuleArrayOutput)
}

type ApplianceSecurityIntrusionAllowedRuleOutput struct{ *pulumi.OutputState }

func (ApplianceSecurityIntrusionAllowedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceSecurityIntrusionAllowedRule)(nil)).Elem()
}

func (o ApplianceSecurityIntrusionAllowedRuleOutput) ToApplianceSecurityIntrusionAllowedRuleOutput() ApplianceSecurityIntrusionAllowedRuleOutput {
	return o
}

func (o ApplianceSecurityIntrusionAllowedRuleOutput) ToApplianceSecurityIntrusionAllowedRuleOutputWithContext(ctx context.Context) ApplianceSecurityIntrusionAllowedRuleOutput {
	return o
}

// Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
func (o ApplianceSecurityIntrusionAllowedRuleOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceSecurityIntrusionAllowedRule) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A rule identifier of the format meraki:intrusion/snort/GID/\n\n/SID/\n\n. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
func (o ApplianceSecurityIntrusionAllowedRuleOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceSecurityIntrusionAllowedRule) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

type ApplianceSecurityIntrusionAllowedRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplianceSecurityIntrusionAllowedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceSecurityIntrusionAllowedRule)(nil)).Elem()
}

func (o ApplianceSecurityIntrusionAllowedRuleArrayOutput) ToApplianceSecurityIntrusionAllowedRuleArrayOutput() ApplianceSecurityIntrusionAllowedRuleArrayOutput {
	return o
}

func (o ApplianceSecurityIntrusionAllowedRuleArrayOutput) ToApplianceSecurityIntrusionAllowedRuleArrayOutputWithContext(ctx context.Context) ApplianceSecurityIntrusionAllowedRuleArrayOutput {
	return o
}

func (o ApplianceSecurityIntrusionAllowedRuleArrayOutput) Index(i pulumi.IntInput) ApplianceSecurityIntrusionAllowedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceSecurityIntrusionAllowedRule {
		return vs[0].([]ApplianceSecurityIntrusionAllowedRule)[vs[1].(int)]
	}).(ApplianceSecurityIntrusionAllowedRuleOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeer struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset *string `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId *string `pulumi:"localId"`
	// The name of the VPN peer
	Name *string `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags []string `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets []string `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp *string `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId *string `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret *string `pulumi:"secret"`
}

// ApplianceVpnThirdPartyVpnpeersPeerInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeerArgs and ApplianceVpnThirdPartyVpnpeersPeerOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeerInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeerArgs{...}
type ApplianceVpnThirdPartyVpnpeersPeerInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeerOutput() ApplianceVpnThirdPartyVpnpeersPeerOutput
	ToApplianceVpnThirdPartyVpnpeersPeerOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeerOutput
}

type ApplianceVpnThirdPartyVpnpeersPeerArgs struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset pulumi.StringPtrInput `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The name of the VPN peer
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ApplianceVpnThirdPartyVpnpeersPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeer)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeerArgs) ToApplianceVpnThirdPartyVpnpeersPeerOutput() ApplianceVpnThirdPartyVpnpeersPeerOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeerOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeerArgs) ToApplianceVpnThirdPartyVpnpeersPeerOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeerOutput)
}

// ApplianceVpnThirdPartyVpnpeersPeerArrayInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeerArray and ApplianceVpnThirdPartyVpnpeersPeerArrayOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeerArrayInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeerArray{ ApplianceVpnThirdPartyVpnpeersPeerArgs{...} }
type ApplianceVpnThirdPartyVpnpeersPeerArrayInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeerArrayOutput() ApplianceVpnThirdPartyVpnpeersPeerArrayOutput
	ToApplianceVpnThirdPartyVpnpeersPeerArrayOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeerArrayOutput
}

type ApplianceVpnThirdPartyVpnpeersPeerArray []ApplianceVpnThirdPartyVpnpeersPeerInput

func (ApplianceVpnThirdPartyVpnpeersPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnThirdPartyVpnpeersPeer)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeerArray) ToApplianceVpnThirdPartyVpnpeersPeerArrayOutput() ApplianceVpnThirdPartyVpnpeersPeerArrayOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeerArrayOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeerArray) ToApplianceVpnThirdPartyVpnpeersPeerArrayOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeerArrayOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeerOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeer)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) ToApplianceVpnThirdPartyVpnpeersPeerOutput() ApplianceVpnThirdPartyVpnpeersPeerOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) ToApplianceVpnThirdPartyVpnpeersPeerOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerOutput {
	return o
}

// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) IpsecPolicies() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies {
		return v.IpsecPolicies
	}).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput)
}

// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) IpsecPoliciesPreset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.IpsecPoliciesPreset }).(pulumi.StringPtrOutput)
}

// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The name of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// The list of the private subnets of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

// [optional] The public IP of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// The shared secret with the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeerOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeer) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeerArrayOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnThirdPartyVpnpeersPeer)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeerArrayOutput) ToApplianceVpnThirdPartyVpnpeersPeerArrayOutput() ApplianceVpnThirdPartyVpnpeersPeerArrayOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerArrayOutput) ToApplianceVpnThirdPartyVpnpeersPeerArrayOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerArrayOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerArrayOutput) Index(i pulumi.IntInput) ApplianceVpnThirdPartyVpnpeersPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceVpnThirdPartyVpnpeersPeer {
		return vs[0].([]ApplianceVpnThirdPartyVpnpeersPeer)[vs[1].(int)]
	}).(ApplianceVpnThirdPartyVpnpeersPeerOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos []string `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos []string `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime *int `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups []string `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos []string `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos []string `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups []string `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos []string `pulumi:"ikePrfAlgos"`
}

// ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs and ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs{...}
type ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput
	ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput
}

type ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos pulumi.StringArrayInput `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos pulumi.StringArrayInput `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime pulumi.IntPtrInput `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups pulumi.StringArrayInput `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos pulumi.StringArrayInput `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos pulumi.StringArrayInput `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups pulumi.StringArrayInput `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos pulumi.StringArrayInput `pulumi:"ikePrfAlgos"`
}

func (ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput)
}

func (i ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput).ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(ctx)
}

// ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs, ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtr and ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput` via:
//
//	        ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs{...}
//
//	or:
//
//	        nil
type ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput
	ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput
}

type applianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrType ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs

func ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtr(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput {
	return (*applianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrType)(v)
}

func (*applianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies)(nil)).Elem()
}

func (i *applianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrType) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (i *applianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrType) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return o.ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies {
		return &v
	}).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput)
}

// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ChildAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.ChildAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ChildCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.ChildCipherAlgos }).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 2 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ChildLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) *int { return v.ChildLifetime }).(pulumi.IntPtrOutput)
}

// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) ChildPfsGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.ChildPfsGroups }).(pulumi.StringArrayOutput)
}

// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) IkeAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.IkeAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) IkeCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.IkeCipherAlgos }).(pulumi.StringArrayOutput)
}

// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) IkeDiffieHellmanGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.IkeDiffieHellmanGroups }).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 1 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput) IkePrfAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string { return v.IkePrfAlgos }).(pulumi.StringArrayOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ToApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) Elem() ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies {
		if v != nil {
			return *v
		}
		var ret ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies
		return ret
	}).(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput)
}

// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ChildAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildAuthAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ChildCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildCipherAlgos
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 2 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ChildLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) *int {
		if v == nil {
			return nil
		}
		return v.ChildLifetime
	}).(pulumi.IntPtrOutput)
}

// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) ChildPfsGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildPfsGroups
	}).(pulumi.StringArrayOutput)
}

// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) IkeAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) IkeCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeCipherAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) IkeDiffieHellmanGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeDiffieHellmanGroups
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 1 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
func (o ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput) IkePrfAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeerIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkePrfAlgos
	}).(pulumi.StringArrayOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponse struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset *string `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId *string `pulumi:"localId"`
	// The name of the VPN peer
	Name *string `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags []string `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets []string `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp *string `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId *string `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret *string `pulumi:"secret"`
}

// ApplianceVpnThirdPartyVpnpeersPeersResponseInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeersResponseArgs and ApplianceVpnThirdPartyVpnpeersPeersResponseOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeersResponseInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeersResponseArgs{...}
type ApplianceVpnThirdPartyVpnpeersPeersResponseInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeersResponseOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseOutput
	ToApplianceVpnThirdPartyVpnpeersPeersResponseOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseOutput
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseArgs struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset pulumi.StringPtrInput `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The name of the VPN peer
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ApplianceVpnThirdPartyVpnpeersPeersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponse)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeersResponseOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeersResponseOutput)
}

// ApplianceVpnThirdPartyVpnpeersPeersResponseArrayInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeersResponseArray and ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeersResponseArrayInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeersResponseArray{ ApplianceVpnThirdPartyVpnpeersPeersResponseArgs{...} }
type ApplianceVpnThirdPartyVpnpeersPeersResponseArrayInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput
	ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseArray []ApplianceVpnThirdPartyVpnpeersPeersResponseInput

func (ApplianceVpnThirdPartyVpnpeersPeersResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnThirdPartyVpnpeersPeersResponse)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseArray) ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseArray) ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponse)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseOutput {
	return o
}

// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) IpsecPolicies() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies {
		return v.IpsecPolicies
	}).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput)
}

// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) IpsecPoliciesPreset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.IpsecPoliciesPreset }).(pulumi.StringPtrOutput)
}

// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The name of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// The list of the private subnets of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

// [optional] The public IP of the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// The shared secret with the VPN peer
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnThirdPartyVpnpeersPeersResponse)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput) Index(i pulumi.IntInput) ApplianceVpnThirdPartyVpnpeersPeersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceVpnThirdPartyVpnpeersPeersResponse {
		return vs[0].([]ApplianceVpnThirdPartyVpnpeersPeersResponse)[vs[1].(int)]
	}).(ApplianceVpnThirdPartyVpnpeersPeersResponseOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos []string `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos []string `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime *int `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups []string `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos []string `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos []string `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups []string `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos []string `pulumi:"ikePrfAlgos"`
}

// ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs and ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesInput` via:
//
//	ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs{...}
type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput
	ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos pulumi.StringArrayInput `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos pulumi.StringArrayInput `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime pulumi.IntPtrInput `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups pulumi.StringArrayInput `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos pulumi.StringArrayInput `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos pulumi.StringArrayInput `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups pulumi.StringArrayInput `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos pulumi.StringArrayInput `pulumi:"ikePrfAlgos"`
}

func (ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies)(nil)).Elem()
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput)
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (i ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput).ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(ctx)
}

// ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput is an input type that accepts ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs, ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtr and ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput values.
// You can construct a concrete instance of `ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput` via:
//
//	        ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs{...}
//
//	or:
//
//	        nil
type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput interface {
	pulumi.Input

	ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput
	ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput
}

type applianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrType ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs

func ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtr(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput {
	return (*applianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrType)(v)
}

func (*applianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies)(nil)).Elem()
}

func (i *applianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrType) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return i.ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (i *applianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrType) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return o.ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(context.Background())
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies {
		return &v
	}).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput)
}

// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ChildAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.ChildAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ChildCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.ChildCipherAlgos }).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 2 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ChildLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) *int { return v.ChildLifetime }).(pulumi.IntPtrOutput)
}

// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) ChildPfsGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.ChildPfsGroups }).(pulumi.StringArrayOutput)
}

// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) IkeAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.IkeAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) IkeCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.IkeCipherAlgos }).(pulumi.StringArrayOutput)
}

// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) IkeDiffieHellmanGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		return v.IkeDiffieHellmanGroups
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 1 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput) IkePrfAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string { return v.IkePrfAlgos }).(pulumi.StringArrayOutput)
}

type ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput struct{ *pulumi.OutputState }

func (ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies)(nil)).Elem()
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ToApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutputWithContext(ctx context.Context) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput {
	return o
}

func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) Elem() ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies {
		if v != nil {
			return *v
		}
		var ret ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies
		return ret
	}).(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput)
}

// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ChildAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildAuthAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ChildCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildCipherAlgos
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 2 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ChildLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) *int {
		if v == nil {
			return nil
		}
		return v.ChildLifetime
	}).(pulumi.IntPtrOutput)
}

// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) ChildPfsGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.ChildPfsGroups
	}).(pulumi.StringArrayOutput)
}

// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) IkeAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) IkeCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeCipherAlgos
	}).(pulumi.StringArrayOutput)
}

// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) IkeDiffieHellmanGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkeDiffieHellmanGroups
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 1 SA in seconds.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
func (o ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput) IkePrfAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPolicies) []string {
		if v == nil {
			return nil
		}
		return v.IkePrfAlgos
	}).(pulumi.StringArrayOutput)
}

type ApplianceVpnVpnFirewallRulesRule struct {
	// Description of the rule (optional)
	Comment *string `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr *string `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort *string `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy *string `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol *string `pulumi:"protocol"`
	// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
	SrcCidr *string `pulumi:"srcCidr"`
	// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
	SrcPort *string `pulumi:"srcPort"`
	// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
	SyslogEnabled *bool `pulumi:"syslogEnabled"`
}

// ApplianceVpnVpnFirewallRulesRuleInput is an input type that accepts ApplianceVpnVpnFirewallRulesRuleArgs and ApplianceVpnVpnFirewallRulesRuleOutput values.
// You can construct a concrete instance of `ApplianceVpnVpnFirewallRulesRuleInput` via:
//
//	ApplianceVpnVpnFirewallRulesRuleArgs{...}
type ApplianceVpnVpnFirewallRulesRuleInput interface {
	pulumi.Input

	ToApplianceVpnVpnFirewallRulesRuleOutput() ApplianceVpnVpnFirewallRulesRuleOutput
	ToApplianceVpnVpnFirewallRulesRuleOutputWithContext(context.Context) ApplianceVpnVpnFirewallRulesRuleOutput
}

type ApplianceVpnVpnFirewallRulesRuleArgs struct {
	// Description of the rule (optional)
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr pulumi.StringPtrInput `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort pulumi.StringPtrInput `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
	SrcCidr pulumi.StringPtrInput `pulumi:"srcCidr"`
	// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
	SrcPort pulumi.StringPtrInput `pulumi:"srcPort"`
	// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
	SyslogEnabled pulumi.BoolPtrInput `pulumi:"syslogEnabled"`
}

func (ApplianceVpnVpnFirewallRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnVpnFirewallRulesRule)(nil)).Elem()
}

func (i ApplianceVpnVpnFirewallRulesRuleArgs) ToApplianceVpnVpnFirewallRulesRuleOutput() ApplianceVpnVpnFirewallRulesRuleOutput {
	return i.ToApplianceVpnVpnFirewallRulesRuleOutputWithContext(context.Background())
}

func (i ApplianceVpnVpnFirewallRulesRuleArgs) ToApplianceVpnVpnFirewallRulesRuleOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnVpnFirewallRulesRuleOutput)
}

// ApplianceVpnVpnFirewallRulesRuleArrayInput is an input type that accepts ApplianceVpnVpnFirewallRulesRuleArray and ApplianceVpnVpnFirewallRulesRuleArrayOutput values.
// You can construct a concrete instance of `ApplianceVpnVpnFirewallRulesRuleArrayInput` via:
//
//	ApplianceVpnVpnFirewallRulesRuleArray{ ApplianceVpnVpnFirewallRulesRuleArgs{...} }
type ApplianceVpnVpnFirewallRulesRuleArrayInput interface {
	pulumi.Input

	ToApplianceVpnVpnFirewallRulesRuleArrayOutput() ApplianceVpnVpnFirewallRulesRuleArrayOutput
	ToApplianceVpnVpnFirewallRulesRuleArrayOutputWithContext(context.Context) ApplianceVpnVpnFirewallRulesRuleArrayOutput
}

type ApplianceVpnVpnFirewallRulesRuleArray []ApplianceVpnVpnFirewallRulesRuleInput

func (ApplianceVpnVpnFirewallRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnVpnFirewallRulesRule)(nil)).Elem()
}

func (i ApplianceVpnVpnFirewallRulesRuleArray) ToApplianceVpnVpnFirewallRulesRuleArrayOutput() ApplianceVpnVpnFirewallRulesRuleArrayOutput {
	return i.ToApplianceVpnVpnFirewallRulesRuleArrayOutputWithContext(context.Background())
}

func (i ApplianceVpnVpnFirewallRulesRuleArray) ToApplianceVpnVpnFirewallRulesRuleArrayOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVpnVpnFirewallRulesRuleArrayOutput)
}

type ApplianceVpnVpnFirewallRulesRuleOutput struct{ *pulumi.OutputState }

func (ApplianceVpnVpnFirewallRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVpnVpnFirewallRulesRule)(nil)).Elem()
}

func (o ApplianceVpnVpnFirewallRulesRuleOutput) ToApplianceVpnVpnFirewallRulesRuleOutput() ApplianceVpnVpnFirewallRulesRuleOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesRuleOutput) ToApplianceVpnVpnFirewallRulesRuleOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesRuleOutput {
	return o
}

// Description of the rule (optional)
func (o ApplianceVpnVpnFirewallRulesRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
func (o ApplianceVpnVpnFirewallRulesRuleOutput) DestCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.DestCidr }).(pulumi.StringPtrOutput)
}

// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
func (o ApplianceVpnVpnFirewallRulesRuleOutput) DestPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.DestPort }).(pulumi.StringPtrOutput)
}

// 'allow' or 'deny' traffic specified by this rule
func (o ApplianceVpnVpnFirewallRulesRuleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
func (o ApplianceVpnVpnFirewallRulesRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
func (o ApplianceVpnVpnFirewallRulesRuleOutput) SrcCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.SrcCidr }).(pulumi.StringPtrOutput)
}

// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
func (o ApplianceVpnVpnFirewallRulesRuleOutput) SrcPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *string { return v.SrcPort }).(pulumi.StringPtrOutput)
}

// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
func (o ApplianceVpnVpnFirewallRulesRuleOutput) SyslogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceVpnVpnFirewallRulesRule) *bool { return v.SyslogEnabled }).(pulumi.BoolPtrOutput)
}

type ApplianceVpnVpnFirewallRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplianceVpnVpnFirewallRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceVpnVpnFirewallRulesRule)(nil)).Elem()
}

func (o ApplianceVpnVpnFirewallRulesRuleArrayOutput) ToApplianceVpnVpnFirewallRulesRuleArrayOutput() ApplianceVpnVpnFirewallRulesRuleArrayOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesRuleArrayOutput) ToApplianceVpnVpnFirewallRulesRuleArrayOutputWithContext(ctx context.Context) ApplianceVpnVpnFirewallRulesRuleArrayOutput {
	return o
}

func (o ApplianceVpnVpnFirewallRulesRuleArrayOutput) Index(i pulumi.IntInput) ApplianceVpnVpnFirewallRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceVpnVpnFirewallRulesRule {
		return vs[0].([]ApplianceVpnVpnFirewallRulesRule)[vs[1].(int)]
	}).(ApplianceVpnVpnFirewallRulesRuleOutput)
}

type BrandingPoliciesAdminSettings struct {
	// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
	AppliesTo *string `pulumi:"appliesTo"`
	// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
	//   entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
	//   networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
	//   specify an array of tag names.
	Values []string `pulumi:"values"`
}

// BrandingPoliciesAdminSettingsInput is an input type that accepts BrandingPoliciesAdminSettingsArgs and BrandingPoliciesAdminSettingsOutput values.
// You can construct a concrete instance of `BrandingPoliciesAdminSettingsInput` via:
//
//	BrandingPoliciesAdminSettingsArgs{...}
type BrandingPoliciesAdminSettingsInput interface {
	pulumi.Input

	ToBrandingPoliciesAdminSettingsOutput() BrandingPoliciesAdminSettingsOutput
	ToBrandingPoliciesAdminSettingsOutputWithContext(context.Context) BrandingPoliciesAdminSettingsOutput
}

type BrandingPoliciesAdminSettingsArgs struct {
	// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
	AppliesTo pulumi.StringPtrInput `pulumi:"appliesTo"`
	// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
	//   entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
	//   networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
	//   specify an array of tag names.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BrandingPoliciesAdminSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesAdminSettings)(nil)).Elem()
}

func (i BrandingPoliciesAdminSettingsArgs) ToBrandingPoliciesAdminSettingsOutput() BrandingPoliciesAdminSettingsOutput {
	return i.ToBrandingPoliciesAdminSettingsOutputWithContext(context.Background())
}

func (i BrandingPoliciesAdminSettingsArgs) ToBrandingPoliciesAdminSettingsOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesAdminSettingsOutput)
}

func (i BrandingPoliciesAdminSettingsArgs) ToBrandingPoliciesAdminSettingsPtrOutput() BrandingPoliciesAdminSettingsPtrOutput {
	return i.ToBrandingPoliciesAdminSettingsPtrOutputWithContext(context.Background())
}

func (i BrandingPoliciesAdminSettingsArgs) ToBrandingPoliciesAdminSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesAdminSettingsOutput).ToBrandingPoliciesAdminSettingsPtrOutputWithContext(ctx)
}

// BrandingPoliciesAdminSettingsPtrInput is an input type that accepts BrandingPoliciesAdminSettingsArgs, BrandingPoliciesAdminSettingsPtr and BrandingPoliciesAdminSettingsPtrOutput values.
// You can construct a concrete instance of `BrandingPoliciesAdminSettingsPtrInput` via:
//
//	        BrandingPoliciesAdminSettingsArgs{...}
//
//	or:
//
//	        nil
type BrandingPoliciesAdminSettingsPtrInput interface {
	pulumi.Input

	ToBrandingPoliciesAdminSettingsPtrOutput() BrandingPoliciesAdminSettingsPtrOutput
	ToBrandingPoliciesAdminSettingsPtrOutputWithContext(context.Context) BrandingPoliciesAdminSettingsPtrOutput
}

type brandingPoliciesAdminSettingsPtrType BrandingPoliciesAdminSettingsArgs

func BrandingPoliciesAdminSettingsPtr(v *BrandingPoliciesAdminSettingsArgs) BrandingPoliciesAdminSettingsPtrInput {
	return (*brandingPoliciesAdminSettingsPtrType)(v)
}

func (*brandingPoliciesAdminSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesAdminSettings)(nil)).Elem()
}

func (i *brandingPoliciesAdminSettingsPtrType) ToBrandingPoliciesAdminSettingsPtrOutput() BrandingPoliciesAdminSettingsPtrOutput {
	return i.ToBrandingPoliciesAdminSettingsPtrOutputWithContext(context.Background())
}

func (i *brandingPoliciesAdminSettingsPtrType) ToBrandingPoliciesAdminSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesAdminSettingsPtrOutput)
}

type BrandingPoliciesAdminSettingsOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesAdminSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesAdminSettings)(nil)).Elem()
}

func (o BrandingPoliciesAdminSettingsOutput) ToBrandingPoliciesAdminSettingsOutput() BrandingPoliciesAdminSettingsOutput {
	return o
}

func (o BrandingPoliciesAdminSettingsOutput) ToBrandingPoliciesAdminSettingsOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsOutput {
	return o
}

func (o BrandingPoliciesAdminSettingsOutput) ToBrandingPoliciesAdminSettingsPtrOutput() BrandingPoliciesAdminSettingsPtrOutput {
	return o.ToBrandingPoliciesAdminSettingsPtrOutputWithContext(context.Background())
}

func (o BrandingPoliciesAdminSettingsOutput) ToBrandingPoliciesAdminSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingPoliciesAdminSettings) *BrandingPoliciesAdminSettings {
		return &v
	}).(BrandingPoliciesAdminSettingsPtrOutput)
}

// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
func (o BrandingPoliciesAdminSettingsOutput) AppliesTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesAdminSettings) *string { return v.AppliesTo }).(pulumi.StringPtrOutput)
}

// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
//
//	entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
//	networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
//	specify an array of tag names.
func (o BrandingPoliciesAdminSettingsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrandingPoliciesAdminSettings) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BrandingPoliciesAdminSettingsPtrOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesAdminSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesAdminSettings)(nil)).Elem()
}

func (o BrandingPoliciesAdminSettingsPtrOutput) ToBrandingPoliciesAdminSettingsPtrOutput() BrandingPoliciesAdminSettingsPtrOutput {
	return o
}

func (o BrandingPoliciesAdminSettingsPtrOutput) ToBrandingPoliciesAdminSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesAdminSettingsPtrOutput {
	return o
}

func (o BrandingPoliciesAdminSettingsPtrOutput) Elem() BrandingPoliciesAdminSettingsOutput {
	return o.ApplyT(func(v *BrandingPoliciesAdminSettings) BrandingPoliciesAdminSettings {
		if v != nil {
			return *v
		}
		var ret BrandingPoliciesAdminSettings
		return ret
	}).(BrandingPoliciesAdminSettingsOutput)
}

// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
func (o BrandingPoliciesAdminSettingsPtrOutput) AppliesTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesAdminSettings) *string {
		if v == nil {
			return nil
		}
		return v.AppliesTo
	}).(pulumi.StringPtrOutput)
}

// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
//
//	entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
//	networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
//	specify an array of tag names.
func (o BrandingPoliciesAdminSettingsPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrandingPoliciesAdminSettings) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BrandingPoliciesCustomLogo struct {
	// Whether or not there is a custom logo enabled.
	Enabled *bool `pulumi:"enabled"`
	// Properties of the image.
	Image *BrandingPoliciesCustomLogoImage `pulumi:"image"`
}

// BrandingPoliciesCustomLogoInput is an input type that accepts BrandingPoliciesCustomLogoArgs and BrandingPoliciesCustomLogoOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoInput` via:
//
//	BrandingPoliciesCustomLogoArgs{...}
type BrandingPoliciesCustomLogoInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoOutput() BrandingPoliciesCustomLogoOutput
	ToBrandingPoliciesCustomLogoOutputWithContext(context.Context) BrandingPoliciesCustomLogoOutput
}

type BrandingPoliciesCustomLogoArgs struct {
	// Whether or not there is a custom logo enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Properties of the image.
	Image BrandingPoliciesCustomLogoImagePtrInput `pulumi:"image"`
}

func (BrandingPoliciesCustomLogoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogo)(nil)).Elem()
}

func (i BrandingPoliciesCustomLogoArgs) ToBrandingPoliciesCustomLogoOutput() BrandingPoliciesCustomLogoOutput {
	return i.ToBrandingPoliciesCustomLogoOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoArgs) ToBrandingPoliciesCustomLogoOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoOutput)
}

func (i BrandingPoliciesCustomLogoArgs) ToBrandingPoliciesCustomLogoPtrOutput() BrandingPoliciesCustomLogoPtrOutput {
	return i.ToBrandingPoliciesCustomLogoPtrOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoArgs) ToBrandingPoliciesCustomLogoPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoOutput).ToBrandingPoliciesCustomLogoPtrOutputWithContext(ctx)
}

// BrandingPoliciesCustomLogoPtrInput is an input type that accepts BrandingPoliciesCustomLogoArgs, BrandingPoliciesCustomLogoPtr and BrandingPoliciesCustomLogoPtrOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoPtrInput` via:
//
//	        BrandingPoliciesCustomLogoArgs{...}
//
//	or:
//
//	        nil
type BrandingPoliciesCustomLogoPtrInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoPtrOutput() BrandingPoliciesCustomLogoPtrOutput
	ToBrandingPoliciesCustomLogoPtrOutputWithContext(context.Context) BrandingPoliciesCustomLogoPtrOutput
}

type brandingPoliciesCustomLogoPtrType BrandingPoliciesCustomLogoArgs

func BrandingPoliciesCustomLogoPtr(v *BrandingPoliciesCustomLogoArgs) BrandingPoliciesCustomLogoPtrInput {
	return (*brandingPoliciesCustomLogoPtrType)(v)
}

func (*brandingPoliciesCustomLogoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogo)(nil)).Elem()
}

func (i *brandingPoliciesCustomLogoPtrType) ToBrandingPoliciesCustomLogoPtrOutput() BrandingPoliciesCustomLogoPtrOutput {
	return i.ToBrandingPoliciesCustomLogoPtrOutputWithContext(context.Background())
}

func (i *brandingPoliciesCustomLogoPtrType) ToBrandingPoliciesCustomLogoPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoPtrOutput)
}

type BrandingPoliciesCustomLogoOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogo)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoOutput) ToBrandingPoliciesCustomLogoOutput() BrandingPoliciesCustomLogoOutput {
	return o
}

func (o BrandingPoliciesCustomLogoOutput) ToBrandingPoliciesCustomLogoOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoOutput {
	return o
}

func (o BrandingPoliciesCustomLogoOutput) ToBrandingPoliciesCustomLogoPtrOutput() BrandingPoliciesCustomLogoPtrOutput {
	return o.ToBrandingPoliciesCustomLogoPtrOutputWithContext(context.Background())
}

func (o BrandingPoliciesCustomLogoOutput) ToBrandingPoliciesCustomLogoPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingPoliciesCustomLogo) *BrandingPoliciesCustomLogo {
		return &v
	}).(BrandingPoliciesCustomLogoPtrOutput)
}

// Whether or not there is a custom logo enabled.
func (o BrandingPoliciesCustomLogoOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogo) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Properties of the image.
func (o BrandingPoliciesCustomLogoOutput) Image() BrandingPoliciesCustomLogoImagePtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogo) *BrandingPoliciesCustomLogoImage { return v.Image }).(BrandingPoliciesCustomLogoImagePtrOutput)
}

type BrandingPoliciesCustomLogoPtrOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogo)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoPtrOutput) ToBrandingPoliciesCustomLogoPtrOutput() BrandingPoliciesCustomLogoPtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoPtrOutput) ToBrandingPoliciesCustomLogoPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoPtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoPtrOutput) Elem() BrandingPoliciesCustomLogoOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogo) BrandingPoliciesCustomLogo {
		if v != nil {
			return *v
		}
		var ret BrandingPoliciesCustomLogo
		return ret
	}).(BrandingPoliciesCustomLogoOutput)
}

// Whether or not there is a custom logo enabled.
func (o BrandingPoliciesCustomLogoPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogo) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Properties of the image.
func (o BrandingPoliciesCustomLogoPtrOutput) Image() BrandingPoliciesCustomLogoImagePtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogo) *BrandingPoliciesCustomLogoImage {
		if v == nil {
			return nil
		}
		return v.Image
	}).(BrandingPoliciesCustomLogoImagePtrOutput)
}

type BrandingPoliciesCustomLogoImage struct {
	// The file contents (a base 64 encoded string) of your new logo.
	Contents *string `pulumi:"contents"`
	// The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
	Format *string `pulumi:"format"`
	// Preview of the image
	Preview *BrandingPoliciesCustomLogoImagePreview `pulumi:"preview"`
}

// BrandingPoliciesCustomLogoImageInput is an input type that accepts BrandingPoliciesCustomLogoImageArgs and BrandingPoliciesCustomLogoImageOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoImageInput` via:
//
//	BrandingPoliciesCustomLogoImageArgs{...}
type BrandingPoliciesCustomLogoImageInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoImageOutput() BrandingPoliciesCustomLogoImageOutput
	ToBrandingPoliciesCustomLogoImageOutputWithContext(context.Context) BrandingPoliciesCustomLogoImageOutput
}

type BrandingPoliciesCustomLogoImageArgs struct {
	// The file contents (a base 64 encoded string) of your new logo.
	Contents pulumi.StringPtrInput `pulumi:"contents"`
	// The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Preview of the image
	Preview BrandingPoliciesCustomLogoImagePreviewPtrInput `pulumi:"preview"`
}

func (BrandingPoliciesCustomLogoImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogoImage)(nil)).Elem()
}

func (i BrandingPoliciesCustomLogoImageArgs) ToBrandingPoliciesCustomLogoImageOutput() BrandingPoliciesCustomLogoImageOutput {
	return i.ToBrandingPoliciesCustomLogoImageOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoImageArgs) ToBrandingPoliciesCustomLogoImageOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImageOutput)
}

func (i BrandingPoliciesCustomLogoImageArgs) ToBrandingPoliciesCustomLogoImagePtrOutput() BrandingPoliciesCustomLogoImagePtrOutput {
	return i.ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoImageArgs) ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImageOutput).ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(ctx)
}

// BrandingPoliciesCustomLogoImagePtrInput is an input type that accepts BrandingPoliciesCustomLogoImageArgs, BrandingPoliciesCustomLogoImagePtr and BrandingPoliciesCustomLogoImagePtrOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoImagePtrInput` via:
//
//	        BrandingPoliciesCustomLogoImageArgs{...}
//
//	or:
//
//	        nil
type BrandingPoliciesCustomLogoImagePtrInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoImagePtrOutput() BrandingPoliciesCustomLogoImagePtrOutput
	ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(context.Context) BrandingPoliciesCustomLogoImagePtrOutput
}

type brandingPoliciesCustomLogoImagePtrType BrandingPoliciesCustomLogoImageArgs

func BrandingPoliciesCustomLogoImagePtr(v *BrandingPoliciesCustomLogoImageArgs) BrandingPoliciesCustomLogoImagePtrInput {
	return (*brandingPoliciesCustomLogoImagePtrType)(v)
}

func (*brandingPoliciesCustomLogoImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogoImage)(nil)).Elem()
}

func (i *brandingPoliciesCustomLogoImagePtrType) ToBrandingPoliciesCustomLogoImagePtrOutput() BrandingPoliciesCustomLogoImagePtrOutput {
	return i.ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(context.Background())
}

func (i *brandingPoliciesCustomLogoImagePtrType) ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImagePtrOutput)
}

type BrandingPoliciesCustomLogoImageOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogoImage)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoImageOutput) ToBrandingPoliciesCustomLogoImageOutput() BrandingPoliciesCustomLogoImageOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImageOutput) ToBrandingPoliciesCustomLogoImageOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImageOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImageOutput) ToBrandingPoliciesCustomLogoImagePtrOutput() BrandingPoliciesCustomLogoImagePtrOutput {
	return o.ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(context.Background())
}

func (o BrandingPoliciesCustomLogoImageOutput) ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingPoliciesCustomLogoImage) *BrandingPoliciesCustomLogoImage {
		return &v
	}).(BrandingPoliciesCustomLogoImagePtrOutput)
}

// The file contents (a base 64 encoded string) of your new logo.
func (o BrandingPoliciesCustomLogoImageOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogoImage) *string { return v.Contents }).(pulumi.StringPtrOutput)
}

// The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
func (o BrandingPoliciesCustomLogoImageOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogoImage) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Preview of the image
func (o BrandingPoliciesCustomLogoImageOutput) Preview() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogoImage) *BrandingPoliciesCustomLogoImagePreview { return v.Preview }).(BrandingPoliciesCustomLogoImagePreviewPtrOutput)
}

type BrandingPoliciesCustomLogoImagePtrOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogoImage)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoImagePtrOutput) ToBrandingPoliciesCustomLogoImagePtrOutput() BrandingPoliciesCustomLogoImagePtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePtrOutput) ToBrandingPoliciesCustomLogoImagePtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePtrOutput) Elem() BrandingPoliciesCustomLogoImageOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImage) BrandingPoliciesCustomLogoImage {
		if v != nil {
			return *v
		}
		var ret BrandingPoliciesCustomLogoImage
		return ret
	}).(BrandingPoliciesCustomLogoImageOutput)
}

// The file contents (a base 64 encoded string) of your new logo.
func (o BrandingPoliciesCustomLogoImagePtrOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImage) *string {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(pulumi.StringPtrOutput)
}

// The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
func (o BrandingPoliciesCustomLogoImagePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImage) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Preview of the image
func (o BrandingPoliciesCustomLogoImagePtrOutput) Preview() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImage) *BrandingPoliciesCustomLogoImagePreview {
		if v == nil {
			return nil
		}
		return v.Preview
	}).(BrandingPoliciesCustomLogoImagePreviewPtrOutput)
}

type BrandingPoliciesCustomLogoImagePreview struct {
	// Timestamp of the preview image
	ExpiresAt *string `pulumi:"expiresAt"`
	// Url of the preview image
	Url *string `pulumi:"url"`
}

// BrandingPoliciesCustomLogoImagePreviewInput is an input type that accepts BrandingPoliciesCustomLogoImagePreviewArgs and BrandingPoliciesCustomLogoImagePreviewOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoImagePreviewInput` via:
//
//	BrandingPoliciesCustomLogoImagePreviewArgs{...}
type BrandingPoliciesCustomLogoImagePreviewInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoImagePreviewOutput() BrandingPoliciesCustomLogoImagePreviewOutput
	ToBrandingPoliciesCustomLogoImagePreviewOutputWithContext(context.Context) BrandingPoliciesCustomLogoImagePreviewOutput
}

type BrandingPoliciesCustomLogoImagePreviewArgs struct {
	// Timestamp of the preview image
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// Url of the preview image
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (BrandingPoliciesCustomLogoImagePreviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogoImagePreview)(nil)).Elem()
}

func (i BrandingPoliciesCustomLogoImagePreviewArgs) ToBrandingPoliciesCustomLogoImagePreviewOutput() BrandingPoliciesCustomLogoImagePreviewOutput {
	return i.ToBrandingPoliciesCustomLogoImagePreviewOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoImagePreviewArgs) ToBrandingPoliciesCustomLogoImagePreviewOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImagePreviewOutput)
}

func (i BrandingPoliciesCustomLogoImagePreviewArgs) ToBrandingPoliciesCustomLogoImagePreviewPtrOutput() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return i.ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(context.Background())
}

func (i BrandingPoliciesCustomLogoImagePreviewArgs) ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImagePreviewOutput).ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(ctx)
}

// BrandingPoliciesCustomLogoImagePreviewPtrInput is an input type that accepts BrandingPoliciesCustomLogoImagePreviewArgs, BrandingPoliciesCustomLogoImagePreviewPtr and BrandingPoliciesCustomLogoImagePreviewPtrOutput values.
// You can construct a concrete instance of `BrandingPoliciesCustomLogoImagePreviewPtrInput` via:
//
//	        BrandingPoliciesCustomLogoImagePreviewArgs{...}
//
//	or:
//
//	        nil
type BrandingPoliciesCustomLogoImagePreviewPtrInput interface {
	pulumi.Input

	ToBrandingPoliciesCustomLogoImagePreviewPtrOutput() BrandingPoliciesCustomLogoImagePreviewPtrOutput
	ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(context.Context) BrandingPoliciesCustomLogoImagePreviewPtrOutput
}

type brandingPoliciesCustomLogoImagePreviewPtrType BrandingPoliciesCustomLogoImagePreviewArgs

func BrandingPoliciesCustomLogoImagePreviewPtr(v *BrandingPoliciesCustomLogoImagePreviewArgs) BrandingPoliciesCustomLogoImagePreviewPtrInput {
	return (*brandingPoliciesCustomLogoImagePreviewPtrType)(v)
}

func (*brandingPoliciesCustomLogoImagePreviewPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogoImagePreview)(nil)).Elem()
}

func (i *brandingPoliciesCustomLogoImagePreviewPtrType) ToBrandingPoliciesCustomLogoImagePreviewPtrOutput() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return i.ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(context.Background())
}

func (i *brandingPoliciesCustomLogoImagePreviewPtrType) ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesCustomLogoImagePreviewPtrOutput)
}

type BrandingPoliciesCustomLogoImagePreviewOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoImagePreviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesCustomLogoImagePreview)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoImagePreviewOutput) ToBrandingPoliciesCustomLogoImagePreviewOutput() BrandingPoliciesCustomLogoImagePreviewOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePreviewOutput) ToBrandingPoliciesCustomLogoImagePreviewOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePreviewOutput) ToBrandingPoliciesCustomLogoImagePreviewPtrOutput() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o.ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(context.Background())
}

func (o BrandingPoliciesCustomLogoImagePreviewOutput) ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingPoliciesCustomLogoImagePreview) *BrandingPoliciesCustomLogoImagePreview {
		return &v
	}).(BrandingPoliciesCustomLogoImagePreviewPtrOutput)
}

// Timestamp of the preview image
func (o BrandingPoliciesCustomLogoImagePreviewOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogoImagePreview) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// Url of the preview image
func (o BrandingPoliciesCustomLogoImagePreviewOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesCustomLogoImagePreview) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BrandingPoliciesCustomLogoImagePreviewPtrOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesCustomLogoImagePreviewPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesCustomLogoImagePreview)(nil)).Elem()
}

func (o BrandingPoliciesCustomLogoImagePreviewPtrOutput) ToBrandingPoliciesCustomLogoImagePreviewPtrOutput() BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePreviewPtrOutput) ToBrandingPoliciesCustomLogoImagePreviewPtrOutputWithContext(ctx context.Context) BrandingPoliciesCustomLogoImagePreviewPtrOutput {
	return o
}

func (o BrandingPoliciesCustomLogoImagePreviewPtrOutput) Elem() BrandingPoliciesCustomLogoImagePreviewOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImagePreview) BrandingPoliciesCustomLogoImagePreview {
		if v != nil {
			return *v
		}
		var ret BrandingPoliciesCustomLogoImagePreview
		return ret
	}).(BrandingPoliciesCustomLogoImagePreviewOutput)
}

// Timestamp of the preview image
func (o BrandingPoliciesCustomLogoImagePreviewPtrOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImagePreview) *string {
		if v == nil {
			return nil
		}
		return v.ExpiresAt
	}).(pulumi.StringPtrOutput)
}

// Url of the preview image
func (o BrandingPoliciesCustomLogoImagePreviewPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesCustomLogoImagePreview) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type BrandingPoliciesHelpSettings struct {
	// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	ApiDocsSubtab *string `pulumi:"apiDocsSubtab"`
	// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
	//   of 'default or inherit', 'hide' or 'show'.
	CasesSubtab *string `pulumi:"casesSubtab"`
	// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	CiscoMerakiProductDocumentation *string `pulumi:"ciscoMerakiProductDocumentation"`
	// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
	CommunitySubtab *string `pulumi:"communitySubtab"`
	// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
	//   be audited. Can be one of 'default or inherit', 'hide' or 'show'.
	DataProtectionRequestsSubtab *string `pulumi:"dataProtectionRequestsSubtab"`
	// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
	//   listed. Can be one of 'default or inherit', 'hide' or 'show'.
	FirewallInfoSubtab *string `pulumi:"firewallInfoSubtab"`
	// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
	//   that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
	//   and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	GetHelpSubtab *string `pulumi:"getHelpSubtab"`
	// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	GetHelpSubtabKnowledgeBaseSearch *string `pulumi:"getHelpSubtabKnowledgeBaseSearch"`
	// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	HardwareReplacementsSubtab *string `pulumi:"hardwareReplacementsSubtab"`
	// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
	//   customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpTab *string `pulumi:"helpTab"`
	// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
	//   and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpWidget *string `pulumi:"helpWidget"`
	// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
	NewFeaturesSubtab *string `pulumi:"newFeaturesSubtab"`
	// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
	//   organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
	SmForums *string `pulumi:"smForums"`
	// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	SupportContactInfo *string `pulumi:"supportContactInfo"`
	// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
	//   whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
	UniversalSearchKnowledgeBaseSearch *string `pulumi:"universalSearchKnowledgeBaseSearch"`
}

// BrandingPoliciesHelpSettingsInput is an input type that accepts BrandingPoliciesHelpSettingsArgs and BrandingPoliciesHelpSettingsOutput values.
// You can construct a concrete instance of `BrandingPoliciesHelpSettingsInput` via:
//
//	BrandingPoliciesHelpSettingsArgs{...}
type BrandingPoliciesHelpSettingsInput interface {
	pulumi.Input

	ToBrandingPoliciesHelpSettingsOutput() BrandingPoliciesHelpSettingsOutput
	ToBrandingPoliciesHelpSettingsOutputWithContext(context.Context) BrandingPoliciesHelpSettingsOutput
}

type BrandingPoliciesHelpSettingsArgs struct {
	// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	ApiDocsSubtab pulumi.StringPtrInput `pulumi:"apiDocsSubtab"`
	// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
	//   of 'default or inherit', 'hide' or 'show'.
	CasesSubtab pulumi.StringPtrInput `pulumi:"casesSubtab"`
	// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	CiscoMerakiProductDocumentation pulumi.StringPtrInput `pulumi:"ciscoMerakiProductDocumentation"`
	// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
	CommunitySubtab pulumi.StringPtrInput `pulumi:"communitySubtab"`
	// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
	//   be audited. Can be one of 'default or inherit', 'hide' or 'show'.
	DataProtectionRequestsSubtab pulumi.StringPtrInput `pulumi:"dataProtectionRequestsSubtab"`
	// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
	//   listed. Can be one of 'default or inherit', 'hide' or 'show'.
	FirewallInfoSubtab pulumi.StringPtrInput `pulumi:"firewallInfoSubtab"`
	// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
	//   that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
	//   and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	GetHelpSubtab pulumi.StringPtrInput `pulumi:"getHelpSubtab"`
	// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	GetHelpSubtabKnowledgeBaseSearch pulumi.StringPtrInput `pulumi:"getHelpSubtabKnowledgeBaseSearch"`
	// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	HardwareReplacementsSubtab pulumi.StringPtrInput `pulumi:"hardwareReplacementsSubtab"`
	// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
	//   customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpTab pulumi.StringPtrInput `pulumi:"helpTab"`
	// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
	//   and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpWidget pulumi.StringPtrInput `pulumi:"helpWidget"`
	// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
	NewFeaturesSubtab pulumi.StringPtrInput `pulumi:"newFeaturesSubtab"`
	// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
	//   organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
	SmForums pulumi.StringPtrInput `pulumi:"smForums"`
	// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	SupportContactInfo pulumi.StringPtrInput `pulumi:"supportContactInfo"`
	// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
	//   whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
	UniversalSearchKnowledgeBaseSearch pulumi.StringPtrInput `pulumi:"universalSearchKnowledgeBaseSearch"`
}

func (BrandingPoliciesHelpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesHelpSettings)(nil)).Elem()
}

func (i BrandingPoliciesHelpSettingsArgs) ToBrandingPoliciesHelpSettingsOutput() BrandingPoliciesHelpSettingsOutput {
	return i.ToBrandingPoliciesHelpSettingsOutputWithContext(context.Background())
}

func (i BrandingPoliciesHelpSettingsArgs) ToBrandingPoliciesHelpSettingsOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesHelpSettingsOutput)
}

func (i BrandingPoliciesHelpSettingsArgs) ToBrandingPoliciesHelpSettingsPtrOutput() BrandingPoliciesHelpSettingsPtrOutput {
	return i.ToBrandingPoliciesHelpSettingsPtrOutputWithContext(context.Background())
}

func (i BrandingPoliciesHelpSettingsArgs) ToBrandingPoliciesHelpSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesHelpSettingsOutput).ToBrandingPoliciesHelpSettingsPtrOutputWithContext(ctx)
}

// BrandingPoliciesHelpSettingsPtrInput is an input type that accepts BrandingPoliciesHelpSettingsArgs, BrandingPoliciesHelpSettingsPtr and BrandingPoliciesHelpSettingsPtrOutput values.
// You can construct a concrete instance of `BrandingPoliciesHelpSettingsPtrInput` via:
//
//	        BrandingPoliciesHelpSettingsArgs{...}
//
//	or:
//
//	        nil
type BrandingPoliciesHelpSettingsPtrInput interface {
	pulumi.Input

	ToBrandingPoliciesHelpSettingsPtrOutput() BrandingPoliciesHelpSettingsPtrOutput
	ToBrandingPoliciesHelpSettingsPtrOutputWithContext(context.Context) BrandingPoliciesHelpSettingsPtrOutput
}

type brandingPoliciesHelpSettingsPtrType BrandingPoliciesHelpSettingsArgs

func BrandingPoliciesHelpSettingsPtr(v *BrandingPoliciesHelpSettingsArgs) BrandingPoliciesHelpSettingsPtrInput {
	return (*brandingPoliciesHelpSettingsPtrType)(v)
}

func (*brandingPoliciesHelpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesHelpSettings)(nil)).Elem()
}

func (i *brandingPoliciesHelpSettingsPtrType) ToBrandingPoliciesHelpSettingsPtrOutput() BrandingPoliciesHelpSettingsPtrOutput {
	return i.ToBrandingPoliciesHelpSettingsPtrOutputWithContext(context.Background())
}

func (i *brandingPoliciesHelpSettingsPtrType) ToBrandingPoliciesHelpSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingPoliciesHelpSettingsPtrOutput)
}

type BrandingPoliciesHelpSettingsOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesHelpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingPoliciesHelpSettings)(nil)).Elem()
}

func (o BrandingPoliciesHelpSettingsOutput) ToBrandingPoliciesHelpSettingsOutput() BrandingPoliciesHelpSettingsOutput {
	return o
}

func (o BrandingPoliciesHelpSettingsOutput) ToBrandingPoliciesHelpSettingsOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsOutput {
	return o
}

func (o BrandingPoliciesHelpSettingsOutput) ToBrandingPoliciesHelpSettingsPtrOutput() BrandingPoliciesHelpSettingsPtrOutput {
	return o.ToBrandingPoliciesHelpSettingsPtrOutputWithContext(context.Background())
}

func (o BrandingPoliciesHelpSettingsOutput) ToBrandingPoliciesHelpSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingPoliciesHelpSettings) *BrandingPoliciesHelpSettings {
		return &v
	}).(BrandingPoliciesHelpSettingsPtrOutput)
}

// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) ApiDocsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.ApiDocsSubtab }).(pulumi.StringPtrOutput)
}

// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
//
//	of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) CasesSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.CasesSubtab }).(pulumi.StringPtrOutput)
}

// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsOutput) CiscoMerakiProductDocumentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.CiscoMerakiProductDocumentation }).(pulumi.StringPtrOutput)
}

// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) CommunitySubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.CommunitySubtab }).(pulumi.StringPtrOutput)
}

// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
//
//	be audited. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) DataProtectionRequestsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.DataProtectionRequestsSubtab }).(pulumi.StringPtrOutput)
}

// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
//
//	listed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) FirewallInfoSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.FirewallInfoSubtab }).(pulumi.StringPtrOutput)
}

// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
//
//	that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
//	and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) GetHelpSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.GetHelpSubtab }).(pulumi.StringPtrOutput)
}

// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsOutput) GetHelpSubtabKnowledgeBaseSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.GetHelpSubtabKnowledgeBaseSearch }).(pulumi.StringPtrOutput)
}

// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) HardwareReplacementsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.HardwareReplacementsSubtab }).(pulumi.StringPtrOutput)
}

// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
//
//	customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) HelpTab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.HelpTab }).(pulumi.StringPtrOutput)
}

// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
//
//	and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) HelpWidget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.HelpWidget }).(pulumi.StringPtrOutput)
}

// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) NewFeaturesSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.NewFeaturesSubtab }).(pulumi.StringPtrOutput)
}

// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
//
//	organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) SmForums() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.SmForums }).(pulumi.StringPtrOutput)
}

// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsOutput) SupportContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.SupportContactInfo }).(pulumi.StringPtrOutput)
}

// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
//
//	whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsOutput) UniversalSearchKnowledgeBaseSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingPoliciesHelpSettings) *string { return v.UniversalSearchKnowledgeBaseSearch }).(pulumi.StringPtrOutput)
}

type BrandingPoliciesHelpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BrandingPoliciesHelpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingPoliciesHelpSettings)(nil)).Elem()
}

func (o BrandingPoliciesHelpSettingsPtrOutput) ToBrandingPoliciesHelpSettingsPtrOutput() BrandingPoliciesHelpSettingsPtrOutput {
	return o
}

func (o BrandingPoliciesHelpSettingsPtrOutput) ToBrandingPoliciesHelpSettingsPtrOutputWithContext(ctx context.Context) BrandingPoliciesHelpSettingsPtrOutput {
	return o
}

func (o BrandingPoliciesHelpSettingsPtrOutput) Elem() BrandingPoliciesHelpSettingsOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) BrandingPoliciesHelpSettings {
		if v != nil {
			return *v
		}
		var ret BrandingPoliciesHelpSettings
		return ret
	}).(BrandingPoliciesHelpSettingsOutput)
}

// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) ApiDocsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.ApiDocsSubtab
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
//
//	of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) CasesSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.CasesSubtab
	}).(pulumi.StringPtrOutput)
}

// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsPtrOutput) CiscoMerakiProductDocumentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.CiscoMerakiProductDocumentation
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) CommunitySubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.CommunitySubtab
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
//
//	be audited. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) DataProtectionRequestsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.DataProtectionRequestsSubtab
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
//
//	listed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) FirewallInfoSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.FirewallInfoSubtab
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
//
//	that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
//	and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) GetHelpSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.GetHelpSubtab
	}).(pulumi.StringPtrOutput)
}

// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsPtrOutput) GetHelpSubtabKnowledgeBaseSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.GetHelpSubtabKnowledgeBaseSearch
	}).(pulumi.StringPtrOutput)
}

// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) HardwareReplacementsSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.HardwareReplacementsSubtab
	}).(pulumi.StringPtrOutput)
}

// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
//
//	customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) HelpTab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.HelpTab
	}).(pulumi.StringPtrOutput)
}

// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
//
//	and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) HelpWidget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.HelpWidget
	}).(pulumi.StringPtrOutput)
}

// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) NewFeaturesSubtab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.NewFeaturesSubtab
	}).(pulumi.StringPtrOutput)
}

// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
//
//	organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) SmForums() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.SmForums
	}).(pulumi.StringPtrOutput)
}

// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o BrandingPoliciesHelpSettingsPtrOutput) SupportContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.SupportContactInfo
	}).(pulumi.StringPtrOutput)
}

// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
//
//	whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
func (o BrandingPoliciesHelpSettingsPtrOutput) UniversalSearchKnowledgeBaseSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingPoliciesHelpSettings) *string {
		if v == nil {
			return nil
		}
		return v.UniversalSearchKnowledgeBaseSearch
	}).(pulumi.StringPtrOutput)
}

type CameraCustomAnalyticsArtifactsStatus struct {
	// Status message
	Message *string `pulumi:"message"`
	// Status type
	Type *string `pulumi:"type"`
}

// CameraCustomAnalyticsArtifactsStatusInput is an input type that accepts CameraCustomAnalyticsArtifactsStatusArgs and CameraCustomAnalyticsArtifactsStatusOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsArtifactsStatusInput` via:
//
//	CameraCustomAnalyticsArtifactsStatusArgs{...}
type CameraCustomAnalyticsArtifactsStatusInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsArtifactsStatusOutput() CameraCustomAnalyticsArtifactsStatusOutput
	ToCameraCustomAnalyticsArtifactsStatusOutputWithContext(context.Context) CameraCustomAnalyticsArtifactsStatusOutput
}

type CameraCustomAnalyticsArtifactsStatusArgs struct {
	// Status message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Status type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CameraCustomAnalyticsArtifactsStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraCustomAnalyticsArtifactsStatus)(nil)).Elem()
}

func (i CameraCustomAnalyticsArtifactsStatusArgs) ToCameraCustomAnalyticsArtifactsStatusOutput() CameraCustomAnalyticsArtifactsStatusOutput {
	return i.ToCameraCustomAnalyticsArtifactsStatusOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsArtifactsStatusArgs) ToCameraCustomAnalyticsArtifactsStatusOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsStatusOutput)
}

func (i CameraCustomAnalyticsArtifactsStatusArgs) ToCameraCustomAnalyticsArtifactsStatusPtrOutput() CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return i.ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsArtifactsStatusArgs) ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsStatusOutput).ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(ctx)
}

// CameraCustomAnalyticsArtifactsStatusPtrInput is an input type that accepts CameraCustomAnalyticsArtifactsStatusArgs, CameraCustomAnalyticsArtifactsStatusPtr and CameraCustomAnalyticsArtifactsStatusPtrOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsArtifactsStatusPtrInput` via:
//
//	        CameraCustomAnalyticsArtifactsStatusArgs{...}
//
//	or:
//
//	        nil
type CameraCustomAnalyticsArtifactsStatusPtrInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsArtifactsStatusPtrOutput() CameraCustomAnalyticsArtifactsStatusPtrOutput
	ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(context.Context) CameraCustomAnalyticsArtifactsStatusPtrOutput
}

type cameraCustomAnalyticsArtifactsStatusPtrType CameraCustomAnalyticsArtifactsStatusArgs

func CameraCustomAnalyticsArtifactsStatusPtr(v *CameraCustomAnalyticsArtifactsStatusArgs) CameraCustomAnalyticsArtifactsStatusPtrInput {
	return (*cameraCustomAnalyticsArtifactsStatusPtrType)(v)
}

func (*cameraCustomAnalyticsArtifactsStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraCustomAnalyticsArtifactsStatus)(nil)).Elem()
}

func (i *cameraCustomAnalyticsArtifactsStatusPtrType) ToCameraCustomAnalyticsArtifactsStatusPtrOutput() CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return i.ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(context.Background())
}

func (i *cameraCustomAnalyticsArtifactsStatusPtrType) ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsArtifactsStatusPtrOutput)
}

type CameraCustomAnalyticsArtifactsStatusOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsArtifactsStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraCustomAnalyticsArtifactsStatus)(nil)).Elem()
}

func (o CameraCustomAnalyticsArtifactsStatusOutput) ToCameraCustomAnalyticsArtifactsStatusOutput() CameraCustomAnalyticsArtifactsStatusOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsStatusOutput) ToCameraCustomAnalyticsArtifactsStatusOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsStatusOutput) ToCameraCustomAnalyticsArtifactsStatusPtrOutput() CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return o.ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(context.Background())
}

func (o CameraCustomAnalyticsArtifactsStatusOutput) ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CameraCustomAnalyticsArtifactsStatus) *CameraCustomAnalyticsArtifactsStatus {
		return &v
	}).(CameraCustomAnalyticsArtifactsStatusPtrOutput)
}

// Status message
func (o CameraCustomAnalyticsArtifactsStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraCustomAnalyticsArtifactsStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Status type
func (o CameraCustomAnalyticsArtifactsStatusOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraCustomAnalyticsArtifactsStatus) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CameraCustomAnalyticsArtifactsStatusPtrOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsArtifactsStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraCustomAnalyticsArtifactsStatus)(nil)).Elem()
}

func (o CameraCustomAnalyticsArtifactsStatusPtrOutput) ToCameraCustomAnalyticsArtifactsStatusPtrOutput() CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsStatusPtrOutput) ToCameraCustomAnalyticsArtifactsStatusPtrOutputWithContext(ctx context.Context) CameraCustomAnalyticsArtifactsStatusPtrOutput {
	return o
}

func (o CameraCustomAnalyticsArtifactsStatusPtrOutput) Elem() CameraCustomAnalyticsArtifactsStatusOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifactsStatus) CameraCustomAnalyticsArtifactsStatus {
		if v != nil {
			return *v
		}
		var ret CameraCustomAnalyticsArtifactsStatus
		return ret
	}).(CameraCustomAnalyticsArtifactsStatusOutput)
}

// Status message
func (o CameraCustomAnalyticsArtifactsStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifactsStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Status type
func (o CameraCustomAnalyticsArtifactsStatusPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraCustomAnalyticsArtifactsStatus) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type CameraRolesAppliedOnDevice struct {
	// Device id.
	Id *string `pulumi:"id"`
	// Network id scope
	InNetworksWithId *string `pulumi:"inNetworksWithId"`
	// Network tag scope
	InNetworksWithTag *string `pulumi:"inNetworksWithTag"`
	PermissionLevel   *string `pulumi:"permissionLevel"`
	PermissionScope   *string `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId *string `pulumi:"permissionScopeId"`
	// Device tag.
	Tag *string `pulumi:"tag"`
}

// CameraRolesAppliedOnDeviceInput is an input type that accepts CameraRolesAppliedOnDeviceArgs and CameraRolesAppliedOnDeviceOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOnDeviceInput` via:
//
//	CameraRolesAppliedOnDeviceArgs{...}
type CameraRolesAppliedOnDeviceInput interface {
	pulumi.Input

	ToCameraRolesAppliedOnDeviceOutput() CameraRolesAppliedOnDeviceOutput
	ToCameraRolesAppliedOnDeviceOutputWithContext(context.Context) CameraRolesAppliedOnDeviceOutput
}

type CameraRolesAppliedOnDeviceArgs struct {
	// Device id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Network id scope
	InNetworksWithId pulumi.StringPtrInput `pulumi:"inNetworksWithId"`
	// Network tag scope
	InNetworksWithTag pulumi.StringPtrInput `pulumi:"inNetworksWithTag"`
	PermissionLevel   pulumi.StringPtrInput `pulumi:"permissionLevel"`
	PermissionScope   pulumi.StringPtrInput `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId pulumi.StringPtrInput `pulumi:"permissionScopeId"`
	// Device tag.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (CameraRolesAppliedOnDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOnDevice)(nil)).Elem()
}

func (i CameraRolesAppliedOnDeviceArgs) ToCameraRolesAppliedOnDeviceOutput() CameraRolesAppliedOnDeviceOutput {
	return i.ToCameraRolesAppliedOnDeviceOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOnDeviceArgs) ToCameraRolesAppliedOnDeviceOutputWithContext(ctx context.Context) CameraRolesAppliedOnDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOnDeviceOutput)
}

// CameraRolesAppliedOnDeviceArrayInput is an input type that accepts CameraRolesAppliedOnDeviceArray and CameraRolesAppliedOnDeviceArrayOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOnDeviceArrayInput` via:
//
//	CameraRolesAppliedOnDeviceArray{ CameraRolesAppliedOnDeviceArgs{...} }
type CameraRolesAppliedOnDeviceArrayInput interface {
	pulumi.Input

	ToCameraRolesAppliedOnDeviceArrayOutput() CameraRolesAppliedOnDeviceArrayOutput
	ToCameraRolesAppliedOnDeviceArrayOutputWithContext(context.Context) CameraRolesAppliedOnDeviceArrayOutput
}

type CameraRolesAppliedOnDeviceArray []CameraRolesAppliedOnDeviceInput

func (CameraRolesAppliedOnDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOnDevice)(nil)).Elem()
}

func (i CameraRolesAppliedOnDeviceArray) ToCameraRolesAppliedOnDeviceArrayOutput() CameraRolesAppliedOnDeviceArrayOutput {
	return i.ToCameraRolesAppliedOnDeviceArrayOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOnDeviceArray) ToCameraRolesAppliedOnDeviceArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOnDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOnDeviceArrayOutput)
}

type CameraRolesAppliedOnDeviceOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOnDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOnDevice)(nil)).Elem()
}

func (o CameraRolesAppliedOnDeviceOutput) ToCameraRolesAppliedOnDeviceOutput() CameraRolesAppliedOnDeviceOutput {
	return o
}

func (o CameraRolesAppliedOnDeviceOutput) ToCameraRolesAppliedOnDeviceOutputWithContext(ctx context.Context) CameraRolesAppliedOnDeviceOutput {
	return o
}

// Device id.
func (o CameraRolesAppliedOnDeviceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Network id scope
func (o CameraRolesAppliedOnDeviceOutput) InNetworksWithId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.InNetworksWithId }).(pulumi.StringPtrOutput)
}

// Network tag scope
func (o CameraRolesAppliedOnDeviceOutput) InNetworksWithTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.InNetworksWithTag }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOnDeviceOutput) PermissionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.PermissionLevel }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOnDeviceOutput) PermissionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.PermissionScope }).(pulumi.StringPtrOutput)
}

// Permission scope id
func (o CameraRolesAppliedOnDeviceOutput) PermissionScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.PermissionScopeId }).(pulumi.StringPtrOutput)
}

// Device tag.
func (o CameraRolesAppliedOnDeviceOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnDevice) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type CameraRolesAppliedOnDeviceArrayOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOnDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOnDevice)(nil)).Elem()
}

func (o CameraRolesAppliedOnDeviceArrayOutput) ToCameraRolesAppliedOnDeviceArrayOutput() CameraRolesAppliedOnDeviceArrayOutput {
	return o
}

func (o CameraRolesAppliedOnDeviceArrayOutput) ToCameraRolesAppliedOnDeviceArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOnDeviceArrayOutput {
	return o
}

func (o CameraRolesAppliedOnDeviceArrayOutput) Index(i pulumi.IntInput) CameraRolesAppliedOnDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CameraRolesAppliedOnDevice {
		return vs[0].([]CameraRolesAppliedOnDevice)[vs[1].(int)]
	}).(CameraRolesAppliedOnDeviceOutput)
}

type CameraRolesAppliedOnNetwork struct {
	// Network id.
	Id              *string `pulumi:"id"`
	PermissionLevel *string `pulumi:"permissionLevel"`
	PermissionScope *string `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId *string `pulumi:"permissionScopeId"`
	// Network tag
	Tag *string `pulumi:"tag"`
}

// CameraRolesAppliedOnNetworkInput is an input type that accepts CameraRolesAppliedOnNetworkArgs and CameraRolesAppliedOnNetworkOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOnNetworkInput` via:
//
//	CameraRolesAppliedOnNetworkArgs{...}
type CameraRolesAppliedOnNetworkInput interface {
	pulumi.Input

	ToCameraRolesAppliedOnNetworkOutput() CameraRolesAppliedOnNetworkOutput
	ToCameraRolesAppliedOnNetworkOutputWithContext(context.Context) CameraRolesAppliedOnNetworkOutput
}

type CameraRolesAppliedOnNetworkArgs struct {
	// Network id.
	Id              pulumi.StringPtrInput `pulumi:"id"`
	PermissionLevel pulumi.StringPtrInput `pulumi:"permissionLevel"`
	PermissionScope pulumi.StringPtrInput `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId pulumi.StringPtrInput `pulumi:"permissionScopeId"`
	// Network tag
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (CameraRolesAppliedOnNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOnNetwork)(nil)).Elem()
}

func (i CameraRolesAppliedOnNetworkArgs) ToCameraRolesAppliedOnNetworkOutput() CameraRolesAppliedOnNetworkOutput {
	return i.ToCameraRolesAppliedOnNetworkOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOnNetworkArgs) ToCameraRolesAppliedOnNetworkOutputWithContext(ctx context.Context) CameraRolesAppliedOnNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOnNetworkOutput)
}

// CameraRolesAppliedOnNetworkArrayInput is an input type that accepts CameraRolesAppliedOnNetworkArray and CameraRolesAppliedOnNetworkArrayOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOnNetworkArrayInput` via:
//
//	CameraRolesAppliedOnNetworkArray{ CameraRolesAppliedOnNetworkArgs{...} }
type CameraRolesAppliedOnNetworkArrayInput interface {
	pulumi.Input

	ToCameraRolesAppliedOnNetworkArrayOutput() CameraRolesAppliedOnNetworkArrayOutput
	ToCameraRolesAppliedOnNetworkArrayOutputWithContext(context.Context) CameraRolesAppliedOnNetworkArrayOutput
}

type CameraRolesAppliedOnNetworkArray []CameraRolesAppliedOnNetworkInput

func (CameraRolesAppliedOnNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOnNetwork)(nil)).Elem()
}

func (i CameraRolesAppliedOnNetworkArray) ToCameraRolesAppliedOnNetworkArrayOutput() CameraRolesAppliedOnNetworkArrayOutput {
	return i.ToCameraRolesAppliedOnNetworkArrayOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOnNetworkArray) ToCameraRolesAppliedOnNetworkArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOnNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOnNetworkArrayOutput)
}

type CameraRolesAppliedOnNetworkOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOnNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOnNetwork)(nil)).Elem()
}

func (o CameraRolesAppliedOnNetworkOutput) ToCameraRolesAppliedOnNetworkOutput() CameraRolesAppliedOnNetworkOutput {
	return o
}

func (o CameraRolesAppliedOnNetworkOutput) ToCameraRolesAppliedOnNetworkOutputWithContext(ctx context.Context) CameraRolesAppliedOnNetworkOutput {
	return o
}

// Network id.
func (o CameraRolesAppliedOnNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOnNetworkOutput) PermissionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnNetwork) *string { return v.PermissionLevel }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOnNetworkOutput) PermissionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnNetwork) *string { return v.PermissionScope }).(pulumi.StringPtrOutput)
}

// Permission scope id
func (o CameraRolesAppliedOnNetworkOutput) PermissionScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnNetwork) *string { return v.PermissionScopeId }).(pulumi.StringPtrOutput)
}

// Network tag
func (o CameraRolesAppliedOnNetworkOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOnNetwork) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type CameraRolesAppliedOnNetworkArrayOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOnNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOnNetwork)(nil)).Elem()
}

func (o CameraRolesAppliedOnNetworkArrayOutput) ToCameraRolesAppliedOnNetworkArrayOutput() CameraRolesAppliedOnNetworkArrayOutput {
	return o
}

func (o CameraRolesAppliedOnNetworkArrayOutput) ToCameraRolesAppliedOnNetworkArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOnNetworkArrayOutput {
	return o
}

func (o CameraRolesAppliedOnNetworkArrayOutput) Index(i pulumi.IntInput) CameraRolesAppliedOnNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CameraRolesAppliedOnNetwork {
		return vs[0].([]CameraRolesAppliedOnNetwork)[vs[1].(int)]
	}).(CameraRolesAppliedOnNetworkOutput)
}

type CameraRolesAppliedOrgWide struct {
	PermissionLevel *string `pulumi:"permissionLevel"`
	PermissionScope *string `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId *string `pulumi:"permissionScopeId"`
	Tag               *string `pulumi:"tag"`
}

// CameraRolesAppliedOrgWideInput is an input type that accepts CameraRolesAppliedOrgWideArgs and CameraRolesAppliedOrgWideOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOrgWideInput` via:
//
//	CameraRolesAppliedOrgWideArgs{...}
type CameraRolesAppliedOrgWideInput interface {
	pulumi.Input

	ToCameraRolesAppliedOrgWideOutput() CameraRolesAppliedOrgWideOutput
	ToCameraRolesAppliedOrgWideOutputWithContext(context.Context) CameraRolesAppliedOrgWideOutput
}

type CameraRolesAppliedOrgWideArgs struct {
	PermissionLevel pulumi.StringPtrInput `pulumi:"permissionLevel"`
	PermissionScope pulumi.StringPtrInput `pulumi:"permissionScope"`
	// Permission scope id
	PermissionScopeId pulumi.StringPtrInput `pulumi:"permissionScopeId"`
	Tag               pulumi.StringPtrInput `pulumi:"tag"`
}

func (CameraRolesAppliedOrgWideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOrgWide)(nil)).Elem()
}

func (i CameraRolesAppliedOrgWideArgs) ToCameraRolesAppliedOrgWideOutput() CameraRolesAppliedOrgWideOutput {
	return i.ToCameraRolesAppliedOrgWideOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOrgWideArgs) ToCameraRolesAppliedOrgWideOutputWithContext(ctx context.Context) CameraRolesAppliedOrgWideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOrgWideOutput)
}

// CameraRolesAppliedOrgWideArrayInput is an input type that accepts CameraRolesAppliedOrgWideArray and CameraRolesAppliedOrgWideArrayOutput values.
// You can construct a concrete instance of `CameraRolesAppliedOrgWideArrayInput` via:
//
//	CameraRolesAppliedOrgWideArray{ CameraRolesAppliedOrgWideArgs{...} }
type CameraRolesAppliedOrgWideArrayInput interface {
	pulumi.Input

	ToCameraRolesAppliedOrgWideArrayOutput() CameraRolesAppliedOrgWideArrayOutput
	ToCameraRolesAppliedOrgWideArrayOutputWithContext(context.Context) CameraRolesAppliedOrgWideArrayOutput
}

type CameraRolesAppliedOrgWideArray []CameraRolesAppliedOrgWideInput

func (CameraRolesAppliedOrgWideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOrgWide)(nil)).Elem()
}

func (i CameraRolesAppliedOrgWideArray) ToCameraRolesAppliedOrgWideArrayOutput() CameraRolesAppliedOrgWideArrayOutput {
	return i.ToCameraRolesAppliedOrgWideArrayOutputWithContext(context.Background())
}

func (i CameraRolesAppliedOrgWideArray) ToCameraRolesAppliedOrgWideArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOrgWideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraRolesAppliedOrgWideArrayOutput)
}

type CameraRolesAppliedOrgWideOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOrgWideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraRolesAppliedOrgWide)(nil)).Elem()
}

func (o CameraRolesAppliedOrgWideOutput) ToCameraRolesAppliedOrgWideOutput() CameraRolesAppliedOrgWideOutput {
	return o
}

func (o CameraRolesAppliedOrgWideOutput) ToCameraRolesAppliedOrgWideOutputWithContext(ctx context.Context) CameraRolesAppliedOrgWideOutput {
	return o
}

func (o CameraRolesAppliedOrgWideOutput) PermissionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOrgWide) *string { return v.PermissionLevel }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOrgWideOutput) PermissionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOrgWide) *string { return v.PermissionScope }).(pulumi.StringPtrOutput)
}

// Permission scope id
func (o CameraRolesAppliedOrgWideOutput) PermissionScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOrgWide) *string { return v.PermissionScopeId }).(pulumi.StringPtrOutput)
}

func (o CameraRolesAppliedOrgWideOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraRolesAppliedOrgWide) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type CameraRolesAppliedOrgWideArrayOutput struct{ *pulumi.OutputState }

func (CameraRolesAppliedOrgWideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraRolesAppliedOrgWide)(nil)).Elem()
}

func (o CameraRolesAppliedOrgWideArrayOutput) ToCameraRolesAppliedOrgWideArrayOutput() CameraRolesAppliedOrgWideArrayOutput {
	return o
}

func (o CameraRolesAppliedOrgWideArrayOutput) ToCameraRolesAppliedOrgWideArrayOutputWithContext(ctx context.Context) CameraRolesAppliedOrgWideArrayOutput {
	return o
}

func (o CameraRolesAppliedOrgWideArrayOutput) Index(i pulumi.IntInput) CameraRolesAppliedOrgWideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CameraRolesAppliedOrgWide {
		return vs[0].([]CameraRolesAppliedOrgWide)[vs[1].(int)]
	}).(CameraRolesAppliedOrgWideOutput)
}

type ClaimItem struct {
	// The licenses claimed
	Licenses []ClaimItemLicense `pulumi:"licenses"`
	// The numbers of the orders claimed
	Orders []string `pulumi:"orders"`
	// The serials of the devices claimed
	Serials []string `pulumi:"serials"`
}

// ClaimItemInput is an input type that accepts ClaimItemArgs and ClaimItemOutput values.
// You can construct a concrete instance of `ClaimItemInput` via:
//
//	ClaimItemArgs{...}
type ClaimItemInput interface {
	pulumi.Input

	ToClaimItemOutput() ClaimItemOutput
	ToClaimItemOutputWithContext(context.Context) ClaimItemOutput
}

type ClaimItemArgs struct {
	// The licenses claimed
	Licenses ClaimItemLicenseArrayInput `pulumi:"licenses"`
	// The numbers of the orders claimed
	Orders pulumi.StringArrayInput `pulumi:"orders"`
	// The serials of the devices claimed
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (ClaimItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimItem)(nil)).Elem()
}

func (i ClaimItemArgs) ToClaimItemOutput() ClaimItemOutput {
	return i.ToClaimItemOutputWithContext(context.Background())
}

func (i ClaimItemArgs) ToClaimItemOutputWithContext(ctx context.Context) ClaimItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimItemOutput)
}

func (i ClaimItemArgs) ToClaimItemPtrOutput() ClaimItemPtrOutput {
	return i.ToClaimItemPtrOutputWithContext(context.Background())
}

func (i ClaimItemArgs) ToClaimItemPtrOutputWithContext(ctx context.Context) ClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimItemOutput).ToClaimItemPtrOutputWithContext(ctx)
}

// ClaimItemPtrInput is an input type that accepts ClaimItemArgs, ClaimItemPtr and ClaimItemPtrOutput values.
// You can construct a concrete instance of `ClaimItemPtrInput` via:
//
//	        ClaimItemArgs{...}
//
//	or:
//
//	        nil
type ClaimItemPtrInput interface {
	pulumi.Input

	ToClaimItemPtrOutput() ClaimItemPtrOutput
	ToClaimItemPtrOutputWithContext(context.Context) ClaimItemPtrOutput
}

type claimItemPtrType ClaimItemArgs

func ClaimItemPtr(v *ClaimItemArgs) ClaimItemPtrInput {
	return (*claimItemPtrType)(v)
}

func (*claimItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClaimItem)(nil)).Elem()
}

func (i *claimItemPtrType) ToClaimItemPtrOutput() ClaimItemPtrOutput {
	return i.ToClaimItemPtrOutputWithContext(context.Background())
}

func (i *claimItemPtrType) ToClaimItemPtrOutputWithContext(ctx context.Context) ClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimItemPtrOutput)
}

type ClaimItemOutput struct{ *pulumi.OutputState }

func (ClaimItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimItem)(nil)).Elem()
}

func (o ClaimItemOutput) ToClaimItemOutput() ClaimItemOutput {
	return o
}

func (o ClaimItemOutput) ToClaimItemOutputWithContext(ctx context.Context) ClaimItemOutput {
	return o
}

func (o ClaimItemOutput) ToClaimItemPtrOutput() ClaimItemPtrOutput {
	return o.ToClaimItemPtrOutputWithContext(context.Background())
}

func (o ClaimItemOutput) ToClaimItemPtrOutputWithContext(ctx context.Context) ClaimItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClaimItem) *ClaimItem {
		return &v
	}).(ClaimItemPtrOutput)
}

// The licenses claimed
func (o ClaimItemOutput) Licenses() ClaimItemLicenseArrayOutput {
	return o.ApplyT(func(v ClaimItem) []ClaimItemLicense { return v.Licenses }).(ClaimItemLicenseArrayOutput)
}

// The numbers of the orders claimed
func (o ClaimItemOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClaimItem) []string { return v.Orders }).(pulumi.StringArrayOutput)
}

// The serials of the devices claimed
func (o ClaimItemOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClaimItem) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type ClaimItemPtrOutput struct{ *pulumi.OutputState }

func (ClaimItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClaimItem)(nil)).Elem()
}

func (o ClaimItemPtrOutput) ToClaimItemPtrOutput() ClaimItemPtrOutput {
	return o
}

func (o ClaimItemPtrOutput) ToClaimItemPtrOutputWithContext(ctx context.Context) ClaimItemPtrOutput {
	return o
}

func (o ClaimItemPtrOutput) Elem() ClaimItemOutput {
	return o.ApplyT(func(v *ClaimItem) ClaimItem {
		if v != nil {
			return *v
		}
		var ret ClaimItem
		return ret
	}).(ClaimItemOutput)
}

// The licenses claimed
func (o ClaimItemPtrOutput) Licenses() ClaimItemLicenseArrayOutput {
	return o.ApplyT(func(v *ClaimItem) []ClaimItemLicense {
		if v == nil {
			return nil
		}
		return v.Licenses
	}).(ClaimItemLicenseArrayOutput)
}

// The numbers of the orders claimed
func (o ClaimItemPtrOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClaimItem) []string {
		if v == nil {
			return nil
		}
		return v.Orders
	}).(pulumi.StringArrayOutput)
}

// The serials of the devices claimed
func (o ClaimItemPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClaimItem) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type ClaimItemLicense struct {
	// The key of the license
	Key *string `pulumi:"key"`
	// The mode of the license
	Mode *string `pulumi:"mode"`
}

// ClaimItemLicenseInput is an input type that accepts ClaimItemLicenseArgs and ClaimItemLicenseOutput values.
// You can construct a concrete instance of `ClaimItemLicenseInput` via:
//
//	ClaimItemLicenseArgs{...}
type ClaimItemLicenseInput interface {
	pulumi.Input

	ToClaimItemLicenseOutput() ClaimItemLicenseOutput
	ToClaimItemLicenseOutputWithContext(context.Context) ClaimItemLicenseOutput
}

type ClaimItemLicenseArgs struct {
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The mode of the license
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ClaimItemLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimItemLicense)(nil)).Elem()
}

func (i ClaimItemLicenseArgs) ToClaimItemLicenseOutput() ClaimItemLicenseOutput {
	return i.ToClaimItemLicenseOutputWithContext(context.Background())
}

func (i ClaimItemLicenseArgs) ToClaimItemLicenseOutputWithContext(ctx context.Context) ClaimItemLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimItemLicenseOutput)
}

// ClaimItemLicenseArrayInput is an input type that accepts ClaimItemLicenseArray and ClaimItemLicenseArrayOutput values.
// You can construct a concrete instance of `ClaimItemLicenseArrayInput` via:
//
//	ClaimItemLicenseArray{ ClaimItemLicenseArgs{...} }
type ClaimItemLicenseArrayInput interface {
	pulumi.Input

	ToClaimItemLicenseArrayOutput() ClaimItemLicenseArrayOutput
	ToClaimItemLicenseArrayOutputWithContext(context.Context) ClaimItemLicenseArrayOutput
}

type ClaimItemLicenseArray []ClaimItemLicenseInput

func (ClaimItemLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClaimItemLicense)(nil)).Elem()
}

func (i ClaimItemLicenseArray) ToClaimItemLicenseArrayOutput() ClaimItemLicenseArrayOutput {
	return i.ToClaimItemLicenseArrayOutputWithContext(context.Background())
}

func (i ClaimItemLicenseArray) ToClaimItemLicenseArrayOutputWithContext(ctx context.Context) ClaimItemLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimItemLicenseArrayOutput)
}

type ClaimItemLicenseOutput struct{ *pulumi.OutputState }

func (ClaimItemLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimItemLicense)(nil)).Elem()
}

func (o ClaimItemLicenseOutput) ToClaimItemLicenseOutput() ClaimItemLicenseOutput {
	return o
}

func (o ClaimItemLicenseOutput) ToClaimItemLicenseOutputWithContext(ctx context.Context) ClaimItemLicenseOutput {
	return o
}

// The key of the license
func (o ClaimItemLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClaimItemLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The mode of the license
func (o ClaimItemLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClaimItemLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ClaimItemLicenseArrayOutput struct{ *pulumi.OutputState }

func (ClaimItemLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClaimItemLicense)(nil)).Elem()
}

func (o ClaimItemLicenseArrayOutput) ToClaimItemLicenseArrayOutput() ClaimItemLicenseArrayOutput {
	return o
}

func (o ClaimItemLicenseArrayOutput) ToClaimItemLicenseArrayOutputWithContext(ctx context.Context) ClaimItemLicenseArrayOutput {
	return o
}

func (o ClaimItemLicenseArrayOutput) Index(i pulumi.IntInput) ClaimItemLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClaimItemLicense {
		return vs[0].([]ClaimItemLicense)[vs[1].(int)]
	}).(ClaimItemLicenseOutput)
}

type ClaimParameters struct {
	// The licenses that should be claimed
	Licenses []ClaimParametersLicense `pulumi:"licenses"`
	// The numbers of the orders that should be claimed
	Orders []string `pulumi:"orders"`
	// The serials of the devices that should be claimed
	Serials []string `pulumi:"serials"`
}

// ClaimParametersInput is an input type that accepts ClaimParametersArgs and ClaimParametersOutput values.
// You can construct a concrete instance of `ClaimParametersInput` via:
//
//	ClaimParametersArgs{...}
type ClaimParametersInput interface {
	pulumi.Input

	ToClaimParametersOutput() ClaimParametersOutput
	ToClaimParametersOutputWithContext(context.Context) ClaimParametersOutput
}

type ClaimParametersArgs struct {
	// The licenses that should be claimed
	Licenses ClaimParametersLicenseArrayInput `pulumi:"licenses"`
	// The numbers of the orders that should be claimed
	Orders pulumi.StringArrayInput `pulumi:"orders"`
	// The serials of the devices that should be claimed
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (ClaimParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimParameters)(nil)).Elem()
}

func (i ClaimParametersArgs) ToClaimParametersOutput() ClaimParametersOutput {
	return i.ToClaimParametersOutputWithContext(context.Background())
}

func (i ClaimParametersArgs) ToClaimParametersOutputWithContext(ctx context.Context) ClaimParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimParametersOutput)
}

func (i ClaimParametersArgs) ToClaimParametersPtrOutput() ClaimParametersPtrOutput {
	return i.ToClaimParametersPtrOutputWithContext(context.Background())
}

func (i ClaimParametersArgs) ToClaimParametersPtrOutputWithContext(ctx context.Context) ClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimParametersOutput).ToClaimParametersPtrOutputWithContext(ctx)
}

// ClaimParametersPtrInput is an input type that accepts ClaimParametersArgs, ClaimParametersPtr and ClaimParametersPtrOutput values.
// You can construct a concrete instance of `ClaimParametersPtrInput` via:
//
//	        ClaimParametersArgs{...}
//
//	or:
//
//	        nil
type ClaimParametersPtrInput interface {
	pulumi.Input

	ToClaimParametersPtrOutput() ClaimParametersPtrOutput
	ToClaimParametersPtrOutputWithContext(context.Context) ClaimParametersPtrOutput
}

type claimParametersPtrType ClaimParametersArgs

func ClaimParametersPtr(v *ClaimParametersArgs) ClaimParametersPtrInput {
	return (*claimParametersPtrType)(v)
}

func (*claimParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClaimParameters)(nil)).Elem()
}

func (i *claimParametersPtrType) ToClaimParametersPtrOutput() ClaimParametersPtrOutput {
	return i.ToClaimParametersPtrOutputWithContext(context.Background())
}

func (i *claimParametersPtrType) ToClaimParametersPtrOutputWithContext(ctx context.Context) ClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimParametersPtrOutput)
}

type ClaimParametersOutput struct{ *pulumi.OutputState }

func (ClaimParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimParameters)(nil)).Elem()
}

func (o ClaimParametersOutput) ToClaimParametersOutput() ClaimParametersOutput {
	return o
}

func (o ClaimParametersOutput) ToClaimParametersOutputWithContext(ctx context.Context) ClaimParametersOutput {
	return o
}

func (o ClaimParametersOutput) ToClaimParametersPtrOutput() ClaimParametersPtrOutput {
	return o.ToClaimParametersPtrOutputWithContext(context.Background())
}

func (o ClaimParametersOutput) ToClaimParametersPtrOutputWithContext(ctx context.Context) ClaimParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClaimParameters) *ClaimParameters {
		return &v
	}).(ClaimParametersPtrOutput)
}

// The licenses that should be claimed
func (o ClaimParametersOutput) Licenses() ClaimParametersLicenseArrayOutput {
	return o.ApplyT(func(v ClaimParameters) []ClaimParametersLicense { return v.Licenses }).(ClaimParametersLicenseArrayOutput)
}

// The numbers of the orders that should be claimed
func (o ClaimParametersOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClaimParameters) []string { return v.Orders }).(pulumi.StringArrayOutput)
}

// The serials of the devices that should be claimed
func (o ClaimParametersOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClaimParameters) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type ClaimParametersPtrOutput struct{ *pulumi.OutputState }

func (ClaimParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClaimParameters)(nil)).Elem()
}

func (o ClaimParametersPtrOutput) ToClaimParametersPtrOutput() ClaimParametersPtrOutput {
	return o
}

func (o ClaimParametersPtrOutput) ToClaimParametersPtrOutputWithContext(ctx context.Context) ClaimParametersPtrOutput {
	return o
}

func (o ClaimParametersPtrOutput) Elem() ClaimParametersOutput {
	return o.ApplyT(func(v *ClaimParameters) ClaimParameters {
		if v != nil {
			return *v
		}
		var ret ClaimParameters
		return ret
	}).(ClaimParametersOutput)
}

// The licenses that should be claimed
func (o ClaimParametersPtrOutput) Licenses() ClaimParametersLicenseArrayOutput {
	return o.ApplyT(func(v *ClaimParameters) []ClaimParametersLicense {
		if v == nil {
			return nil
		}
		return v.Licenses
	}).(ClaimParametersLicenseArrayOutput)
}

// The numbers of the orders that should be claimed
func (o ClaimParametersPtrOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClaimParameters) []string {
		if v == nil {
			return nil
		}
		return v.Orders
	}).(pulumi.StringArrayOutput)
}

// The serials of the devices that should be claimed
func (o ClaimParametersPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClaimParameters) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type ClaimParametersLicense struct {
	// The key of the license
	Key *string `pulumi:"key"`
	// Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. This parameter is legacy and does not apply to organizations with per-device licensing enabled.
	Mode *string `pulumi:"mode"`
}

// ClaimParametersLicenseInput is an input type that accepts ClaimParametersLicenseArgs and ClaimParametersLicenseOutput values.
// You can construct a concrete instance of `ClaimParametersLicenseInput` via:
//
//	ClaimParametersLicenseArgs{...}
type ClaimParametersLicenseInput interface {
	pulumi.Input

	ToClaimParametersLicenseOutput() ClaimParametersLicenseOutput
	ToClaimParametersLicenseOutputWithContext(context.Context) ClaimParametersLicenseOutput
}

type ClaimParametersLicenseArgs struct {
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. This parameter is legacy and does not apply to organizations with per-device licensing enabled.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ClaimParametersLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimParametersLicense)(nil)).Elem()
}

func (i ClaimParametersLicenseArgs) ToClaimParametersLicenseOutput() ClaimParametersLicenseOutput {
	return i.ToClaimParametersLicenseOutputWithContext(context.Background())
}

func (i ClaimParametersLicenseArgs) ToClaimParametersLicenseOutputWithContext(ctx context.Context) ClaimParametersLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimParametersLicenseOutput)
}

// ClaimParametersLicenseArrayInput is an input type that accepts ClaimParametersLicenseArray and ClaimParametersLicenseArrayOutput values.
// You can construct a concrete instance of `ClaimParametersLicenseArrayInput` via:
//
//	ClaimParametersLicenseArray{ ClaimParametersLicenseArgs{...} }
type ClaimParametersLicenseArrayInput interface {
	pulumi.Input

	ToClaimParametersLicenseArrayOutput() ClaimParametersLicenseArrayOutput
	ToClaimParametersLicenseArrayOutputWithContext(context.Context) ClaimParametersLicenseArrayOutput
}

type ClaimParametersLicenseArray []ClaimParametersLicenseInput

func (ClaimParametersLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClaimParametersLicense)(nil)).Elem()
}

func (i ClaimParametersLicenseArray) ToClaimParametersLicenseArrayOutput() ClaimParametersLicenseArrayOutput {
	return i.ToClaimParametersLicenseArrayOutputWithContext(context.Background())
}

func (i ClaimParametersLicenseArray) ToClaimParametersLicenseArrayOutputWithContext(ctx context.Context) ClaimParametersLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClaimParametersLicenseArrayOutput)
}

type ClaimParametersLicenseOutput struct{ *pulumi.OutputState }

func (ClaimParametersLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClaimParametersLicense)(nil)).Elem()
}

func (o ClaimParametersLicenseOutput) ToClaimParametersLicenseOutput() ClaimParametersLicenseOutput {
	return o
}

func (o ClaimParametersLicenseOutput) ToClaimParametersLicenseOutputWithContext(ctx context.Context) ClaimParametersLicenseOutput {
	return o
}

// The key of the license
func (o ClaimParametersLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClaimParametersLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. This parameter is legacy and does not apply to organizations with per-device licensing enabled.
func (o ClaimParametersLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClaimParametersLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ClaimParametersLicenseArrayOutput struct{ *pulumi.OutputState }

func (ClaimParametersLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClaimParametersLicense)(nil)).Elem()
}

func (o ClaimParametersLicenseArrayOutput) ToClaimParametersLicenseArrayOutput() ClaimParametersLicenseArrayOutput {
	return o
}

func (o ClaimParametersLicenseArrayOutput) ToClaimParametersLicenseArrayOutputWithContext(ctx context.Context) ClaimParametersLicenseArrayOutput {
	return o
}

func (o ClaimParametersLicenseArrayOutput) Index(i pulumi.IntInput) ClaimParametersLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClaimParametersLicense {
		return vs[0].([]ClaimParametersLicense)[vs[1].(int)]
	}).(ClaimParametersLicenseOutput)
}

type CloneItem struct {
	// API related settings
	Api *CloneItemApi `pulumi:"api"`
	// Data for this organization
	Cloud *CloneItemCloud `pulumi:"cloud"`
	// Organization ID
	Id *string `pulumi:"id"`
	// Licensing related settings
	Licensing *CloneItemLicensing `pulumi:"licensing"`
	// Information about the organization's management system
	Management *CloneItemManagement `pulumi:"management"`
	// Organization name
	Name *string `pulumi:"name"`
	// Organization URL
	Url *string `pulumi:"url"`
}

// CloneItemInput is an input type that accepts CloneItemArgs and CloneItemOutput values.
// You can construct a concrete instance of `CloneItemInput` via:
//
//	CloneItemArgs{...}
type CloneItemInput interface {
	pulumi.Input

	ToCloneItemOutput() CloneItemOutput
	ToCloneItemOutputWithContext(context.Context) CloneItemOutput
}

type CloneItemArgs struct {
	// API related settings
	Api CloneItemApiPtrInput `pulumi:"api"`
	// Data for this organization
	Cloud CloneItemCloudPtrInput `pulumi:"cloud"`
	// Organization ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Licensing related settings
	Licensing CloneItemLicensingPtrInput `pulumi:"licensing"`
	// Information about the organization's management system
	Management CloneItemManagementPtrInput `pulumi:"management"`
	// Organization name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Organization URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (CloneItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItem)(nil)).Elem()
}

func (i CloneItemArgs) ToCloneItemOutput() CloneItemOutput {
	return i.ToCloneItemOutputWithContext(context.Background())
}

func (i CloneItemArgs) ToCloneItemOutputWithContext(ctx context.Context) CloneItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemOutput)
}

func (i CloneItemArgs) ToCloneItemPtrOutput() CloneItemPtrOutput {
	return i.ToCloneItemPtrOutputWithContext(context.Background())
}

func (i CloneItemArgs) ToCloneItemPtrOutputWithContext(ctx context.Context) CloneItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemOutput).ToCloneItemPtrOutputWithContext(ctx)
}

// CloneItemPtrInput is an input type that accepts CloneItemArgs, CloneItemPtr and CloneItemPtrOutput values.
// You can construct a concrete instance of `CloneItemPtrInput` via:
//
//	        CloneItemArgs{...}
//
//	or:
//
//	        nil
type CloneItemPtrInput interface {
	pulumi.Input

	ToCloneItemPtrOutput() CloneItemPtrOutput
	ToCloneItemPtrOutputWithContext(context.Context) CloneItemPtrOutput
}

type cloneItemPtrType CloneItemArgs

func CloneItemPtr(v *CloneItemArgs) CloneItemPtrInput {
	return (*cloneItemPtrType)(v)
}

func (*cloneItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItem)(nil)).Elem()
}

func (i *cloneItemPtrType) ToCloneItemPtrOutput() CloneItemPtrOutput {
	return i.ToCloneItemPtrOutputWithContext(context.Background())
}

func (i *cloneItemPtrType) ToCloneItemPtrOutputWithContext(ctx context.Context) CloneItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemPtrOutput)
}

type CloneItemOutput struct{ *pulumi.OutputState }

func (CloneItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItem)(nil)).Elem()
}

func (o CloneItemOutput) ToCloneItemOutput() CloneItemOutput {
	return o
}

func (o CloneItemOutput) ToCloneItemOutputWithContext(ctx context.Context) CloneItemOutput {
	return o
}

func (o CloneItemOutput) ToCloneItemPtrOutput() CloneItemPtrOutput {
	return o.ToCloneItemPtrOutputWithContext(context.Background())
}

func (o CloneItemOutput) ToCloneItemPtrOutputWithContext(ctx context.Context) CloneItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItem) *CloneItem {
		return &v
	}).(CloneItemPtrOutput)
}

// API related settings
func (o CloneItemOutput) Api() CloneItemApiPtrOutput {
	return o.ApplyT(func(v CloneItem) *CloneItemApi { return v.Api }).(CloneItemApiPtrOutput)
}

// Data for this organization
func (o CloneItemOutput) Cloud() CloneItemCloudPtrOutput {
	return o.ApplyT(func(v CloneItem) *CloneItemCloud { return v.Cloud }).(CloneItemCloudPtrOutput)
}

// Organization ID
func (o CloneItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Licensing related settings
func (o CloneItemOutput) Licensing() CloneItemLicensingPtrOutput {
	return o.ApplyT(func(v CloneItem) *CloneItemLicensing { return v.Licensing }).(CloneItemLicensingPtrOutput)
}

// Information about the organization's management system
func (o CloneItemOutput) Management() CloneItemManagementPtrOutput {
	return o.ApplyT(func(v CloneItem) *CloneItemManagement { return v.Management }).(CloneItemManagementPtrOutput)
}

// Organization name
func (o CloneItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Organization URL
func (o CloneItemOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItem) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type CloneItemPtrOutput struct{ *pulumi.OutputState }

func (CloneItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItem)(nil)).Elem()
}

func (o CloneItemPtrOutput) ToCloneItemPtrOutput() CloneItemPtrOutput {
	return o
}

func (o CloneItemPtrOutput) ToCloneItemPtrOutputWithContext(ctx context.Context) CloneItemPtrOutput {
	return o
}

func (o CloneItemPtrOutput) Elem() CloneItemOutput {
	return o.ApplyT(func(v *CloneItem) CloneItem {
		if v != nil {
			return *v
		}
		var ret CloneItem
		return ret
	}).(CloneItemOutput)
}

// API related settings
func (o CloneItemPtrOutput) Api() CloneItemApiPtrOutput {
	return o.ApplyT(func(v *CloneItem) *CloneItemApi {
		if v == nil {
			return nil
		}
		return v.Api
	}).(CloneItemApiPtrOutput)
}

// Data for this organization
func (o CloneItemPtrOutput) Cloud() CloneItemCloudPtrOutput {
	return o.ApplyT(func(v *CloneItem) *CloneItemCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(CloneItemCloudPtrOutput)
}

// Organization ID
func (o CloneItemPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneItem) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Licensing related settings
func (o CloneItemPtrOutput) Licensing() CloneItemLicensingPtrOutput {
	return o.ApplyT(func(v *CloneItem) *CloneItemLicensing {
		if v == nil {
			return nil
		}
		return v.Licensing
	}).(CloneItemLicensingPtrOutput)
}

// Information about the organization's management system
func (o CloneItemPtrOutput) Management() CloneItemManagementPtrOutput {
	return o.ApplyT(func(v *CloneItem) *CloneItemManagement {
		if v == nil {
			return nil
		}
		return v.Management
	}).(CloneItemManagementPtrOutput)
}

// Organization name
func (o CloneItemPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneItem) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Organization URL
func (o CloneItemPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneItem) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type CloneItemApi struct {
	// Enable API access
	Enabled *bool `pulumi:"enabled"`
}

// CloneItemApiInput is an input type that accepts CloneItemApiArgs and CloneItemApiOutput values.
// You can construct a concrete instance of `CloneItemApiInput` via:
//
//	CloneItemApiArgs{...}
type CloneItemApiInput interface {
	pulumi.Input

	ToCloneItemApiOutput() CloneItemApiOutput
	ToCloneItemApiOutputWithContext(context.Context) CloneItemApiOutput
}

type CloneItemApiArgs struct {
	// Enable API access
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (CloneItemApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemApi)(nil)).Elem()
}

func (i CloneItemApiArgs) ToCloneItemApiOutput() CloneItemApiOutput {
	return i.ToCloneItemApiOutputWithContext(context.Background())
}

func (i CloneItemApiArgs) ToCloneItemApiOutputWithContext(ctx context.Context) CloneItemApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemApiOutput)
}

func (i CloneItemApiArgs) ToCloneItemApiPtrOutput() CloneItemApiPtrOutput {
	return i.ToCloneItemApiPtrOutputWithContext(context.Background())
}

func (i CloneItemApiArgs) ToCloneItemApiPtrOutputWithContext(ctx context.Context) CloneItemApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemApiOutput).ToCloneItemApiPtrOutputWithContext(ctx)
}

// CloneItemApiPtrInput is an input type that accepts CloneItemApiArgs, CloneItemApiPtr and CloneItemApiPtrOutput values.
// You can construct a concrete instance of `CloneItemApiPtrInput` via:
//
//	        CloneItemApiArgs{...}
//
//	or:
//
//	        nil
type CloneItemApiPtrInput interface {
	pulumi.Input

	ToCloneItemApiPtrOutput() CloneItemApiPtrOutput
	ToCloneItemApiPtrOutputWithContext(context.Context) CloneItemApiPtrOutput
}

type cloneItemApiPtrType CloneItemApiArgs

func CloneItemApiPtr(v *CloneItemApiArgs) CloneItemApiPtrInput {
	return (*cloneItemApiPtrType)(v)
}

func (*cloneItemApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemApi)(nil)).Elem()
}

func (i *cloneItemApiPtrType) ToCloneItemApiPtrOutput() CloneItemApiPtrOutput {
	return i.ToCloneItemApiPtrOutputWithContext(context.Background())
}

func (i *cloneItemApiPtrType) ToCloneItemApiPtrOutputWithContext(ctx context.Context) CloneItemApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemApiPtrOutput)
}

type CloneItemApiOutput struct{ *pulumi.OutputState }

func (CloneItemApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemApi)(nil)).Elem()
}

func (o CloneItemApiOutput) ToCloneItemApiOutput() CloneItemApiOutput {
	return o
}

func (o CloneItemApiOutput) ToCloneItemApiOutputWithContext(ctx context.Context) CloneItemApiOutput {
	return o
}

func (o CloneItemApiOutput) ToCloneItemApiPtrOutput() CloneItemApiPtrOutput {
	return o.ToCloneItemApiPtrOutputWithContext(context.Background())
}

func (o CloneItemApiOutput) ToCloneItemApiPtrOutputWithContext(ctx context.Context) CloneItemApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItemApi) *CloneItemApi {
		return &v
	}).(CloneItemApiPtrOutput)
}

// Enable API access
func (o CloneItemApiOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloneItemApi) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type CloneItemApiPtrOutput struct{ *pulumi.OutputState }

func (CloneItemApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemApi)(nil)).Elem()
}

func (o CloneItemApiPtrOutput) ToCloneItemApiPtrOutput() CloneItemApiPtrOutput {
	return o
}

func (o CloneItemApiPtrOutput) ToCloneItemApiPtrOutputWithContext(ctx context.Context) CloneItemApiPtrOutput {
	return o
}

func (o CloneItemApiPtrOutput) Elem() CloneItemApiOutput {
	return o.ApplyT(func(v *CloneItemApi) CloneItemApi {
		if v != nil {
			return *v
		}
		var ret CloneItemApi
		return ret
	}).(CloneItemApiOutput)
}

// Enable API access
func (o CloneItemApiPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloneItemApi) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type CloneItemCloud struct {
	// Region info
	Region *CloneItemCloudRegion `pulumi:"region"`
}

// CloneItemCloudInput is an input type that accepts CloneItemCloudArgs and CloneItemCloudOutput values.
// You can construct a concrete instance of `CloneItemCloudInput` via:
//
//	CloneItemCloudArgs{...}
type CloneItemCloudInput interface {
	pulumi.Input

	ToCloneItemCloudOutput() CloneItemCloudOutput
	ToCloneItemCloudOutputWithContext(context.Context) CloneItemCloudOutput
}

type CloneItemCloudArgs struct {
	// Region info
	Region CloneItemCloudRegionPtrInput `pulumi:"region"`
}

func (CloneItemCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemCloud)(nil)).Elem()
}

func (i CloneItemCloudArgs) ToCloneItemCloudOutput() CloneItemCloudOutput {
	return i.ToCloneItemCloudOutputWithContext(context.Background())
}

func (i CloneItemCloudArgs) ToCloneItemCloudOutputWithContext(ctx context.Context) CloneItemCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudOutput)
}

func (i CloneItemCloudArgs) ToCloneItemCloudPtrOutput() CloneItemCloudPtrOutput {
	return i.ToCloneItemCloudPtrOutputWithContext(context.Background())
}

func (i CloneItemCloudArgs) ToCloneItemCloudPtrOutputWithContext(ctx context.Context) CloneItemCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudOutput).ToCloneItemCloudPtrOutputWithContext(ctx)
}

// CloneItemCloudPtrInput is an input type that accepts CloneItemCloudArgs, CloneItemCloudPtr and CloneItemCloudPtrOutput values.
// You can construct a concrete instance of `CloneItemCloudPtrInput` via:
//
//	        CloneItemCloudArgs{...}
//
//	or:
//
//	        nil
type CloneItemCloudPtrInput interface {
	pulumi.Input

	ToCloneItemCloudPtrOutput() CloneItemCloudPtrOutput
	ToCloneItemCloudPtrOutputWithContext(context.Context) CloneItemCloudPtrOutput
}

type cloneItemCloudPtrType CloneItemCloudArgs

func CloneItemCloudPtr(v *CloneItemCloudArgs) CloneItemCloudPtrInput {
	return (*cloneItemCloudPtrType)(v)
}

func (*cloneItemCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemCloud)(nil)).Elem()
}

func (i *cloneItemCloudPtrType) ToCloneItemCloudPtrOutput() CloneItemCloudPtrOutput {
	return i.ToCloneItemCloudPtrOutputWithContext(context.Background())
}

func (i *cloneItemCloudPtrType) ToCloneItemCloudPtrOutputWithContext(ctx context.Context) CloneItemCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudPtrOutput)
}

type CloneItemCloudOutput struct{ *pulumi.OutputState }

func (CloneItemCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemCloud)(nil)).Elem()
}

func (o CloneItemCloudOutput) ToCloneItemCloudOutput() CloneItemCloudOutput {
	return o
}

func (o CloneItemCloudOutput) ToCloneItemCloudOutputWithContext(ctx context.Context) CloneItemCloudOutput {
	return o
}

func (o CloneItemCloudOutput) ToCloneItemCloudPtrOutput() CloneItemCloudPtrOutput {
	return o.ToCloneItemCloudPtrOutputWithContext(context.Background())
}

func (o CloneItemCloudOutput) ToCloneItemCloudPtrOutputWithContext(ctx context.Context) CloneItemCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItemCloud) *CloneItemCloud {
		return &v
	}).(CloneItemCloudPtrOutput)
}

// Region info
func (o CloneItemCloudOutput) Region() CloneItemCloudRegionPtrOutput {
	return o.ApplyT(func(v CloneItemCloud) *CloneItemCloudRegion { return v.Region }).(CloneItemCloudRegionPtrOutput)
}

type CloneItemCloudPtrOutput struct{ *pulumi.OutputState }

func (CloneItemCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemCloud)(nil)).Elem()
}

func (o CloneItemCloudPtrOutput) ToCloneItemCloudPtrOutput() CloneItemCloudPtrOutput {
	return o
}

func (o CloneItemCloudPtrOutput) ToCloneItemCloudPtrOutputWithContext(ctx context.Context) CloneItemCloudPtrOutput {
	return o
}

func (o CloneItemCloudPtrOutput) Elem() CloneItemCloudOutput {
	return o.ApplyT(func(v *CloneItemCloud) CloneItemCloud {
		if v != nil {
			return *v
		}
		var ret CloneItemCloud
		return ret
	}).(CloneItemCloudOutput)
}

// Region info
func (o CloneItemCloudPtrOutput) Region() CloneItemCloudRegionPtrOutput {
	return o.ApplyT(func(v *CloneItemCloud) *CloneItemCloudRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(CloneItemCloudRegionPtrOutput)
}

type CloneItemCloudRegion struct {
	// Name of region
	Name *string `pulumi:"name"`
}

// CloneItemCloudRegionInput is an input type that accepts CloneItemCloudRegionArgs and CloneItemCloudRegionOutput values.
// You can construct a concrete instance of `CloneItemCloudRegionInput` via:
//
//	CloneItemCloudRegionArgs{...}
type CloneItemCloudRegionInput interface {
	pulumi.Input

	ToCloneItemCloudRegionOutput() CloneItemCloudRegionOutput
	ToCloneItemCloudRegionOutputWithContext(context.Context) CloneItemCloudRegionOutput
}

type CloneItemCloudRegionArgs struct {
	// Name of region
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CloneItemCloudRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemCloudRegion)(nil)).Elem()
}

func (i CloneItemCloudRegionArgs) ToCloneItemCloudRegionOutput() CloneItemCloudRegionOutput {
	return i.ToCloneItemCloudRegionOutputWithContext(context.Background())
}

func (i CloneItemCloudRegionArgs) ToCloneItemCloudRegionOutputWithContext(ctx context.Context) CloneItemCloudRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudRegionOutput)
}

func (i CloneItemCloudRegionArgs) ToCloneItemCloudRegionPtrOutput() CloneItemCloudRegionPtrOutput {
	return i.ToCloneItemCloudRegionPtrOutputWithContext(context.Background())
}

func (i CloneItemCloudRegionArgs) ToCloneItemCloudRegionPtrOutputWithContext(ctx context.Context) CloneItemCloudRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudRegionOutput).ToCloneItemCloudRegionPtrOutputWithContext(ctx)
}

// CloneItemCloudRegionPtrInput is an input type that accepts CloneItemCloudRegionArgs, CloneItemCloudRegionPtr and CloneItemCloudRegionPtrOutput values.
// You can construct a concrete instance of `CloneItemCloudRegionPtrInput` via:
//
//	        CloneItemCloudRegionArgs{...}
//
//	or:
//
//	        nil
type CloneItemCloudRegionPtrInput interface {
	pulumi.Input

	ToCloneItemCloudRegionPtrOutput() CloneItemCloudRegionPtrOutput
	ToCloneItemCloudRegionPtrOutputWithContext(context.Context) CloneItemCloudRegionPtrOutput
}

type cloneItemCloudRegionPtrType CloneItemCloudRegionArgs

func CloneItemCloudRegionPtr(v *CloneItemCloudRegionArgs) CloneItemCloudRegionPtrInput {
	return (*cloneItemCloudRegionPtrType)(v)
}

func (*cloneItemCloudRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemCloudRegion)(nil)).Elem()
}

func (i *cloneItemCloudRegionPtrType) ToCloneItemCloudRegionPtrOutput() CloneItemCloudRegionPtrOutput {
	return i.ToCloneItemCloudRegionPtrOutputWithContext(context.Background())
}

func (i *cloneItemCloudRegionPtrType) ToCloneItemCloudRegionPtrOutputWithContext(ctx context.Context) CloneItemCloudRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemCloudRegionPtrOutput)
}

type CloneItemCloudRegionOutput struct{ *pulumi.OutputState }

func (CloneItemCloudRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemCloudRegion)(nil)).Elem()
}

func (o CloneItemCloudRegionOutput) ToCloneItemCloudRegionOutput() CloneItemCloudRegionOutput {
	return o
}

func (o CloneItemCloudRegionOutput) ToCloneItemCloudRegionOutputWithContext(ctx context.Context) CloneItemCloudRegionOutput {
	return o
}

func (o CloneItemCloudRegionOutput) ToCloneItemCloudRegionPtrOutput() CloneItemCloudRegionPtrOutput {
	return o.ToCloneItemCloudRegionPtrOutputWithContext(context.Background())
}

func (o CloneItemCloudRegionOutput) ToCloneItemCloudRegionPtrOutputWithContext(ctx context.Context) CloneItemCloudRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItemCloudRegion) *CloneItemCloudRegion {
		return &v
	}).(CloneItemCloudRegionPtrOutput)
}

// Name of region
func (o CloneItemCloudRegionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItemCloudRegion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CloneItemCloudRegionPtrOutput struct{ *pulumi.OutputState }

func (CloneItemCloudRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemCloudRegion)(nil)).Elem()
}

func (o CloneItemCloudRegionPtrOutput) ToCloneItemCloudRegionPtrOutput() CloneItemCloudRegionPtrOutput {
	return o
}

func (o CloneItemCloudRegionPtrOutput) ToCloneItemCloudRegionPtrOutputWithContext(ctx context.Context) CloneItemCloudRegionPtrOutput {
	return o
}

func (o CloneItemCloudRegionPtrOutput) Elem() CloneItemCloudRegionOutput {
	return o.ApplyT(func(v *CloneItemCloudRegion) CloneItemCloudRegion {
		if v != nil {
			return *v
		}
		var ret CloneItemCloudRegion
		return ret
	}).(CloneItemCloudRegionOutput)
}

// Name of region
func (o CloneItemCloudRegionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneItemCloudRegion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type CloneItemLicensing struct {
	// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
	Model *string `pulumi:"model"`
}

// CloneItemLicensingInput is an input type that accepts CloneItemLicensingArgs and CloneItemLicensingOutput values.
// You can construct a concrete instance of `CloneItemLicensingInput` via:
//
//	CloneItemLicensingArgs{...}
type CloneItemLicensingInput interface {
	pulumi.Input

	ToCloneItemLicensingOutput() CloneItemLicensingOutput
	ToCloneItemLicensingOutputWithContext(context.Context) CloneItemLicensingOutput
}

type CloneItemLicensingArgs struct {
	// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (CloneItemLicensingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemLicensing)(nil)).Elem()
}

func (i CloneItemLicensingArgs) ToCloneItemLicensingOutput() CloneItemLicensingOutput {
	return i.ToCloneItemLicensingOutputWithContext(context.Background())
}

func (i CloneItemLicensingArgs) ToCloneItemLicensingOutputWithContext(ctx context.Context) CloneItemLicensingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemLicensingOutput)
}

func (i CloneItemLicensingArgs) ToCloneItemLicensingPtrOutput() CloneItemLicensingPtrOutput {
	return i.ToCloneItemLicensingPtrOutputWithContext(context.Background())
}

func (i CloneItemLicensingArgs) ToCloneItemLicensingPtrOutputWithContext(ctx context.Context) CloneItemLicensingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemLicensingOutput).ToCloneItemLicensingPtrOutputWithContext(ctx)
}

// CloneItemLicensingPtrInput is an input type that accepts CloneItemLicensingArgs, CloneItemLicensingPtr and CloneItemLicensingPtrOutput values.
// You can construct a concrete instance of `CloneItemLicensingPtrInput` via:
//
//	        CloneItemLicensingArgs{...}
//
//	or:
//
//	        nil
type CloneItemLicensingPtrInput interface {
	pulumi.Input

	ToCloneItemLicensingPtrOutput() CloneItemLicensingPtrOutput
	ToCloneItemLicensingPtrOutputWithContext(context.Context) CloneItemLicensingPtrOutput
}

type cloneItemLicensingPtrType CloneItemLicensingArgs

func CloneItemLicensingPtr(v *CloneItemLicensingArgs) CloneItemLicensingPtrInput {
	return (*cloneItemLicensingPtrType)(v)
}

func (*cloneItemLicensingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemLicensing)(nil)).Elem()
}

func (i *cloneItemLicensingPtrType) ToCloneItemLicensingPtrOutput() CloneItemLicensingPtrOutput {
	return i.ToCloneItemLicensingPtrOutputWithContext(context.Background())
}

func (i *cloneItemLicensingPtrType) ToCloneItemLicensingPtrOutputWithContext(ctx context.Context) CloneItemLicensingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemLicensingPtrOutput)
}

type CloneItemLicensingOutput struct{ *pulumi.OutputState }

func (CloneItemLicensingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemLicensing)(nil)).Elem()
}

func (o CloneItemLicensingOutput) ToCloneItemLicensingOutput() CloneItemLicensingOutput {
	return o
}

func (o CloneItemLicensingOutput) ToCloneItemLicensingOutputWithContext(ctx context.Context) CloneItemLicensingOutput {
	return o
}

func (o CloneItemLicensingOutput) ToCloneItemLicensingPtrOutput() CloneItemLicensingPtrOutput {
	return o.ToCloneItemLicensingPtrOutputWithContext(context.Background())
}

func (o CloneItemLicensingOutput) ToCloneItemLicensingPtrOutputWithContext(ctx context.Context) CloneItemLicensingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItemLicensing) *CloneItemLicensing {
		return &v
	}).(CloneItemLicensingPtrOutput)
}

// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
func (o CloneItemLicensingOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItemLicensing) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type CloneItemLicensingPtrOutput struct{ *pulumi.OutputState }

func (CloneItemLicensingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemLicensing)(nil)).Elem()
}

func (o CloneItemLicensingPtrOutput) ToCloneItemLicensingPtrOutput() CloneItemLicensingPtrOutput {
	return o
}

func (o CloneItemLicensingPtrOutput) ToCloneItemLicensingPtrOutputWithContext(ctx context.Context) CloneItemLicensingPtrOutput {
	return o
}

func (o CloneItemLicensingPtrOutput) Elem() CloneItemLicensingOutput {
	return o.ApplyT(func(v *CloneItemLicensing) CloneItemLicensing {
		if v != nil {
			return *v
		}
		var ret CloneItemLicensing
		return ret
	}).(CloneItemLicensingOutput)
}

// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
func (o CloneItemLicensingPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneItemLicensing) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

type CloneItemManagement struct {
	// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
	Details []CloneItemManagementDetail `pulumi:"details"`
}

// CloneItemManagementInput is an input type that accepts CloneItemManagementArgs and CloneItemManagementOutput values.
// You can construct a concrete instance of `CloneItemManagementInput` via:
//
//	CloneItemManagementArgs{...}
type CloneItemManagementInput interface {
	pulumi.Input

	ToCloneItemManagementOutput() CloneItemManagementOutput
	ToCloneItemManagementOutputWithContext(context.Context) CloneItemManagementOutput
}

type CloneItemManagementArgs struct {
	// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
	Details CloneItemManagementDetailArrayInput `pulumi:"details"`
}

func (CloneItemManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemManagement)(nil)).Elem()
}

func (i CloneItemManagementArgs) ToCloneItemManagementOutput() CloneItemManagementOutput {
	return i.ToCloneItemManagementOutputWithContext(context.Background())
}

func (i CloneItemManagementArgs) ToCloneItemManagementOutputWithContext(ctx context.Context) CloneItemManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemManagementOutput)
}

func (i CloneItemManagementArgs) ToCloneItemManagementPtrOutput() CloneItemManagementPtrOutput {
	return i.ToCloneItemManagementPtrOutputWithContext(context.Background())
}

func (i CloneItemManagementArgs) ToCloneItemManagementPtrOutputWithContext(ctx context.Context) CloneItemManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemManagementOutput).ToCloneItemManagementPtrOutputWithContext(ctx)
}

// CloneItemManagementPtrInput is an input type that accepts CloneItemManagementArgs, CloneItemManagementPtr and CloneItemManagementPtrOutput values.
// You can construct a concrete instance of `CloneItemManagementPtrInput` via:
//
//	        CloneItemManagementArgs{...}
//
//	or:
//
//	        nil
type CloneItemManagementPtrInput interface {
	pulumi.Input

	ToCloneItemManagementPtrOutput() CloneItemManagementPtrOutput
	ToCloneItemManagementPtrOutputWithContext(context.Context) CloneItemManagementPtrOutput
}

type cloneItemManagementPtrType CloneItemManagementArgs

func CloneItemManagementPtr(v *CloneItemManagementArgs) CloneItemManagementPtrInput {
	return (*cloneItemManagementPtrType)(v)
}

func (*cloneItemManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemManagement)(nil)).Elem()
}

func (i *cloneItemManagementPtrType) ToCloneItemManagementPtrOutput() CloneItemManagementPtrOutput {
	return i.ToCloneItemManagementPtrOutputWithContext(context.Background())
}

func (i *cloneItemManagementPtrType) ToCloneItemManagementPtrOutputWithContext(ctx context.Context) CloneItemManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemManagementPtrOutput)
}

type CloneItemManagementOutput struct{ *pulumi.OutputState }

func (CloneItemManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemManagement)(nil)).Elem()
}

func (o CloneItemManagementOutput) ToCloneItemManagementOutput() CloneItemManagementOutput {
	return o
}

func (o CloneItemManagementOutput) ToCloneItemManagementOutputWithContext(ctx context.Context) CloneItemManagementOutput {
	return o
}

func (o CloneItemManagementOutput) ToCloneItemManagementPtrOutput() CloneItemManagementPtrOutput {
	return o.ToCloneItemManagementPtrOutputWithContext(context.Background())
}

func (o CloneItemManagementOutput) ToCloneItemManagementPtrOutputWithContext(ctx context.Context) CloneItemManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneItemManagement) *CloneItemManagement {
		return &v
	}).(CloneItemManagementPtrOutput)
}

// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
func (o CloneItemManagementOutput) Details() CloneItemManagementDetailArrayOutput {
	return o.ApplyT(func(v CloneItemManagement) []CloneItemManagementDetail { return v.Details }).(CloneItemManagementDetailArrayOutput)
}

type CloneItemManagementPtrOutput struct{ *pulumi.OutputState }

func (CloneItemManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneItemManagement)(nil)).Elem()
}

func (o CloneItemManagementPtrOutput) ToCloneItemManagementPtrOutput() CloneItemManagementPtrOutput {
	return o
}

func (o CloneItemManagementPtrOutput) ToCloneItemManagementPtrOutputWithContext(ctx context.Context) CloneItemManagementPtrOutput {
	return o
}

func (o CloneItemManagementPtrOutput) Elem() CloneItemManagementOutput {
	return o.ApplyT(func(v *CloneItemManagement) CloneItemManagement {
		if v != nil {
			return *v
		}
		var ret CloneItemManagement
		return ret
	}).(CloneItemManagementOutput)
}

// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
func (o CloneItemManagementPtrOutput) Details() CloneItemManagementDetailArrayOutput {
	return o.ApplyT(func(v *CloneItemManagement) []CloneItemManagementDetail {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloneItemManagementDetailArrayOutput)
}

type CloneItemManagementDetail struct {
	// Name of management data
	Name *string `pulumi:"name"`
	// Value of management data
	Value *string `pulumi:"value"`
}

// CloneItemManagementDetailInput is an input type that accepts CloneItemManagementDetailArgs and CloneItemManagementDetailOutput values.
// You can construct a concrete instance of `CloneItemManagementDetailInput` via:
//
//	CloneItemManagementDetailArgs{...}
type CloneItemManagementDetailInput interface {
	pulumi.Input

	ToCloneItemManagementDetailOutput() CloneItemManagementDetailOutput
	ToCloneItemManagementDetailOutputWithContext(context.Context) CloneItemManagementDetailOutput
}

type CloneItemManagementDetailArgs struct {
	// Name of management data
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of management data
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CloneItemManagementDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemManagementDetail)(nil)).Elem()
}

func (i CloneItemManagementDetailArgs) ToCloneItemManagementDetailOutput() CloneItemManagementDetailOutput {
	return i.ToCloneItemManagementDetailOutputWithContext(context.Background())
}

func (i CloneItemManagementDetailArgs) ToCloneItemManagementDetailOutputWithContext(ctx context.Context) CloneItemManagementDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemManagementDetailOutput)
}

// CloneItemManagementDetailArrayInput is an input type that accepts CloneItemManagementDetailArray and CloneItemManagementDetailArrayOutput values.
// You can construct a concrete instance of `CloneItemManagementDetailArrayInput` via:
//
//	CloneItemManagementDetailArray{ CloneItemManagementDetailArgs{...} }
type CloneItemManagementDetailArrayInput interface {
	pulumi.Input

	ToCloneItemManagementDetailArrayOutput() CloneItemManagementDetailArrayOutput
	ToCloneItemManagementDetailArrayOutputWithContext(context.Context) CloneItemManagementDetailArrayOutput
}

type CloneItemManagementDetailArray []CloneItemManagementDetailInput

func (CloneItemManagementDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloneItemManagementDetail)(nil)).Elem()
}

func (i CloneItemManagementDetailArray) ToCloneItemManagementDetailArrayOutput() CloneItemManagementDetailArrayOutput {
	return i.ToCloneItemManagementDetailArrayOutputWithContext(context.Background())
}

func (i CloneItemManagementDetailArray) ToCloneItemManagementDetailArrayOutputWithContext(ctx context.Context) CloneItemManagementDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneItemManagementDetailArrayOutput)
}

type CloneItemManagementDetailOutput struct{ *pulumi.OutputState }

func (CloneItemManagementDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneItemManagementDetail)(nil)).Elem()
}

func (o CloneItemManagementDetailOutput) ToCloneItemManagementDetailOutput() CloneItemManagementDetailOutput {
	return o
}

func (o CloneItemManagementDetailOutput) ToCloneItemManagementDetailOutputWithContext(ctx context.Context) CloneItemManagementDetailOutput {
	return o
}

// Name of management data
func (o CloneItemManagementDetailOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItemManagementDetail) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of management data
func (o CloneItemManagementDetailOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneItemManagementDetail) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CloneItemManagementDetailArrayOutput struct{ *pulumi.OutputState }

func (CloneItemManagementDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloneItemManagementDetail)(nil)).Elem()
}

func (o CloneItemManagementDetailArrayOutput) ToCloneItemManagementDetailArrayOutput() CloneItemManagementDetailArrayOutput {
	return o
}

func (o CloneItemManagementDetailArrayOutput) ToCloneItemManagementDetailArrayOutputWithContext(ctx context.Context) CloneItemManagementDetailArrayOutput {
	return o
}

func (o CloneItemManagementDetailArrayOutput) Index(i pulumi.IntInput) CloneItemManagementDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloneItemManagementDetail {
		return vs[0].([]CloneItemManagementDetail)[vs[1].(int)]
	}).(CloneItemManagementDetailOutput)
}

type CloneParameters struct {
	// The name of the new organization
	Name *string `pulumi:"name"`
}

// CloneParametersInput is an input type that accepts CloneParametersArgs and CloneParametersOutput values.
// You can construct a concrete instance of `CloneParametersInput` via:
//
//	CloneParametersArgs{...}
type CloneParametersInput interface {
	pulumi.Input

	ToCloneParametersOutput() CloneParametersOutput
	ToCloneParametersOutputWithContext(context.Context) CloneParametersOutput
}

type CloneParametersArgs struct {
	// The name of the new organization
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CloneParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneParameters)(nil)).Elem()
}

func (i CloneParametersArgs) ToCloneParametersOutput() CloneParametersOutput {
	return i.ToCloneParametersOutputWithContext(context.Background())
}

func (i CloneParametersArgs) ToCloneParametersOutputWithContext(ctx context.Context) CloneParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneParametersOutput)
}

func (i CloneParametersArgs) ToCloneParametersPtrOutput() CloneParametersPtrOutput {
	return i.ToCloneParametersPtrOutputWithContext(context.Background())
}

func (i CloneParametersArgs) ToCloneParametersPtrOutputWithContext(ctx context.Context) CloneParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneParametersOutput).ToCloneParametersPtrOutputWithContext(ctx)
}

// CloneParametersPtrInput is an input type that accepts CloneParametersArgs, CloneParametersPtr and CloneParametersPtrOutput values.
// You can construct a concrete instance of `CloneParametersPtrInput` via:
//
//	        CloneParametersArgs{...}
//
//	or:
//
//	        nil
type CloneParametersPtrInput interface {
	pulumi.Input

	ToCloneParametersPtrOutput() CloneParametersPtrOutput
	ToCloneParametersPtrOutputWithContext(context.Context) CloneParametersPtrOutput
}

type cloneParametersPtrType CloneParametersArgs

func CloneParametersPtr(v *CloneParametersArgs) CloneParametersPtrInput {
	return (*cloneParametersPtrType)(v)
}

func (*cloneParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneParameters)(nil)).Elem()
}

func (i *cloneParametersPtrType) ToCloneParametersPtrOutput() CloneParametersPtrOutput {
	return i.ToCloneParametersPtrOutputWithContext(context.Background())
}

func (i *cloneParametersPtrType) ToCloneParametersPtrOutputWithContext(ctx context.Context) CloneParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloneParametersPtrOutput)
}

type CloneParametersOutput struct{ *pulumi.OutputState }

func (CloneParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloneParameters)(nil)).Elem()
}

func (o CloneParametersOutput) ToCloneParametersOutput() CloneParametersOutput {
	return o
}

func (o CloneParametersOutput) ToCloneParametersOutputWithContext(ctx context.Context) CloneParametersOutput {
	return o
}

func (o CloneParametersOutput) ToCloneParametersPtrOutput() CloneParametersPtrOutput {
	return o.ToCloneParametersPtrOutputWithContext(context.Background())
}

func (o CloneParametersOutput) ToCloneParametersPtrOutputWithContext(ctx context.Context) CloneParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloneParameters) *CloneParameters {
		return &v
	}).(CloneParametersPtrOutput)
}

// The name of the new organization
func (o CloneParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloneParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CloneParametersPtrOutput struct{ *pulumi.OutputState }

func (CloneParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloneParameters)(nil)).Elem()
}

func (o CloneParametersPtrOutput) ToCloneParametersPtrOutput() CloneParametersPtrOutput {
	return o
}

func (o CloneParametersPtrOutput) ToCloneParametersPtrOutputWithContext(ctx context.Context) CloneParametersPtrOutput {
	return o
}

func (o CloneParametersPtrOutput) Elem() CloneParametersOutput {
	return o.ApplyT(func(v *CloneParameters) CloneParameters {
		if v != nil {
			return *v
		}
		var ret CloneParameters
		return ret
	}).(CloneParametersOutput)
}

// The name of the new organization
func (o CloneParametersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloneParameters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsMirror struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode *string `pulumi:"mode"`
}

// ConfigTemplatesSwitchProfilesPortsMirrorInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsMirrorArgs and ConfigTemplatesSwitchProfilesPortsMirrorOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsMirrorInput` via:
//
//	ConfigTemplatesSwitchProfilesPortsMirrorArgs{...}
type ConfigTemplatesSwitchProfilesPortsMirrorInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsMirrorOutput() ConfigTemplatesSwitchProfilesPortsMirrorOutput
	ToConfigTemplatesSwitchProfilesPortsMirrorOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsMirrorOutput
}

type ConfigTemplatesSwitchProfilesPortsMirrorArgs struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConfigTemplatesSwitchProfilesPortsMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsMirror)(nil)).Elem()
}

func (i ConfigTemplatesSwitchProfilesPortsMirrorArgs) ToConfigTemplatesSwitchProfilesPortsMirrorOutput() ConfigTemplatesSwitchProfilesPortsMirrorOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsMirrorOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsMirrorArgs) ToConfigTemplatesSwitchProfilesPortsMirrorOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsMirrorOutput)
}

func (i ConfigTemplatesSwitchProfilesPortsMirrorArgs) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutput() ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsMirrorArgs) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsMirrorOutput).ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(ctx)
}

// ConfigTemplatesSwitchProfilesPortsMirrorPtrInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsMirrorArgs, ConfigTemplatesSwitchProfilesPortsMirrorPtr and ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsMirrorPtrInput` via:
//
//	        ConfigTemplatesSwitchProfilesPortsMirrorArgs{...}
//
//	or:
//
//	        nil
type ConfigTemplatesSwitchProfilesPortsMirrorPtrInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutput() ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput
	ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput
}

type configTemplatesSwitchProfilesPortsMirrorPtrType ConfigTemplatesSwitchProfilesPortsMirrorArgs

func ConfigTemplatesSwitchProfilesPortsMirrorPtr(v *ConfigTemplatesSwitchProfilesPortsMirrorArgs) ConfigTemplatesSwitchProfilesPortsMirrorPtrInput {
	return (*configTemplatesSwitchProfilesPortsMirrorPtrType)(v)
}

func (*configTemplatesSwitchProfilesPortsMirrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsMirror)(nil)).Elem()
}

func (i *configTemplatesSwitchProfilesPortsMirrorPtrType) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutput() ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(context.Background())
}

func (i *configTemplatesSwitchProfilesPortsMirrorPtrType) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsMirrorOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsMirror)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorOutput) ToConfigTemplatesSwitchProfilesPortsMirrorOutput() ConfigTemplatesSwitchProfilesPortsMirrorOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorOutput) ToConfigTemplatesSwitchProfilesPortsMirrorOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorOutput) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutput() ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return o.ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(context.Background())
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorOutput) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigTemplatesSwitchProfilesPortsMirror) *ConfigTemplatesSwitchProfilesPortsMirror {
		return &v
	}).(ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput)
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o ConfigTemplatesSwitchProfilesPortsMirrorOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigTemplatesSwitchProfilesPortsMirror) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsMirror)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutput() ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput) ToConfigTemplatesSwitchProfilesPortsMirrorPtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput) Elem() ConfigTemplatesSwitchProfilesPortsMirrorOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsMirror) ConfigTemplatesSwitchProfilesPortsMirror {
		if v != nil {
			return *v
		}
		var ret ConfigTemplatesSwitchProfilesPortsMirror
		return ret
	}).(ConfigTemplatesSwitchProfilesPortsMirrorOutput)
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsMirror) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsModule struct {
	// The model of the expansion module.
	Model *string `pulumi:"model"`
}

// ConfigTemplatesSwitchProfilesPortsModuleInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsModuleArgs and ConfigTemplatesSwitchProfilesPortsModuleOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsModuleInput` via:
//
//	ConfigTemplatesSwitchProfilesPortsModuleArgs{...}
type ConfigTemplatesSwitchProfilesPortsModuleInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsModuleOutput() ConfigTemplatesSwitchProfilesPortsModuleOutput
	ToConfigTemplatesSwitchProfilesPortsModuleOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsModuleOutput
}

type ConfigTemplatesSwitchProfilesPortsModuleArgs struct {
	// The model of the expansion module.
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (ConfigTemplatesSwitchProfilesPortsModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsModule)(nil)).Elem()
}

func (i ConfigTemplatesSwitchProfilesPortsModuleArgs) ToConfigTemplatesSwitchProfilesPortsModuleOutput() ConfigTemplatesSwitchProfilesPortsModuleOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsModuleOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsModuleArgs) ToConfigTemplatesSwitchProfilesPortsModuleOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsModuleOutput)
}

func (i ConfigTemplatesSwitchProfilesPortsModuleArgs) ToConfigTemplatesSwitchProfilesPortsModulePtrOutput() ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsModuleArgs) ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsModuleOutput).ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(ctx)
}

// ConfigTemplatesSwitchProfilesPortsModulePtrInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsModuleArgs, ConfigTemplatesSwitchProfilesPortsModulePtr and ConfigTemplatesSwitchProfilesPortsModulePtrOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsModulePtrInput` via:
//
//	        ConfigTemplatesSwitchProfilesPortsModuleArgs{...}
//
//	or:
//
//	        nil
type ConfigTemplatesSwitchProfilesPortsModulePtrInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsModulePtrOutput() ConfigTemplatesSwitchProfilesPortsModulePtrOutput
	ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsModulePtrOutput
}

type configTemplatesSwitchProfilesPortsModulePtrType ConfigTemplatesSwitchProfilesPortsModuleArgs

func ConfigTemplatesSwitchProfilesPortsModulePtr(v *ConfigTemplatesSwitchProfilesPortsModuleArgs) ConfigTemplatesSwitchProfilesPortsModulePtrInput {
	return (*configTemplatesSwitchProfilesPortsModulePtrType)(v)
}

func (*configTemplatesSwitchProfilesPortsModulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsModule)(nil)).Elem()
}

func (i *configTemplatesSwitchProfilesPortsModulePtrType) ToConfigTemplatesSwitchProfilesPortsModulePtrOutput() ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(context.Background())
}

func (i *configTemplatesSwitchProfilesPortsModulePtrType) ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsModulePtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsModuleOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsModule)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsModuleOutput) ToConfigTemplatesSwitchProfilesPortsModuleOutput() ConfigTemplatesSwitchProfilesPortsModuleOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsModuleOutput) ToConfigTemplatesSwitchProfilesPortsModuleOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModuleOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsModuleOutput) ToConfigTemplatesSwitchProfilesPortsModulePtrOutput() ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return o.ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(context.Background())
}

func (o ConfigTemplatesSwitchProfilesPortsModuleOutput) ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigTemplatesSwitchProfilesPortsModule) *ConfigTemplatesSwitchProfilesPortsModule {
		return &v
	}).(ConfigTemplatesSwitchProfilesPortsModulePtrOutput)
}

// The model of the expansion module.
func (o ConfigTemplatesSwitchProfilesPortsModuleOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigTemplatesSwitchProfilesPortsModule) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsModulePtrOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsModulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsModule)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsModulePtrOutput) ToConfigTemplatesSwitchProfilesPortsModulePtrOutput() ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsModulePtrOutput) ToConfigTemplatesSwitchProfilesPortsModulePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsModulePtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsModulePtrOutput) Elem() ConfigTemplatesSwitchProfilesPortsModuleOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsModule) ConfigTemplatesSwitchProfilesPortsModule {
		if v != nil {
			return *v
		}
		var ret ConfigTemplatesSwitchProfilesPortsModule
		return ret
	}).(ConfigTemplatesSwitchProfilesPortsModuleOutput)
}

// The model of the expansion module.
func (o ConfigTemplatesSwitchProfilesPortsModulePtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsModule) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsProfile struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled *bool `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id *string `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname *string `pulumi:"iname"`
}

// ConfigTemplatesSwitchProfilesPortsProfileInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsProfileArgs and ConfigTemplatesSwitchProfilesPortsProfileOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsProfileInput` via:
//
//	ConfigTemplatesSwitchProfilesPortsProfileArgs{...}
type ConfigTemplatesSwitchProfilesPortsProfileInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsProfileOutput() ConfigTemplatesSwitchProfilesPortsProfileOutput
	ToConfigTemplatesSwitchProfilesPortsProfileOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsProfileOutput
}

type ConfigTemplatesSwitchProfilesPortsProfileArgs struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname pulumi.StringPtrInput `pulumi:"iname"`
}

func (ConfigTemplatesSwitchProfilesPortsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsProfile)(nil)).Elem()
}

func (i ConfigTemplatesSwitchProfilesPortsProfileArgs) ToConfigTemplatesSwitchProfilesPortsProfileOutput() ConfigTemplatesSwitchProfilesPortsProfileOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsProfileOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsProfileArgs) ToConfigTemplatesSwitchProfilesPortsProfileOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsProfileOutput)
}

func (i ConfigTemplatesSwitchProfilesPortsProfileArgs) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutput() ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(context.Background())
}

func (i ConfigTemplatesSwitchProfilesPortsProfileArgs) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsProfileOutput).ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(ctx)
}

// ConfigTemplatesSwitchProfilesPortsProfilePtrInput is an input type that accepts ConfigTemplatesSwitchProfilesPortsProfileArgs, ConfigTemplatesSwitchProfilesPortsProfilePtr and ConfigTemplatesSwitchProfilesPortsProfilePtrOutput values.
// You can construct a concrete instance of `ConfigTemplatesSwitchProfilesPortsProfilePtrInput` via:
//
//	        ConfigTemplatesSwitchProfilesPortsProfileArgs{...}
//
//	or:
//
//	        nil
type ConfigTemplatesSwitchProfilesPortsProfilePtrInput interface {
	pulumi.Input

	ToConfigTemplatesSwitchProfilesPortsProfilePtrOutput() ConfigTemplatesSwitchProfilesPortsProfilePtrOutput
	ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(context.Context) ConfigTemplatesSwitchProfilesPortsProfilePtrOutput
}

type configTemplatesSwitchProfilesPortsProfilePtrType ConfigTemplatesSwitchProfilesPortsProfileArgs

func ConfigTemplatesSwitchProfilesPortsProfilePtr(v *ConfigTemplatesSwitchProfilesPortsProfileArgs) ConfigTemplatesSwitchProfilesPortsProfilePtrInput {
	return (*configTemplatesSwitchProfilesPortsProfilePtrType)(v)
}

func (*configTemplatesSwitchProfilesPortsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsProfile)(nil)).Elem()
}

func (i *configTemplatesSwitchProfilesPortsProfilePtrType) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutput() ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return i.ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(context.Background())
}

func (i *configTemplatesSwitchProfilesPortsProfilePtrType) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatesSwitchProfilesPortsProfilePtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsProfileOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsProfile)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) ToConfigTemplatesSwitchProfilesPortsProfileOutput() ConfigTemplatesSwitchProfilesPortsProfileOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) ToConfigTemplatesSwitchProfilesPortsProfileOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfileOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutput() ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return o.ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(context.Background())
}

func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigTemplatesSwitchProfilesPortsProfile) *ConfigTemplatesSwitchProfilesPortsProfile {
		return &v
	}).(ConfigTemplatesSwitchProfilesPortsProfilePtrOutput)
}

// When enabled, override this port's configuration with a port profile.
func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigTemplatesSwitchProfilesPortsProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigTemplatesSwitchProfilesPortsProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// When enabled, the IName of the profile.
func (o ConfigTemplatesSwitchProfilesPortsProfileOutput) Iname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigTemplatesSwitchProfilesPortsProfile) *string { return v.Iname }).(pulumi.StringPtrOutput)
}

type ConfigTemplatesSwitchProfilesPortsProfilePtrOutput struct{ *pulumi.OutputState }

func (ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplatesSwitchProfilesPortsProfile)(nil)).Elem()
}

func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutput() ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) ToConfigTemplatesSwitchProfilesPortsProfilePtrOutputWithContext(ctx context.Context) ConfigTemplatesSwitchProfilesPortsProfilePtrOutput {
	return o
}

func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) Elem() ConfigTemplatesSwitchProfilesPortsProfileOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsProfile) ConfigTemplatesSwitchProfilesPortsProfile {
		if v != nil {
			return *v
		}
		var ret ConfigTemplatesSwitchProfilesPortsProfile
		return ret
	}).(ConfigTemplatesSwitchProfilesPortsProfileOutput)
}

// When enabled, override this port's configuration with a port profile.
func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// When enabled, the IName of the profile.
func (o ConfigTemplatesSwitchProfilesPortsProfilePtrOutput) Iname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigTemplatesSwitchProfilesPortsProfile) *string {
		if v == nil {
			return nil
		}
		return v.Iname
	}).(pulumi.StringPtrOutput)
}

type InventoryClaimItem struct {
	// The licenses claimed
	Licenses []InventoryClaimItemLicense `pulumi:"licenses"`
	// The numbers of the orders claimed
	Orders []string `pulumi:"orders"`
	// The serials of the devices claimed
	Serials []string `pulumi:"serials"`
}

// InventoryClaimItemInput is an input type that accepts InventoryClaimItemArgs and InventoryClaimItemOutput values.
// You can construct a concrete instance of `InventoryClaimItemInput` via:
//
//	InventoryClaimItemArgs{...}
type InventoryClaimItemInput interface {
	pulumi.Input

	ToInventoryClaimItemOutput() InventoryClaimItemOutput
	ToInventoryClaimItemOutputWithContext(context.Context) InventoryClaimItemOutput
}

type InventoryClaimItemArgs struct {
	// The licenses claimed
	Licenses InventoryClaimItemLicenseArrayInput `pulumi:"licenses"`
	// The numbers of the orders claimed
	Orders pulumi.StringArrayInput `pulumi:"orders"`
	// The serials of the devices claimed
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (InventoryClaimItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimItem)(nil)).Elem()
}

func (i InventoryClaimItemArgs) ToInventoryClaimItemOutput() InventoryClaimItemOutput {
	return i.ToInventoryClaimItemOutputWithContext(context.Background())
}

func (i InventoryClaimItemArgs) ToInventoryClaimItemOutputWithContext(ctx context.Context) InventoryClaimItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimItemOutput)
}

func (i InventoryClaimItemArgs) ToInventoryClaimItemPtrOutput() InventoryClaimItemPtrOutput {
	return i.ToInventoryClaimItemPtrOutputWithContext(context.Background())
}

func (i InventoryClaimItemArgs) ToInventoryClaimItemPtrOutputWithContext(ctx context.Context) InventoryClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimItemOutput).ToInventoryClaimItemPtrOutputWithContext(ctx)
}

// InventoryClaimItemPtrInput is an input type that accepts InventoryClaimItemArgs, InventoryClaimItemPtr and InventoryClaimItemPtrOutput values.
// You can construct a concrete instance of `InventoryClaimItemPtrInput` via:
//
//	        InventoryClaimItemArgs{...}
//
//	or:
//
//	        nil
type InventoryClaimItemPtrInput interface {
	pulumi.Input

	ToInventoryClaimItemPtrOutput() InventoryClaimItemPtrOutput
	ToInventoryClaimItemPtrOutputWithContext(context.Context) InventoryClaimItemPtrOutput
}

type inventoryClaimItemPtrType InventoryClaimItemArgs

func InventoryClaimItemPtr(v *InventoryClaimItemArgs) InventoryClaimItemPtrInput {
	return (*inventoryClaimItemPtrType)(v)
}

func (*inventoryClaimItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryClaimItem)(nil)).Elem()
}

func (i *inventoryClaimItemPtrType) ToInventoryClaimItemPtrOutput() InventoryClaimItemPtrOutput {
	return i.ToInventoryClaimItemPtrOutputWithContext(context.Background())
}

func (i *inventoryClaimItemPtrType) ToInventoryClaimItemPtrOutputWithContext(ctx context.Context) InventoryClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimItemPtrOutput)
}

type InventoryClaimItemOutput struct{ *pulumi.OutputState }

func (InventoryClaimItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimItem)(nil)).Elem()
}

func (o InventoryClaimItemOutput) ToInventoryClaimItemOutput() InventoryClaimItemOutput {
	return o
}

func (o InventoryClaimItemOutput) ToInventoryClaimItemOutputWithContext(ctx context.Context) InventoryClaimItemOutput {
	return o
}

func (o InventoryClaimItemOutput) ToInventoryClaimItemPtrOutput() InventoryClaimItemPtrOutput {
	return o.ToInventoryClaimItemPtrOutputWithContext(context.Background())
}

func (o InventoryClaimItemOutput) ToInventoryClaimItemPtrOutputWithContext(ctx context.Context) InventoryClaimItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryClaimItem) *InventoryClaimItem {
		return &v
	}).(InventoryClaimItemPtrOutput)
}

// The licenses claimed
func (o InventoryClaimItemOutput) Licenses() InventoryClaimItemLicenseArrayOutput {
	return o.ApplyT(func(v InventoryClaimItem) []InventoryClaimItemLicense { return v.Licenses }).(InventoryClaimItemLicenseArrayOutput)
}

// The numbers of the orders claimed
func (o InventoryClaimItemOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryClaimItem) []string { return v.Orders }).(pulumi.StringArrayOutput)
}

// The serials of the devices claimed
func (o InventoryClaimItemOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryClaimItem) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type InventoryClaimItemPtrOutput struct{ *pulumi.OutputState }

func (InventoryClaimItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryClaimItem)(nil)).Elem()
}

func (o InventoryClaimItemPtrOutput) ToInventoryClaimItemPtrOutput() InventoryClaimItemPtrOutput {
	return o
}

func (o InventoryClaimItemPtrOutput) ToInventoryClaimItemPtrOutputWithContext(ctx context.Context) InventoryClaimItemPtrOutput {
	return o
}

func (o InventoryClaimItemPtrOutput) Elem() InventoryClaimItemOutput {
	return o.ApplyT(func(v *InventoryClaimItem) InventoryClaimItem {
		if v != nil {
			return *v
		}
		var ret InventoryClaimItem
		return ret
	}).(InventoryClaimItemOutput)
}

// The licenses claimed
func (o InventoryClaimItemPtrOutput) Licenses() InventoryClaimItemLicenseArrayOutput {
	return o.ApplyT(func(v *InventoryClaimItem) []InventoryClaimItemLicense {
		if v == nil {
			return nil
		}
		return v.Licenses
	}).(InventoryClaimItemLicenseArrayOutput)
}

// The numbers of the orders claimed
func (o InventoryClaimItemPtrOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryClaimItem) []string {
		if v == nil {
			return nil
		}
		return v.Orders
	}).(pulumi.StringArrayOutput)
}

// The serials of the devices claimed
func (o InventoryClaimItemPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryClaimItem) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type InventoryClaimItemLicense struct {
	// The key of the license
	Key *string `pulumi:"key"`
	// The mode of the license
	Mode *string `pulumi:"mode"`
}

// InventoryClaimItemLicenseInput is an input type that accepts InventoryClaimItemLicenseArgs and InventoryClaimItemLicenseOutput values.
// You can construct a concrete instance of `InventoryClaimItemLicenseInput` via:
//
//	InventoryClaimItemLicenseArgs{...}
type InventoryClaimItemLicenseInput interface {
	pulumi.Input

	ToInventoryClaimItemLicenseOutput() InventoryClaimItemLicenseOutput
	ToInventoryClaimItemLicenseOutputWithContext(context.Context) InventoryClaimItemLicenseOutput
}

type InventoryClaimItemLicenseArgs struct {
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The mode of the license
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (InventoryClaimItemLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimItemLicense)(nil)).Elem()
}

func (i InventoryClaimItemLicenseArgs) ToInventoryClaimItemLicenseOutput() InventoryClaimItemLicenseOutput {
	return i.ToInventoryClaimItemLicenseOutputWithContext(context.Background())
}

func (i InventoryClaimItemLicenseArgs) ToInventoryClaimItemLicenseOutputWithContext(ctx context.Context) InventoryClaimItemLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimItemLicenseOutput)
}

// InventoryClaimItemLicenseArrayInput is an input type that accepts InventoryClaimItemLicenseArray and InventoryClaimItemLicenseArrayOutput values.
// You can construct a concrete instance of `InventoryClaimItemLicenseArrayInput` via:
//
//	InventoryClaimItemLicenseArray{ InventoryClaimItemLicenseArgs{...} }
type InventoryClaimItemLicenseArrayInput interface {
	pulumi.Input

	ToInventoryClaimItemLicenseArrayOutput() InventoryClaimItemLicenseArrayOutput
	ToInventoryClaimItemLicenseArrayOutputWithContext(context.Context) InventoryClaimItemLicenseArrayOutput
}

type InventoryClaimItemLicenseArray []InventoryClaimItemLicenseInput

func (InventoryClaimItemLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryClaimItemLicense)(nil)).Elem()
}

func (i InventoryClaimItemLicenseArray) ToInventoryClaimItemLicenseArrayOutput() InventoryClaimItemLicenseArrayOutput {
	return i.ToInventoryClaimItemLicenseArrayOutputWithContext(context.Background())
}

func (i InventoryClaimItemLicenseArray) ToInventoryClaimItemLicenseArrayOutputWithContext(ctx context.Context) InventoryClaimItemLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimItemLicenseArrayOutput)
}

type InventoryClaimItemLicenseOutput struct{ *pulumi.OutputState }

func (InventoryClaimItemLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimItemLicense)(nil)).Elem()
}

func (o InventoryClaimItemLicenseOutput) ToInventoryClaimItemLicenseOutput() InventoryClaimItemLicenseOutput {
	return o
}

func (o InventoryClaimItemLicenseOutput) ToInventoryClaimItemLicenseOutputWithContext(ctx context.Context) InventoryClaimItemLicenseOutput {
	return o
}

// The key of the license
func (o InventoryClaimItemLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryClaimItemLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The mode of the license
func (o InventoryClaimItemLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryClaimItemLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type InventoryClaimItemLicenseArrayOutput struct{ *pulumi.OutputState }

func (InventoryClaimItemLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryClaimItemLicense)(nil)).Elem()
}

func (o InventoryClaimItemLicenseArrayOutput) ToInventoryClaimItemLicenseArrayOutput() InventoryClaimItemLicenseArrayOutput {
	return o
}

func (o InventoryClaimItemLicenseArrayOutput) ToInventoryClaimItemLicenseArrayOutputWithContext(ctx context.Context) InventoryClaimItemLicenseArrayOutput {
	return o
}

func (o InventoryClaimItemLicenseArrayOutput) Index(i pulumi.IntInput) InventoryClaimItemLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryClaimItemLicense {
		return vs[0].([]InventoryClaimItemLicense)[vs[1].(int)]
	}).(InventoryClaimItemLicenseOutput)
}

type InventoryClaimParameters struct {
	// The licenses that should be claimed
	Licenses []InventoryClaimParametersLicense `pulumi:"licenses"`
	// The numbers of the orders that should be claimed
	Orders []string `pulumi:"orders"`
	// The serials of the devices that should be claimed
	Serials []string `pulumi:"serials"`
}

// InventoryClaimParametersInput is an input type that accepts InventoryClaimParametersArgs and InventoryClaimParametersOutput values.
// You can construct a concrete instance of `InventoryClaimParametersInput` via:
//
//	InventoryClaimParametersArgs{...}
type InventoryClaimParametersInput interface {
	pulumi.Input

	ToInventoryClaimParametersOutput() InventoryClaimParametersOutput
	ToInventoryClaimParametersOutputWithContext(context.Context) InventoryClaimParametersOutput
}

type InventoryClaimParametersArgs struct {
	// The licenses that should be claimed
	Licenses InventoryClaimParametersLicenseArrayInput `pulumi:"licenses"`
	// The numbers of the orders that should be claimed
	Orders pulumi.StringArrayInput `pulumi:"orders"`
	// The serials of the devices that should be claimed
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (InventoryClaimParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimParameters)(nil)).Elem()
}

func (i InventoryClaimParametersArgs) ToInventoryClaimParametersOutput() InventoryClaimParametersOutput {
	return i.ToInventoryClaimParametersOutputWithContext(context.Background())
}

func (i InventoryClaimParametersArgs) ToInventoryClaimParametersOutputWithContext(ctx context.Context) InventoryClaimParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimParametersOutput)
}

func (i InventoryClaimParametersArgs) ToInventoryClaimParametersPtrOutput() InventoryClaimParametersPtrOutput {
	return i.ToInventoryClaimParametersPtrOutputWithContext(context.Background())
}

func (i InventoryClaimParametersArgs) ToInventoryClaimParametersPtrOutputWithContext(ctx context.Context) InventoryClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimParametersOutput).ToInventoryClaimParametersPtrOutputWithContext(ctx)
}

// InventoryClaimParametersPtrInput is an input type that accepts InventoryClaimParametersArgs, InventoryClaimParametersPtr and InventoryClaimParametersPtrOutput values.
// You can construct a concrete instance of `InventoryClaimParametersPtrInput` via:
//
//	        InventoryClaimParametersArgs{...}
//
//	or:
//
//	        nil
type InventoryClaimParametersPtrInput interface {
	pulumi.Input

	ToInventoryClaimParametersPtrOutput() InventoryClaimParametersPtrOutput
	ToInventoryClaimParametersPtrOutputWithContext(context.Context) InventoryClaimParametersPtrOutput
}

type inventoryClaimParametersPtrType InventoryClaimParametersArgs

func InventoryClaimParametersPtr(v *InventoryClaimParametersArgs) InventoryClaimParametersPtrInput {
	return (*inventoryClaimParametersPtrType)(v)
}

func (*inventoryClaimParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryClaimParameters)(nil)).Elem()
}

func (i *inventoryClaimParametersPtrType) ToInventoryClaimParametersPtrOutput() InventoryClaimParametersPtrOutput {
	return i.ToInventoryClaimParametersPtrOutputWithContext(context.Background())
}

func (i *inventoryClaimParametersPtrType) ToInventoryClaimParametersPtrOutputWithContext(ctx context.Context) InventoryClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimParametersPtrOutput)
}

type InventoryClaimParametersOutput struct{ *pulumi.OutputState }

func (InventoryClaimParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimParameters)(nil)).Elem()
}

func (o InventoryClaimParametersOutput) ToInventoryClaimParametersOutput() InventoryClaimParametersOutput {
	return o
}

func (o InventoryClaimParametersOutput) ToInventoryClaimParametersOutputWithContext(ctx context.Context) InventoryClaimParametersOutput {
	return o
}

func (o InventoryClaimParametersOutput) ToInventoryClaimParametersPtrOutput() InventoryClaimParametersPtrOutput {
	return o.ToInventoryClaimParametersPtrOutputWithContext(context.Background())
}

func (o InventoryClaimParametersOutput) ToInventoryClaimParametersPtrOutputWithContext(ctx context.Context) InventoryClaimParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryClaimParameters) *InventoryClaimParameters {
		return &v
	}).(InventoryClaimParametersPtrOutput)
}

// The licenses that should be claimed
func (o InventoryClaimParametersOutput) Licenses() InventoryClaimParametersLicenseArrayOutput {
	return o.ApplyT(func(v InventoryClaimParameters) []InventoryClaimParametersLicense { return v.Licenses }).(InventoryClaimParametersLicenseArrayOutput)
}

// The numbers of the orders that should be claimed
func (o InventoryClaimParametersOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryClaimParameters) []string { return v.Orders }).(pulumi.StringArrayOutput)
}

// The serials of the devices that should be claimed
func (o InventoryClaimParametersOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryClaimParameters) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type InventoryClaimParametersPtrOutput struct{ *pulumi.OutputState }

func (InventoryClaimParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryClaimParameters)(nil)).Elem()
}

func (o InventoryClaimParametersPtrOutput) ToInventoryClaimParametersPtrOutput() InventoryClaimParametersPtrOutput {
	return o
}

func (o InventoryClaimParametersPtrOutput) ToInventoryClaimParametersPtrOutputWithContext(ctx context.Context) InventoryClaimParametersPtrOutput {
	return o
}

func (o InventoryClaimParametersPtrOutput) Elem() InventoryClaimParametersOutput {
	return o.ApplyT(func(v *InventoryClaimParameters) InventoryClaimParameters {
		if v != nil {
			return *v
		}
		var ret InventoryClaimParameters
		return ret
	}).(InventoryClaimParametersOutput)
}

// The licenses that should be claimed
func (o InventoryClaimParametersPtrOutput) Licenses() InventoryClaimParametersLicenseArrayOutput {
	return o.ApplyT(func(v *InventoryClaimParameters) []InventoryClaimParametersLicense {
		if v == nil {
			return nil
		}
		return v.Licenses
	}).(InventoryClaimParametersLicenseArrayOutput)
}

// The numbers of the orders that should be claimed
func (o InventoryClaimParametersPtrOutput) Orders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryClaimParameters) []string {
		if v == nil {
			return nil
		}
		return v.Orders
	}).(pulumi.StringArrayOutput)
}

// The serials of the devices that should be claimed
func (o InventoryClaimParametersPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryClaimParameters) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type InventoryClaimParametersLicense struct {
	// The key of the license
	Key *string `pulumi:"key"`
	// Co-term licensing only: either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. Does not apply to organizations using per-device licensing model.
	Mode *string `pulumi:"mode"`
}

// InventoryClaimParametersLicenseInput is an input type that accepts InventoryClaimParametersLicenseArgs and InventoryClaimParametersLicenseOutput values.
// You can construct a concrete instance of `InventoryClaimParametersLicenseInput` via:
//
//	InventoryClaimParametersLicenseArgs{...}
type InventoryClaimParametersLicenseInput interface {
	pulumi.Input

	ToInventoryClaimParametersLicenseOutput() InventoryClaimParametersLicenseOutput
	ToInventoryClaimParametersLicenseOutputWithContext(context.Context) InventoryClaimParametersLicenseOutput
}

type InventoryClaimParametersLicenseArgs struct {
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Co-term licensing only: either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. Does not apply to organizations using per-device licensing model.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (InventoryClaimParametersLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimParametersLicense)(nil)).Elem()
}

func (i InventoryClaimParametersLicenseArgs) ToInventoryClaimParametersLicenseOutput() InventoryClaimParametersLicenseOutput {
	return i.ToInventoryClaimParametersLicenseOutputWithContext(context.Background())
}

func (i InventoryClaimParametersLicenseArgs) ToInventoryClaimParametersLicenseOutputWithContext(ctx context.Context) InventoryClaimParametersLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimParametersLicenseOutput)
}

// InventoryClaimParametersLicenseArrayInput is an input type that accepts InventoryClaimParametersLicenseArray and InventoryClaimParametersLicenseArrayOutput values.
// You can construct a concrete instance of `InventoryClaimParametersLicenseArrayInput` via:
//
//	InventoryClaimParametersLicenseArray{ InventoryClaimParametersLicenseArgs{...} }
type InventoryClaimParametersLicenseArrayInput interface {
	pulumi.Input

	ToInventoryClaimParametersLicenseArrayOutput() InventoryClaimParametersLicenseArrayOutput
	ToInventoryClaimParametersLicenseArrayOutputWithContext(context.Context) InventoryClaimParametersLicenseArrayOutput
}

type InventoryClaimParametersLicenseArray []InventoryClaimParametersLicenseInput

func (InventoryClaimParametersLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryClaimParametersLicense)(nil)).Elem()
}

func (i InventoryClaimParametersLicenseArray) ToInventoryClaimParametersLicenseArrayOutput() InventoryClaimParametersLicenseArrayOutput {
	return i.ToInventoryClaimParametersLicenseArrayOutputWithContext(context.Background())
}

func (i InventoryClaimParametersLicenseArray) ToInventoryClaimParametersLicenseArrayOutputWithContext(ctx context.Context) InventoryClaimParametersLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryClaimParametersLicenseArrayOutput)
}

type InventoryClaimParametersLicenseOutput struct{ *pulumi.OutputState }

func (InventoryClaimParametersLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryClaimParametersLicense)(nil)).Elem()
}

func (o InventoryClaimParametersLicenseOutput) ToInventoryClaimParametersLicenseOutput() InventoryClaimParametersLicenseOutput {
	return o
}

func (o InventoryClaimParametersLicenseOutput) ToInventoryClaimParametersLicenseOutputWithContext(ctx context.Context) InventoryClaimParametersLicenseOutput {
	return o
}

// The key of the license
func (o InventoryClaimParametersLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryClaimParametersLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Co-term licensing only: either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. Does not apply to organizations using per-device licensing model.
func (o InventoryClaimParametersLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryClaimParametersLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type InventoryClaimParametersLicenseArrayOutput struct{ *pulumi.OutputState }

func (InventoryClaimParametersLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryClaimParametersLicense)(nil)).Elem()
}

func (o InventoryClaimParametersLicenseArrayOutput) ToInventoryClaimParametersLicenseArrayOutput() InventoryClaimParametersLicenseArrayOutput {
	return o
}

func (o InventoryClaimParametersLicenseArrayOutput) ToInventoryClaimParametersLicenseArrayOutputWithContext(ctx context.Context) InventoryClaimParametersLicenseArrayOutput {
	return o
}

func (o InventoryClaimParametersLicenseArrayOutput) Index(i pulumi.IntInput) InventoryClaimParametersLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryClaimParametersLicense {
		return vs[0].([]InventoryClaimParametersLicense)[vs[1].(int)]
	}).(InventoryClaimParametersLicenseOutput)
}

type InventoryOnboardingCloudMonitoringExportEventsParameters struct {
	// The type of log event this is recording, e.g. download or opening a banner
	LogEvent *string `pulumi:"logEvent"`
	// Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used
	Request *string `pulumi:"request"`
	// The name of the onboarding distro being downloaded
	TargetOs *string `pulumi:"targetOs"`
	// A JavaScript UTC datetime stamp for when the even occurred
	Timestamp *int `pulumi:"timestamp"`
}

// InventoryOnboardingCloudMonitoringExportEventsParametersInput is an input type that accepts InventoryOnboardingCloudMonitoringExportEventsParametersArgs and InventoryOnboardingCloudMonitoringExportEventsParametersOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringExportEventsParametersInput` via:
//
//	InventoryOnboardingCloudMonitoringExportEventsParametersArgs{...}
type InventoryOnboardingCloudMonitoringExportEventsParametersInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringExportEventsParametersOutput() InventoryOnboardingCloudMonitoringExportEventsParametersOutput
	ToInventoryOnboardingCloudMonitoringExportEventsParametersOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersOutput
}

type InventoryOnboardingCloudMonitoringExportEventsParametersArgs struct {
	// The type of log event this is recording, e.g. download or opening a banner
	LogEvent pulumi.StringPtrInput `pulumi:"logEvent"`
	// Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used
	Request pulumi.StringPtrInput `pulumi:"request"`
	// The name of the onboarding distro being downloaded
	TargetOs pulumi.StringPtrInput `pulumi:"targetOs"`
	// A JavaScript UTC datetime stamp for when the even occurred
	Timestamp pulumi.IntPtrInput `pulumi:"timestamp"`
}

func (InventoryOnboardingCloudMonitoringExportEventsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringExportEventsParameters)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringExportEventsParametersArgs) ToInventoryOnboardingCloudMonitoringExportEventsParametersOutput() InventoryOnboardingCloudMonitoringExportEventsParametersOutput {
	return i.ToInventoryOnboardingCloudMonitoringExportEventsParametersOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringExportEventsParametersArgs) ToInventoryOnboardingCloudMonitoringExportEventsParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringExportEventsParametersOutput)
}

func (i InventoryOnboardingCloudMonitoringExportEventsParametersArgs) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput() InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringExportEventsParametersArgs) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringExportEventsParametersOutput).ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringExportEventsParametersPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringExportEventsParametersArgs, InventoryOnboardingCloudMonitoringExportEventsParametersPtr and InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringExportEventsParametersPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringExportEventsParametersArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringExportEventsParametersPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput() InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput
	ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput
}

type inventoryOnboardingCloudMonitoringExportEventsParametersPtrType InventoryOnboardingCloudMonitoringExportEventsParametersArgs

func InventoryOnboardingCloudMonitoringExportEventsParametersPtr(v *InventoryOnboardingCloudMonitoringExportEventsParametersArgs) InventoryOnboardingCloudMonitoringExportEventsParametersPtrInput {
	return (*inventoryOnboardingCloudMonitoringExportEventsParametersPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringExportEventsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringExportEventsParameters)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringExportEventsParametersPtrType) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput() InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringExportEventsParametersPtrType) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput)
}

type InventoryOnboardingCloudMonitoringExportEventsParametersOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringExportEventsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringExportEventsParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersOutput() InventoryOnboardingCloudMonitoringExportEventsParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput() InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringExportEventsParameters) *InventoryOnboardingCloudMonitoringExportEventsParameters {
		return &v
	}).(InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput)
}

// The type of log event this is recording, e.g. download or opening a banner
func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) LogEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringExportEventsParameters) *string { return v.LogEvent }).(pulumi.StringPtrOutput)
}

// Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used
func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringExportEventsParameters) *string { return v.Request }).(pulumi.StringPtrOutput)
}

// The name of the onboarding distro being downloaded
func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) TargetOs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringExportEventsParameters) *string { return v.TargetOs }).(pulumi.StringPtrOutput)
}

// A JavaScript UTC datetime stamp for when the even occurred
func (o InventoryOnboardingCloudMonitoringExportEventsParametersOutput) Timestamp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringExportEventsParameters) *int { return v.Timestamp }).(pulumi.IntPtrOutput)
}

type InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringExportEventsParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput() InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) ToInventoryOnboardingCloudMonitoringExportEventsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) Elem() InventoryOnboardingCloudMonitoringExportEventsParametersOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringExportEventsParameters) InventoryOnboardingCloudMonitoringExportEventsParameters {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringExportEventsParameters
		return ret
	}).(InventoryOnboardingCloudMonitoringExportEventsParametersOutput)
}

// The type of log event this is recording, e.g. download or opening a banner
func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) LogEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringExportEventsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LogEvent
	}).(pulumi.StringPtrOutput)
}

// Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used
func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringExportEventsParameters) *string {
		if v == nil {
			return nil
		}
		return v.Request
	}).(pulumi.StringPtrOutput)
}

// The name of the onboarding distro being downloaded
func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) TargetOs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringExportEventsParameters) *string {
		if v == nil {
			return nil
		}
		return v.TargetOs
	}).(pulumi.StringPtrOutput)
}

// A JavaScript UTC datetime stamp for when the even occurred
func (o InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput) Timestamp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringExportEventsParameters) *int {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.IntPtrOutput)
}

type InventoryOnboardingCloudMonitoringImportsParameters struct {
	// A set of device imports to commit
	Devices []InventoryOnboardingCloudMonitoringImportsParametersDevice `pulumi:"devices"`
	Items   []InventoryOnboardingCloudMonitoringImportsParametersItem   `pulumi:"items"`
}

// InventoryOnboardingCloudMonitoringImportsParametersInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersArgs and InventoryOnboardingCloudMonitoringImportsParametersOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersArgs{...}
type InventoryOnboardingCloudMonitoringImportsParametersInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersOutput() InventoryOnboardingCloudMonitoringImportsParametersOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersArgs struct {
	// A set of device imports to commit
	Devices InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayInput `pulumi:"devices"`
	Items   InventoryOnboardingCloudMonitoringImportsParametersItemArrayInput   `pulumi:"items"`
}

func (InventoryOnboardingCloudMonitoringImportsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParameters)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersArgs) ToInventoryOnboardingCloudMonitoringImportsParametersOutput() InventoryOnboardingCloudMonitoringImportsParametersOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersArgs) ToInventoryOnboardingCloudMonitoringImportsParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersOutput)
}

func (i InventoryOnboardingCloudMonitoringImportsParametersArgs) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutput() InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersArgs) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersOutput).ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringImportsParametersPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersArgs, InventoryOnboardingCloudMonitoringImportsParametersPtr and InventoryOnboardingCloudMonitoringImportsParametersPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringImportsParametersArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringImportsParametersPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutput() InventoryOnboardingCloudMonitoringImportsParametersPtrOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersPtrOutput
}

type inventoryOnboardingCloudMonitoringImportsParametersPtrType InventoryOnboardingCloudMonitoringImportsParametersArgs

func InventoryOnboardingCloudMonitoringImportsParametersPtr(v *InventoryOnboardingCloudMonitoringImportsParametersArgs) InventoryOnboardingCloudMonitoringImportsParametersPtrInput {
	return (*inventoryOnboardingCloudMonitoringImportsParametersPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringImportsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringImportsParameters)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringImportsParametersPtrType) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutput() InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringImportsParametersPtrType) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersPtrOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) ToInventoryOnboardingCloudMonitoringImportsParametersOutput() InventoryOnboardingCloudMonitoringImportsParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) ToInventoryOnboardingCloudMonitoringImportsParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutput() InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringImportsParameters) *InventoryOnboardingCloudMonitoringImportsParameters {
		return &v
	}).(InventoryOnboardingCloudMonitoringImportsParametersPtrOutput)
}

// A set of device imports to commit
func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) Devices() InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParameters) []InventoryOnboardingCloudMonitoringImportsParametersDevice {
		return v.Devices
	}).(InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput)
}

func (o InventoryOnboardingCloudMonitoringImportsParametersOutput) Items() InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParameters) []InventoryOnboardingCloudMonitoringImportsParametersItem {
		return v.Items
	}).(InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringImportsParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutput() InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) ToInventoryOnboardingCloudMonitoringImportsParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) Elem() InventoryOnboardingCloudMonitoringImportsParametersOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringImportsParameters) InventoryOnboardingCloudMonitoringImportsParameters {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringImportsParameters
		return ret
	}).(InventoryOnboardingCloudMonitoringImportsParametersOutput)
}

// A set of device imports to commit
func (o InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) Devices() InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringImportsParameters) []InventoryOnboardingCloudMonitoringImportsParametersDevice {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput)
}

func (o InventoryOnboardingCloudMonitoringImportsParametersPtrOutput) Items() InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringImportsParameters) []InventoryOnboardingCloudMonitoringImportsParametersItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersDevice struct {
	// Import ID from the Import operation
	DeviceId *string `pulumi:"deviceId"`
	// Network Id
	NetworkId *string `pulumi:"networkId"`
	// Device UDI certificate
	Udi *string `pulumi:"udi"`
}

// InventoryOnboardingCloudMonitoringImportsParametersDeviceInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs and InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersDeviceInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs{...}
type InventoryOnboardingCloudMonitoringImportsParametersDeviceInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs struct {
	// Import ID from the Import operation
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// Network Id
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Device UDI certificate
	Udi pulumi.StringPtrInput `pulumi:"udi"`
}

func (InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersDevice)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput)
}

// InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersDeviceArray and InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersDeviceArray{ InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs{...} }
type InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersDeviceArray []InventoryOnboardingCloudMonitoringImportsParametersDeviceInput

func (InventoryOnboardingCloudMonitoringImportsParametersDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersDevice)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersDeviceArray) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersDeviceArray) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersDevice)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput {
	return o
}

// Import ID from the Import operation
func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersDevice) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// Network Id
func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersDevice) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Device UDI certificate
func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput) Udi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersDevice) *string { return v.Udi }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersDevice)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput) Index(i pulumi.IntInput) InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryOnboardingCloudMonitoringImportsParametersDevice {
		return vs[0].([]InventoryOnboardingCloudMonitoringImportsParametersDevice)[vs[1].(int)]
	}).(InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItem struct {
	// Array of ResponseOrganizationsCreateOrganizationInventoryOnboardingCloudMonitoringImport
	Items []InventoryOnboardingCloudMonitoringImportsParametersItemItem `pulumi:"items"`
}

// InventoryOnboardingCloudMonitoringImportsParametersItemInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersItemArgs and InventoryOnboardingCloudMonitoringImportsParametersItemOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersItemInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersItemArgs{...}
type InventoryOnboardingCloudMonitoringImportsParametersItemInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersItemOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersItemArgs struct {
	// Array of ResponseOrganizationsCreateOrganizationInventoryOnboardingCloudMonitoringImport
	Items InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayInput `pulumi:"items"`
}

func (InventoryOnboardingCloudMonitoringImportsParametersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemArgs) ToInventoryOnboardingCloudMonitoringImportsParametersItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersItemOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemArgs) ToInventoryOnboardingCloudMonitoringImportsParametersItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersItemOutput)
}

// InventoryOnboardingCloudMonitoringImportsParametersItemArrayInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersItemArray and InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersItemArrayInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersItemArray{ InventoryOnboardingCloudMonitoringImportsParametersItemArgs{...} }
type InventoryOnboardingCloudMonitoringImportsParametersItemArrayInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersItemArray []InventoryOnboardingCloudMonitoringImportsParametersItemInput

func (InventoryOnboardingCloudMonitoringImportsParametersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemArray) ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemArray) ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItemOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemOutput {
	return o
}

// Array of ResponseOrganizationsCreateOrganizationInventoryOnboardingCloudMonitoringImport
func (o InventoryOnboardingCloudMonitoringImportsParametersItemOutput) Items() InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersItem) []InventoryOnboardingCloudMonitoringImportsParametersItemItem {
		return v.Items
	}).(InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput) Index(i pulumi.IntInput) InventoryOnboardingCloudMonitoringImportsParametersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryOnboardingCloudMonitoringImportsParametersItem {
		return vs[0].([]InventoryOnboardingCloudMonitoringImportsParametersItem)[vs[1].(int)]
	}).(InventoryOnboardingCloudMonitoringImportsParametersItemOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItemItem struct {
	// Unique id associated with the import of the device
	ImportId *string `pulumi:"importId"`
	// Response method
	Message *string `pulumi:"message"`
	// Cloud monitor import status
	Status *string `pulumi:"status"`
}

// InventoryOnboardingCloudMonitoringImportsParametersItemItemInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs and InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersItemItemInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs{...}
type InventoryOnboardingCloudMonitoringImportsParametersItemItemInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs struct {
	// Unique id associated with the import of the device
	ImportId pulumi.StringPtrInput `pulumi:"importId"`
	// Response method
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Cloud monitor import status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput)
}

// InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayInput is an input type that accepts InventoryOnboardingCloudMonitoringImportsParametersItemItemArray and InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayInput` via:
//
//	InventoryOnboardingCloudMonitoringImportsParametersItemItemArray{ InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs{...} }
type InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput
	ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput
}

type InventoryOnboardingCloudMonitoringImportsParametersItemItemArray []InventoryOnboardingCloudMonitoringImportsParametersItemItemInput

func (InventoryOnboardingCloudMonitoringImportsParametersItemItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersItemItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemItemArray) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput {
	return i.ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringImportsParametersItemItemArray) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput {
	return o
}

// Unique id associated with the import of the device
func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) ImportId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersItemItem) *string { return v.ImportId }).(pulumi.StringPtrOutput)
}

// Response method
func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersItemItem) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Cloud monitor import status
func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringImportsParametersItemItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringImportsParametersItemItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput() InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput) ToInventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput) Index(i pulumi.IntInput) InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryOnboardingCloudMonitoringImportsParametersItemItem {
		return vs[0].([]InventoryOnboardingCloudMonitoringImportsParametersItemItem)[vs[1].(int)]
	}).(InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItem struct {
	// Params used in order to connect to the device
	ConfigParams *InventoryOnboardingCloudMonitoringPrepareItemConfigParams `pulumi:"configParams"`
	// Import ID from the Import operation
	DeviceId *string `pulumi:"deviceId"`
	// Message related to whether or not the device was found and can be imported.
	Message *string `pulumi:"message"`
	// The import status of the device
	Status *string `pulumi:"status"`
	// Device UDI certificate
	Udi *string `pulumi:"udi"`
}

// InventoryOnboardingCloudMonitoringPrepareItemInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemArgs and InventoryOnboardingCloudMonitoringPrepareItemOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemOutput() InventoryOnboardingCloudMonitoringPrepareItemOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemArgs struct {
	// Params used in order to connect to the device
	ConfigParams InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput `pulumi:"configParams"`
	// Import ID from the Import operation
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// Message related to whether or not the device was found and can be imported.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The import status of the device
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Device UDI certificate
	Udi pulumi.StringPtrInput `pulumi:"udi"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemArgs) ToInventoryOnboardingCloudMonitoringPrepareItemOutput() InventoryOnboardingCloudMonitoringPrepareItemOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemArgs) ToInventoryOnboardingCloudMonitoringPrepareItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemOutput)
}

// InventoryOnboardingCloudMonitoringPrepareItemArrayInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemArray and InventoryOnboardingCloudMonitoringPrepareItemArrayOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemArrayInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemArray{ InventoryOnboardingCloudMonitoringPrepareItemArgs{...} }
type InventoryOnboardingCloudMonitoringPrepareItemArrayInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutput() InventoryOnboardingCloudMonitoringPrepareItemArrayOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemArrayOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemArray []InventoryOnboardingCloudMonitoringPrepareItemInput

func (InventoryOnboardingCloudMonitoringPrepareItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringPrepareItem)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemArray) ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutput() InventoryOnboardingCloudMonitoringPrepareItemArrayOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemArray) ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemArrayOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) ToInventoryOnboardingCloudMonitoringPrepareItemOutput() InventoryOnboardingCloudMonitoringPrepareItemOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) ToInventoryOnboardingCloudMonitoringPrepareItemOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemOutput {
	return o
}

// Params used in order to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) ConfigParams() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItem) *InventoryOnboardingCloudMonitoringPrepareItemConfigParams {
		return v.ConfigParams
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput)
}

// Import ID from the Import operation
func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItem) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// Message related to whether or not the device was found and can be imported.
func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItem) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The import status of the device
func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Device UDI certificate
func (o InventoryOnboardingCloudMonitoringPrepareItemOutput) Udi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItem) *string { return v.Udi }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemArrayOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringPrepareItem)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemArrayOutput) ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutput() InventoryOnboardingCloudMonitoringPrepareItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemArrayOutput) ToInventoryOnboardingCloudMonitoringPrepareItemArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemArrayOutput) Index(i pulumi.IntInput) InventoryOnboardingCloudMonitoringPrepareItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryOnboardingCloudMonitoringPrepareItem {
		return vs[0].([]InventoryOnboardingCloudMonitoringPrepareItem)[vs[1].(int)]
	}).(InventoryOnboardingCloudMonitoringPrepareItemOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParams struct {
	// Static IP Address used to connect to the device
	CloudStaticIp *string `pulumi:"cloudStaticIp"`
	// Configuration options used to connect to the device
	Tunnel *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel `pulumi:"tunnel"`
	// User credentials used to connect to the device
	User *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser `pulumi:"user"`
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs struct {
	// Static IP Address used to connect to the device
	CloudStaticIp pulumi.StringPtrInput `pulumi:"cloudStaticIp"`
	// Configuration options used to connect to the device
	Tunnel InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput `pulumi:"tunnel"`
	// User credentials used to connect to the device
	User InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput `pulumi:"user"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParams)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput).ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs, InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtr and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrType InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs

func InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtr(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParams)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParams)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *InventoryOnboardingCloudMonitoringPrepareItemConfigParams {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput)
}

// Static IP Address used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) CloudStaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *string { return v.CloudStaticIp }).(pulumi.StringPtrOutput)
}

// Configuration options used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) Tunnel() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel {
		return v.Tunnel
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput)
}

// User credentials used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput) User() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser {
		return v.User
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParams)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParams) InventoryOnboardingCloudMonitoringPrepareItemConfigParams {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareItemConfigParams
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput)
}

// Static IP Address used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) CloudStaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *string {
		if v == nil {
			return nil
		}
		return v.CloudStaticIp
	}).(pulumi.StringPtrOutput)
}

// Configuration options used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) Tunnel() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel {
		if v == nil {
			return nil
		}
		return v.Tunnel
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput)
}

// User credentials used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput) User() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParams) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser {
		if v == nil {
			return nil
		}
		return v.User
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel struct {
	// SSH tunnel URL used to connect to the device
	Host *string `pulumi:"host"`
	Mode *string `pulumi:"mode"`
	// The name of the tunnel we are attempting to connect to
	Name *string `pulumi:"name"`
	// The port used for the ssh tunnel.
	Port *string `pulumi:"port"`
	// Root certificate information
	RootCertificate *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate `pulumi:"rootCertificate"`
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs struct {
	// SSH tunnel URL used to connect to the device
	Host pulumi.StringPtrInput `pulumi:"host"`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The name of the tunnel we are attempting to connect to
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port used for the ssh tunnel.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Root certificate information
	RootCertificate InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput `pulumi:"rootCertificate"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput).ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs, InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtr and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrType InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs

func InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtr(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput)
}

// SSH tunnel URL used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the tunnel we are attempting to connect to
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port used for the ssh tunnel.
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Root certificate information
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput) RootCertificate() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate {
		return v.RootCertificate
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput)
}

// SSH tunnel URL used to connect to the device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The name of the tunnel we are attempting to connect to
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The port used for the ssh tunnel.
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Root certificate information
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput) RootCertificate() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnel) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate {
		if v == nil {
			return nil
		}
		return v.RootCertificate
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate struct {
	// Public certificate value
	Content *string `pulumi:"content"`
	// The name of the server protected by the certificate
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs struct {
	// Public certificate value
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The name of the server protected by the certificate
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput).ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs, InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtr and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrType InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs

func InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtr(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput)
}

// Public certificate value
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) *string {
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The name of the server protected by the certificate
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput)
}

// Public certificate value
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The name of the server protected by the certificate
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser struct {
	// The public key for the registered user
	PublicKey *string `pulumi:"publicKey"`
	// Stores the user secret hash
	Secret *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret `pulumi:"secret"`
	// The username added to Catalyst device
	Username *string `pulumi:"username"`
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs struct {
	// The public key for the registered user
	PublicKey pulumi.StringPtrInput `pulumi:"publicKey"`
	// Stores the user secret hash
	Secret InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput `pulumi:"secret"`
	// The username added to Catalyst device
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput).ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs, InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtr and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrType InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs

func InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtr(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput)
}

// The public key for the registered user
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

// Stores the user secret hash
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) Secret() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret {
		return v.Secret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput)
}

// The username added to Catalyst device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput)
}

// The public key for the registered user
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

// Stores the user secret hash
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) Secret() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput)
}

// The username added to Catalyst device
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUser) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret struct {
	// The hashed secret
	Hash *string `pulumi:"hash"`
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs{...}
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs struct {
	// The hashed secret
	Hash pulumi.StringPtrInput `pulumi:"hash"`
}

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput).ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs, InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtr and InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrType InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs

func InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtr(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrType) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret) *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput)
}

// The hashed secret
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput) Hash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret) *string { return v.Hash }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret) InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput)
}

// The hashed secret
func (o InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput) Hash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.Hash
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParameters struct {
	// A set of devices to import (or update)
	Devices []InventoryOnboardingCloudMonitoringPrepareParametersDevice `pulumi:"devices"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersArgs and InventoryOnboardingCloudMonitoringPrepareParametersOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersOutput() InventoryOnboardingCloudMonitoringPrepareParametersOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersArgs struct {
	// A set of devices to import (or update)
	Devices InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayInput `pulumi:"devices"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParameters)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersOutput() InventoryOnboardingCloudMonitoringPrepareParametersOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersArgs, InventoryOnboardingCloudMonitoringPrepareParametersPtr and InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersPtrType InventoryOnboardingCloudMonitoringPrepareParametersArgs

func InventoryOnboardingCloudMonitoringPrepareParametersPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersArgs) InventoryOnboardingCloudMonitoringPrepareParametersPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParameters)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersOutput() InventoryOnboardingCloudMonitoringPrepareParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParameters) *InventoryOnboardingCloudMonitoringPrepareParameters {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput)
}

// A set of devices to import (or update)
func (o InventoryOnboardingCloudMonitoringPrepareParametersOutput) Devices() InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParameters) []InventoryOnboardingCloudMonitoringPrepareParametersDevice {
		return v.Devices
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParameters)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParameters) InventoryOnboardingCloudMonitoringPrepareParameters {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParameters
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersOutput)
}

// A set of devices to import (or update)
func (o InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput) Devices() InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParameters) []InventoryOnboardingCloudMonitoringPrepareParametersDevice {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDevice struct {
	// Device SUDI certificate
	Sudi *string `pulumi:"sudi"`
	// TLS Related Parameters
	Tunnel *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel `pulumi:"tunnel"`
	// User parameters
	User *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser `pulumi:"user"`
	// VTY Related Parameters
	Vty *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty `pulumi:"vty"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs struct {
	// Device SUDI certificate
	Sudi pulumi.StringPtrInput `pulumi:"sudi"`
	// TLS Related Parameters
	Tunnel InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput `pulumi:"tunnel"`
	// User parameters
	User InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput `pulumi:"user"`
	// VTY Related Parameters
	Vty InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput `pulumi:"vty"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDevice)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray and InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray{ InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs{...} }
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray []InventoryOnboardingCloudMonitoringPrepareParametersDeviceInput

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringPrepareParametersDevice)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDevice)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput {
	return o
}

// Device SUDI certificate
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) Sudi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDevice) *string { return v.Sudi }).(pulumi.StringPtrOutput)
}

// TLS Related Parameters
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) Tunnel() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDevice) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel {
		return v.Tunnel
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput)
}

// User parameters
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) User() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDevice) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser {
		return v.User
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput)
}

// VTY Related Parameters
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput) Vty() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDevice) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty {
		return v.Vty
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InventoryOnboardingCloudMonitoringPrepareParametersDevice)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput) Index(i pulumi.IntInput) InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InventoryOnboardingCloudMonitoringPrepareParametersDevice {
		return vs[0].([]InventoryOnboardingCloudMonitoringPrepareParametersDevice)[vs[1].(int)]
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel struct {
	// Name of the configured TLS certificate
	CertificateName *string `pulumi:"certificateName"`
	// Number of the vlan expected to be used to connect to the cloud
	LocalInterface *int `pulumi:"localInterface"`
	// Number of the configured Loopback Interface used for TLS overlay
	LoopbackNumber *int `pulumi:"loopbackNumber"`
	// Name of the configured TLS tunnel
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs struct {
	// Name of the configured TLS certificate
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// Number of the vlan expected to be used to connect to the cloud
	LocalInterface pulumi.IntPtrInput `pulumi:"localInterface"`
	// Number of the configured Loopback Interface used for TLS overlay
	LoopbackNumber pulumi.IntPtrInput `pulumi:"loopbackNumber"`
	// Name of the configured TLS tunnel
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput)
}

// Name of the configured TLS certificate
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *string {
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Number of the vlan expected to be used to connect to the cloud
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) LocalInterface() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *int { return v.LocalInterface }).(pulumi.IntPtrOutput)
}

// Number of the configured Loopback Interface used for TLS overlay
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) LoopbackNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *int { return v.LoopbackNumber }).(pulumi.IntPtrOutput)
}

// Name of the configured TLS tunnel
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput)
}

// Name of the configured TLS certificate
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *string {
		if v == nil {
			return nil
		}
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Number of the vlan expected to be used to connect to the cloud
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) LocalInterface() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *int {
		if v == nil {
			return nil
		}
		return v.LocalInterface
	}).(pulumi.IntPtrOutput)
}

// Number of the configured Loopback Interface used for TLS overlay
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) LoopbackNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *int {
		if v == nil {
			return nil
		}
		return v.LoopbackNumber
	}).(pulumi.IntPtrOutput)
}

// Name of the configured TLS tunnel
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser struct {
	// The name of the device user for Meraki monitoring
	Username *string `pulumi:"username"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs struct {
	// The name of the device user for Meraki monitoring
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput)
}

// The name of the device user for Meraki monitoring
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser) InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput)
}

// The name of the device user for Meraki monitoring
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceUser) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty struct {
	// AccessList details
	AccessList *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList `pulumi:"accessList"`
	// VTY AAA authentication
	Authentication *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication `pulumi:"authentication"`
	// VTY AAA authorization
	Authorization *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization `pulumi:"authorization"`
	// Ending line VTY number
	EndLineNumber *int `pulumi:"endLineNumber"`
	// SSH rotary number
	RotaryNumber *int `pulumi:"rotaryNumber"`
	// Starting line VTY number
	StartLineNumber *int `pulumi:"startLineNumber"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs struct {
	// AccessList details
	AccessList InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput `pulumi:"accessList"`
	// VTY AAA authentication
	Authentication InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput `pulumi:"authentication"`
	// VTY AAA authorization
	Authorization InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput `pulumi:"authorization"`
	// Ending line VTY number
	EndLineNumber pulumi.IntPtrInput `pulumi:"endLineNumber"`
	// SSH rotary number
	RotaryNumber pulumi.IntPtrInput `pulumi:"rotaryNumber"`
	// Starting line VTY number
	StartLineNumber pulumi.IntPtrInput `pulumi:"startLineNumber"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput)
}

// AccessList details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) AccessList() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList {
		return v.AccessList
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput)
}

// VTY AAA authentication
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) Authentication() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication {
		return v.Authentication
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput)
}

// VTY AAA authorization
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) Authorization() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization {
		return v.Authorization
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput)
}

// Ending line VTY number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) EndLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int { return v.EndLineNumber }).(pulumi.IntPtrOutput)
}

// SSH rotary number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) RotaryNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int { return v.RotaryNumber }).(pulumi.IntPtrOutput)
}

// Starting line VTY number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput) StartLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int { return v.StartLineNumber }).(pulumi.IntPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput)
}

// AccessList details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) AccessList() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList {
		if v == nil {
			return nil
		}
		return v.AccessList
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput)
}

// VTY AAA authentication
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) Authentication() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput)
}

// VTY AAA authorization
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) Authorization() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput)
}

// Ending line VTY number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) EndLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int {
		if v == nil {
			return nil
		}
		return v.EndLineNumber
	}).(pulumi.IntPtrOutput)
}

// SSH rotary number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) RotaryNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int {
		if v == nil {
			return nil
		}
		return v.RotaryNumber
	}).(pulumi.IntPtrOutput)
}

// Starting line VTY number
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput) StartLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVty) *int {
		if v == nil {
			return nil
		}
		return v.StartLineNumber
	}).(pulumi.IntPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList struct {
	// VTY in ACL
	VtyIn *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn `pulumi:"vtyIn"`
	// VTY out ACL
	VtyOut *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut `pulumi:"vtyOut"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs struct {
	// VTY in ACL
	VtyIn InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput `pulumi:"vtyIn"`
	// VTY out ACL
	VtyOut InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput `pulumi:"vtyOut"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput)
}

// VTY in ACL
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) VtyIn() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn {
		return v.VtyIn
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput)
}

// VTY out ACL
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput) VtyOut() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut {
		return v.VtyOut
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput)
}

// VTY in ACL
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) VtyIn() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn {
		if v == nil {
			return nil
		}
		return v.VtyIn
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput)
}

// VTY out ACL
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput) VtyOut() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessList) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut {
		if v == nil {
			return nil
		}
		return v.VtyOut
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn struct {
	// Name
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs struct {
	// Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput)
}

// Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput)
}

// Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyIn) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut struct {
	// Name
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs struct {
	// Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput)
}

// Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput)
}

// Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOut) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication struct {
	// Group Details
	Group *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup `pulumi:"group"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs struct {
	// Group Details
	Group InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput `pulumi:"group"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput)
}

// Group Details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput) Group() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup {
		return v.Group
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput)
}

// Group Details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput) Group() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthentication) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup {
		if v == nil {
			return nil
		}
		return v.Group
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup struct {
	// Group Name
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs struct {
	// Group Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput)
}

// Group Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput)
}

// Group Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroup) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization struct {
	// Group Details
	Group *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup `pulumi:"group"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs struct {
	// Group Details
	Group InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput `pulumi:"group"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput)
}

// Group Details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput) Group() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup {
		return v.Group
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput)
}

// Group Details
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput) Group() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorization) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup {
		if v == nil {
			return nil
		}
		return v.Group
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup struct {
	// Group Name
	Name *string `pulumi:"name"`
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupInput` via:
//
//	InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs{...}
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs struct {
	// Group Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup)(nil)).Elem()
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput)
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(context.Background())
}

func (i InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput).ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(ctx)
}

// InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput is an input type that accepts InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs, InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtr and InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput values.
// You can construct a concrete instance of `InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput` via:
//
//	        InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs{...}
//
//	or:
//
//	        nil
type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput interface {
	pulumi.Input

	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput
	ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput
}

type inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrType InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs

func InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtr(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput {
	return (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrType)(v)
}

func (*inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup)(nil)).Elem()
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return i.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(context.Background())
}

func (i *inventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrType) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o.ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(context.Background())
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup) *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup {
		return &v
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput)
}

// Group Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput struct{ *pulumi.OutputState }

func (InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup)(nil)).Elem()
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput) ToInventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutputWithContext(ctx context.Context) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput {
	return o
}

func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput) Elem() InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup) InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup {
		if v != nil {
			return *v
		}
		var ret InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup
		return ret
	}).(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput)
}

// Group Name
func (o InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroup) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type InventoryReleaseItem struct {
	// Serials of the devices that were released
	Serials []string `pulumi:"serials"`
}

// InventoryReleaseItemInput is an input type that accepts InventoryReleaseItemArgs and InventoryReleaseItemOutput values.
// You can construct a concrete instance of `InventoryReleaseItemInput` via:
//
//	InventoryReleaseItemArgs{...}
type InventoryReleaseItemInput interface {
	pulumi.Input

	ToInventoryReleaseItemOutput() InventoryReleaseItemOutput
	ToInventoryReleaseItemOutputWithContext(context.Context) InventoryReleaseItemOutput
}

type InventoryReleaseItemArgs struct {
	// Serials of the devices that were released
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (InventoryReleaseItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryReleaseItem)(nil)).Elem()
}

func (i InventoryReleaseItemArgs) ToInventoryReleaseItemOutput() InventoryReleaseItemOutput {
	return i.ToInventoryReleaseItemOutputWithContext(context.Background())
}

func (i InventoryReleaseItemArgs) ToInventoryReleaseItemOutputWithContext(ctx context.Context) InventoryReleaseItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseItemOutput)
}

func (i InventoryReleaseItemArgs) ToInventoryReleaseItemPtrOutput() InventoryReleaseItemPtrOutput {
	return i.ToInventoryReleaseItemPtrOutputWithContext(context.Background())
}

func (i InventoryReleaseItemArgs) ToInventoryReleaseItemPtrOutputWithContext(ctx context.Context) InventoryReleaseItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseItemOutput).ToInventoryReleaseItemPtrOutputWithContext(ctx)
}

// InventoryReleaseItemPtrInput is an input type that accepts InventoryReleaseItemArgs, InventoryReleaseItemPtr and InventoryReleaseItemPtrOutput values.
// You can construct a concrete instance of `InventoryReleaseItemPtrInput` via:
//
//	        InventoryReleaseItemArgs{...}
//
//	or:
//
//	        nil
type InventoryReleaseItemPtrInput interface {
	pulumi.Input

	ToInventoryReleaseItemPtrOutput() InventoryReleaseItemPtrOutput
	ToInventoryReleaseItemPtrOutputWithContext(context.Context) InventoryReleaseItemPtrOutput
}

type inventoryReleaseItemPtrType InventoryReleaseItemArgs

func InventoryReleaseItemPtr(v *InventoryReleaseItemArgs) InventoryReleaseItemPtrInput {
	return (*inventoryReleaseItemPtrType)(v)
}

func (*inventoryReleaseItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryReleaseItem)(nil)).Elem()
}

func (i *inventoryReleaseItemPtrType) ToInventoryReleaseItemPtrOutput() InventoryReleaseItemPtrOutput {
	return i.ToInventoryReleaseItemPtrOutputWithContext(context.Background())
}

func (i *inventoryReleaseItemPtrType) ToInventoryReleaseItemPtrOutputWithContext(ctx context.Context) InventoryReleaseItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseItemPtrOutput)
}

type InventoryReleaseItemOutput struct{ *pulumi.OutputState }

func (InventoryReleaseItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryReleaseItem)(nil)).Elem()
}

func (o InventoryReleaseItemOutput) ToInventoryReleaseItemOutput() InventoryReleaseItemOutput {
	return o
}

func (o InventoryReleaseItemOutput) ToInventoryReleaseItemOutputWithContext(ctx context.Context) InventoryReleaseItemOutput {
	return o
}

func (o InventoryReleaseItemOutput) ToInventoryReleaseItemPtrOutput() InventoryReleaseItemPtrOutput {
	return o.ToInventoryReleaseItemPtrOutputWithContext(context.Background())
}

func (o InventoryReleaseItemOutput) ToInventoryReleaseItemPtrOutputWithContext(ctx context.Context) InventoryReleaseItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryReleaseItem) *InventoryReleaseItem {
		return &v
	}).(InventoryReleaseItemPtrOutput)
}

// Serials of the devices that were released
func (o InventoryReleaseItemOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryReleaseItem) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type InventoryReleaseItemPtrOutput struct{ *pulumi.OutputState }

func (InventoryReleaseItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryReleaseItem)(nil)).Elem()
}

func (o InventoryReleaseItemPtrOutput) ToInventoryReleaseItemPtrOutput() InventoryReleaseItemPtrOutput {
	return o
}

func (o InventoryReleaseItemPtrOutput) ToInventoryReleaseItemPtrOutputWithContext(ctx context.Context) InventoryReleaseItemPtrOutput {
	return o
}

func (o InventoryReleaseItemPtrOutput) Elem() InventoryReleaseItemOutput {
	return o.ApplyT(func(v *InventoryReleaseItem) InventoryReleaseItem {
		if v != nil {
			return *v
		}
		var ret InventoryReleaseItem
		return ret
	}).(InventoryReleaseItemOutput)
}

// Serials of the devices that were released
func (o InventoryReleaseItemPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryReleaseItem) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type InventoryReleaseParameters struct {
	// Serials of the devices that should be released
	Serials []string `pulumi:"serials"`
}

// InventoryReleaseParametersInput is an input type that accepts InventoryReleaseParametersArgs and InventoryReleaseParametersOutput values.
// You can construct a concrete instance of `InventoryReleaseParametersInput` via:
//
//	InventoryReleaseParametersArgs{...}
type InventoryReleaseParametersInput interface {
	pulumi.Input

	ToInventoryReleaseParametersOutput() InventoryReleaseParametersOutput
	ToInventoryReleaseParametersOutputWithContext(context.Context) InventoryReleaseParametersOutput
}

type InventoryReleaseParametersArgs struct {
	// Serials of the devices that should be released
	Serials pulumi.StringArrayInput `pulumi:"serials"`
}

func (InventoryReleaseParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryReleaseParameters)(nil)).Elem()
}

func (i InventoryReleaseParametersArgs) ToInventoryReleaseParametersOutput() InventoryReleaseParametersOutput {
	return i.ToInventoryReleaseParametersOutputWithContext(context.Background())
}

func (i InventoryReleaseParametersArgs) ToInventoryReleaseParametersOutputWithContext(ctx context.Context) InventoryReleaseParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseParametersOutput)
}

func (i InventoryReleaseParametersArgs) ToInventoryReleaseParametersPtrOutput() InventoryReleaseParametersPtrOutput {
	return i.ToInventoryReleaseParametersPtrOutputWithContext(context.Background())
}

func (i InventoryReleaseParametersArgs) ToInventoryReleaseParametersPtrOutputWithContext(ctx context.Context) InventoryReleaseParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseParametersOutput).ToInventoryReleaseParametersPtrOutputWithContext(ctx)
}

// InventoryReleaseParametersPtrInput is an input type that accepts InventoryReleaseParametersArgs, InventoryReleaseParametersPtr and InventoryReleaseParametersPtrOutput values.
// You can construct a concrete instance of `InventoryReleaseParametersPtrInput` via:
//
//	        InventoryReleaseParametersArgs{...}
//
//	or:
//
//	        nil
type InventoryReleaseParametersPtrInput interface {
	pulumi.Input

	ToInventoryReleaseParametersPtrOutput() InventoryReleaseParametersPtrOutput
	ToInventoryReleaseParametersPtrOutputWithContext(context.Context) InventoryReleaseParametersPtrOutput
}

type inventoryReleaseParametersPtrType InventoryReleaseParametersArgs

func InventoryReleaseParametersPtr(v *InventoryReleaseParametersArgs) InventoryReleaseParametersPtrInput {
	return (*inventoryReleaseParametersPtrType)(v)
}

func (*inventoryReleaseParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryReleaseParameters)(nil)).Elem()
}

func (i *inventoryReleaseParametersPtrType) ToInventoryReleaseParametersPtrOutput() InventoryReleaseParametersPtrOutput {
	return i.ToInventoryReleaseParametersPtrOutputWithContext(context.Background())
}

func (i *inventoryReleaseParametersPtrType) ToInventoryReleaseParametersPtrOutputWithContext(ctx context.Context) InventoryReleaseParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryReleaseParametersPtrOutput)
}

type InventoryReleaseParametersOutput struct{ *pulumi.OutputState }

func (InventoryReleaseParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryReleaseParameters)(nil)).Elem()
}

func (o InventoryReleaseParametersOutput) ToInventoryReleaseParametersOutput() InventoryReleaseParametersOutput {
	return o
}

func (o InventoryReleaseParametersOutput) ToInventoryReleaseParametersOutputWithContext(ctx context.Context) InventoryReleaseParametersOutput {
	return o
}

func (o InventoryReleaseParametersOutput) ToInventoryReleaseParametersPtrOutput() InventoryReleaseParametersPtrOutput {
	return o.ToInventoryReleaseParametersPtrOutputWithContext(context.Background())
}

func (o InventoryReleaseParametersOutput) ToInventoryReleaseParametersPtrOutputWithContext(ctx context.Context) InventoryReleaseParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InventoryReleaseParameters) *InventoryReleaseParameters {
		return &v
	}).(InventoryReleaseParametersPtrOutput)
}

// Serials of the devices that should be released
func (o InventoryReleaseParametersOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InventoryReleaseParameters) []string { return v.Serials }).(pulumi.StringArrayOutput)
}

type InventoryReleaseParametersPtrOutput struct{ *pulumi.OutputState }

func (InventoryReleaseParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryReleaseParameters)(nil)).Elem()
}

func (o InventoryReleaseParametersPtrOutput) ToInventoryReleaseParametersPtrOutput() InventoryReleaseParametersPtrOutput {
	return o
}

func (o InventoryReleaseParametersPtrOutput) ToInventoryReleaseParametersPtrOutputWithContext(ctx context.Context) InventoryReleaseParametersPtrOutput {
	return o
}

func (o InventoryReleaseParametersPtrOutput) Elem() InventoryReleaseParametersOutput {
	return o.ApplyT(func(v *InventoryReleaseParameters) InventoryReleaseParameters {
		if v != nil {
			return *v
		}
		var ret InventoryReleaseParameters
		return ret
	}).(InventoryReleaseParametersOutput)
}

// Serials of the devices that should be released
func (o InventoryReleaseParametersPtrOutput) Serials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InventoryReleaseParameters) []string {
		if v == nil {
			return nil
		}
		return v.Serials
	}).(pulumi.StringArrayOutput)
}

type LicensesAssignSeatsItem struct {
	// Resulting licenses from the move
	ResultingLicenses []LicensesAssignSeatsItemResultingLicense `pulumi:"resultingLicenses"`
}

// LicensesAssignSeatsItemInput is an input type that accepts LicensesAssignSeatsItemArgs and LicensesAssignSeatsItemOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemInput` via:
//
//	LicensesAssignSeatsItemArgs{...}
type LicensesAssignSeatsItemInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemOutput() LicensesAssignSeatsItemOutput
	ToLicensesAssignSeatsItemOutputWithContext(context.Context) LicensesAssignSeatsItemOutput
}

type LicensesAssignSeatsItemArgs struct {
	// Resulting licenses from the move
	ResultingLicenses LicensesAssignSeatsItemResultingLicenseArrayInput `pulumi:"resultingLicenses"`
}

func (LicensesAssignSeatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItem)(nil)).Elem()
}

func (i LicensesAssignSeatsItemArgs) ToLicensesAssignSeatsItemOutput() LicensesAssignSeatsItemOutput {
	return i.ToLicensesAssignSeatsItemOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemArgs) ToLicensesAssignSeatsItemOutputWithContext(ctx context.Context) LicensesAssignSeatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemOutput)
}

func (i LicensesAssignSeatsItemArgs) ToLicensesAssignSeatsItemPtrOutput() LicensesAssignSeatsItemPtrOutput {
	return i.ToLicensesAssignSeatsItemPtrOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemArgs) ToLicensesAssignSeatsItemPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemOutput).ToLicensesAssignSeatsItemPtrOutputWithContext(ctx)
}

// LicensesAssignSeatsItemPtrInput is an input type that accepts LicensesAssignSeatsItemArgs, LicensesAssignSeatsItemPtr and LicensesAssignSeatsItemPtrOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemPtrInput` via:
//
//	        LicensesAssignSeatsItemArgs{...}
//
//	or:
//
//	        nil
type LicensesAssignSeatsItemPtrInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemPtrOutput() LicensesAssignSeatsItemPtrOutput
	ToLicensesAssignSeatsItemPtrOutputWithContext(context.Context) LicensesAssignSeatsItemPtrOutput
}

type licensesAssignSeatsItemPtrType LicensesAssignSeatsItemArgs

func LicensesAssignSeatsItemPtr(v *LicensesAssignSeatsItemArgs) LicensesAssignSeatsItemPtrInput {
	return (*licensesAssignSeatsItemPtrType)(v)
}

func (*licensesAssignSeatsItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesAssignSeatsItem)(nil)).Elem()
}

func (i *licensesAssignSeatsItemPtrType) ToLicensesAssignSeatsItemPtrOutput() LicensesAssignSeatsItemPtrOutput {
	return i.ToLicensesAssignSeatsItemPtrOutputWithContext(context.Background())
}

func (i *licensesAssignSeatsItemPtrType) ToLicensesAssignSeatsItemPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemPtrOutput)
}

type LicensesAssignSeatsItemOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItem)(nil)).Elem()
}

func (o LicensesAssignSeatsItemOutput) ToLicensesAssignSeatsItemOutput() LicensesAssignSeatsItemOutput {
	return o
}

func (o LicensesAssignSeatsItemOutput) ToLicensesAssignSeatsItemOutputWithContext(ctx context.Context) LicensesAssignSeatsItemOutput {
	return o
}

func (o LicensesAssignSeatsItemOutput) ToLicensesAssignSeatsItemPtrOutput() LicensesAssignSeatsItemPtrOutput {
	return o.ToLicensesAssignSeatsItemPtrOutputWithContext(context.Background())
}

func (o LicensesAssignSeatsItemOutput) ToLicensesAssignSeatsItemPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesAssignSeatsItem) *LicensesAssignSeatsItem {
		return &v
	}).(LicensesAssignSeatsItemPtrOutput)
}

// Resulting licenses from the move
func (o LicensesAssignSeatsItemOutput) ResultingLicenses() LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItem) []LicensesAssignSeatsItemResultingLicense { return v.ResultingLicenses }).(LicensesAssignSeatsItemResultingLicenseArrayOutput)
}

type LicensesAssignSeatsItemPtrOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesAssignSeatsItem)(nil)).Elem()
}

func (o LicensesAssignSeatsItemPtrOutput) ToLicensesAssignSeatsItemPtrOutput() LicensesAssignSeatsItemPtrOutput {
	return o
}

func (o LicensesAssignSeatsItemPtrOutput) ToLicensesAssignSeatsItemPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsItemPtrOutput {
	return o
}

func (o LicensesAssignSeatsItemPtrOutput) Elem() LicensesAssignSeatsItemOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsItem) LicensesAssignSeatsItem {
		if v != nil {
			return *v
		}
		var ret LicensesAssignSeatsItem
		return ret
	}).(LicensesAssignSeatsItemOutput)
}

// Resulting licenses from the move
func (o LicensesAssignSeatsItemPtrOutput) ResultingLicenses() LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsItem) []LicensesAssignSeatsItemResultingLicense {
		if v == nil {
			return nil
		}
		return v.ResultingLicenses
	}).(LicensesAssignSeatsItemResultingLicenseArrayOutput)
}

type LicensesAssignSeatsItemResultingLicense struct {
	// The date the license started burning
	ActivationDate *string `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate *string `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial *string `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays *int `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate *string `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId *string `pulumi:"headLicenseId"`
	// License ID
	Id *string `pulumi:"id"`
	// License key
	LicenseKey *string `pulumi:"licenseKey"`
	// License type
	LicenseType *string `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId *string `pulumi:"networkId"`
	// Order number
	OrderNumber *string `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses []LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount *int `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State *string `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays *int `pulumi:"totalDurationInDays"`
}

// LicensesAssignSeatsItemResultingLicenseInput is an input type that accepts LicensesAssignSeatsItemResultingLicenseArgs and LicensesAssignSeatsItemResultingLicenseOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemResultingLicenseInput` via:
//
//	LicensesAssignSeatsItemResultingLicenseArgs{...}
type LicensesAssignSeatsItemResultingLicenseInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemResultingLicenseOutput() LicensesAssignSeatsItemResultingLicenseOutput
	ToLicensesAssignSeatsItemResultingLicenseOutputWithContext(context.Context) LicensesAssignSeatsItemResultingLicenseOutput
}

type LicensesAssignSeatsItemResultingLicenseArgs struct {
	// The date the license started burning
	ActivationDate pulumi.StringPtrInput `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate pulumi.StringPtrInput `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial pulumi.StringPtrInput `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays pulumi.IntPtrInput `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId pulumi.StringPtrInput `pulumi:"headLicenseId"`
	// License ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Order number
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount pulumi.IntPtrInput `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays pulumi.IntPtrInput `pulumi:"totalDurationInDays"`
}

func (LicensesAssignSeatsItemResultingLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItemResultingLicense)(nil)).Elem()
}

func (i LicensesAssignSeatsItemResultingLicenseArgs) ToLicensesAssignSeatsItemResultingLicenseOutput() LicensesAssignSeatsItemResultingLicenseOutput {
	return i.ToLicensesAssignSeatsItemResultingLicenseOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemResultingLicenseArgs) ToLicensesAssignSeatsItemResultingLicenseOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemResultingLicenseOutput)
}

// LicensesAssignSeatsItemResultingLicenseArrayInput is an input type that accepts LicensesAssignSeatsItemResultingLicenseArray and LicensesAssignSeatsItemResultingLicenseArrayOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemResultingLicenseArrayInput` via:
//
//	LicensesAssignSeatsItemResultingLicenseArray{ LicensesAssignSeatsItemResultingLicenseArgs{...} }
type LicensesAssignSeatsItemResultingLicenseArrayInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemResultingLicenseArrayOutput() LicensesAssignSeatsItemResultingLicenseArrayOutput
	ToLicensesAssignSeatsItemResultingLicenseArrayOutputWithContext(context.Context) LicensesAssignSeatsItemResultingLicenseArrayOutput
}

type LicensesAssignSeatsItemResultingLicenseArray []LicensesAssignSeatsItemResultingLicenseInput

func (LicensesAssignSeatsItemResultingLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesAssignSeatsItemResultingLicense)(nil)).Elem()
}

func (i LicensesAssignSeatsItemResultingLicenseArray) ToLicensesAssignSeatsItemResultingLicenseArrayOutput() LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return i.ToLicensesAssignSeatsItemResultingLicenseArrayOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemResultingLicenseArray) ToLicensesAssignSeatsItemResultingLicenseArrayOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemResultingLicenseArrayOutput)
}

type LicensesAssignSeatsItemResultingLicenseOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemResultingLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItemResultingLicense)(nil)).Elem()
}

func (o LicensesAssignSeatsItemResultingLicenseOutput) ToLicensesAssignSeatsItemResultingLicenseOutput() LicensesAssignSeatsItemResultingLicenseOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicenseOutput) ToLicensesAssignSeatsItemResultingLicenseOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicenseOutput {
	return o
}

// The date the license started burning
func (o LicensesAssignSeatsItemResultingLicenseOutput) ActivationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.ActivationDate }).(pulumi.StringPtrOutput)
}

// The date the license was claimed into the organization
func (o LicensesAssignSeatsItemResultingLicenseOutput) ClaimDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.ClaimDate }).(pulumi.StringPtrOutput)
}

// Serial number of the device the license is assigned to
func (o LicensesAssignSeatsItemResultingLicenseOutput) DeviceSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.DeviceSerial }).(pulumi.StringPtrOutput)
}

// The duration of the individual license
func (o LicensesAssignSeatsItemResultingLicenseOutput) DurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *int { return v.DurationInDays }).(pulumi.IntPtrOutput)
}

// The date the license will expire
func (o LicensesAssignSeatsItemResultingLicenseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The id of the head license this license is queued behind. If there is no head license, it returns nil.
func (o LicensesAssignSeatsItemResultingLicenseOutput) HeadLicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.HeadLicenseId }).(pulumi.StringPtrOutput)
}

// License ID
func (o LicensesAssignSeatsItemResultingLicenseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// License key
func (o LicensesAssignSeatsItemResultingLicenseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// License type
func (o LicensesAssignSeatsItemResultingLicenseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// ID of the network the license is assigned to
func (o LicensesAssignSeatsItemResultingLicenseOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Order number
func (o LicensesAssignSeatsItemResultingLicenseOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
func (o LicensesAssignSeatsItemResultingLicenseOutput) PermanentlyQueuedLicenses() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) []LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense {
		return v.PermanentlyQueuedLicenses
	}).(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput)
}

// The number of seats of the license. Only applicable to SM licenses.
func (o LicensesAssignSeatsItemResultingLicenseOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *int { return v.SeatCount }).(pulumi.IntPtrOutput)
}

// The state of the license. All queued licenses have a status of *recentlyQueued*.
func (o LicensesAssignSeatsItemResultingLicenseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The duration of the license plus all permanently queued licenses associated with it
func (o LicensesAssignSeatsItemResultingLicenseOutput) TotalDurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicense) *int { return v.TotalDurationInDays }).(pulumi.IntPtrOutput)
}

type LicensesAssignSeatsItemResultingLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemResultingLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesAssignSeatsItemResultingLicense)(nil)).Elem()
}

func (o LicensesAssignSeatsItemResultingLicenseArrayOutput) ToLicensesAssignSeatsItemResultingLicenseArrayOutput() LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicenseArrayOutput) ToLicensesAssignSeatsItemResultingLicenseArrayOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicenseArrayOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicenseArrayOutput) Index(i pulumi.IntInput) LicensesAssignSeatsItemResultingLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensesAssignSeatsItemResultingLicense {
		return vs[0].([]LicensesAssignSeatsItemResultingLicense)[vs[1].(int)]
	}).(LicensesAssignSeatsItemResultingLicenseOutput)
}

type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense struct {
	// The duration of the individual license
	DurationInDays *int `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id *string `pulumi:"id"`
	// License key
	LicenseKey *string `pulumi:"licenseKey"`
	// License type
	LicenseType *string `pulumi:"licenseType"`
	// Order number
	OrderNumber *string `pulumi:"orderNumber"`
}

// LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseInput is an input type that accepts LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs and LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseInput` via:
//
//	LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{...}
type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput
	ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput
}

type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs struct {
	// The duration of the individual license
	DurationInDays pulumi.IntPtrInput `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// Order number
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
}

func (LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return i.ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput)
}

// LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput is an input type that accepts LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray and LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput` via:
//
//	LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray{ LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{...} }
type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput interface {
	pulumi.Input

	ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput
	ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput
}

type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray []LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseInput

func (LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return i.ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput)
}

type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return o
}

// The duration of the individual license
func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) DurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense) *int { return v.DurationInDays }).(pulumi.IntPtrOutput)
}

// Permanently queued license ID
func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// License key
func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// License type
func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// Order number
func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

type LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ToLicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) Index(i pulumi.IntInput) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense {
		return vs[0].([]LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicense)[vs[1].(int)]
	}).(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput)
}

type LicensesAssignSeatsParameters struct {
	// The ID of the SM license to assign seats from
	LicenseId *string `pulumi:"licenseId"`
	// The ID of the SM network to assign the seats to
	NetworkId *string `pulumi:"networkId"`
	// The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
	SeatCount *int `pulumi:"seatCount"`
}

// LicensesAssignSeatsParametersInput is an input type that accepts LicensesAssignSeatsParametersArgs and LicensesAssignSeatsParametersOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsParametersInput` via:
//
//	LicensesAssignSeatsParametersArgs{...}
type LicensesAssignSeatsParametersInput interface {
	pulumi.Input

	ToLicensesAssignSeatsParametersOutput() LicensesAssignSeatsParametersOutput
	ToLicensesAssignSeatsParametersOutputWithContext(context.Context) LicensesAssignSeatsParametersOutput
}

type LicensesAssignSeatsParametersArgs struct {
	// The ID of the SM license to assign seats from
	LicenseId pulumi.StringPtrInput `pulumi:"licenseId"`
	// The ID of the SM network to assign the seats to
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
	SeatCount pulumi.IntPtrInput `pulumi:"seatCount"`
}

func (LicensesAssignSeatsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsParameters)(nil)).Elem()
}

func (i LicensesAssignSeatsParametersArgs) ToLicensesAssignSeatsParametersOutput() LicensesAssignSeatsParametersOutput {
	return i.ToLicensesAssignSeatsParametersOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsParametersArgs) ToLicensesAssignSeatsParametersOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsParametersOutput)
}

func (i LicensesAssignSeatsParametersArgs) ToLicensesAssignSeatsParametersPtrOutput() LicensesAssignSeatsParametersPtrOutput {
	return i.ToLicensesAssignSeatsParametersPtrOutputWithContext(context.Background())
}

func (i LicensesAssignSeatsParametersArgs) ToLicensesAssignSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsParametersOutput).ToLicensesAssignSeatsParametersPtrOutputWithContext(ctx)
}

// LicensesAssignSeatsParametersPtrInput is an input type that accepts LicensesAssignSeatsParametersArgs, LicensesAssignSeatsParametersPtr and LicensesAssignSeatsParametersPtrOutput values.
// You can construct a concrete instance of `LicensesAssignSeatsParametersPtrInput` via:
//
//	        LicensesAssignSeatsParametersArgs{...}
//
//	or:
//
//	        nil
type LicensesAssignSeatsParametersPtrInput interface {
	pulumi.Input

	ToLicensesAssignSeatsParametersPtrOutput() LicensesAssignSeatsParametersPtrOutput
	ToLicensesAssignSeatsParametersPtrOutputWithContext(context.Context) LicensesAssignSeatsParametersPtrOutput
}

type licensesAssignSeatsParametersPtrType LicensesAssignSeatsParametersArgs

func LicensesAssignSeatsParametersPtr(v *LicensesAssignSeatsParametersArgs) LicensesAssignSeatsParametersPtrInput {
	return (*licensesAssignSeatsParametersPtrType)(v)
}

func (*licensesAssignSeatsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesAssignSeatsParameters)(nil)).Elem()
}

func (i *licensesAssignSeatsParametersPtrType) ToLicensesAssignSeatsParametersPtrOutput() LicensesAssignSeatsParametersPtrOutput {
	return i.ToLicensesAssignSeatsParametersPtrOutputWithContext(context.Background())
}

func (i *licensesAssignSeatsParametersPtrType) ToLicensesAssignSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesAssignSeatsParametersPtrOutput)
}

type LicensesAssignSeatsParametersOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesAssignSeatsParameters)(nil)).Elem()
}

func (o LicensesAssignSeatsParametersOutput) ToLicensesAssignSeatsParametersOutput() LicensesAssignSeatsParametersOutput {
	return o
}

func (o LicensesAssignSeatsParametersOutput) ToLicensesAssignSeatsParametersOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersOutput {
	return o
}

func (o LicensesAssignSeatsParametersOutput) ToLicensesAssignSeatsParametersPtrOutput() LicensesAssignSeatsParametersPtrOutput {
	return o.ToLicensesAssignSeatsParametersPtrOutputWithContext(context.Background())
}

func (o LicensesAssignSeatsParametersOutput) ToLicensesAssignSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesAssignSeatsParameters) *LicensesAssignSeatsParameters {
		return &v
	}).(LicensesAssignSeatsParametersPtrOutput)
}

// The ID of the SM license to assign seats from
func (o LicensesAssignSeatsParametersOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsParameters) *string { return v.LicenseId }).(pulumi.StringPtrOutput)
}

// The ID of the SM network to assign the seats to
func (o LicensesAssignSeatsParametersOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsParameters) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
func (o LicensesAssignSeatsParametersOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesAssignSeatsParameters) *int { return v.SeatCount }).(pulumi.IntPtrOutput)
}

type LicensesAssignSeatsParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensesAssignSeatsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesAssignSeatsParameters)(nil)).Elem()
}

func (o LicensesAssignSeatsParametersPtrOutput) ToLicensesAssignSeatsParametersPtrOutput() LicensesAssignSeatsParametersPtrOutput {
	return o
}

func (o LicensesAssignSeatsParametersPtrOutput) ToLicensesAssignSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesAssignSeatsParametersPtrOutput {
	return o
}

func (o LicensesAssignSeatsParametersPtrOutput) Elem() LicensesAssignSeatsParametersOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsParameters) LicensesAssignSeatsParameters {
		if v != nil {
			return *v
		}
		var ret LicensesAssignSeatsParameters
		return ret
	}).(LicensesAssignSeatsParametersOutput)
}

// The ID of the SM license to assign seats from
func (o LicensesAssignSeatsParametersPtrOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LicenseId
	}).(pulumi.StringPtrOutput)
}

// The ID of the SM network to assign the seats to
func (o LicensesAssignSeatsParametersPtrOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.NetworkId
	}).(pulumi.StringPtrOutput)
}

// The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
func (o LicensesAssignSeatsParametersPtrOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensesAssignSeatsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SeatCount
	}).(pulumi.IntPtrOutput)
}

type LicensesMoveItem struct {
	// The ID of the organization to move the licenses to
	DestOrganizationId *string `pulumi:"destOrganizationId"`
	// A list of IDs of licenses to move to the new organization
	LicenseIds []string `pulumi:"licenseIds"`
}

// LicensesMoveItemInput is an input type that accepts LicensesMoveItemArgs and LicensesMoveItemOutput values.
// You can construct a concrete instance of `LicensesMoveItemInput` via:
//
//	LicensesMoveItemArgs{...}
type LicensesMoveItemInput interface {
	pulumi.Input

	ToLicensesMoveItemOutput() LicensesMoveItemOutput
	ToLicensesMoveItemOutputWithContext(context.Context) LicensesMoveItemOutput
}

type LicensesMoveItemArgs struct {
	// The ID of the organization to move the licenses to
	DestOrganizationId pulumi.StringPtrInput `pulumi:"destOrganizationId"`
	// A list of IDs of licenses to move to the new organization
	LicenseIds pulumi.StringArrayInput `pulumi:"licenseIds"`
}

func (LicensesMoveItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveItem)(nil)).Elem()
}

func (i LicensesMoveItemArgs) ToLicensesMoveItemOutput() LicensesMoveItemOutput {
	return i.ToLicensesMoveItemOutputWithContext(context.Background())
}

func (i LicensesMoveItemArgs) ToLicensesMoveItemOutputWithContext(ctx context.Context) LicensesMoveItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveItemOutput)
}

func (i LicensesMoveItemArgs) ToLicensesMoveItemPtrOutput() LicensesMoveItemPtrOutput {
	return i.ToLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (i LicensesMoveItemArgs) ToLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensesMoveItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveItemOutput).ToLicensesMoveItemPtrOutputWithContext(ctx)
}

// LicensesMoveItemPtrInput is an input type that accepts LicensesMoveItemArgs, LicensesMoveItemPtr and LicensesMoveItemPtrOutput values.
// You can construct a concrete instance of `LicensesMoveItemPtrInput` via:
//
//	        LicensesMoveItemArgs{...}
//
//	or:
//
//	        nil
type LicensesMoveItemPtrInput interface {
	pulumi.Input

	ToLicensesMoveItemPtrOutput() LicensesMoveItemPtrOutput
	ToLicensesMoveItemPtrOutputWithContext(context.Context) LicensesMoveItemPtrOutput
}

type licensesMoveItemPtrType LicensesMoveItemArgs

func LicensesMoveItemPtr(v *LicensesMoveItemArgs) LicensesMoveItemPtrInput {
	return (*licensesMoveItemPtrType)(v)
}

func (*licensesMoveItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveItem)(nil)).Elem()
}

func (i *licensesMoveItemPtrType) ToLicensesMoveItemPtrOutput() LicensesMoveItemPtrOutput {
	return i.ToLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (i *licensesMoveItemPtrType) ToLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensesMoveItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveItemPtrOutput)
}

type LicensesMoveItemOutput struct{ *pulumi.OutputState }

func (LicensesMoveItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveItem)(nil)).Elem()
}

func (o LicensesMoveItemOutput) ToLicensesMoveItemOutput() LicensesMoveItemOutput {
	return o
}

func (o LicensesMoveItemOutput) ToLicensesMoveItemOutputWithContext(ctx context.Context) LicensesMoveItemOutput {
	return o
}

func (o LicensesMoveItemOutput) ToLicensesMoveItemPtrOutput() LicensesMoveItemPtrOutput {
	return o.ToLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (o LicensesMoveItemOutput) ToLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensesMoveItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesMoveItem) *LicensesMoveItem {
		return &v
	}).(LicensesMoveItemPtrOutput)
}

// The ID of the organization to move the licenses to
func (o LicensesMoveItemOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveItem) *string { return v.DestOrganizationId }).(pulumi.StringPtrOutput)
}

// A list of IDs of licenses to move to the new organization
func (o LicensesMoveItemOutput) LicenseIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensesMoveItem) []string { return v.LicenseIds }).(pulumi.StringArrayOutput)
}

type LicensesMoveItemPtrOutput struct{ *pulumi.OutputState }

func (LicensesMoveItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveItem)(nil)).Elem()
}

func (o LicensesMoveItemPtrOutput) ToLicensesMoveItemPtrOutput() LicensesMoveItemPtrOutput {
	return o
}

func (o LicensesMoveItemPtrOutput) ToLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensesMoveItemPtrOutput {
	return o
}

func (o LicensesMoveItemPtrOutput) Elem() LicensesMoveItemOutput {
	return o.ApplyT(func(v *LicensesMoveItem) LicensesMoveItem {
		if v != nil {
			return *v
		}
		var ret LicensesMoveItem
		return ret
	}).(LicensesMoveItemOutput)
}

// The ID of the organization to move the licenses to
func (o LicensesMoveItemPtrOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveItem) *string {
		if v == nil {
			return nil
		}
		return v.DestOrganizationId
	}).(pulumi.StringPtrOutput)
}

// A list of IDs of licenses to move to the new organization
func (o LicensesMoveItemPtrOutput) LicenseIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensesMoveItem) []string {
		if v == nil {
			return nil
		}
		return v.LicenseIds
	}).(pulumi.StringArrayOutput)
}

type LicensesMoveParameters struct {
	// The ID of the organization to move the licenses to
	DestOrganizationId *string `pulumi:"destOrganizationId"`
	// A list of IDs of licenses to move to the new organization
	LicenseIds []string `pulumi:"licenseIds"`
}

// LicensesMoveParametersInput is an input type that accepts LicensesMoveParametersArgs and LicensesMoveParametersOutput values.
// You can construct a concrete instance of `LicensesMoveParametersInput` via:
//
//	LicensesMoveParametersArgs{...}
type LicensesMoveParametersInput interface {
	pulumi.Input

	ToLicensesMoveParametersOutput() LicensesMoveParametersOutput
	ToLicensesMoveParametersOutputWithContext(context.Context) LicensesMoveParametersOutput
}

type LicensesMoveParametersArgs struct {
	// The ID of the organization to move the licenses to
	DestOrganizationId pulumi.StringPtrInput `pulumi:"destOrganizationId"`
	// A list of IDs of licenses to move to the new organization
	LicenseIds pulumi.StringArrayInput `pulumi:"licenseIds"`
}

func (LicensesMoveParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveParameters)(nil)).Elem()
}

func (i LicensesMoveParametersArgs) ToLicensesMoveParametersOutput() LicensesMoveParametersOutput {
	return i.ToLicensesMoveParametersOutputWithContext(context.Background())
}

func (i LicensesMoveParametersArgs) ToLicensesMoveParametersOutputWithContext(ctx context.Context) LicensesMoveParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveParametersOutput)
}

func (i LicensesMoveParametersArgs) ToLicensesMoveParametersPtrOutput() LicensesMoveParametersPtrOutput {
	return i.ToLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (i LicensesMoveParametersArgs) ToLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensesMoveParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveParametersOutput).ToLicensesMoveParametersPtrOutputWithContext(ctx)
}

// LicensesMoveParametersPtrInput is an input type that accepts LicensesMoveParametersArgs, LicensesMoveParametersPtr and LicensesMoveParametersPtrOutput values.
// You can construct a concrete instance of `LicensesMoveParametersPtrInput` via:
//
//	        LicensesMoveParametersArgs{...}
//
//	or:
//
//	        nil
type LicensesMoveParametersPtrInput interface {
	pulumi.Input

	ToLicensesMoveParametersPtrOutput() LicensesMoveParametersPtrOutput
	ToLicensesMoveParametersPtrOutputWithContext(context.Context) LicensesMoveParametersPtrOutput
}

type licensesMoveParametersPtrType LicensesMoveParametersArgs

func LicensesMoveParametersPtr(v *LicensesMoveParametersArgs) LicensesMoveParametersPtrInput {
	return (*licensesMoveParametersPtrType)(v)
}

func (*licensesMoveParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveParameters)(nil)).Elem()
}

func (i *licensesMoveParametersPtrType) ToLicensesMoveParametersPtrOutput() LicensesMoveParametersPtrOutput {
	return i.ToLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (i *licensesMoveParametersPtrType) ToLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensesMoveParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveParametersPtrOutput)
}

type LicensesMoveParametersOutput struct{ *pulumi.OutputState }

func (LicensesMoveParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveParameters)(nil)).Elem()
}

func (o LicensesMoveParametersOutput) ToLicensesMoveParametersOutput() LicensesMoveParametersOutput {
	return o
}

func (o LicensesMoveParametersOutput) ToLicensesMoveParametersOutputWithContext(ctx context.Context) LicensesMoveParametersOutput {
	return o
}

func (o LicensesMoveParametersOutput) ToLicensesMoveParametersPtrOutput() LicensesMoveParametersPtrOutput {
	return o.ToLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (o LicensesMoveParametersOutput) ToLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensesMoveParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesMoveParameters) *LicensesMoveParameters {
		return &v
	}).(LicensesMoveParametersPtrOutput)
}

// The ID of the organization to move the licenses to
func (o LicensesMoveParametersOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveParameters) *string { return v.DestOrganizationId }).(pulumi.StringPtrOutput)
}

// A list of IDs of licenses to move to the new organization
func (o LicensesMoveParametersOutput) LicenseIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensesMoveParameters) []string { return v.LicenseIds }).(pulumi.StringArrayOutput)
}

type LicensesMoveParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensesMoveParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveParameters)(nil)).Elem()
}

func (o LicensesMoveParametersPtrOutput) ToLicensesMoveParametersPtrOutput() LicensesMoveParametersPtrOutput {
	return o
}

func (o LicensesMoveParametersPtrOutput) ToLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensesMoveParametersPtrOutput {
	return o
}

func (o LicensesMoveParametersPtrOutput) Elem() LicensesMoveParametersOutput {
	return o.ApplyT(func(v *LicensesMoveParameters) LicensesMoveParameters {
		if v != nil {
			return *v
		}
		var ret LicensesMoveParameters
		return ret
	}).(LicensesMoveParametersOutput)
}

// The ID of the organization to move the licenses to
func (o LicensesMoveParametersPtrOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveParameters) *string {
		if v == nil {
			return nil
		}
		return v.DestOrganizationId
	}).(pulumi.StringPtrOutput)
}

// A list of IDs of licenses to move to the new organization
func (o LicensesMoveParametersPtrOutput) LicenseIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensesMoveParameters) []string {
		if v == nil {
			return nil
		}
		return v.LicenseIds
	}).(pulumi.StringArrayOutput)
}

type LicensesMoveSeatsItem struct {
	// The ID of the organization to move the SM seats to
	DestOrganizationId *string `pulumi:"destOrganizationId"`
	// The ID of the SM license to move the seats from
	LicenseId *string `pulumi:"licenseId"`
	// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
	SeatCount *int `pulumi:"seatCount"`
}

// LicensesMoveSeatsItemInput is an input type that accepts LicensesMoveSeatsItemArgs and LicensesMoveSeatsItemOutput values.
// You can construct a concrete instance of `LicensesMoveSeatsItemInput` via:
//
//	LicensesMoveSeatsItemArgs{...}
type LicensesMoveSeatsItemInput interface {
	pulumi.Input

	ToLicensesMoveSeatsItemOutput() LicensesMoveSeatsItemOutput
	ToLicensesMoveSeatsItemOutputWithContext(context.Context) LicensesMoveSeatsItemOutput
}

type LicensesMoveSeatsItemArgs struct {
	// The ID of the organization to move the SM seats to
	DestOrganizationId pulumi.StringPtrInput `pulumi:"destOrganizationId"`
	// The ID of the SM license to move the seats from
	LicenseId pulumi.StringPtrInput `pulumi:"licenseId"`
	// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
	SeatCount pulumi.IntPtrInput `pulumi:"seatCount"`
}

func (LicensesMoveSeatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveSeatsItem)(nil)).Elem()
}

func (i LicensesMoveSeatsItemArgs) ToLicensesMoveSeatsItemOutput() LicensesMoveSeatsItemOutput {
	return i.ToLicensesMoveSeatsItemOutputWithContext(context.Background())
}

func (i LicensesMoveSeatsItemArgs) ToLicensesMoveSeatsItemOutputWithContext(ctx context.Context) LicensesMoveSeatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsItemOutput)
}

func (i LicensesMoveSeatsItemArgs) ToLicensesMoveSeatsItemPtrOutput() LicensesMoveSeatsItemPtrOutput {
	return i.ToLicensesMoveSeatsItemPtrOutputWithContext(context.Background())
}

func (i LicensesMoveSeatsItemArgs) ToLicensesMoveSeatsItemPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsItemOutput).ToLicensesMoveSeatsItemPtrOutputWithContext(ctx)
}

// LicensesMoveSeatsItemPtrInput is an input type that accepts LicensesMoveSeatsItemArgs, LicensesMoveSeatsItemPtr and LicensesMoveSeatsItemPtrOutput values.
// You can construct a concrete instance of `LicensesMoveSeatsItemPtrInput` via:
//
//	        LicensesMoveSeatsItemArgs{...}
//
//	or:
//
//	        nil
type LicensesMoveSeatsItemPtrInput interface {
	pulumi.Input

	ToLicensesMoveSeatsItemPtrOutput() LicensesMoveSeatsItemPtrOutput
	ToLicensesMoveSeatsItemPtrOutputWithContext(context.Context) LicensesMoveSeatsItemPtrOutput
}

type licensesMoveSeatsItemPtrType LicensesMoveSeatsItemArgs

func LicensesMoveSeatsItemPtr(v *LicensesMoveSeatsItemArgs) LicensesMoveSeatsItemPtrInput {
	return (*licensesMoveSeatsItemPtrType)(v)
}

func (*licensesMoveSeatsItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveSeatsItem)(nil)).Elem()
}

func (i *licensesMoveSeatsItemPtrType) ToLicensesMoveSeatsItemPtrOutput() LicensesMoveSeatsItemPtrOutput {
	return i.ToLicensesMoveSeatsItemPtrOutputWithContext(context.Background())
}

func (i *licensesMoveSeatsItemPtrType) ToLicensesMoveSeatsItemPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsItemPtrOutput)
}

type LicensesMoveSeatsItemOutput struct{ *pulumi.OutputState }

func (LicensesMoveSeatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveSeatsItem)(nil)).Elem()
}

func (o LicensesMoveSeatsItemOutput) ToLicensesMoveSeatsItemOutput() LicensesMoveSeatsItemOutput {
	return o
}

func (o LicensesMoveSeatsItemOutput) ToLicensesMoveSeatsItemOutputWithContext(ctx context.Context) LicensesMoveSeatsItemOutput {
	return o
}

func (o LicensesMoveSeatsItemOutput) ToLicensesMoveSeatsItemPtrOutput() LicensesMoveSeatsItemPtrOutput {
	return o.ToLicensesMoveSeatsItemPtrOutputWithContext(context.Background())
}

func (o LicensesMoveSeatsItemOutput) ToLicensesMoveSeatsItemPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesMoveSeatsItem) *LicensesMoveSeatsItem {
		return &v
	}).(LicensesMoveSeatsItemPtrOutput)
}

// The ID of the organization to move the SM seats to
func (o LicensesMoveSeatsItemOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsItem) *string { return v.DestOrganizationId }).(pulumi.StringPtrOutput)
}

// The ID of the SM license to move the seats from
func (o LicensesMoveSeatsItemOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsItem) *string { return v.LicenseId }).(pulumi.StringPtrOutput)
}

// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
func (o LicensesMoveSeatsItemOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsItem) *int { return v.SeatCount }).(pulumi.IntPtrOutput)
}

type LicensesMoveSeatsItemPtrOutput struct{ *pulumi.OutputState }

func (LicensesMoveSeatsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveSeatsItem)(nil)).Elem()
}

func (o LicensesMoveSeatsItemPtrOutput) ToLicensesMoveSeatsItemPtrOutput() LicensesMoveSeatsItemPtrOutput {
	return o
}

func (o LicensesMoveSeatsItemPtrOutput) ToLicensesMoveSeatsItemPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsItemPtrOutput {
	return o
}

func (o LicensesMoveSeatsItemPtrOutput) Elem() LicensesMoveSeatsItemOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsItem) LicensesMoveSeatsItem {
		if v != nil {
			return *v
		}
		var ret LicensesMoveSeatsItem
		return ret
	}).(LicensesMoveSeatsItemOutput)
}

// The ID of the organization to move the SM seats to
func (o LicensesMoveSeatsItemPtrOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsItem) *string {
		if v == nil {
			return nil
		}
		return v.DestOrganizationId
	}).(pulumi.StringPtrOutput)
}

// The ID of the SM license to move the seats from
func (o LicensesMoveSeatsItemPtrOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsItem) *string {
		if v == nil {
			return nil
		}
		return v.LicenseId
	}).(pulumi.StringPtrOutput)
}

// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
func (o LicensesMoveSeatsItemPtrOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsItem) *int {
		if v == nil {
			return nil
		}
		return v.SeatCount
	}).(pulumi.IntPtrOutput)
}

type LicensesMoveSeatsParameters struct {
	// The ID of the organization to move the SM seats to
	DestOrganizationId *string `pulumi:"destOrganizationId"`
	// The ID of the SM license to move the seats from
	LicenseId *string `pulumi:"licenseId"`
	// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
	SeatCount *int `pulumi:"seatCount"`
}

// LicensesMoveSeatsParametersInput is an input type that accepts LicensesMoveSeatsParametersArgs and LicensesMoveSeatsParametersOutput values.
// You can construct a concrete instance of `LicensesMoveSeatsParametersInput` via:
//
//	LicensesMoveSeatsParametersArgs{...}
type LicensesMoveSeatsParametersInput interface {
	pulumi.Input

	ToLicensesMoveSeatsParametersOutput() LicensesMoveSeatsParametersOutput
	ToLicensesMoveSeatsParametersOutputWithContext(context.Context) LicensesMoveSeatsParametersOutput
}

type LicensesMoveSeatsParametersArgs struct {
	// The ID of the organization to move the SM seats to
	DestOrganizationId pulumi.StringPtrInput `pulumi:"destOrganizationId"`
	// The ID of the SM license to move the seats from
	LicenseId pulumi.StringPtrInput `pulumi:"licenseId"`
	// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
	SeatCount pulumi.IntPtrInput `pulumi:"seatCount"`
}

func (LicensesMoveSeatsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveSeatsParameters)(nil)).Elem()
}

func (i LicensesMoveSeatsParametersArgs) ToLicensesMoveSeatsParametersOutput() LicensesMoveSeatsParametersOutput {
	return i.ToLicensesMoveSeatsParametersOutputWithContext(context.Background())
}

func (i LicensesMoveSeatsParametersArgs) ToLicensesMoveSeatsParametersOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsParametersOutput)
}

func (i LicensesMoveSeatsParametersArgs) ToLicensesMoveSeatsParametersPtrOutput() LicensesMoveSeatsParametersPtrOutput {
	return i.ToLicensesMoveSeatsParametersPtrOutputWithContext(context.Background())
}

func (i LicensesMoveSeatsParametersArgs) ToLicensesMoveSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsParametersOutput).ToLicensesMoveSeatsParametersPtrOutputWithContext(ctx)
}

// LicensesMoveSeatsParametersPtrInput is an input type that accepts LicensesMoveSeatsParametersArgs, LicensesMoveSeatsParametersPtr and LicensesMoveSeatsParametersPtrOutput values.
// You can construct a concrete instance of `LicensesMoveSeatsParametersPtrInput` via:
//
//	        LicensesMoveSeatsParametersArgs{...}
//
//	or:
//
//	        nil
type LicensesMoveSeatsParametersPtrInput interface {
	pulumi.Input

	ToLicensesMoveSeatsParametersPtrOutput() LicensesMoveSeatsParametersPtrOutput
	ToLicensesMoveSeatsParametersPtrOutputWithContext(context.Context) LicensesMoveSeatsParametersPtrOutput
}

type licensesMoveSeatsParametersPtrType LicensesMoveSeatsParametersArgs

func LicensesMoveSeatsParametersPtr(v *LicensesMoveSeatsParametersArgs) LicensesMoveSeatsParametersPtrInput {
	return (*licensesMoveSeatsParametersPtrType)(v)
}

func (*licensesMoveSeatsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveSeatsParameters)(nil)).Elem()
}

func (i *licensesMoveSeatsParametersPtrType) ToLicensesMoveSeatsParametersPtrOutput() LicensesMoveSeatsParametersPtrOutput {
	return i.ToLicensesMoveSeatsParametersPtrOutputWithContext(context.Background())
}

func (i *licensesMoveSeatsParametersPtrType) ToLicensesMoveSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesMoveSeatsParametersPtrOutput)
}

type LicensesMoveSeatsParametersOutput struct{ *pulumi.OutputState }

func (LicensesMoveSeatsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesMoveSeatsParameters)(nil)).Elem()
}

func (o LicensesMoveSeatsParametersOutput) ToLicensesMoveSeatsParametersOutput() LicensesMoveSeatsParametersOutput {
	return o
}

func (o LicensesMoveSeatsParametersOutput) ToLicensesMoveSeatsParametersOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersOutput {
	return o
}

func (o LicensesMoveSeatsParametersOutput) ToLicensesMoveSeatsParametersPtrOutput() LicensesMoveSeatsParametersPtrOutput {
	return o.ToLicensesMoveSeatsParametersPtrOutputWithContext(context.Background())
}

func (o LicensesMoveSeatsParametersOutput) ToLicensesMoveSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesMoveSeatsParameters) *LicensesMoveSeatsParameters {
		return &v
	}).(LicensesMoveSeatsParametersPtrOutput)
}

// The ID of the organization to move the SM seats to
func (o LicensesMoveSeatsParametersOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsParameters) *string { return v.DestOrganizationId }).(pulumi.StringPtrOutput)
}

// The ID of the SM license to move the seats from
func (o LicensesMoveSeatsParametersOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsParameters) *string { return v.LicenseId }).(pulumi.StringPtrOutput)
}

// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
func (o LicensesMoveSeatsParametersOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesMoveSeatsParameters) *int { return v.SeatCount }).(pulumi.IntPtrOutput)
}

type LicensesMoveSeatsParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensesMoveSeatsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesMoveSeatsParameters)(nil)).Elem()
}

func (o LicensesMoveSeatsParametersPtrOutput) ToLicensesMoveSeatsParametersPtrOutput() LicensesMoveSeatsParametersPtrOutput {
	return o
}

func (o LicensesMoveSeatsParametersPtrOutput) ToLicensesMoveSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesMoveSeatsParametersPtrOutput {
	return o
}

func (o LicensesMoveSeatsParametersPtrOutput) Elem() LicensesMoveSeatsParametersOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsParameters) LicensesMoveSeatsParameters {
		if v != nil {
			return *v
		}
		var ret LicensesMoveSeatsParameters
		return ret
	}).(LicensesMoveSeatsParametersOutput)
}

// The ID of the organization to move the SM seats to
func (o LicensesMoveSeatsParametersPtrOutput) DestOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.DestOrganizationId
	}).(pulumi.StringPtrOutput)
}

// The ID of the SM license to move the seats from
func (o LicensesMoveSeatsParametersPtrOutput) LicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LicenseId
	}).(pulumi.StringPtrOutput)
}

// The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
func (o LicensesMoveSeatsParametersPtrOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensesMoveSeatsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SeatCount
	}).(pulumi.IntPtrOutput)
}

type LicensesPermanentlyQueuedLicense struct {
	// The duration of the individual license
	DurationInDays *int `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id *string `pulumi:"id"`
	// License key
	LicenseKey *string `pulumi:"licenseKey"`
	// License type
	LicenseType *string `pulumi:"licenseType"`
	// Order number
	OrderNumber *string `pulumi:"orderNumber"`
}

// LicensesPermanentlyQueuedLicenseInput is an input type that accepts LicensesPermanentlyQueuedLicenseArgs and LicensesPermanentlyQueuedLicenseOutput values.
// You can construct a concrete instance of `LicensesPermanentlyQueuedLicenseInput` via:
//
//	LicensesPermanentlyQueuedLicenseArgs{...}
type LicensesPermanentlyQueuedLicenseInput interface {
	pulumi.Input

	ToLicensesPermanentlyQueuedLicenseOutput() LicensesPermanentlyQueuedLicenseOutput
	ToLicensesPermanentlyQueuedLicenseOutputWithContext(context.Context) LicensesPermanentlyQueuedLicenseOutput
}

type LicensesPermanentlyQueuedLicenseArgs struct {
	// The duration of the individual license
	DurationInDays pulumi.IntPtrInput `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// Order number
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
}

func (LicensesPermanentlyQueuedLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesPermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesPermanentlyQueuedLicenseArgs) ToLicensesPermanentlyQueuedLicenseOutput() LicensesPermanentlyQueuedLicenseOutput {
	return i.ToLicensesPermanentlyQueuedLicenseOutputWithContext(context.Background())
}

func (i LicensesPermanentlyQueuedLicenseArgs) ToLicensesPermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesPermanentlyQueuedLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesPermanentlyQueuedLicenseOutput)
}

// LicensesPermanentlyQueuedLicenseArrayInput is an input type that accepts LicensesPermanentlyQueuedLicenseArray and LicensesPermanentlyQueuedLicenseArrayOutput values.
// You can construct a concrete instance of `LicensesPermanentlyQueuedLicenseArrayInput` via:
//
//	LicensesPermanentlyQueuedLicenseArray{ LicensesPermanentlyQueuedLicenseArgs{...} }
type LicensesPermanentlyQueuedLicenseArrayInput interface {
	pulumi.Input

	ToLicensesPermanentlyQueuedLicenseArrayOutput() LicensesPermanentlyQueuedLicenseArrayOutput
	ToLicensesPermanentlyQueuedLicenseArrayOutputWithContext(context.Context) LicensesPermanentlyQueuedLicenseArrayOutput
}

type LicensesPermanentlyQueuedLicenseArray []LicensesPermanentlyQueuedLicenseInput

func (LicensesPermanentlyQueuedLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesPermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesPermanentlyQueuedLicenseArray) ToLicensesPermanentlyQueuedLicenseArrayOutput() LicensesPermanentlyQueuedLicenseArrayOutput {
	return i.ToLicensesPermanentlyQueuedLicenseArrayOutputWithContext(context.Background())
}

func (i LicensesPermanentlyQueuedLicenseArray) ToLicensesPermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesPermanentlyQueuedLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesPermanentlyQueuedLicenseArrayOutput)
}

type LicensesPermanentlyQueuedLicenseOutput struct{ *pulumi.OutputState }

func (LicensesPermanentlyQueuedLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesPermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesPermanentlyQueuedLicenseOutput) ToLicensesPermanentlyQueuedLicenseOutput() LicensesPermanentlyQueuedLicenseOutput {
	return o
}

func (o LicensesPermanentlyQueuedLicenseOutput) ToLicensesPermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesPermanentlyQueuedLicenseOutput {
	return o
}

// The duration of the individual license
func (o LicensesPermanentlyQueuedLicenseOutput) DurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesPermanentlyQueuedLicense) *int { return v.DurationInDays }).(pulumi.IntPtrOutput)
}

// Permanently queued license ID
func (o LicensesPermanentlyQueuedLicenseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesPermanentlyQueuedLicense) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// License key
func (o LicensesPermanentlyQueuedLicenseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesPermanentlyQueuedLicense) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// License type
func (o LicensesPermanentlyQueuedLicenseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesPermanentlyQueuedLicense) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// Order number
func (o LicensesPermanentlyQueuedLicenseOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesPermanentlyQueuedLicense) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

type LicensesPermanentlyQueuedLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensesPermanentlyQueuedLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesPermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesPermanentlyQueuedLicenseArrayOutput) ToLicensesPermanentlyQueuedLicenseArrayOutput() LicensesPermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesPermanentlyQueuedLicenseArrayOutput) ToLicensesPermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesPermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesPermanentlyQueuedLicenseArrayOutput) Index(i pulumi.IntInput) LicensesPermanentlyQueuedLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensesPermanentlyQueuedLicense {
		return vs[0].([]LicensesPermanentlyQueuedLicense)[vs[1].(int)]
	}).(LicensesPermanentlyQueuedLicenseOutput)
}

type LicensesRenewSeatsItem struct {
	// Resulting licenses from the move
	ResultingLicenses []LicensesRenewSeatsItemResultingLicense `pulumi:"resultingLicenses"`
}

// LicensesRenewSeatsItemInput is an input type that accepts LicensesRenewSeatsItemArgs and LicensesRenewSeatsItemOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemInput` via:
//
//	LicensesRenewSeatsItemArgs{...}
type LicensesRenewSeatsItemInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemOutput() LicensesRenewSeatsItemOutput
	ToLicensesRenewSeatsItemOutputWithContext(context.Context) LicensesRenewSeatsItemOutput
}

type LicensesRenewSeatsItemArgs struct {
	// Resulting licenses from the move
	ResultingLicenses LicensesRenewSeatsItemResultingLicenseArrayInput `pulumi:"resultingLicenses"`
}

func (LicensesRenewSeatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItem)(nil)).Elem()
}

func (i LicensesRenewSeatsItemArgs) ToLicensesRenewSeatsItemOutput() LicensesRenewSeatsItemOutput {
	return i.ToLicensesRenewSeatsItemOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemArgs) ToLicensesRenewSeatsItemOutputWithContext(ctx context.Context) LicensesRenewSeatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemOutput)
}

func (i LicensesRenewSeatsItemArgs) ToLicensesRenewSeatsItemPtrOutput() LicensesRenewSeatsItemPtrOutput {
	return i.ToLicensesRenewSeatsItemPtrOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemArgs) ToLicensesRenewSeatsItemPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemOutput).ToLicensesRenewSeatsItemPtrOutputWithContext(ctx)
}

// LicensesRenewSeatsItemPtrInput is an input type that accepts LicensesRenewSeatsItemArgs, LicensesRenewSeatsItemPtr and LicensesRenewSeatsItemPtrOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemPtrInput` via:
//
//	        LicensesRenewSeatsItemArgs{...}
//
//	or:
//
//	        nil
type LicensesRenewSeatsItemPtrInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemPtrOutput() LicensesRenewSeatsItemPtrOutput
	ToLicensesRenewSeatsItemPtrOutputWithContext(context.Context) LicensesRenewSeatsItemPtrOutput
}

type licensesRenewSeatsItemPtrType LicensesRenewSeatsItemArgs

func LicensesRenewSeatsItemPtr(v *LicensesRenewSeatsItemArgs) LicensesRenewSeatsItemPtrInput {
	return (*licensesRenewSeatsItemPtrType)(v)
}

func (*licensesRenewSeatsItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesRenewSeatsItem)(nil)).Elem()
}

func (i *licensesRenewSeatsItemPtrType) ToLicensesRenewSeatsItemPtrOutput() LicensesRenewSeatsItemPtrOutput {
	return i.ToLicensesRenewSeatsItemPtrOutputWithContext(context.Background())
}

func (i *licensesRenewSeatsItemPtrType) ToLicensesRenewSeatsItemPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemPtrOutput)
}

type LicensesRenewSeatsItemOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItem)(nil)).Elem()
}

func (o LicensesRenewSeatsItemOutput) ToLicensesRenewSeatsItemOutput() LicensesRenewSeatsItemOutput {
	return o
}

func (o LicensesRenewSeatsItemOutput) ToLicensesRenewSeatsItemOutputWithContext(ctx context.Context) LicensesRenewSeatsItemOutput {
	return o
}

func (o LicensesRenewSeatsItemOutput) ToLicensesRenewSeatsItemPtrOutput() LicensesRenewSeatsItemPtrOutput {
	return o.ToLicensesRenewSeatsItemPtrOutputWithContext(context.Background())
}

func (o LicensesRenewSeatsItemOutput) ToLicensesRenewSeatsItemPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesRenewSeatsItem) *LicensesRenewSeatsItem {
		return &v
	}).(LicensesRenewSeatsItemPtrOutput)
}

// Resulting licenses from the move
func (o LicensesRenewSeatsItemOutput) ResultingLicenses() LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItem) []LicensesRenewSeatsItemResultingLicense { return v.ResultingLicenses }).(LicensesRenewSeatsItemResultingLicenseArrayOutput)
}

type LicensesRenewSeatsItemPtrOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesRenewSeatsItem)(nil)).Elem()
}

func (o LicensesRenewSeatsItemPtrOutput) ToLicensesRenewSeatsItemPtrOutput() LicensesRenewSeatsItemPtrOutput {
	return o
}

func (o LicensesRenewSeatsItemPtrOutput) ToLicensesRenewSeatsItemPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsItemPtrOutput {
	return o
}

func (o LicensesRenewSeatsItemPtrOutput) Elem() LicensesRenewSeatsItemOutput {
	return o.ApplyT(func(v *LicensesRenewSeatsItem) LicensesRenewSeatsItem {
		if v != nil {
			return *v
		}
		var ret LicensesRenewSeatsItem
		return ret
	}).(LicensesRenewSeatsItemOutput)
}

// Resulting licenses from the move
func (o LicensesRenewSeatsItemPtrOutput) ResultingLicenses() LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return o.ApplyT(func(v *LicensesRenewSeatsItem) []LicensesRenewSeatsItemResultingLicense {
		if v == nil {
			return nil
		}
		return v.ResultingLicenses
	}).(LicensesRenewSeatsItemResultingLicenseArrayOutput)
}

type LicensesRenewSeatsItemResultingLicense struct {
	// The date the license started burning
	ActivationDate *string `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate *string `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial *string `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays *int `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate *string `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId *string `pulumi:"headLicenseId"`
	// License ID
	Id *string `pulumi:"id"`
	// License key
	LicenseKey *string `pulumi:"licenseKey"`
	// License type
	LicenseType *string `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId *string `pulumi:"networkId"`
	// Order number
	OrderNumber *string `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses []LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount *int `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State *string `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays *int `pulumi:"totalDurationInDays"`
}

// LicensesRenewSeatsItemResultingLicenseInput is an input type that accepts LicensesRenewSeatsItemResultingLicenseArgs and LicensesRenewSeatsItemResultingLicenseOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemResultingLicenseInput` via:
//
//	LicensesRenewSeatsItemResultingLicenseArgs{...}
type LicensesRenewSeatsItemResultingLicenseInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemResultingLicenseOutput() LicensesRenewSeatsItemResultingLicenseOutput
	ToLicensesRenewSeatsItemResultingLicenseOutputWithContext(context.Context) LicensesRenewSeatsItemResultingLicenseOutput
}

type LicensesRenewSeatsItemResultingLicenseArgs struct {
	// The date the license started burning
	ActivationDate pulumi.StringPtrInput `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate pulumi.StringPtrInput `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial pulumi.StringPtrInput `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays pulumi.IntPtrInput `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId pulumi.StringPtrInput `pulumi:"headLicenseId"`
	// License ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Order number
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount pulumi.IntPtrInput `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays pulumi.IntPtrInput `pulumi:"totalDurationInDays"`
}

func (LicensesRenewSeatsItemResultingLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItemResultingLicense)(nil)).Elem()
}

func (i LicensesRenewSeatsItemResultingLicenseArgs) ToLicensesRenewSeatsItemResultingLicenseOutput() LicensesRenewSeatsItemResultingLicenseOutput {
	return i.ToLicensesRenewSeatsItemResultingLicenseOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemResultingLicenseArgs) ToLicensesRenewSeatsItemResultingLicenseOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemResultingLicenseOutput)
}

// LicensesRenewSeatsItemResultingLicenseArrayInput is an input type that accepts LicensesRenewSeatsItemResultingLicenseArray and LicensesRenewSeatsItemResultingLicenseArrayOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemResultingLicenseArrayInput` via:
//
//	LicensesRenewSeatsItemResultingLicenseArray{ LicensesRenewSeatsItemResultingLicenseArgs{...} }
type LicensesRenewSeatsItemResultingLicenseArrayInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemResultingLicenseArrayOutput() LicensesRenewSeatsItemResultingLicenseArrayOutput
	ToLicensesRenewSeatsItemResultingLicenseArrayOutputWithContext(context.Context) LicensesRenewSeatsItemResultingLicenseArrayOutput
}

type LicensesRenewSeatsItemResultingLicenseArray []LicensesRenewSeatsItemResultingLicenseInput

func (LicensesRenewSeatsItemResultingLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesRenewSeatsItemResultingLicense)(nil)).Elem()
}

func (i LicensesRenewSeatsItemResultingLicenseArray) ToLicensesRenewSeatsItemResultingLicenseArrayOutput() LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return i.ToLicensesRenewSeatsItemResultingLicenseArrayOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemResultingLicenseArray) ToLicensesRenewSeatsItemResultingLicenseArrayOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemResultingLicenseArrayOutput)
}

type LicensesRenewSeatsItemResultingLicenseOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemResultingLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItemResultingLicense)(nil)).Elem()
}

func (o LicensesRenewSeatsItemResultingLicenseOutput) ToLicensesRenewSeatsItemResultingLicenseOutput() LicensesRenewSeatsItemResultingLicenseOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicenseOutput) ToLicensesRenewSeatsItemResultingLicenseOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicenseOutput {
	return o
}

// The date the license started burning
func (o LicensesRenewSeatsItemResultingLicenseOutput) ActivationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.ActivationDate }).(pulumi.StringPtrOutput)
}

// The date the license was claimed into the organization
func (o LicensesRenewSeatsItemResultingLicenseOutput) ClaimDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.ClaimDate }).(pulumi.StringPtrOutput)
}

// Serial number of the device the license is assigned to
func (o LicensesRenewSeatsItemResultingLicenseOutput) DeviceSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.DeviceSerial }).(pulumi.StringPtrOutput)
}

// The duration of the individual license
func (o LicensesRenewSeatsItemResultingLicenseOutput) DurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *int { return v.DurationInDays }).(pulumi.IntPtrOutput)
}

// The date the license will expire
func (o LicensesRenewSeatsItemResultingLicenseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The id of the head license this license is queued behind. If there is no head license, it returns nil.
func (o LicensesRenewSeatsItemResultingLicenseOutput) HeadLicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.HeadLicenseId }).(pulumi.StringPtrOutput)
}

// License ID
func (o LicensesRenewSeatsItemResultingLicenseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// License key
func (o LicensesRenewSeatsItemResultingLicenseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// License type
func (o LicensesRenewSeatsItemResultingLicenseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// ID of the network the license is assigned to
func (o LicensesRenewSeatsItemResultingLicenseOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Order number
func (o LicensesRenewSeatsItemResultingLicenseOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
func (o LicensesRenewSeatsItemResultingLicenseOutput) PermanentlyQueuedLicenses() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) []LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense {
		return v.PermanentlyQueuedLicenses
	}).(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput)
}

// The number of seats of the license. Only applicable to SM licenses.
func (o LicensesRenewSeatsItemResultingLicenseOutput) SeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *int { return v.SeatCount }).(pulumi.IntPtrOutput)
}

// The state of the license. All queued licenses have a status of *recentlyQueued*.
func (o LicensesRenewSeatsItemResultingLicenseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The duration of the license plus all permanently queued licenses associated with it
func (o LicensesRenewSeatsItemResultingLicenseOutput) TotalDurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicense) *int { return v.TotalDurationInDays }).(pulumi.IntPtrOutput)
}

type LicensesRenewSeatsItemResultingLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemResultingLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesRenewSeatsItemResultingLicense)(nil)).Elem()
}

func (o LicensesRenewSeatsItemResultingLicenseArrayOutput) ToLicensesRenewSeatsItemResultingLicenseArrayOutput() LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicenseArrayOutput) ToLicensesRenewSeatsItemResultingLicenseArrayOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicenseArrayOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicenseArrayOutput) Index(i pulumi.IntInput) LicensesRenewSeatsItemResultingLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensesRenewSeatsItemResultingLicense {
		return vs[0].([]LicensesRenewSeatsItemResultingLicense)[vs[1].(int)]
	}).(LicensesRenewSeatsItemResultingLicenseOutput)
}

type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense struct {
	// The duration of the individual license
	DurationInDays *int `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id *string `pulumi:"id"`
	// License key
	LicenseKey *string `pulumi:"licenseKey"`
	// License type
	LicenseType *string `pulumi:"licenseType"`
	// Order number
	OrderNumber *string `pulumi:"orderNumber"`
}

// LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseInput is an input type that accepts LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs and LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseInput` via:
//
//	LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{...}
type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput
	ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput
}

type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs struct {
	// The duration of the individual license
	DurationInDays pulumi.IntPtrInput `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// Order number
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
}

func (LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return i.ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput)
}

// LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput is an input type that accepts LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray and LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput` via:
//
//	LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray{ LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{...} }
type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput interface {
	pulumi.Input

	ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput
	ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput
}

type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray []LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseInput

func (LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (i LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return i.ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput)
}

type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return o
}

// The duration of the individual license
func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) DurationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense) *int { return v.DurationInDays }).(pulumi.IntPtrOutput)
}

// Permanently queued license ID
func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// License key
func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// License type
func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// Order number
func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

type LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense)(nil)).Elem()
}

func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput() LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) ToLicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput) Index(i pulumi.IntInput) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense {
		return vs[0].([]LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicense)[vs[1].(int)]
	}).(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput)
}

type LicensesRenewSeatsParameters struct {
	// The ID of the SM license to renew. This license must already be assigned to an SM network
	LicenseIdToRenew *string `pulumi:"licenseIdToRenew"`
	// The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
	UnusedLicenseId *string `pulumi:"unusedLicenseId"`
}

// LicensesRenewSeatsParametersInput is an input type that accepts LicensesRenewSeatsParametersArgs and LicensesRenewSeatsParametersOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsParametersInput` via:
//
//	LicensesRenewSeatsParametersArgs{...}
type LicensesRenewSeatsParametersInput interface {
	pulumi.Input

	ToLicensesRenewSeatsParametersOutput() LicensesRenewSeatsParametersOutput
	ToLicensesRenewSeatsParametersOutputWithContext(context.Context) LicensesRenewSeatsParametersOutput
}

type LicensesRenewSeatsParametersArgs struct {
	// The ID of the SM license to renew. This license must already be assigned to an SM network
	LicenseIdToRenew pulumi.StringPtrInput `pulumi:"licenseIdToRenew"`
	// The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
	UnusedLicenseId pulumi.StringPtrInput `pulumi:"unusedLicenseId"`
}

func (LicensesRenewSeatsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsParameters)(nil)).Elem()
}

func (i LicensesRenewSeatsParametersArgs) ToLicensesRenewSeatsParametersOutput() LicensesRenewSeatsParametersOutput {
	return i.ToLicensesRenewSeatsParametersOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsParametersArgs) ToLicensesRenewSeatsParametersOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsParametersOutput)
}

func (i LicensesRenewSeatsParametersArgs) ToLicensesRenewSeatsParametersPtrOutput() LicensesRenewSeatsParametersPtrOutput {
	return i.ToLicensesRenewSeatsParametersPtrOutputWithContext(context.Background())
}

func (i LicensesRenewSeatsParametersArgs) ToLicensesRenewSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsParametersOutput).ToLicensesRenewSeatsParametersPtrOutputWithContext(ctx)
}

// LicensesRenewSeatsParametersPtrInput is an input type that accepts LicensesRenewSeatsParametersArgs, LicensesRenewSeatsParametersPtr and LicensesRenewSeatsParametersPtrOutput values.
// You can construct a concrete instance of `LicensesRenewSeatsParametersPtrInput` via:
//
//	        LicensesRenewSeatsParametersArgs{...}
//
//	or:
//
//	        nil
type LicensesRenewSeatsParametersPtrInput interface {
	pulumi.Input

	ToLicensesRenewSeatsParametersPtrOutput() LicensesRenewSeatsParametersPtrOutput
	ToLicensesRenewSeatsParametersPtrOutputWithContext(context.Context) LicensesRenewSeatsParametersPtrOutput
}

type licensesRenewSeatsParametersPtrType LicensesRenewSeatsParametersArgs

func LicensesRenewSeatsParametersPtr(v *LicensesRenewSeatsParametersArgs) LicensesRenewSeatsParametersPtrInput {
	return (*licensesRenewSeatsParametersPtrType)(v)
}

func (*licensesRenewSeatsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesRenewSeatsParameters)(nil)).Elem()
}

func (i *licensesRenewSeatsParametersPtrType) ToLicensesRenewSeatsParametersPtrOutput() LicensesRenewSeatsParametersPtrOutput {
	return i.ToLicensesRenewSeatsParametersPtrOutputWithContext(context.Background())
}

func (i *licensesRenewSeatsParametersPtrType) ToLicensesRenewSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensesRenewSeatsParametersPtrOutput)
}

type LicensesRenewSeatsParametersOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensesRenewSeatsParameters)(nil)).Elem()
}

func (o LicensesRenewSeatsParametersOutput) ToLicensesRenewSeatsParametersOutput() LicensesRenewSeatsParametersOutput {
	return o
}

func (o LicensesRenewSeatsParametersOutput) ToLicensesRenewSeatsParametersOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersOutput {
	return o
}

func (o LicensesRenewSeatsParametersOutput) ToLicensesRenewSeatsParametersPtrOutput() LicensesRenewSeatsParametersPtrOutput {
	return o.ToLicensesRenewSeatsParametersPtrOutputWithContext(context.Background())
}

func (o LicensesRenewSeatsParametersOutput) ToLicensesRenewSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensesRenewSeatsParameters) *LicensesRenewSeatsParameters {
		return &v
	}).(LicensesRenewSeatsParametersPtrOutput)
}

// The ID of the SM license to renew. This license must already be assigned to an SM network
func (o LicensesRenewSeatsParametersOutput) LicenseIdToRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsParameters) *string { return v.LicenseIdToRenew }).(pulumi.StringPtrOutput)
}

// The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
func (o LicensesRenewSeatsParametersOutput) UnusedLicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensesRenewSeatsParameters) *string { return v.UnusedLicenseId }).(pulumi.StringPtrOutput)
}

type LicensesRenewSeatsParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensesRenewSeatsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensesRenewSeatsParameters)(nil)).Elem()
}

func (o LicensesRenewSeatsParametersPtrOutput) ToLicensesRenewSeatsParametersPtrOutput() LicensesRenewSeatsParametersPtrOutput {
	return o
}

func (o LicensesRenewSeatsParametersPtrOutput) ToLicensesRenewSeatsParametersPtrOutputWithContext(ctx context.Context) LicensesRenewSeatsParametersPtrOutput {
	return o
}

func (o LicensesRenewSeatsParametersPtrOutput) Elem() LicensesRenewSeatsParametersOutput {
	return o.ApplyT(func(v *LicensesRenewSeatsParameters) LicensesRenewSeatsParameters {
		if v != nil {
			return *v
		}
		var ret LicensesRenewSeatsParameters
		return ret
	}).(LicensesRenewSeatsParametersOutput)
}

// The ID of the SM license to renew. This license must already be assigned to an SM network
func (o LicensesRenewSeatsParametersPtrOutput) LicenseIdToRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesRenewSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LicenseIdToRenew
	}).(pulumi.StringPtrOutput)
}

// The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
func (o LicensesRenewSeatsParametersPtrOutput) UnusedLicenseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensesRenewSeatsParameters) *string {
		if v == nil {
			return nil
		}
		return v.UnusedLicenseId
	}).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItem struct {
	// Newly moved licenses created in the destination organization of the license move operation
	MovedLicenses []LicensingCotermLicensesMoveItemMovedLicense `pulumi:"movedLicenses"`
	// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
	RemainderLicenses []LicensingCotermLicensesMoveItemRemainderLicense `pulumi:"remainderLicenses"`
}

// LicensingCotermLicensesMoveItemInput is an input type that accepts LicensingCotermLicensesMoveItemArgs and LicensingCotermLicensesMoveItemOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemInput` via:
//
//	LicensingCotermLicensesMoveItemArgs{...}
type LicensingCotermLicensesMoveItemInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemOutput() LicensingCotermLicensesMoveItemOutput
	ToLicensingCotermLicensesMoveItemOutputWithContext(context.Context) LicensingCotermLicensesMoveItemOutput
}

type LicensingCotermLicensesMoveItemArgs struct {
	// Newly moved licenses created in the destination organization of the license move operation
	MovedLicenses LicensingCotermLicensesMoveItemMovedLicenseArrayInput `pulumi:"movedLicenses"`
	// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
	RemainderLicenses LicensingCotermLicensesMoveItemRemainderLicenseArrayInput `pulumi:"remainderLicenses"`
}

func (LicensingCotermLicensesMoveItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItem)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemArgs) ToLicensingCotermLicensesMoveItemOutput() LicensingCotermLicensesMoveItemOutput {
	return i.ToLicensingCotermLicensesMoveItemOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemArgs) ToLicensingCotermLicensesMoveItemOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemOutput)
}

func (i LicensingCotermLicensesMoveItemArgs) ToLicensingCotermLicensesMoveItemPtrOutput() LicensingCotermLicensesMoveItemPtrOutput {
	return i.ToLicensingCotermLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemArgs) ToLicensingCotermLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemOutput).ToLicensingCotermLicensesMoveItemPtrOutputWithContext(ctx)
}

// LicensingCotermLicensesMoveItemPtrInput is an input type that accepts LicensingCotermLicensesMoveItemArgs, LicensingCotermLicensesMoveItemPtr and LicensingCotermLicensesMoveItemPtrOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemPtrInput` via:
//
//	        LicensingCotermLicensesMoveItemArgs{...}
//
//	or:
//
//	        nil
type LicensingCotermLicensesMoveItemPtrInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemPtrOutput() LicensingCotermLicensesMoveItemPtrOutput
	ToLicensingCotermLicensesMoveItemPtrOutputWithContext(context.Context) LicensingCotermLicensesMoveItemPtrOutput
}

type licensingCotermLicensesMoveItemPtrType LicensingCotermLicensesMoveItemArgs

func LicensingCotermLicensesMoveItemPtr(v *LicensingCotermLicensesMoveItemArgs) LicensingCotermLicensesMoveItemPtrInput {
	return (*licensingCotermLicensesMoveItemPtrType)(v)
}

func (*licensingCotermLicensesMoveItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveItem)(nil)).Elem()
}

func (i *licensingCotermLicensesMoveItemPtrType) ToLicensingCotermLicensesMoveItemPtrOutput() LicensingCotermLicensesMoveItemPtrOutput {
	return i.ToLicensingCotermLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (i *licensingCotermLicensesMoveItemPtrType) ToLicensingCotermLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemPtrOutput)
}

type LicensingCotermLicensesMoveItemOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItem)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemOutput) ToLicensingCotermLicensesMoveItemOutput() LicensingCotermLicensesMoveItemOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemOutput) ToLicensingCotermLicensesMoveItemOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemOutput) ToLicensingCotermLicensesMoveItemPtrOutput() LicensingCotermLicensesMoveItemPtrOutput {
	return o.ToLicensingCotermLicensesMoveItemPtrOutputWithContext(context.Background())
}

func (o LicensingCotermLicensesMoveItemOutput) ToLicensingCotermLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingCotermLicensesMoveItem) *LicensingCotermLicensesMoveItem {
		return &v
	}).(LicensingCotermLicensesMoveItemPtrOutput)
}

// Newly moved licenses created in the destination organization of the license move operation
func (o LicensingCotermLicensesMoveItemOutput) MovedLicenses() LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItem) []LicensingCotermLicensesMoveItemMovedLicense {
		return v.MovedLicenses
	}).(LicensingCotermLicensesMoveItemMovedLicenseArrayOutput)
}

// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
func (o LicensingCotermLicensesMoveItemOutput) RemainderLicenses() LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItem) []LicensingCotermLicensesMoveItemRemainderLicense {
		return v.RemainderLicenses
	}).(LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput)
}

type LicensingCotermLicensesMoveItemPtrOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveItem)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemPtrOutput) ToLicensingCotermLicensesMoveItemPtrOutput() LicensingCotermLicensesMoveItemPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemPtrOutput) ToLicensingCotermLicensesMoveItemPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemPtrOutput) Elem() LicensingCotermLicensesMoveItemOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveItem) LicensingCotermLicensesMoveItem {
		if v != nil {
			return *v
		}
		var ret LicensingCotermLicensesMoveItem
		return ret
	}).(LicensingCotermLicensesMoveItemOutput)
}

// Newly moved licenses created in the destination organization of the license move operation
func (o LicensingCotermLicensesMoveItemPtrOutput) MovedLicenses() LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveItem) []LicensingCotermLicensesMoveItemMovedLicense {
		if v == nil {
			return nil
		}
		return v.MovedLicenses
	}).(LicensingCotermLicensesMoveItemMovedLicenseArrayOutput)
}

// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
func (o LicensingCotermLicensesMoveItemPtrOutput) RemainderLicenses() LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveItem) []LicensingCotermLicensesMoveItemRemainderLicense {
		if v == nil {
			return nil
		}
		return v.RemainderLicenses
	}).(LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput)
}

type LicensingCotermLicensesMoveItemMovedLicense struct {
	// When the license was claimed into the organization
	ClaimedAt *string `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts []LicensingCotermLicensesMoveItemMovedLicenseCount `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration *int `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions []LicensingCotermLicensesMoveItemMovedLicenseEdition `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired *bool `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated *bool `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt *string `pulumi:"invalidatedAt"`
	// The key of the license
	Key *string `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode *string `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId *string `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt *string `pulumi:"startedAt"`
}

// LicensingCotermLicensesMoveItemMovedLicenseInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseArgs and LicensingCotermLicensesMoveItemMovedLicenseOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseArgs{...}
type LicensingCotermLicensesMoveItemMovedLicenseInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseOutput() LicensingCotermLicensesMoveItemMovedLicenseOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseArgs struct {
	// When the license was claimed into the organization
	ClaimedAt pulumi.StringPtrInput `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts LicensingCotermLicensesMoveItemMovedLicenseCountArrayInput `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions LicensingCotermLicensesMoveItemMovedLicenseEditionArrayInput `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated pulumi.BoolPtrInput `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt pulumi.StringPtrInput `pulumi:"invalidatedAt"`
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (LicensingCotermLicensesMoveItemMovedLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseArgs) ToLicensingCotermLicensesMoveItemMovedLicenseOutput() LicensingCotermLicensesMoveItemMovedLicenseOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseArgs) ToLicensingCotermLicensesMoveItemMovedLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseOutput)
}

// LicensingCotermLicensesMoveItemMovedLicenseArrayInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseArray and LicensingCotermLicensesMoveItemMovedLicenseArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseArrayInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseArray{ LicensingCotermLicensesMoveItemMovedLicenseArgs{...} }
type LicensingCotermLicensesMoveItemMovedLicenseArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseArrayOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseArrayOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseArray []LicensingCotermLicensesMoveItemMovedLicenseInput

func (LicensingCotermLicensesMoveItemMovedLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseArray) ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseArray) ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseArrayOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) ToLicensingCotermLicensesMoveItemMovedLicenseOutput() LicensingCotermLicensesMoveItemMovedLicenseOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) ToLicensingCotermLicensesMoveItemMovedLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseOutput {
	return o
}

// When the license was claimed into the organization
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) ClaimedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.ClaimedAt }).(pulumi.StringPtrOutput)
}

// The counts of the license by model type
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Counts() LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) []LicensingCotermLicensesMoveItemMovedLicenseCount {
		return v.Counts
	}).(LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput)
}

// The duration (term length) of the license, measured in days
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The editions of the license for each relevant product type
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Editions() LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) []LicensingCotermLicensesMoveItemMovedLicenseEdition {
		return v.Editions
	}).(LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput)
}

// Flag to indicate if the license is expired
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// Flag to indicated that the license is invalidated
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Invalidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *bool { return v.Invalidated }).(pulumi.BoolPtrOutput)
}

// When the license was invalidated. Will be null for active licenses
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) InvalidatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.InvalidatedAt }).(pulumi.StringPtrOutput)
}

// The key of the license
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The operation mode of the license when it was claimed
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The ID of the organization that the license is claimed in
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// When the license's term began (approximately the date when the license was created)
func (o LicensingCotermLicensesMoveItemMovedLicenseOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicense) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemMovedLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemMovedLicense {
		return vs[0].([]LicensingCotermLicensesMoveItemMovedLicense)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemMovedLicenseOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseCount struct {
	// The number of counts the license contains of this model
	Count *int `pulumi:"count"`
	// The license model type
	Model *string `pulumi:"model"`
}

// LicensingCotermLicensesMoveItemMovedLicenseCountInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseCountArgs and LicensingCotermLicensesMoveItemMovedLicenseCountOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseCountInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseCountArgs{...}
type LicensingCotermLicensesMoveItemMovedLicenseCountInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseCountOutput() LicensingCotermLicensesMoveItemMovedLicenseCountOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseCountOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseCountArgs struct {
	// The number of counts the license contains of this model
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The license model type
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (LicensingCotermLicensesMoveItemMovedLicenseCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseCountArgs) ToLicensingCotermLicensesMoveItemMovedLicenseCountOutput() LicensingCotermLicensesMoveItemMovedLicenseCountOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseCountOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseCountArgs) ToLicensingCotermLicensesMoveItemMovedLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseCountOutput)
}

// LicensingCotermLicensesMoveItemMovedLicenseCountArrayInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseCountArray and LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseCountArrayInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseCountArray{ LicensingCotermLicensesMoveItemMovedLicenseCountArgs{...} }
type LicensingCotermLicensesMoveItemMovedLicenseCountArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseCountArray []LicensingCotermLicensesMoveItemMovedLicenseCountInput

func (LicensingCotermLicensesMoveItemMovedLicenseCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseCountArray) ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseCountArray) ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseCountOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseCountOutput) ToLicensingCotermLicensesMoveItemMovedLicenseCountOutput() LicensingCotermLicensesMoveItemMovedLicenseCountOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseCountOutput) ToLicensingCotermLicensesMoveItemMovedLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountOutput {
	return o
}

// The number of counts the license contains of this model
func (o LicensingCotermLicensesMoveItemMovedLicenseCountOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicenseCount) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The license model type
func (o LicensingCotermLicensesMoveItemMovedLicenseCountOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicenseCount) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemMovedLicenseCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemMovedLicenseCount {
		return vs[0].([]LicensingCotermLicensesMoveItemMovedLicenseCount)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemMovedLicenseCountOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseEdition struct {
	// The name of the license edition
	Edition *string `pulumi:"edition"`
	// The product type of the license edition
	ProductType *string `pulumi:"productType"`
}

// LicensingCotermLicensesMoveItemMovedLicenseEditionInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseEditionArgs and LicensingCotermLicensesMoveItemMovedLicenseEditionOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseEditionInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseEditionArgs{...}
type LicensingCotermLicensesMoveItemMovedLicenseEditionInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseEditionArgs struct {
	// The name of the license edition
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// The product type of the license edition
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
}

func (LicensingCotermLicensesMoveItemMovedLicenseEditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseEdition)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseEditionArgs) ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseEditionArgs) ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseEditionOutput)
}

// LicensingCotermLicensesMoveItemMovedLicenseEditionArrayInput is an input type that accepts LicensingCotermLicensesMoveItemMovedLicenseEditionArray and LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemMovedLicenseEditionArrayInput` via:
//
//	LicensingCotermLicensesMoveItemMovedLicenseEditionArray{ LicensingCotermLicensesMoveItemMovedLicenseEditionArgs{...} }
type LicensingCotermLicensesMoveItemMovedLicenseEditionArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput
	ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput
}

type LicensingCotermLicensesMoveItemMovedLicenseEditionArray []LicensingCotermLicensesMoveItemMovedLicenseEditionInput

func (LicensingCotermLicensesMoveItemMovedLicenseEditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicenseEdition)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemMovedLicenseEditionArray) ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemMovedLicenseEditionArray) ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseEditionOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseEdition)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseEditionOutput) ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseEditionOutput) ToLicensingCotermLicensesMoveItemMovedLicenseEditionOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionOutput {
	return o
}

// The name of the license edition
func (o LicensingCotermLicensesMoveItemMovedLicenseEditionOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicenseEdition) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// The product type of the license edition
func (o LicensingCotermLicensesMoveItemMovedLicenseEditionOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemMovedLicenseEdition) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemMovedLicenseEdition)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput) ToLicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemMovedLicenseEditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemMovedLicenseEdition {
		return vs[0].([]LicensingCotermLicensesMoveItemMovedLicenseEdition)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemMovedLicenseEditionOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicense struct {
	// When the license was claimed into the organization
	ClaimedAt *string `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts []LicensingCotermLicensesMoveItemRemainderLicenseCount `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration *int `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions []LicensingCotermLicensesMoveItemRemainderLicenseEdition `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired *bool `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated *bool `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt *string `pulumi:"invalidatedAt"`
	// The key of the license
	Key *string `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode *string `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId *string `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt *string `pulumi:"startedAt"`
}

// LicensingCotermLicensesMoveItemRemainderLicenseInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseArgs and LicensingCotermLicensesMoveItemRemainderLicenseOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseArgs{...}
type LicensingCotermLicensesMoveItemRemainderLicenseInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseOutput() LicensingCotermLicensesMoveItemRemainderLicenseOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseArgs struct {
	// When the license was claimed into the organization
	ClaimedAt pulumi.StringPtrInput `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts LicensingCotermLicensesMoveItemRemainderLicenseCountArrayInput `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayInput `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated pulumi.BoolPtrInput `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt pulumi.StringPtrInput `pulumi:"invalidatedAt"`
	// The key of the license
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (LicensingCotermLicensesMoveItemRemainderLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseOutput() LicensingCotermLicensesMoveItemRemainderLicenseOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseOutput)
}

// LicensingCotermLicensesMoveItemRemainderLicenseArrayInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseArray and LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseArrayInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseArray{ LicensingCotermLicensesMoveItemRemainderLicenseArgs{...} }
type LicensingCotermLicensesMoveItemRemainderLicenseArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseArray []LicensingCotermLicensesMoveItemRemainderLicenseInput

func (LicensingCotermLicensesMoveItemRemainderLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseArray) ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseArray) ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseOutput() LicensingCotermLicensesMoveItemRemainderLicenseOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseOutput {
	return o
}

// When the license was claimed into the organization
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) ClaimedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.ClaimedAt }).(pulumi.StringPtrOutput)
}

// The counts of the license by model type
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Counts() LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) []LicensingCotermLicensesMoveItemRemainderLicenseCount {
		return v.Counts
	}).(LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput)
}

// The duration (term length) of the license, measured in days
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The editions of the license for each relevant product type
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Editions() LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) []LicensingCotermLicensesMoveItemRemainderLicenseEdition {
		return v.Editions
	}).(LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput)
}

// Flag to indicate if the license is expired
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// Flag to indicated that the license is invalidated
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Invalidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *bool { return v.Invalidated }).(pulumi.BoolPtrOutput)
}

// When the license was invalidated. Will be null for active licenses
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) InvalidatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.InvalidatedAt }).(pulumi.StringPtrOutput)
}

// The key of the license
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The operation mode of the license when it was claimed
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The ID of the organization that the license is claimed in
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// When the license's term began (approximately the date when the license was created)
func (o LicensingCotermLicensesMoveItemRemainderLicenseOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicense) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemRemainderLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemRemainderLicense {
		return vs[0].([]LicensingCotermLicensesMoveItemRemainderLicense)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemRemainderLicenseOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseCount struct {
	// The number of counts the license contains of this model
	Count *int `pulumi:"count"`
	// The license model type
	Model *string `pulumi:"model"`
}

// LicensingCotermLicensesMoveItemRemainderLicenseCountInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseCountArgs and LicensingCotermLicensesMoveItemRemainderLicenseCountOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseCountInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseCountArgs{...}
type LicensingCotermLicensesMoveItemRemainderLicenseCountInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseCountArgs struct {
	// The number of counts the license contains of this model
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The license model type
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (LicensingCotermLicensesMoveItemRemainderLicenseCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseCountArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseCountArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseCountOutput)
}

// LicensingCotermLicensesMoveItemRemainderLicenseCountArrayInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseCountArray and LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseCountArrayInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseCountArray{ LicensingCotermLicensesMoveItemRemainderLicenseCountArgs{...} }
type LicensingCotermLicensesMoveItemRemainderLicenseCountArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseCountArray []LicensingCotermLicensesMoveItemRemainderLicenseCountInput

func (LicensingCotermLicensesMoveItemRemainderLicenseCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseCountArray) ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseCountArray) ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseCountOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseCountOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseCountOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountOutput {
	return o
}

// The number of counts the license contains of this model
func (o LicensingCotermLicensesMoveItemRemainderLicenseCountOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicenseCount) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The license model type
func (o LicensingCotermLicensesMoveItemRemainderLicenseCountOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicenseCount) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemRemainderLicenseCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemRemainderLicenseCount {
		return vs[0].([]LicensingCotermLicensesMoveItemRemainderLicenseCount)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemRemainderLicenseCountOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseEdition struct {
	// The name of the license edition
	Edition *string `pulumi:"edition"`
	// The product type of the license edition
	ProductType *string `pulumi:"productType"`
}

// LicensingCotermLicensesMoveItemRemainderLicenseEditionInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs and LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseEditionInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs{...}
type LicensingCotermLicensesMoveItemRemainderLicenseEditionInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs struct {
	// The name of the license edition
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// The product type of the license edition
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
}

func (LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseEdition)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput)
}

// LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayInput is an input type that accepts LicensingCotermLicensesMoveItemRemainderLicenseEditionArray and LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayInput` via:
//
//	LicensingCotermLicensesMoveItemRemainderLicenseEditionArray{ LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs{...} }
type LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput
	ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput
}

type LicensingCotermLicensesMoveItemRemainderLicenseEditionArray []LicensingCotermLicensesMoveItemRemainderLicenseEditionInput

func (LicensingCotermLicensesMoveItemRemainderLicenseEditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicenseEdition)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseEditionArray) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput {
	return i.ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveItemRemainderLicenseEditionArray) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseEdition)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput {
	return o
}

// The name of the license edition
func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicenseEdition) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// The product type of the license edition
func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveItemRemainderLicenseEdition) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveItemRemainderLicenseEdition)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput() LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput) ToLicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveItemRemainderLicenseEdition {
		return vs[0].([]LicensingCotermLicensesMoveItemRemainderLicenseEdition)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput)
}

type LicensingCotermLicensesMoveParameters struct {
	// Destination data for the license move
	Destination *LicensingCotermLicensesMoveParametersDestination `pulumi:"destination"`
	// The list of licenses to move
	Licenses []LicensingCotermLicensesMoveParametersLicense `pulumi:"licenses"`
}

// LicensingCotermLicensesMoveParametersInput is an input type that accepts LicensingCotermLicensesMoveParametersArgs and LicensingCotermLicensesMoveParametersOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersInput` via:
//
//	LicensingCotermLicensesMoveParametersArgs{...}
type LicensingCotermLicensesMoveParametersInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersOutput() LicensingCotermLicensesMoveParametersOutput
	ToLicensingCotermLicensesMoveParametersOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersOutput
}

type LicensingCotermLicensesMoveParametersArgs struct {
	// Destination data for the license move
	Destination LicensingCotermLicensesMoveParametersDestinationPtrInput `pulumi:"destination"`
	// The list of licenses to move
	Licenses LicensingCotermLicensesMoveParametersLicenseArrayInput `pulumi:"licenses"`
}

func (LicensingCotermLicensesMoveParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParameters)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersArgs) ToLicensingCotermLicensesMoveParametersOutput() LicensingCotermLicensesMoveParametersOutput {
	return i.ToLicensingCotermLicensesMoveParametersOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersArgs) ToLicensingCotermLicensesMoveParametersOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersOutput)
}

func (i LicensingCotermLicensesMoveParametersArgs) ToLicensingCotermLicensesMoveParametersPtrOutput() LicensingCotermLicensesMoveParametersPtrOutput {
	return i.ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersArgs) ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersOutput).ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(ctx)
}

// LicensingCotermLicensesMoveParametersPtrInput is an input type that accepts LicensingCotermLicensesMoveParametersArgs, LicensingCotermLicensesMoveParametersPtr and LicensingCotermLicensesMoveParametersPtrOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersPtrInput` via:
//
//	        LicensingCotermLicensesMoveParametersArgs{...}
//
//	or:
//
//	        nil
type LicensingCotermLicensesMoveParametersPtrInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersPtrOutput() LicensingCotermLicensesMoveParametersPtrOutput
	ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersPtrOutput
}

type licensingCotermLicensesMoveParametersPtrType LicensingCotermLicensesMoveParametersArgs

func LicensingCotermLicensesMoveParametersPtr(v *LicensingCotermLicensesMoveParametersArgs) LicensingCotermLicensesMoveParametersPtrInput {
	return (*licensingCotermLicensesMoveParametersPtrType)(v)
}

func (*licensingCotermLicensesMoveParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveParameters)(nil)).Elem()
}

func (i *licensingCotermLicensesMoveParametersPtrType) ToLicensingCotermLicensesMoveParametersPtrOutput() LicensingCotermLicensesMoveParametersPtrOutput {
	return i.ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (i *licensingCotermLicensesMoveParametersPtrType) ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersPtrOutput)
}

type LicensingCotermLicensesMoveParametersOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParameters)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersOutput) ToLicensingCotermLicensesMoveParametersOutput() LicensingCotermLicensesMoveParametersOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersOutput) ToLicensingCotermLicensesMoveParametersOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersOutput) ToLicensingCotermLicensesMoveParametersPtrOutput() LicensingCotermLicensesMoveParametersPtrOutput {
	return o.ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(context.Background())
}

func (o LicensingCotermLicensesMoveParametersOutput) ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingCotermLicensesMoveParameters) *LicensingCotermLicensesMoveParameters {
		return &v
	}).(LicensingCotermLicensesMoveParametersPtrOutput)
}

// Destination data for the license move
func (o LicensingCotermLicensesMoveParametersOutput) Destination() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParameters) *LicensingCotermLicensesMoveParametersDestination {
		return v.Destination
	}).(LicensingCotermLicensesMoveParametersDestinationPtrOutput)
}

// The list of licenses to move
func (o LicensingCotermLicensesMoveParametersOutput) Licenses() LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParameters) []LicensingCotermLicensesMoveParametersLicense {
		return v.Licenses
	}).(LicensingCotermLicensesMoveParametersLicenseArrayOutput)
}

type LicensingCotermLicensesMoveParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveParameters)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersPtrOutput) ToLicensingCotermLicensesMoveParametersPtrOutput() LicensingCotermLicensesMoveParametersPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersPtrOutput) ToLicensingCotermLicensesMoveParametersPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersPtrOutput) Elem() LicensingCotermLicensesMoveParametersOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParameters) LicensingCotermLicensesMoveParameters {
		if v != nil {
			return *v
		}
		var ret LicensingCotermLicensesMoveParameters
		return ret
	}).(LicensingCotermLicensesMoveParametersOutput)
}

// Destination data for the license move
func (o LicensingCotermLicensesMoveParametersPtrOutput) Destination() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParameters) *LicensingCotermLicensesMoveParametersDestination {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(LicensingCotermLicensesMoveParametersDestinationPtrOutput)
}

// The list of licenses to move
func (o LicensingCotermLicensesMoveParametersPtrOutput) Licenses() LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParameters) []LicensingCotermLicensesMoveParametersLicense {
		if v == nil {
			return nil
		}
		return v.Licenses
	}).(LicensingCotermLicensesMoveParametersLicenseArrayOutput)
}

type LicensingCotermLicensesMoveParametersDestination struct {
	// The claim mode of the moved license
	Mode *string `pulumi:"mode"`
	// The organization to move the license to
	OrganizationId *string `pulumi:"organizationId"`
}

// LicensingCotermLicensesMoveParametersDestinationInput is an input type that accepts LicensingCotermLicensesMoveParametersDestinationArgs and LicensingCotermLicensesMoveParametersDestinationOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersDestinationInput` via:
//
//	LicensingCotermLicensesMoveParametersDestinationArgs{...}
type LicensingCotermLicensesMoveParametersDestinationInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersDestinationOutput() LicensingCotermLicensesMoveParametersDestinationOutput
	ToLicensingCotermLicensesMoveParametersDestinationOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersDestinationOutput
}

type LicensingCotermLicensesMoveParametersDestinationArgs struct {
	// The claim mode of the moved license
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The organization to move the license to
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
}

func (LicensingCotermLicensesMoveParametersDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersDestination)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersDestinationArgs) ToLicensingCotermLicensesMoveParametersDestinationOutput() LicensingCotermLicensesMoveParametersDestinationOutput {
	return i.ToLicensingCotermLicensesMoveParametersDestinationOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersDestinationArgs) ToLicensingCotermLicensesMoveParametersDestinationOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersDestinationOutput)
}

func (i LicensingCotermLicensesMoveParametersDestinationArgs) ToLicensingCotermLicensesMoveParametersDestinationPtrOutput() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return i.ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersDestinationArgs) ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersDestinationOutput).ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(ctx)
}

// LicensingCotermLicensesMoveParametersDestinationPtrInput is an input type that accepts LicensingCotermLicensesMoveParametersDestinationArgs, LicensingCotermLicensesMoveParametersDestinationPtr and LicensingCotermLicensesMoveParametersDestinationPtrOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersDestinationPtrInput` via:
//
//	        LicensingCotermLicensesMoveParametersDestinationArgs{...}
//
//	or:
//
//	        nil
type LicensingCotermLicensesMoveParametersDestinationPtrInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersDestinationPtrOutput() LicensingCotermLicensesMoveParametersDestinationPtrOutput
	ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersDestinationPtrOutput
}

type licensingCotermLicensesMoveParametersDestinationPtrType LicensingCotermLicensesMoveParametersDestinationArgs

func LicensingCotermLicensesMoveParametersDestinationPtr(v *LicensingCotermLicensesMoveParametersDestinationArgs) LicensingCotermLicensesMoveParametersDestinationPtrInput {
	return (*licensingCotermLicensesMoveParametersDestinationPtrType)(v)
}

func (*licensingCotermLicensesMoveParametersDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveParametersDestination)(nil)).Elem()
}

func (i *licensingCotermLicensesMoveParametersDestinationPtrType) ToLicensingCotermLicensesMoveParametersDestinationPtrOutput() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return i.ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(context.Background())
}

func (i *licensingCotermLicensesMoveParametersDestinationPtrType) ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersDestinationPtrOutput)
}

type LicensingCotermLicensesMoveParametersDestinationOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersDestination)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersDestinationOutput) ToLicensingCotermLicensesMoveParametersDestinationOutput() LicensingCotermLicensesMoveParametersDestinationOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersDestinationOutput) ToLicensingCotermLicensesMoveParametersDestinationOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersDestinationOutput) ToLicensingCotermLicensesMoveParametersDestinationPtrOutput() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o.ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(context.Background())
}

func (o LicensingCotermLicensesMoveParametersDestinationOutput) ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingCotermLicensesMoveParametersDestination) *LicensingCotermLicensesMoveParametersDestination {
		return &v
	}).(LicensingCotermLicensesMoveParametersDestinationPtrOutput)
}

// The claim mode of the moved license
func (o LicensingCotermLicensesMoveParametersDestinationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersDestination) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The organization to move the license to
func (o LicensingCotermLicensesMoveParametersDestinationOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersDestination) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveParametersDestinationPtrOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingCotermLicensesMoveParametersDestination)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersDestinationPtrOutput) ToLicensingCotermLicensesMoveParametersDestinationPtrOutput() LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersDestinationPtrOutput) ToLicensingCotermLicensesMoveParametersDestinationPtrOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersDestinationPtrOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersDestinationPtrOutput) Elem() LicensingCotermLicensesMoveParametersDestinationOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParametersDestination) LicensingCotermLicensesMoveParametersDestination {
		if v != nil {
			return *v
		}
		var ret LicensingCotermLicensesMoveParametersDestination
		return ret
	}).(LicensingCotermLicensesMoveParametersDestinationOutput)
}

// The claim mode of the moved license
func (o LicensingCotermLicensesMoveParametersDestinationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParametersDestination) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The organization to move the license to
func (o LicensingCotermLicensesMoveParametersDestinationPtrOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingCotermLicensesMoveParametersDestination) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationId
	}).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveParametersLicense struct {
	// The counts to move from the license by model type
	Counts []LicensingCotermLicensesMoveParametersLicenseCount `pulumi:"counts"`
	// The license key to move counts from
	Key *string `pulumi:"key"`
}

// LicensingCotermLicensesMoveParametersLicenseInput is an input type that accepts LicensingCotermLicensesMoveParametersLicenseArgs and LicensingCotermLicensesMoveParametersLicenseOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersLicenseInput` via:
//
//	LicensingCotermLicensesMoveParametersLicenseArgs{...}
type LicensingCotermLicensesMoveParametersLicenseInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersLicenseOutput() LicensingCotermLicensesMoveParametersLicenseOutput
	ToLicensingCotermLicensesMoveParametersLicenseOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersLicenseOutput
}

type LicensingCotermLicensesMoveParametersLicenseArgs struct {
	// The counts to move from the license by model type
	Counts LicensingCotermLicensesMoveParametersLicenseCountArrayInput `pulumi:"counts"`
	// The license key to move counts from
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (LicensingCotermLicensesMoveParametersLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersLicenseArgs) ToLicensingCotermLicensesMoveParametersLicenseOutput() LicensingCotermLicensesMoveParametersLicenseOutput {
	return i.ToLicensingCotermLicensesMoveParametersLicenseOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersLicenseArgs) ToLicensingCotermLicensesMoveParametersLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersLicenseOutput)
}

// LicensingCotermLicensesMoveParametersLicenseArrayInput is an input type that accepts LicensingCotermLicensesMoveParametersLicenseArray and LicensingCotermLicensesMoveParametersLicenseArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersLicenseArrayInput` via:
//
//	LicensingCotermLicensesMoveParametersLicenseArray{ LicensingCotermLicensesMoveParametersLicenseArgs{...} }
type LicensingCotermLicensesMoveParametersLicenseArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersLicenseArrayOutput() LicensingCotermLicensesMoveParametersLicenseArrayOutput
	ToLicensingCotermLicensesMoveParametersLicenseArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersLicenseArrayOutput
}

type LicensingCotermLicensesMoveParametersLicenseArray []LicensingCotermLicensesMoveParametersLicenseInput

func (LicensingCotermLicensesMoveParametersLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveParametersLicense)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersLicenseArray) ToLicensingCotermLicensesMoveParametersLicenseArrayOutput() LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return i.ToLicensingCotermLicensesMoveParametersLicenseArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersLicenseArray) ToLicensingCotermLicensesMoveParametersLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersLicenseArrayOutput)
}

type LicensingCotermLicensesMoveParametersLicenseOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersLicenseOutput) ToLicensingCotermLicensesMoveParametersLicenseOutput() LicensingCotermLicensesMoveParametersLicenseOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseOutput) ToLicensingCotermLicensesMoveParametersLicenseOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseOutput {
	return o
}

// The counts to move from the license by model type
func (o LicensingCotermLicensesMoveParametersLicenseOutput) Counts() LicensingCotermLicensesMoveParametersLicenseCountArrayOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersLicense) []LicensingCotermLicensesMoveParametersLicenseCount {
		return v.Counts
	}).(LicensingCotermLicensesMoveParametersLicenseCountArrayOutput)
}

// The license key to move counts from
func (o LicensingCotermLicensesMoveParametersLicenseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersLicense) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveParametersLicenseArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveParametersLicense)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersLicenseArrayOutput) ToLicensingCotermLicensesMoveParametersLicenseArrayOutput() LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseArrayOutput) ToLicensingCotermLicensesMoveParametersLicenseArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveParametersLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveParametersLicense {
		return vs[0].([]LicensingCotermLicensesMoveParametersLicense)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveParametersLicenseOutput)
}

type LicensingCotermLicensesMoveParametersLicenseCount struct {
	// The number of counts to move
	Count *int `pulumi:"count"`
	// The license model type to move counts of
	Model *string `pulumi:"model"`
}

// LicensingCotermLicensesMoveParametersLicenseCountInput is an input type that accepts LicensingCotermLicensesMoveParametersLicenseCountArgs and LicensingCotermLicensesMoveParametersLicenseCountOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersLicenseCountInput` via:
//
//	LicensingCotermLicensesMoveParametersLicenseCountArgs{...}
type LicensingCotermLicensesMoveParametersLicenseCountInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersLicenseCountOutput() LicensingCotermLicensesMoveParametersLicenseCountOutput
	ToLicensingCotermLicensesMoveParametersLicenseCountOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersLicenseCountOutput
}

type LicensingCotermLicensesMoveParametersLicenseCountArgs struct {
	// The number of counts to move
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The license model type to move counts of
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (LicensingCotermLicensesMoveParametersLicenseCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersLicenseCountArgs) ToLicensingCotermLicensesMoveParametersLicenseCountOutput() LicensingCotermLicensesMoveParametersLicenseCountOutput {
	return i.ToLicensingCotermLicensesMoveParametersLicenseCountOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersLicenseCountArgs) ToLicensingCotermLicensesMoveParametersLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersLicenseCountOutput)
}

// LicensingCotermLicensesMoveParametersLicenseCountArrayInput is an input type that accepts LicensingCotermLicensesMoveParametersLicenseCountArray and LicensingCotermLicensesMoveParametersLicenseCountArrayOutput values.
// You can construct a concrete instance of `LicensingCotermLicensesMoveParametersLicenseCountArrayInput` via:
//
//	LicensingCotermLicensesMoveParametersLicenseCountArray{ LicensingCotermLicensesMoveParametersLicenseCountArgs{...} }
type LicensingCotermLicensesMoveParametersLicenseCountArrayInput interface {
	pulumi.Input

	ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutput() LicensingCotermLicensesMoveParametersLicenseCountArrayOutput
	ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutputWithContext(context.Context) LicensingCotermLicensesMoveParametersLicenseCountArrayOutput
}

type LicensingCotermLicensesMoveParametersLicenseCountArray []LicensingCotermLicensesMoveParametersLicenseCountInput

func (LicensingCotermLicensesMoveParametersLicenseCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveParametersLicenseCount)(nil)).Elem()
}

func (i LicensingCotermLicensesMoveParametersLicenseCountArray) ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutput() LicensingCotermLicensesMoveParametersLicenseCountArrayOutput {
	return i.ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutputWithContext(context.Background())
}

func (i LicensingCotermLicensesMoveParametersLicenseCountArray) ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingCotermLicensesMoveParametersLicenseCountArrayOutput)
}

type LicensingCotermLicensesMoveParametersLicenseCountOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersLicenseCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersLicenseCountOutput) ToLicensingCotermLicensesMoveParametersLicenseCountOutput() LicensingCotermLicensesMoveParametersLicenseCountOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseCountOutput) ToLicensingCotermLicensesMoveParametersLicenseCountOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseCountOutput {
	return o
}

// The number of counts to move
func (o LicensingCotermLicensesMoveParametersLicenseCountOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersLicenseCount) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The license model type to move counts of
func (o LicensingCotermLicensesMoveParametersLicenseCountOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingCotermLicensesMoveParametersLicenseCount) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type LicensingCotermLicensesMoveParametersLicenseCountArrayOutput struct{ *pulumi.OutputState }

func (LicensingCotermLicensesMoveParametersLicenseCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingCotermLicensesMoveParametersLicenseCount)(nil)).Elem()
}

func (o LicensingCotermLicensesMoveParametersLicenseCountArrayOutput) ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutput() LicensingCotermLicensesMoveParametersLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseCountArrayOutput) ToLicensingCotermLicensesMoveParametersLicenseCountArrayOutputWithContext(ctx context.Context) LicensingCotermLicensesMoveParametersLicenseCountArrayOutput {
	return o
}

func (o LicensingCotermLicensesMoveParametersLicenseCountArrayOutput) Index(i pulumi.IntInput) LicensingCotermLicensesMoveParametersLicenseCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingCotermLicensesMoveParametersLicenseCount {
		return vs[0].([]LicensingCotermLicensesMoveParametersLicenseCount)[vs[1].(int)]
	}).(LicensingCotermLicensesMoveParametersLicenseCountOutput)
}

type LoginSecurityApiAuthentication struct {
	// Details for API-only IP restrictions.
	IpRestrictionsForKeys *LoginSecurityApiAuthenticationIpRestrictionsForKeys `pulumi:"ipRestrictionsForKeys"`
}

// LoginSecurityApiAuthenticationInput is an input type that accepts LoginSecurityApiAuthenticationArgs and LoginSecurityApiAuthenticationOutput values.
// You can construct a concrete instance of `LoginSecurityApiAuthenticationInput` via:
//
//	LoginSecurityApiAuthenticationArgs{...}
type LoginSecurityApiAuthenticationInput interface {
	pulumi.Input

	ToLoginSecurityApiAuthenticationOutput() LoginSecurityApiAuthenticationOutput
	ToLoginSecurityApiAuthenticationOutputWithContext(context.Context) LoginSecurityApiAuthenticationOutput
}

type LoginSecurityApiAuthenticationArgs struct {
	// Details for API-only IP restrictions.
	IpRestrictionsForKeys LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput `pulumi:"ipRestrictionsForKeys"`
}

func (LoginSecurityApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginSecurityApiAuthentication)(nil)).Elem()
}

func (i LoginSecurityApiAuthenticationArgs) ToLoginSecurityApiAuthenticationOutput() LoginSecurityApiAuthenticationOutput {
	return i.ToLoginSecurityApiAuthenticationOutputWithContext(context.Background())
}

func (i LoginSecurityApiAuthenticationArgs) ToLoginSecurityApiAuthenticationOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationOutput)
}

func (i LoginSecurityApiAuthenticationArgs) ToLoginSecurityApiAuthenticationPtrOutput() LoginSecurityApiAuthenticationPtrOutput {
	return i.ToLoginSecurityApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i LoginSecurityApiAuthenticationArgs) ToLoginSecurityApiAuthenticationPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationOutput).ToLoginSecurityApiAuthenticationPtrOutputWithContext(ctx)
}

// LoginSecurityApiAuthenticationPtrInput is an input type that accepts LoginSecurityApiAuthenticationArgs, LoginSecurityApiAuthenticationPtr and LoginSecurityApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `LoginSecurityApiAuthenticationPtrInput` via:
//
//	        LoginSecurityApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type LoginSecurityApiAuthenticationPtrInput interface {
	pulumi.Input

	ToLoginSecurityApiAuthenticationPtrOutput() LoginSecurityApiAuthenticationPtrOutput
	ToLoginSecurityApiAuthenticationPtrOutputWithContext(context.Context) LoginSecurityApiAuthenticationPtrOutput
}

type loginSecurityApiAuthenticationPtrType LoginSecurityApiAuthenticationArgs

func LoginSecurityApiAuthenticationPtr(v *LoginSecurityApiAuthenticationArgs) LoginSecurityApiAuthenticationPtrInput {
	return (*loginSecurityApiAuthenticationPtrType)(v)
}

func (*loginSecurityApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginSecurityApiAuthentication)(nil)).Elem()
}

func (i *loginSecurityApiAuthenticationPtrType) ToLoginSecurityApiAuthenticationPtrOutput() LoginSecurityApiAuthenticationPtrOutput {
	return i.ToLoginSecurityApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *loginSecurityApiAuthenticationPtrType) ToLoginSecurityApiAuthenticationPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationPtrOutput)
}

type LoginSecurityApiAuthenticationOutput struct{ *pulumi.OutputState }

func (LoginSecurityApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginSecurityApiAuthentication)(nil)).Elem()
}

func (o LoginSecurityApiAuthenticationOutput) ToLoginSecurityApiAuthenticationOutput() LoginSecurityApiAuthenticationOutput {
	return o
}

func (o LoginSecurityApiAuthenticationOutput) ToLoginSecurityApiAuthenticationOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationOutput {
	return o
}

func (o LoginSecurityApiAuthenticationOutput) ToLoginSecurityApiAuthenticationPtrOutput() LoginSecurityApiAuthenticationPtrOutput {
	return o.ToLoginSecurityApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o LoginSecurityApiAuthenticationOutput) ToLoginSecurityApiAuthenticationPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoginSecurityApiAuthentication) *LoginSecurityApiAuthentication {
		return &v
	}).(LoginSecurityApiAuthenticationPtrOutput)
}

// Details for API-only IP restrictions.
func (o LoginSecurityApiAuthenticationOutput) IpRestrictionsForKeys() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o.ApplyT(func(v LoginSecurityApiAuthentication) *LoginSecurityApiAuthenticationIpRestrictionsForKeys {
		return v.IpRestrictionsForKeys
	}).(LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput)
}

type LoginSecurityApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (LoginSecurityApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginSecurityApiAuthentication)(nil)).Elem()
}

func (o LoginSecurityApiAuthenticationPtrOutput) ToLoginSecurityApiAuthenticationPtrOutput() LoginSecurityApiAuthenticationPtrOutput {
	return o
}

func (o LoginSecurityApiAuthenticationPtrOutput) ToLoginSecurityApiAuthenticationPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationPtrOutput {
	return o
}

func (o LoginSecurityApiAuthenticationPtrOutput) Elem() LoginSecurityApiAuthenticationOutput {
	return o.ApplyT(func(v *LoginSecurityApiAuthentication) LoginSecurityApiAuthentication {
		if v != nil {
			return *v
		}
		var ret LoginSecurityApiAuthentication
		return ret
	}).(LoginSecurityApiAuthenticationOutput)
}

// Details for API-only IP restrictions.
func (o LoginSecurityApiAuthenticationPtrOutput) IpRestrictionsForKeys() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o.ApplyT(func(v *LoginSecurityApiAuthentication) *LoginSecurityApiAuthenticationIpRestrictionsForKeys {
		if v == nil {
			return nil
		}
		return v.IpRestrictionsForKeys
	}).(LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput)
}

type LoginSecurityApiAuthenticationIpRestrictionsForKeys struct {
	// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
	Enabled *bool `pulumi:"enabled"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	Ranges []string `pulumi:"ranges"`
}

// LoginSecurityApiAuthenticationIpRestrictionsForKeysInput is an input type that accepts LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs and LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput values.
// You can construct a concrete instance of `LoginSecurityApiAuthenticationIpRestrictionsForKeysInput` via:
//
//	LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs{...}
type LoginSecurityApiAuthenticationIpRestrictionsForKeysInput interface {
	pulumi.Input

	ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput
	ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutputWithContext(context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput
}

type LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs struct {
	// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	Ranges pulumi.StringArrayInput `pulumi:"ranges"`
}

func (LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginSecurityApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (i LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput {
	return i.ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutputWithContext(context.Background())
}

func (i LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput)
}

func (i LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return i.ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(context.Background())
}

func (i LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput).ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(ctx)
}

// LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput is an input type that accepts LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs, LoginSecurityApiAuthenticationIpRestrictionsForKeysPtr and LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput values.
// You can construct a concrete instance of `LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput` via:
//
//	        LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs{...}
//
//	or:
//
//	        nil
type LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput interface {
	pulumi.Input

	ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput
	ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput
}

type loginSecurityApiAuthenticationIpRestrictionsForKeysPtrType LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs

func LoginSecurityApiAuthenticationIpRestrictionsForKeysPtr(v *LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput {
	return (*loginSecurityApiAuthenticationIpRestrictionsForKeysPtrType)(v)
}

func (*loginSecurityApiAuthenticationIpRestrictionsForKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginSecurityApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (i *loginSecurityApiAuthenticationIpRestrictionsForKeysPtrType) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return i.ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(context.Background())
}

func (i *loginSecurityApiAuthenticationIpRestrictionsForKeysPtrType) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput)
}

type LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput struct{ *pulumi.OutputState }

func (LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginSecurityApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput {
	return o
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput {
	return o
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o.ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(context.Background())
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoginSecurityApiAuthenticationIpRestrictionsForKeys) *LoginSecurityApiAuthenticationIpRestrictionsForKeys {
		return &v
	}).(LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput)
}

// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoginSecurityApiAuthenticationIpRestrictionsForKeys) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput) Ranges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoginSecurityApiAuthenticationIpRestrictionsForKeys) []string { return v.Ranges }).(pulumi.StringArrayOutput)
}

type LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput struct{ *pulumi.OutputState }

func (LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginSecurityApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput() LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) ToLoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutputWithContext(ctx context.Context) LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput {
	return o
}

func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) Elem() LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput {
	return o.ApplyT(func(v *LoginSecurityApiAuthenticationIpRestrictionsForKeys) LoginSecurityApiAuthenticationIpRestrictionsForKeys {
		if v != nil {
			return *v
		}
		var ret LoginSecurityApiAuthenticationIpRestrictionsForKeys
		return ret
	}).(LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput)
}

// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoginSecurityApiAuthenticationIpRestrictionsForKeys) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
func (o LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput) Ranges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoginSecurityApiAuthenticationIpRestrictionsForKeys) []string {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(pulumi.StringArrayOutput)
}

type NetworksCombineItem struct {
	// Network after the combination
	ResultingNetwork *NetworksCombineItemResultingNetwork `pulumi:"resultingNetwork"`
}

// NetworksCombineItemInput is an input type that accepts NetworksCombineItemArgs and NetworksCombineItemOutput values.
// You can construct a concrete instance of `NetworksCombineItemInput` via:
//
//	NetworksCombineItemArgs{...}
type NetworksCombineItemInput interface {
	pulumi.Input

	ToNetworksCombineItemOutput() NetworksCombineItemOutput
	ToNetworksCombineItemOutputWithContext(context.Context) NetworksCombineItemOutput
}

type NetworksCombineItemArgs struct {
	// Network after the combination
	ResultingNetwork NetworksCombineItemResultingNetworkPtrInput `pulumi:"resultingNetwork"`
}

func (NetworksCombineItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineItem)(nil)).Elem()
}

func (i NetworksCombineItemArgs) ToNetworksCombineItemOutput() NetworksCombineItemOutput {
	return i.ToNetworksCombineItemOutputWithContext(context.Background())
}

func (i NetworksCombineItemArgs) ToNetworksCombineItemOutputWithContext(ctx context.Context) NetworksCombineItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemOutput)
}

func (i NetworksCombineItemArgs) ToNetworksCombineItemPtrOutput() NetworksCombineItemPtrOutput {
	return i.ToNetworksCombineItemPtrOutputWithContext(context.Background())
}

func (i NetworksCombineItemArgs) ToNetworksCombineItemPtrOutputWithContext(ctx context.Context) NetworksCombineItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemOutput).ToNetworksCombineItemPtrOutputWithContext(ctx)
}

// NetworksCombineItemPtrInput is an input type that accepts NetworksCombineItemArgs, NetworksCombineItemPtr and NetworksCombineItemPtrOutput values.
// You can construct a concrete instance of `NetworksCombineItemPtrInput` via:
//
//	        NetworksCombineItemArgs{...}
//
//	or:
//
//	        nil
type NetworksCombineItemPtrInput interface {
	pulumi.Input

	ToNetworksCombineItemPtrOutput() NetworksCombineItemPtrOutput
	ToNetworksCombineItemPtrOutputWithContext(context.Context) NetworksCombineItemPtrOutput
}

type networksCombineItemPtrType NetworksCombineItemArgs

func NetworksCombineItemPtr(v *NetworksCombineItemArgs) NetworksCombineItemPtrInput {
	return (*networksCombineItemPtrType)(v)
}

func (*networksCombineItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineItem)(nil)).Elem()
}

func (i *networksCombineItemPtrType) ToNetworksCombineItemPtrOutput() NetworksCombineItemPtrOutput {
	return i.ToNetworksCombineItemPtrOutputWithContext(context.Background())
}

func (i *networksCombineItemPtrType) ToNetworksCombineItemPtrOutputWithContext(ctx context.Context) NetworksCombineItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemPtrOutput)
}

type NetworksCombineItemOutput struct{ *pulumi.OutputState }

func (NetworksCombineItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineItem)(nil)).Elem()
}

func (o NetworksCombineItemOutput) ToNetworksCombineItemOutput() NetworksCombineItemOutput {
	return o
}

func (o NetworksCombineItemOutput) ToNetworksCombineItemOutputWithContext(ctx context.Context) NetworksCombineItemOutput {
	return o
}

func (o NetworksCombineItemOutput) ToNetworksCombineItemPtrOutput() NetworksCombineItemPtrOutput {
	return o.ToNetworksCombineItemPtrOutputWithContext(context.Background())
}

func (o NetworksCombineItemOutput) ToNetworksCombineItemPtrOutputWithContext(ctx context.Context) NetworksCombineItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworksCombineItem) *NetworksCombineItem {
		return &v
	}).(NetworksCombineItemPtrOutput)
}

// Network after the combination
func (o NetworksCombineItemOutput) ResultingNetwork() NetworksCombineItemResultingNetworkPtrOutput {
	return o.ApplyT(func(v NetworksCombineItem) *NetworksCombineItemResultingNetwork { return v.ResultingNetwork }).(NetworksCombineItemResultingNetworkPtrOutput)
}

type NetworksCombineItemPtrOutput struct{ *pulumi.OutputState }

func (NetworksCombineItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineItem)(nil)).Elem()
}

func (o NetworksCombineItemPtrOutput) ToNetworksCombineItemPtrOutput() NetworksCombineItemPtrOutput {
	return o
}

func (o NetworksCombineItemPtrOutput) ToNetworksCombineItemPtrOutputWithContext(ctx context.Context) NetworksCombineItemPtrOutput {
	return o
}

func (o NetworksCombineItemPtrOutput) Elem() NetworksCombineItemOutput {
	return o.ApplyT(func(v *NetworksCombineItem) NetworksCombineItem {
		if v != nil {
			return *v
		}
		var ret NetworksCombineItem
		return ret
	}).(NetworksCombineItemOutput)
}

// Network after the combination
func (o NetworksCombineItemPtrOutput) ResultingNetwork() NetworksCombineItemResultingNetworkPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItem) *NetworksCombineItemResultingNetwork {
		if v == nil {
			return nil
		}
		return v.ResultingNetwork
	}).(NetworksCombineItemResultingNetworkPtrOutput)
}

type NetworksCombineItemResultingNetwork struct {
	// Enrollment string for the network
	EnrollmentString *string `pulumi:"enrollmentString"`
	// Network ID
	Id *string `pulumi:"id"`
	// If the network is bound to a config template
	IsBoundToConfigTemplate *bool `pulumi:"isBoundToConfigTemplate"`
	// Network name
	Name *string `pulumi:"name"`
	// Notes for the network
	Notes *string `pulumi:"notes"`
	// Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// List of the product types that the network supports
	ProductTypes []string `pulumi:"productTypes"`
	// Network tags
	Tags []string `pulumi:"tags"`
	// Timezone of the network
	TimeZone *string `pulumi:"timeZone"`
	// URL to the network Dashboard UI
	Url *string `pulumi:"url"`
}

// NetworksCombineItemResultingNetworkInput is an input type that accepts NetworksCombineItemResultingNetworkArgs and NetworksCombineItemResultingNetworkOutput values.
// You can construct a concrete instance of `NetworksCombineItemResultingNetworkInput` via:
//
//	NetworksCombineItemResultingNetworkArgs{...}
type NetworksCombineItemResultingNetworkInput interface {
	pulumi.Input

	ToNetworksCombineItemResultingNetworkOutput() NetworksCombineItemResultingNetworkOutput
	ToNetworksCombineItemResultingNetworkOutputWithContext(context.Context) NetworksCombineItemResultingNetworkOutput
}

type NetworksCombineItemResultingNetworkArgs struct {
	// Enrollment string for the network
	EnrollmentString pulumi.StringPtrInput `pulumi:"enrollmentString"`
	// Network ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// If the network is bound to a config template
	IsBoundToConfigTemplate pulumi.BoolPtrInput `pulumi:"isBoundToConfigTemplate"`
	// Network name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notes for the network
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// Organization ID
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// List of the product types that the network supports
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Network tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Timezone of the network
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// URL to the network Dashboard UI
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (NetworksCombineItemResultingNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineItemResultingNetwork)(nil)).Elem()
}

func (i NetworksCombineItemResultingNetworkArgs) ToNetworksCombineItemResultingNetworkOutput() NetworksCombineItemResultingNetworkOutput {
	return i.ToNetworksCombineItemResultingNetworkOutputWithContext(context.Background())
}

func (i NetworksCombineItemResultingNetworkArgs) ToNetworksCombineItemResultingNetworkOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemResultingNetworkOutput)
}

func (i NetworksCombineItemResultingNetworkArgs) ToNetworksCombineItemResultingNetworkPtrOutput() NetworksCombineItemResultingNetworkPtrOutput {
	return i.ToNetworksCombineItemResultingNetworkPtrOutputWithContext(context.Background())
}

func (i NetworksCombineItemResultingNetworkArgs) ToNetworksCombineItemResultingNetworkPtrOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemResultingNetworkOutput).ToNetworksCombineItemResultingNetworkPtrOutputWithContext(ctx)
}

// NetworksCombineItemResultingNetworkPtrInput is an input type that accepts NetworksCombineItemResultingNetworkArgs, NetworksCombineItemResultingNetworkPtr and NetworksCombineItemResultingNetworkPtrOutput values.
// You can construct a concrete instance of `NetworksCombineItemResultingNetworkPtrInput` via:
//
//	        NetworksCombineItemResultingNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworksCombineItemResultingNetworkPtrInput interface {
	pulumi.Input

	ToNetworksCombineItemResultingNetworkPtrOutput() NetworksCombineItemResultingNetworkPtrOutput
	ToNetworksCombineItemResultingNetworkPtrOutputWithContext(context.Context) NetworksCombineItemResultingNetworkPtrOutput
}

type networksCombineItemResultingNetworkPtrType NetworksCombineItemResultingNetworkArgs

func NetworksCombineItemResultingNetworkPtr(v *NetworksCombineItemResultingNetworkArgs) NetworksCombineItemResultingNetworkPtrInput {
	return (*networksCombineItemResultingNetworkPtrType)(v)
}

func (*networksCombineItemResultingNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineItemResultingNetwork)(nil)).Elem()
}

func (i *networksCombineItemResultingNetworkPtrType) ToNetworksCombineItemResultingNetworkPtrOutput() NetworksCombineItemResultingNetworkPtrOutput {
	return i.ToNetworksCombineItemResultingNetworkPtrOutputWithContext(context.Background())
}

func (i *networksCombineItemResultingNetworkPtrType) ToNetworksCombineItemResultingNetworkPtrOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineItemResultingNetworkPtrOutput)
}

type NetworksCombineItemResultingNetworkOutput struct{ *pulumi.OutputState }

func (NetworksCombineItemResultingNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineItemResultingNetwork)(nil)).Elem()
}

func (o NetworksCombineItemResultingNetworkOutput) ToNetworksCombineItemResultingNetworkOutput() NetworksCombineItemResultingNetworkOutput {
	return o
}

func (o NetworksCombineItemResultingNetworkOutput) ToNetworksCombineItemResultingNetworkOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkOutput {
	return o
}

func (o NetworksCombineItemResultingNetworkOutput) ToNetworksCombineItemResultingNetworkPtrOutput() NetworksCombineItemResultingNetworkPtrOutput {
	return o.ToNetworksCombineItemResultingNetworkPtrOutputWithContext(context.Background())
}

func (o NetworksCombineItemResultingNetworkOutput) ToNetworksCombineItemResultingNetworkPtrOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworksCombineItemResultingNetwork) *NetworksCombineItemResultingNetwork {
		return &v
	}).(NetworksCombineItemResultingNetworkPtrOutput)
}

// Enrollment string for the network
func (o NetworksCombineItemResultingNetworkOutput) EnrollmentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.EnrollmentString }).(pulumi.StringPtrOutput)
}

// Network ID
func (o NetworksCombineItemResultingNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// If the network is bound to a config template
func (o NetworksCombineItemResultingNetworkOutput) IsBoundToConfigTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *bool { return v.IsBoundToConfigTemplate }).(pulumi.BoolPtrOutput)
}

// Network name
func (o NetworksCombineItemResultingNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notes for the network
func (o NetworksCombineItemResultingNetworkOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// Organization ID
func (o NetworksCombineItemResultingNetworkOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// List of the product types that the network supports
func (o NetworksCombineItemResultingNetworkOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Network tags
func (o NetworksCombineItemResultingNetworkOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Timezone of the network
func (o NetworksCombineItemResultingNetworkOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// URL to the network Dashboard UI
func (o NetworksCombineItemResultingNetworkOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineItemResultingNetwork) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type NetworksCombineItemResultingNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworksCombineItemResultingNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineItemResultingNetwork)(nil)).Elem()
}

func (o NetworksCombineItemResultingNetworkPtrOutput) ToNetworksCombineItemResultingNetworkPtrOutput() NetworksCombineItemResultingNetworkPtrOutput {
	return o
}

func (o NetworksCombineItemResultingNetworkPtrOutput) ToNetworksCombineItemResultingNetworkPtrOutputWithContext(ctx context.Context) NetworksCombineItemResultingNetworkPtrOutput {
	return o
}

func (o NetworksCombineItemResultingNetworkPtrOutput) Elem() NetworksCombineItemResultingNetworkOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) NetworksCombineItemResultingNetwork {
		if v != nil {
			return *v
		}
		var ret NetworksCombineItemResultingNetwork
		return ret
	}).(NetworksCombineItemResultingNetworkOutput)
}

// Enrollment string for the network
func (o NetworksCombineItemResultingNetworkPtrOutput) EnrollmentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.EnrollmentString
	}).(pulumi.StringPtrOutput)
}

// Network ID
func (o NetworksCombineItemResultingNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// If the network is bound to a config template
func (o NetworksCombineItemResultingNetworkPtrOutput) IsBoundToConfigTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.IsBoundToConfigTemplate
	}).(pulumi.BoolPtrOutput)
}

// Network name
func (o NetworksCombineItemResultingNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Notes for the network
func (o NetworksCombineItemResultingNetworkPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// Organization ID
func (o NetworksCombineItemResultingNetworkPtrOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationId
	}).(pulumi.StringPtrOutput)
}

// List of the product types that the network supports
func (o NetworksCombineItemResultingNetworkPtrOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) []string {
		if v == nil {
			return nil
		}
		return v.ProductTypes
	}).(pulumi.StringArrayOutput)
}

// Network tags
func (o NetworksCombineItemResultingNetworkPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Timezone of the network
func (o NetworksCombineItemResultingNetworkPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// URL to the network Dashboard UI
func (o NetworksCombineItemResultingNetworkPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineItemResultingNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type NetworksCombineParameters struct {
	// A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
	EnrollmentString *string `pulumi:"enrollmentString"`
	// The name of the combined network
	Name *string `pulumi:"name"`
	// A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
	NetworkIds []string `pulumi:"networkIds"`
}

// NetworksCombineParametersInput is an input type that accepts NetworksCombineParametersArgs and NetworksCombineParametersOutput values.
// You can construct a concrete instance of `NetworksCombineParametersInput` via:
//
//	NetworksCombineParametersArgs{...}
type NetworksCombineParametersInput interface {
	pulumi.Input

	ToNetworksCombineParametersOutput() NetworksCombineParametersOutput
	ToNetworksCombineParametersOutputWithContext(context.Context) NetworksCombineParametersOutput
}

type NetworksCombineParametersArgs struct {
	// A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
	EnrollmentString pulumi.StringPtrInput `pulumi:"enrollmentString"`
	// The name of the combined network
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
}

func (NetworksCombineParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineParameters)(nil)).Elem()
}

func (i NetworksCombineParametersArgs) ToNetworksCombineParametersOutput() NetworksCombineParametersOutput {
	return i.ToNetworksCombineParametersOutputWithContext(context.Background())
}

func (i NetworksCombineParametersArgs) ToNetworksCombineParametersOutputWithContext(ctx context.Context) NetworksCombineParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineParametersOutput)
}

func (i NetworksCombineParametersArgs) ToNetworksCombineParametersPtrOutput() NetworksCombineParametersPtrOutput {
	return i.ToNetworksCombineParametersPtrOutputWithContext(context.Background())
}

func (i NetworksCombineParametersArgs) ToNetworksCombineParametersPtrOutputWithContext(ctx context.Context) NetworksCombineParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineParametersOutput).ToNetworksCombineParametersPtrOutputWithContext(ctx)
}

// NetworksCombineParametersPtrInput is an input type that accepts NetworksCombineParametersArgs, NetworksCombineParametersPtr and NetworksCombineParametersPtrOutput values.
// You can construct a concrete instance of `NetworksCombineParametersPtrInput` via:
//
//	        NetworksCombineParametersArgs{...}
//
//	or:
//
//	        nil
type NetworksCombineParametersPtrInput interface {
	pulumi.Input

	ToNetworksCombineParametersPtrOutput() NetworksCombineParametersPtrOutput
	ToNetworksCombineParametersPtrOutputWithContext(context.Context) NetworksCombineParametersPtrOutput
}

type networksCombineParametersPtrType NetworksCombineParametersArgs

func NetworksCombineParametersPtr(v *NetworksCombineParametersArgs) NetworksCombineParametersPtrInput {
	return (*networksCombineParametersPtrType)(v)
}

func (*networksCombineParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineParameters)(nil)).Elem()
}

func (i *networksCombineParametersPtrType) ToNetworksCombineParametersPtrOutput() NetworksCombineParametersPtrOutput {
	return i.ToNetworksCombineParametersPtrOutputWithContext(context.Background())
}

func (i *networksCombineParametersPtrType) ToNetworksCombineParametersPtrOutputWithContext(ctx context.Context) NetworksCombineParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworksCombineParametersPtrOutput)
}

type NetworksCombineParametersOutput struct{ *pulumi.OutputState }

func (NetworksCombineParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworksCombineParameters)(nil)).Elem()
}

func (o NetworksCombineParametersOutput) ToNetworksCombineParametersOutput() NetworksCombineParametersOutput {
	return o
}

func (o NetworksCombineParametersOutput) ToNetworksCombineParametersOutputWithContext(ctx context.Context) NetworksCombineParametersOutput {
	return o
}

func (o NetworksCombineParametersOutput) ToNetworksCombineParametersPtrOutput() NetworksCombineParametersPtrOutput {
	return o.ToNetworksCombineParametersPtrOutputWithContext(context.Background())
}

func (o NetworksCombineParametersOutput) ToNetworksCombineParametersPtrOutputWithContext(ctx context.Context) NetworksCombineParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworksCombineParameters) *NetworksCombineParameters {
		return &v
	}).(NetworksCombineParametersPtrOutput)
}

// A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
func (o NetworksCombineParametersOutput) EnrollmentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineParameters) *string { return v.EnrollmentString }).(pulumi.StringPtrOutput)
}

// The name of the combined network
func (o NetworksCombineParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworksCombineParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
func (o NetworksCombineParametersOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworksCombineParameters) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

type NetworksCombineParametersPtrOutput struct{ *pulumi.OutputState }

func (NetworksCombineParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworksCombineParameters)(nil)).Elem()
}

func (o NetworksCombineParametersPtrOutput) ToNetworksCombineParametersPtrOutput() NetworksCombineParametersPtrOutput {
	return o
}

func (o NetworksCombineParametersPtrOutput) ToNetworksCombineParametersPtrOutputWithContext(ctx context.Context) NetworksCombineParametersPtrOutput {
	return o
}

func (o NetworksCombineParametersPtrOutput) Elem() NetworksCombineParametersOutput {
	return o.ApplyT(func(v *NetworksCombineParameters) NetworksCombineParameters {
		if v != nil {
			return *v
		}
		var ret NetworksCombineParameters
		return ret
	}).(NetworksCombineParametersOutput)
}

// A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
func (o NetworksCombineParametersPtrOutput) EnrollmentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineParameters) *string {
		if v == nil {
			return nil
		}
		return v.EnrollmentString
	}).(pulumi.StringPtrOutput)
}

// The name of the combined network
func (o NetworksCombineParametersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworksCombineParameters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
func (o NetworksCombineParametersPtrOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworksCombineParameters) []string {
		if v == nil {
			return nil
		}
		return v.NetworkIds
	}).(pulumi.StringArrayOutput)
}

type SamlRolesCamera struct {
	// Camera access ability
	Access *string `pulumi:"access"`
	// Whether or not SAML administrator has org-wide access
	OrgWide *bool `pulumi:"orgWide"`
}

// SamlRolesCameraInput is an input type that accepts SamlRolesCameraArgs and SamlRolesCameraOutput values.
// You can construct a concrete instance of `SamlRolesCameraInput` via:
//
//	SamlRolesCameraArgs{...}
type SamlRolesCameraInput interface {
	pulumi.Input

	ToSamlRolesCameraOutput() SamlRolesCameraOutput
	ToSamlRolesCameraOutputWithContext(context.Context) SamlRolesCameraOutput
}

type SamlRolesCameraArgs struct {
	// Camera access ability
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Whether or not SAML administrator has org-wide access
	OrgWide pulumi.BoolPtrInput `pulumi:"orgWide"`
}

func (SamlRolesCameraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesCamera)(nil)).Elem()
}

func (i SamlRolesCameraArgs) ToSamlRolesCameraOutput() SamlRolesCameraOutput {
	return i.ToSamlRolesCameraOutputWithContext(context.Background())
}

func (i SamlRolesCameraArgs) ToSamlRolesCameraOutputWithContext(ctx context.Context) SamlRolesCameraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesCameraOutput)
}

// SamlRolesCameraArrayInput is an input type that accepts SamlRolesCameraArray and SamlRolesCameraArrayOutput values.
// You can construct a concrete instance of `SamlRolesCameraArrayInput` via:
//
//	SamlRolesCameraArray{ SamlRolesCameraArgs{...} }
type SamlRolesCameraArrayInput interface {
	pulumi.Input

	ToSamlRolesCameraArrayOutput() SamlRolesCameraArrayOutput
	ToSamlRolesCameraArrayOutputWithContext(context.Context) SamlRolesCameraArrayOutput
}

type SamlRolesCameraArray []SamlRolesCameraInput

func (SamlRolesCameraArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesCamera)(nil)).Elem()
}

func (i SamlRolesCameraArray) ToSamlRolesCameraArrayOutput() SamlRolesCameraArrayOutput {
	return i.ToSamlRolesCameraArrayOutputWithContext(context.Background())
}

func (i SamlRolesCameraArray) ToSamlRolesCameraArrayOutputWithContext(ctx context.Context) SamlRolesCameraArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesCameraArrayOutput)
}

type SamlRolesCameraOutput struct{ *pulumi.OutputState }

func (SamlRolesCameraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesCamera)(nil)).Elem()
}

func (o SamlRolesCameraOutput) ToSamlRolesCameraOutput() SamlRolesCameraOutput {
	return o
}

func (o SamlRolesCameraOutput) ToSamlRolesCameraOutputWithContext(ctx context.Context) SamlRolesCameraOutput {
	return o
}

// Camera access ability
func (o SamlRolesCameraOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlRolesCamera) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Whether or not SAML administrator has org-wide access
func (o SamlRolesCameraOutput) OrgWide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlRolesCamera) *bool { return v.OrgWide }).(pulumi.BoolPtrOutput)
}

type SamlRolesCameraArrayOutput struct{ *pulumi.OutputState }

func (SamlRolesCameraArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesCamera)(nil)).Elem()
}

func (o SamlRolesCameraArrayOutput) ToSamlRolesCameraArrayOutput() SamlRolesCameraArrayOutput {
	return o
}

func (o SamlRolesCameraArrayOutput) ToSamlRolesCameraArrayOutputWithContext(ctx context.Context) SamlRolesCameraArrayOutput {
	return o
}

func (o SamlRolesCameraArrayOutput) Index(i pulumi.IntInput) SamlRolesCameraOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlRolesCamera {
		return vs[0].([]SamlRolesCamera)[vs[1].(int)]
	}).(SamlRolesCameraOutput)
}

type SamlRolesNetwork struct {
	// The privilege of the SAML administrator on the network
	Access *string `pulumi:"access"`
	// The network ID
	Id *string `pulumi:"id"`
}

// SamlRolesNetworkInput is an input type that accepts SamlRolesNetworkArgs and SamlRolesNetworkOutput values.
// You can construct a concrete instance of `SamlRolesNetworkInput` via:
//
//	SamlRolesNetworkArgs{...}
type SamlRolesNetworkInput interface {
	pulumi.Input

	ToSamlRolesNetworkOutput() SamlRolesNetworkOutput
	ToSamlRolesNetworkOutputWithContext(context.Context) SamlRolesNetworkOutput
}

type SamlRolesNetworkArgs struct {
	// The privilege of the SAML administrator on the network
	Access pulumi.StringPtrInput `pulumi:"access"`
	// The network ID
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SamlRolesNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesNetwork)(nil)).Elem()
}

func (i SamlRolesNetworkArgs) ToSamlRolesNetworkOutput() SamlRolesNetworkOutput {
	return i.ToSamlRolesNetworkOutputWithContext(context.Background())
}

func (i SamlRolesNetworkArgs) ToSamlRolesNetworkOutputWithContext(ctx context.Context) SamlRolesNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesNetworkOutput)
}

// SamlRolesNetworkArrayInput is an input type that accepts SamlRolesNetworkArray and SamlRolesNetworkArrayOutput values.
// You can construct a concrete instance of `SamlRolesNetworkArrayInput` via:
//
//	SamlRolesNetworkArray{ SamlRolesNetworkArgs{...} }
type SamlRolesNetworkArrayInput interface {
	pulumi.Input

	ToSamlRolesNetworkArrayOutput() SamlRolesNetworkArrayOutput
	ToSamlRolesNetworkArrayOutputWithContext(context.Context) SamlRolesNetworkArrayOutput
}

type SamlRolesNetworkArray []SamlRolesNetworkInput

func (SamlRolesNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesNetwork)(nil)).Elem()
}

func (i SamlRolesNetworkArray) ToSamlRolesNetworkArrayOutput() SamlRolesNetworkArrayOutput {
	return i.ToSamlRolesNetworkArrayOutputWithContext(context.Background())
}

func (i SamlRolesNetworkArray) ToSamlRolesNetworkArrayOutputWithContext(ctx context.Context) SamlRolesNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesNetworkArrayOutput)
}

type SamlRolesNetworkOutput struct{ *pulumi.OutputState }

func (SamlRolesNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesNetwork)(nil)).Elem()
}

func (o SamlRolesNetworkOutput) ToSamlRolesNetworkOutput() SamlRolesNetworkOutput {
	return o
}

func (o SamlRolesNetworkOutput) ToSamlRolesNetworkOutputWithContext(ctx context.Context) SamlRolesNetworkOutput {
	return o
}

// The privilege of the SAML administrator on the network
func (o SamlRolesNetworkOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlRolesNetwork) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// The network ID
func (o SamlRolesNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlRolesNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SamlRolesNetworkArrayOutput struct{ *pulumi.OutputState }

func (SamlRolesNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesNetwork)(nil)).Elem()
}

func (o SamlRolesNetworkArrayOutput) ToSamlRolesNetworkArrayOutput() SamlRolesNetworkArrayOutput {
	return o
}

func (o SamlRolesNetworkArrayOutput) ToSamlRolesNetworkArrayOutputWithContext(ctx context.Context) SamlRolesNetworkArrayOutput {
	return o
}

func (o SamlRolesNetworkArrayOutput) Index(i pulumi.IntInput) SamlRolesNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlRolesNetwork {
		return vs[0].([]SamlRolesNetwork)[vs[1].(int)]
	}).(SamlRolesNetworkOutput)
}

type SamlRolesTag struct {
	// The privilege of the SAML administrator on the tag
	Access *string `pulumi:"access"`
	// The name of the tag
	Tag *string `pulumi:"tag"`
}

// SamlRolesTagInput is an input type that accepts SamlRolesTagArgs and SamlRolesTagOutput values.
// You can construct a concrete instance of `SamlRolesTagInput` via:
//
//	SamlRolesTagArgs{...}
type SamlRolesTagInput interface {
	pulumi.Input

	ToSamlRolesTagOutput() SamlRolesTagOutput
	ToSamlRolesTagOutputWithContext(context.Context) SamlRolesTagOutput
}

type SamlRolesTagArgs struct {
	// The privilege of the SAML administrator on the tag
	Access pulumi.StringPtrInput `pulumi:"access"`
	// The name of the tag
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (SamlRolesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesTag)(nil)).Elem()
}

func (i SamlRolesTagArgs) ToSamlRolesTagOutput() SamlRolesTagOutput {
	return i.ToSamlRolesTagOutputWithContext(context.Background())
}

func (i SamlRolesTagArgs) ToSamlRolesTagOutputWithContext(ctx context.Context) SamlRolesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesTagOutput)
}

// SamlRolesTagArrayInput is an input type that accepts SamlRolesTagArray and SamlRolesTagArrayOutput values.
// You can construct a concrete instance of `SamlRolesTagArrayInput` via:
//
//	SamlRolesTagArray{ SamlRolesTagArgs{...} }
type SamlRolesTagArrayInput interface {
	pulumi.Input

	ToSamlRolesTagArrayOutput() SamlRolesTagArrayOutput
	ToSamlRolesTagArrayOutputWithContext(context.Context) SamlRolesTagArrayOutput
}

type SamlRolesTagArray []SamlRolesTagInput

func (SamlRolesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesTag)(nil)).Elem()
}

func (i SamlRolesTagArray) ToSamlRolesTagArrayOutput() SamlRolesTagArrayOutput {
	return i.ToSamlRolesTagArrayOutputWithContext(context.Background())
}

func (i SamlRolesTagArray) ToSamlRolesTagArrayOutputWithContext(ctx context.Context) SamlRolesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesTagArrayOutput)
}

type SamlRolesTagOutput struct{ *pulumi.OutputState }

func (SamlRolesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlRolesTag)(nil)).Elem()
}

func (o SamlRolesTagOutput) ToSamlRolesTagOutput() SamlRolesTagOutput {
	return o
}

func (o SamlRolesTagOutput) ToSamlRolesTagOutputWithContext(ctx context.Context) SamlRolesTagOutput {
	return o
}

// The privilege of the SAML administrator on the tag
func (o SamlRolesTagOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlRolesTag) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// The name of the tag
func (o SamlRolesTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlRolesTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type SamlRolesTagArrayOutput struct{ *pulumi.OutputState }

func (SamlRolesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlRolesTag)(nil)).Elem()
}

func (o SamlRolesTagArrayOutput) ToSamlRolesTagArrayOutput() SamlRolesTagArrayOutput {
	return o
}

func (o SamlRolesTagArrayOutput) ToSamlRolesTagArrayOutputWithContext(ctx context.Context) SamlRolesTagArrayOutput {
	return o
}

func (o SamlRolesTagArrayOutput) Index(i pulumi.IntInput) SamlRolesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlRolesTag {
		return vs[0].([]SamlRolesTag)[vs[1].(int)]
	}).(SamlRolesTagOutput)
}

type SmSentryPoliciesAssignmentsItem struct {
	// Sentry Group Policies for the Organization keyed by Network Id
	Items []SmSentryPoliciesAssignmentsItemItem `pulumi:"items"`
}

// SmSentryPoliciesAssignmentsItemInput is an input type that accepts SmSentryPoliciesAssignmentsItemArgs and SmSentryPoliciesAssignmentsItemOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemInput` via:
//
//	SmSentryPoliciesAssignmentsItemArgs{...}
type SmSentryPoliciesAssignmentsItemInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemOutput() SmSentryPoliciesAssignmentsItemOutput
	ToSmSentryPoliciesAssignmentsItemOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemOutput
}

type SmSentryPoliciesAssignmentsItemArgs struct {
	// Sentry Group Policies for the Organization keyed by Network Id
	Items SmSentryPoliciesAssignmentsItemItemArrayInput `pulumi:"items"`
}

func (SmSentryPoliciesAssignmentsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItem)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsItemArgs) ToSmSentryPoliciesAssignmentsItemOutput() SmSentryPoliciesAssignmentsItemOutput {
	return i.ToSmSentryPoliciesAssignmentsItemOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemArgs) ToSmSentryPoliciesAssignmentsItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemOutput)
}

func (i SmSentryPoliciesAssignmentsItemArgs) ToSmSentryPoliciesAssignmentsItemPtrOutput() SmSentryPoliciesAssignmentsItemPtrOutput {
	return i.ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemArgs) ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemOutput).ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(ctx)
}

// SmSentryPoliciesAssignmentsItemPtrInput is an input type that accepts SmSentryPoliciesAssignmentsItemArgs, SmSentryPoliciesAssignmentsItemPtr and SmSentryPoliciesAssignmentsItemPtrOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemPtrInput` via:
//
//	        SmSentryPoliciesAssignmentsItemArgs{...}
//
//	or:
//
//	        nil
type SmSentryPoliciesAssignmentsItemPtrInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemPtrOutput() SmSentryPoliciesAssignmentsItemPtrOutput
	ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemPtrOutput
}

type smSentryPoliciesAssignmentsItemPtrType SmSentryPoliciesAssignmentsItemArgs

func SmSentryPoliciesAssignmentsItemPtr(v *SmSentryPoliciesAssignmentsItemArgs) SmSentryPoliciesAssignmentsItemPtrInput {
	return (*smSentryPoliciesAssignmentsItemPtrType)(v)
}

func (*smSentryPoliciesAssignmentsItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmSentryPoliciesAssignmentsItem)(nil)).Elem()
}

func (i *smSentryPoliciesAssignmentsItemPtrType) ToSmSentryPoliciesAssignmentsItemPtrOutput() SmSentryPoliciesAssignmentsItemPtrOutput {
	return i.ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(context.Background())
}

func (i *smSentryPoliciesAssignmentsItemPtrType) ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemPtrOutput)
}

type SmSentryPoliciesAssignmentsItemOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemOutput) ToSmSentryPoliciesAssignmentsItemOutput() SmSentryPoliciesAssignmentsItemOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemOutput) ToSmSentryPoliciesAssignmentsItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemOutput) ToSmSentryPoliciesAssignmentsItemPtrOutput() SmSentryPoliciesAssignmentsItemPtrOutput {
	return o.ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(context.Background())
}

func (o SmSentryPoliciesAssignmentsItemOutput) ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmSentryPoliciesAssignmentsItem) *SmSentryPoliciesAssignmentsItem {
		return &v
	}).(SmSentryPoliciesAssignmentsItemPtrOutput)
}

// Sentry Group Policies for the Organization keyed by Network Id
func (o SmSentryPoliciesAssignmentsItemOutput) Items() SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItem) []SmSentryPoliciesAssignmentsItemItem { return v.Items }).(SmSentryPoliciesAssignmentsItemItemArrayOutput)
}

type SmSentryPoliciesAssignmentsItemPtrOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmSentryPoliciesAssignmentsItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemPtrOutput) ToSmSentryPoliciesAssignmentsItemPtrOutput() SmSentryPoliciesAssignmentsItemPtrOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemPtrOutput) ToSmSentryPoliciesAssignmentsItemPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemPtrOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemPtrOutput) Elem() SmSentryPoliciesAssignmentsItemOutput {
	return o.ApplyT(func(v *SmSentryPoliciesAssignmentsItem) SmSentryPoliciesAssignmentsItem {
		if v != nil {
			return *v
		}
		var ret SmSentryPoliciesAssignmentsItem
		return ret
	}).(SmSentryPoliciesAssignmentsItemOutput)
}

// Sentry Group Policies for the Organization keyed by Network Id
func (o SmSentryPoliciesAssignmentsItemPtrOutput) Items() SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return o.ApplyT(func(v *SmSentryPoliciesAssignmentsItem) []SmSentryPoliciesAssignmentsItemItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(SmSentryPoliciesAssignmentsItemItemArrayOutput)
}

type SmSentryPoliciesAssignmentsItemItem struct {
	// The Id of the Network
	NetworkId *string `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies []SmSentryPoliciesAssignmentsItemItemPolicy `pulumi:"policies"`
}

// SmSentryPoliciesAssignmentsItemItemInput is an input type that accepts SmSentryPoliciesAssignmentsItemItemArgs and SmSentryPoliciesAssignmentsItemItemOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemItemInput` via:
//
//	SmSentryPoliciesAssignmentsItemItemArgs{...}
type SmSentryPoliciesAssignmentsItemItemInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemItemOutput() SmSentryPoliciesAssignmentsItemItemOutput
	ToSmSentryPoliciesAssignmentsItemItemOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemItemOutput
}

type SmSentryPoliciesAssignmentsItemItemArgs struct {
	// The Id of the Network
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies SmSentryPoliciesAssignmentsItemItemPolicyArrayInput `pulumi:"policies"`
}

func (SmSentryPoliciesAssignmentsItemItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItem)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsItemItemArgs) ToSmSentryPoliciesAssignmentsItemItemOutput() SmSentryPoliciesAssignmentsItemItemOutput {
	return i.ToSmSentryPoliciesAssignmentsItemItemOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemItemArgs) ToSmSentryPoliciesAssignmentsItemItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemItemOutput)
}

// SmSentryPoliciesAssignmentsItemItemArrayInput is an input type that accepts SmSentryPoliciesAssignmentsItemItemArray and SmSentryPoliciesAssignmentsItemItemArrayOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemItemArrayInput` via:
//
//	SmSentryPoliciesAssignmentsItemItemArray{ SmSentryPoliciesAssignmentsItemItemArgs{...} }
type SmSentryPoliciesAssignmentsItemItemArrayInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemItemArrayOutput() SmSentryPoliciesAssignmentsItemItemArrayOutput
	ToSmSentryPoliciesAssignmentsItemItemArrayOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemItemArrayOutput
}

type SmSentryPoliciesAssignmentsItemItemArray []SmSentryPoliciesAssignmentsItemItemInput

func (SmSentryPoliciesAssignmentsItemItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsItemItem)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsItemItemArray) ToSmSentryPoliciesAssignmentsItemItemArrayOutput() SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return i.ToSmSentryPoliciesAssignmentsItemItemArrayOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemItemArray) ToSmSentryPoliciesAssignmentsItemItemArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemItemArrayOutput)
}

type SmSentryPoliciesAssignmentsItemItemOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemItemOutput) ToSmSentryPoliciesAssignmentsItemItemOutput() SmSentryPoliciesAssignmentsItemItemOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemOutput) ToSmSentryPoliciesAssignmentsItemItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemOutput {
	return o
}

// The Id of the Network
func (o SmSentryPoliciesAssignmentsItemItemOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItem) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Array of Sentry Group Policies for the Network
func (o SmSentryPoliciesAssignmentsItemItemOutput) Policies() SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItem) []SmSentryPoliciesAssignmentsItemItemPolicy {
		return v.Policies
	}).(SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput)
}

type SmSentryPoliciesAssignmentsItemItemArrayOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsItemItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemItemArrayOutput) ToSmSentryPoliciesAssignmentsItemItemArrayOutput() SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemArrayOutput) ToSmSentryPoliciesAssignmentsItemItemArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemArrayOutput) Index(i pulumi.IntInput) SmSentryPoliciesAssignmentsItemItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmSentryPoliciesAssignmentsItemItem {
		return vs[0].([]SmSentryPoliciesAssignmentsItemItem)[vs[1].(int)]
	}).(SmSentryPoliciesAssignmentsItemItemOutput)
}

type SmSentryPoliciesAssignmentsItemItemPolicy struct {
	// The creation time of the Sentry Policy
	CreatedAt *string `pulumi:"createdAt"`
	// The number of the Group Policy
	GroupNumber *string `pulumi:"groupNumber"`
	// The Id of the Group Policy. This is associated with the network specified by the networkId.
	GroupPolicyId *string `pulumi:"groupPolicyId"`
	// The last update time of the Sentry Policy
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
	NetworkId *string `pulumi:"networkId"`
	// The Id of the Sentry Policy
	PolicyId *string `pulumi:"policyId"`
	// The priority of the Sentry Policy
	Priority *string `pulumi:"priority"`
	// The scope of the Sentry Policy
	Scope *string `pulumi:"scope"`
	// The Id of the Systems Manager Network the Sentry Policy is assigned to
	SmNetworkId *string `pulumi:"smNetworkId"`
	// The tags of the Sentry Policy
	Tags []string `pulumi:"tags"`
}

// SmSentryPoliciesAssignmentsItemItemPolicyInput is an input type that accepts SmSentryPoliciesAssignmentsItemItemPolicyArgs and SmSentryPoliciesAssignmentsItemItemPolicyOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemItemPolicyInput` via:
//
//	SmSentryPoliciesAssignmentsItemItemPolicyArgs{...}
type SmSentryPoliciesAssignmentsItemItemPolicyInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemItemPolicyOutput() SmSentryPoliciesAssignmentsItemItemPolicyOutput
	ToSmSentryPoliciesAssignmentsItemItemPolicyOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemItemPolicyOutput
}

type SmSentryPoliciesAssignmentsItemItemPolicyArgs struct {
	// The creation time of the Sentry Policy
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The number of the Group Policy
	GroupNumber pulumi.StringPtrInput `pulumi:"groupNumber"`
	// The Id of the Group Policy. This is associated with the network specified by the networkId.
	GroupPolicyId pulumi.StringPtrInput `pulumi:"groupPolicyId"`
	// The last update time of the Sentry Policy
	LastUpdatedAt pulumi.StringPtrInput `pulumi:"lastUpdatedAt"`
	// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// The Id of the Sentry Policy
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The priority of the Sentry Policy
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// The scope of the Sentry Policy
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The Id of the Systems Manager Network the Sentry Policy is assigned to
	SmNetworkId pulumi.StringPtrInput `pulumi:"smNetworkId"`
	// The tags of the Sentry Policy
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (SmSentryPoliciesAssignmentsItemItemPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemPolicy)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsItemItemPolicyArgs) ToSmSentryPoliciesAssignmentsItemItemPolicyOutput() SmSentryPoliciesAssignmentsItemItemPolicyOutput {
	return i.ToSmSentryPoliciesAssignmentsItemItemPolicyOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemItemPolicyArgs) ToSmSentryPoliciesAssignmentsItemItemPolicyOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemItemPolicyOutput)
}

// SmSentryPoliciesAssignmentsItemItemPolicyArrayInput is an input type that accepts SmSentryPoliciesAssignmentsItemItemPolicyArray and SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsItemItemPolicyArrayInput` via:
//
//	SmSentryPoliciesAssignmentsItemItemPolicyArray{ SmSentryPoliciesAssignmentsItemItemPolicyArgs{...} }
type SmSentryPoliciesAssignmentsItemItemPolicyArrayInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutput() SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput
	ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutputWithContext(context.Context) SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput
}

type SmSentryPoliciesAssignmentsItemItemPolicyArray []SmSentryPoliciesAssignmentsItemItemPolicyInput

func (SmSentryPoliciesAssignmentsItemItemPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsItemItemPolicy)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsItemItemPolicyArray) ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutput() SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput {
	return i.ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsItemItemPolicyArray) ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput)
}

type SmSentryPoliciesAssignmentsItemItemPolicyOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemItemPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemPolicy)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) ToSmSentryPoliciesAssignmentsItemItemPolicyOutput() SmSentryPoliciesAssignmentsItemItemPolicyOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) ToSmSentryPoliciesAssignmentsItemItemPolicyOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemPolicyOutput {
	return o
}

// The creation time of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The number of the Group Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) GroupNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.GroupNumber }).(pulumi.StringPtrOutput)
}

// The Id of the Group Policy. This is associated with the network specified by the networkId.
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) GroupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.GroupPolicyId }).(pulumi.StringPtrOutput)
}

// The last update time of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) LastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.LastUpdatedAt }).(pulumi.StringPtrOutput)
}

// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// The Id of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The priority of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// The scope of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The Id of the Systems Manager Network the Sentry Policy is assigned to
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) SmNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) *string { return v.SmNetworkId }).(pulumi.StringPtrOutput)
}

// The tags of the Sentry Policy
func (o SmSentryPoliciesAssignmentsItemItemPolicyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsItemItemPolicy) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsItemItemPolicy)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput) ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutput() SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput) ToSmSentryPoliciesAssignmentsItemItemPolicyArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput) Index(i pulumi.IntInput) SmSentryPoliciesAssignmentsItemItemPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmSentryPoliciesAssignmentsItemItemPolicy {
		return vs[0].([]SmSentryPoliciesAssignmentsItemItemPolicy)[vs[1].(int)]
	}).(SmSentryPoliciesAssignmentsItemItemPolicyOutput)
}

type SmSentryPoliciesAssignmentsParameters struct {
	// Sentry Group Policies for the Organization keyed by Network Id
	Items []SmSentryPoliciesAssignmentsParametersItem `pulumi:"items"`
}

// SmSentryPoliciesAssignmentsParametersInput is an input type that accepts SmSentryPoliciesAssignmentsParametersArgs and SmSentryPoliciesAssignmentsParametersOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersInput` via:
//
//	SmSentryPoliciesAssignmentsParametersArgs{...}
type SmSentryPoliciesAssignmentsParametersInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersOutput() SmSentryPoliciesAssignmentsParametersOutput
	ToSmSentryPoliciesAssignmentsParametersOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersOutput
}

type SmSentryPoliciesAssignmentsParametersArgs struct {
	// Sentry Group Policies for the Organization keyed by Network Id
	Items SmSentryPoliciesAssignmentsParametersItemArrayInput `pulumi:"items"`
}

func (SmSentryPoliciesAssignmentsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParameters)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsParametersArgs) ToSmSentryPoliciesAssignmentsParametersOutput() SmSentryPoliciesAssignmentsParametersOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersArgs) ToSmSentryPoliciesAssignmentsParametersOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersOutput)
}

func (i SmSentryPoliciesAssignmentsParametersArgs) ToSmSentryPoliciesAssignmentsParametersPtrOutput() SmSentryPoliciesAssignmentsParametersPtrOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersArgs) ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersOutput).ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(ctx)
}

// SmSentryPoliciesAssignmentsParametersPtrInput is an input type that accepts SmSentryPoliciesAssignmentsParametersArgs, SmSentryPoliciesAssignmentsParametersPtr and SmSentryPoliciesAssignmentsParametersPtrOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersPtrInput` via:
//
//	        SmSentryPoliciesAssignmentsParametersArgs{...}
//
//	or:
//
//	        nil
type SmSentryPoliciesAssignmentsParametersPtrInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersPtrOutput() SmSentryPoliciesAssignmentsParametersPtrOutput
	ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersPtrOutput
}

type smSentryPoliciesAssignmentsParametersPtrType SmSentryPoliciesAssignmentsParametersArgs

func SmSentryPoliciesAssignmentsParametersPtr(v *SmSentryPoliciesAssignmentsParametersArgs) SmSentryPoliciesAssignmentsParametersPtrInput {
	return (*smSentryPoliciesAssignmentsParametersPtrType)(v)
}

func (*smSentryPoliciesAssignmentsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmSentryPoliciesAssignmentsParameters)(nil)).Elem()
}

func (i *smSentryPoliciesAssignmentsParametersPtrType) ToSmSentryPoliciesAssignmentsParametersPtrOutput() SmSentryPoliciesAssignmentsParametersPtrOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(context.Background())
}

func (i *smSentryPoliciesAssignmentsParametersPtrType) ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersPtrOutput)
}

type SmSentryPoliciesAssignmentsParametersOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParameters)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersOutput) ToSmSentryPoliciesAssignmentsParametersOutput() SmSentryPoliciesAssignmentsParametersOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersOutput) ToSmSentryPoliciesAssignmentsParametersOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersOutput) ToSmSentryPoliciesAssignmentsParametersPtrOutput() SmSentryPoliciesAssignmentsParametersPtrOutput {
	return o.ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(context.Background())
}

func (o SmSentryPoliciesAssignmentsParametersOutput) ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmSentryPoliciesAssignmentsParameters) *SmSentryPoliciesAssignmentsParameters {
		return &v
	}).(SmSentryPoliciesAssignmentsParametersPtrOutput)
}

// Sentry Group Policies for the Organization keyed by Network Id
func (o SmSentryPoliciesAssignmentsParametersOutput) Items() SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParameters) []SmSentryPoliciesAssignmentsParametersItem {
		return v.Items
	}).(SmSentryPoliciesAssignmentsParametersItemArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersPtrOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmSentryPoliciesAssignmentsParameters)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersPtrOutput) ToSmSentryPoliciesAssignmentsParametersPtrOutput() SmSentryPoliciesAssignmentsParametersPtrOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersPtrOutput) ToSmSentryPoliciesAssignmentsParametersPtrOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersPtrOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersPtrOutput) Elem() SmSentryPoliciesAssignmentsParametersOutput {
	return o.ApplyT(func(v *SmSentryPoliciesAssignmentsParameters) SmSentryPoliciesAssignmentsParameters {
		if v != nil {
			return *v
		}
		var ret SmSentryPoliciesAssignmentsParameters
		return ret
	}).(SmSentryPoliciesAssignmentsParametersOutput)
}

// Sentry Group Policies for the Organization keyed by Network Id
func (o SmSentryPoliciesAssignmentsParametersPtrOutput) Items() SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return o.ApplyT(func(v *SmSentryPoliciesAssignmentsParameters) []SmSentryPoliciesAssignmentsParametersItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(SmSentryPoliciesAssignmentsParametersItemArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersItem struct {
	// The Id of the Network
	NetworkId *string `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies []SmSentryPoliciesAssignmentsParametersItemPolicy `pulumi:"policies"`
}

// SmSentryPoliciesAssignmentsParametersItemInput is an input type that accepts SmSentryPoliciesAssignmentsParametersItemArgs and SmSentryPoliciesAssignmentsParametersItemOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersItemInput` via:
//
//	SmSentryPoliciesAssignmentsParametersItemArgs{...}
type SmSentryPoliciesAssignmentsParametersItemInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersItemOutput() SmSentryPoliciesAssignmentsParametersItemOutput
	ToSmSentryPoliciesAssignmentsParametersItemOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersItemOutput
}

type SmSentryPoliciesAssignmentsParametersItemArgs struct {
	// The Id of the Network
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies SmSentryPoliciesAssignmentsParametersItemPolicyArrayInput `pulumi:"policies"`
}

func (SmSentryPoliciesAssignmentsParametersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItem)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsParametersItemArgs) ToSmSentryPoliciesAssignmentsParametersItemOutput() SmSentryPoliciesAssignmentsParametersItemOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersItemOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersItemArgs) ToSmSentryPoliciesAssignmentsParametersItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersItemOutput)
}

// SmSentryPoliciesAssignmentsParametersItemArrayInput is an input type that accepts SmSentryPoliciesAssignmentsParametersItemArray and SmSentryPoliciesAssignmentsParametersItemArrayOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersItemArrayInput` via:
//
//	SmSentryPoliciesAssignmentsParametersItemArray{ SmSentryPoliciesAssignmentsParametersItemArgs{...} }
type SmSentryPoliciesAssignmentsParametersItemArrayInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersItemArrayOutput() SmSentryPoliciesAssignmentsParametersItemArrayOutput
	ToSmSentryPoliciesAssignmentsParametersItemArrayOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersItemArrayOutput
}

type SmSentryPoliciesAssignmentsParametersItemArray []SmSentryPoliciesAssignmentsParametersItemInput

func (SmSentryPoliciesAssignmentsParametersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsParametersItem)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsParametersItemArray) ToSmSentryPoliciesAssignmentsParametersItemArrayOutput() SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersItemArrayOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersItemArray) ToSmSentryPoliciesAssignmentsParametersItemArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersItemArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersItemOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersItemOutput) ToSmSentryPoliciesAssignmentsParametersItemOutput() SmSentryPoliciesAssignmentsParametersItemOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemOutput) ToSmSentryPoliciesAssignmentsParametersItemOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemOutput {
	return o
}

// The Id of the Network
func (o SmSentryPoliciesAssignmentsParametersItemOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItem) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Array of Sentry Group Policies for the Network
func (o SmSentryPoliciesAssignmentsParametersItemOutput) Policies() SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItem) []SmSentryPoliciesAssignmentsParametersItemPolicy {
		return v.Policies
	}).(SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersItemArrayOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsParametersItem)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersItemArrayOutput) ToSmSentryPoliciesAssignmentsParametersItemArrayOutput() SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemArrayOutput) ToSmSentryPoliciesAssignmentsParametersItemArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemArrayOutput) Index(i pulumi.IntInput) SmSentryPoliciesAssignmentsParametersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmSentryPoliciesAssignmentsParametersItem {
		return vs[0].([]SmSentryPoliciesAssignmentsParametersItem)[vs[1].(int)]
	}).(SmSentryPoliciesAssignmentsParametersItemOutput)
}

type SmSentryPoliciesAssignmentsParametersItemPolicy struct {
	// The Group Policy Id
	GroupPolicyId *string `pulumi:"groupPolicyId"`
	// The Sentry Policy Id, if updating an existing Sentry Policy
	PolicyId *string `pulumi:"policyId"`
	// The scope of the Sentry Policy
	Scope *string `pulumi:"scope"`
	// The Id of the Systems Manager Network
	SmNetworkId *string `pulumi:"smNetworkId"`
	// The tags for the Sentry Policy
	Tags []string `pulumi:"tags"`
}

// SmSentryPoliciesAssignmentsParametersItemPolicyInput is an input type that accepts SmSentryPoliciesAssignmentsParametersItemPolicyArgs and SmSentryPoliciesAssignmentsParametersItemPolicyOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersItemPolicyInput` via:
//
//	SmSentryPoliciesAssignmentsParametersItemPolicyArgs{...}
type SmSentryPoliciesAssignmentsParametersItemPolicyInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersItemPolicyOutput() SmSentryPoliciesAssignmentsParametersItemPolicyOutput
	ToSmSentryPoliciesAssignmentsParametersItemPolicyOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyOutput
}

type SmSentryPoliciesAssignmentsParametersItemPolicyArgs struct {
	// The Group Policy Id
	GroupPolicyId pulumi.StringPtrInput `pulumi:"groupPolicyId"`
	// The Sentry Policy Id, if updating an existing Sentry Policy
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The scope of the Sentry Policy
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The Id of the Systems Manager Network
	SmNetworkId pulumi.StringPtrInput `pulumi:"smNetworkId"`
	// The tags for the Sentry Policy
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (SmSentryPoliciesAssignmentsParametersItemPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemPolicy)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsParametersItemPolicyArgs) ToSmSentryPoliciesAssignmentsParametersItemPolicyOutput() SmSentryPoliciesAssignmentsParametersItemPolicyOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersItemPolicyOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersItemPolicyArgs) ToSmSentryPoliciesAssignmentsParametersItemPolicyOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersItemPolicyOutput)
}

// SmSentryPoliciesAssignmentsParametersItemPolicyArrayInput is an input type that accepts SmSentryPoliciesAssignmentsParametersItemPolicyArray and SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput values.
// You can construct a concrete instance of `SmSentryPoliciesAssignmentsParametersItemPolicyArrayInput` via:
//
//	SmSentryPoliciesAssignmentsParametersItemPolicyArray{ SmSentryPoliciesAssignmentsParametersItemPolicyArgs{...} }
type SmSentryPoliciesAssignmentsParametersItemPolicyArrayInput interface {
	pulumi.Input

	ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput() SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput
	ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutputWithContext(context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput
}

type SmSentryPoliciesAssignmentsParametersItemPolicyArray []SmSentryPoliciesAssignmentsParametersItemPolicyInput

func (SmSentryPoliciesAssignmentsParametersItemPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsParametersItemPolicy)(nil)).Elem()
}

func (i SmSentryPoliciesAssignmentsParametersItemPolicyArray) ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput() SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput {
	return i.ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutputWithContext(context.Background())
}

func (i SmSentryPoliciesAssignmentsParametersItemPolicyArray) ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersItemPolicyOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersItemPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemPolicy)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) ToSmSentryPoliciesAssignmentsParametersItemPolicyOutput() SmSentryPoliciesAssignmentsParametersItemPolicyOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) ToSmSentryPoliciesAssignmentsParametersItemPolicyOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyOutput {
	return o
}

// The Group Policy Id
func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) GroupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItemPolicy) *string { return v.GroupPolicyId }).(pulumi.StringPtrOutput)
}

// The Sentry Policy Id, if updating an existing Sentry Policy
func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItemPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The scope of the Sentry Policy
func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItemPolicy) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The Id of the Systems Manager Network
func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) SmNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItemPolicy) *string { return v.SmNetworkId }).(pulumi.StringPtrOutput)
}

// The tags for the Sentry Policy
func (o SmSentryPoliciesAssignmentsParametersItemPolicyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SmSentryPoliciesAssignmentsParametersItemPolicy) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput struct{ *pulumi.OutputState }

func (SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmSentryPoliciesAssignmentsParametersItemPolicy)(nil)).Elem()
}

func (o SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput) ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput() SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput) ToSmSentryPoliciesAssignmentsParametersItemPolicyArrayOutputWithContext(ctx context.Context) SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput {
	return o
}

func (o SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput) Index(i pulumi.IntInput) SmSentryPoliciesAssignmentsParametersItemPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmSentryPoliciesAssignmentsParametersItemPolicy {
		return vs[0].([]SmSentryPoliciesAssignmentsParametersItemPolicy)[vs[1].(int)]
	}).(SmSentryPoliciesAssignmentsParametersItemPolicyOutput)
}

type SwitchDevicesCloneParameters struct {
	// Serial number of the source switch (must be on a network not bound to a template)
	SourceSerial *string `pulumi:"sourceSerial"`
	// Array of serial numbers of one or more target switches (must be on a network not bound to a template)
	TargetSerials []string `pulumi:"targetSerials"`
}

// SwitchDevicesCloneParametersInput is an input type that accepts SwitchDevicesCloneParametersArgs and SwitchDevicesCloneParametersOutput values.
// You can construct a concrete instance of `SwitchDevicesCloneParametersInput` via:
//
//	SwitchDevicesCloneParametersArgs{...}
type SwitchDevicesCloneParametersInput interface {
	pulumi.Input

	ToSwitchDevicesCloneParametersOutput() SwitchDevicesCloneParametersOutput
	ToSwitchDevicesCloneParametersOutputWithContext(context.Context) SwitchDevicesCloneParametersOutput
}

type SwitchDevicesCloneParametersArgs struct {
	// Serial number of the source switch (must be on a network not bound to a template)
	SourceSerial pulumi.StringPtrInput `pulumi:"sourceSerial"`
	// Array of serial numbers of one or more target switches (must be on a network not bound to a template)
	TargetSerials pulumi.StringArrayInput `pulumi:"targetSerials"`
}

func (SwitchDevicesCloneParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDevicesCloneParameters)(nil)).Elem()
}

func (i SwitchDevicesCloneParametersArgs) ToSwitchDevicesCloneParametersOutput() SwitchDevicesCloneParametersOutput {
	return i.ToSwitchDevicesCloneParametersOutputWithContext(context.Background())
}

func (i SwitchDevicesCloneParametersArgs) ToSwitchDevicesCloneParametersOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneParametersOutput)
}

func (i SwitchDevicesCloneParametersArgs) ToSwitchDevicesCloneParametersPtrOutput() SwitchDevicesCloneParametersPtrOutput {
	return i.ToSwitchDevicesCloneParametersPtrOutputWithContext(context.Background())
}

func (i SwitchDevicesCloneParametersArgs) ToSwitchDevicesCloneParametersPtrOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneParametersOutput).ToSwitchDevicesCloneParametersPtrOutputWithContext(ctx)
}

// SwitchDevicesCloneParametersPtrInput is an input type that accepts SwitchDevicesCloneParametersArgs, SwitchDevicesCloneParametersPtr and SwitchDevicesCloneParametersPtrOutput values.
// You can construct a concrete instance of `SwitchDevicesCloneParametersPtrInput` via:
//
//	        SwitchDevicesCloneParametersArgs{...}
//
//	or:
//
//	        nil
type SwitchDevicesCloneParametersPtrInput interface {
	pulumi.Input

	ToSwitchDevicesCloneParametersPtrOutput() SwitchDevicesCloneParametersPtrOutput
	ToSwitchDevicesCloneParametersPtrOutputWithContext(context.Context) SwitchDevicesCloneParametersPtrOutput
}

type switchDevicesCloneParametersPtrType SwitchDevicesCloneParametersArgs

func SwitchDevicesCloneParametersPtr(v *SwitchDevicesCloneParametersArgs) SwitchDevicesCloneParametersPtrInput {
	return (*switchDevicesCloneParametersPtrType)(v)
}

func (*switchDevicesCloneParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDevicesCloneParameters)(nil)).Elem()
}

func (i *switchDevicesCloneParametersPtrType) ToSwitchDevicesCloneParametersPtrOutput() SwitchDevicesCloneParametersPtrOutput {
	return i.ToSwitchDevicesCloneParametersPtrOutputWithContext(context.Background())
}

func (i *switchDevicesCloneParametersPtrType) ToSwitchDevicesCloneParametersPtrOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDevicesCloneParametersPtrOutput)
}

type SwitchDevicesCloneParametersOutput struct{ *pulumi.OutputState }

func (SwitchDevicesCloneParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDevicesCloneParameters)(nil)).Elem()
}

func (o SwitchDevicesCloneParametersOutput) ToSwitchDevicesCloneParametersOutput() SwitchDevicesCloneParametersOutput {
	return o
}

func (o SwitchDevicesCloneParametersOutput) ToSwitchDevicesCloneParametersOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersOutput {
	return o
}

func (o SwitchDevicesCloneParametersOutput) ToSwitchDevicesCloneParametersPtrOutput() SwitchDevicesCloneParametersPtrOutput {
	return o.ToSwitchDevicesCloneParametersPtrOutputWithContext(context.Background())
}

func (o SwitchDevicesCloneParametersOutput) ToSwitchDevicesCloneParametersPtrOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchDevicesCloneParameters) *SwitchDevicesCloneParameters {
		return &v
	}).(SwitchDevicesCloneParametersPtrOutput)
}

// Serial number of the source switch (must be on a network not bound to a template)
func (o SwitchDevicesCloneParametersOutput) SourceSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDevicesCloneParameters) *string { return v.SourceSerial }).(pulumi.StringPtrOutput)
}

// Array of serial numbers of one or more target switches (must be on a network not bound to a template)
func (o SwitchDevicesCloneParametersOutput) TargetSerials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDevicesCloneParameters) []string { return v.TargetSerials }).(pulumi.StringArrayOutput)
}

type SwitchDevicesCloneParametersPtrOutput struct{ *pulumi.OutputState }

func (SwitchDevicesCloneParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDevicesCloneParameters)(nil)).Elem()
}

func (o SwitchDevicesCloneParametersPtrOutput) ToSwitchDevicesCloneParametersPtrOutput() SwitchDevicesCloneParametersPtrOutput {
	return o
}

func (o SwitchDevicesCloneParametersPtrOutput) ToSwitchDevicesCloneParametersPtrOutputWithContext(ctx context.Context) SwitchDevicesCloneParametersPtrOutput {
	return o
}

func (o SwitchDevicesCloneParametersPtrOutput) Elem() SwitchDevicesCloneParametersOutput {
	return o.ApplyT(func(v *SwitchDevicesCloneParameters) SwitchDevicesCloneParameters {
		if v != nil {
			return *v
		}
		var ret SwitchDevicesCloneParameters
		return ret
	}).(SwitchDevicesCloneParametersOutput)
}

// Serial number of the source switch (must be on a network not bound to a template)
func (o SwitchDevicesCloneParametersPtrOutput) SourceSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchDevicesCloneParameters) *string {
		if v == nil {
			return nil
		}
		return v.SourceSerial
	}).(pulumi.StringPtrOutput)
}

// Array of serial numbers of one or more target switches (must be on a network not bound to a template)
func (o SwitchDevicesCloneParametersPtrOutput) TargetSerials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchDevicesCloneParameters) []string {
		if v == nil {
			return nil
		}
		return v.TargetSerials
	}).(pulumi.StringArrayOutput)
}

type BaseApi struct {
	// Enable API access
	Enabled *bool `pulumi:"enabled"`
}

// BaseApiInput is an input type that accepts BaseApiArgs and BaseApiOutput values.
// You can construct a concrete instance of `BaseApiInput` via:
//
//	BaseApiArgs{...}
type BaseApiInput interface {
	pulumi.Input

	ToBaseApiOutput() BaseApiOutput
	ToBaseApiOutputWithContext(context.Context) BaseApiOutput
}

type BaseApiArgs struct {
	// Enable API access
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (BaseApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseApi)(nil)).Elem()
}

func (i BaseApiArgs) ToBaseApiOutput() BaseApiOutput {
	return i.ToBaseApiOutputWithContext(context.Background())
}

func (i BaseApiArgs) ToBaseApiOutputWithContext(ctx context.Context) BaseApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseApiOutput)
}

func (i BaseApiArgs) ToBaseApiPtrOutput() BaseApiPtrOutput {
	return i.ToBaseApiPtrOutputWithContext(context.Background())
}

func (i BaseApiArgs) ToBaseApiPtrOutputWithContext(ctx context.Context) BaseApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseApiOutput).ToBaseApiPtrOutputWithContext(ctx)
}

// BaseApiPtrInput is an input type that accepts BaseApiArgs, BaseApiPtr and BaseApiPtrOutput values.
// You can construct a concrete instance of `BaseApiPtrInput` via:
//
//	        BaseApiArgs{...}
//
//	or:
//
//	        nil
type BaseApiPtrInput interface {
	pulumi.Input

	ToBaseApiPtrOutput() BaseApiPtrOutput
	ToBaseApiPtrOutputWithContext(context.Context) BaseApiPtrOutput
}

type baseApiPtrType BaseApiArgs

func BaseApiPtr(v *BaseApiArgs) BaseApiPtrInput {
	return (*baseApiPtrType)(v)
}

func (*baseApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseApi)(nil)).Elem()
}

func (i *baseApiPtrType) ToBaseApiPtrOutput() BaseApiPtrOutput {
	return i.ToBaseApiPtrOutputWithContext(context.Background())
}

func (i *baseApiPtrType) ToBaseApiPtrOutputWithContext(ctx context.Context) BaseApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseApiPtrOutput)
}

type BaseApiOutput struct{ *pulumi.OutputState }

func (BaseApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseApi)(nil)).Elem()
}

func (o BaseApiOutput) ToBaseApiOutput() BaseApiOutput {
	return o
}

func (o BaseApiOutput) ToBaseApiOutputWithContext(ctx context.Context) BaseApiOutput {
	return o
}

func (o BaseApiOutput) ToBaseApiPtrOutput() BaseApiPtrOutput {
	return o.ToBaseApiPtrOutputWithContext(context.Background())
}

func (o BaseApiOutput) ToBaseApiPtrOutputWithContext(ctx context.Context) BaseApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseApi) *BaseApi {
		return &v
	}).(BaseApiPtrOutput)
}

// Enable API access
func (o BaseApiOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BaseApi) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type BaseApiPtrOutput struct{ *pulumi.OutputState }

func (BaseApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseApi)(nil)).Elem()
}

func (o BaseApiPtrOutput) ToBaseApiPtrOutput() BaseApiPtrOutput {
	return o
}

func (o BaseApiPtrOutput) ToBaseApiPtrOutputWithContext(ctx context.Context) BaseApiPtrOutput {
	return o
}

func (o BaseApiPtrOutput) Elem() BaseApiOutput {
	return o.ApplyT(func(v *BaseApi) BaseApi {
		if v != nil {
			return *v
		}
		var ret BaseApi
		return ret
	}).(BaseApiOutput)
}

// Enable API access
func (o BaseApiPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BaseApi) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BaseCloud struct {
	// Region info
	Region *BaseCloudRegion `pulumi:"region"`
}

// BaseCloudInput is an input type that accepts BaseCloudArgs and BaseCloudOutput values.
// You can construct a concrete instance of `BaseCloudInput` via:
//
//	BaseCloudArgs{...}
type BaseCloudInput interface {
	pulumi.Input

	ToBaseCloudOutput() BaseCloudOutput
	ToBaseCloudOutputWithContext(context.Context) BaseCloudOutput
}

type BaseCloudArgs struct {
	// Region info
	Region BaseCloudRegionPtrInput `pulumi:"region"`
}

func (BaseCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseCloud)(nil)).Elem()
}

func (i BaseCloudArgs) ToBaseCloudOutput() BaseCloudOutput {
	return i.ToBaseCloudOutputWithContext(context.Background())
}

func (i BaseCloudArgs) ToBaseCloudOutputWithContext(ctx context.Context) BaseCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudOutput)
}

func (i BaseCloudArgs) ToBaseCloudPtrOutput() BaseCloudPtrOutput {
	return i.ToBaseCloudPtrOutputWithContext(context.Background())
}

func (i BaseCloudArgs) ToBaseCloudPtrOutputWithContext(ctx context.Context) BaseCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudOutput).ToBaseCloudPtrOutputWithContext(ctx)
}

// BaseCloudPtrInput is an input type that accepts BaseCloudArgs, BaseCloudPtr and BaseCloudPtrOutput values.
// You can construct a concrete instance of `BaseCloudPtrInput` via:
//
//	        BaseCloudArgs{...}
//
//	or:
//
//	        nil
type BaseCloudPtrInput interface {
	pulumi.Input

	ToBaseCloudPtrOutput() BaseCloudPtrOutput
	ToBaseCloudPtrOutputWithContext(context.Context) BaseCloudPtrOutput
}

type baseCloudPtrType BaseCloudArgs

func BaseCloudPtr(v *BaseCloudArgs) BaseCloudPtrInput {
	return (*baseCloudPtrType)(v)
}

func (*baseCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseCloud)(nil)).Elem()
}

func (i *baseCloudPtrType) ToBaseCloudPtrOutput() BaseCloudPtrOutput {
	return i.ToBaseCloudPtrOutputWithContext(context.Background())
}

func (i *baseCloudPtrType) ToBaseCloudPtrOutputWithContext(ctx context.Context) BaseCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudPtrOutput)
}

type BaseCloudOutput struct{ *pulumi.OutputState }

func (BaseCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseCloud)(nil)).Elem()
}

func (o BaseCloudOutput) ToBaseCloudOutput() BaseCloudOutput {
	return o
}

func (o BaseCloudOutput) ToBaseCloudOutputWithContext(ctx context.Context) BaseCloudOutput {
	return o
}

func (o BaseCloudOutput) ToBaseCloudPtrOutput() BaseCloudPtrOutput {
	return o.ToBaseCloudPtrOutputWithContext(context.Background())
}

func (o BaseCloudOutput) ToBaseCloudPtrOutputWithContext(ctx context.Context) BaseCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseCloud) *BaseCloud {
		return &v
	}).(BaseCloudPtrOutput)
}

// Region info
func (o BaseCloudOutput) Region() BaseCloudRegionPtrOutput {
	return o.ApplyT(func(v BaseCloud) *BaseCloudRegion { return v.Region }).(BaseCloudRegionPtrOutput)
}

type BaseCloudPtrOutput struct{ *pulumi.OutputState }

func (BaseCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseCloud)(nil)).Elem()
}

func (o BaseCloudPtrOutput) ToBaseCloudPtrOutput() BaseCloudPtrOutput {
	return o
}

func (o BaseCloudPtrOutput) ToBaseCloudPtrOutputWithContext(ctx context.Context) BaseCloudPtrOutput {
	return o
}

func (o BaseCloudPtrOutput) Elem() BaseCloudOutput {
	return o.ApplyT(func(v *BaseCloud) BaseCloud {
		if v != nil {
			return *v
		}
		var ret BaseCloud
		return ret
	}).(BaseCloudOutput)
}

// Region info
func (o BaseCloudPtrOutput) Region() BaseCloudRegionPtrOutput {
	return o.ApplyT(func(v *BaseCloud) *BaseCloudRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(BaseCloudRegionPtrOutput)
}

type BaseCloudRegion struct {
	// Name of region
	Name *string `pulumi:"name"`
}

// BaseCloudRegionInput is an input type that accepts BaseCloudRegionArgs and BaseCloudRegionOutput values.
// You can construct a concrete instance of `BaseCloudRegionInput` via:
//
//	BaseCloudRegionArgs{...}
type BaseCloudRegionInput interface {
	pulumi.Input

	ToBaseCloudRegionOutput() BaseCloudRegionOutput
	ToBaseCloudRegionOutputWithContext(context.Context) BaseCloudRegionOutput
}

type BaseCloudRegionArgs struct {
	// Name of region
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BaseCloudRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseCloudRegion)(nil)).Elem()
}

func (i BaseCloudRegionArgs) ToBaseCloudRegionOutput() BaseCloudRegionOutput {
	return i.ToBaseCloudRegionOutputWithContext(context.Background())
}

func (i BaseCloudRegionArgs) ToBaseCloudRegionOutputWithContext(ctx context.Context) BaseCloudRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudRegionOutput)
}

func (i BaseCloudRegionArgs) ToBaseCloudRegionPtrOutput() BaseCloudRegionPtrOutput {
	return i.ToBaseCloudRegionPtrOutputWithContext(context.Background())
}

func (i BaseCloudRegionArgs) ToBaseCloudRegionPtrOutputWithContext(ctx context.Context) BaseCloudRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudRegionOutput).ToBaseCloudRegionPtrOutputWithContext(ctx)
}

// BaseCloudRegionPtrInput is an input type that accepts BaseCloudRegionArgs, BaseCloudRegionPtr and BaseCloudRegionPtrOutput values.
// You can construct a concrete instance of `BaseCloudRegionPtrInput` via:
//
//	        BaseCloudRegionArgs{...}
//
//	or:
//
//	        nil
type BaseCloudRegionPtrInput interface {
	pulumi.Input

	ToBaseCloudRegionPtrOutput() BaseCloudRegionPtrOutput
	ToBaseCloudRegionPtrOutputWithContext(context.Context) BaseCloudRegionPtrOutput
}

type baseCloudRegionPtrType BaseCloudRegionArgs

func BaseCloudRegionPtr(v *BaseCloudRegionArgs) BaseCloudRegionPtrInput {
	return (*baseCloudRegionPtrType)(v)
}

func (*baseCloudRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseCloudRegion)(nil)).Elem()
}

func (i *baseCloudRegionPtrType) ToBaseCloudRegionPtrOutput() BaseCloudRegionPtrOutput {
	return i.ToBaseCloudRegionPtrOutputWithContext(context.Background())
}

func (i *baseCloudRegionPtrType) ToBaseCloudRegionPtrOutputWithContext(ctx context.Context) BaseCloudRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseCloudRegionPtrOutput)
}

type BaseCloudRegionOutput struct{ *pulumi.OutputState }

func (BaseCloudRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseCloudRegion)(nil)).Elem()
}

func (o BaseCloudRegionOutput) ToBaseCloudRegionOutput() BaseCloudRegionOutput {
	return o
}

func (o BaseCloudRegionOutput) ToBaseCloudRegionOutputWithContext(ctx context.Context) BaseCloudRegionOutput {
	return o
}

func (o BaseCloudRegionOutput) ToBaseCloudRegionPtrOutput() BaseCloudRegionPtrOutput {
	return o.ToBaseCloudRegionPtrOutputWithContext(context.Background())
}

func (o BaseCloudRegionOutput) ToBaseCloudRegionPtrOutputWithContext(ctx context.Context) BaseCloudRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseCloudRegion) *BaseCloudRegion {
		return &v
	}).(BaseCloudRegionPtrOutput)
}

// Name of region
func (o BaseCloudRegionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseCloudRegion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BaseCloudRegionPtrOutput struct{ *pulumi.OutputState }

func (BaseCloudRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseCloudRegion)(nil)).Elem()
}

func (o BaseCloudRegionPtrOutput) ToBaseCloudRegionPtrOutput() BaseCloudRegionPtrOutput {
	return o
}

func (o BaseCloudRegionPtrOutput) ToBaseCloudRegionPtrOutputWithContext(ctx context.Context) BaseCloudRegionPtrOutput {
	return o
}

func (o BaseCloudRegionPtrOutput) Elem() BaseCloudRegionOutput {
	return o.ApplyT(func(v *BaseCloudRegion) BaseCloudRegion {
		if v != nil {
			return *v
		}
		var ret BaseCloudRegion
		return ret
	}).(BaseCloudRegionOutput)
}

// Name of region
func (o BaseCloudRegionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseCloudRegion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type BaseLicensing struct {
	// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
	Model *string `pulumi:"model"`
}

// BaseLicensingInput is an input type that accepts BaseLicensingArgs and BaseLicensingOutput values.
// You can construct a concrete instance of `BaseLicensingInput` via:
//
//	BaseLicensingArgs{...}
type BaseLicensingInput interface {
	pulumi.Input

	ToBaseLicensingOutput() BaseLicensingOutput
	ToBaseLicensingOutputWithContext(context.Context) BaseLicensingOutput
}

type BaseLicensingArgs struct {
	// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (BaseLicensingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseLicensing)(nil)).Elem()
}

func (i BaseLicensingArgs) ToBaseLicensingOutput() BaseLicensingOutput {
	return i.ToBaseLicensingOutputWithContext(context.Background())
}

func (i BaseLicensingArgs) ToBaseLicensingOutputWithContext(ctx context.Context) BaseLicensingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLicensingOutput)
}

func (i BaseLicensingArgs) ToBaseLicensingPtrOutput() BaseLicensingPtrOutput {
	return i.ToBaseLicensingPtrOutputWithContext(context.Background())
}

func (i BaseLicensingArgs) ToBaseLicensingPtrOutputWithContext(ctx context.Context) BaseLicensingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLicensingOutput).ToBaseLicensingPtrOutputWithContext(ctx)
}

// BaseLicensingPtrInput is an input type that accepts BaseLicensingArgs, BaseLicensingPtr and BaseLicensingPtrOutput values.
// You can construct a concrete instance of `BaseLicensingPtrInput` via:
//
//	        BaseLicensingArgs{...}
//
//	or:
//
//	        nil
type BaseLicensingPtrInput interface {
	pulumi.Input

	ToBaseLicensingPtrOutput() BaseLicensingPtrOutput
	ToBaseLicensingPtrOutputWithContext(context.Context) BaseLicensingPtrOutput
}

type baseLicensingPtrType BaseLicensingArgs

func BaseLicensingPtr(v *BaseLicensingArgs) BaseLicensingPtrInput {
	return (*baseLicensingPtrType)(v)
}

func (*baseLicensingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseLicensing)(nil)).Elem()
}

func (i *baseLicensingPtrType) ToBaseLicensingPtrOutput() BaseLicensingPtrOutput {
	return i.ToBaseLicensingPtrOutputWithContext(context.Background())
}

func (i *baseLicensingPtrType) ToBaseLicensingPtrOutputWithContext(ctx context.Context) BaseLicensingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLicensingPtrOutput)
}

type BaseLicensingOutput struct{ *pulumi.OutputState }

func (BaseLicensingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseLicensing)(nil)).Elem()
}

func (o BaseLicensingOutput) ToBaseLicensingOutput() BaseLicensingOutput {
	return o
}

func (o BaseLicensingOutput) ToBaseLicensingOutputWithContext(ctx context.Context) BaseLicensingOutput {
	return o
}

func (o BaseLicensingOutput) ToBaseLicensingPtrOutput() BaseLicensingPtrOutput {
	return o.ToBaseLicensingPtrOutputWithContext(context.Background())
}

func (o BaseLicensingOutput) ToBaseLicensingPtrOutputWithContext(ctx context.Context) BaseLicensingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseLicensing) *BaseLicensing {
		return &v
	}).(BaseLicensingPtrOutput)
}

// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
func (o BaseLicensingOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseLicensing) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type BaseLicensingPtrOutput struct{ *pulumi.OutputState }

func (BaseLicensingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseLicensing)(nil)).Elem()
}

func (o BaseLicensingPtrOutput) ToBaseLicensingPtrOutput() BaseLicensingPtrOutput {
	return o
}

func (o BaseLicensingPtrOutput) ToBaseLicensingPtrOutputWithContext(ctx context.Context) BaseLicensingPtrOutput {
	return o
}

func (o BaseLicensingPtrOutput) Elem() BaseLicensingOutput {
	return o.ApplyT(func(v *BaseLicensing) BaseLicensing {
		if v != nil {
			return *v
		}
		var ret BaseLicensing
		return ret
	}).(BaseLicensingOutput)
}

// Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
func (o BaseLicensingPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseLicensing) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

type BaseManagement struct {
	// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
	Details []BaseManagementDetail `pulumi:"details"`
}

// BaseManagementInput is an input type that accepts BaseManagementArgs and BaseManagementOutput values.
// You can construct a concrete instance of `BaseManagementInput` via:
//
//	BaseManagementArgs{...}
type BaseManagementInput interface {
	pulumi.Input

	ToBaseManagementOutput() BaseManagementOutput
	ToBaseManagementOutputWithContext(context.Context) BaseManagementOutput
}

type BaseManagementArgs struct {
	// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
	Details BaseManagementDetailArrayInput `pulumi:"details"`
}

func (BaseManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseManagement)(nil)).Elem()
}

func (i BaseManagementArgs) ToBaseManagementOutput() BaseManagementOutput {
	return i.ToBaseManagementOutputWithContext(context.Background())
}

func (i BaseManagementArgs) ToBaseManagementOutputWithContext(ctx context.Context) BaseManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseManagementOutput)
}

func (i BaseManagementArgs) ToBaseManagementPtrOutput() BaseManagementPtrOutput {
	return i.ToBaseManagementPtrOutputWithContext(context.Background())
}

func (i BaseManagementArgs) ToBaseManagementPtrOutputWithContext(ctx context.Context) BaseManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseManagementOutput).ToBaseManagementPtrOutputWithContext(ctx)
}

// BaseManagementPtrInput is an input type that accepts BaseManagementArgs, BaseManagementPtr and BaseManagementPtrOutput values.
// You can construct a concrete instance of `BaseManagementPtrInput` via:
//
//	        BaseManagementArgs{...}
//
//	or:
//
//	        nil
type BaseManagementPtrInput interface {
	pulumi.Input

	ToBaseManagementPtrOutput() BaseManagementPtrOutput
	ToBaseManagementPtrOutputWithContext(context.Context) BaseManagementPtrOutput
}

type baseManagementPtrType BaseManagementArgs

func BaseManagementPtr(v *BaseManagementArgs) BaseManagementPtrInput {
	return (*baseManagementPtrType)(v)
}

func (*baseManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseManagement)(nil)).Elem()
}

func (i *baseManagementPtrType) ToBaseManagementPtrOutput() BaseManagementPtrOutput {
	return i.ToBaseManagementPtrOutputWithContext(context.Background())
}

func (i *baseManagementPtrType) ToBaseManagementPtrOutputWithContext(ctx context.Context) BaseManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseManagementPtrOutput)
}

type BaseManagementOutput struct{ *pulumi.OutputState }

func (BaseManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseManagement)(nil)).Elem()
}

func (o BaseManagementOutput) ToBaseManagementOutput() BaseManagementOutput {
	return o
}

func (o BaseManagementOutput) ToBaseManagementOutputWithContext(ctx context.Context) BaseManagementOutput {
	return o
}

func (o BaseManagementOutput) ToBaseManagementPtrOutput() BaseManagementPtrOutput {
	return o.ToBaseManagementPtrOutputWithContext(context.Background())
}

func (o BaseManagementOutput) ToBaseManagementPtrOutputWithContext(ctx context.Context) BaseManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseManagement) *BaseManagement {
		return &v
	}).(BaseManagementPtrOutput)
}

// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
func (o BaseManagementOutput) Details() BaseManagementDetailArrayOutput {
	return o.ApplyT(func(v BaseManagement) []BaseManagementDetail { return v.Details }).(BaseManagementDetailArrayOutput)
}

type BaseManagementPtrOutput struct{ *pulumi.OutputState }

func (BaseManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseManagement)(nil)).Elem()
}

func (o BaseManagementPtrOutput) ToBaseManagementPtrOutput() BaseManagementPtrOutput {
	return o
}

func (o BaseManagementPtrOutput) ToBaseManagementPtrOutputWithContext(ctx context.Context) BaseManagementPtrOutput {
	return o
}

func (o BaseManagementPtrOutput) Elem() BaseManagementOutput {
	return o.ApplyT(func(v *BaseManagement) BaseManagement {
		if v != nil {
			return *v
		}
		var ret BaseManagement
		return ret
	}).(BaseManagementOutput)
}

// Details related to organization management, possibly empty. Details may be named 'MSP ID', 'IP restriction mode for API', or 'IP restriction mode for dashboard', if the organization admin has configured any.
func (o BaseManagementPtrOutput) Details() BaseManagementDetailArrayOutput {
	return o.ApplyT(func(v *BaseManagement) []BaseManagementDetail {
		if v == nil {
			return nil
		}
		return v.Details
	}).(BaseManagementDetailArrayOutput)
}

type BaseManagementDetail struct {
	// Name of management data
	Name *string `pulumi:"name"`
	// Value of management data
	Value *string `pulumi:"value"`
}

// BaseManagementDetailInput is an input type that accepts BaseManagementDetailArgs and BaseManagementDetailOutput values.
// You can construct a concrete instance of `BaseManagementDetailInput` via:
//
//	BaseManagementDetailArgs{...}
type BaseManagementDetailInput interface {
	pulumi.Input

	ToBaseManagementDetailOutput() BaseManagementDetailOutput
	ToBaseManagementDetailOutputWithContext(context.Context) BaseManagementDetailOutput
}

type BaseManagementDetailArgs struct {
	// Name of management data
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of management data
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BaseManagementDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseManagementDetail)(nil)).Elem()
}

func (i BaseManagementDetailArgs) ToBaseManagementDetailOutput() BaseManagementDetailOutput {
	return i.ToBaseManagementDetailOutputWithContext(context.Background())
}

func (i BaseManagementDetailArgs) ToBaseManagementDetailOutputWithContext(ctx context.Context) BaseManagementDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseManagementDetailOutput)
}

// BaseManagementDetailArrayInput is an input type that accepts BaseManagementDetailArray and BaseManagementDetailArrayOutput values.
// You can construct a concrete instance of `BaseManagementDetailArrayInput` via:
//
//	BaseManagementDetailArray{ BaseManagementDetailArgs{...} }
type BaseManagementDetailArrayInput interface {
	pulumi.Input

	ToBaseManagementDetailArrayOutput() BaseManagementDetailArrayOutput
	ToBaseManagementDetailArrayOutputWithContext(context.Context) BaseManagementDetailArrayOutput
}

type BaseManagementDetailArray []BaseManagementDetailInput

func (BaseManagementDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseManagementDetail)(nil)).Elem()
}

func (i BaseManagementDetailArray) ToBaseManagementDetailArrayOutput() BaseManagementDetailArrayOutput {
	return i.ToBaseManagementDetailArrayOutputWithContext(context.Background())
}

func (i BaseManagementDetailArray) ToBaseManagementDetailArrayOutputWithContext(ctx context.Context) BaseManagementDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseManagementDetailArrayOutput)
}

type BaseManagementDetailOutput struct{ *pulumi.OutputState }

func (BaseManagementDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseManagementDetail)(nil)).Elem()
}

func (o BaseManagementDetailOutput) ToBaseManagementDetailOutput() BaseManagementDetailOutput {
	return o
}

func (o BaseManagementDetailOutput) ToBaseManagementDetailOutputWithContext(ctx context.Context) BaseManagementDetailOutput {
	return o
}

// Name of management data
func (o BaseManagementDetailOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseManagementDetail) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of management data
func (o BaseManagementDetailOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseManagementDetail) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BaseManagementDetailArrayOutput struct{ *pulumi.OutputState }

func (BaseManagementDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseManagementDetail)(nil)).Elem()
}

func (o BaseManagementDetailArrayOutput) ToBaseManagementDetailArrayOutput() BaseManagementDetailArrayOutput {
	return o
}

func (o BaseManagementDetailArrayOutput) ToBaseManagementDetailArrayOutputWithContext(ctx context.Context) BaseManagementDetailArrayOutput {
	return o
}

func (o BaseManagementDetailArrayOutput) Index(i pulumi.IntInput) BaseManagementDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseManagementDetail {
		return vs[0].([]BaseManagementDetail)[vs[1].(int)]
	}).(BaseManagementDetailOutput)
}

type GetActionBatchesItem struct {
	// A set of changes made as part of this action (\n\nmore details\n\n)
	Actions []GetActionBatchesItemAction `pulumi:"actions"`
	// Flag describing whether the action should be previewed before executing or not
	Confirmed bool `pulumi:"confirmed"`
	// ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
	Id string `pulumi:"id"`
	// ID of the organization this action batch belongs to
	OrganizationId string `pulumi:"organizationId"`
	// Status of action batch
	Status GetActionBatchesItemStatus `pulumi:"status"`
	// Flag describing whether actions should run synchronously or asynchronously
	Synchronous bool `pulumi:"synchronous"`
}

// GetActionBatchesItemInput is an input type that accepts GetActionBatchesItemArgs and GetActionBatchesItemOutput values.
// You can construct a concrete instance of `GetActionBatchesItemInput` via:
//
//	GetActionBatchesItemArgs{...}
type GetActionBatchesItemInput interface {
	pulumi.Input

	ToGetActionBatchesItemOutput() GetActionBatchesItemOutput
	ToGetActionBatchesItemOutputWithContext(context.Context) GetActionBatchesItemOutput
}

type GetActionBatchesItemArgs struct {
	// A set of changes made as part of this action (\n\nmore details\n\n)
	Actions GetActionBatchesItemActionArrayInput `pulumi:"actions"`
	// Flag describing whether the action should be previewed before executing or not
	Confirmed pulumi.BoolInput `pulumi:"confirmed"`
	// ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the organization this action batch belongs to
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Status of action batch
	Status GetActionBatchesItemStatusInput `pulumi:"status"`
	// Flag describing whether actions should run synchronously or asynchronously
	Synchronous pulumi.BoolInput `pulumi:"synchronous"`
}

func (GetActionBatchesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItem)(nil)).Elem()
}

func (i GetActionBatchesItemArgs) ToGetActionBatchesItemOutput() GetActionBatchesItemOutput {
	return i.ToGetActionBatchesItemOutputWithContext(context.Background())
}

func (i GetActionBatchesItemArgs) ToGetActionBatchesItemOutputWithContext(ctx context.Context) GetActionBatchesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemOutput)
}

// GetActionBatchesItemArrayInput is an input type that accepts GetActionBatchesItemArray and GetActionBatchesItemArrayOutput values.
// You can construct a concrete instance of `GetActionBatchesItemArrayInput` via:
//
//	GetActionBatchesItemArray{ GetActionBatchesItemArgs{...} }
type GetActionBatchesItemArrayInput interface {
	pulumi.Input

	ToGetActionBatchesItemArrayOutput() GetActionBatchesItemArrayOutput
	ToGetActionBatchesItemArrayOutputWithContext(context.Context) GetActionBatchesItemArrayOutput
}

type GetActionBatchesItemArray []GetActionBatchesItemInput

func (GetActionBatchesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItem)(nil)).Elem()
}

func (i GetActionBatchesItemArray) ToGetActionBatchesItemArrayOutput() GetActionBatchesItemArrayOutput {
	return i.ToGetActionBatchesItemArrayOutputWithContext(context.Background())
}

func (i GetActionBatchesItemArray) ToGetActionBatchesItemArrayOutputWithContext(ctx context.Context) GetActionBatchesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemArrayOutput)
}

type GetActionBatchesItemOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItem)(nil)).Elem()
}

func (o GetActionBatchesItemOutput) ToGetActionBatchesItemOutput() GetActionBatchesItemOutput {
	return o
}

func (o GetActionBatchesItemOutput) ToGetActionBatchesItemOutputWithContext(ctx context.Context) GetActionBatchesItemOutput {
	return o
}

// A set of changes made as part of this action (\n\nmore details\n\n)
func (o GetActionBatchesItemOutput) Actions() GetActionBatchesItemActionArrayOutput {
	return o.ApplyT(func(v GetActionBatchesItem) []GetActionBatchesItemAction { return v.Actions }).(GetActionBatchesItemActionArrayOutput)
}

// Flag describing whether the action should be previewed before executing or not
func (o GetActionBatchesItemOutput) Confirmed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetActionBatchesItem) bool { return v.Confirmed }).(pulumi.BoolOutput)
}

// ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
func (o GetActionBatchesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItem) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the organization this action batch belongs to
func (o GetActionBatchesItemOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItem) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Status of action batch
func (o GetActionBatchesItemOutput) Status() GetActionBatchesItemStatusOutput {
	return o.ApplyT(func(v GetActionBatchesItem) GetActionBatchesItemStatus { return v.Status }).(GetActionBatchesItemStatusOutput)
}

// Flag describing whether actions should run synchronously or asynchronously
func (o GetActionBatchesItemOutput) Synchronous() pulumi.BoolOutput {
	return o.ApplyT(func(v GetActionBatchesItem) bool { return v.Synchronous }).(pulumi.BoolOutput)
}

type GetActionBatchesItemArrayOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItem)(nil)).Elem()
}

func (o GetActionBatchesItemArrayOutput) ToGetActionBatchesItemArrayOutput() GetActionBatchesItemArrayOutput {
	return o
}

func (o GetActionBatchesItemArrayOutput) ToGetActionBatchesItemArrayOutputWithContext(ctx context.Context) GetActionBatchesItemArrayOutput {
	return o
}

func (o GetActionBatchesItemArrayOutput) Index(i pulumi.IntInput) GetActionBatchesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionBatchesItem {
		return vs[0].([]GetActionBatchesItem)[vs[1].(int)]
	}).(GetActionBatchesItemOutput)
}

type GetActionBatchesItemAction struct {
	// Data provided in the body of the Action. Contents depend on the Action type
	Body string `pulumi:"body"`
	// The operation to be used by this action
	Operation string `pulumi:"operation"`
	// Unique identifier for the resource to be acted on
	Resource string `pulumi:"resource"`
}

// GetActionBatchesItemActionInput is an input type that accepts GetActionBatchesItemActionArgs and GetActionBatchesItemActionOutput values.
// You can construct a concrete instance of `GetActionBatchesItemActionInput` via:
//
//	GetActionBatchesItemActionArgs{...}
type GetActionBatchesItemActionInput interface {
	pulumi.Input

	ToGetActionBatchesItemActionOutput() GetActionBatchesItemActionOutput
	ToGetActionBatchesItemActionOutputWithContext(context.Context) GetActionBatchesItemActionOutput
}

type GetActionBatchesItemActionArgs struct {
	// Data provided in the body of the Action. Contents depend on the Action type
	Body pulumi.StringInput `pulumi:"body"`
	// The operation to be used by this action
	Operation pulumi.StringInput `pulumi:"operation"`
	// Unique identifier for the resource to be acted on
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetActionBatchesItemActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemAction)(nil)).Elem()
}

func (i GetActionBatchesItemActionArgs) ToGetActionBatchesItemActionOutput() GetActionBatchesItemActionOutput {
	return i.ToGetActionBatchesItemActionOutputWithContext(context.Background())
}

func (i GetActionBatchesItemActionArgs) ToGetActionBatchesItemActionOutputWithContext(ctx context.Context) GetActionBatchesItemActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemActionOutput)
}

// GetActionBatchesItemActionArrayInput is an input type that accepts GetActionBatchesItemActionArray and GetActionBatchesItemActionArrayOutput values.
// You can construct a concrete instance of `GetActionBatchesItemActionArrayInput` via:
//
//	GetActionBatchesItemActionArray{ GetActionBatchesItemActionArgs{...} }
type GetActionBatchesItemActionArrayInput interface {
	pulumi.Input

	ToGetActionBatchesItemActionArrayOutput() GetActionBatchesItemActionArrayOutput
	ToGetActionBatchesItemActionArrayOutputWithContext(context.Context) GetActionBatchesItemActionArrayOutput
}

type GetActionBatchesItemActionArray []GetActionBatchesItemActionInput

func (GetActionBatchesItemActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItemAction)(nil)).Elem()
}

func (i GetActionBatchesItemActionArray) ToGetActionBatchesItemActionArrayOutput() GetActionBatchesItemActionArrayOutput {
	return i.ToGetActionBatchesItemActionArrayOutputWithContext(context.Background())
}

func (i GetActionBatchesItemActionArray) ToGetActionBatchesItemActionArrayOutputWithContext(ctx context.Context) GetActionBatchesItemActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemActionArrayOutput)
}

type GetActionBatchesItemActionOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemAction)(nil)).Elem()
}

func (o GetActionBatchesItemActionOutput) ToGetActionBatchesItemActionOutput() GetActionBatchesItemActionOutput {
	return o
}

func (o GetActionBatchesItemActionOutput) ToGetActionBatchesItemActionOutputWithContext(ctx context.Context) GetActionBatchesItemActionOutput {
	return o
}

// Data provided in the body of the Action. Contents depend on the Action type
func (o GetActionBatchesItemActionOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemAction) string { return v.Body }).(pulumi.StringOutput)
}

// The operation to be used by this action
func (o GetActionBatchesItemActionOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemAction) string { return v.Operation }).(pulumi.StringOutput)
}

// Unique identifier for the resource to be acted on
func (o GetActionBatchesItemActionOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemAction) string { return v.Resource }).(pulumi.StringOutput)
}

type GetActionBatchesItemActionArrayOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItemAction)(nil)).Elem()
}

func (o GetActionBatchesItemActionArrayOutput) ToGetActionBatchesItemActionArrayOutput() GetActionBatchesItemActionArrayOutput {
	return o
}

func (o GetActionBatchesItemActionArrayOutput) ToGetActionBatchesItemActionArrayOutputWithContext(ctx context.Context) GetActionBatchesItemActionArrayOutput {
	return o
}

func (o GetActionBatchesItemActionArrayOutput) Index(i pulumi.IntInput) GetActionBatchesItemActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionBatchesItemAction {
		return vs[0].([]GetActionBatchesItemAction)[vs[1].(int)]
	}).(GetActionBatchesItemActionOutput)
}

type GetActionBatchesItemCallback struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id string `pulumi:"id"`
	// The status of the callback
	Status string `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url string `pulumi:"url"`
}

// GetActionBatchesItemCallbackInput is an input type that accepts GetActionBatchesItemCallbackArgs and GetActionBatchesItemCallbackOutput values.
// You can construct a concrete instance of `GetActionBatchesItemCallbackInput` via:
//
//	GetActionBatchesItemCallbackArgs{...}
type GetActionBatchesItemCallbackInput interface {
	pulumi.Input

	ToGetActionBatchesItemCallbackOutput() GetActionBatchesItemCallbackOutput
	ToGetActionBatchesItemCallbackOutputWithContext(context.Context) GetActionBatchesItemCallbackOutput
}

type GetActionBatchesItemCallbackArgs struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the callback
	Status pulumi.StringInput `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetActionBatchesItemCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemCallback)(nil)).Elem()
}

func (i GetActionBatchesItemCallbackArgs) ToGetActionBatchesItemCallbackOutput() GetActionBatchesItemCallbackOutput {
	return i.ToGetActionBatchesItemCallbackOutputWithContext(context.Background())
}

func (i GetActionBatchesItemCallbackArgs) ToGetActionBatchesItemCallbackOutputWithContext(ctx context.Context) GetActionBatchesItemCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemCallbackOutput)
}

type GetActionBatchesItemCallbackOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemCallback)(nil)).Elem()
}

func (o GetActionBatchesItemCallbackOutput) ToGetActionBatchesItemCallbackOutput() GetActionBatchesItemCallbackOutput {
	return o
}

func (o GetActionBatchesItemCallbackOutput) ToGetActionBatchesItemCallbackOutputWithContext(ctx context.Context) GetActionBatchesItemCallbackOutput {
	return o
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o GetActionBatchesItemCallbackOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemCallback) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the callback
func (o GetActionBatchesItemCallbackOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemCallback) string { return v.Status }).(pulumi.StringOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o GetActionBatchesItemCallbackOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemCallback) string { return v.Url }).(pulumi.StringOutput)
}

type GetActionBatchesItemStatus struct {
	// Flag describing whether all actions in the action batch have completed
	Completed bool `pulumi:"completed"`
	// Resources created as a result of this action batch
	CreatedResources []GetActionBatchesItemStatusCreatedResource `pulumi:"createdResources"`
	// List of errors encountered when running actions in the action batch
	Errors []string `pulumi:"errors"`
	// Flag describing whether any actions in the action batch failed
	Failed bool `pulumi:"failed"`
}

// GetActionBatchesItemStatusInput is an input type that accepts GetActionBatchesItemStatusArgs and GetActionBatchesItemStatusOutput values.
// You can construct a concrete instance of `GetActionBatchesItemStatusInput` via:
//
//	GetActionBatchesItemStatusArgs{...}
type GetActionBatchesItemStatusInput interface {
	pulumi.Input

	ToGetActionBatchesItemStatusOutput() GetActionBatchesItemStatusOutput
	ToGetActionBatchesItemStatusOutputWithContext(context.Context) GetActionBatchesItemStatusOutput
}

type GetActionBatchesItemStatusArgs struct {
	// Flag describing whether all actions in the action batch have completed
	Completed pulumi.BoolInput `pulumi:"completed"`
	// Resources created as a result of this action batch
	CreatedResources GetActionBatchesItemStatusCreatedResourceArrayInput `pulumi:"createdResources"`
	// List of errors encountered when running actions in the action batch
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// Flag describing whether any actions in the action batch failed
	Failed pulumi.BoolInput `pulumi:"failed"`
}

func (GetActionBatchesItemStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemStatus)(nil)).Elem()
}

func (i GetActionBatchesItemStatusArgs) ToGetActionBatchesItemStatusOutput() GetActionBatchesItemStatusOutput {
	return i.ToGetActionBatchesItemStatusOutputWithContext(context.Background())
}

func (i GetActionBatchesItemStatusArgs) ToGetActionBatchesItemStatusOutputWithContext(ctx context.Context) GetActionBatchesItemStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemStatusOutput)
}

type GetActionBatchesItemStatusOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemStatus)(nil)).Elem()
}

func (o GetActionBatchesItemStatusOutput) ToGetActionBatchesItemStatusOutput() GetActionBatchesItemStatusOutput {
	return o
}

func (o GetActionBatchesItemStatusOutput) ToGetActionBatchesItemStatusOutputWithContext(ctx context.Context) GetActionBatchesItemStatusOutput {
	return o
}

// Flag describing whether all actions in the action batch have completed
func (o GetActionBatchesItemStatusOutput) Completed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatus) bool { return v.Completed }).(pulumi.BoolOutput)
}

// Resources created as a result of this action batch
func (o GetActionBatchesItemStatusOutput) CreatedResources() GetActionBatchesItemStatusCreatedResourceArrayOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatus) []GetActionBatchesItemStatusCreatedResource {
		return v.CreatedResources
	}).(GetActionBatchesItemStatusCreatedResourceArrayOutput)
}

// List of errors encountered when running actions in the action batch
func (o GetActionBatchesItemStatusOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatus) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// Flag describing whether any actions in the action batch failed
func (o GetActionBatchesItemStatusOutput) Failed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatus) bool { return v.Failed }).(pulumi.BoolOutput)
}

type GetActionBatchesItemStatusCreatedResource struct {
	// ID of the created resource
	Id string `pulumi:"id"`
	// URI, not including base, of the created resource
	Uri string `pulumi:"uri"`
}

// GetActionBatchesItemStatusCreatedResourceInput is an input type that accepts GetActionBatchesItemStatusCreatedResourceArgs and GetActionBatchesItemStatusCreatedResourceOutput values.
// You can construct a concrete instance of `GetActionBatchesItemStatusCreatedResourceInput` via:
//
//	GetActionBatchesItemStatusCreatedResourceArgs{...}
type GetActionBatchesItemStatusCreatedResourceInput interface {
	pulumi.Input

	ToGetActionBatchesItemStatusCreatedResourceOutput() GetActionBatchesItemStatusCreatedResourceOutput
	ToGetActionBatchesItemStatusCreatedResourceOutputWithContext(context.Context) GetActionBatchesItemStatusCreatedResourceOutput
}

type GetActionBatchesItemStatusCreatedResourceArgs struct {
	// ID of the created resource
	Id pulumi.StringInput `pulumi:"id"`
	// URI, not including base, of the created resource
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetActionBatchesItemStatusCreatedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemStatusCreatedResource)(nil)).Elem()
}

func (i GetActionBatchesItemStatusCreatedResourceArgs) ToGetActionBatchesItemStatusCreatedResourceOutput() GetActionBatchesItemStatusCreatedResourceOutput {
	return i.ToGetActionBatchesItemStatusCreatedResourceOutputWithContext(context.Background())
}

func (i GetActionBatchesItemStatusCreatedResourceArgs) ToGetActionBatchesItemStatusCreatedResourceOutputWithContext(ctx context.Context) GetActionBatchesItemStatusCreatedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemStatusCreatedResourceOutput)
}

// GetActionBatchesItemStatusCreatedResourceArrayInput is an input type that accepts GetActionBatchesItemStatusCreatedResourceArray and GetActionBatchesItemStatusCreatedResourceArrayOutput values.
// You can construct a concrete instance of `GetActionBatchesItemStatusCreatedResourceArrayInput` via:
//
//	GetActionBatchesItemStatusCreatedResourceArray{ GetActionBatchesItemStatusCreatedResourceArgs{...} }
type GetActionBatchesItemStatusCreatedResourceArrayInput interface {
	pulumi.Input

	ToGetActionBatchesItemStatusCreatedResourceArrayOutput() GetActionBatchesItemStatusCreatedResourceArrayOutput
	ToGetActionBatchesItemStatusCreatedResourceArrayOutputWithContext(context.Context) GetActionBatchesItemStatusCreatedResourceArrayOutput
}

type GetActionBatchesItemStatusCreatedResourceArray []GetActionBatchesItemStatusCreatedResourceInput

func (GetActionBatchesItemStatusCreatedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItemStatusCreatedResource)(nil)).Elem()
}

func (i GetActionBatchesItemStatusCreatedResourceArray) ToGetActionBatchesItemStatusCreatedResourceArrayOutput() GetActionBatchesItemStatusCreatedResourceArrayOutput {
	return i.ToGetActionBatchesItemStatusCreatedResourceArrayOutputWithContext(context.Background())
}

func (i GetActionBatchesItemStatusCreatedResourceArray) ToGetActionBatchesItemStatusCreatedResourceArrayOutputWithContext(ctx context.Context) GetActionBatchesItemStatusCreatedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionBatchesItemStatusCreatedResourceArrayOutput)
}

type GetActionBatchesItemStatusCreatedResourceOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemStatusCreatedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionBatchesItemStatusCreatedResource)(nil)).Elem()
}

func (o GetActionBatchesItemStatusCreatedResourceOutput) ToGetActionBatchesItemStatusCreatedResourceOutput() GetActionBatchesItemStatusCreatedResourceOutput {
	return o
}

func (o GetActionBatchesItemStatusCreatedResourceOutput) ToGetActionBatchesItemStatusCreatedResourceOutputWithContext(ctx context.Context) GetActionBatchesItemStatusCreatedResourceOutput {
	return o
}

// ID of the created resource
func (o GetActionBatchesItemStatusCreatedResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatusCreatedResource) string { return v.Id }).(pulumi.StringOutput)
}

// URI, not including base, of the created resource
func (o GetActionBatchesItemStatusCreatedResourceOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionBatchesItemStatusCreatedResource) string { return v.Uri }).(pulumi.StringOutput)
}

type GetActionBatchesItemStatusCreatedResourceArrayOutput struct{ *pulumi.OutputState }

func (GetActionBatchesItemStatusCreatedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionBatchesItemStatusCreatedResource)(nil)).Elem()
}

func (o GetActionBatchesItemStatusCreatedResourceArrayOutput) ToGetActionBatchesItemStatusCreatedResourceArrayOutput() GetActionBatchesItemStatusCreatedResourceArrayOutput {
	return o
}

func (o GetActionBatchesItemStatusCreatedResourceArrayOutput) ToGetActionBatchesItemStatusCreatedResourceArrayOutputWithContext(ctx context.Context) GetActionBatchesItemStatusCreatedResourceArrayOutput {
	return o
}

func (o GetActionBatchesItemStatusCreatedResourceArrayOutput) Index(i pulumi.IntInput) GetActionBatchesItemStatusCreatedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionBatchesItemStatusCreatedResource {
		return vs[0].([]GetActionBatchesItemStatusCreatedResource)[vs[1].(int)]
	}).(GetActionBatchesItemStatusCreatedResourceOutput)
}

type GetAdaptivePolicyAclsItem struct {
	// ID of the adaptive policy ACL
	AclId string `pulumi:"aclId"`
	// When the adaptive policy ACL was created
	CreatedAt string `pulumi:"createdAt"`
	// Description of the adaptive policy ACL
	Description string `pulumi:"description"`
	// IP version of adpative policy ACL
	IpVersion string `pulumi:"ipVersion"`
	// Name of the adaptive policy ACL
	Name string `pulumi:"name"`
	// An ordered array of the adaptive policy ACL rules
	Rules []GetAdaptivePolicyAclsItemRule `pulumi:"rules"`
	// When the adaptive policy ACL was last updated
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetAdaptivePolicyAclsItemInput is an input type that accepts GetAdaptivePolicyAclsItemArgs and GetAdaptivePolicyAclsItemOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyAclsItemInput` via:
//
//	GetAdaptivePolicyAclsItemArgs{...}
type GetAdaptivePolicyAclsItemInput interface {
	pulumi.Input

	ToGetAdaptivePolicyAclsItemOutput() GetAdaptivePolicyAclsItemOutput
	ToGetAdaptivePolicyAclsItemOutputWithContext(context.Context) GetAdaptivePolicyAclsItemOutput
}

type GetAdaptivePolicyAclsItemArgs struct {
	// ID of the adaptive policy ACL
	AclId pulumi.StringInput `pulumi:"aclId"`
	// When the adaptive policy ACL was created
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Description of the adaptive policy ACL
	Description pulumi.StringInput `pulumi:"description"`
	// IP version of adpative policy ACL
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Name of the adaptive policy ACL
	Name pulumi.StringInput `pulumi:"name"`
	// An ordered array of the adaptive policy ACL rules
	Rules GetAdaptivePolicyAclsItemRuleArrayInput `pulumi:"rules"`
	// When the adaptive policy ACL was last updated
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetAdaptivePolicyAclsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyAclsItem)(nil)).Elem()
}

func (i GetAdaptivePolicyAclsItemArgs) ToGetAdaptivePolicyAclsItemOutput() GetAdaptivePolicyAclsItemOutput {
	return i.ToGetAdaptivePolicyAclsItemOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyAclsItemArgs) ToGetAdaptivePolicyAclsItemOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyAclsItemOutput)
}

// GetAdaptivePolicyAclsItemArrayInput is an input type that accepts GetAdaptivePolicyAclsItemArray and GetAdaptivePolicyAclsItemArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyAclsItemArrayInput` via:
//
//	GetAdaptivePolicyAclsItemArray{ GetAdaptivePolicyAclsItemArgs{...} }
type GetAdaptivePolicyAclsItemArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyAclsItemArrayOutput() GetAdaptivePolicyAclsItemArrayOutput
	ToGetAdaptivePolicyAclsItemArrayOutputWithContext(context.Context) GetAdaptivePolicyAclsItemArrayOutput
}

type GetAdaptivePolicyAclsItemArray []GetAdaptivePolicyAclsItemInput

func (GetAdaptivePolicyAclsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyAclsItem)(nil)).Elem()
}

func (i GetAdaptivePolicyAclsItemArray) ToGetAdaptivePolicyAclsItemArrayOutput() GetAdaptivePolicyAclsItemArrayOutput {
	return i.ToGetAdaptivePolicyAclsItemArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyAclsItemArray) ToGetAdaptivePolicyAclsItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyAclsItemArrayOutput)
}

type GetAdaptivePolicyAclsItemOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyAclsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyAclsItem)(nil)).Elem()
}

func (o GetAdaptivePolicyAclsItemOutput) ToGetAdaptivePolicyAclsItemOutput() GetAdaptivePolicyAclsItemOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemOutput) ToGetAdaptivePolicyAclsItemOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemOutput {
	return o
}

// ID of the adaptive policy ACL
func (o GetAdaptivePolicyAclsItemOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.AclId }).(pulumi.StringOutput)
}

// When the adaptive policy ACL was created
func (o GetAdaptivePolicyAclsItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the adaptive policy ACL
func (o GetAdaptivePolicyAclsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.Description }).(pulumi.StringOutput)
}

// IP version of adpative policy ACL
func (o GetAdaptivePolicyAclsItemOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Name of the adaptive policy ACL
func (o GetAdaptivePolicyAclsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.Name }).(pulumi.StringOutput)
}

// An ordered array of the adaptive policy ACL rules
func (o GetAdaptivePolicyAclsItemOutput) Rules() GetAdaptivePolicyAclsItemRuleArrayOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) []GetAdaptivePolicyAclsItemRule { return v.Rules }).(GetAdaptivePolicyAclsItemRuleArrayOutput)
}

// When the adaptive policy ACL was last updated
func (o GetAdaptivePolicyAclsItemOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItem) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetAdaptivePolicyAclsItemArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyAclsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyAclsItem)(nil)).Elem()
}

func (o GetAdaptivePolicyAclsItemArrayOutput) ToGetAdaptivePolicyAclsItemArrayOutput() GetAdaptivePolicyAclsItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemArrayOutput) ToGetAdaptivePolicyAclsItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyAclsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyAclsItem {
		return vs[0].([]GetAdaptivePolicyAclsItem)[vs[1].(int)]
	}).(GetAdaptivePolicyAclsItemOutput)
}

type GetAdaptivePolicyAclsItemRule struct {
	// Destination port
	DstPort string `pulumi:"dstPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy string `pulumi:"policy"`
	// The type of protocol
	Protocol string `pulumi:"protocol"`
	// Source port
	SrcPort string `pulumi:"srcPort"`
}

// GetAdaptivePolicyAclsItemRuleInput is an input type that accepts GetAdaptivePolicyAclsItemRuleArgs and GetAdaptivePolicyAclsItemRuleOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyAclsItemRuleInput` via:
//
//	GetAdaptivePolicyAclsItemRuleArgs{...}
type GetAdaptivePolicyAclsItemRuleInput interface {
	pulumi.Input

	ToGetAdaptivePolicyAclsItemRuleOutput() GetAdaptivePolicyAclsItemRuleOutput
	ToGetAdaptivePolicyAclsItemRuleOutputWithContext(context.Context) GetAdaptivePolicyAclsItemRuleOutput
}

type GetAdaptivePolicyAclsItemRuleArgs struct {
	// Destination port
	DstPort pulumi.StringInput `pulumi:"dstPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy pulumi.StringInput `pulumi:"policy"`
	// The type of protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Source port
	SrcPort pulumi.StringInput `pulumi:"srcPort"`
}

func (GetAdaptivePolicyAclsItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyAclsItemRule)(nil)).Elem()
}

func (i GetAdaptivePolicyAclsItemRuleArgs) ToGetAdaptivePolicyAclsItemRuleOutput() GetAdaptivePolicyAclsItemRuleOutput {
	return i.ToGetAdaptivePolicyAclsItemRuleOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyAclsItemRuleArgs) ToGetAdaptivePolicyAclsItemRuleOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyAclsItemRuleOutput)
}

// GetAdaptivePolicyAclsItemRuleArrayInput is an input type that accepts GetAdaptivePolicyAclsItemRuleArray and GetAdaptivePolicyAclsItemRuleArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyAclsItemRuleArrayInput` via:
//
//	GetAdaptivePolicyAclsItemRuleArray{ GetAdaptivePolicyAclsItemRuleArgs{...} }
type GetAdaptivePolicyAclsItemRuleArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyAclsItemRuleArrayOutput() GetAdaptivePolicyAclsItemRuleArrayOutput
	ToGetAdaptivePolicyAclsItemRuleArrayOutputWithContext(context.Context) GetAdaptivePolicyAclsItemRuleArrayOutput
}

type GetAdaptivePolicyAclsItemRuleArray []GetAdaptivePolicyAclsItemRuleInput

func (GetAdaptivePolicyAclsItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyAclsItemRule)(nil)).Elem()
}

func (i GetAdaptivePolicyAclsItemRuleArray) ToGetAdaptivePolicyAclsItemRuleArrayOutput() GetAdaptivePolicyAclsItemRuleArrayOutput {
	return i.ToGetAdaptivePolicyAclsItemRuleArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyAclsItemRuleArray) ToGetAdaptivePolicyAclsItemRuleArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyAclsItemRuleArrayOutput)
}

type GetAdaptivePolicyAclsItemRuleOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyAclsItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyAclsItemRule)(nil)).Elem()
}

func (o GetAdaptivePolicyAclsItemRuleOutput) ToGetAdaptivePolicyAclsItemRuleOutput() GetAdaptivePolicyAclsItemRuleOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemRuleOutput) ToGetAdaptivePolicyAclsItemRuleOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemRuleOutput {
	return o
}

// Destination port
func (o GetAdaptivePolicyAclsItemRuleOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItemRule) string { return v.DstPort }).(pulumi.StringOutput)
}

// 'allow' or 'deny' traffic specified by this rule
func (o GetAdaptivePolicyAclsItemRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItemRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The type of protocol
func (o GetAdaptivePolicyAclsItemRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItemRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Source port
func (o GetAdaptivePolicyAclsItemRuleOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyAclsItemRule) string { return v.SrcPort }).(pulumi.StringOutput)
}

type GetAdaptivePolicyAclsItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyAclsItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyAclsItemRule)(nil)).Elem()
}

func (o GetAdaptivePolicyAclsItemRuleArrayOutput) ToGetAdaptivePolicyAclsItemRuleArrayOutput() GetAdaptivePolicyAclsItemRuleArrayOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemRuleArrayOutput) ToGetAdaptivePolicyAclsItemRuleArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyAclsItemRuleArrayOutput {
	return o
}

func (o GetAdaptivePolicyAclsItemRuleArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyAclsItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyAclsItemRule {
		return vs[0].([]GetAdaptivePolicyAclsItemRule)[vs[1].(int)]
	}).(GetAdaptivePolicyAclsItemRuleOutput)
}

type GetAdaptivePolicyGroupsItem struct {
	CreatedAt          string                                    `pulumi:"createdAt"`
	Description        string                                    `pulumi:"description"`
	GroupId            string                                    `pulumi:"groupId"`
	IsDefaultGroup     bool                                      `pulumi:"isDefaultGroup"`
	Name               string                                    `pulumi:"name"`
	PolicyObjects      []GetAdaptivePolicyGroupsItemPolicyObject `pulumi:"policyObjects"`
	RequiredIpMappings []string                                  `pulumi:"requiredIpMappings"`
	Sgt                int                                       `pulumi:"sgt"`
	UpdatedAt          string                                    `pulumi:"updatedAt"`
}

// GetAdaptivePolicyGroupsItemInput is an input type that accepts GetAdaptivePolicyGroupsItemArgs and GetAdaptivePolicyGroupsItemOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyGroupsItemInput` via:
//
//	GetAdaptivePolicyGroupsItemArgs{...}
type GetAdaptivePolicyGroupsItemInput interface {
	pulumi.Input

	ToGetAdaptivePolicyGroupsItemOutput() GetAdaptivePolicyGroupsItemOutput
	ToGetAdaptivePolicyGroupsItemOutputWithContext(context.Context) GetAdaptivePolicyGroupsItemOutput
}

type GetAdaptivePolicyGroupsItemArgs struct {
	CreatedAt          pulumi.StringInput                                `pulumi:"createdAt"`
	Description        pulumi.StringInput                                `pulumi:"description"`
	GroupId            pulumi.StringInput                                `pulumi:"groupId"`
	IsDefaultGroup     pulumi.BoolInput                                  `pulumi:"isDefaultGroup"`
	Name               pulumi.StringInput                                `pulumi:"name"`
	PolicyObjects      GetAdaptivePolicyGroupsItemPolicyObjectArrayInput `pulumi:"policyObjects"`
	RequiredIpMappings pulumi.StringArrayInput                           `pulumi:"requiredIpMappings"`
	Sgt                pulumi.IntInput                                   `pulumi:"sgt"`
	UpdatedAt          pulumi.StringInput                                `pulumi:"updatedAt"`
}

func (GetAdaptivePolicyGroupsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyGroupsItem)(nil)).Elem()
}

func (i GetAdaptivePolicyGroupsItemArgs) ToGetAdaptivePolicyGroupsItemOutput() GetAdaptivePolicyGroupsItemOutput {
	return i.ToGetAdaptivePolicyGroupsItemOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyGroupsItemArgs) ToGetAdaptivePolicyGroupsItemOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyGroupsItemOutput)
}

// GetAdaptivePolicyGroupsItemArrayInput is an input type that accepts GetAdaptivePolicyGroupsItemArray and GetAdaptivePolicyGroupsItemArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyGroupsItemArrayInput` via:
//
//	GetAdaptivePolicyGroupsItemArray{ GetAdaptivePolicyGroupsItemArgs{...} }
type GetAdaptivePolicyGroupsItemArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyGroupsItemArrayOutput() GetAdaptivePolicyGroupsItemArrayOutput
	ToGetAdaptivePolicyGroupsItemArrayOutputWithContext(context.Context) GetAdaptivePolicyGroupsItemArrayOutput
}

type GetAdaptivePolicyGroupsItemArray []GetAdaptivePolicyGroupsItemInput

func (GetAdaptivePolicyGroupsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyGroupsItem)(nil)).Elem()
}

func (i GetAdaptivePolicyGroupsItemArray) ToGetAdaptivePolicyGroupsItemArrayOutput() GetAdaptivePolicyGroupsItemArrayOutput {
	return i.ToGetAdaptivePolicyGroupsItemArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyGroupsItemArray) ToGetAdaptivePolicyGroupsItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyGroupsItemArrayOutput)
}

type GetAdaptivePolicyGroupsItemOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyGroupsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyGroupsItem)(nil)).Elem()
}

func (o GetAdaptivePolicyGroupsItemOutput) ToGetAdaptivePolicyGroupsItemOutput() GetAdaptivePolicyGroupsItemOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemOutput) ToGetAdaptivePolicyGroupsItemOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) IsDefaultGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) bool { return v.IsDefaultGroup }).(pulumi.BoolOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) PolicyObjects() GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) []GetAdaptivePolicyGroupsItemPolicyObject { return v.PolicyObjects }).(GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) RequiredIpMappings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) []string { return v.RequiredIpMappings }).(pulumi.StringArrayOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) Sgt() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) int { return v.Sgt }).(pulumi.IntOutput)
}

func (o GetAdaptivePolicyGroupsItemOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItem) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetAdaptivePolicyGroupsItemArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyGroupsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyGroupsItem)(nil)).Elem()
}

func (o GetAdaptivePolicyGroupsItemArrayOutput) ToGetAdaptivePolicyGroupsItemArrayOutput() GetAdaptivePolicyGroupsItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemArrayOutput) ToGetAdaptivePolicyGroupsItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyGroupsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyGroupsItem {
		return vs[0].([]GetAdaptivePolicyGroupsItem)[vs[1].(int)]
	}).(GetAdaptivePolicyGroupsItemOutput)
}

type GetAdaptivePolicyGroupsItemPolicyObject struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetAdaptivePolicyGroupsItemPolicyObjectInput is an input type that accepts GetAdaptivePolicyGroupsItemPolicyObjectArgs and GetAdaptivePolicyGroupsItemPolicyObjectOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyGroupsItemPolicyObjectInput` via:
//
//	GetAdaptivePolicyGroupsItemPolicyObjectArgs{...}
type GetAdaptivePolicyGroupsItemPolicyObjectInput interface {
	pulumi.Input

	ToGetAdaptivePolicyGroupsItemPolicyObjectOutput() GetAdaptivePolicyGroupsItemPolicyObjectOutput
	ToGetAdaptivePolicyGroupsItemPolicyObjectOutputWithContext(context.Context) GetAdaptivePolicyGroupsItemPolicyObjectOutput
}

type GetAdaptivePolicyGroupsItemPolicyObjectArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdaptivePolicyGroupsItemPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyGroupsItemPolicyObject)(nil)).Elem()
}

func (i GetAdaptivePolicyGroupsItemPolicyObjectArgs) ToGetAdaptivePolicyGroupsItemPolicyObjectOutput() GetAdaptivePolicyGroupsItemPolicyObjectOutput {
	return i.ToGetAdaptivePolicyGroupsItemPolicyObjectOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyGroupsItemPolicyObjectArgs) ToGetAdaptivePolicyGroupsItemPolicyObjectOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyGroupsItemPolicyObjectOutput)
}

// GetAdaptivePolicyGroupsItemPolicyObjectArrayInput is an input type that accepts GetAdaptivePolicyGroupsItemPolicyObjectArray and GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyGroupsItemPolicyObjectArrayInput` via:
//
//	GetAdaptivePolicyGroupsItemPolicyObjectArray{ GetAdaptivePolicyGroupsItemPolicyObjectArgs{...} }
type GetAdaptivePolicyGroupsItemPolicyObjectArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutput() GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput
	ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutputWithContext(context.Context) GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput
}

type GetAdaptivePolicyGroupsItemPolicyObjectArray []GetAdaptivePolicyGroupsItemPolicyObjectInput

func (GetAdaptivePolicyGroupsItemPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyGroupsItemPolicyObject)(nil)).Elem()
}

func (i GetAdaptivePolicyGroupsItemPolicyObjectArray) ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutput() GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput {
	return i.ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyGroupsItemPolicyObjectArray) ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput)
}

type GetAdaptivePolicyGroupsItemPolicyObjectOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyGroupsItemPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyGroupsItemPolicyObject)(nil)).Elem()
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectOutput) ToGetAdaptivePolicyGroupsItemPolicyObjectOutput() GetAdaptivePolicyGroupsItemPolicyObjectOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectOutput) ToGetAdaptivePolicyGroupsItemPolicyObjectOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemPolicyObjectOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItemPolicyObject) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyGroupsItemPolicyObject) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyGroupsItemPolicyObject)(nil)).Elem()
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput) ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutput() GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput) ToGetAdaptivePolicyGroupsItemPolicyObjectArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput {
	return o
}

func (o GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyGroupsItemPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyGroupsItemPolicyObject {
		return vs[0].([]GetAdaptivePolicyGroupsItemPolicyObject)[vs[1].(int)]
	}).(GetAdaptivePolicyGroupsItemPolicyObjectOutput)
}

type GetAdaptivePolicyOverviewItem struct {
	// The current amount of various adaptive policy objects.
	Counts GetAdaptivePolicyOverviewItemCounts `pulumi:"counts"`
	// The current limits of various adaptive policy objects.
	Limits GetAdaptivePolicyOverviewItemLimits `pulumi:"limits"`
}

// GetAdaptivePolicyOverviewItemInput is an input type that accepts GetAdaptivePolicyOverviewItemArgs and GetAdaptivePolicyOverviewItemOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyOverviewItemInput` via:
//
//	GetAdaptivePolicyOverviewItemArgs{...}
type GetAdaptivePolicyOverviewItemInput interface {
	pulumi.Input

	ToGetAdaptivePolicyOverviewItemOutput() GetAdaptivePolicyOverviewItemOutput
	ToGetAdaptivePolicyOverviewItemOutputWithContext(context.Context) GetAdaptivePolicyOverviewItemOutput
}

type GetAdaptivePolicyOverviewItemArgs struct {
	// The current amount of various adaptive policy objects.
	Counts GetAdaptivePolicyOverviewItemCountsInput `pulumi:"counts"`
	// The current limits of various adaptive policy objects.
	Limits GetAdaptivePolicyOverviewItemLimitsInput `pulumi:"limits"`
}

func (GetAdaptivePolicyOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItem)(nil)).Elem()
}

func (i GetAdaptivePolicyOverviewItemArgs) ToGetAdaptivePolicyOverviewItemOutput() GetAdaptivePolicyOverviewItemOutput {
	return i.ToGetAdaptivePolicyOverviewItemOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyOverviewItemArgs) ToGetAdaptivePolicyOverviewItemOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyOverviewItemOutput)
}

type GetAdaptivePolicyOverviewItemOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItem)(nil)).Elem()
}

func (o GetAdaptivePolicyOverviewItemOutput) ToGetAdaptivePolicyOverviewItemOutput() GetAdaptivePolicyOverviewItemOutput {
	return o
}

func (o GetAdaptivePolicyOverviewItemOutput) ToGetAdaptivePolicyOverviewItemOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemOutput {
	return o
}

// The current amount of various adaptive policy objects.
func (o GetAdaptivePolicyOverviewItemOutput) Counts() GetAdaptivePolicyOverviewItemCountsOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItem) GetAdaptivePolicyOverviewItemCounts { return v.Counts }).(GetAdaptivePolicyOverviewItemCountsOutput)
}

// The current limits of various adaptive policy objects.
func (o GetAdaptivePolicyOverviewItemOutput) Limits() GetAdaptivePolicyOverviewItemLimitsOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItem) GetAdaptivePolicyOverviewItemLimits { return v.Limits }).(GetAdaptivePolicyOverviewItemLimitsOutput)
}

type GetAdaptivePolicyOverviewItemCounts struct {
	// Number of adaptive policies currently in the organization that allow all traffic.
	AllowPolicies int `pulumi:"allowPolicies"`
	// Number of user-created adaptive policy ACLs currently in the organization.
	CustomAcls int `pulumi:"customAcls"`
	// Number of user-created adaptive policy groups currently in the organization.
	CustomGroups int `pulumi:"customGroups"`
	// Number of adaptive policies currently in the organization that deny all traffic.
	DenyPolicies int `pulumi:"denyPolicies"`
	// Number of adaptive policy groups currently in the organization.
	Groups int `pulumi:"groups"`
	// Number of adaptive policies currently in the organization.
	Policies int `pulumi:"policies"`
	// Number of policy objects (with the adaptive policy type) currently in the organization.
	PolicyObjects int `pulumi:"policyObjects"`
}

// GetAdaptivePolicyOverviewItemCountsInput is an input type that accepts GetAdaptivePolicyOverviewItemCountsArgs and GetAdaptivePolicyOverviewItemCountsOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyOverviewItemCountsInput` via:
//
//	GetAdaptivePolicyOverviewItemCountsArgs{...}
type GetAdaptivePolicyOverviewItemCountsInput interface {
	pulumi.Input

	ToGetAdaptivePolicyOverviewItemCountsOutput() GetAdaptivePolicyOverviewItemCountsOutput
	ToGetAdaptivePolicyOverviewItemCountsOutputWithContext(context.Context) GetAdaptivePolicyOverviewItemCountsOutput
}

type GetAdaptivePolicyOverviewItemCountsArgs struct {
	// Number of adaptive policies currently in the organization that allow all traffic.
	AllowPolicies pulumi.IntInput `pulumi:"allowPolicies"`
	// Number of user-created adaptive policy ACLs currently in the organization.
	CustomAcls pulumi.IntInput `pulumi:"customAcls"`
	// Number of user-created adaptive policy groups currently in the organization.
	CustomGroups pulumi.IntInput `pulumi:"customGroups"`
	// Number of adaptive policies currently in the organization that deny all traffic.
	DenyPolicies pulumi.IntInput `pulumi:"denyPolicies"`
	// Number of adaptive policy groups currently in the organization.
	Groups pulumi.IntInput `pulumi:"groups"`
	// Number of adaptive policies currently in the organization.
	Policies pulumi.IntInput `pulumi:"policies"`
	// Number of policy objects (with the adaptive policy type) currently in the organization.
	PolicyObjects pulumi.IntInput `pulumi:"policyObjects"`
}

func (GetAdaptivePolicyOverviewItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItemCounts)(nil)).Elem()
}

func (i GetAdaptivePolicyOverviewItemCountsArgs) ToGetAdaptivePolicyOverviewItemCountsOutput() GetAdaptivePolicyOverviewItemCountsOutput {
	return i.ToGetAdaptivePolicyOverviewItemCountsOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyOverviewItemCountsArgs) ToGetAdaptivePolicyOverviewItemCountsOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyOverviewItemCountsOutput)
}

type GetAdaptivePolicyOverviewItemCountsOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyOverviewItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItemCounts)(nil)).Elem()
}

func (o GetAdaptivePolicyOverviewItemCountsOutput) ToGetAdaptivePolicyOverviewItemCountsOutput() GetAdaptivePolicyOverviewItemCountsOutput {
	return o
}

func (o GetAdaptivePolicyOverviewItemCountsOutput) ToGetAdaptivePolicyOverviewItemCountsOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemCountsOutput {
	return o
}

// Number of adaptive policies currently in the organization that allow all traffic.
func (o GetAdaptivePolicyOverviewItemCountsOutput) AllowPolicies() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.AllowPolicies }).(pulumi.IntOutput)
}

// Number of user-created adaptive policy ACLs currently in the organization.
func (o GetAdaptivePolicyOverviewItemCountsOutput) CustomAcls() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.CustomAcls }).(pulumi.IntOutput)
}

// Number of user-created adaptive policy groups currently in the organization.
func (o GetAdaptivePolicyOverviewItemCountsOutput) CustomGroups() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.CustomGroups }).(pulumi.IntOutput)
}

// Number of adaptive policies currently in the organization that deny all traffic.
func (o GetAdaptivePolicyOverviewItemCountsOutput) DenyPolicies() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.DenyPolicies }).(pulumi.IntOutput)
}

// Number of adaptive policy groups currently in the organization.
func (o GetAdaptivePolicyOverviewItemCountsOutput) Groups() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.Groups }).(pulumi.IntOutput)
}

// Number of adaptive policies currently in the organization.
func (o GetAdaptivePolicyOverviewItemCountsOutput) Policies() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.Policies }).(pulumi.IntOutput)
}

// Number of policy objects (with the adaptive policy type) currently in the organization.
func (o GetAdaptivePolicyOverviewItemCountsOutput) PolicyObjects() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemCounts) int { return v.PolicyObjects }).(pulumi.IntOutput)
}

type GetAdaptivePolicyOverviewItemLimits struct {
	// Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
	AclsInAPolicy int `pulumi:"aclsInAPolicy"`
	// Maximum number of user-created adaptive policy groups allowed in the organization.
	CustomGroups int `pulumi:"customGroups"`
	// Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
	PolicyObjects int `pulumi:"policyObjects"`
	// Maximum number of rules allowed in an adaptive policy ACL in the organization.
	RulesInAnAcl int `pulumi:"rulesInAnAcl"`
}

// GetAdaptivePolicyOverviewItemLimitsInput is an input type that accepts GetAdaptivePolicyOverviewItemLimitsArgs and GetAdaptivePolicyOverviewItemLimitsOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyOverviewItemLimitsInput` via:
//
//	GetAdaptivePolicyOverviewItemLimitsArgs{...}
type GetAdaptivePolicyOverviewItemLimitsInput interface {
	pulumi.Input

	ToGetAdaptivePolicyOverviewItemLimitsOutput() GetAdaptivePolicyOverviewItemLimitsOutput
	ToGetAdaptivePolicyOverviewItemLimitsOutputWithContext(context.Context) GetAdaptivePolicyOverviewItemLimitsOutput
}

type GetAdaptivePolicyOverviewItemLimitsArgs struct {
	// Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
	AclsInAPolicy pulumi.IntInput `pulumi:"aclsInAPolicy"`
	// Maximum number of user-created adaptive policy groups allowed in the organization.
	CustomGroups pulumi.IntInput `pulumi:"customGroups"`
	// Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
	PolicyObjects pulumi.IntInput `pulumi:"policyObjects"`
	// Maximum number of rules allowed in an adaptive policy ACL in the organization.
	RulesInAnAcl pulumi.IntInput `pulumi:"rulesInAnAcl"`
}

func (GetAdaptivePolicyOverviewItemLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItemLimits)(nil)).Elem()
}

func (i GetAdaptivePolicyOverviewItemLimitsArgs) ToGetAdaptivePolicyOverviewItemLimitsOutput() GetAdaptivePolicyOverviewItemLimitsOutput {
	return i.ToGetAdaptivePolicyOverviewItemLimitsOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyOverviewItemLimitsArgs) ToGetAdaptivePolicyOverviewItemLimitsOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyOverviewItemLimitsOutput)
}

type GetAdaptivePolicyOverviewItemLimitsOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyOverviewItemLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyOverviewItemLimits)(nil)).Elem()
}

func (o GetAdaptivePolicyOverviewItemLimitsOutput) ToGetAdaptivePolicyOverviewItemLimitsOutput() GetAdaptivePolicyOverviewItemLimitsOutput {
	return o
}

func (o GetAdaptivePolicyOverviewItemLimitsOutput) ToGetAdaptivePolicyOverviewItemLimitsOutputWithContext(ctx context.Context) GetAdaptivePolicyOverviewItemLimitsOutput {
	return o
}

// Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
func (o GetAdaptivePolicyOverviewItemLimitsOutput) AclsInAPolicy() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemLimits) int { return v.AclsInAPolicy }).(pulumi.IntOutput)
}

// Maximum number of user-created adaptive policy groups allowed in the organization.
func (o GetAdaptivePolicyOverviewItemLimitsOutput) CustomGroups() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemLimits) int { return v.CustomGroups }).(pulumi.IntOutput)
}

// Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
func (o GetAdaptivePolicyOverviewItemLimitsOutput) PolicyObjects() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemLimits) int { return v.PolicyObjects }).(pulumi.IntOutput)
}

// Maximum number of rules allowed in an adaptive policy ACL in the organization.
func (o GetAdaptivePolicyOverviewItemLimitsOutput) RulesInAnAcl() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyOverviewItemLimits) int { return v.RulesInAnAcl }).(pulumi.IntOutput)
}

type GetAdaptivePolicyPoliciesItem struct {
	Acls             []GetAdaptivePolicyPoliciesItemAcl            `pulumi:"acls"`
	AdaptivePolicyId string                                        `pulumi:"adaptivePolicyId"`
	CreatedAt        string                                        `pulumi:"createdAt"`
	DestinationGroup GetAdaptivePolicyPoliciesItemDestinationGroup `pulumi:"destinationGroup"`
	LastEntryRule    string                                        `pulumi:"lastEntryRule"`
	SourceGroup      GetAdaptivePolicyPoliciesItemSourceGroup      `pulumi:"sourceGroup"`
	UpdatedAt        string                                        `pulumi:"updatedAt"`
}

// GetAdaptivePolicyPoliciesItemInput is an input type that accepts GetAdaptivePolicyPoliciesItemArgs and GetAdaptivePolicyPoliciesItemOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemInput` via:
//
//	GetAdaptivePolicyPoliciesItemArgs{...}
type GetAdaptivePolicyPoliciesItemInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemOutput() GetAdaptivePolicyPoliciesItemOutput
	ToGetAdaptivePolicyPoliciesItemOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemOutput
}

type GetAdaptivePolicyPoliciesItemArgs struct {
	Acls             GetAdaptivePolicyPoliciesItemAclArrayInput         `pulumi:"acls"`
	AdaptivePolicyId pulumi.StringInput                                 `pulumi:"adaptivePolicyId"`
	CreatedAt        pulumi.StringInput                                 `pulumi:"createdAt"`
	DestinationGroup GetAdaptivePolicyPoliciesItemDestinationGroupInput `pulumi:"destinationGroup"`
	LastEntryRule    pulumi.StringInput                                 `pulumi:"lastEntryRule"`
	SourceGroup      GetAdaptivePolicyPoliciesItemSourceGroupInput      `pulumi:"sourceGroup"`
	UpdatedAt        pulumi.StringInput                                 `pulumi:"updatedAt"`
}

func (GetAdaptivePolicyPoliciesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItem)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemArgs) ToGetAdaptivePolicyPoliciesItemOutput() GetAdaptivePolicyPoliciesItemOutput {
	return i.ToGetAdaptivePolicyPoliciesItemOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemArgs) ToGetAdaptivePolicyPoliciesItemOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemOutput)
}

// GetAdaptivePolicyPoliciesItemArrayInput is an input type that accepts GetAdaptivePolicyPoliciesItemArray and GetAdaptivePolicyPoliciesItemArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemArrayInput` via:
//
//	GetAdaptivePolicyPoliciesItemArray{ GetAdaptivePolicyPoliciesItemArgs{...} }
type GetAdaptivePolicyPoliciesItemArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemArrayOutput() GetAdaptivePolicyPoliciesItemArrayOutput
	ToGetAdaptivePolicyPoliciesItemArrayOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemArrayOutput
}

type GetAdaptivePolicyPoliciesItemArray []GetAdaptivePolicyPoliciesItemInput

func (GetAdaptivePolicyPoliciesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyPoliciesItem)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemArray) ToGetAdaptivePolicyPoliciesItemArrayOutput() GetAdaptivePolicyPoliciesItemArrayOutput {
	return i.ToGetAdaptivePolicyPoliciesItemArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemArray) ToGetAdaptivePolicyPoliciesItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemArrayOutput)
}

type GetAdaptivePolicyPoliciesItemOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItem)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemOutput) ToGetAdaptivePolicyPoliciesItemOutput() GetAdaptivePolicyPoliciesItemOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemOutput) ToGetAdaptivePolicyPoliciesItemOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemOutput) Acls() GetAdaptivePolicyPoliciesItemAclArrayOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) []GetAdaptivePolicyPoliciesItemAcl { return v.Acls }).(GetAdaptivePolicyPoliciesItemAclArrayOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) AdaptivePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) string { return v.AdaptivePolicyId }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) DestinationGroup() GetAdaptivePolicyPoliciesItemDestinationGroupOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) GetAdaptivePolicyPoliciesItemDestinationGroup {
		return v.DestinationGroup
	}).(GetAdaptivePolicyPoliciesItemDestinationGroupOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) LastEntryRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) string { return v.LastEntryRule }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) SourceGroup() GetAdaptivePolicyPoliciesItemSourceGroupOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) GetAdaptivePolicyPoliciesItemSourceGroup { return v.SourceGroup }).(GetAdaptivePolicyPoliciesItemSourceGroupOutput)
}

func (o GetAdaptivePolicyPoliciesItemOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItem) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetAdaptivePolicyPoliciesItemArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyPoliciesItem)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemArrayOutput) ToGetAdaptivePolicyPoliciesItemArrayOutput() GetAdaptivePolicyPoliciesItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemArrayOutput) ToGetAdaptivePolicyPoliciesItemArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemArrayOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyPoliciesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyPoliciesItem {
		return vs[0].([]GetAdaptivePolicyPoliciesItem)[vs[1].(int)]
	}).(GetAdaptivePolicyPoliciesItemOutput)
}

type GetAdaptivePolicyPoliciesItemAcl struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetAdaptivePolicyPoliciesItemAclInput is an input type that accepts GetAdaptivePolicyPoliciesItemAclArgs and GetAdaptivePolicyPoliciesItemAclOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemAclInput` via:
//
//	GetAdaptivePolicyPoliciesItemAclArgs{...}
type GetAdaptivePolicyPoliciesItemAclInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemAclOutput() GetAdaptivePolicyPoliciesItemAclOutput
	ToGetAdaptivePolicyPoliciesItemAclOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemAclOutput
}

type GetAdaptivePolicyPoliciesItemAclArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdaptivePolicyPoliciesItemAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemAcl)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemAclArgs) ToGetAdaptivePolicyPoliciesItemAclOutput() GetAdaptivePolicyPoliciesItemAclOutput {
	return i.ToGetAdaptivePolicyPoliciesItemAclOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemAclArgs) ToGetAdaptivePolicyPoliciesItemAclOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemAclOutput)
}

// GetAdaptivePolicyPoliciesItemAclArrayInput is an input type that accepts GetAdaptivePolicyPoliciesItemAclArray and GetAdaptivePolicyPoliciesItemAclArrayOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemAclArrayInput` via:
//
//	GetAdaptivePolicyPoliciesItemAclArray{ GetAdaptivePolicyPoliciesItemAclArgs{...} }
type GetAdaptivePolicyPoliciesItemAclArrayInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemAclArrayOutput() GetAdaptivePolicyPoliciesItemAclArrayOutput
	ToGetAdaptivePolicyPoliciesItemAclArrayOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemAclArrayOutput
}

type GetAdaptivePolicyPoliciesItemAclArray []GetAdaptivePolicyPoliciesItemAclInput

func (GetAdaptivePolicyPoliciesItemAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyPoliciesItemAcl)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemAclArray) ToGetAdaptivePolicyPoliciesItemAclArrayOutput() GetAdaptivePolicyPoliciesItemAclArrayOutput {
	return i.ToGetAdaptivePolicyPoliciesItemAclArrayOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemAclArray) ToGetAdaptivePolicyPoliciesItemAclArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemAclArrayOutput)
}

type GetAdaptivePolicyPoliciesItemAclOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemAcl)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemAclOutput) ToGetAdaptivePolicyPoliciesItemAclOutput() GetAdaptivePolicyPoliciesItemAclOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemAclOutput) ToGetAdaptivePolicyPoliciesItemAclOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemAclOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemAcl) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemAcl) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdaptivePolicyPoliciesItemAclArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptivePolicyPoliciesItemAcl)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemAclArrayOutput) ToGetAdaptivePolicyPoliciesItemAclArrayOutput() GetAdaptivePolicyPoliciesItemAclArrayOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemAclArrayOutput) ToGetAdaptivePolicyPoliciesItemAclArrayOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemAclArrayOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemAclArrayOutput) Index(i pulumi.IntInput) GetAdaptivePolicyPoliciesItemAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptivePolicyPoliciesItemAcl {
		return vs[0].([]GetAdaptivePolicyPoliciesItemAcl)[vs[1].(int)]
	}).(GetAdaptivePolicyPoliciesItemAclOutput)
}

type GetAdaptivePolicyPoliciesItemDestinationGroup struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	Sgt  int    `pulumi:"sgt"`
}

// GetAdaptivePolicyPoliciesItemDestinationGroupInput is an input type that accepts GetAdaptivePolicyPoliciesItemDestinationGroupArgs and GetAdaptivePolicyPoliciesItemDestinationGroupOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemDestinationGroupInput` via:
//
//	GetAdaptivePolicyPoliciesItemDestinationGroupArgs{...}
type GetAdaptivePolicyPoliciesItemDestinationGroupInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemDestinationGroupOutput() GetAdaptivePolicyPoliciesItemDestinationGroupOutput
	ToGetAdaptivePolicyPoliciesItemDestinationGroupOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemDestinationGroupOutput
}

type GetAdaptivePolicyPoliciesItemDestinationGroupArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Sgt  pulumi.IntInput    `pulumi:"sgt"`
}

func (GetAdaptivePolicyPoliciesItemDestinationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemDestinationGroup)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemDestinationGroupArgs) ToGetAdaptivePolicyPoliciesItemDestinationGroupOutput() GetAdaptivePolicyPoliciesItemDestinationGroupOutput {
	return i.ToGetAdaptivePolicyPoliciesItemDestinationGroupOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemDestinationGroupArgs) ToGetAdaptivePolicyPoliciesItemDestinationGroupOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemDestinationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemDestinationGroupOutput)
}

type GetAdaptivePolicyPoliciesItemDestinationGroupOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemDestinationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemDestinationGroup)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemDestinationGroupOutput) ToGetAdaptivePolicyPoliciesItemDestinationGroupOutput() GetAdaptivePolicyPoliciesItemDestinationGroupOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemDestinationGroupOutput) ToGetAdaptivePolicyPoliciesItemDestinationGroupOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemDestinationGroupOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemDestinationGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemDestinationGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemDestinationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemDestinationGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemDestinationGroupOutput) Sgt() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemDestinationGroup) int { return v.Sgt }).(pulumi.IntOutput)
}

type GetAdaptivePolicyPoliciesItemSourceGroup struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	Sgt  int    `pulumi:"sgt"`
}

// GetAdaptivePolicyPoliciesItemSourceGroupInput is an input type that accepts GetAdaptivePolicyPoliciesItemSourceGroupArgs and GetAdaptivePolicyPoliciesItemSourceGroupOutput values.
// You can construct a concrete instance of `GetAdaptivePolicyPoliciesItemSourceGroupInput` via:
//
//	GetAdaptivePolicyPoliciesItemSourceGroupArgs{...}
type GetAdaptivePolicyPoliciesItemSourceGroupInput interface {
	pulumi.Input

	ToGetAdaptivePolicyPoliciesItemSourceGroupOutput() GetAdaptivePolicyPoliciesItemSourceGroupOutput
	ToGetAdaptivePolicyPoliciesItemSourceGroupOutputWithContext(context.Context) GetAdaptivePolicyPoliciesItemSourceGroupOutput
}

type GetAdaptivePolicyPoliciesItemSourceGroupArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Sgt  pulumi.IntInput    `pulumi:"sgt"`
}

func (GetAdaptivePolicyPoliciesItemSourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemSourceGroup)(nil)).Elem()
}

func (i GetAdaptivePolicyPoliciesItemSourceGroupArgs) ToGetAdaptivePolicyPoliciesItemSourceGroupOutput() GetAdaptivePolicyPoliciesItemSourceGroupOutput {
	return i.ToGetAdaptivePolicyPoliciesItemSourceGroupOutputWithContext(context.Background())
}

func (i GetAdaptivePolicyPoliciesItemSourceGroupArgs) ToGetAdaptivePolicyPoliciesItemSourceGroupOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemSourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicyPoliciesItemSourceGroupOutput)
}

type GetAdaptivePolicyPoliciesItemSourceGroupOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicyPoliciesItemSourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicyPoliciesItemSourceGroup)(nil)).Elem()
}

func (o GetAdaptivePolicyPoliciesItemSourceGroupOutput) ToGetAdaptivePolicyPoliciesItemSourceGroupOutput() GetAdaptivePolicyPoliciesItemSourceGroupOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemSourceGroupOutput) ToGetAdaptivePolicyPoliciesItemSourceGroupOutputWithContext(ctx context.Context) GetAdaptivePolicyPoliciesItemSourceGroupOutput {
	return o
}

func (o GetAdaptivePolicyPoliciesItemSourceGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemSourceGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemSourceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemSourceGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAdaptivePolicyPoliciesItemSourceGroupOutput) Sgt() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptivePolicyPoliciesItemSourceGroup) int { return v.Sgt }).(pulumi.IntOutput)
}

type GetAdaptivePolicySettingsItem struct {
	EnabledNetworks []string `pulumi:"enabledNetworks"`
}

// GetAdaptivePolicySettingsItemInput is an input type that accepts GetAdaptivePolicySettingsItemArgs and GetAdaptivePolicySettingsItemOutput values.
// You can construct a concrete instance of `GetAdaptivePolicySettingsItemInput` via:
//
//	GetAdaptivePolicySettingsItemArgs{...}
type GetAdaptivePolicySettingsItemInput interface {
	pulumi.Input

	ToGetAdaptivePolicySettingsItemOutput() GetAdaptivePolicySettingsItemOutput
	ToGetAdaptivePolicySettingsItemOutputWithContext(context.Context) GetAdaptivePolicySettingsItemOutput
}

type GetAdaptivePolicySettingsItemArgs struct {
	EnabledNetworks pulumi.StringArrayInput `pulumi:"enabledNetworks"`
}

func (GetAdaptivePolicySettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicySettingsItem)(nil)).Elem()
}

func (i GetAdaptivePolicySettingsItemArgs) ToGetAdaptivePolicySettingsItemOutput() GetAdaptivePolicySettingsItemOutput {
	return i.ToGetAdaptivePolicySettingsItemOutputWithContext(context.Background())
}

func (i GetAdaptivePolicySettingsItemArgs) ToGetAdaptivePolicySettingsItemOutputWithContext(ctx context.Context) GetAdaptivePolicySettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptivePolicySettingsItemOutput)
}

type GetAdaptivePolicySettingsItemOutput struct{ *pulumi.OutputState }

func (GetAdaptivePolicySettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptivePolicySettingsItem)(nil)).Elem()
}

func (o GetAdaptivePolicySettingsItemOutput) ToGetAdaptivePolicySettingsItemOutput() GetAdaptivePolicySettingsItemOutput {
	return o
}

func (o GetAdaptivePolicySettingsItemOutput) ToGetAdaptivePolicySettingsItemOutputWithContext(ctx context.Context) GetAdaptivePolicySettingsItemOutput {
	return o
}

func (o GetAdaptivePolicySettingsItemOutput) EnabledNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAdaptivePolicySettingsItem) []string { return v.EnabledNetworks }).(pulumi.StringArrayOutput)
}

type GetAdminsItem struct {
	// Status of the admin's account
	AccountStatus string `pulumi:"accountStatus"`
	// Admin's authentication method
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// Admin's email address
	Email string `pulumi:"email"`
	// Indicates whether the admin has an API key
	HasApiKey bool `pulumi:"hasApiKey"`
	// Admin's ID
	Id string `pulumi:"id"`
	// Time when the admin was last active
	LastActive string `pulumi:"lastActive"`
	// Admin's username
	Name string `pulumi:"name"`
	// Admin network access information
	Networks []GetAdminsItemNetwork `pulumi:"networks"`
	// Admin's level of access to the organization
	OrgAccess string `pulumi:"orgAccess"`
	// Admin tag information
	Tags []GetAdminsItemTag `pulumi:"tags"`
	// Indicates whether two-factor authentication is enabled
	TwoFactorAuthEnabled bool `pulumi:"twoFactorAuthEnabled"`
}

// GetAdminsItemInput is an input type that accepts GetAdminsItemArgs and GetAdminsItemOutput values.
// You can construct a concrete instance of `GetAdminsItemInput` via:
//
//	GetAdminsItemArgs{...}
type GetAdminsItemInput interface {
	pulumi.Input

	ToGetAdminsItemOutput() GetAdminsItemOutput
	ToGetAdminsItemOutputWithContext(context.Context) GetAdminsItemOutput
}

type GetAdminsItemArgs struct {
	// Status of the admin's account
	AccountStatus pulumi.StringInput `pulumi:"accountStatus"`
	// Admin's authentication method
	AuthenticationMethod pulumi.StringInput `pulumi:"authenticationMethod"`
	// Admin's email address
	Email pulumi.StringInput `pulumi:"email"`
	// Indicates whether the admin has an API key
	HasApiKey pulumi.BoolInput `pulumi:"hasApiKey"`
	// Admin's ID
	Id pulumi.StringInput `pulumi:"id"`
	// Time when the admin was last active
	LastActive pulumi.StringInput `pulumi:"lastActive"`
	// Admin's username
	Name pulumi.StringInput `pulumi:"name"`
	// Admin network access information
	Networks GetAdminsItemNetworkArrayInput `pulumi:"networks"`
	// Admin's level of access to the organization
	OrgAccess pulumi.StringInput `pulumi:"orgAccess"`
	// Admin tag information
	Tags GetAdminsItemTagArrayInput `pulumi:"tags"`
	// Indicates whether two-factor authentication is enabled
	TwoFactorAuthEnabled pulumi.BoolInput `pulumi:"twoFactorAuthEnabled"`
}

func (GetAdminsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItem)(nil)).Elem()
}

func (i GetAdminsItemArgs) ToGetAdminsItemOutput() GetAdminsItemOutput {
	return i.ToGetAdminsItemOutputWithContext(context.Background())
}

func (i GetAdminsItemArgs) ToGetAdminsItemOutputWithContext(ctx context.Context) GetAdminsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemOutput)
}

// GetAdminsItemArrayInput is an input type that accepts GetAdminsItemArray and GetAdminsItemArrayOutput values.
// You can construct a concrete instance of `GetAdminsItemArrayInput` via:
//
//	GetAdminsItemArray{ GetAdminsItemArgs{...} }
type GetAdminsItemArrayInput interface {
	pulumi.Input

	ToGetAdminsItemArrayOutput() GetAdminsItemArrayOutput
	ToGetAdminsItemArrayOutputWithContext(context.Context) GetAdminsItemArrayOutput
}

type GetAdminsItemArray []GetAdminsItemInput

func (GetAdminsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItem)(nil)).Elem()
}

func (i GetAdminsItemArray) ToGetAdminsItemArrayOutput() GetAdminsItemArrayOutput {
	return i.ToGetAdminsItemArrayOutputWithContext(context.Background())
}

func (i GetAdminsItemArray) ToGetAdminsItemArrayOutputWithContext(ctx context.Context) GetAdminsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemArrayOutput)
}

type GetAdminsItemOutput struct{ *pulumi.OutputState }

func (GetAdminsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItem)(nil)).Elem()
}

func (o GetAdminsItemOutput) ToGetAdminsItemOutput() GetAdminsItemOutput {
	return o
}

func (o GetAdminsItemOutput) ToGetAdminsItemOutputWithContext(ctx context.Context) GetAdminsItemOutput {
	return o
}

// Status of the admin's account
func (o GetAdminsItemOutput) AccountStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.AccountStatus }).(pulumi.StringOutput)
}

// Admin's authentication method
func (o GetAdminsItemOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

// Admin's email address
func (o GetAdminsItemOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.Email }).(pulumi.StringOutput)
}

// Indicates whether the admin has an API key
func (o GetAdminsItemOutput) HasApiKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdminsItem) bool { return v.HasApiKey }).(pulumi.BoolOutput)
}

// Admin's ID
func (o GetAdminsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Time when the admin was last active
func (o GetAdminsItemOutput) LastActive() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.LastActive }).(pulumi.StringOutput)
}

// Admin's username
func (o GetAdminsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Admin network access information
func (o GetAdminsItemOutput) Networks() GetAdminsItemNetworkArrayOutput {
	return o.ApplyT(func(v GetAdminsItem) []GetAdminsItemNetwork { return v.Networks }).(GetAdminsItemNetworkArrayOutput)
}

// Admin's level of access to the organization
func (o GetAdminsItemOutput) OrgAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItem) string { return v.OrgAccess }).(pulumi.StringOutput)
}

// Admin tag information
func (o GetAdminsItemOutput) Tags() GetAdminsItemTagArrayOutput {
	return o.ApplyT(func(v GetAdminsItem) []GetAdminsItemTag { return v.Tags }).(GetAdminsItemTagArrayOutput)
}

// Indicates whether two-factor authentication is enabled
func (o GetAdminsItemOutput) TwoFactorAuthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdminsItem) bool { return v.TwoFactorAuthEnabled }).(pulumi.BoolOutput)
}

type GetAdminsItemArrayOutput struct{ *pulumi.OutputState }

func (GetAdminsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItem)(nil)).Elem()
}

func (o GetAdminsItemArrayOutput) ToGetAdminsItemArrayOutput() GetAdminsItemArrayOutput {
	return o
}

func (o GetAdminsItemArrayOutput) ToGetAdminsItemArrayOutputWithContext(ctx context.Context) GetAdminsItemArrayOutput {
	return o
}

func (o GetAdminsItemArrayOutput) Index(i pulumi.IntInput) GetAdminsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminsItem {
		return vs[0].([]GetAdminsItem)[vs[1].(int)]
	}).(GetAdminsItemOutput)
}

type GetAdminsItemNetwork struct {
	// Admin's level of access to the network
	Access string `pulumi:"access"`
	// Network ID
	Id string `pulumi:"id"`
}

// GetAdminsItemNetworkInput is an input type that accepts GetAdminsItemNetworkArgs and GetAdminsItemNetworkOutput values.
// You can construct a concrete instance of `GetAdminsItemNetworkInput` via:
//
//	GetAdminsItemNetworkArgs{...}
type GetAdminsItemNetworkInput interface {
	pulumi.Input

	ToGetAdminsItemNetworkOutput() GetAdminsItemNetworkOutput
	ToGetAdminsItemNetworkOutputWithContext(context.Context) GetAdminsItemNetworkOutput
}

type GetAdminsItemNetworkArgs struct {
	// Admin's level of access to the network
	Access pulumi.StringInput `pulumi:"access"`
	// Network ID
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAdminsItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItemNetwork)(nil)).Elem()
}

func (i GetAdminsItemNetworkArgs) ToGetAdminsItemNetworkOutput() GetAdminsItemNetworkOutput {
	return i.ToGetAdminsItemNetworkOutputWithContext(context.Background())
}

func (i GetAdminsItemNetworkArgs) ToGetAdminsItemNetworkOutputWithContext(ctx context.Context) GetAdminsItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemNetworkOutput)
}

// GetAdminsItemNetworkArrayInput is an input type that accepts GetAdminsItemNetworkArray and GetAdminsItemNetworkArrayOutput values.
// You can construct a concrete instance of `GetAdminsItemNetworkArrayInput` via:
//
//	GetAdminsItemNetworkArray{ GetAdminsItemNetworkArgs{...} }
type GetAdminsItemNetworkArrayInput interface {
	pulumi.Input

	ToGetAdminsItemNetworkArrayOutput() GetAdminsItemNetworkArrayOutput
	ToGetAdminsItemNetworkArrayOutputWithContext(context.Context) GetAdminsItemNetworkArrayOutput
}

type GetAdminsItemNetworkArray []GetAdminsItemNetworkInput

func (GetAdminsItemNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItemNetwork)(nil)).Elem()
}

func (i GetAdminsItemNetworkArray) ToGetAdminsItemNetworkArrayOutput() GetAdminsItemNetworkArrayOutput {
	return i.ToGetAdminsItemNetworkArrayOutputWithContext(context.Background())
}

func (i GetAdminsItemNetworkArray) ToGetAdminsItemNetworkArrayOutputWithContext(ctx context.Context) GetAdminsItemNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemNetworkArrayOutput)
}

type GetAdminsItemNetworkOutput struct{ *pulumi.OutputState }

func (GetAdminsItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItemNetwork)(nil)).Elem()
}

func (o GetAdminsItemNetworkOutput) ToGetAdminsItemNetworkOutput() GetAdminsItemNetworkOutput {
	return o
}

func (o GetAdminsItemNetworkOutput) ToGetAdminsItemNetworkOutputWithContext(ctx context.Context) GetAdminsItemNetworkOutput {
	return o
}

// Admin's level of access to the network
func (o GetAdminsItemNetworkOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItemNetwork) string { return v.Access }).(pulumi.StringOutput)
}

// Network ID
func (o GetAdminsItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetAdminsItemNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetAdminsItemNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItemNetwork)(nil)).Elem()
}

func (o GetAdminsItemNetworkArrayOutput) ToGetAdminsItemNetworkArrayOutput() GetAdminsItemNetworkArrayOutput {
	return o
}

func (o GetAdminsItemNetworkArrayOutput) ToGetAdminsItemNetworkArrayOutputWithContext(ctx context.Context) GetAdminsItemNetworkArrayOutput {
	return o
}

func (o GetAdminsItemNetworkArrayOutput) Index(i pulumi.IntInput) GetAdminsItemNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminsItemNetwork {
		return vs[0].([]GetAdminsItemNetwork)[vs[1].(int)]
	}).(GetAdminsItemNetworkOutput)
}

type GetAdminsItemTag struct {
	// Access level for the tag
	Access string `pulumi:"access"`
	// Tag value
	Tag string `pulumi:"tag"`
}

// GetAdminsItemTagInput is an input type that accepts GetAdminsItemTagArgs and GetAdminsItemTagOutput values.
// You can construct a concrete instance of `GetAdminsItemTagInput` via:
//
//	GetAdminsItemTagArgs{...}
type GetAdminsItemTagInput interface {
	pulumi.Input

	ToGetAdminsItemTagOutput() GetAdminsItemTagOutput
	ToGetAdminsItemTagOutputWithContext(context.Context) GetAdminsItemTagOutput
}

type GetAdminsItemTagArgs struct {
	// Access level for the tag
	Access pulumi.StringInput `pulumi:"access"`
	// Tag value
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetAdminsItemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItemTag)(nil)).Elem()
}

func (i GetAdminsItemTagArgs) ToGetAdminsItemTagOutput() GetAdminsItemTagOutput {
	return i.ToGetAdminsItemTagOutputWithContext(context.Background())
}

func (i GetAdminsItemTagArgs) ToGetAdminsItemTagOutputWithContext(ctx context.Context) GetAdminsItemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemTagOutput)
}

// GetAdminsItemTagArrayInput is an input type that accepts GetAdminsItemTagArray and GetAdminsItemTagArrayOutput values.
// You can construct a concrete instance of `GetAdminsItemTagArrayInput` via:
//
//	GetAdminsItemTagArray{ GetAdminsItemTagArgs{...} }
type GetAdminsItemTagArrayInput interface {
	pulumi.Input

	ToGetAdminsItemTagArrayOutput() GetAdminsItemTagArrayOutput
	ToGetAdminsItemTagArrayOutputWithContext(context.Context) GetAdminsItemTagArrayOutput
}

type GetAdminsItemTagArray []GetAdminsItemTagInput

func (GetAdminsItemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItemTag)(nil)).Elem()
}

func (i GetAdminsItemTagArray) ToGetAdminsItemTagArrayOutput() GetAdminsItemTagArrayOutput {
	return i.ToGetAdminsItemTagArrayOutputWithContext(context.Background())
}

func (i GetAdminsItemTagArray) ToGetAdminsItemTagArrayOutputWithContext(ctx context.Context) GetAdminsItemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsItemTagArrayOutput)
}

type GetAdminsItemTagOutput struct{ *pulumi.OutputState }

func (GetAdminsItemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsItemTag)(nil)).Elem()
}

func (o GetAdminsItemTagOutput) ToGetAdminsItemTagOutput() GetAdminsItemTagOutput {
	return o
}

func (o GetAdminsItemTagOutput) ToGetAdminsItemTagOutputWithContext(ctx context.Context) GetAdminsItemTagOutput {
	return o
}

// Access level for the tag
func (o GetAdminsItemTagOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItemTag) string { return v.Access }).(pulumi.StringOutput)
}

// Tag value
func (o GetAdminsItemTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsItemTag) string { return v.Tag }).(pulumi.StringOutput)
}

type GetAdminsItemTagArrayOutput struct{ *pulumi.OutputState }

func (GetAdminsItemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsItemTag)(nil)).Elem()
}

func (o GetAdminsItemTagArrayOutput) ToGetAdminsItemTagArrayOutput() GetAdminsItemTagArrayOutput {
	return o
}

func (o GetAdminsItemTagArrayOutput) ToGetAdminsItemTagArrayOutputWithContext(ctx context.Context) GetAdminsItemTagArrayOutput {
	return o
}

func (o GetAdminsItemTagArrayOutput) Index(i pulumi.IntInput) GetAdminsItemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminsItemTag {
		return vs[0].([]GetAdminsItemTag)[vs[1].(int)]
	}).(GetAdminsItemTagOutput)
}

type GetAlertsProfilesItem struct {
	// The conditions that determine if the alert triggers
	AlertCondition GetAlertsProfilesItemAlertCondition `pulumi:"alertCondition"`
	// User supplied description of the alert
	Description string `pulumi:"description"`
	// Is the alert config enabled
	Enabled bool `pulumi:"enabled"`
	// The alert config ID
	Id string `pulumi:"id"`
	// Networks with these tags will be monitored for the alert
	NetworkTags []string `pulumi:"networkTags"`
	// List of recipients that will recieve the alert.
	Recipients GetAlertsProfilesItemRecipients `pulumi:"recipients"`
	// The alert type
	Type string `pulumi:"type"`
}

// GetAlertsProfilesItemInput is an input type that accepts GetAlertsProfilesItemArgs and GetAlertsProfilesItemOutput values.
// You can construct a concrete instance of `GetAlertsProfilesItemInput` via:
//
//	GetAlertsProfilesItemArgs{...}
type GetAlertsProfilesItemInput interface {
	pulumi.Input

	ToGetAlertsProfilesItemOutput() GetAlertsProfilesItemOutput
	ToGetAlertsProfilesItemOutputWithContext(context.Context) GetAlertsProfilesItemOutput
}

type GetAlertsProfilesItemArgs struct {
	// The conditions that determine if the alert triggers
	AlertCondition GetAlertsProfilesItemAlertConditionInput `pulumi:"alertCondition"`
	// User supplied description of the alert
	Description pulumi.StringInput `pulumi:"description"`
	// Is the alert config enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The alert config ID
	Id pulumi.StringInput `pulumi:"id"`
	// Networks with these tags will be monitored for the alert
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// List of recipients that will recieve the alert.
	Recipients GetAlertsProfilesItemRecipientsInput `pulumi:"recipients"`
	// The alert type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAlertsProfilesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItem)(nil)).Elem()
}

func (i GetAlertsProfilesItemArgs) ToGetAlertsProfilesItemOutput() GetAlertsProfilesItemOutput {
	return i.ToGetAlertsProfilesItemOutputWithContext(context.Background())
}

func (i GetAlertsProfilesItemArgs) ToGetAlertsProfilesItemOutputWithContext(ctx context.Context) GetAlertsProfilesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsProfilesItemOutput)
}

// GetAlertsProfilesItemArrayInput is an input type that accepts GetAlertsProfilesItemArray and GetAlertsProfilesItemArrayOutput values.
// You can construct a concrete instance of `GetAlertsProfilesItemArrayInput` via:
//
//	GetAlertsProfilesItemArray{ GetAlertsProfilesItemArgs{...} }
type GetAlertsProfilesItemArrayInput interface {
	pulumi.Input

	ToGetAlertsProfilesItemArrayOutput() GetAlertsProfilesItemArrayOutput
	ToGetAlertsProfilesItemArrayOutputWithContext(context.Context) GetAlertsProfilesItemArrayOutput
}

type GetAlertsProfilesItemArray []GetAlertsProfilesItemInput

func (GetAlertsProfilesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsProfilesItem)(nil)).Elem()
}

func (i GetAlertsProfilesItemArray) ToGetAlertsProfilesItemArrayOutput() GetAlertsProfilesItemArrayOutput {
	return i.ToGetAlertsProfilesItemArrayOutputWithContext(context.Background())
}

func (i GetAlertsProfilesItemArray) ToGetAlertsProfilesItemArrayOutputWithContext(ctx context.Context) GetAlertsProfilesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsProfilesItemArrayOutput)
}

type GetAlertsProfilesItemOutput struct{ *pulumi.OutputState }

func (GetAlertsProfilesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItem)(nil)).Elem()
}

func (o GetAlertsProfilesItemOutput) ToGetAlertsProfilesItemOutput() GetAlertsProfilesItemOutput {
	return o
}

func (o GetAlertsProfilesItemOutput) ToGetAlertsProfilesItemOutputWithContext(ctx context.Context) GetAlertsProfilesItemOutput {
	return o
}

// The conditions that determine if the alert triggers
func (o GetAlertsProfilesItemOutput) AlertCondition() GetAlertsProfilesItemAlertConditionOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) GetAlertsProfilesItemAlertCondition { return v.AlertCondition }).(GetAlertsProfilesItemAlertConditionOutput)
}

// User supplied description of the alert
func (o GetAlertsProfilesItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) string { return v.Description }).(pulumi.StringOutput)
}

// Is the alert config enabled
func (o GetAlertsProfilesItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The alert config ID
func (o GetAlertsProfilesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) string { return v.Id }).(pulumi.StringOutput)
}

// Networks with these tags will be monitored for the alert
func (o GetAlertsProfilesItemOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// List of recipients that will recieve the alert.
func (o GetAlertsProfilesItemOutput) Recipients() GetAlertsProfilesItemRecipientsOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) GetAlertsProfilesItemRecipients { return v.Recipients }).(GetAlertsProfilesItemRecipientsOutput)
}

// The alert type
func (o GetAlertsProfilesItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsProfilesItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetAlertsProfilesItemArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsProfilesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsProfilesItem)(nil)).Elem()
}

func (o GetAlertsProfilesItemArrayOutput) ToGetAlertsProfilesItemArrayOutput() GetAlertsProfilesItemArrayOutput {
	return o
}

func (o GetAlertsProfilesItemArrayOutput) ToGetAlertsProfilesItemArrayOutputWithContext(ctx context.Context) GetAlertsProfilesItemArrayOutput {
	return o
}

func (o GetAlertsProfilesItemArrayOutput) Index(i pulumi.IntInput) GetAlertsProfilesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsProfilesItem {
		return vs[0].([]GetAlertsProfilesItem)[vs[1].(int)]
	}).(GetAlertsProfilesItemOutput)
}

type GetAlertsProfilesItemAlertCondition struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps int `pulumi:"bitRateBps"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration int `pulumi:"duration"`
	// The uplink observed for the alert
	Interface string `pulumi:"interface"`
	// The look back period in seconds for sensing the alert
	Window int `pulumi:"window"`
}

// GetAlertsProfilesItemAlertConditionInput is an input type that accepts GetAlertsProfilesItemAlertConditionArgs and GetAlertsProfilesItemAlertConditionOutput values.
// You can construct a concrete instance of `GetAlertsProfilesItemAlertConditionInput` via:
//
//	GetAlertsProfilesItemAlertConditionArgs{...}
type GetAlertsProfilesItemAlertConditionInput interface {
	pulumi.Input

	ToGetAlertsProfilesItemAlertConditionOutput() GetAlertsProfilesItemAlertConditionOutput
	ToGetAlertsProfilesItemAlertConditionOutputWithContext(context.Context) GetAlertsProfilesItemAlertConditionOutput
}

type GetAlertsProfilesItemAlertConditionArgs struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps pulumi.IntInput `pulumi:"bitRateBps"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration pulumi.IntInput `pulumi:"duration"`
	// The uplink observed for the alert
	Interface pulumi.StringInput `pulumi:"interface"`
	// The look back period in seconds for sensing the alert
	Window pulumi.IntInput `pulumi:"window"`
}

func (GetAlertsProfilesItemAlertConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItemAlertCondition)(nil)).Elem()
}

func (i GetAlertsProfilesItemAlertConditionArgs) ToGetAlertsProfilesItemAlertConditionOutput() GetAlertsProfilesItemAlertConditionOutput {
	return i.ToGetAlertsProfilesItemAlertConditionOutputWithContext(context.Background())
}

func (i GetAlertsProfilesItemAlertConditionArgs) ToGetAlertsProfilesItemAlertConditionOutputWithContext(ctx context.Context) GetAlertsProfilesItemAlertConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsProfilesItemAlertConditionOutput)
}

type GetAlertsProfilesItemAlertConditionOutput struct{ *pulumi.OutputState }

func (GetAlertsProfilesItemAlertConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItemAlertCondition)(nil)).Elem()
}

func (o GetAlertsProfilesItemAlertConditionOutput) ToGetAlertsProfilesItemAlertConditionOutput() GetAlertsProfilesItemAlertConditionOutput {
	return o
}

func (o GetAlertsProfilesItemAlertConditionOutput) ToGetAlertsProfilesItemAlertConditionOutputWithContext(ctx context.Context) GetAlertsProfilesItemAlertConditionOutput {
	return o
}

// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
func (o GetAlertsProfilesItemAlertConditionOutput) BitRateBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemAlertCondition) int { return v.BitRateBps }).(pulumi.IntOutput)
}

// The total duration in seconds that the threshold should be crossed before alerting
func (o GetAlertsProfilesItemAlertConditionOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemAlertCondition) int { return v.Duration }).(pulumi.IntOutput)
}

// The uplink observed for the alert
func (o GetAlertsProfilesItemAlertConditionOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemAlertCondition) string { return v.Interface }).(pulumi.StringOutput)
}

// The look back period in seconds for sensing the alert
func (o GetAlertsProfilesItemAlertConditionOutput) Window() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemAlertCondition) int { return v.Window }).(pulumi.IntOutput)
}

type GetAlertsProfilesItemRecipients struct {
	// A list of emails that will receive information about the alert
	Emails []string `pulumi:"emails"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HttpServerIds []string `pulumi:"httpServerIds"`
}

// GetAlertsProfilesItemRecipientsInput is an input type that accepts GetAlertsProfilesItemRecipientsArgs and GetAlertsProfilesItemRecipientsOutput values.
// You can construct a concrete instance of `GetAlertsProfilesItemRecipientsInput` via:
//
//	GetAlertsProfilesItemRecipientsArgs{...}
type GetAlertsProfilesItemRecipientsInput interface {
	pulumi.Input

	ToGetAlertsProfilesItemRecipientsOutput() GetAlertsProfilesItemRecipientsOutput
	ToGetAlertsProfilesItemRecipientsOutputWithContext(context.Context) GetAlertsProfilesItemRecipientsOutput
}

type GetAlertsProfilesItemRecipientsArgs struct {
	// A list of emails that will receive information about the alert
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HttpServerIds pulumi.StringArrayInput `pulumi:"httpServerIds"`
}

func (GetAlertsProfilesItemRecipientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItemRecipients)(nil)).Elem()
}

func (i GetAlertsProfilesItemRecipientsArgs) ToGetAlertsProfilesItemRecipientsOutput() GetAlertsProfilesItemRecipientsOutput {
	return i.ToGetAlertsProfilesItemRecipientsOutputWithContext(context.Background())
}

func (i GetAlertsProfilesItemRecipientsArgs) ToGetAlertsProfilesItemRecipientsOutputWithContext(ctx context.Context) GetAlertsProfilesItemRecipientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsProfilesItemRecipientsOutput)
}

type GetAlertsProfilesItemRecipientsOutput struct{ *pulumi.OutputState }

func (GetAlertsProfilesItemRecipientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsProfilesItemRecipients)(nil)).Elem()
}

func (o GetAlertsProfilesItemRecipientsOutput) ToGetAlertsProfilesItemRecipientsOutput() GetAlertsProfilesItemRecipientsOutput {
	return o
}

func (o GetAlertsProfilesItemRecipientsOutput) ToGetAlertsProfilesItemRecipientsOutputWithContext(ctx context.Context) GetAlertsProfilesItemRecipientsOutput {
	return o
}

// A list of emails that will receive information about the alert
func (o GetAlertsProfilesItemRecipientsOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemRecipients) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list base64 encoded urls of webhook endpoints that will receive information about the alert
func (o GetAlertsProfilesItemRecipientsOutput) HttpServerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertsProfilesItemRecipients) []string { return v.HttpServerIds }).(pulumi.StringArrayOutput)
}

type GetApiRequestsItem struct {
	// Database ID for the admin user who made the API request.
	AdminId string `pulumi:"adminId"`
	// The host which the API request was directed at.
	Host string `pulumi:"host"`
	// HTTP method used in the API request.
	Method string `pulumi:"method"`
	// Operation ID for the endpoint.
	OperationId string `pulumi:"operationId"`
	// The API request path.
	Path string `pulumi:"path"`
	// The query string sent with the API request.
	QueryString string `pulumi:"queryString"`
	// API request response code.
	ResponseCode int `pulumi:"responseCode"`
	// Public IP address from which the API request was made.
	SourceIp string `pulumi:"sourceIp"`
	// Timestamp, in iso8601 format, indicating when the API request was made.
	Ts string `pulumi:"ts"`
	// The API request user agent.
	UserAgent string `pulumi:"userAgent"`
	// API version of the endpoint.
	Version int `pulumi:"version"`
}

// GetApiRequestsItemInput is an input type that accepts GetApiRequestsItemArgs and GetApiRequestsItemOutput values.
// You can construct a concrete instance of `GetApiRequestsItemInput` via:
//
//	GetApiRequestsItemArgs{...}
type GetApiRequestsItemInput interface {
	pulumi.Input

	ToGetApiRequestsItemOutput() GetApiRequestsItemOutput
	ToGetApiRequestsItemOutputWithContext(context.Context) GetApiRequestsItemOutput
}

type GetApiRequestsItemArgs struct {
	// Database ID for the admin user who made the API request.
	AdminId pulumi.StringInput `pulumi:"adminId"`
	// The host which the API request was directed at.
	Host pulumi.StringInput `pulumi:"host"`
	// HTTP method used in the API request.
	Method pulumi.StringInput `pulumi:"method"`
	// Operation ID for the endpoint.
	OperationId pulumi.StringInput `pulumi:"operationId"`
	// The API request path.
	Path pulumi.StringInput `pulumi:"path"`
	// The query string sent with the API request.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// API request response code.
	ResponseCode pulumi.IntInput `pulumi:"responseCode"`
	// Public IP address from which the API request was made.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// Timestamp, in iso8601 format, indicating when the API request was made.
	Ts pulumi.StringInput `pulumi:"ts"`
	// The API request user agent.
	UserAgent pulumi.StringInput `pulumi:"userAgent"`
	// API version of the endpoint.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetApiRequestsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsItem)(nil)).Elem()
}

func (i GetApiRequestsItemArgs) ToGetApiRequestsItemOutput() GetApiRequestsItemOutput {
	return i.ToGetApiRequestsItemOutputWithContext(context.Background())
}

func (i GetApiRequestsItemArgs) ToGetApiRequestsItemOutputWithContext(ctx context.Context) GetApiRequestsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsItemOutput)
}

// GetApiRequestsItemArrayInput is an input type that accepts GetApiRequestsItemArray and GetApiRequestsItemArrayOutput values.
// You can construct a concrete instance of `GetApiRequestsItemArrayInput` via:
//
//	GetApiRequestsItemArray{ GetApiRequestsItemArgs{...} }
type GetApiRequestsItemArrayInput interface {
	pulumi.Input

	ToGetApiRequestsItemArrayOutput() GetApiRequestsItemArrayOutput
	ToGetApiRequestsItemArrayOutputWithContext(context.Context) GetApiRequestsItemArrayOutput
}

type GetApiRequestsItemArray []GetApiRequestsItemInput

func (GetApiRequestsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsItem)(nil)).Elem()
}

func (i GetApiRequestsItemArray) ToGetApiRequestsItemArrayOutput() GetApiRequestsItemArrayOutput {
	return i.ToGetApiRequestsItemArrayOutputWithContext(context.Background())
}

func (i GetApiRequestsItemArray) ToGetApiRequestsItemArrayOutputWithContext(ctx context.Context) GetApiRequestsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsItemArrayOutput)
}

type GetApiRequestsItemOutput struct{ *pulumi.OutputState }

func (GetApiRequestsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsItem)(nil)).Elem()
}

func (o GetApiRequestsItemOutput) ToGetApiRequestsItemOutput() GetApiRequestsItemOutput {
	return o
}

func (o GetApiRequestsItemOutput) ToGetApiRequestsItemOutputWithContext(ctx context.Context) GetApiRequestsItemOutput {
	return o
}

// Database ID for the admin user who made the API request.
func (o GetApiRequestsItemOutput) AdminId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.AdminId }).(pulumi.StringOutput)
}

// The host which the API request was directed at.
func (o GetApiRequestsItemOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.Host }).(pulumi.StringOutput)
}

// HTTP method used in the API request.
func (o GetApiRequestsItemOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.Method }).(pulumi.StringOutput)
}

// Operation ID for the endpoint.
func (o GetApiRequestsItemOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.OperationId }).(pulumi.StringOutput)
}

// The API request path.
func (o GetApiRequestsItemOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.Path }).(pulumi.StringOutput)
}

// The query string sent with the API request.
func (o GetApiRequestsItemOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.QueryString }).(pulumi.StringOutput)
}

// API request response code.
func (o GetApiRequestsItemOutput) ResponseCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsItem) int { return v.ResponseCode }).(pulumi.IntOutput)
}

// Public IP address from which the API request was made.
func (o GetApiRequestsItemOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Timestamp, in iso8601 format, indicating when the API request was made.
func (o GetApiRequestsItemOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.Ts }).(pulumi.StringOutput)
}

// The API request user agent.
func (o GetApiRequestsItemOutput) UserAgent() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsItem) string { return v.UserAgent }).(pulumi.StringOutput)
}

// API version of the endpoint.
func (o GetApiRequestsItemOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsItem) int { return v.Version }).(pulumi.IntOutput)
}

type GetApiRequestsItemArrayOutput struct{ *pulumi.OutputState }

func (GetApiRequestsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsItem)(nil)).Elem()
}

func (o GetApiRequestsItemArrayOutput) ToGetApiRequestsItemArrayOutput() GetApiRequestsItemArrayOutput {
	return o
}

func (o GetApiRequestsItemArrayOutput) ToGetApiRequestsItemArrayOutputWithContext(ctx context.Context) GetApiRequestsItemArrayOutput {
	return o
}

func (o GetApiRequestsItemArrayOutput) Index(i pulumi.IntInput) GetApiRequestsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiRequestsItem {
		return vs[0].([]GetApiRequestsItem)[vs[1].(int)]
	}).(GetApiRequestsItemOutput)
}

type GetApiRequestsOverviewItem struct {
	// object of all supported HTTP response code
	ResponseCodeCounts GetApiRequestsOverviewItemResponseCodeCounts `pulumi:"responseCodeCounts"`
}

// GetApiRequestsOverviewItemInput is an input type that accepts GetApiRequestsOverviewItemArgs and GetApiRequestsOverviewItemOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewItemInput` via:
//
//	GetApiRequestsOverviewItemArgs{...}
type GetApiRequestsOverviewItemInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewItemOutput() GetApiRequestsOverviewItemOutput
	ToGetApiRequestsOverviewItemOutputWithContext(context.Context) GetApiRequestsOverviewItemOutput
}

type GetApiRequestsOverviewItemArgs struct {
	// object of all supported HTTP response code
	ResponseCodeCounts GetApiRequestsOverviewItemResponseCodeCountsInput `pulumi:"responseCodeCounts"`
}

func (GetApiRequestsOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewItem)(nil)).Elem()
}

func (i GetApiRequestsOverviewItemArgs) ToGetApiRequestsOverviewItemOutput() GetApiRequestsOverviewItemOutput {
	return i.ToGetApiRequestsOverviewItemOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewItemArgs) ToGetApiRequestsOverviewItemOutputWithContext(ctx context.Context) GetApiRequestsOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewItemOutput)
}

type GetApiRequestsOverviewItemOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewItem)(nil)).Elem()
}

func (o GetApiRequestsOverviewItemOutput) ToGetApiRequestsOverviewItemOutput() GetApiRequestsOverviewItemOutput {
	return o
}

func (o GetApiRequestsOverviewItemOutput) ToGetApiRequestsOverviewItemOutputWithContext(ctx context.Context) GetApiRequestsOverviewItemOutput {
	return o
}

// object of all supported HTTP response code
func (o GetApiRequestsOverviewItemOutput) ResponseCodeCounts() GetApiRequestsOverviewItemResponseCodeCountsOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItem) GetApiRequestsOverviewItemResponseCodeCounts {
		return v.ResponseCodeCounts
	}).(GetApiRequestsOverviewItemResponseCodeCountsOutput)
}

type GetApiRequestsOverviewItemResponseCodeCounts struct {
	// HTTP 200 response code count.
	Status200 int `pulumi:"status200"`
	// HTTP 201 response code count.
	Status201 int `pulumi:"status201"`
	// HTTP 202 response code count.
	Status202 int `pulumi:"status202"`
	// HTTP 203 response code count.
	Status203 int `pulumi:"status203"`
	// HTTP 204 response code count.
	Status204 int `pulumi:"status204"`
	// HTTP 205 response code count.
	Status205 int `pulumi:"status205"`
	// HTTP 206 response code count.
	Status206 int `pulumi:"status206"`
	// HTTP 207 response code count.
	Status207 int `pulumi:"status207"`
	// HTTP 208 response code count.
	Status208 int `pulumi:"status208"`
	// HTTP 226 response code count.
	Status226 int `pulumi:"status226"`
	// HTTP 300 response code count.
	Status300 int `pulumi:"status300"`
	// HTTP 301 response code count.
	Status301 int `pulumi:"status301"`
	// HTTP 302 response code count.
	Status302 int `pulumi:"status302"`
	// HTTP 303 response code count.
	Status303 int `pulumi:"status303"`
	// HTTP 304 response code count.
	Status304 int `pulumi:"status304"`
	// HTTP 305 response code count.
	Status305 int `pulumi:"status305"`
	// HTTP 306 response code count.
	Status306 int `pulumi:"status306"`
	// HTTP 307 response code count.
	Status307 int `pulumi:"status307"`
	// HTTP 308 response code count.
	Status308 int `pulumi:"status308"`
	// HTTP 400 response code count.
	Status400 int `pulumi:"status400"`
	// HTTP 401 response code count.
	Status401 int `pulumi:"status401"`
	// HTTP 402 response code count.
	Status402 int `pulumi:"status402"`
	// HTTP 403 response code count.
	Status403 int `pulumi:"status403"`
	// HTTP 404 response code count.
	Status404 int `pulumi:"status404"`
	// HTTP 405 response code count.
	Status405 int `pulumi:"status405"`
	// HTTP 406 response code count.
	Status406 int `pulumi:"status406"`
	// HTTP 407 response code count.
	Status407 int `pulumi:"status407"`
	// HTTP 408 response code count.
	Status408 int `pulumi:"status408"`
	// HTTP 409 response code count.
	Status409 int `pulumi:"status409"`
	// HTTP 410 response code count.
	Status410 int `pulumi:"status410"`
	// HTTP 411 response code count.
	Status411 int `pulumi:"status411"`
	// HTTP 412 response code count.
	Status412 int `pulumi:"status412"`
	// HTTP 413 response code count.
	Status413 int `pulumi:"status413"`
	// HTTP 414 response code count.
	Status414 int `pulumi:"status414"`
	// HTTP 415 response code count.
	Status415 int `pulumi:"status415"`
	// HTTP 416 response code count.
	Status416 int `pulumi:"status416"`
	// HTTP 417 response code count.
	Status417 int `pulumi:"status417"`
	// HTTP 421 response code count.
	Status421 int `pulumi:"status421"`
	// HTTP 422 response code count.
	Status422 int `pulumi:"status422"`
	// HTTP 423 response code count.
	Status423 int `pulumi:"status423"`
	// HTTP 424 response code count.
	Status424 int `pulumi:"status424"`
	// HTTP 425 response code count.
	Status425 int `pulumi:"status425"`
	// HTTP 426 response code count.
	Status426 int `pulumi:"status426"`
	// HTTP 428 response code count.
	Status428 int `pulumi:"status428"`
	// HTTP 429 response code count.
	Status429 int `pulumi:"status429"`
	// HTTP 431 response code count.
	Status431 int `pulumi:"status431"`
	// HTTP 451 response code count.
	Status451 int `pulumi:"status451"`
	// HTTP 500 response code count.
	Status500 int `pulumi:"status500"`
	// HTTP 501 response code count.
	Status501 int `pulumi:"status501"`
	// HTTP 502 response code count.
	Status502 int `pulumi:"status502"`
	// HTTP 503 response code count.
	Status503 int `pulumi:"status503"`
	// HTTP 504 response code count.
	Status504 int `pulumi:"status504"`
	// HTTP 505 response code count.
	Status505 int `pulumi:"status505"`
	// HTTP 506 response code count.
	Status506 int `pulumi:"status506"`
	// HTTP 507 response code count.
	Status507 int `pulumi:"status507"`
	// HTTP 508 response code count.
	Status508 int `pulumi:"status508"`
	// HTTP 509 response code count.
	Status509 int `pulumi:"status509"`
	// HTTP 510 response code count.
	Status510 int `pulumi:"status510"`
	// HTTP 511 response code count.
	Status511 int `pulumi:"status511"`
}

// GetApiRequestsOverviewItemResponseCodeCountsInput is an input type that accepts GetApiRequestsOverviewItemResponseCodeCountsArgs and GetApiRequestsOverviewItemResponseCodeCountsOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewItemResponseCodeCountsInput` via:
//
//	GetApiRequestsOverviewItemResponseCodeCountsArgs{...}
type GetApiRequestsOverviewItemResponseCodeCountsInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewItemResponseCodeCountsOutput() GetApiRequestsOverviewItemResponseCodeCountsOutput
	ToGetApiRequestsOverviewItemResponseCodeCountsOutputWithContext(context.Context) GetApiRequestsOverviewItemResponseCodeCountsOutput
}

type GetApiRequestsOverviewItemResponseCodeCountsArgs struct {
	// HTTP 200 response code count.
	Status200 pulumi.IntInput `pulumi:"status200"`
	// HTTP 201 response code count.
	Status201 pulumi.IntInput `pulumi:"status201"`
	// HTTP 202 response code count.
	Status202 pulumi.IntInput `pulumi:"status202"`
	// HTTP 203 response code count.
	Status203 pulumi.IntInput `pulumi:"status203"`
	// HTTP 204 response code count.
	Status204 pulumi.IntInput `pulumi:"status204"`
	// HTTP 205 response code count.
	Status205 pulumi.IntInput `pulumi:"status205"`
	// HTTP 206 response code count.
	Status206 pulumi.IntInput `pulumi:"status206"`
	// HTTP 207 response code count.
	Status207 pulumi.IntInput `pulumi:"status207"`
	// HTTP 208 response code count.
	Status208 pulumi.IntInput `pulumi:"status208"`
	// HTTP 226 response code count.
	Status226 pulumi.IntInput `pulumi:"status226"`
	// HTTP 300 response code count.
	Status300 pulumi.IntInput `pulumi:"status300"`
	// HTTP 301 response code count.
	Status301 pulumi.IntInput `pulumi:"status301"`
	// HTTP 302 response code count.
	Status302 pulumi.IntInput `pulumi:"status302"`
	// HTTP 303 response code count.
	Status303 pulumi.IntInput `pulumi:"status303"`
	// HTTP 304 response code count.
	Status304 pulumi.IntInput `pulumi:"status304"`
	// HTTP 305 response code count.
	Status305 pulumi.IntInput `pulumi:"status305"`
	// HTTP 306 response code count.
	Status306 pulumi.IntInput `pulumi:"status306"`
	// HTTP 307 response code count.
	Status307 pulumi.IntInput `pulumi:"status307"`
	// HTTP 308 response code count.
	Status308 pulumi.IntInput `pulumi:"status308"`
	// HTTP 400 response code count.
	Status400 pulumi.IntInput `pulumi:"status400"`
	// HTTP 401 response code count.
	Status401 pulumi.IntInput `pulumi:"status401"`
	// HTTP 402 response code count.
	Status402 pulumi.IntInput `pulumi:"status402"`
	// HTTP 403 response code count.
	Status403 pulumi.IntInput `pulumi:"status403"`
	// HTTP 404 response code count.
	Status404 pulumi.IntInput `pulumi:"status404"`
	// HTTP 405 response code count.
	Status405 pulumi.IntInput `pulumi:"status405"`
	// HTTP 406 response code count.
	Status406 pulumi.IntInput `pulumi:"status406"`
	// HTTP 407 response code count.
	Status407 pulumi.IntInput `pulumi:"status407"`
	// HTTP 408 response code count.
	Status408 pulumi.IntInput `pulumi:"status408"`
	// HTTP 409 response code count.
	Status409 pulumi.IntInput `pulumi:"status409"`
	// HTTP 410 response code count.
	Status410 pulumi.IntInput `pulumi:"status410"`
	// HTTP 411 response code count.
	Status411 pulumi.IntInput `pulumi:"status411"`
	// HTTP 412 response code count.
	Status412 pulumi.IntInput `pulumi:"status412"`
	// HTTP 413 response code count.
	Status413 pulumi.IntInput `pulumi:"status413"`
	// HTTP 414 response code count.
	Status414 pulumi.IntInput `pulumi:"status414"`
	// HTTP 415 response code count.
	Status415 pulumi.IntInput `pulumi:"status415"`
	// HTTP 416 response code count.
	Status416 pulumi.IntInput `pulumi:"status416"`
	// HTTP 417 response code count.
	Status417 pulumi.IntInput `pulumi:"status417"`
	// HTTP 421 response code count.
	Status421 pulumi.IntInput `pulumi:"status421"`
	// HTTP 422 response code count.
	Status422 pulumi.IntInput `pulumi:"status422"`
	// HTTP 423 response code count.
	Status423 pulumi.IntInput `pulumi:"status423"`
	// HTTP 424 response code count.
	Status424 pulumi.IntInput `pulumi:"status424"`
	// HTTP 425 response code count.
	Status425 pulumi.IntInput `pulumi:"status425"`
	// HTTP 426 response code count.
	Status426 pulumi.IntInput `pulumi:"status426"`
	// HTTP 428 response code count.
	Status428 pulumi.IntInput `pulumi:"status428"`
	// HTTP 429 response code count.
	Status429 pulumi.IntInput `pulumi:"status429"`
	// HTTP 431 response code count.
	Status431 pulumi.IntInput `pulumi:"status431"`
	// HTTP 451 response code count.
	Status451 pulumi.IntInput `pulumi:"status451"`
	// HTTP 500 response code count.
	Status500 pulumi.IntInput `pulumi:"status500"`
	// HTTP 501 response code count.
	Status501 pulumi.IntInput `pulumi:"status501"`
	// HTTP 502 response code count.
	Status502 pulumi.IntInput `pulumi:"status502"`
	// HTTP 503 response code count.
	Status503 pulumi.IntInput `pulumi:"status503"`
	// HTTP 504 response code count.
	Status504 pulumi.IntInput `pulumi:"status504"`
	// HTTP 505 response code count.
	Status505 pulumi.IntInput `pulumi:"status505"`
	// HTTP 506 response code count.
	Status506 pulumi.IntInput `pulumi:"status506"`
	// HTTP 507 response code count.
	Status507 pulumi.IntInput `pulumi:"status507"`
	// HTTP 508 response code count.
	Status508 pulumi.IntInput `pulumi:"status508"`
	// HTTP 509 response code count.
	Status509 pulumi.IntInput `pulumi:"status509"`
	// HTTP 510 response code count.
	Status510 pulumi.IntInput `pulumi:"status510"`
	// HTTP 511 response code count.
	Status511 pulumi.IntInput `pulumi:"status511"`
}

func (GetApiRequestsOverviewItemResponseCodeCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewItemResponseCodeCounts)(nil)).Elem()
}

func (i GetApiRequestsOverviewItemResponseCodeCountsArgs) ToGetApiRequestsOverviewItemResponseCodeCountsOutput() GetApiRequestsOverviewItemResponseCodeCountsOutput {
	return i.ToGetApiRequestsOverviewItemResponseCodeCountsOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewItemResponseCodeCountsArgs) ToGetApiRequestsOverviewItemResponseCodeCountsOutputWithContext(ctx context.Context) GetApiRequestsOverviewItemResponseCodeCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewItemResponseCodeCountsOutput)
}

type GetApiRequestsOverviewItemResponseCodeCountsOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewItemResponseCodeCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewItemResponseCodeCounts)(nil)).Elem()
}

func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) ToGetApiRequestsOverviewItemResponseCodeCountsOutput() GetApiRequestsOverviewItemResponseCodeCountsOutput {
	return o
}

func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) ToGetApiRequestsOverviewItemResponseCodeCountsOutputWithContext(ctx context.Context) GetApiRequestsOverviewItemResponseCodeCountsOutput {
	return o
}

// HTTP 200 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status200() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status200 }).(pulumi.IntOutput)
}

// HTTP 201 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status201() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status201 }).(pulumi.IntOutput)
}

// HTTP 202 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status202() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status202 }).(pulumi.IntOutput)
}

// HTTP 203 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status203() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status203 }).(pulumi.IntOutput)
}

// HTTP 204 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status204() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status204 }).(pulumi.IntOutput)
}

// HTTP 205 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status205() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status205 }).(pulumi.IntOutput)
}

// HTTP 206 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status206() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status206 }).(pulumi.IntOutput)
}

// HTTP 207 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status207() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status207 }).(pulumi.IntOutput)
}

// HTTP 208 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status208() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status208 }).(pulumi.IntOutput)
}

// HTTP 226 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status226() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status226 }).(pulumi.IntOutput)
}

// HTTP 300 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status300() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status300 }).(pulumi.IntOutput)
}

// HTTP 301 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status301() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status301 }).(pulumi.IntOutput)
}

// HTTP 302 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status302() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status302 }).(pulumi.IntOutput)
}

// HTTP 303 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status303() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status303 }).(pulumi.IntOutput)
}

// HTTP 304 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status304() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status304 }).(pulumi.IntOutput)
}

// HTTP 305 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status305() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status305 }).(pulumi.IntOutput)
}

// HTTP 306 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status306() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status306 }).(pulumi.IntOutput)
}

// HTTP 307 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status307() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status307 }).(pulumi.IntOutput)
}

// HTTP 308 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status308() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status308 }).(pulumi.IntOutput)
}

// HTTP 400 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status400() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status400 }).(pulumi.IntOutput)
}

// HTTP 401 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status401() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status401 }).(pulumi.IntOutput)
}

// HTTP 402 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status402() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status402 }).(pulumi.IntOutput)
}

// HTTP 403 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status403() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status403 }).(pulumi.IntOutput)
}

// HTTP 404 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status404() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status404 }).(pulumi.IntOutput)
}

// HTTP 405 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status405() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status405 }).(pulumi.IntOutput)
}

// HTTP 406 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status406() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status406 }).(pulumi.IntOutput)
}

// HTTP 407 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status407() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status407 }).(pulumi.IntOutput)
}

// HTTP 408 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status408() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status408 }).(pulumi.IntOutput)
}

// HTTP 409 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status409() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status409 }).(pulumi.IntOutput)
}

// HTTP 410 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status410() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status410 }).(pulumi.IntOutput)
}

// HTTP 411 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status411() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status411 }).(pulumi.IntOutput)
}

// HTTP 412 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status412() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status412 }).(pulumi.IntOutput)
}

// HTTP 413 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status413() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status413 }).(pulumi.IntOutput)
}

// HTTP 414 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status414() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status414 }).(pulumi.IntOutput)
}

// HTTP 415 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status415() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status415 }).(pulumi.IntOutput)
}

// HTTP 416 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status416() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status416 }).(pulumi.IntOutput)
}

// HTTP 417 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status417() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status417 }).(pulumi.IntOutput)
}

// HTTP 421 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status421() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status421 }).(pulumi.IntOutput)
}

// HTTP 422 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status422() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status422 }).(pulumi.IntOutput)
}

// HTTP 423 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status423() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status423 }).(pulumi.IntOutput)
}

// HTTP 424 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status424() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status424 }).(pulumi.IntOutput)
}

// HTTP 425 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status425() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status425 }).(pulumi.IntOutput)
}

// HTTP 426 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status426() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status426 }).(pulumi.IntOutput)
}

// HTTP 428 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status428() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status428 }).(pulumi.IntOutput)
}

// HTTP 429 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status429() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status429 }).(pulumi.IntOutput)
}

// HTTP 431 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status431() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status431 }).(pulumi.IntOutput)
}

// HTTP 451 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status451() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status451 }).(pulumi.IntOutput)
}

// HTTP 500 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status500() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status500 }).(pulumi.IntOutput)
}

// HTTP 501 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status501() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status501 }).(pulumi.IntOutput)
}

// HTTP 502 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status502() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status502 }).(pulumi.IntOutput)
}

// HTTP 503 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status503() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status503 }).(pulumi.IntOutput)
}

// HTTP 504 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status504() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status504 }).(pulumi.IntOutput)
}

// HTTP 505 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status505() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status505 }).(pulumi.IntOutput)
}

// HTTP 506 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status506() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status506 }).(pulumi.IntOutput)
}

// HTTP 507 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status507() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status507 }).(pulumi.IntOutput)
}

// HTTP 508 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status508() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status508 }).(pulumi.IntOutput)
}

// HTTP 509 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status509() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status509 }).(pulumi.IntOutput)
}

// HTTP 510 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status510() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status510 }).(pulumi.IntOutput)
}

// HTTP 511 response code count.
func (o GetApiRequestsOverviewItemResponseCodeCountsOutput) Status511() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewItemResponseCodeCounts) int { return v.Status511 }).(pulumi.IntOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItem struct {
	// list of response codes and a count of how many requests had that code in the given time period
	Counts []GetApiRequestsOverviewResponseCodesByIntervalItemCount `pulumi:"counts"`
	// The end time of the access period
	EndTs string `pulumi:"endTs"`
	// The start time of the access period
	StartTs string `pulumi:"startTs"`
}

// GetApiRequestsOverviewResponseCodesByIntervalItemInput is an input type that accepts GetApiRequestsOverviewResponseCodesByIntervalItemArgs and GetApiRequestsOverviewResponseCodesByIntervalItemOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewResponseCodesByIntervalItemInput` via:
//
//	GetApiRequestsOverviewResponseCodesByIntervalItemArgs{...}
type GetApiRequestsOverviewResponseCodesByIntervalItemInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewResponseCodesByIntervalItemOutput() GetApiRequestsOverviewResponseCodesByIntervalItemOutput
	ToGetApiRequestsOverviewResponseCodesByIntervalItemOutputWithContext(context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemOutput
}

type GetApiRequestsOverviewResponseCodesByIntervalItemArgs struct {
	// list of response codes and a count of how many requests had that code in the given time period
	Counts GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayInput `pulumi:"counts"`
	// The end time of the access period
	EndTs pulumi.StringInput `pulumi:"endTs"`
	// The start time of the access period
	StartTs pulumi.StringInput `pulumi:"startTs"`
}

func (GetApiRequestsOverviewResponseCodesByIntervalItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItem)(nil)).Elem()
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemArgs) ToGetApiRequestsOverviewResponseCodesByIntervalItemOutput() GetApiRequestsOverviewResponseCodesByIntervalItemOutput {
	return i.ToGetApiRequestsOverviewResponseCodesByIntervalItemOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemArgs) ToGetApiRequestsOverviewResponseCodesByIntervalItemOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewResponseCodesByIntervalItemOutput)
}

// GetApiRequestsOverviewResponseCodesByIntervalItemArrayInput is an input type that accepts GetApiRequestsOverviewResponseCodesByIntervalItemArray and GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewResponseCodesByIntervalItemArrayInput` via:
//
//	GetApiRequestsOverviewResponseCodesByIntervalItemArray{ GetApiRequestsOverviewResponseCodesByIntervalItemArgs{...} }
type GetApiRequestsOverviewResponseCodesByIntervalItemArrayInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput
	ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutputWithContext(context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput
}

type GetApiRequestsOverviewResponseCodesByIntervalItemArray []GetApiRequestsOverviewResponseCodesByIntervalItemInput

func (GetApiRequestsOverviewResponseCodesByIntervalItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsOverviewResponseCodesByIntervalItem)(nil)).Elem()
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemArray) ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput {
	return i.ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemArray) ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItemOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewResponseCodesByIntervalItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItem)(nil)).Elem()
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemOutput() GetApiRequestsOverviewResponseCodesByIntervalItemOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemOutput {
	return o
}

// list of response codes and a count of how many requests had that code in the given time period
func (o GetApiRequestsOverviewResponseCodesByIntervalItemOutput) Counts() GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewResponseCodesByIntervalItem) []GetApiRequestsOverviewResponseCodesByIntervalItemCount {
		return v.Counts
	}).(GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput)
}

// The end time of the access period
func (o GetApiRequestsOverviewResponseCodesByIntervalItemOutput) EndTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewResponseCodesByIntervalItem) string { return v.EndTs }).(pulumi.StringOutput)
}

// The start time of the access period
func (o GetApiRequestsOverviewResponseCodesByIntervalItemOutput) StartTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewResponseCodesByIntervalItem) string { return v.StartTs }).(pulumi.StringOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsOverviewResponseCodesByIntervalItem)(nil)).Elem()
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemArrayOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput) Index(i pulumi.IntInput) GetApiRequestsOverviewResponseCodesByIntervalItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiRequestsOverviewResponseCodesByIntervalItem {
		return vs[0].([]GetApiRequestsOverviewResponseCodesByIntervalItem)[vs[1].(int)]
	}).(GetApiRequestsOverviewResponseCodesByIntervalItemOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItemCount struct {
	// Response status code of the API response
	Code int `pulumi:"code"`
	// Number of records that match the status code
	Count int `pulumi:"count"`
}

// GetApiRequestsOverviewResponseCodesByIntervalItemCountInput is an input type that accepts GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs and GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewResponseCodesByIntervalItemCountInput` via:
//
//	GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs{...}
type GetApiRequestsOverviewResponseCodesByIntervalItemCountInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput
	ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutputWithContext(context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput
}

type GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs struct {
	// Response status code of the API response
	Code pulumi.IntInput `pulumi:"code"`
	// Number of records that match the status code
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemCount)(nil)).Elem()
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput {
	return i.ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput)
}

// GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayInput is an input type that accepts GetApiRequestsOverviewResponseCodesByIntervalItemCountArray and GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput values.
// You can construct a concrete instance of `GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayInput` via:
//
//	GetApiRequestsOverviewResponseCodesByIntervalItemCountArray{ GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs{...} }
type GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayInput interface {
	pulumi.Input

	ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput
	ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutputWithContext(context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput
}

type GetApiRequestsOverviewResponseCodesByIntervalItemCountArray []GetApiRequestsOverviewResponseCodesByIntervalItemCountInput

func (GetApiRequestsOverviewResponseCodesByIntervalItemCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsOverviewResponseCodesByIntervalItemCount)(nil)).Elem()
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemCountArray) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput {
	return i.ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutputWithContext(context.Background())
}

func (i GetApiRequestsOverviewResponseCodesByIntervalItemCountArray) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemCount)(nil)).Elem()
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput {
	return o
}

// Response status code of the API response
func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewResponseCodesByIntervalItemCount) int { return v.Code }).(pulumi.IntOutput)
}

// Number of records that match the status code
func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiRequestsOverviewResponseCodesByIntervalItemCount) int { return v.Count }).(pulumi.IntOutput)
}

type GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput struct{ *pulumi.OutputState }

func (GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiRequestsOverviewResponseCodesByIntervalItemCount)(nil)).Elem()
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput() GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput) ToGetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutputWithContext(ctx context.Context) GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput {
	return o
}

func (o GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput) Index(i pulumi.IntInput) GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiRequestsOverviewResponseCodesByIntervalItemCount {
		return vs[0].([]GetApiRequestsOverviewResponseCodesByIntervalItemCount)[vs[1].(int)]
	}).(GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput)
}

type GetApplianceSecurityIntrusionItem struct {
	AllowedRules []GetApplianceSecurityIntrusionItemAllowedRule `pulumi:"allowedRules"`
}

// GetApplianceSecurityIntrusionItemInput is an input type that accepts GetApplianceSecurityIntrusionItemArgs and GetApplianceSecurityIntrusionItemOutput values.
// You can construct a concrete instance of `GetApplianceSecurityIntrusionItemInput` via:
//
//	GetApplianceSecurityIntrusionItemArgs{...}
type GetApplianceSecurityIntrusionItemInput interface {
	pulumi.Input

	ToGetApplianceSecurityIntrusionItemOutput() GetApplianceSecurityIntrusionItemOutput
	ToGetApplianceSecurityIntrusionItemOutputWithContext(context.Context) GetApplianceSecurityIntrusionItemOutput
}

type GetApplianceSecurityIntrusionItemArgs struct {
	AllowedRules GetApplianceSecurityIntrusionItemAllowedRuleArrayInput `pulumi:"allowedRules"`
}

func (GetApplianceSecurityIntrusionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceSecurityIntrusionItem)(nil)).Elem()
}

func (i GetApplianceSecurityIntrusionItemArgs) ToGetApplianceSecurityIntrusionItemOutput() GetApplianceSecurityIntrusionItemOutput {
	return i.ToGetApplianceSecurityIntrusionItemOutputWithContext(context.Background())
}

func (i GetApplianceSecurityIntrusionItemArgs) ToGetApplianceSecurityIntrusionItemOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceSecurityIntrusionItemOutput)
}

type GetApplianceSecurityIntrusionItemOutput struct{ *pulumi.OutputState }

func (GetApplianceSecurityIntrusionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceSecurityIntrusionItem)(nil)).Elem()
}

func (o GetApplianceSecurityIntrusionItemOutput) ToGetApplianceSecurityIntrusionItemOutput() GetApplianceSecurityIntrusionItemOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemOutput) ToGetApplianceSecurityIntrusionItemOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemOutput) AllowedRules() GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput {
	return o.ApplyT(func(v GetApplianceSecurityIntrusionItem) []GetApplianceSecurityIntrusionItemAllowedRule {
		return v.AllowedRules
	}).(GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput)
}

type GetApplianceSecurityIntrusionItemAllowedRule struct {
	Message string `pulumi:"message"`
	RuleId  string `pulumi:"ruleId"`
}

// GetApplianceSecurityIntrusionItemAllowedRuleInput is an input type that accepts GetApplianceSecurityIntrusionItemAllowedRuleArgs and GetApplianceSecurityIntrusionItemAllowedRuleOutput values.
// You can construct a concrete instance of `GetApplianceSecurityIntrusionItemAllowedRuleInput` via:
//
//	GetApplianceSecurityIntrusionItemAllowedRuleArgs{...}
type GetApplianceSecurityIntrusionItemAllowedRuleInput interface {
	pulumi.Input

	ToGetApplianceSecurityIntrusionItemAllowedRuleOutput() GetApplianceSecurityIntrusionItemAllowedRuleOutput
	ToGetApplianceSecurityIntrusionItemAllowedRuleOutputWithContext(context.Context) GetApplianceSecurityIntrusionItemAllowedRuleOutput
}

type GetApplianceSecurityIntrusionItemAllowedRuleArgs struct {
	Message pulumi.StringInput `pulumi:"message"`
	RuleId  pulumi.StringInput `pulumi:"ruleId"`
}

func (GetApplianceSecurityIntrusionItemAllowedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceSecurityIntrusionItemAllowedRule)(nil)).Elem()
}

func (i GetApplianceSecurityIntrusionItemAllowedRuleArgs) ToGetApplianceSecurityIntrusionItemAllowedRuleOutput() GetApplianceSecurityIntrusionItemAllowedRuleOutput {
	return i.ToGetApplianceSecurityIntrusionItemAllowedRuleOutputWithContext(context.Background())
}

func (i GetApplianceSecurityIntrusionItemAllowedRuleArgs) ToGetApplianceSecurityIntrusionItemAllowedRuleOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemAllowedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceSecurityIntrusionItemAllowedRuleOutput)
}

// GetApplianceSecurityIntrusionItemAllowedRuleArrayInput is an input type that accepts GetApplianceSecurityIntrusionItemAllowedRuleArray and GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput values.
// You can construct a concrete instance of `GetApplianceSecurityIntrusionItemAllowedRuleArrayInput` via:
//
//	GetApplianceSecurityIntrusionItemAllowedRuleArray{ GetApplianceSecurityIntrusionItemAllowedRuleArgs{...} }
type GetApplianceSecurityIntrusionItemAllowedRuleArrayInput interface {
	pulumi.Input

	ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutput() GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput
	ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutputWithContext(context.Context) GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput
}

type GetApplianceSecurityIntrusionItemAllowedRuleArray []GetApplianceSecurityIntrusionItemAllowedRuleInput

func (GetApplianceSecurityIntrusionItemAllowedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceSecurityIntrusionItemAllowedRule)(nil)).Elem()
}

func (i GetApplianceSecurityIntrusionItemAllowedRuleArray) ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutput() GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput {
	return i.ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutputWithContext(context.Background())
}

func (i GetApplianceSecurityIntrusionItemAllowedRuleArray) ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput)
}

type GetApplianceSecurityIntrusionItemAllowedRuleOutput struct{ *pulumi.OutputState }

func (GetApplianceSecurityIntrusionItemAllowedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceSecurityIntrusionItemAllowedRule)(nil)).Elem()
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleOutput) ToGetApplianceSecurityIntrusionItemAllowedRuleOutput() GetApplianceSecurityIntrusionItemAllowedRuleOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleOutput) ToGetApplianceSecurityIntrusionItemAllowedRuleOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemAllowedRuleOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceSecurityIntrusionItemAllowedRule) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceSecurityIntrusionItemAllowedRule) string { return v.RuleId }).(pulumi.StringOutput)
}

type GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceSecurityIntrusionItemAllowedRule)(nil)).Elem()
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput) ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutput() GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput) ToGetApplianceSecurityIntrusionItemAllowedRuleArrayOutputWithContext(ctx context.Context) GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput {
	return o
}

func (o GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput) Index(i pulumi.IntInput) GetApplianceSecurityIntrusionItemAllowedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceSecurityIntrusionItemAllowedRule {
		return vs[0].([]GetApplianceSecurityIntrusionItemAllowedRule)[vs[1].(int)]
	}).(GetApplianceSecurityIntrusionItemAllowedRuleOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItem struct {
	// VPN exclusion rules by network
	Items []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem `pulumi:"items"`
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs and GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs{...}
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs struct {
	// VPN exclusion rules by network
	Items GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayInput `pulumi:"items"`
}

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItem)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItem)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput {
	return o
}

// VPN exclusion rules by network
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput) Items() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItem) []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem {
		return v.Items
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem struct {
	// Custom VPN exclusion rules.
	Customs []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom `pulumi:"customs"`
	// Major Application based VPN exclusion rules.
	MajorApplications []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication `pulumi:"majorApplications"`
	// ID of the network whose VPN exclusion rules are returned.
	NetworkId string `pulumi:"networkId"`
	// Name of the network whose VPN exclusion rules are returned.
	NetworkName string `pulumi:"networkName"`
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs{...}
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs struct {
	// Custom VPN exclusion rules.
	Customs GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayInput `pulumi:"customs"`
	// Major Application based VPN exclusion rules.
	MajorApplications GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayInput `pulumi:"majorApplications"`
	// ID of the network whose VPN exclusion rules are returned.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Name of the network whose VPN exclusion rules are returned.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
}

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput)
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray{ GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs{...} }
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemInput

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput {
	return o
}

// Custom VPN exclusion rules.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) Customs() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem) []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom {
		return v.Customs
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput)
}

// Major Application based VPN exclusion rules.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) MajorApplications() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem) []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication {
		return v.MajorApplications
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput)
}

// ID of the network whose VPN exclusion rules are returned.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Name of the network whose VPN exclusion rules are returned.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem) string { return v.NetworkName }).(pulumi.StringOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput) Index(i pulumi.IntInput) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem {
		return vs[0].([]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItem)[vs[1].(int)]
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom struct {
	// Destination address; hostname required for DNS, IPv4 otherwise.
	Destination string `pulumi:"destination"`
	// Destination port.
	Port string `pulumi:"port"`
	// Protocol.
	Protocol string `pulumi:"protocol"`
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs{...}
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs struct {
	// Destination address; hostname required for DNS, IPv4 otherwise.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Destination port.
	Port pulumi.StringInput `pulumi:"port"`
	// Protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput)
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray{ GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs{...} }
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomInput

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput {
	return o
}

// Destination address; hostname required for DNS, IPv4 otherwise.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom) string { return v.Destination }).(pulumi.StringOutput)
}

// Destination port.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom) string { return v.Port }).(pulumi.StringOutput)
}

// Protocol.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput) Index(i pulumi.IntInput) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom {
		return vs[0].([]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustom)[vs[1].(int)]
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication struct {
	// Application's Meraki ID.
	Id string `pulumi:"id"`
	// Application's name.
	Name string `pulumi:"name"`
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs{...}
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs struct {
	// Application's Meraki ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Application's name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput)
}

// GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayInput is an input type that accepts GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray and GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput values.
// You can construct a concrete instance of `GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayInput` via:
//
//	GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray{ GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs{...} }
type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayInput interface {
	pulumi.Input

	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput
	ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutputWithContext(context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray []GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationInput

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication)(nil)).Elem()
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput {
	return i.ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutputWithContext(context.Background())
}

func (i GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput {
	return o
}

// Application's Meraki ID.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication) string { return v.Id }).(pulumi.StringOutput)
}

// Application's name.
func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication)(nil)).Elem()
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput() GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput) ToGetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutputWithContext(ctx context.Context) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput {
	return o
}

func (o GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput) Index(i pulumi.IntInput) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication {
		return vs[0].([]GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplication)[vs[1].(int)]
	}).(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput)
}

type GetApplianceUplinksStatusesOverviewItem struct {
	// counts
	Counts GetApplianceUplinksStatusesOverviewItemCounts `pulumi:"counts"`
}

// GetApplianceUplinksStatusesOverviewItemInput is an input type that accepts GetApplianceUplinksStatusesOverviewItemArgs and GetApplianceUplinksStatusesOverviewItemOutput values.
// You can construct a concrete instance of `GetApplianceUplinksStatusesOverviewItemInput` via:
//
//	GetApplianceUplinksStatusesOverviewItemArgs{...}
type GetApplianceUplinksStatusesOverviewItemInput interface {
	pulumi.Input

	ToGetApplianceUplinksStatusesOverviewItemOutput() GetApplianceUplinksStatusesOverviewItemOutput
	ToGetApplianceUplinksStatusesOverviewItemOutputWithContext(context.Context) GetApplianceUplinksStatusesOverviewItemOutput
}

type GetApplianceUplinksStatusesOverviewItemArgs struct {
	// counts
	Counts GetApplianceUplinksStatusesOverviewItemCountsInput `pulumi:"counts"`
}

func (GetApplianceUplinksStatusesOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItem)(nil)).Elem()
}

func (i GetApplianceUplinksStatusesOverviewItemArgs) ToGetApplianceUplinksStatusesOverviewItemOutput() GetApplianceUplinksStatusesOverviewItemOutput {
	return i.ToGetApplianceUplinksStatusesOverviewItemOutputWithContext(context.Background())
}

func (i GetApplianceUplinksStatusesOverviewItemArgs) ToGetApplianceUplinksStatusesOverviewItemOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksStatusesOverviewItemOutput)
}

type GetApplianceUplinksStatusesOverviewItemOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksStatusesOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItem)(nil)).Elem()
}

func (o GetApplianceUplinksStatusesOverviewItemOutput) ToGetApplianceUplinksStatusesOverviewItemOutput() GetApplianceUplinksStatusesOverviewItemOutput {
	return o
}

func (o GetApplianceUplinksStatusesOverviewItemOutput) ToGetApplianceUplinksStatusesOverviewItemOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemOutput {
	return o
}

// counts
func (o GetApplianceUplinksStatusesOverviewItemOutput) Counts() GetApplianceUplinksStatusesOverviewItemCountsOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItem) GetApplianceUplinksStatusesOverviewItemCounts {
		return v.Counts
	}).(GetApplianceUplinksStatusesOverviewItemCountsOutput)
}

type GetApplianceUplinksStatusesOverviewItemCounts struct {
	// byStatus
	ByStatus GetApplianceUplinksStatusesOverviewItemCountsByStatus `pulumi:"byStatus"`
}

// GetApplianceUplinksStatusesOverviewItemCountsInput is an input type that accepts GetApplianceUplinksStatusesOverviewItemCountsArgs and GetApplianceUplinksStatusesOverviewItemCountsOutput values.
// You can construct a concrete instance of `GetApplianceUplinksStatusesOverviewItemCountsInput` via:
//
//	GetApplianceUplinksStatusesOverviewItemCountsArgs{...}
type GetApplianceUplinksStatusesOverviewItemCountsInput interface {
	pulumi.Input

	ToGetApplianceUplinksStatusesOverviewItemCountsOutput() GetApplianceUplinksStatusesOverviewItemCountsOutput
	ToGetApplianceUplinksStatusesOverviewItemCountsOutputWithContext(context.Context) GetApplianceUplinksStatusesOverviewItemCountsOutput
}

type GetApplianceUplinksStatusesOverviewItemCountsArgs struct {
	// byStatus
	ByStatus GetApplianceUplinksStatusesOverviewItemCountsByStatusInput `pulumi:"byStatus"`
}

func (GetApplianceUplinksStatusesOverviewItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCounts)(nil)).Elem()
}

func (i GetApplianceUplinksStatusesOverviewItemCountsArgs) ToGetApplianceUplinksStatusesOverviewItemCountsOutput() GetApplianceUplinksStatusesOverviewItemCountsOutput {
	return i.ToGetApplianceUplinksStatusesOverviewItemCountsOutputWithContext(context.Background())
}

func (i GetApplianceUplinksStatusesOverviewItemCountsArgs) ToGetApplianceUplinksStatusesOverviewItemCountsOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksStatusesOverviewItemCountsOutput)
}

type GetApplianceUplinksStatusesOverviewItemCountsOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksStatusesOverviewItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCounts)(nil)).Elem()
}

func (o GetApplianceUplinksStatusesOverviewItemCountsOutput) ToGetApplianceUplinksStatusesOverviewItemCountsOutput() GetApplianceUplinksStatusesOverviewItemCountsOutput {
	return o
}

func (o GetApplianceUplinksStatusesOverviewItemCountsOutput) ToGetApplianceUplinksStatusesOverviewItemCountsOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemCountsOutput {
	return o
}

// byStatus
func (o GetApplianceUplinksStatusesOverviewItemCountsOutput) ByStatus() GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCounts) GetApplianceUplinksStatusesOverviewItemCountsByStatus {
		return v.ByStatus
	}).(GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput)
}

type GetApplianceUplinksStatusesOverviewItemCountsByStatus struct {
	// number of uplinks that are active and working
	Active int `pulumi:"active"`
	// number of uplinks currently connecting
	Connecting int `pulumi:"connecting"`
	// number of uplinks that were working but have failed
	Failed int `pulumi:"failed"`
	// number of uplinks currently where nothing is plugged in
	NotConnected int `pulumi:"notConnected"`
	// number of uplinks that are working but on standby
	Ready int `pulumi:"ready"`
}

// GetApplianceUplinksStatusesOverviewItemCountsByStatusInput is an input type that accepts GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs and GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput values.
// You can construct a concrete instance of `GetApplianceUplinksStatusesOverviewItemCountsByStatusInput` via:
//
//	GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs{...}
type GetApplianceUplinksStatusesOverviewItemCountsByStatusInput interface {
	pulumi.Input

	ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutput() GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput
	ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutputWithContext(context.Context) GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput
}

type GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs struct {
	// number of uplinks that are active and working
	Active pulumi.IntInput `pulumi:"active"`
	// number of uplinks currently connecting
	Connecting pulumi.IntInput `pulumi:"connecting"`
	// number of uplinks that were working but have failed
	Failed pulumi.IntInput `pulumi:"failed"`
	// number of uplinks currently where nothing is plugged in
	NotConnected pulumi.IntInput `pulumi:"notConnected"`
	// number of uplinks that are working but on standby
	Ready pulumi.IntInput `pulumi:"ready"`
}

func (GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCountsByStatus)(nil)).Elem()
}

func (i GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs) ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutput() GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput {
	return i.ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutputWithContext(context.Background())
}

func (i GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs) ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput)
}

type GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCountsByStatus)(nil)).Elem()
}

func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutput() GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput {
	return o
}

func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) ToGetApplianceUplinksStatusesOverviewItemCountsByStatusOutputWithContext(ctx context.Context) GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput {
	return o
}

// number of uplinks that are active and working
func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) Active() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCountsByStatus) int { return v.Active }).(pulumi.IntOutput)
}

// number of uplinks currently connecting
func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) Connecting() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCountsByStatus) int { return v.Connecting }).(pulumi.IntOutput)
}

// number of uplinks that were working but have failed
func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) Failed() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCountsByStatus) int { return v.Failed }).(pulumi.IntOutput)
}

// number of uplinks currently where nothing is plugged in
func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) NotConnected() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCountsByStatus) int { return v.NotConnected }).(pulumi.IntOutput)
}

// number of uplinks that are working but on standby
func (o GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput) Ready() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksStatusesOverviewItemCountsByStatus) int { return v.Ready }).(pulumi.IntOutput)
}

type GetApplianceUplinksUsageByNetworkItem struct {
	// Uplink usage
	ByUplinks []GetApplianceUplinksUsageByNetworkItemByUplink `pulumi:"byUplinks"`
	// Network name
	Name string `pulumi:"name"`
	// Network identifier
	NetworkId string `pulumi:"networkId"`
}

// GetApplianceUplinksUsageByNetworkItemInput is an input type that accepts GetApplianceUplinksUsageByNetworkItemArgs and GetApplianceUplinksUsageByNetworkItemOutput values.
// You can construct a concrete instance of `GetApplianceUplinksUsageByNetworkItemInput` via:
//
//	GetApplianceUplinksUsageByNetworkItemArgs{...}
type GetApplianceUplinksUsageByNetworkItemInput interface {
	pulumi.Input

	ToGetApplianceUplinksUsageByNetworkItemOutput() GetApplianceUplinksUsageByNetworkItemOutput
	ToGetApplianceUplinksUsageByNetworkItemOutputWithContext(context.Context) GetApplianceUplinksUsageByNetworkItemOutput
}

type GetApplianceUplinksUsageByNetworkItemArgs struct {
	// Uplink usage
	ByUplinks GetApplianceUplinksUsageByNetworkItemByUplinkArrayInput `pulumi:"byUplinks"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
	// Network identifier
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (GetApplianceUplinksUsageByNetworkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItem)(nil)).Elem()
}

func (i GetApplianceUplinksUsageByNetworkItemArgs) ToGetApplianceUplinksUsageByNetworkItemOutput() GetApplianceUplinksUsageByNetworkItemOutput {
	return i.ToGetApplianceUplinksUsageByNetworkItemOutputWithContext(context.Background())
}

func (i GetApplianceUplinksUsageByNetworkItemArgs) ToGetApplianceUplinksUsageByNetworkItemOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksUsageByNetworkItemOutput)
}

// GetApplianceUplinksUsageByNetworkItemArrayInput is an input type that accepts GetApplianceUplinksUsageByNetworkItemArray and GetApplianceUplinksUsageByNetworkItemArrayOutput values.
// You can construct a concrete instance of `GetApplianceUplinksUsageByNetworkItemArrayInput` via:
//
//	GetApplianceUplinksUsageByNetworkItemArray{ GetApplianceUplinksUsageByNetworkItemArgs{...} }
type GetApplianceUplinksUsageByNetworkItemArrayInput interface {
	pulumi.Input

	ToGetApplianceUplinksUsageByNetworkItemArrayOutput() GetApplianceUplinksUsageByNetworkItemArrayOutput
	ToGetApplianceUplinksUsageByNetworkItemArrayOutputWithContext(context.Context) GetApplianceUplinksUsageByNetworkItemArrayOutput
}

type GetApplianceUplinksUsageByNetworkItemArray []GetApplianceUplinksUsageByNetworkItemInput

func (GetApplianceUplinksUsageByNetworkItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceUplinksUsageByNetworkItem)(nil)).Elem()
}

func (i GetApplianceUplinksUsageByNetworkItemArray) ToGetApplianceUplinksUsageByNetworkItemArrayOutput() GetApplianceUplinksUsageByNetworkItemArrayOutput {
	return i.ToGetApplianceUplinksUsageByNetworkItemArrayOutputWithContext(context.Background())
}

func (i GetApplianceUplinksUsageByNetworkItemArray) ToGetApplianceUplinksUsageByNetworkItemArrayOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksUsageByNetworkItemArrayOutput)
}

type GetApplianceUplinksUsageByNetworkItemOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksUsageByNetworkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItem)(nil)).Elem()
}

func (o GetApplianceUplinksUsageByNetworkItemOutput) ToGetApplianceUplinksUsageByNetworkItemOutput() GetApplianceUplinksUsageByNetworkItemOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemOutput) ToGetApplianceUplinksUsageByNetworkItemOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemOutput {
	return o
}

// Uplink usage
func (o GetApplianceUplinksUsageByNetworkItemOutput) ByUplinks() GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItem) []GetApplianceUplinksUsageByNetworkItemByUplink {
		return v.ByUplinks
	}).(GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput)
}

// Network name
func (o GetApplianceUplinksUsageByNetworkItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network identifier
func (o GetApplianceUplinksUsageByNetworkItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

type GetApplianceUplinksUsageByNetworkItemArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksUsageByNetworkItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceUplinksUsageByNetworkItem)(nil)).Elem()
}

func (o GetApplianceUplinksUsageByNetworkItemArrayOutput) ToGetApplianceUplinksUsageByNetworkItemArrayOutput() GetApplianceUplinksUsageByNetworkItemArrayOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemArrayOutput) ToGetApplianceUplinksUsageByNetworkItemArrayOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemArrayOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemArrayOutput) Index(i pulumi.IntInput) GetApplianceUplinksUsageByNetworkItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceUplinksUsageByNetworkItem {
		return vs[0].([]GetApplianceUplinksUsageByNetworkItem)[vs[1].(int)]
	}).(GetApplianceUplinksUsageByNetworkItemOutput)
}

type GetApplianceUplinksUsageByNetworkItemByUplink struct {
	// Uplink name
	Interface string `pulumi:"interface"`
	// Bytes received
	Received int `pulumi:"received"`
	// Bytes sent
	Sent int `pulumi:"sent"`
	// Uplink serial
	Serial string `pulumi:"serial"`
}

// GetApplianceUplinksUsageByNetworkItemByUplinkInput is an input type that accepts GetApplianceUplinksUsageByNetworkItemByUplinkArgs and GetApplianceUplinksUsageByNetworkItemByUplinkOutput values.
// You can construct a concrete instance of `GetApplianceUplinksUsageByNetworkItemByUplinkInput` via:
//
//	GetApplianceUplinksUsageByNetworkItemByUplinkArgs{...}
type GetApplianceUplinksUsageByNetworkItemByUplinkInput interface {
	pulumi.Input

	ToGetApplianceUplinksUsageByNetworkItemByUplinkOutput() GetApplianceUplinksUsageByNetworkItemByUplinkOutput
	ToGetApplianceUplinksUsageByNetworkItemByUplinkOutputWithContext(context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkOutput
}

type GetApplianceUplinksUsageByNetworkItemByUplinkArgs struct {
	// Uplink name
	Interface pulumi.StringInput `pulumi:"interface"`
	// Bytes received
	Received pulumi.IntInput `pulumi:"received"`
	// Bytes sent
	Sent pulumi.IntInput `pulumi:"sent"`
	// Uplink serial
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetApplianceUplinksUsageByNetworkItemByUplinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemByUplink)(nil)).Elem()
}

func (i GetApplianceUplinksUsageByNetworkItemByUplinkArgs) ToGetApplianceUplinksUsageByNetworkItemByUplinkOutput() GetApplianceUplinksUsageByNetworkItemByUplinkOutput {
	return i.ToGetApplianceUplinksUsageByNetworkItemByUplinkOutputWithContext(context.Background())
}

func (i GetApplianceUplinksUsageByNetworkItemByUplinkArgs) ToGetApplianceUplinksUsageByNetworkItemByUplinkOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksUsageByNetworkItemByUplinkOutput)
}

// GetApplianceUplinksUsageByNetworkItemByUplinkArrayInput is an input type that accepts GetApplianceUplinksUsageByNetworkItemByUplinkArray and GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput values.
// You can construct a concrete instance of `GetApplianceUplinksUsageByNetworkItemByUplinkArrayInput` via:
//
//	GetApplianceUplinksUsageByNetworkItemByUplinkArray{ GetApplianceUplinksUsageByNetworkItemByUplinkArgs{...} }
type GetApplianceUplinksUsageByNetworkItemByUplinkArrayInput interface {
	pulumi.Input

	ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput() GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput
	ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutputWithContext(context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput
}

type GetApplianceUplinksUsageByNetworkItemByUplinkArray []GetApplianceUplinksUsageByNetworkItemByUplinkInput

func (GetApplianceUplinksUsageByNetworkItemByUplinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceUplinksUsageByNetworkItemByUplink)(nil)).Elem()
}

func (i GetApplianceUplinksUsageByNetworkItemByUplinkArray) ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput() GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput {
	return i.ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutputWithContext(context.Background())
}

func (i GetApplianceUplinksUsageByNetworkItemByUplinkArray) ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput)
}

type GetApplianceUplinksUsageByNetworkItemByUplinkOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksUsageByNetworkItemByUplinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemByUplink)(nil)).Elem()
}

func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) ToGetApplianceUplinksUsageByNetworkItemByUplinkOutput() GetApplianceUplinksUsageByNetworkItemByUplinkOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) ToGetApplianceUplinksUsageByNetworkItemByUplinkOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkOutput {
	return o
}

// Uplink name
func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItemByUplink) string { return v.Interface }).(pulumi.StringOutput)
}

// Bytes received
func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) Received() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItemByUplink) int { return v.Received }).(pulumi.IntOutput)
}

// Bytes sent
func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) Sent() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItemByUplink) int { return v.Sent }).(pulumi.IntOutput)
}

// Uplink serial
func (o GetApplianceUplinksUsageByNetworkItemByUplinkOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksUsageByNetworkItemByUplink) string { return v.Serial }).(pulumi.StringOutput)
}

type GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceUplinksUsageByNetworkItemByUplink)(nil)).Elem()
}

func (o GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput) ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput() GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput) ToGetApplianceUplinksUsageByNetworkItemByUplinkArrayOutputWithContext(ctx context.Context) GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput {
	return o
}

func (o GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput) Index(i pulumi.IntInput) GetApplianceUplinksUsageByNetworkItemByUplinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceUplinksUsageByNetworkItemByUplink {
		return vs[0].([]GetApplianceUplinksUsageByNetworkItemByUplink)[vs[1].(int)]
	}).(GetApplianceUplinksUsageByNetworkItemByUplinkOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItem struct {
	// The list of VPN peers
	Peers []GetApplianceVpnThirdPartyVpnpeersItemPeer `pulumi:"peers"`
}

// GetApplianceVpnThirdPartyVpnpeersItemInput is an input type that accepts GetApplianceVpnThirdPartyVpnpeersItemArgs and GetApplianceVpnThirdPartyVpnpeersItemOutput values.
// You can construct a concrete instance of `GetApplianceVpnThirdPartyVpnpeersItemInput` via:
//
//	GetApplianceVpnThirdPartyVpnpeersItemArgs{...}
type GetApplianceVpnThirdPartyVpnpeersItemInput interface {
	pulumi.Input

	ToGetApplianceVpnThirdPartyVpnpeersItemOutput() GetApplianceVpnThirdPartyVpnpeersItemOutput
	ToGetApplianceVpnThirdPartyVpnpeersItemOutputWithContext(context.Context) GetApplianceVpnThirdPartyVpnpeersItemOutput
}

type GetApplianceVpnThirdPartyVpnpeersItemArgs struct {
	// The list of VPN peers
	Peers GetApplianceVpnThirdPartyVpnpeersItemPeerArrayInput `pulumi:"peers"`
}

func (GetApplianceVpnThirdPartyVpnpeersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItem)(nil)).Elem()
}

func (i GetApplianceVpnThirdPartyVpnpeersItemArgs) ToGetApplianceVpnThirdPartyVpnpeersItemOutput() GetApplianceVpnThirdPartyVpnpeersItemOutput {
	return i.ToGetApplianceVpnThirdPartyVpnpeersItemOutputWithContext(context.Background())
}

func (i GetApplianceVpnThirdPartyVpnpeersItemArgs) ToGetApplianceVpnThirdPartyVpnpeersItemOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnThirdPartyVpnpeersItemOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnThirdPartyVpnpeersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItem)(nil)).Elem()
}

func (o GetApplianceVpnThirdPartyVpnpeersItemOutput) ToGetApplianceVpnThirdPartyVpnpeersItemOutput() GetApplianceVpnThirdPartyVpnpeersItemOutput {
	return o
}

func (o GetApplianceVpnThirdPartyVpnpeersItemOutput) ToGetApplianceVpnThirdPartyVpnpeersItemOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemOutput {
	return o
}

// The list of VPN peers
func (o GetApplianceVpnThirdPartyVpnpeersItemOutput) Peers() GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItem) []GetApplianceVpnThirdPartyVpnpeersItemPeer {
		return v.Peers
	}).(GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemPeer struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion string `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset string `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId string `pulumi:"localId"`
	// The name of the VPN peer
	Name string `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags []string `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets []string `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp string `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId string `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret string `pulumi:"secret"`
}

// GetApplianceVpnThirdPartyVpnpeersItemPeerInput is an input type that accepts GetApplianceVpnThirdPartyVpnpeersItemPeerArgs and GetApplianceVpnThirdPartyVpnpeersItemPeerOutput values.
// You can construct a concrete instance of `GetApplianceVpnThirdPartyVpnpeersItemPeerInput` via:
//
//	GetApplianceVpnThirdPartyVpnpeersItemPeerArgs{...}
type GetApplianceVpnThirdPartyVpnpeersItemPeerInput interface {
	pulumi.Input

	ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerOutput
	ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutputWithContext(context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerOutput
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerArgs struct {
	// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
	IpsecPolicies GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesInput `pulumi:"ipsecPolicies"`
	// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
	IpsecPoliciesPreset pulumi.StringInput `pulumi:"ipsecPoliciesPreset"`
	// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The name of the VPN peer
	Name pulumi.StringInput `pulumi:"name"`
	// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// The list of the private subnets of the VPN peer
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	// [optional] The public IP of the VPN peer
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	// The shared secret with the VPN peer
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetApplianceVpnThirdPartyVpnpeersItemPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeer)(nil)).Elem()
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerArgs) ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerOutput {
	return i.ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutputWithContext(context.Background())
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerArgs) ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnThirdPartyVpnpeersItemPeerOutput)
}

// GetApplianceVpnThirdPartyVpnpeersItemPeerArrayInput is an input type that accepts GetApplianceVpnThirdPartyVpnpeersItemPeerArray and GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput values.
// You can construct a concrete instance of `GetApplianceVpnThirdPartyVpnpeersItemPeerArrayInput` via:
//
//	GetApplianceVpnThirdPartyVpnpeersItemPeerArray{ GetApplianceVpnThirdPartyVpnpeersItemPeerArgs{...} }
type GetApplianceVpnThirdPartyVpnpeersItemPeerArrayInput interface {
	pulumi.Input

	ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput
	ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutputWithContext(context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerArray []GetApplianceVpnThirdPartyVpnpeersItemPeerInput

func (GetApplianceVpnThirdPartyVpnpeersItemPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceVpnThirdPartyVpnpeersItemPeer)(nil)).Elem()
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerArray) ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput {
	return i.ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutputWithContext(context.Background())
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerArray) ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeer)(nil)).Elem()
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerOutput {
	return o
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerOutput {
	return o
}

// [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) IpsecPolicies() GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies {
		return v.IpsecPolicies
	}).(GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput)
}

// One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) IpsecPoliciesPreset() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.IpsecPoliciesPreset }).(pulumi.StringOutput)
}

// [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.LocalId }).(pulumi.StringOutput)
}

// The name of the VPN peer
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.Name }).(pulumi.StringOutput)
}

// A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// The list of the private subnets of the VPN peer
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

// [optional] The public IP of the VPN peer
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.PublicIp }).(pulumi.StringOutput)
}

// [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.RemoteId }).(pulumi.StringOutput)
}

// The shared secret with the VPN peer
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeer) string { return v.Secret }).(pulumi.StringOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceVpnThirdPartyVpnpeersItemPeer)(nil)).Elem()
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput {
	return o
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput {
	return o
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput) Index(i pulumi.IntInput) GetApplianceVpnThirdPartyVpnpeersItemPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceVpnThirdPartyVpnpeersItemPeer {
		return vs[0].([]GetApplianceVpnThirdPartyVpnpeersItemPeer)[vs[1].(int)]
	}).(GetApplianceVpnThirdPartyVpnpeersItemPeerOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos []string `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos []string `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime int `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups []string `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos []string `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos []string `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups []string `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime int `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos []string `pulumi:"ikePrfAlgos"`
}

// GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesInput is an input type that accepts GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs and GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput values.
// You can construct a concrete instance of `GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesInput` via:
//
//	GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs{...}
type GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesInput interface {
	pulumi.Input

	ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput
	ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutputWithContext(context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs struct {
	// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	ChildAuthAlgos pulumi.StringArrayInput `pulumi:"childAuthAlgos"`
	// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
	ChildCipherAlgos pulumi.StringArrayInput `pulumi:"childCipherAlgos"`
	// The lifetime of the Phase 2 SA in seconds.
	ChildLifetime pulumi.IntInput `pulumi:"childLifetime"`
	// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
	ChildPfsGroups pulumi.StringArrayInput `pulumi:"childPfsGroups"`
	// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
	IkeAuthAlgos pulumi.StringArrayInput `pulumi:"ikeAuthAlgos"`
	// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
	IkeCipherAlgos pulumi.StringArrayInput `pulumi:"ikeCipherAlgos"`
	// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
	IkeDiffieHellmanGroups pulumi.StringArrayInput `pulumi:"ikeDiffieHellmanGroups"`
	// The lifetime of the Phase 1 SA in seconds.
	IkeLifetime pulumi.IntInput `pulumi:"ikeLifetime"`
	// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
	IkePrfAlgos pulumi.StringArrayInput `pulumi:"ikePrfAlgos"`
}

func (GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies)(nil)).Elem()
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs) ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput {
	return i.ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutputWithContext(context.Background())
}

func (i GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs) ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput)
}

type GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies)(nil)).Elem()
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput() GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput {
	return o
}

func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ToGetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutputWithContext(ctx context.Context) GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput {
	return o
}

// This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ChildAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.ChildAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ChildCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.ChildCipherAlgos }).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 2 SA in seconds.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ChildLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) int { return v.ChildLifetime }).(pulumi.IntOutput)
}

// This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) ChildPfsGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.ChildPfsGroups }).(pulumi.StringArrayOutput)
}

// This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) IkeAuthAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.IkeAuthAlgos }).(pulumi.StringArrayOutput)
}

// This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) IkeCipherAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.IkeCipherAlgos }).(pulumi.StringArrayOutput)
}

// This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) IkeDiffieHellmanGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string {
		return v.IkeDiffieHellmanGroups
	}).(pulumi.StringArrayOutput)
}

// The lifetime of the Phase 1 SA in seconds.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) IkeLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) int { return v.IkeLifetime }).(pulumi.IntOutput)
}

// [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
func (o GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput) IkePrfAlgos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPolicies) []string { return v.IkePrfAlgos }).(pulumi.StringArrayOutput)
}

type GetApplianceVpnVpnFirewallRulesItem struct {
	// An ordered array of the firewall rules (not including the default rule)
	Rules []GetApplianceVpnVpnFirewallRulesItemRule `pulumi:"rules"`
}

// GetApplianceVpnVpnFirewallRulesItemInput is an input type that accepts GetApplianceVpnVpnFirewallRulesItemArgs and GetApplianceVpnVpnFirewallRulesItemOutput values.
// You can construct a concrete instance of `GetApplianceVpnVpnFirewallRulesItemInput` via:
//
//	GetApplianceVpnVpnFirewallRulesItemArgs{...}
type GetApplianceVpnVpnFirewallRulesItemInput interface {
	pulumi.Input

	ToGetApplianceVpnVpnFirewallRulesItemOutput() GetApplianceVpnVpnFirewallRulesItemOutput
	ToGetApplianceVpnVpnFirewallRulesItemOutputWithContext(context.Context) GetApplianceVpnVpnFirewallRulesItemOutput
}

type GetApplianceVpnVpnFirewallRulesItemArgs struct {
	// An ordered array of the firewall rules (not including the default rule)
	Rules GetApplianceVpnVpnFirewallRulesItemRuleArrayInput `pulumi:"rules"`
}

func (GetApplianceVpnVpnFirewallRulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItem)(nil)).Elem()
}

func (i GetApplianceVpnVpnFirewallRulesItemArgs) ToGetApplianceVpnVpnFirewallRulesItemOutput() GetApplianceVpnVpnFirewallRulesItemOutput {
	return i.ToGetApplianceVpnVpnFirewallRulesItemOutputWithContext(context.Background())
}

func (i GetApplianceVpnVpnFirewallRulesItemArgs) ToGetApplianceVpnVpnFirewallRulesItemOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnVpnFirewallRulesItemOutput)
}

type GetApplianceVpnVpnFirewallRulesItemOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnVpnFirewallRulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItem)(nil)).Elem()
}

func (o GetApplianceVpnVpnFirewallRulesItemOutput) ToGetApplianceVpnVpnFirewallRulesItemOutput() GetApplianceVpnVpnFirewallRulesItemOutput {
	return o
}

func (o GetApplianceVpnVpnFirewallRulesItemOutput) ToGetApplianceVpnVpnFirewallRulesItemOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemOutput {
	return o
}

// An ordered array of the firewall rules (not including the default rule)
func (o GetApplianceVpnVpnFirewallRulesItemOutput) Rules() GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItem) []GetApplianceVpnVpnFirewallRulesItemRule { return v.Rules }).(GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput)
}

type GetApplianceVpnVpnFirewallRulesItemRule struct {
	// Description of the rule (optional)
	Comment string `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr string `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort string `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy string `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol string `pulumi:"protocol"`
	// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
	SrcCidr string `pulumi:"srcCidr"`
	// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
	SrcPort string `pulumi:"srcPort"`
	// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
	SyslogEnabled bool `pulumi:"syslogEnabled"`
}

// GetApplianceVpnVpnFirewallRulesItemRuleInput is an input type that accepts GetApplianceVpnVpnFirewallRulesItemRuleArgs and GetApplianceVpnVpnFirewallRulesItemRuleOutput values.
// You can construct a concrete instance of `GetApplianceVpnVpnFirewallRulesItemRuleInput` via:
//
//	GetApplianceVpnVpnFirewallRulesItemRuleArgs{...}
type GetApplianceVpnVpnFirewallRulesItemRuleInput interface {
	pulumi.Input

	ToGetApplianceVpnVpnFirewallRulesItemRuleOutput() GetApplianceVpnVpnFirewallRulesItemRuleOutput
	ToGetApplianceVpnVpnFirewallRulesItemRuleOutputWithContext(context.Context) GetApplianceVpnVpnFirewallRulesItemRuleOutput
}

type GetApplianceVpnVpnFirewallRulesItemRuleArgs struct {
	// Description of the rule (optional)
	Comment pulumi.StringInput `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr pulumi.StringInput `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy pulumi.StringInput `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
	SrcCidr pulumi.StringInput `pulumi:"srcCidr"`
	// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
	SrcPort pulumi.StringInput `pulumi:"srcPort"`
	// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
	SyslogEnabled pulumi.BoolInput `pulumi:"syslogEnabled"`
}

func (GetApplianceVpnVpnFirewallRulesItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItemRule)(nil)).Elem()
}

func (i GetApplianceVpnVpnFirewallRulesItemRuleArgs) ToGetApplianceVpnVpnFirewallRulesItemRuleOutput() GetApplianceVpnVpnFirewallRulesItemRuleOutput {
	return i.ToGetApplianceVpnVpnFirewallRulesItemRuleOutputWithContext(context.Background())
}

func (i GetApplianceVpnVpnFirewallRulesItemRuleArgs) ToGetApplianceVpnVpnFirewallRulesItemRuleOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnVpnFirewallRulesItemRuleOutput)
}

// GetApplianceVpnVpnFirewallRulesItemRuleArrayInput is an input type that accepts GetApplianceVpnVpnFirewallRulesItemRuleArray and GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput values.
// You can construct a concrete instance of `GetApplianceVpnVpnFirewallRulesItemRuleArrayInput` via:
//
//	GetApplianceVpnVpnFirewallRulesItemRuleArray{ GetApplianceVpnVpnFirewallRulesItemRuleArgs{...} }
type GetApplianceVpnVpnFirewallRulesItemRuleArrayInput interface {
	pulumi.Input

	ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutput() GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput
	ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutputWithContext(context.Context) GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput
}

type GetApplianceVpnVpnFirewallRulesItemRuleArray []GetApplianceVpnVpnFirewallRulesItemRuleInput

func (GetApplianceVpnVpnFirewallRulesItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceVpnVpnFirewallRulesItemRule)(nil)).Elem()
}

func (i GetApplianceVpnVpnFirewallRulesItemRuleArray) ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutput() GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput {
	return i.ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutputWithContext(context.Background())
}

func (i GetApplianceVpnVpnFirewallRulesItemRuleArray) ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput)
}

type GetApplianceVpnVpnFirewallRulesItemRuleOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnVpnFirewallRulesItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItemRule)(nil)).Elem()
}

func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) ToGetApplianceVpnVpnFirewallRulesItemRuleOutput() GetApplianceVpnVpnFirewallRulesItemRuleOutput {
	return o
}

func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) ToGetApplianceVpnVpnFirewallRulesItemRuleOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemRuleOutput {
	return o
}

// Description of the rule (optional)
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.Comment }).(pulumi.StringOutput)
}

// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) DestCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.DestCidr }).(pulumi.StringOutput)
}

// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.DestPort }).(pulumi.StringOutput)
}

// 'allow' or 'deny' traffic specified by this rule
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) SrcCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.SrcCidr }).(pulumi.StringOutput)
}

// Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) string { return v.SrcPort }).(pulumi.StringOutput)
}

// Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
func (o GetApplianceVpnVpnFirewallRulesItemRuleOutput) SyslogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceVpnVpnFirewallRulesItemRule) bool { return v.SyslogEnabled }).(pulumi.BoolOutput)
}

type GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplianceVpnVpnFirewallRulesItemRule)(nil)).Elem()
}

func (o GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput) ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutput() GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput) ToGetApplianceVpnVpnFirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput) Index(i pulumi.IntInput) GetApplianceVpnVpnFirewallRulesItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplianceVpnVpnFirewallRulesItemRule {
		return vs[0].([]GetApplianceVpnVpnFirewallRulesItemRule)[vs[1].(int)]
	}).(GetApplianceVpnVpnFirewallRulesItemRuleOutput)
}

type GetBrandingPoliciesItem struct {
	// Settings for describing which kinds of admins this policy applies to.
	AdminSettings GetBrandingPoliciesItemAdminSettings `pulumi:"adminSettings"`
	// Properties describing the custom logo attached to the branding policy.
	CustomLogo GetBrandingPoliciesItemCustomLogo `pulumi:"customLogo"`
	// Boolean indicating whether this policy is enabled.
	Enabled bool `pulumi:"enabled"`
	// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
	//   'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
	//   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
	//   Dashboard; see the documentation for each property to see the allowed values.
	HelpSettings GetBrandingPoliciesItemHelpSettings `pulumi:"helpSettings"`
	// Name of the Dashboard branding policy.
	Name string `pulumi:"name"`
}

// GetBrandingPoliciesItemInput is an input type that accepts GetBrandingPoliciesItemArgs and GetBrandingPoliciesItemOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemInput` via:
//
//	GetBrandingPoliciesItemArgs{...}
type GetBrandingPoliciesItemInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemOutput() GetBrandingPoliciesItemOutput
	ToGetBrandingPoliciesItemOutputWithContext(context.Context) GetBrandingPoliciesItemOutput
}

type GetBrandingPoliciesItemArgs struct {
	// Settings for describing which kinds of admins this policy applies to.
	AdminSettings GetBrandingPoliciesItemAdminSettingsInput `pulumi:"adminSettings"`
	// Properties describing the custom logo attached to the branding policy.
	CustomLogo GetBrandingPoliciesItemCustomLogoInput `pulumi:"customLogo"`
	// Boolean indicating whether this policy is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
	//   'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
	//   the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
	//   Dashboard; see the documentation for each property to see the allowed values.
	HelpSettings GetBrandingPoliciesItemHelpSettingsInput `pulumi:"helpSettings"`
	// Name of the Dashboard branding policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBrandingPoliciesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItem)(nil)).Elem()
}

func (i GetBrandingPoliciesItemArgs) ToGetBrandingPoliciesItemOutput() GetBrandingPoliciesItemOutput {
	return i.ToGetBrandingPoliciesItemOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemArgs) ToGetBrandingPoliciesItemOutputWithContext(ctx context.Context) GetBrandingPoliciesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemOutput)
}

// GetBrandingPoliciesItemArrayInput is an input type that accepts GetBrandingPoliciesItemArray and GetBrandingPoliciesItemArrayOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemArrayInput` via:
//
//	GetBrandingPoliciesItemArray{ GetBrandingPoliciesItemArgs{...} }
type GetBrandingPoliciesItemArrayInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemArrayOutput() GetBrandingPoliciesItemArrayOutput
	ToGetBrandingPoliciesItemArrayOutputWithContext(context.Context) GetBrandingPoliciesItemArrayOutput
}

type GetBrandingPoliciesItemArray []GetBrandingPoliciesItemInput

func (GetBrandingPoliciesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingPoliciesItem)(nil)).Elem()
}

func (i GetBrandingPoliciesItemArray) ToGetBrandingPoliciesItemArrayOutput() GetBrandingPoliciesItemArrayOutput {
	return i.ToGetBrandingPoliciesItemArrayOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemArray) ToGetBrandingPoliciesItemArrayOutputWithContext(ctx context.Context) GetBrandingPoliciesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemArrayOutput)
}

type GetBrandingPoliciesItemOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItem)(nil)).Elem()
}

func (o GetBrandingPoliciesItemOutput) ToGetBrandingPoliciesItemOutput() GetBrandingPoliciesItemOutput {
	return o
}

func (o GetBrandingPoliciesItemOutput) ToGetBrandingPoliciesItemOutputWithContext(ctx context.Context) GetBrandingPoliciesItemOutput {
	return o
}

// Settings for describing which kinds of admins this policy applies to.
func (o GetBrandingPoliciesItemOutput) AdminSettings() GetBrandingPoliciesItemAdminSettingsOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItem) GetBrandingPoliciesItemAdminSettings { return v.AdminSettings }).(GetBrandingPoliciesItemAdminSettingsOutput)
}

// Properties describing the custom logo attached to the branding policy.
func (o GetBrandingPoliciesItemOutput) CustomLogo() GetBrandingPoliciesItemCustomLogoOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItem) GetBrandingPoliciesItemCustomLogo { return v.CustomLogo }).(GetBrandingPoliciesItemCustomLogoOutput)
}

// Boolean indicating whether this policy is enabled.
func (o GetBrandingPoliciesItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Settings for describing the modifications to various Help page features. Each property in this object accepts one of
//
//	'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
//	the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
//	Dashboard; see the documentation for each property to see the allowed values.
func (o GetBrandingPoliciesItemOutput) HelpSettings() GetBrandingPoliciesItemHelpSettingsOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItem) GetBrandingPoliciesItemHelpSettings { return v.HelpSettings }).(GetBrandingPoliciesItemHelpSettingsOutput)
}

// Name of the Dashboard branding policy.
func (o GetBrandingPoliciesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetBrandingPoliciesItemArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingPoliciesItem)(nil)).Elem()
}

func (o GetBrandingPoliciesItemArrayOutput) ToGetBrandingPoliciesItemArrayOutput() GetBrandingPoliciesItemArrayOutput {
	return o
}

func (o GetBrandingPoliciesItemArrayOutput) ToGetBrandingPoliciesItemArrayOutputWithContext(ctx context.Context) GetBrandingPoliciesItemArrayOutput {
	return o
}

func (o GetBrandingPoliciesItemArrayOutput) Index(i pulumi.IntInput) GetBrandingPoliciesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingPoliciesItem {
		return vs[0].([]GetBrandingPoliciesItem)[vs[1].(int)]
	}).(GetBrandingPoliciesItemOutput)
}

type GetBrandingPoliciesItemAdminSettings struct {
	// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
	AppliesTo string `pulumi:"appliesTo"`
	// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
	//   entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
	//   networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
	//   specify an array of tag names.
	Values []string `pulumi:"values"`
}

// GetBrandingPoliciesItemAdminSettingsInput is an input type that accepts GetBrandingPoliciesItemAdminSettingsArgs and GetBrandingPoliciesItemAdminSettingsOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemAdminSettingsInput` via:
//
//	GetBrandingPoliciesItemAdminSettingsArgs{...}
type GetBrandingPoliciesItemAdminSettingsInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemAdminSettingsOutput() GetBrandingPoliciesItemAdminSettingsOutput
	ToGetBrandingPoliciesItemAdminSettingsOutputWithContext(context.Context) GetBrandingPoliciesItemAdminSettingsOutput
}

type GetBrandingPoliciesItemAdminSettingsArgs struct {
	// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
	AppliesTo pulumi.StringInput `pulumi:"appliesTo"`
	// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
	//   entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
	//   networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
	//   specify an array of tag names.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBrandingPoliciesItemAdminSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemAdminSettings)(nil)).Elem()
}

func (i GetBrandingPoliciesItemAdminSettingsArgs) ToGetBrandingPoliciesItemAdminSettingsOutput() GetBrandingPoliciesItemAdminSettingsOutput {
	return i.ToGetBrandingPoliciesItemAdminSettingsOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemAdminSettingsArgs) ToGetBrandingPoliciesItemAdminSettingsOutputWithContext(ctx context.Context) GetBrandingPoliciesItemAdminSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemAdminSettingsOutput)
}

type GetBrandingPoliciesItemAdminSettingsOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemAdminSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemAdminSettings)(nil)).Elem()
}

func (o GetBrandingPoliciesItemAdminSettingsOutput) ToGetBrandingPoliciesItemAdminSettingsOutput() GetBrandingPoliciesItemAdminSettingsOutput {
	return o
}

func (o GetBrandingPoliciesItemAdminSettingsOutput) ToGetBrandingPoliciesItemAdminSettingsOutputWithContext(ctx context.Context) GetBrandingPoliciesItemAdminSettingsOutput {
	return o
}

// Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
func (o GetBrandingPoliciesItemAdminSettingsOutput) AppliesTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemAdminSettings) string { return v.AppliesTo }).(pulumi.StringOutput)
}

// If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
//
//	entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
//	networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
//	specify an array of tag names.
func (o GetBrandingPoliciesItemAdminSettingsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemAdminSettings) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBrandingPoliciesItemCustomLogo struct {
	// Whether or not there is a custom logo enabled.
	Enabled bool `pulumi:"enabled"`
	// Properties of the image.
	Image GetBrandingPoliciesItemCustomLogoImage `pulumi:"image"`
}

// GetBrandingPoliciesItemCustomLogoInput is an input type that accepts GetBrandingPoliciesItemCustomLogoArgs and GetBrandingPoliciesItemCustomLogoOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemCustomLogoInput` via:
//
//	GetBrandingPoliciesItemCustomLogoArgs{...}
type GetBrandingPoliciesItemCustomLogoInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemCustomLogoOutput() GetBrandingPoliciesItemCustomLogoOutput
	ToGetBrandingPoliciesItemCustomLogoOutputWithContext(context.Context) GetBrandingPoliciesItemCustomLogoOutput
}

type GetBrandingPoliciesItemCustomLogoArgs struct {
	// Whether or not there is a custom logo enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Properties of the image.
	Image GetBrandingPoliciesItemCustomLogoImageInput `pulumi:"image"`
}

func (GetBrandingPoliciesItemCustomLogoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogo)(nil)).Elem()
}

func (i GetBrandingPoliciesItemCustomLogoArgs) ToGetBrandingPoliciesItemCustomLogoOutput() GetBrandingPoliciesItemCustomLogoOutput {
	return i.ToGetBrandingPoliciesItemCustomLogoOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemCustomLogoArgs) ToGetBrandingPoliciesItemCustomLogoOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemCustomLogoOutput)
}

type GetBrandingPoliciesItemCustomLogoOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemCustomLogoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogo)(nil)).Elem()
}

func (o GetBrandingPoliciesItemCustomLogoOutput) ToGetBrandingPoliciesItemCustomLogoOutput() GetBrandingPoliciesItemCustomLogoOutput {
	return o
}

func (o GetBrandingPoliciesItemCustomLogoOutput) ToGetBrandingPoliciesItemCustomLogoOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoOutput {
	return o
}

// Whether or not there is a custom logo enabled.
func (o GetBrandingPoliciesItemCustomLogoOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemCustomLogo) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Properties of the image.
func (o GetBrandingPoliciesItemCustomLogoOutput) Image() GetBrandingPoliciesItemCustomLogoImageOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemCustomLogo) GetBrandingPoliciesItemCustomLogoImage { return v.Image }).(GetBrandingPoliciesItemCustomLogoImageOutput)
}

type GetBrandingPoliciesItemCustomLogoImage struct {
	// Preview of the image
	Preview GetBrandingPoliciesItemCustomLogoImagePreview `pulumi:"preview"`
}

// GetBrandingPoliciesItemCustomLogoImageInput is an input type that accepts GetBrandingPoliciesItemCustomLogoImageArgs and GetBrandingPoliciesItemCustomLogoImageOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemCustomLogoImageInput` via:
//
//	GetBrandingPoliciesItemCustomLogoImageArgs{...}
type GetBrandingPoliciesItemCustomLogoImageInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemCustomLogoImageOutput() GetBrandingPoliciesItemCustomLogoImageOutput
	ToGetBrandingPoliciesItemCustomLogoImageOutputWithContext(context.Context) GetBrandingPoliciesItemCustomLogoImageOutput
}

type GetBrandingPoliciesItemCustomLogoImageArgs struct {
	// Preview of the image
	Preview GetBrandingPoliciesItemCustomLogoImagePreviewInput `pulumi:"preview"`
}

func (GetBrandingPoliciesItemCustomLogoImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImage)(nil)).Elem()
}

func (i GetBrandingPoliciesItemCustomLogoImageArgs) ToGetBrandingPoliciesItemCustomLogoImageOutput() GetBrandingPoliciesItemCustomLogoImageOutput {
	return i.ToGetBrandingPoliciesItemCustomLogoImageOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemCustomLogoImageArgs) ToGetBrandingPoliciesItemCustomLogoImageOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemCustomLogoImageOutput)
}

type GetBrandingPoliciesItemCustomLogoImageOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemCustomLogoImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImage)(nil)).Elem()
}

func (o GetBrandingPoliciesItemCustomLogoImageOutput) ToGetBrandingPoliciesItemCustomLogoImageOutput() GetBrandingPoliciesItemCustomLogoImageOutput {
	return o
}

func (o GetBrandingPoliciesItemCustomLogoImageOutput) ToGetBrandingPoliciesItemCustomLogoImageOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoImageOutput {
	return o
}

// Preview of the image
func (o GetBrandingPoliciesItemCustomLogoImageOutput) Preview() GetBrandingPoliciesItemCustomLogoImagePreviewOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemCustomLogoImage) GetBrandingPoliciesItemCustomLogoImagePreview {
		return v.Preview
	}).(GetBrandingPoliciesItemCustomLogoImagePreviewOutput)
}

type GetBrandingPoliciesItemCustomLogoImagePreview struct {
	// Timestamp of the preview image
	ExpiresAt string `pulumi:"expiresAt"`
	// Url of the preview image
	Url string `pulumi:"url"`
}

// GetBrandingPoliciesItemCustomLogoImagePreviewInput is an input type that accepts GetBrandingPoliciesItemCustomLogoImagePreviewArgs and GetBrandingPoliciesItemCustomLogoImagePreviewOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemCustomLogoImagePreviewInput` via:
//
//	GetBrandingPoliciesItemCustomLogoImagePreviewArgs{...}
type GetBrandingPoliciesItemCustomLogoImagePreviewInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemCustomLogoImagePreviewOutput() GetBrandingPoliciesItemCustomLogoImagePreviewOutput
	ToGetBrandingPoliciesItemCustomLogoImagePreviewOutputWithContext(context.Context) GetBrandingPoliciesItemCustomLogoImagePreviewOutput
}

type GetBrandingPoliciesItemCustomLogoImagePreviewArgs struct {
	// Timestamp of the preview image
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Url of the preview image
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetBrandingPoliciesItemCustomLogoImagePreviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImagePreview)(nil)).Elem()
}

func (i GetBrandingPoliciesItemCustomLogoImagePreviewArgs) ToGetBrandingPoliciesItemCustomLogoImagePreviewOutput() GetBrandingPoliciesItemCustomLogoImagePreviewOutput {
	return i.ToGetBrandingPoliciesItemCustomLogoImagePreviewOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemCustomLogoImagePreviewArgs) ToGetBrandingPoliciesItemCustomLogoImagePreviewOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoImagePreviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemCustomLogoImagePreviewOutput)
}

type GetBrandingPoliciesItemCustomLogoImagePreviewOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemCustomLogoImagePreviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImagePreview)(nil)).Elem()
}

func (o GetBrandingPoliciesItemCustomLogoImagePreviewOutput) ToGetBrandingPoliciesItemCustomLogoImagePreviewOutput() GetBrandingPoliciesItemCustomLogoImagePreviewOutput {
	return o
}

func (o GetBrandingPoliciesItemCustomLogoImagePreviewOutput) ToGetBrandingPoliciesItemCustomLogoImagePreviewOutputWithContext(ctx context.Context) GetBrandingPoliciesItemCustomLogoImagePreviewOutput {
	return o
}

// Timestamp of the preview image
func (o GetBrandingPoliciesItemCustomLogoImagePreviewOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemCustomLogoImagePreview) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Url of the preview image
func (o GetBrandingPoliciesItemCustomLogoImagePreviewOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemCustomLogoImagePreview) string { return v.Url }).(pulumi.StringOutput)
}

type GetBrandingPoliciesItemHelpSettings struct {
	// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	ApiDocsSubtab string `pulumi:"apiDocsSubtab"`
	// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
	//   of 'default or inherit', 'hide' or 'show'.
	CasesSubtab string `pulumi:"casesSubtab"`
	// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	CiscoMerakiProductDocumentation string `pulumi:"ciscoMerakiProductDocumentation"`
	// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
	CommunitySubtab string `pulumi:"communitySubtab"`
	// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
	//   be audited. Can be one of 'default or inherit', 'hide' or 'show'.
	DataProtectionRequestsSubtab string `pulumi:"dataProtectionRequestsSubtab"`
	// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
	//   listed. Can be one of 'default or inherit', 'hide' or 'show'.
	FirewallInfoSubtab string `pulumi:"firewallInfoSubtab"`
	// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
	//   that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
	//   and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	GetHelpSubtab string `pulumi:"getHelpSubtab"`
	// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	GetHelpSubtabKnowledgeBaseSearch string `pulumi:"getHelpSubtabKnowledgeBaseSearch"`
	// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	HardwareReplacementsSubtab string `pulumi:"hardwareReplacementsSubtab"`
	// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
	//   customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpTab string `pulumi:"helpTab"`
	// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
	//   and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpWidget string `pulumi:"helpWidget"`
	// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
	NewFeaturesSubtab string `pulumi:"newFeaturesSubtab"`
	// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
	//   organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
	SmForums string `pulumi:"smForums"`
	// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	SupportContactInfo string `pulumi:"supportContactInfo"`
	// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
	//   whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
	UniversalSearchKnowledgeBaseSearch string `pulumi:"universalSearchKnowledgeBaseSearch"`
}

// GetBrandingPoliciesItemHelpSettingsInput is an input type that accepts GetBrandingPoliciesItemHelpSettingsArgs and GetBrandingPoliciesItemHelpSettingsOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesItemHelpSettingsInput` via:
//
//	GetBrandingPoliciesItemHelpSettingsArgs{...}
type GetBrandingPoliciesItemHelpSettingsInput interface {
	pulumi.Input

	ToGetBrandingPoliciesItemHelpSettingsOutput() GetBrandingPoliciesItemHelpSettingsOutput
	ToGetBrandingPoliciesItemHelpSettingsOutputWithContext(context.Context) GetBrandingPoliciesItemHelpSettingsOutput
}

type GetBrandingPoliciesItemHelpSettingsArgs struct {
	// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	ApiDocsSubtab pulumi.StringInput `pulumi:"apiDocsSubtab"`
	// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
	//   of 'default or inherit', 'hide' or 'show'.
	CasesSubtab pulumi.StringInput `pulumi:"casesSubtab"`
	// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	CiscoMerakiProductDocumentation pulumi.StringInput `pulumi:"ciscoMerakiProductDocumentation"`
	// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
	CommunitySubtab pulumi.StringInput `pulumi:"communitySubtab"`
	// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
	//   be audited. Can be one of 'default or inherit', 'hide' or 'show'.
	DataProtectionRequestsSubtab pulumi.StringInput `pulumi:"dataProtectionRequestsSubtab"`
	// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
	//   listed. Can be one of 'default or inherit', 'hide' or 'show'.
	FirewallInfoSubtab pulumi.StringInput `pulumi:"firewallInfoSubtab"`
	// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
	//   that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
	//   and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	GetHelpSubtab pulumi.StringInput `pulumi:"getHelpSubtab"`
	// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	GetHelpSubtabKnowledgeBaseSearch pulumi.StringInput `pulumi:"getHelpSubtabKnowledgeBaseSearch"`
	// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
	//   'default or inherit', 'hide' or 'show'.
	HardwareReplacementsSubtab pulumi.StringInput `pulumi:"hardwareReplacementsSubtab"`
	// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
	//   customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpTab pulumi.StringInput `pulumi:"helpTab"`
	// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
	//   and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
	HelpWidget pulumi.StringInput `pulumi:"helpWidget"`
	// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
	NewFeaturesSubtab pulumi.StringInput `pulumi:"newFeaturesSubtab"`
	// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
	//   organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
	SmForums pulumi.StringInput `pulumi:"smForums"`
	// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
	SupportContactInfo pulumi.StringInput `pulumi:"supportContactInfo"`
	// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
	//   whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
	UniversalSearchKnowledgeBaseSearch pulumi.StringInput `pulumi:"universalSearchKnowledgeBaseSearch"`
}

func (GetBrandingPoliciesItemHelpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemHelpSettings)(nil)).Elem()
}

func (i GetBrandingPoliciesItemHelpSettingsArgs) ToGetBrandingPoliciesItemHelpSettingsOutput() GetBrandingPoliciesItemHelpSettingsOutput {
	return i.ToGetBrandingPoliciesItemHelpSettingsOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesItemHelpSettingsArgs) ToGetBrandingPoliciesItemHelpSettingsOutputWithContext(ctx context.Context) GetBrandingPoliciesItemHelpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesItemHelpSettingsOutput)
}

type GetBrandingPoliciesItemHelpSettingsOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesItemHelpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesItemHelpSettings)(nil)).Elem()
}

func (o GetBrandingPoliciesItemHelpSettingsOutput) ToGetBrandingPoliciesItemHelpSettingsOutput() GetBrandingPoliciesItemHelpSettingsOutput {
	return o
}

func (o GetBrandingPoliciesItemHelpSettingsOutput) ToGetBrandingPoliciesItemHelpSettingsOutputWithContext(ctx context.Context) GetBrandingPoliciesItemHelpSettingsOutput {
	return o
}

// The 'Help > API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) ApiDocsSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.ApiDocsSubtab }).(pulumi.StringOutput)
}

// The 'Help > Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
//
//	of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) CasesSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.CasesSubtab }).(pulumi.StringOutput)
}

// The 'Product Manuals' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o GetBrandingPoliciesItemHelpSettingsOutput) CiscoMerakiProductDocumentation() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.CiscoMerakiProductDocumentation }).(pulumi.StringOutput)
}

// The 'Help > Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) CommunitySubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.CommunitySubtab }).(pulumi.StringOutput)
}

// The 'Help > Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
//
//	be audited. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) DataProtectionRequestsSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.DataProtectionRequestsSubtab }).(pulumi.StringOutput)
}

// The 'Help > Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
//
//	listed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) FirewallInfoSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.FirewallInfoSubtab }).(pulumi.StringOutput)
}

// The 'Help > Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
//
//	that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
//	and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) GetHelpSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.GetHelpSubtab }).(pulumi.StringOutput)
}

// The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o GetBrandingPoliciesItemHelpSettingsOutput) GetHelpSubtabKnowledgeBaseSearch() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.GetHelpSubtabKnowledgeBaseSearch }).(pulumi.StringOutput)
}

// The 'Help > Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
//
//	'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) HardwareReplacementsSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.HardwareReplacementsSubtab }).(pulumi.StringOutput)
}

// The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
//
//	customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) HelpTab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.HelpTab }).(pulumi.StringOutput)
}

// The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
//
//	and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) HelpWidget() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.HelpWidget }).(pulumi.StringOutput)
}

// The 'Help > New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) NewFeaturesSubtab() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.NewFeaturesSubtab }).(pulumi.StringOutput)
}

// The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
//
//	organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) SmForums() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.SmForums }).(pulumi.StringOutput)
}

// The 'Contact Meraki Support' section of the 'Help > Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
func (o GetBrandingPoliciesItemHelpSettingsOutput) SupportContactInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.SupportContactInfo }).(pulumi.StringOutput)
}

// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
//
//	whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
func (o GetBrandingPoliciesItemHelpSettingsOutput) UniversalSearchKnowledgeBaseSearch() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingPoliciesItemHelpSettings) string { return v.UniversalSearchKnowledgeBaseSearch }).(pulumi.StringOutput)
}

type GetBrandingPoliciesPrioritiesItem struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds []string `pulumi:"brandingPolicyIds"`
}

// GetBrandingPoliciesPrioritiesItemInput is an input type that accepts GetBrandingPoliciesPrioritiesItemArgs and GetBrandingPoliciesPrioritiesItemOutput values.
// You can construct a concrete instance of `GetBrandingPoliciesPrioritiesItemInput` via:
//
//	GetBrandingPoliciesPrioritiesItemArgs{...}
type GetBrandingPoliciesPrioritiesItemInput interface {
	pulumi.Input

	ToGetBrandingPoliciesPrioritiesItemOutput() GetBrandingPoliciesPrioritiesItemOutput
	ToGetBrandingPoliciesPrioritiesItemOutputWithContext(context.Context) GetBrandingPoliciesPrioritiesItemOutput
}

type GetBrandingPoliciesPrioritiesItemArgs struct {
	// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
	BrandingPolicyIds pulumi.StringArrayInput `pulumi:"brandingPolicyIds"`
}

func (GetBrandingPoliciesPrioritiesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesPrioritiesItem)(nil)).Elem()
}

func (i GetBrandingPoliciesPrioritiesItemArgs) ToGetBrandingPoliciesPrioritiesItemOutput() GetBrandingPoliciesPrioritiesItemOutput {
	return i.ToGetBrandingPoliciesPrioritiesItemOutputWithContext(context.Background())
}

func (i GetBrandingPoliciesPrioritiesItemArgs) ToGetBrandingPoliciesPrioritiesItemOutputWithContext(ctx context.Context) GetBrandingPoliciesPrioritiesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingPoliciesPrioritiesItemOutput)
}

type GetBrandingPoliciesPrioritiesItemOutput struct{ *pulumi.OutputState }

func (GetBrandingPoliciesPrioritiesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingPoliciesPrioritiesItem)(nil)).Elem()
}

func (o GetBrandingPoliciesPrioritiesItemOutput) ToGetBrandingPoliciesPrioritiesItemOutput() GetBrandingPoliciesPrioritiesItemOutput {
	return o
}

func (o GetBrandingPoliciesPrioritiesItemOutput) ToGetBrandingPoliciesPrioritiesItemOutputWithContext(ctx context.Context) GetBrandingPoliciesPrioritiesItemOutput {
	return o
}

// An ordered list of branding policy IDs that determines the priority order of how to apply the policies
func (o GetBrandingPoliciesPrioritiesItemOutput) BrandingPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBrandingPoliciesPrioritiesItem) []string { return v.BrandingPolicyIds }).(pulumi.StringArrayOutput)
}

type GetCameraBoundariesAreasByDeviceItem struct {
	// Configured area boundaries of the camera
	Boundaries GetCameraBoundariesAreasByDeviceItemBoundaries `pulumi:"boundaries"`
	// The network id of the camera
	NetworkId string `pulumi:"networkId"`
	// The serial number of the camera
	Serial string `pulumi:"serial"`
}

// GetCameraBoundariesAreasByDeviceItemInput is an input type that accepts GetCameraBoundariesAreasByDeviceItemArgs and GetCameraBoundariesAreasByDeviceItemOutput values.
// You can construct a concrete instance of `GetCameraBoundariesAreasByDeviceItemInput` via:
//
//	GetCameraBoundariesAreasByDeviceItemArgs{...}
type GetCameraBoundariesAreasByDeviceItemInput interface {
	pulumi.Input

	ToGetCameraBoundariesAreasByDeviceItemOutput() GetCameraBoundariesAreasByDeviceItemOutput
	ToGetCameraBoundariesAreasByDeviceItemOutputWithContext(context.Context) GetCameraBoundariesAreasByDeviceItemOutput
}

type GetCameraBoundariesAreasByDeviceItemArgs struct {
	// Configured area boundaries of the camera
	Boundaries GetCameraBoundariesAreasByDeviceItemBoundariesInput `pulumi:"boundaries"`
	// The network id of the camera
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The serial number of the camera
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetCameraBoundariesAreasByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItem)(nil)).Elem()
}

func (i GetCameraBoundariesAreasByDeviceItemArgs) ToGetCameraBoundariesAreasByDeviceItemOutput() GetCameraBoundariesAreasByDeviceItemOutput {
	return i.ToGetCameraBoundariesAreasByDeviceItemOutputWithContext(context.Background())
}

func (i GetCameraBoundariesAreasByDeviceItemArgs) ToGetCameraBoundariesAreasByDeviceItemOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesAreasByDeviceItemOutput)
}

// GetCameraBoundariesAreasByDeviceItemArrayInput is an input type that accepts GetCameraBoundariesAreasByDeviceItemArray and GetCameraBoundariesAreasByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetCameraBoundariesAreasByDeviceItemArrayInput` via:
//
//	GetCameraBoundariesAreasByDeviceItemArray{ GetCameraBoundariesAreasByDeviceItemArgs{...} }
type GetCameraBoundariesAreasByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetCameraBoundariesAreasByDeviceItemArrayOutput() GetCameraBoundariesAreasByDeviceItemArrayOutput
	ToGetCameraBoundariesAreasByDeviceItemArrayOutputWithContext(context.Context) GetCameraBoundariesAreasByDeviceItemArrayOutput
}

type GetCameraBoundariesAreasByDeviceItemArray []GetCameraBoundariesAreasByDeviceItemInput

func (GetCameraBoundariesAreasByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesAreasByDeviceItem)(nil)).Elem()
}

func (i GetCameraBoundariesAreasByDeviceItemArray) ToGetCameraBoundariesAreasByDeviceItemArrayOutput() GetCameraBoundariesAreasByDeviceItemArrayOutput {
	return i.ToGetCameraBoundariesAreasByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetCameraBoundariesAreasByDeviceItemArray) ToGetCameraBoundariesAreasByDeviceItemArrayOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesAreasByDeviceItemArrayOutput)
}

type GetCameraBoundariesAreasByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesAreasByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItem)(nil)).Elem()
}

func (o GetCameraBoundariesAreasByDeviceItemOutput) ToGetCameraBoundariesAreasByDeviceItemOutput() GetCameraBoundariesAreasByDeviceItemOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemOutput) ToGetCameraBoundariesAreasByDeviceItemOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemOutput {
	return o
}

// Configured area boundaries of the camera
func (o GetCameraBoundariesAreasByDeviceItemOutput) Boundaries() GetCameraBoundariesAreasByDeviceItemBoundariesOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItem) GetCameraBoundariesAreasByDeviceItemBoundaries {
		return v.Boundaries
	}).(GetCameraBoundariesAreasByDeviceItemBoundariesOutput)
}

// The network id of the camera
func (o GetCameraBoundariesAreasByDeviceItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The serial number of the camera
func (o GetCameraBoundariesAreasByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetCameraBoundariesAreasByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesAreasByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesAreasByDeviceItem)(nil)).Elem()
}

func (o GetCameraBoundariesAreasByDeviceItemArrayOutput) ToGetCameraBoundariesAreasByDeviceItemArrayOutput() GetCameraBoundariesAreasByDeviceItemArrayOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemArrayOutput) ToGetCameraBoundariesAreasByDeviceItemArrayOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemArrayOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetCameraBoundariesAreasByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraBoundariesAreasByDeviceItem {
		return vs[0].([]GetCameraBoundariesAreasByDeviceItem)[vs[1].(int)]
	}).(GetCameraBoundariesAreasByDeviceItemOutput)
}

type GetCameraBoundariesAreasByDeviceItemBoundaries struct {
	// The area boundary id
	Id string `pulumi:"id"`
	// The area boundary name
	Name string `pulumi:"name"`
	// The area boundary type
	Type string `pulumi:"type"`
	// The area boundary vertices
	Vertices []GetCameraBoundariesAreasByDeviceItemBoundariesVertex `pulumi:"vertices"`
}

// GetCameraBoundariesAreasByDeviceItemBoundariesInput is an input type that accepts GetCameraBoundariesAreasByDeviceItemBoundariesArgs and GetCameraBoundariesAreasByDeviceItemBoundariesOutput values.
// You can construct a concrete instance of `GetCameraBoundariesAreasByDeviceItemBoundariesInput` via:
//
//	GetCameraBoundariesAreasByDeviceItemBoundariesArgs{...}
type GetCameraBoundariesAreasByDeviceItemBoundariesInput interface {
	pulumi.Input

	ToGetCameraBoundariesAreasByDeviceItemBoundariesOutput() GetCameraBoundariesAreasByDeviceItemBoundariesOutput
	ToGetCameraBoundariesAreasByDeviceItemBoundariesOutputWithContext(context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesOutput
}

type GetCameraBoundariesAreasByDeviceItemBoundariesArgs struct {
	// The area boundary id
	Id pulumi.StringInput `pulumi:"id"`
	// The area boundary name
	Name pulumi.StringInput `pulumi:"name"`
	// The area boundary type
	Type pulumi.StringInput `pulumi:"type"`
	// The area boundary vertices
	Vertices GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayInput `pulumi:"vertices"`
}

func (GetCameraBoundariesAreasByDeviceItemBoundariesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundaries)(nil)).Elem()
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesArgs) ToGetCameraBoundariesAreasByDeviceItemBoundariesOutput() GetCameraBoundariesAreasByDeviceItemBoundariesOutput {
	return i.ToGetCameraBoundariesAreasByDeviceItemBoundariesOutputWithContext(context.Background())
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesArgs) ToGetCameraBoundariesAreasByDeviceItemBoundariesOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesAreasByDeviceItemBoundariesOutput)
}

type GetCameraBoundariesAreasByDeviceItemBoundariesOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesAreasByDeviceItemBoundariesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundaries)(nil)).Elem()
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesOutput() GetCameraBoundariesAreasByDeviceItemBoundariesOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesOutput {
	return o
}

// The area boundary id
func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundaries) string { return v.Id }).(pulumi.StringOutput)
}

// The area boundary name
func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundaries) string { return v.Name }).(pulumi.StringOutput)
}

// The area boundary type
func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundaries) string { return v.Type }).(pulumi.StringOutput)
}

// The area boundary vertices
func (o GetCameraBoundariesAreasByDeviceItemBoundariesOutput) Vertices() GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundaries) []GetCameraBoundariesAreasByDeviceItemBoundariesVertex {
		return v.Vertices
	}).(GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput)
}

type GetCameraBoundariesAreasByDeviceItemBoundariesVertex struct {
	// The vertex x coordinate
	X float64 `pulumi:"x"`
	// The vertex y coordinate
	Y float64 `pulumi:"y"`
}

// GetCameraBoundariesAreasByDeviceItemBoundariesVertexInput is an input type that accepts GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs and GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput values.
// You can construct a concrete instance of `GetCameraBoundariesAreasByDeviceItemBoundariesVertexInput` via:
//
//	GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs{...}
type GetCameraBoundariesAreasByDeviceItemBoundariesVertexInput interface {
	pulumi.Input

	ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput
	ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutputWithContext(context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput
}

type GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs struct {
	// The vertex x coordinate
	X pulumi.Float64Input `pulumi:"x"`
	// The vertex y coordinate
	Y pulumi.Float64Input `pulumi:"y"`
}

func (GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput {
	return i.ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutputWithContext(context.Background())
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput)
}

// GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayInput is an input type that accepts GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray and GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput values.
// You can construct a concrete instance of `GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayInput` via:
//
//	GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray{ GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs{...} }
type GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayInput interface {
	pulumi.Input

	ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput
	ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutputWithContext(context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput
}

type GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray []GetCameraBoundariesAreasByDeviceItemBoundariesVertexInput

func (GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesAreasByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput {
	return i.ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutputWithContext(context.Background())
}

func (i GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput)
}

type GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput {
	return o
}

// The vertex x coordinate
func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundariesVertex) float64 { return v.X }).(pulumi.Float64Output)
}

// The vertex y coordinate
func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesAreasByDeviceItemBoundariesVertex) float64 { return v.Y }).(pulumi.Float64Output)
}

type GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesAreasByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput) ToGetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutputWithContext(ctx context.Context) GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput {
	return o
}

func (o GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput) Index(i pulumi.IntInput) GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraBoundariesAreasByDeviceItemBoundariesVertex {
		return vs[0].([]GetCameraBoundariesAreasByDeviceItemBoundariesVertex)[vs[1].(int)]
	}).(GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput)
}

type GetCameraBoundariesLinesByDeviceItem struct {
	// Configured line boundaries of the camera
	Boundaries GetCameraBoundariesLinesByDeviceItemBoundaries `pulumi:"boundaries"`
	// The network id of the camera
	NetworkId string `pulumi:"networkId"`
	// The serial number of the camera
	Serial string `pulumi:"serial"`
}

// GetCameraBoundariesLinesByDeviceItemInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemArgs and GetCameraBoundariesLinesByDeviceItemOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemArgs{...}
type GetCameraBoundariesLinesByDeviceItemInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemOutput() GetCameraBoundariesLinesByDeviceItemOutput
	ToGetCameraBoundariesLinesByDeviceItemOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemOutput
}

type GetCameraBoundariesLinesByDeviceItemArgs struct {
	// Configured line boundaries of the camera
	Boundaries GetCameraBoundariesLinesByDeviceItemBoundariesInput `pulumi:"boundaries"`
	// The network id of the camera
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The serial number of the camera
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetCameraBoundariesLinesByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItem)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemArgs) ToGetCameraBoundariesLinesByDeviceItemOutput() GetCameraBoundariesLinesByDeviceItemOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemArgs) ToGetCameraBoundariesLinesByDeviceItemOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemOutput)
}

// GetCameraBoundariesLinesByDeviceItemArrayInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemArray and GetCameraBoundariesLinesByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemArrayInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemArray{ GetCameraBoundariesLinesByDeviceItemArgs{...} }
type GetCameraBoundariesLinesByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemArrayOutput() GetCameraBoundariesLinesByDeviceItemArrayOutput
	ToGetCameraBoundariesLinesByDeviceItemArrayOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemArrayOutput
}

type GetCameraBoundariesLinesByDeviceItemArray []GetCameraBoundariesLinesByDeviceItemInput

func (GetCameraBoundariesLinesByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesLinesByDeviceItem)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemArray) ToGetCameraBoundariesLinesByDeviceItemArrayOutput() GetCameraBoundariesLinesByDeviceItemArrayOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemArray) ToGetCameraBoundariesLinesByDeviceItemArrayOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemArrayOutput)
}

type GetCameraBoundariesLinesByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItem)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemOutput) ToGetCameraBoundariesLinesByDeviceItemOutput() GetCameraBoundariesLinesByDeviceItemOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemOutput) ToGetCameraBoundariesLinesByDeviceItemOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemOutput {
	return o
}

// Configured line boundaries of the camera
func (o GetCameraBoundariesLinesByDeviceItemOutput) Boundaries() GetCameraBoundariesLinesByDeviceItemBoundariesOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItem) GetCameraBoundariesLinesByDeviceItemBoundaries {
		return v.Boundaries
	}).(GetCameraBoundariesLinesByDeviceItemBoundariesOutput)
}

// The network id of the camera
func (o GetCameraBoundariesLinesByDeviceItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The serial number of the camera
func (o GetCameraBoundariesLinesByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetCameraBoundariesLinesByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesLinesByDeviceItem)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemArrayOutput) ToGetCameraBoundariesLinesByDeviceItemArrayOutput() GetCameraBoundariesLinesByDeviceItemArrayOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemArrayOutput) ToGetCameraBoundariesLinesByDeviceItemArrayOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemArrayOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetCameraBoundariesLinesByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraBoundariesLinesByDeviceItem {
		return vs[0].([]GetCameraBoundariesLinesByDeviceItem)[vs[1].(int)]
	}).(GetCameraBoundariesLinesByDeviceItemOutput)
}

type GetCameraBoundariesLinesByDeviceItemBoundaries struct {
	// The line boundary crossing direction vertex
	DirectionVertex GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex `pulumi:"directionVertex"`
	// The line boundary id
	Id string `pulumi:"id"`
	// The line boundary name
	Name string `pulumi:"name"`
	// The line boundary type
	Type string `pulumi:"type"`
	// The line boundary vertices
	Vertices []GetCameraBoundariesLinesByDeviceItemBoundariesVertex `pulumi:"vertices"`
}

// GetCameraBoundariesLinesByDeviceItemBoundariesInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemBoundariesArgs and GetCameraBoundariesLinesByDeviceItemBoundariesOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemBoundariesInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemBoundariesArgs{...}
type GetCameraBoundariesLinesByDeviceItemBoundariesInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemBoundariesOutput() GetCameraBoundariesLinesByDeviceItemBoundariesOutput
	ToGetCameraBoundariesLinesByDeviceItemBoundariesOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesOutput
}

type GetCameraBoundariesLinesByDeviceItemBoundariesArgs struct {
	// The line boundary crossing direction vertex
	DirectionVertex GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexInput `pulumi:"directionVertex"`
	// The line boundary id
	Id pulumi.StringInput `pulumi:"id"`
	// The line boundary name
	Name pulumi.StringInput `pulumi:"name"`
	// The line boundary type
	Type pulumi.StringInput `pulumi:"type"`
	// The line boundary vertices
	Vertices GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayInput `pulumi:"vertices"`
}

func (GetCameraBoundariesLinesByDeviceItemBoundariesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundaries)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesOutput() GetCameraBoundariesLinesByDeviceItemBoundariesOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemBoundariesOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemBoundariesOutput)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemBoundariesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundaries)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesOutput() GetCameraBoundariesLinesByDeviceItemBoundariesOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesOutput {
	return o
}

// The line boundary crossing direction vertex
func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) DirectionVertex() GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundaries) GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex {
		return v.DirectionVertex
	}).(GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput)
}

// The line boundary id
func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundaries) string { return v.Id }).(pulumi.StringOutput)
}

// The line boundary name
func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundaries) string { return v.Name }).(pulumi.StringOutput)
}

// The line boundary type
func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundaries) string { return v.Type }).(pulumi.StringOutput)
}

// The line boundary vertices
func (o GetCameraBoundariesLinesByDeviceItemBoundariesOutput) Vertices() GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundaries) []GetCameraBoundariesLinesByDeviceItemBoundariesVertex {
		return v.Vertices
	}).(GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex struct {
	// The vertex x coordinate
	X float64 `pulumi:"x"`
	// The vertex y coordinate
	Y float64 `pulumi:"y"`
}

// GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs and GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs{...}
type GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput
	ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput
}

type GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs struct {
	// The vertex x coordinate
	X pulumi.Float64Input `pulumi:"x"`
	// The vertex y coordinate
	Y pulumi.Float64Input `pulumi:"y"`
}

func (GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput {
	return o
}

// The vertex x coordinate
func (o GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex) float64 { return v.X }).(pulumi.Float64Output)
}

// The vertex y coordinate
func (o GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertex) float64 { return v.Y }).(pulumi.Float64Output)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesVertex struct {
	// The vertex x coordinate
	X float64 `pulumi:"x"`
	// The vertex y coordinate
	Y float64 `pulumi:"y"`
}

// GetCameraBoundariesLinesByDeviceItemBoundariesVertexInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs and GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemBoundariesVertexInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs{...}
type GetCameraBoundariesLinesByDeviceItemBoundariesVertexInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput
	ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput
}

type GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs struct {
	// The vertex x coordinate
	X pulumi.Float64Input `pulumi:"x"`
	// The vertex y coordinate
	Y pulumi.Float64Input `pulumi:"y"`
}

func (GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput)
}

// GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayInput is an input type that accepts GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray and GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput values.
// You can construct a concrete instance of `GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayInput` via:
//
//	GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray{ GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs{...} }
type GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayInput interface {
	pulumi.Input

	ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput
	ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutputWithContext(context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput
}

type GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray []GetCameraBoundariesLinesByDeviceItemBoundariesVertexInput

func (GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesLinesByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput {
	return i.ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutputWithContext(context.Background())
}

func (i GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput {
	return o
}

// The vertex x coordinate
func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundariesVertex) float64 { return v.X }).(pulumi.Float64Output)
}

// The vertex y coordinate
func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraBoundariesLinesByDeviceItemBoundariesVertex) float64 { return v.Y }).(pulumi.Float64Output)
}

type GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput struct{ *pulumi.OutputState }

func (GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraBoundariesLinesByDeviceItemBoundariesVertex)(nil)).Elem()
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput() GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput) ToGetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutputWithContext(ctx context.Context) GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput {
	return o
}

func (o GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput) Index(i pulumi.IntInput) GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraBoundariesLinesByDeviceItemBoundariesVertex {
		return vs[0].([]GetCameraBoundariesLinesByDeviceItemBoundariesVertex)[vs[1].(int)]
	}).(GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput)
}

type GetCameraCustomAnalyticsArtifactsItem struct {
	// Custom analytics artifact ID
	ArtifactId string `pulumi:"artifactId"`
	// Custom analytics artifact name
	Name string `pulumi:"name"`
	// Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// Custom analytics artifact status
	Status GetCameraCustomAnalyticsArtifactsItemStatus `pulumi:"status"`
}

// GetCameraCustomAnalyticsArtifactsItemInput is an input type that accepts GetCameraCustomAnalyticsArtifactsItemArgs and GetCameraCustomAnalyticsArtifactsItemOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsArtifactsItemInput` via:
//
//	GetCameraCustomAnalyticsArtifactsItemArgs{...}
type GetCameraCustomAnalyticsArtifactsItemInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsArtifactsItemOutput() GetCameraCustomAnalyticsArtifactsItemOutput
	ToGetCameraCustomAnalyticsArtifactsItemOutputWithContext(context.Context) GetCameraCustomAnalyticsArtifactsItemOutput
}

type GetCameraCustomAnalyticsArtifactsItemArgs struct {
	// Custom analytics artifact ID
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Custom analytics artifact name
	Name pulumi.StringInput `pulumi:"name"`
	// Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Custom analytics artifact status
	Status GetCameraCustomAnalyticsArtifactsItemStatusInput `pulumi:"status"`
}

func (GetCameraCustomAnalyticsArtifactsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItem)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsArtifactsItemArgs) ToGetCameraCustomAnalyticsArtifactsItemOutput() GetCameraCustomAnalyticsArtifactsItemOutput {
	return i.ToGetCameraCustomAnalyticsArtifactsItemOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsArtifactsItemArgs) ToGetCameraCustomAnalyticsArtifactsItemOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsArtifactsItemOutput)
}

// GetCameraCustomAnalyticsArtifactsItemArrayInput is an input type that accepts GetCameraCustomAnalyticsArtifactsItemArray and GetCameraCustomAnalyticsArtifactsItemArrayOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsArtifactsItemArrayInput` via:
//
//	GetCameraCustomAnalyticsArtifactsItemArray{ GetCameraCustomAnalyticsArtifactsItemArgs{...} }
type GetCameraCustomAnalyticsArtifactsItemArrayInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsArtifactsItemArrayOutput() GetCameraCustomAnalyticsArtifactsItemArrayOutput
	ToGetCameraCustomAnalyticsArtifactsItemArrayOutputWithContext(context.Context) GetCameraCustomAnalyticsArtifactsItemArrayOutput
}

type GetCameraCustomAnalyticsArtifactsItemArray []GetCameraCustomAnalyticsArtifactsItemInput

func (GetCameraCustomAnalyticsArtifactsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraCustomAnalyticsArtifactsItem)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsArtifactsItemArray) ToGetCameraCustomAnalyticsArtifactsItemArrayOutput() GetCameraCustomAnalyticsArtifactsItemArrayOutput {
	return i.ToGetCameraCustomAnalyticsArtifactsItemArrayOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsArtifactsItemArray) ToGetCameraCustomAnalyticsArtifactsItemArrayOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsArtifactsItemArrayOutput)
}

type GetCameraCustomAnalyticsArtifactsItemOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsArtifactsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItem)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsArtifactsItemOutput) ToGetCameraCustomAnalyticsArtifactsItemOutput() GetCameraCustomAnalyticsArtifactsItemOutput {
	return o
}

func (o GetCameraCustomAnalyticsArtifactsItemOutput) ToGetCameraCustomAnalyticsArtifactsItemOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemOutput {
	return o
}

// Custom analytics artifact ID
func (o GetCameraCustomAnalyticsArtifactsItemOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItem) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Custom analytics artifact name
func (o GetCameraCustomAnalyticsArtifactsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Organization ID
func (o GetCameraCustomAnalyticsArtifactsItemOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItem) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Custom analytics artifact status
func (o GetCameraCustomAnalyticsArtifactsItemOutput) Status() GetCameraCustomAnalyticsArtifactsItemStatusOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItem) GetCameraCustomAnalyticsArtifactsItemStatus {
		return v.Status
	}).(GetCameraCustomAnalyticsArtifactsItemStatusOutput)
}

type GetCameraCustomAnalyticsArtifactsItemArrayOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsArtifactsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraCustomAnalyticsArtifactsItem)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsArtifactsItemArrayOutput) ToGetCameraCustomAnalyticsArtifactsItemArrayOutput() GetCameraCustomAnalyticsArtifactsItemArrayOutput {
	return o
}

func (o GetCameraCustomAnalyticsArtifactsItemArrayOutput) ToGetCameraCustomAnalyticsArtifactsItemArrayOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemArrayOutput {
	return o
}

func (o GetCameraCustomAnalyticsArtifactsItemArrayOutput) Index(i pulumi.IntInput) GetCameraCustomAnalyticsArtifactsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraCustomAnalyticsArtifactsItem {
		return vs[0].([]GetCameraCustomAnalyticsArtifactsItem)[vs[1].(int)]
	}).(GetCameraCustomAnalyticsArtifactsItemOutput)
}

type GetCameraCustomAnalyticsArtifactsItemStatus struct {
	// Status message
	Message string `pulumi:"message"`
	// Status type
	Type string `pulumi:"type"`
}

// GetCameraCustomAnalyticsArtifactsItemStatusInput is an input type that accepts GetCameraCustomAnalyticsArtifactsItemStatusArgs and GetCameraCustomAnalyticsArtifactsItemStatusOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsArtifactsItemStatusInput` via:
//
//	GetCameraCustomAnalyticsArtifactsItemStatusArgs{...}
type GetCameraCustomAnalyticsArtifactsItemStatusInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsArtifactsItemStatusOutput() GetCameraCustomAnalyticsArtifactsItemStatusOutput
	ToGetCameraCustomAnalyticsArtifactsItemStatusOutputWithContext(context.Context) GetCameraCustomAnalyticsArtifactsItemStatusOutput
}

type GetCameraCustomAnalyticsArtifactsItemStatusArgs struct {
	// Status message
	Message pulumi.StringInput `pulumi:"message"`
	// Status type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCameraCustomAnalyticsArtifactsItemStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItemStatus)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsArtifactsItemStatusArgs) ToGetCameraCustomAnalyticsArtifactsItemStatusOutput() GetCameraCustomAnalyticsArtifactsItemStatusOutput {
	return i.ToGetCameraCustomAnalyticsArtifactsItemStatusOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsArtifactsItemStatusArgs) ToGetCameraCustomAnalyticsArtifactsItemStatusOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsArtifactsItemStatusOutput)
}

type GetCameraCustomAnalyticsArtifactsItemStatusOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsArtifactsItemStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItemStatus)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsArtifactsItemStatusOutput) ToGetCameraCustomAnalyticsArtifactsItemStatusOutput() GetCameraCustomAnalyticsArtifactsItemStatusOutput {
	return o
}

func (o GetCameraCustomAnalyticsArtifactsItemStatusOutput) ToGetCameraCustomAnalyticsArtifactsItemStatusOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsArtifactsItemStatusOutput {
	return o
}

// Status message
func (o GetCameraCustomAnalyticsArtifactsItemStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItemStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Status type
func (o GetCameraCustomAnalyticsArtifactsItemStatusOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsArtifactsItemStatus) string { return v.Type }).(pulumi.StringOutput)
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItem struct {
	// The boundary id
	BoundaryId string `pulumi:"boundaryId"`
	// The analytics data
	Results GetCameraDetectionsHistoryByBoundaryByIntervalItemResults `pulumi:"results"`
	// The boundary type
	Type string `pulumi:"type"`
}

// GetCameraDetectionsHistoryByBoundaryByIntervalItemInput is an input type that accepts GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs and GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput values.
// You can construct a concrete instance of `GetCameraDetectionsHistoryByBoundaryByIntervalItemInput` via:
//
//	GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs{...}
type GetCameraDetectionsHistoryByBoundaryByIntervalItemInput interface {
	pulumi.Input

	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput
	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutputWithContext(context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs struct {
	// The boundary id
	BoundaryId pulumi.StringInput `pulumi:"boundaryId"`
	// The analytics data
	Results GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsInput `pulumi:"results"`
	// The boundary type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItem)(nil)).Elem()
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput {
	return i.ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutputWithContext(context.Background())
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput)
}

// GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayInput is an input type that accepts GetCameraDetectionsHistoryByBoundaryByIntervalItemArray and GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput values.
// You can construct a concrete instance of `GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayInput` via:
//
//	GetCameraDetectionsHistoryByBoundaryByIntervalItemArray{ GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs{...} }
type GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayInput interface {
	pulumi.Input

	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput
	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutputWithContext(context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemArray []GetCameraDetectionsHistoryByBoundaryByIntervalItemInput

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraDetectionsHistoryByBoundaryByIntervalItem)(nil)).Elem()
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemArray) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput {
	return i.ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutputWithContext(context.Background())
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemArray) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput)
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput struct{ *pulumi.OutputState }

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItem)(nil)).Elem()
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput {
	return o
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput {
	return o
}

// The boundary id
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) BoundaryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItem) string { return v.BoundaryId }).(pulumi.StringOutput)
}

// The analytics data
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) Results() GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItem) GetCameraDetectionsHistoryByBoundaryByIntervalItemResults {
		return v.Results
	}).(GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput)
}

// The boundary type
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput struct{ *pulumi.OutputState }

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraDetectionsHistoryByBoundaryByIntervalItem)(nil)).Elem()
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput {
	return o
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput {
	return o
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput) Index(i pulumi.IntInput) GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraDetectionsHistoryByBoundaryByIntervalItem {
		return vs[0].([]GetCameraDetectionsHistoryByBoundaryByIntervalItem)[vs[1].(int)]
	}).(GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput)
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemResults struct {
	// The period end time
	EndTime string `pulumi:"endTime"`
	// The number of detections entered
	In int `pulumi:"in"`
	// The detection type
	ObjectType string `pulumi:"objectType"`
	// The number of detections exited
	Out int `pulumi:"out"`
	// The period start time
	StartTime string `pulumi:"startTime"`
}

// GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsInput is an input type that accepts GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs and GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput values.
// You can construct a concrete instance of `GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsInput` via:
//
//	GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs{...}
type GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsInput interface {
	pulumi.Input

	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput
	ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutputWithContext(context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs struct {
	// The period end time
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The number of detections entered
	In pulumi.IntInput `pulumi:"in"`
	// The detection type
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// The number of detections exited
	Out pulumi.IntInput `pulumi:"out"`
	// The period start time
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItemResults)(nil)).Elem()
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput {
	return i.ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutputWithContext(context.Background())
}

func (i GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput)
}

type GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput struct{ *pulumi.OutputState }

func (GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItemResults)(nil)).Elem()
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput() GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput {
	return o
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput {
	return o
}

// The period end time
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItemResults) string { return v.EndTime }).(pulumi.StringOutput)
}

// The number of detections entered
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) In() pulumi.IntOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItemResults) int { return v.In }).(pulumi.IntOutput)
}

// The detection type
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItemResults) string { return v.ObjectType }).(pulumi.StringOutput)
}

// The number of detections exited
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) Out() pulumi.IntOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItemResults) int { return v.Out }).(pulumi.IntOutput)
}

// The period start time
func (o GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalItemResults) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetCameraPermissionsItem struct {
	// Permission scope id
	Id string `pulumi:"id"`
	// Permission scope level
	Level string `pulumi:"level"`
	// Name of permission scope
	Name string `pulumi:"name"`
}

// GetCameraPermissionsItemInput is an input type that accepts GetCameraPermissionsItemArgs and GetCameraPermissionsItemOutput values.
// You can construct a concrete instance of `GetCameraPermissionsItemInput` via:
//
//	GetCameraPermissionsItemArgs{...}
type GetCameraPermissionsItemInput interface {
	pulumi.Input

	ToGetCameraPermissionsItemOutput() GetCameraPermissionsItemOutput
	ToGetCameraPermissionsItemOutputWithContext(context.Context) GetCameraPermissionsItemOutput
}

type GetCameraPermissionsItemArgs struct {
	// Permission scope id
	Id pulumi.StringInput `pulumi:"id"`
	// Permission scope level
	Level pulumi.StringInput `pulumi:"level"`
	// Name of permission scope
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCameraPermissionsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraPermissionsItem)(nil)).Elem()
}

func (i GetCameraPermissionsItemArgs) ToGetCameraPermissionsItemOutput() GetCameraPermissionsItemOutput {
	return i.ToGetCameraPermissionsItemOutputWithContext(context.Background())
}

func (i GetCameraPermissionsItemArgs) ToGetCameraPermissionsItemOutputWithContext(ctx context.Context) GetCameraPermissionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraPermissionsItemOutput)
}

type GetCameraPermissionsItemOutput struct{ *pulumi.OutputState }

func (GetCameraPermissionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraPermissionsItem)(nil)).Elem()
}

func (o GetCameraPermissionsItemOutput) ToGetCameraPermissionsItemOutput() GetCameraPermissionsItemOutput {
	return o
}

func (o GetCameraPermissionsItemOutput) ToGetCameraPermissionsItemOutputWithContext(ctx context.Context) GetCameraPermissionsItemOutput {
	return o
}

// Permission scope id
func (o GetCameraPermissionsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraPermissionsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Permission scope level
func (o GetCameraPermissionsItemOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraPermissionsItem) string { return v.Level }).(pulumi.StringOutput)
}

// Name of permission scope
func (o GetCameraPermissionsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraPermissionsItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetCameraRolesItem struct {
	AppliedOnDevices  []GetCameraRolesItemAppliedOnDevice  `pulumi:"appliedOnDevices"`
	AppliedOnNetworks []GetCameraRolesItemAppliedOnNetwork `pulumi:"appliedOnNetworks"`
	AppliedOrgWides   []GetCameraRolesItemAppliedOrgWide   `pulumi:"appliedOrgWides"`
	Name              string                               `pulumi:"name"`
}

// GetCameraRolesItemInput is an input type that accepts GetCameraRolesItemArgs and GetCameraRolesItemOutput values.
// You can construct a concrete instance of `GetCameraRolesItemInput` via:
//
//	GetCameraRolesItemArgs{...}
type GetCameraRolesItemInput interface {
	pulumi.Input

	ToGetCameraRolesItemOutput() GetCameraRolesItemOutput
	ToGetCameraRolesItemOutputWithContext(context.Context) GetCameraRolesItemOutput
}

type GetCameraRolesItemArgs struct {
	AppliedOnDevices  GetCameraRolesItemAppliedOnDeviceArrayInput  `pulumi:"appliedOnDevices"`
	AppliedOnNetworks GetCameraRolesItemAppliedOnNetworkArrayInput `pulumi:"appliedOnNetworks"`
	AppliedOrgWides   GetCameraRolesItemAppliedOrgWideArrayInput   `pulumi:"appliedOrgWides"`
	Name              pulumi.StringInput                           `pulumi:"name"`
}

func (GetCameraRolesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItem)(nil)).Elem()
}

func (i GetCameraRolesItemArgs) ToGetCameraRolesItemOutput() GetCameraRolesItemOutput {
	return i.ToGetCameraRolesItemOutputWithContext(context.Background())
}

func (i GetCameraRolesItemArgs) ToGetCameraRolesItemOutputWithContext(ctx context.Context) GetCameraRolesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemOutput)
}

// GetCameraRolesItemArrayInput is an input type that accepts GetCameraRolesItemArray and GetCameraRolesItemArrayOutput values.
// You can construct a concrete instance of `GetCameraRolesItemArrayInput` via:
//
//	GetCameraRolesItemArray{ GetCameraRolesItemArgs{...} }
type GetCameraRolesItemArrayInput interface {
	pulumi.Input

	ToGetCameraRolesItemArrayOutput() GetCameraRolesItemArrayOutput
	ToGetCameraRolesItemArrayOutputWithContext(context.Context) GetCameraRolesItemArrayOutput
}

type GetCameraRolesItemArray []GetCameraRolesItemInput

func (GetCameraRolesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItem)(nil)).Elem()
}

func (i GetCameraRolesItemArray) ToGetCameraRolesItemArrayOutput() GetCameraRolesItemArrayOutput {
	return i.ToGetCameraRolesItemArrayOutputWithContext(context.Background())
}

func (i GetCameraRolesItemArray) ToGetCameraRolesItemArrayOutputWithContext(ctx context.Context) GetCameraRolesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemArrayOutput)
}

type GetCameraRolesItemOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItem)(nil)).Elem()
}

func (o GetCameraRolesItemOutput) ToGetCameraRolesItemOutput() GetCameraRolesItemOutput {
	return o
}

func (o GetCameraRolesItemOutput) ToGetCameraRolesItemOutputWithContext(ctx context.Context) GetCameraRolesItemOutput {
	return o
}

func (o GetCameraRolesItemOutput) AppliedOnDevices() GetCameraRolesItemAppliedOnDeviceArrayOutput {
	return o.ApplyT(func(v GetCameraRolesItem) []GetCameraRolesItemAppliedOnDevice { return v.AppliedOnDevices }).(GetCameraRolesItemAppliedOnDeviceArrayOutput)
}

func (o GetCameraRolesItemOutput) AppliedOnNetworks() GetCameraRolesItemAppliedOnNetworkArrayOutput {
	return o.ApplyT(func(v GetCameraRolesItem) []GetCameraRolesItemAppliedOnNetwork { return v.AppliedOnNetworks }).(GetCameraRolesItemAppliedOnNetworkArrayOutput)
}

func (o GetCameraRolesItemOutput) AppliedOrgWides() GetCameraRolesItemAppliedOrgWideArrayOutput {
	return o.ApplyT(func(v GetCameraRolesItem) []GetCameraRolesItemAppliedOrgWide { return v.AppliedOrgWides }).(GetCameraRolesItemAppliedOrgWideArrayOutput)
}

func (o GetCameraRolesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetCameraRolesItemArrayOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItem)(nil)).Elem()
}

func (o GetCameraRolesItemArrayOutput) ToGetCameraRolesItemArrayOutput() GetCameraRolesItemArrayOutput {
	return o
}

func (o GetCameraRolesItemArrayOutput) ToGetCameraRolesItemArrayOutputWithContext(ctx context.Context) GetCameraRolesItemArrayOutput {
	return o
}

func (o GetCameraRolesItemArrayOutput) Index(i pulumi.IntInput) GetCameraRolesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraRolesItem {
		return vs[0].([]GetCameraRolesItem)[vs[1].(int)]
	}).(GetCameraRolesItemOutput)
}

type GetCameraRolesItemAppliedOnDevice struct {
	Id                string `pulumi:"id"`
	PermissionLevel   string `pulumi:"permissionLevel"`
	PermissionScope   string `pulumi:"permissionScope"`
	PermissionScopeId string `pulumi:"permissionScopeId"`
	Tag               string `pulumi:"tag"`
}

// GetCameraRolesItemAppliedOnDeviceInput is an input type that accepts GetCameraRolesItemAppliedOnDeviceArgs and GetCameraRolesItemAppliedOnDeviceOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOnDeviceInput` via:
//
//	GetCameraRolesItemAppliedOnDeviceArgs{...}
type GetCameraRolesItemAppliedOnDeviceInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOnDeviceOutput() GetCameraRolesItemAppliedOnDeviceOutput
	ToGetCameraRolesItemAppliedOnDeviceOutputWithContext(context.Context) GetCameraRolesItemAppliedOnDeviceOutput
}

type GetCameraRolesItemAppliedOnDeviceArgs struct {
	Id                pulumi.StringInput `pulumi:"id"`
	PermissionLevel   pulumi.StringInput `pulumi:"permissionLevel"`
	PermissionScope   pulumi.StringInput `pulumi:"permissionScope"`
	PermissionScopeId pulumi.StringInput `pulumi:"permissionScopeId"`
	Tag               pulumi.StringInput `pulumi:"tag"`
}

func (GetCameraRolesItemAppliedOnDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOnDevice)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOnDeviceArgs) ToGetCameraRolesItemAppliedOnDeviceOutput() GetCameraRolesItemAppliedOnDeviceOutput {
	return i.ToGetCameraRolesItemAppliedOnDeviceOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOnDeviceArgs) ToGetCameraRolesItemAppliedOnDeviceOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOnDeviceOutput)
}

// GetCameraRolesItemAppliedOnDeviceArrayInput is an input type that accepts GetCameraRolesItemAppliedOnDeviceArray and GetCameraRolesItemAppliedOnDeviceArrayOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOnDeviceArrayInput` via:
//
//	GetCameraRolesItemAppliedOnDeviceArray{ GetCameraRolesItemAppliedOnDeviceArgs{...} }
type GetCameraRolesItemAppliedOnDeviceArrayInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOnDeviceArrayOutput() GetCameraRolesItemAppliedOnDeviceArrayOutput
	ToGetCameraRolesItemAppliedOnDeviceArrayOutputWithContext(context.Context) GetCameraRolesItemAppliedOnDeviceArrayOutput
}

type GetCameraRolesItemAppliedOnDeviceArray []GetCameraRolesItemAppliedOnDeviceInput

func (GetCameraRolesItemAppliedOnDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOnDevice)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOnDeviceArray) ToGetCameraRolesItemAppliedOnDeviceArrayOutput() GetCameraRolesItemAppliedOnDeviceArrayOutput {
	return i.ToGetCameraRolesItemAppliedOnDeviceArrayOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOnDeviceArray) ToGetCameraRolesItemAppliedOnDeviceArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOnDeviceArrayOutput)
}

type GetCameraRolesItemAppliedOnDeviceOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOnDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOnDevice)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) ToGetCameraRolesItemAppliedOnDeviceOutput() GetCameraRolesItemAppliedOnDeviceOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) ToGetCameraRolesItemAppliedOnDeviceOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnDeviceOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnDevice) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) PermissionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnDevice) string { return v.PermissionLevel }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) PermissionScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnDevice) string { return v.PermissionScope }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) PermissionScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnDevice) string { return v.PermissionScopeId }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnDeviceOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnDevice) string { return v.Tag }).(pulumi.StringOutput)
}

type GetCameraRolesItemAppliedOnDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOnDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOnDevice)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOnDeviceArrayOutput) ToGetCameraRolesItemAppliedOnDeviceArrayOutput() GetCameraRolesItemAppliedOnDeviceArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnDeviceArrayOutput) ToGetCameraRolesItemAppliedOnDeviceArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnDeviceArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnDeviceArrayOutput) Index(i pulumi.IntInput) GetCameraRolesItemAppliedOnDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraRolesItemAppliedOnDevice {
		return vs[0].([]GetCameraRolesItemAppliedOnDevice)[vs[1].(int)]
	}).(GetCameraRolesItemAppliedOnDeviceOutput)
}

type GetCameraRolesItemAppliedOnNetwork struct {
	Id                string `pulumi:"id"`
	PermissionLevel   string `pulumi:"permissionLevel"`
	PermissionScope   string `pulumi:"permissionScope"`
	PermissionScopeId string `pulumi:"permissionScopeId"`
	Tag               string `pulumi:"tag"`
}

// GetCameraRolesItemAppliedOnNetworkInput is an input type that accepts GetCameraRolesItemAppliedOnNetworkArgs and GetCameraRolesItemAppliedOnNetworkOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOnNetworkInput` via:
//
//	GetCameraRolesItemAppliedOnNetworkArgs{...}
type GetCameraRolesItemAppliedOnNetworkInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOnNetworkOutput() GetCameraRolesItemAppliedOnNetworkOutput
	ToGetCameraRolesItemAppliedOnNetworkOutputWithContext(context.Context) GetCameraRolesItemAppliedOnNetworkOutput
}

type GetCameraRolesItemAppliedOnNetworkArgs struct {
	Id                pulumi.StringInput `pulumi:"id"`
	PermissionLevel   pulumi.StringInput `pulumi:"permissionLevel"`
	PermissionScope   pulumi.StringInput `pulumi:"permissionScope"`
	PermissionScopeId pulumi.StringInput `pulumi:"permissionScopeId"`
	Tag               pulumi.StringInput `pulumi:"tag"`
}

func (GetCameraRolesItemAppliedOnNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOnNetwork)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOnNetworkArgs) ToGetCameraRolesItemAppliedOnNetworkOutput() GetCameraRolesItemAppliedOnNetworkOutput {
	return i.ToGetCameraRolesItemAppliedOnNetworkOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOnNetworkArgs) ToGetCameraRolesItemAppliedOnNetworkOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOnNetworkOutput)
}

// GetCameraRolesItemAppliedOnNetworkArrayInput is an input type that accepts GetCameraRolesItemAppliedOnNetworkArray and GetCameraRolesItemAppliedOnNetworkArrayOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOnNetworkArrayInput` via:
//
//	GetCameraRolesItemAppliedOnNetworkArray{ GetCameraRolesItemAppliedOnNetworkArgs{...} }
type GetCameraRolesItemAppliedOnNetworkArrayInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOnNetworkArrayOutput() GetCameraRolesItemAppliedOnNetworkArrayOutput
	ToGetCameraRolesItemAppliedOnNetworkArrayOutputWithContext(context.Context) GetCameraRolesItemAppliedOnNetworkArrayOutput
}

type GetCameraRolesItemAppliedOnNetworkArray []GetCameraRolesItemAppliedOnNetworkInput

func (GetCameraRolesItemAppliedOnNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOnNetwork)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOnNetworkArray) ToGetCameraRolesItemAppliedOnNetworkArrayOutput() GetCameraRolesItemAppliedOnNetworkArrayOutput {
	return i.ToGetCameraRolesItemAppliedOnNetworkArrayOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOnNetworkArray) ToGetCameraRolesItemAppliedOnNetworkArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOnNetworkArrayOutput)
}

type GetCameraRolesItemAppliedOnNetworkOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOnNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOnNetwork)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) ToGetCameraRolesItemAppliedOnNetworkOutput() GetCameraRolesItemAppliedOnNetworkOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) ToGetCameraRolesItemAppliedOnNetworkOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnNetworkOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) PermissionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnNetwork) string { return v.PermissionLevel }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) PermissionScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnNetwork) string { return v.PermissionScope }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) PermissionScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnNetwork) string { return v.PermissionScopeId }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOnNetworkOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOnNetwork) string { return v.Tag }).(pulumi.StringOutput)
}

type GetCameraRolesItemAppliedOnNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOnNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOnNetwork)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOnNetworkArrayOutput) ToGetCameraRolesItemAppliedOnNetworkArrayOutput() GetCameraRolesItemAppliedOnNetworkArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnNetworkArrayOutput) ToGetCameraRolesItemAppliedOnNetworkArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOnNetworkArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOnNetworkArrayOutput) Index(i pulumi.IntInput) GetCameraRolesItemAppliedOnNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraRolesItemAppliedOnNetwork {
		return vs[0].([]GetCameraRolesItemAppliedOnNetwork)[vs[1].(int)]
	}).(GetCameraRolesItemAppliedOnNetworkOutput)
}

type GetCameraRolesItemAppliedOrgWide struct {
	PermissionLevel   string `pulumi:"permissionLevel"`
	PermissionScope   string `pulumi:"permissionScope"`
	PermissionScopeId string `pulumi:"permissionScopeId"`
	Tag               string `pulumi:"tag"`
}

// GetCameraRolesItemAppliedOrgWideInput is an input type that accepts GetCameraRolesItemAppliedOrgWideArgs and GetCameraRolesItemAppliedOrgWideOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOrgWideInput` via:
//
//	GetCameraRolesItemAppliedOrgWideArgs{...}
type GetCameraRolesItemAppliedOrgWideInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOrgWideOutput() GetCameraRolesItemAppliedOrgWideOutput
	ToGetCameraRolesItemAppliedOrgWideOutputWithContext(context.Context) GetCameraRolesItemAppliedOrgWideOutput
}

type GetCameraRolesItemAppliedOrgWideArgs struct {
	PermissionLevel   pulumi.StringInput `pulumi:"permissionLevel"`
	PermissionScope   pulumi.StringInput `pulumi:"permissionScope"`
	PermissionScopeId pulumi.StringInput `pulumi:"permissionScopeId"`
	Tag               pulumi.StringInput `pulumi:"tag"`
}

func (GetCameraRolesItemAppliedOrgWideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOrgWide)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOrgWideArgs) ToGetCameraRolesItemAppliedOrgWideOutput() GetCameraRolesItemAppliedOrgWideOutput {
	return i.ToGetCameraRolesItemAppliedOrgWideOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOrgWideArgs) ToGetCameraRolesItemAppliedOrgWideOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOrgWideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOrgWideOutput)
}

// GetCameraRolesItemAppliedOrgWideArrayInput is an input type that accepts GetCameraRolesItemAppliedOrgWideArray and GetCameraRolesItemAppliedOrgWideArrayOutput values.
// You can construct a concrete instance of `GetCameraRolesItemAppliedOrgWideArrayInput` via:
//
//	GetCameraRolesItemAppliedOrgWideArray{ GetCameraRolesItemAppliedOrgWideArgs{...} }
type GetCameraRolesItemAppliedOrgWideArrayInput interface {
	pulumi.Input

	ToGetCameraRolesItemAppliedOrgWideArrayOutput() GetCameraRolesItemAppliedOrgWideArrayOutput
	ToGetCameraRolesItemAppliedOrgWideArrayOutputWithContext(context.Context) GetCameraRolesItemAppliedOrgWideArrayOutput
}

type GetCameraRolesItemAppliedOrgWideArray []GetCameraRolesItemAppliedOrgWideInput

func (GetCameraRolesItemAppliedOrgWideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOrgWide)(nil)).Elem()
}

func (i GetCameraRolesItemAppliedOrgWideArray) ToGetCameraRolesItemAppliedOrgWideArrayOutput() GetCameraRolesItemAppliedOrgWideArrayOutput {
	return i.ToGetCameraRolesItemAppliedOrgWideArrayOutputWithContext(context.Background())
}

func (i GetCameraRolesItemAppliedOrgWideArray) ToGetCameraRolesItemAppliedOrgWideArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOrgWideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraRolesItemAppliedOrgWideArrayOutput)
}

type GetCameraRolesItemAppliedOrgWideOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOrgWideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraRolesItemAppliedOrgWide)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOrgWideOutput) ToGetCameraRolesItemAppliedOrgWideOutput() GetCameraRolesItemAppliedOrgWideOutput {
	return o
}

func (o GetCameraRolesItemAppliedOrgWideOutput) ToGetCameraRolesItemAppliedOrgWideOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOrgWideOutput {
	return o
}

func (o GetCameraRolesItemAppliedOrgWideOutput) PermissionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOrgWide) string { return v.PermissionLevel }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOrgWideOutput) PermissionScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOrgWide) string { return v.PermissionScope }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOrgWideOutput) PermissionScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOrgWide) string { return v.PermissionScopeId }).(pulumi.StringOutput)
}

func (o GetCameraRolesItemAppliedOrgWideOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraRolesItemAppliedOrgWide) string { return v.Tag }).(pulumi.StringOutput)
}

type GetCameraRolesItemAppliedOrgWideArrayOutput struct{ *pulumi.OutputState }

func (GetCameraRolesItemAppliedOrgWideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraRolesItemAppliedOrgWide)(nil)).Elem()
}

func (o GetCameraRolesItemAppliedOrgWideArrayOutput) ToGetCameraRolesItemAppliedOrgWideArrayOutput() GetCameraRolesItemAppliedOrgWideArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOrgWideArrayOutput) ToGetCameraRolesItemAppliedOrgWideArrayOutputWithContext(ctx context.Context) GetCameraRolesItemAppliedOrgWideArrayOutput {
	return o
}

func (o GetCameraRolesItemAppliedOrgWideArrayOutput) Index(i pulumi.IntInput) GetCameraRolesItemAppliedOrgWideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraRolesItemAppliedOrgWide {
		return vs[0].([]GetCameraRolesItemAppliedOrgWide)[vs[1].(int)]
	}).(GetCameraRolesItemAppliedOrgWideOutput)
}

type GetCellularGatewayUplinkStatusesItem struct {
	// Last reported time for the device
	LastReportedAt string `pulumi:"lastReportedAt"`
	// Device model
	Model string `pulumi:"model"`
	// Network Id
	NetworkId string `pulumi:"networkId"`
	// Serial number of the device
	Serial string `pulumi:"serial"`
	// Uplinks info
	Uplinks []GetCellularGatewayUplinkStatusesItemUplink `pulumi:"uplinks"`
}

// GetCellularGatewayUplinkStatusesItemInput is an input type that accepts GetCellularGatewayUplinkStatusesItemArgs and GetCellularGatewayUplinkStatusesItemOutput values.
// You can construct a concrete instance of `GetCellularGatewayUplinkStatusesItemInput` via:
//
//	GetCellularGatewayUplinkStatusesItemArgs{...}
type GetCellularGatewayUplinkStatusesItemInput interface {
	pulumi.Input

	ToGetCellularGatewayUplinkStatusesItemOutput() GetCellularGatewayUplinkStatusesItemOutput
	ToGetCellularGatewayUplinkStatusesItemOutputWithContext(context.Context) GetCellularGatewayUplinkStatusesItemOutput
}

type GetCellularGatewayUplinkStatusesItemArgs struct {
	// Last reported time for the device
	LastReportedAt pulumi.StringInput `pulumi:"lastReportedAt"`
	// Device model
	Model pulumi.StringInput `pulumi:"model"`
	// Network Id
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Serial number of the device
	Serial pulumi.StringInput `pulumi:"serial"`
	// Uplinks info
	Uplinks GetCellularGatewayUplinkStatusesItemUplinkArrayInput `pulumi:"uplinks"`
}

func (GetCellularGatewayUplinkStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItem)(nil)).Elem()
}

func (i GetCellularGatewayUplinkStatusesItemArgs) ToGetCellularGatewayUplinkStatusesItemOutput() GetCellularGatewayUplinkStatusesItemOutput {
	return i.ToGetCellularGatewayUplinkStatusesItemOutputWithContext(context.Background())
}

func (i GetCellularGatewayUplinkStatusesItemArgs) ToGetCellularGatewayUplinkStatusesItemOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayUplinkStatusesItemOutput)
}

// GetCellularGatewayUplinkStatusesItemArrayInput is an input type that accepts GetCellularGatewayUplinkStatusesItemArray and GetCellularGatewayUplinkStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetCellularGatewayUplinkStatusesItemArrayInput` via:
//
//	GetCellularGatewayUplinkStatusesItemArray{ GetCellularGatewayUplinkStatusesItemArgs{...} }
type GetCellularGatewayUplinkStatusesItemArrayInput interface {
	pulumi.Input

	ToGetCellularGatewayUplinkStatusesItemArrayOutput() GetCellularGatewayUplinkStatusesItemArrayOutput
	ToGetCellularGatewayUplinkStatusesItemArrayOutputWithContext(context.Context) GetCellularGatewayUplinkStatusesItemArrayOutput
}

type GetCellularGatewayUplinkStatusesItemArray []GetCellularGatewayUplinkStatusesItemInput

func (GetCellularGatewayUplinkStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayUplinkStatusesItem)(nil)).Elem()
}

func (i GetCellularGatewayUplinkStatusesItemArray) ToGetCellularGatewayUplinkStatusesItemArrayOutput() GetCellularGatewayUplinkStatusesItemArrayOutput {
	return i.ToGetCellularGatewayUplinkStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetCellularGatewayUplinkStatusesItemArray) ToGetCellularGatewayUplinkStatusesItemArrayOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayUplinkStatusesItemArrayOutput)
}

type GetCellularGatewayUplinkStatusesItemOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayUplinkStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItem)(nil)).Elem()
}

func (o GetCellularGatewayUplinkStatusesItemOutput) ToGetCellularGatewayUplinkStatusesItemOutput() GetCellularGatewayUplinkStatusesItemOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemOutput) ToGetCellularGatewayUplinkStatusesItemOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemOutput {
	return o
}

// Last reported time for the device
func (o GetCellularGatewayUplinkStatusesItemOutput) LastReportedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItem) string { return v.LastReportedAt }).(pulumi.StringOutput)
}

// Device model
func (o GetCellularGatewayUplinkStatusesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Network Id
func (o GetCellularGatewayUplinkStatusesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Serial number of the device
func (o GetCellularGatewayUplinkStatusesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Uplinks info
func (o GetCellularGatewayUplinkStatusesItemOutput) Uplinks() GetCellularGatewayUplinkStatusesItemUplinkArrayOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItem) []GetCellularGatewayUplinkStatusesItemUplink {
		return v.Uplinks
	}).(GetCellularGatewayUplinkStatusesItemUplinkArrayOutput)
}

type GetCellularGatewayUplinkStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayUplinkStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayUplinkStatusesItem)(nil)).Elem()
}

func (o GetCellularGatewayUplinkStatusesItemArrayOutput) ToGetCellularGatewayUplinkStatusesItemArrayOutput() GetCellularGatewayUplinkStatusesItemArrayOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemArrayOutput) ToGetCellularGatewayUplinkStatusesItemArrayOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemArrayOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemArrayOutput) Index(i pulumi.IntInput) GetCellularGatewayUplinkStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularGatewayUplinkStatusesItem {
		return vs[0].([]GetCellularGatewayUplinkStatusesItem)[vs[1].(int)]
	}).(GetCellularGatewayUplinkStatusesItemOutput)
}

type GetCellularGatewayUplinkStatusesItemUplink struct {
	// Access Point Name
	Apn string `pulumi:"apn"`
	// Connection Type
	ConnectionType string `pulumi:"connectionType"`
	// Primary DNS IP
	Dns1 string `pulumi:"dns1"`
	// Secondary DNS IP
	Dns2 string `pulumi:"dns2"`
	// Gateway IP
	Gateway string `pulumi:"gateway"`
	// Integrated Circuit Card Identification Number
	Iccid string `pulumi:"iccid"`
	// Uplink interface
	Interface string `pulumi:"interface"`
	// Uplink IP
	Ip string `pulumi:"ip"`
	// Uplink model
	Model string `pulumi:"model"`
	// Network Provider
	Provider string `pulumi:"provider"`
	// Public IP
	PublicIp string `pulumi:"publicIp"`
	// Tower Signal Status
	SignalStat GetCellularGatewayUplinkStatusesItemUplinkSignalStat `pulumi:"signalStat"`
	// Signal Type
	SignalType string `pulumi:"signalType"`
	// Uplink status
	Status string `pulumi:"status"`
}

// GetCellularGatewayUplinkStatusesItemUplinkInput is an input type that accepts GetCellularGatewayUplinkStatusesItemUplinkArgs and GetCellularGatewayUplinkStatusesItemUplinkOutput values.
// You can construct a concrete instance of `GetCellularGatewayUplinkStatusesItemUplinkInput` via:
//
//	GetCellularGatewayUplinkStatusesItemUplinkArgs{...}
type GetCellularGatewayUplinkStatusesItemUplinkInput interface {
	pulumi.Input

	ToGetCellularGatewayUplinkStatusesItemUplinkOutput() GetCellularGatewayUplinkStatusesItemUplinkOutput
	ToGetCellularGatewayUplinkStatusesItemUplinkOutputWithContext(context.Context) GetCellularGatewayUplinkStatusesItemUplinkOutput
}

type GetCellularGatewayUplinkStatusesItemUplinkArgs struct {
	// Access Point Name
	Apn pulumi.StringInput `pulumi:"apn"`
	// Connection Type
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Primary DNS IP
	Dns1 pulumi.StringInput `pulumi:"dns1"`
	// Secondary DNS IP
	Dns2 pulumi.StringInput `pulumi:"dns2"`
	// Gateway IP
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Integrated Circuit Card Identification Number
	Iccid pulumi.StringInput `pulumi:"iccid"`
	// Uplink interface
	Interface pulumi.StringInput `pulumi:"interface"`
	// Uplink IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// Uplink model
	Model pulumi.StringInput `pulumi:"model"`
	// Network Provider
	Provider pulumi.StringInput `pulumi:"provider"`
	// Public IP
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Tower Signal Status
	SignalStat GetCellularGatewayUplinkStatusesItemUplinkSignalStatInput `pulumi:"signalStat"`
	// Signal Type
	SignalType pulumi.StringInput `pulumi:"signalType"`
	// Uplink status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetCellularGatewayUplinkStatusesItemUplinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplink)(nil)).Elem()
}

func (i GetCellularGatewayUplinkStatusesItemUplinkArgs) ToGetCellularGatewayUplinkStatusesItemUplinkOutput() GetCellularGatewayUplinkStatusesItemUplinkOutput {
	return i.ToGetCellularGatewayUplinkStatusesItemUplinkOutputWithContext(context.Background())
}

func (i GetCellularGatewayUplinkStatusesItemUplinkArgs) ToGetCellularGatewayUplinkStatusesItemUplinkOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayUplinkStatusesItemUplinkOutput)
}

// GetCellularGatewayUplinkStatusesItemUplinkArrayInput is an input type that accepts GetCellularGatewayUplinkStatusesItemUplinkArray and GetCellularGatewayUplinkStatusesItemUplinkArrayOutput values.
// You can construct a concrete instance of `GetCellularGatewayUplinkStatusesItemUplinkArrayInput` via:
//
//	GetCellularGatewayUplinkStatusesItemUplinkArray{ GetCellularGatewayUplinkStatusesItemUplinkArgs{...} }
type GetCellularGatewayUplinkStatusesItemUplinkArrayInput interface {
	pulumi.Input

	ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutput() GetCellularGatewayUplinkStatusesItemUplinkArrayOutput
	ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutputWithContext(context.Context) GetCellularGatewayUplinkStatusesItemUplinkArrayOutput
}

type GetCellularGatewayUplinkStatusesItemUplinkArray []GetCellularGatewayUplinkStatusesItemUplinkInput

func (GetCellularGatewayUplinkStatusesItemUplinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayUplinkStatusesItemUplink)(nil)).Elem()
}

func (i GetCellularGatewayUplinkStatusesItemUplinkArray) ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutput() GetCellularGatewayUplinkStatusesItemUplinkArrayOutput {
	return i.ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutputWithContext(context.Background())
}

func (i GetCellularGatewayUplinkStatusesItemUplinkArray) ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayUplinkStatusesItemUplinkArrayOutput)
}

type GetCellularGatewayUplinkStatusesItemUplinkOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayUplinkStatusesItemUplinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplink)(nil)).Elem()
}

func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) ToGetCellularGatewayUplinkStatusesItemUplinkOutput() GetCellularGatewayUplinkStatusesItemUplinkOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) ToGetCellularGatewayUplinkStatusesItemUplinkOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkOutput {
	return o
}

// Access Point Name
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Apn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Apn }).(pulumi.StringOutput)
}

// Connection Type
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Primary DNS IP
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Dns1() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Dns1 }).(pulumi.StringOutput)
}

// Secondary DNS IP
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Dns2() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Dns2 }).(pulumi.StringOutput)
}

// Gateway IP
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Gateway }).(pulumi.StringOutput)
}

// Integrated Circuit Card Identification Number
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Iccid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Iccid }).(pulumi.StringOutput)
}

// Uplink interface
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Interface }).(pulumi.StringOutput)
}

// Uplink IP
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Ip }).(pulumi.StringOutput)
}

// Uplink model
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Model }).(pulumi.StringOutput)
}

// Network Provider
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Provider }).(pulumi.StringOutput)
}

// Public IP
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Tower Signal Status
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) SignalStat() GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) GetCellularGatewayUplinkStatusesItemUplinkSignalStat {
		return v.SignalStat
	}).(GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput)
}

// Signal Type
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) SignalType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.SignalType }).(pulumi.StringOutput)
}

// Uplink status
func (o GetCellularGatewayUplinkStatusesItemUplinkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplink) string { return v.Status }).(pulumi.StringOutput)
}

type GetCellularGatewayUplinkStatusesItemUplinkArrayOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayUplinkStatusesItemUplinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayUplinkStatusesItemUplink)(nil)).Elem()
}

func (o GetCellularGatewayUplinkStatusesItemUplinkArrayOutput) ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutput() GetCellularGatewayUplinkStatusesItemUplinkArrayOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemUplinkArrayOutput) ToGetCellularGatewayUplinkStatusesItemUplinkArrayOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkArrayOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemUplinkArrayOutput) Index(i pulumi.IntInput) GetCellularGatewayUplinkStatusesItemUplinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularGatewayUplinkStatusesItemUplink {
		return vs[0].([]GetCellularGatewayUplinkStatusesItemUplink)[vs[1].(int)]
	}).(GetCellularGatewayUplinkStatusesItemUplinkOutput)
}

type GetCellularGatewayUplinkStatusesItemUplinkSignalStat struct {
	// Reference Signal Received Power
	Rsrp string `pulumi:"rsrp"`
	// Reference Signal Received Quality
	Rsrq string `pulumi:"rsrq"`
}

// GetCellularGatewayUplinkStatusesItemUplinkSignalStatInput is an input type that accepts GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs and GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput values.
// You can construct a concrete instance of `GetCellularGatewayUplinkStatusesItemUplinkSignalStatInput` via:
//
//	GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs{...}
type GetCellularGatewayUplinkStatusesItemUplinkSignalStatInput interface {
	pulumi.Input

	ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput() GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput
	ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutputWithContext(context.Context) GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput
}

type GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs struct {
	// Reference Signal Received Power
	Rsrp pulumi.StringInput `pulumi:"rsrp"`
	// Reference Signal Received Quality
	Rsrq pulumi.StringInput `pulumi:"rsrq"`
}

func (GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplinkSignalStat)(nil)).Elem()
}

func (i GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs) ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput() GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput {
	return i.ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutputWithContext(context.Background())
}

func (i GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs) ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput)
}

type GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplinkSignalStat)(nil)).Elem()
}

func (o GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput) ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput() GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput {
	return o
}

func (o GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput) ToGetCellularGatewayUplinkStatusesItemUplinkSignalStatOutputWithContext(ctx context.Context) GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput {
	return o
}

// Reference Signal Received Power
func (o GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput) Rsrp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplinkSignalStat) string { return v.Rsrp }).(pulumi.StringOutput)
}

// Reference Signal Received Quality
func (o GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput) Rsrq() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayUplinkStatusesItemUplinkSignalStat) string { return v.Rsrq }).(pulumi.StringOutput)
}

type GetClientsBandwidthUsageHistoryItem struct {
	// Downloaded data, in mbps.
	Downstream int `pulumi:"downstream"`
	// Total bandwidth usage, in mbps.
	Total int `pulumi:"total"`
	// Timestamp for the bandwidth usage snapshot.
	Ts string `pulumi:"ts"`
	// Uploaded data, in mbps.
	Upstream int `pulumi:"upstream"`
}

// GetClientsBandwidthUsageHistoryItemInput is an input type that accepts GetClientsBandwidthUsageHistoryItemArgs and GetClientsBandwidthUsageHistoryItemOutput values.
// You can construct a concrete instance of `GetClientsBandwidthUsageHistoryItemInput` via:
//
//	GetClientsBandwidthUsageHistoryItemArgs{...}
type GetClientsBandwidthUsageHistoryItemInput interface {
	pulumi.Input

	ToGetClientsBandwidthUsageHistoryItemOutput() GetClientsBandwidthUsageHistoryItemOutput
	ToGetClientsBandwidthUsageHistoryItemOutputWithContext(context.Context) GetClientsBandwidthUsageHistoryItemOutput
}

type GetClientsBandwidthUsageHistoryItemArgs struct {
	// Downloaded data, in mbps.
	Downstream pulumi.IntInput `pulumi:"downstream"`
	// Total bandwidth usage, in mbps.
	Total pulumi.IntInput `pulumi:"total"`
	// Timestamp for the bandwidth usage snapshot.
	Ts pulumi.StringInput `pulumi:"ts"`
	// Uploaded data, in mbps.
	Upstream pulumi.IntInput `pulumi:"upstream"`
}

func (GetClientsBandwidthUsageHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsBandwidthUsageHistoryItem)(nil)).Elem()
}

func (i GetClientsBandwidthUsageHistoryItemArgs) ToGetClientsBandwidthUsageHistoryItemOutput() GetClientsBandwidthUsageHistoryItemOutput {
	return i.ToGetClientsBandwidthUsageHistoryItemOutputWithContext(context.Background())
}

func (i GetClientsBandwidthUsageHistoryItemArgs) ToGetClientsBandwidthUsageHistoryItemOutputWithContext(ctx context.Context) GetClientsBandwidthUsageHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsBandwidthUsageHistoryItemOutput)
}

// GetClientsBandwidthUsageHistoryItemArrayInput is an input type that accepts GetClientsBandwidthUsageHistoryItemArray and GetClientsBandwidthUsageHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetClientsBandwidthUsageHistoryItemArrayInput` via:
//
//	GetClientsBandwidthUsageHistoryItemArray{ GetClientsBandwidthUsageHistoryItemArgs{...} }
type GetClientsBandwidthUsageHistoryItemArrayInput interface {
	pulumi.Input

	ToGetClientsBandwidthUsageHistoryItemArrayOutput() GetClientsBandwidthUsageHistoryItemArrayOutput
	ToGetClientsBandwidthUsageHistoryItemArrayOutputWithContext(context.Context) GetClientsBandwidthUsageHistoryItemArrayOutput
}

type GetClientsBandwidthUsageHistoryItemArray []GetClientsBandwidthUsageHistoryItemInput

func (GetClientsBandwidthUsageHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsBandwidthUsageHistoryItem)(nil)).Elem()
}

func (i GetClientsBandwidthUsageHistoryItemArray) ToGetClientsBandwidthUsageHistoryItemArrayOutput() GetClientsBandwidthUsageHistoryItemArrayOutput {
	return i.ToGetClientsBandwidthUsageHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetClientsBandwidthUsageHistoryItemArray) ToGetClientsBandwidthUsageHistoryItemArrayOutputWithContext(ctx context.Context) GetClientsBandwidthUsageHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsBandwidthUsageHistoryItemArrayOutput)
}

type GetClientsBandwidthUsageHistoryItemOutput struct{ *pulumi.OutputState }

func (GetClientsBandwidthUsageHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsBandwidthUsageHistoryItem)(nil)).Elem()
}

func (o GetClientsBandwidthUsageHistoryItemOutput) ToGetClientsBandwidthUsageHistoryItemOutput() GetClientsBandwidthUsageHistoryItemOutput {
	return o
}

func (o GetClientsBandwidthUsageHistoryItemOutput) ToGetClientsBandwidthUsageHistoryItemOutputWithContext(ctx context.Context) GetClientsBandwidthUsageHistoryItemOutput {
	return o
}

// Downloaded data, in mbps.
func (o GetClientsBandwidthUsageHistoryItemOutput) Downstream() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsBandwidthUsageHistoryItem) int { return v.Downstream }).(pulumi.IntOutput)
}

// Total bandwidth usage, in mbps.
func (o GetClientsBandwidthUsageHistoryItemOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsBandwidthUsageHistoryItem) int { return v.Total }).(pulumi.IntOutput)
}

// Timestamp for the bandwidth usage snapshot.
func (o GetClientsBandwidthUsageHistoryItemOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsBandwidthUsageHistoryItem) string { return v.Ts }).(pulumi.StringOutput)
}

// Uploaded data, in mbps.
func (o GetClientsBandwidthUsageHistoryItemOutput) Upstream() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsBandwidthUsageHistoryItem) int { return v.Upstream }).(pulumi.IntOutput)
}

type GetClientsBandwidthUsageHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetClientsBandwidthUsageHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsBandwidthUsageHistoryItem)(nil)).Elem()
}

func (o GetClientsBandwidthUsageHistoryItemArrayOutput) ToGetClientsBandwidthUsageHistoryItemArrayOutput() GetClientsBandwidthUsageHistoryItemArrayOutput {
	return o
}

func (o GetClientsBandwidthUsageHistoryItemArrayOutput) ToGetClientsBandwidthUsageHistoryItemArrayOutputWithContext(ctx context.Context) GetClientsBandwidthUsageHistoryItemArrayOutput {
	return o
}

func (o GetClientsBandwidthUsageHistoryItemArrayOutput) Index(i pulumi.IntInput) GetClientsBandwidthUsageHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientsBandwidthUsageHistoryItem {
		return vs[0].([]GetClientsBandwidthUsageHistoryItem)[vs[1].(int)]
	}).(GetClientsBandwidthUsageHistoryItemOutput)
}

type GetClientsOverviewItem struct {
	// Client count information
	Counts GetClientsOverviewItemCounts `pulumi:"counts"`
	// Usage information of all clients across organization
	Usage GetClientsOverviewItemUsage `pulumi:"usage"`
}

// GetClientsOverviewItemInput is an input type that accepts GetClientsOverviewItemArgs and GetClientsOverviewItemOutput values.
// You can construct a concrete instance of `GetClientsOverviewItemInput` via:
//
//	GetClientsOverviewItemArgs{...}
type GetClientsOverviewItemInput interface {
	pulumi.Input

	ToGetClientsOverviewItemOutput() GetClientsOverviewItemOutput
	ToGetClientsOverviewItemOutputWithContext(context.Context) GetClientsOverviewItemOutput
}

type GetClientsOverviewItemArgs struct {
	// Client count information
	Counts GetClientsOverviewItemCountsInput `pulumi:"counts"`
	// Usage information of all clients across organization
	Usage GetClientsOverviewItemUsageInput `pulumi:"usage"`
}

func (GetClientsOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItem)(nil)).Elem()
}

func (i GetClientsOverviewItemArgs) ToGetClientsOverviewItemOutput() GetClientsOverviewItemOutput {
	return i.ToGetClientsOverviewItemOutputWithContext(context.Background())
}

func (i GetClientsOverviewItemArgs) ToGetClientsOverviewItemOutputWithContext(ctx context.Context) GetClientsOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsOverviewItemOutput)
}

type GetClientsOverviewItemOutput struct{ *pulumi.OutputState }

func (GetClientsOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItem)(nil)).Elem()
}

func (o GetClientsOverviewItemOutput) ToGetClientsOverviewItemOutput() GetClientsOverviewItemOutput {
	return o
}

func (o GetClientsOverviewItemOutput) ToGetClientsOverviewItemOutputWithContext(ctx context.Context) GetClientsOverviewItemOutput {
	return o
}

// Client count information
func (o GetClientsOverviewItemOutput) Counts() GetClientsOverviewItemCountsOutput {
	return o.ApplyT(func(v GetClientsOverviewItem) GetClientsOverviewItemCounts { return v.Counts }).(GetClientsOverviewItemCountsOutput)
}

// Usage information of all clients across organization
func (o GetClientsOverviewItemOutput) Usage() GetClientsOverviewItemUsageOutput {
	return o.ApplyT(func(v GetClientsOverviewItem) GetClientsOverviewItemUsage { return v.Usage }).(GetClientsOverviewItemUsageOutput)
}

type GetClientsOverviewItemCounts struct {
	// Total number of clients with data usage in organization
	Total int `pulumi:"total"`
}

// GetClientsOverviewItemCountsInput is an input type that accepts GetClientsOverviewItemCountsArgs and GetClientsOverviewItemCountsOutput values.
// You can construct a concrete instance of `GetClientsOverviewItemCountsInput` via:
//
//	GetClientsOverviewItemCountsArgs{...}
type GetClientsOverviewItemCountsInput interface {
	pulumi.Input

	ToGetClientsOverviewItemCountsOutput() GetClientsOverviewItemCountsOutput
	ToGetClientsOverviewItemCountsOutputWithContext(context.Context) GetClientsOverviewItemCountsOutput
}

type GetClientsOverviewItemCountsArgs struct {
	// Total number of clients with data usage in organization
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetClientsOverviewItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemCounts)(nil)).Elem()
}

func (i GetClientsOverviewItemCountsArgs) ToGetClientsOverviewItemCountsOutput() GetClientsOverviewItemCountsOutput {
	return i.ToGetClientsOverviewItemCountsOutputWithContext(context.Background())
}

func (i GetClientsOverviewItemCountsArgs) ToGetClientsOverviewItemCountsOutputWithContext(ctx context.Context) GetClientsOverviewItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsOverviewItemCountsOutput)
}

type GetClientsOverviewItemCountsOutput struct{ *pulumi.OutputState }

func (GetClientsOverviewItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemCounts)(nil)).Elem()
}

func (o GetClientsOverviewItemCountsOutput) ToGetClientsOverviewItemCountsOutput() GetClientsOverviewItemCountsOutput {
	return o
}

func (o GetClientsOverviewItemCountsOutput) ToGetClientsOverviewItemCountsOutputWithContext(ctx context.Context) GetClientsOverviewItemCountsOutput {
	return o
}

// Total number of clients with data usage in organization
func (o GetClientsOverviewItemCountsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsOverviewItemCounts) int { return v.Total }).(pulumi.IntOutput)
}

type GetClientsOverviewItemUsage struct {
	// Average data usage (in kb) of each client in organization
	Average float64 `pulumi:"average"`
	// Overall data usage of all clients across organization
	Overall GetClientsOverviewItemUsageOverall `pulumi:"overall"`
}

// GetClientsOverviewItemUsageInput is an input type that accepts GetClientsOverviewItemUsageArgs and GetClientsOverviewItemUsageOutput values.
// You can construct a concrete instance of `GetClientsOverviewItemUsageInput` via:
//
//	GetClientsOverviewItemUsageArgs{...}
type GetClientsOverviewItemUsageInput interface {
	pulumi.Input

	ToGetClientsOverviewItemUsageOutput() GetClientsOverviewItemUsageOutput
	ToGetClientsOverviewItemUsageOutputWithContext(context.Context) GetClientsOverviewItemUsageOutput
}

type GetClientsOverviewItemUsageArgs struct {
	// Average data usage (in kb) of each client in organization
	Average pulumi.Float64Input `pulumi:"average"`
	// Overall data usage of all clients across organization
	Overall GetClientsOverviewItemUsageOverallInput `pulumi:"overall"`
}

func (GetClientsOverviewItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemUsage)(nil)).Elem()
}

func (i GetClientsOverviewItemUsageArgs) ToGetClientsOverviewItemUsageOutput() GetClientsOverviewItemUsageOutput {
	return i.ToGetClientsOverviewItemUsageOutputWithContext(context.Background())
}

func (i GetClientsOverviewItemUsageArgs) ToGetClientsOverviewItemUsageOutputWithContext(ctx context.Context) GetClientsOverviewItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsOverviewItemUsageOutput)
}

type GetClientsOverviewItemUsageOutput struct{ *pulumi.OutputState }

func (GetClientsOverviewItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemUsage)(nil)).Elem()
}

func (o GetClientsOverviewItemUsageOutput) ToGetClientsOverviewItemUsageOutput() GetClientsOverviewItemUsageOutput {
	return o
}

func (o GetClientsOverviewItemUsageOutput) ToGetClientsOverviewItemUsageOutputWithContext(ctx context.Context) GetClientsOverviewItemUsageOutput {
	return o
}

// Average data usage (in kb) of each client in organization
func (o GetClientsOverviewItemUsageOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GetClientsOverviewItemUsage) float64 { return v.Average }).(pulumi.Float64Output)
}

// Overall data usage of all clients across organization
func (o GetClientsOverviewItemUsageOutput) Overall() GetClientsOverviewItemUsageOverallOutput {
	return o.ApplyT(func(v GetClientsOverviewItemUsage) GetClientsOverviewItemUsageOverall { return v.Overall }).(GetClientsOverviewItemUsageOverallOutput)
}

type GetClientsOverviewItemUsageOverall struct {
	// Downstream data usage (in kb) of all clients across organization
	Downstream float64 `pulumi:"downstream"`
	// Total data usage (in kb) of all clients across organization
	Total float64 `pulumi:"total"`
	// Upstream data usage (in kb) of all clients across organization
	Upstream float64 `pulumi:"upstream"`
}

// GetClientsOverviewItemUsageOverallInput is an input type that accepts GetClientsOverviewItemUsageOverallArgs and GetClientsOverviewItemUsageOverallOutput values.
// You can construct a concrete instance of `GetClientsOverviewItemUsageOverallInput` via:
//
//	GetClientsOverviewItemUsageOverallArgs{...}
type GetClientsOverviewItemUsageOverallInput interface {
	pulumi.Input

	ToGetClientsOverviewItemUsageOverallOutput() GetClientsOverviewItemUsageOverallOutput
	ToGetClientsOverviewItemUsageOverallOutputWithContext(context.Context) GetClientsOverviewItemUsageOverallOutput
}

type GetClientsOverviewItemUsageOverallArgs struct {
	// Downstream data usage (in kb) of all clients across organization
	Downstream pulumi.Float64Input `pulumi:"downstream"`
	// Total data usage (in kb) of all clients across organization
	Total pulumi.Float64Input `pulumi:"total"`
	// Upstream data usage (in kb) of all clients across organization
	Upstream pulumi.Float64Input `pulumi:"upstream"`
}

func (GetClientsOverviewItemUsageOverallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemUsageOverall)(nil)).Elem()
}

func (i GetClientsOverviewItemUsageOverallArgs) ToGetClientsOverviewItemUsageOverallOutput() GetClientsOverviewItemUsageOverallOutput {
	return i.ToGetClientsOverviewItemUsageOverallOutputWithContext(context.Background())
}

func (i GetClientsOverviewItemUsageOverallArgs) ToGetClientsOverviewItemUsageOverallOutputWithContext(ctx context.Context) GetClientsOverviewItemUsageOverallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsOverviewItemUsageOverallOutput)
}

type GetClientsOverviewItemUsageOverallOutput struct{ *pulumi.OutputState }

func (GetClientsOverviewItemUsageOverallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsOverviewItemUsageOverall)(nil)).Elem()
}

func (o GetClientsOverviewItemUsageOverallOutput) ToGetClientsOverviewItemUsageOverallOutput() GetClientsOverviewItemUsageOverallOutput {
	return o
}

func (o GetClientsOverviewItemUsageOverallOutput) ToGetClientsOverviewItemUsageOverallOutputWithContext(ctx context.Context) GetClientsOverviewItemUsageOverallOutput {
	return o
}

// Downstream data usage (in kb) of all clients across organization
func (o GetClientsOverviewItemUsageOverallOutput) Downstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetClientsOverviewItemUsageOverall) float64 { return v.Downstream }).(pulumi.Float64Output)
}

// Total data usage (in kb) of all clients across organization
func (o GetClientsOverviewItemUsageOverallOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetClientsOverviewItemUsageOverall) float64 { return v.Total }).(pulumi.Float64Output)
}

// Upstream data usage (in kb) of all clients across organization
func (o GetClientsOverviewItemUsageOverallOutput) Upstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetClientsOverviewItemUsageOverall) float64 { return v.Upstream }).(pulumi.Float64Output)
}

type GetClientsSearchItem struct {
	ClientId     string                       `pulumi:"clientId"`
	Mac          string                       `pulumi:"mac"`
	Manufacturer string                       `pulumi:"manufacturer"`
	Records      []GetClientsSearchItemRecord `pulumi:"records"`
}

// GetClientsSearchItemInput is an input type that accepts GetClientsSearchItemArgs and GetClientsSearchItemOutput values.
// You can construct a concrete instance of `GetClientsSearchItemInput` via:
//
//	GetClientsSearchItemArgs{...}
type GetClientsSearchItemInput interface {
	pulumi.Input

	ToGetClientsSearchItemOutput() GetClientsSearchItemOutput
	ToGetClientsSearchItemOutputWithContext(context.Context) GetClientsSearchItemOutput
}

type GetClientsSearchItemArgs struct {
	ClientId     pulumi.StringInput                   `pulumi:"clientId"`
	Mac          pulumi.StringInput                   `pulumi:"mac"`
	Manufacturer pulumi.StringInput                   `pulumi:"manufacturer"`
	Records      GetClientsSearchItemRecordArrayInput `pulumi:"records"`
}

func (GetClientsSearchItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItem)(nil)).Elem()
}

func (i GetClientsSearchItemArgs) ToGetClientsSearchItemOutput() GetClientsSearchItemOutput {
	return i.ToGetClientsSearchItemOutputWithContext(context.Background())
}

func (i GetClientsSearchItemArgs) ToGetClientsSearchItemOutputWithContext(ctx context.Context) GetClientsSearchItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemOutput)
}

type GetClientsSearchItemOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItem)(nil)).Elem()
}

func (o GetClientsSearchItemOutput) ToGetClientsSearchItemOutput() GetClientsSearchItemOutput {
	return o
}

func (o GetClientsSearchItemOutput) ToGetClientsSearchItemOutputWithContext(ctx context.Context) GetClientsSearchItemOutput {
	return o
}

func (o GetClientsSearchItemOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItem) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItem) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemOutput) Manufacturer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItem) string { return v.Manufacturer }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemOutput) Records() GetClientsSearchItemRecordArrayOutput {
	return o.ApplyT(func(v GetClientsSearchItem) []GetClientsSearchItemRecord { return v.Records }).(GetClientsSearchItemRecordArrayOutput)
}

type GetClientsSearchItemRecord struct {
	Cdp                  string                                          `pulumi:"cdp"`
	ClientVpnConnections []GetClientsSearchItemRecordClientVpnConnection `pulumi:"clientVpnConnections"`
	Description          string                                          `pulumi:"description"`
	FirstSeen            int                                             `pulumi:"firstSeen"`
	Ip                   string                                          `pulumi:"ip"`
	Ip6                  string                                          `pulumi:"ip6"`
	LastSeen             int                                             `pulumi:"lastSeen"`
	Lldps                []string                                        `pulumi:"lldps"`
	Network              GetClientsSearchItemRecordNetwork               `pulumi:"network"`
	Os                   string                                          `pulumi:"os"`
	SmInstalled          bool                                            `pulumi:"smInstalled"`
	Ssid                 string                                          `pulumi:"ssid"`
	Status               string                                          `pulumi:"status"`
	Switchport           string                                          `pulumi:"switchport"`
	User                 string                                          `pulumi:"user"`
	Vlan                 string                                          `pulumi:"vlan"`
	WirelessCapabilities string                                          `pulumi:"wirelessCapabilities"`
}

// GetClientsSearchItemRecordInput is an input type that accepts GetClientsSearchItemRecordArgs and GetClientsSearchItemRecordOutput values.
// You can construct a concrete instance of `GetClientsSearchItemRecordInput` via:
//
//	GetClientsSearchItemRecordArgs{...}
type GetClientsSearchItemRecordInput interface {
	pulumi.Input

	ToGetClientsSearchItemRecordOutput() GetClientsSearchItemRecordOutput
	ToGetClientsSearchItemRecordOutputWithContext(context.Context) GetClientsSearchItemRecordOutput
}

type GetClientsSearchItemRecordArgs struct {
	Cdp                  pulumi.StringInput                                      `pulumi:"cdp"`
	ClientVpnConnections GetClientsSearchItemRecordClientVpnConnectionArrayInput `pulumi:"clientVpnConnections"`
	Description          pulumi.StringInput                                      `pulumi:"description"`
	FirstSeen            pulumi.IntInput                                         `pulumi:"firstSeen"`
	Ip                   pulumi.StringInput                                      `pulumi:"ip"`
	Ip6                  pulumi.StringInput                                      `pulumi:"ip6"`
	LastSeen             pulumi.IntInput                                         `pulumi:"lastSeen"`
	Lldps                pulumi.StringArrayInput                                 `pulumi:"lldps"`
	Network              GetClientsSearchItemRecordNetworkInput                  `pulumi:"network"`
	Os                   pulumi.StringInput                                      `pulumi:"os"`
	SmInstalled          pulumi.BoolInput                                        `pulumi:"smInstalled"`
	Ssid                 pulumi.StringInput                                      `pulumi:"ssid"`
	Status               pulumi.StringInput                                      `pulumi:"status"`
	Switchport           pulumi.StringInput                                      `pulumi:"switchport"`
	User                 pulumi.StringInput                                      `pulumi:"user"`
	Vlan                 pulumi.StringInput                                      `pulumi:"vlan"`
	WirelessCapabilities pulumi.StringInput                                      `pulumi:"wirelessCapabilities"`
}

func (GetClientsSearchItemRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecord)(nil)).Elem()
}

func (i GetClientsSearchItemRecordArgs) ToGetClientsSearchItemRecordOutput() GetClientsSearchItemRecordOutput {
	return i.ToGetClientsSearchItemRecordOutputWithContext(context.Background())
}

func (i GetClientsSearchItemRecordArgs) ToGetClientsSearchItemRecordOutputWithContext(ctx context.Context) GetClientsSearchItemRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemRecordOutput)
}

// GetClientsSearchItemRecordArrayInput is an input type that accepts GetClientsSearchItemRecordArray and GetClientsSearchItemRecordArrayOutput values.
// You can construct a concrete instance of `GetClientsSearchItemRecordArrayInput` via:
//
//	GetClientsSearchItemRecordArray{ GetClientsSearchItemRecordArgs{...} }
type GetClientsSearchItemRecordArrayInput interface {
	pulumi.Input

	ToGetClientsSearchItemRecordArrayOutput() GetClientsSearchItemRecordArrayOutput
	ToGetClientsSearchItemRecordArrayOutputWithContext(context.Context) GetClientsSearchItemRecordArrayOutput
}

type GetClientsSearchItemRecordArray []GetClientsSearchItemRecordInput

func (GetClientsSearchItemRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsSearchItemRecord)(nil)).Elem()
}

func (i GetClientsSearchItemRecordArray) ToGetClientsSearchItemRecordArrayOutput() GetClientsSearchItemRecordArrayOutput {
	return i.ToGetClientsSearchItemRecordArrayOutputWithContext(context.Background())
}

func (i GetClientsSearchItemRecordArray) ToGetClientsSearchItemRecordArrayOutputWithContext(ctx context.Context) GetClientsSearchItemRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemRecordArrayOutput)
}

type GetClientsSearchItemRecordOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecord)(nil)).Elem()
}

func (o GetClientsSearchItemRecordOutput) ToGetClientsSearchItemRecordOutput() GetClientsSearchItemRecordOutput {
	return o
}

func (o GetClientsSearchItemRecordOutput) ToGetClientsSearchItemRecordOutputWithContext(ctx context.Context) GetClientsSearchItemRecordOutput {
	return o
}

func (o GetClientsSearchItemRecordOutput) Cdp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Cdp }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) ClientVpnConnections() GetClientsSearchItemRecordClientVpnConnectionArrayOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) []GetClientsSearchItemRecordClientVpnConnection {
		return v.ClientVpnConnections
	}).(GetClientsSearchItemRecordClientVpnConnectionArrayOutput)
}

func (o GetClientsSearchItemRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) FirstSeen() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) int { return v.FirstSeen }).(pulumi.IntOutput)
}

func (o GetClientsSearchItemRecordOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) LastSeen() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) int { return v.LastSeen }).(pulumi.IntOutput)
}

func (o GetClientsSearchItemRecordOutput) Lldps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) []string { return v.Lldps }).(pulumi.StringArrayOutput)
}

func (o GetClientsSearchItemRecordOutput) Network() GetClientsSearchItemRecordNetworkOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) GetClientsSearchItemRecordNetwork { return v.Network }).(GetClientsSearchItemRecordNetworkOutput)
}

func (o GetClientsSearchItemRecordOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Os }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) SmInstalled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) bool { return v.SmInstalled }).(pulumi.BoolOutput)
}

func (o GetClientsSearchItemRecordOutput) Ssid() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Ssid }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) Switchport() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Switchport }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.User }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) Vlan() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.Vlan }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordOutput) WirelessCapabilities() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecord) string { return v.WirelessCapabilities }).(pulumi.StringOutput)
}

type GetClientsSearchItemRecordArrayOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsSearchItemRecord)(nil)).Elem()
}

func (o GetClientsSearchItemRecordArrayOutput) ToGetClientsSearchItemRecordArrayOutput() GetClientsSearchItemRecordArrayOutput {
	return o
}

func (o GetClientsSearchItemRecordArrayOutput) ToGetClientsSearchItemRecordArrayOutputWithContext(ctx context.Context) GetClientsSearchItemRecordArrayOutput {
	return o
}

func (o GetClientsSearchItemRecordArrayOutput) Index(i pulumi.IntInput) GetClientsSearchItemRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientsSearchItemRecord {
		return vs[0].([]GetClientsSearchItemRecord)[vs[1].(int)]
	}).(GetClientsSearchItemRecordOutput)
}

type GetClientsSearchItemRecordClientVpnConnection struct {
	ConnectedAt    int    `pulumi:"connectedAt"`
	DisconnectedAt int    `pulumi:"disconnectedAt"`
	RemoteIp       string `pulumi:"remoteIp"`
}

// GetClientsSearchItemRecordClientVpnConnectionInput is an input type that accepts GetClientsSearchItemRecordClientVpnConnectionArgs and GetClientsSearchItemRecordClientVpnConnectionOutput values.
// You can construct a concrete instance of `GetClientsSearchItemRecordClientVpnConnectionInput` via:
//
//	GetClientsSearchItemRecordClientVpnConnectionArgs{...}
type GetClientsSearchItemRecordClientVpnConnectionInput interface {
	pulumi.Input

	ToGetClientsSearchItemRecordClientVpnConnectionOutput() GetClientsSearchItemRecordClientVpnConnectionOutput
	ToGetClientsSearchItemRecordClientVpnConnectionOutputWithContext(context.Context) GetClientsSearchItemRecordClientVpnConnectionOutput
}

type GetClientsSearchItemRecordClientVpnConnectionArgs struct {
	ConnectedAt    pulumi.IntInput    `pulumi:"connectedAt"`
	DisconnectedAt pulumi.IntInput    `pulumi:"disconnectedAt"`
	RemoteIp       pulumi.StringInput `pulumi:"remoteIp"`
}

func (GetClientsSearchItemRecordClientVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecordClientVpnConnection)(nil)).Elem()
}

func (i GetClientsSearchItemRecordClientVpnConnectionArgs) ToGetClientsSearchItemRecordClientVpnConnectionOutput() GetClientsSearchItemRecordClientVpnConnectionOutput {
	return i.ToGetClientsSearchItemRecordClientVpnConnectionOutputWithContext(context.Background())
}

func (i GetClientsSearchItemRecordClientVpnConnectionArgs) ToGetClientsSearchItemRecordClientVpnConnectionOutputWithContext(ctx context.Context) GetClientsSearchItemRecordClientVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemRecordClientVpnConnectionOutput)
}

// GetClientsSearchItemRecordClientVpnConnectionArrayInput is an input type that accepts GetClientsSearchItemRecordClientVpnConnectionArray and GetClientsSearchItemRecordClientVpnConnectionArrayOutput values.
// You can construct a concrete instance of `GetClientsSearchItemRecordClientVpnConnectionArrayInput` via:
//
//	GetClientsSearchItemRecordClientVpnConnectionArray{ GetClientsSearchItemRecordClientVpnConnectionArgs{...} }
type GetClientsSearchItemRecordClientVpnConnectionArrayInput interface {
	pulumi.Input

	ToGetClientsSearchItemRecordClientVpnConnectionArrayOutput() GetClientsSearchItemRecordClientVpnConnectionArrayOutput
	ToGetClientsSearchItemRecordClientVpnConnectionArrayOutputWithContext(context.Context) GetClientsSearchItemRecordClientVpnConnectionArrayOutput
}

type GetClientsSearchItemRecordClientVpnConnectionArray []GetClientsSearchItemRecordClientVpnConnectionInput

func (GetClientsSearchItemRecordClientVpnConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsSearchItemRecordClientVpnConnection)(nil)).Elem()
}

func (i GetClientsSearchItemRecordClientVpnConnectionArray) ToGetClientsSearchItemRecordClientVpnConnectionArrayOutput() GetClientsSearchItemRecordClientVpnConnectionArrayOutput {
	return i.ToGetClientsSearchItemRecordClientVpnConnectionArrayOutputWithContext(context.Background())
}

func (i GetClientsSearchItemRecordClientVpnConnectionArray) ToGetClientsSearchItemRecordClientVpnConnectionArrayOutputWithContext(ctx context.Context) GetClientsSearchItemRecordClientVpnConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemRecordClientVpnConnectionArrayOutput)
}

type GetClientsSearchItemRecordClientVpnConnectionOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemRecordClientVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecordClientVpnConnection)(nil)).Elem()
}

func (o GetClientsSearchItemRecordClientVpnConnectionOutput) ToGetClientsSearchItemRecordClientVpnConnectionOutput() GetClientsSearchItemRecordClientVpnConnectionOutput {
	return o
}

func (o GetClientsSearchItemRecordClientVpnConnectionOutput) ToGetClientsSearchItemRecordClientVpnConnectionOutputWithContext(ctx context.Context) GetClientsSearchItemRecordClientVpnConnectionOutput {
	return o
}

func (o GetClientsSearchItemRecordClientVpnConnectionOutput) ConnectedAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordClientVpnConnection) int { return v.ConnectedAt }).(pulumi.IntOutput)
}

func (o GetClientsSearchItemRecordClientVpnConnectionOutput) DisconnectedAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordClientVpnConnection) int { return v.DisconnectedAt }).(pulumi.IntOutput)
}

func (o GetClientsSearchItemRecordClientVpnConnectionOutput) RemoteIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordClientVpnConnection) string { return v.RemoteIp }).(pulumi.StringOutput)
}

type GetClientsSearchItemRecordClientVpnConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemRecordClientVpnConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientsSearchItemRecordClientVpnConnection)(nil)).Elem()
}

func (o GetClientsSearchItemRecordClientVpnConnectionArrayOutput) ToGetClientsSearchItemRecordClientVpnConnectionArrayOutput() GetClientsSearchItemRecordClientVpnConnectionArrayOutput {
	return o
}

func (o GetClientsSearchItemRecordClientVpnConnectionArrayOutput) ToGetClientsSearchItemRecordClientVpnConnectionArrayOutputWithContext(ctx context.Context) GetClientsSearchItemRecordClientVpnConnectionArrayOutput {
	return o
}

func (o GetClientsSearchItemRecordClientVpnConnectionArrayOutput) Index(i pulumi.IntInput) GetClientsSearchItemRecordClientVpnConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientsSearchItemRecordClientVpnConnection {
		return vs[0].([]GetClientsSearchItemRecordClientVpnConnection)[vs[1].(int)]
	}).(GetClientsSearchItemRecordClientVpnConnectionOutput)
}

type GetClientsSearchItemRecordNetwork struct {
	EnrollmentString        string   `pulumi:"enrollmentString"`
	Id                      string   `pulumi:"id"`
	IsBoundToConfigTemplate bool     `pulumi:"isBoundToConfigTemplate"`
	Name                    string   `pulumi:"name"`
	Notes                   string   `pulumi:"notes"`
	OrganizationId          string   `pulumi:"organizationId"`
	ProductTypes            []string `pulumi:"productTypes"`
	Tags                    []string `pulumi:"tags"`
	TimeZone                string   `pulumi:"timeZone"`
}

// GetClientsSearchItemRecordNetworkInput is an input type that accepts GetClientsSearchItemRecordNetworkArgs and GetClientsSearchItemRecordNetworkOutput values.
// You can construct a concrete instance of `GetClientsSearchItemRecordNetworkInput` via:
//
//	GetClientsSearchItemRecordNetworkArgs{...}
type GetClientsSearchItemRecordNetworkInput interface {
	pulumi.Input

	ToGetClientsSearchItemRecordNetworkOutput() GetClientsSearchItemRecordNetworkOutput
	ToGetClientsSearchItemRecordNetworkOutputWithContext(context.Context) GetClientsSearchItemRecordNetworkOutput
}

type GetClientsSearchItemRecordNetworkArgs struct {
	EnrollmentString        pulumi.StringInput      `pulumi:"enrollmentString"`
	Id                      pulumi.StringInput      `pulumi:"id"`
	IsBoundToConfigTemplate pulumi.BoolInput        `pulumi:"isBoundToConfigTemplate"`
	Name                    pulumi.StringInput      `pulumi:"name"`
	Notes                   pulumi.StringInput      `pulumi:"notes"`
	OrganizationId          pulumi.StringInput      `pulumi:"organizationId"`
	ProductTypes            pulumi.StringArrayInput `pulumi:"productTypes"`
	Tags                    pulumi.StringArrayInput `pulumi:"tags"`
	TimeZone                pulumi.StringInput      `pulumi:"timeZone"`
}

func (GetClientsSearchItemRecordNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecordNetwork)(nil)).Elem()
}

func (i GetClientsSearchItemRecordNetworkArgs) ToGetClientsSearchItemRecordNetworkOutput() GetClientsSearchItemRecordNetworkOutput {
	return i.ToGetClientsSearchItemRecordNetworkOutputWithContext(context.Background())
}

func (i GetClientsSearchItemRecordNetworkArgs) ToGetClientsSearchItemRecordNetworkOutputWithContext(ctx context.Context) GetClientsSearchItemRecordNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientsSearchItemRecordNetworkOutput)
}

type GetClientsSearchItemRecordNetworkOutput struct{ *pulumi.OutputState }

func (GetClientsSearchItemRecordNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientsSearchItemRecordNetwork)(nil)).Elem()
}

func (o GetClientsSearchItemRecordNetworkOutput) ToGetClientsSearchItemRecordNetworkOutput() GetClientsSearchItemRecordNetworkOutput {
	return o
}

func (o GetClientsSearchItemRecordNetworkOutput) ToGetClientsSearchItemRecordNetworkOutputWithContext(ctx context.Context) GetClientsSearchItemRecordNetworkOutput {
	return o
}

func (o GetClientsSearchItemRecordNetworkOutput) EnrollmentString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.EnrollmentString }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) IsBoundToConfigTemplate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) bool { return v.IsBoundToConfigTemplate }).(pulumi.BoolOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.Notes }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetClientsSearchItemRecordNetworkOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientsSearchItemRecordNetwork) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetConfigTemplatesItem struct {
	// The ID of the network or config template to copy configuration from
	Id string `pulumi:"id"`
	// The name of the configuration template
	Name string `pulumi:"name"`
	// The product types of the configuration template
	ProductTypes []string `pulumi:"productTypes"`
	// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
	TimeZone string `pulumi:"timeZone"`
}

// GetConfigTemplatesItemInput is an input type that accepts GetConfigTemplatesItemArgs and GetConfigTemplatesItemOutput values.
// You can construct a concrete instance of `GetConfigTemplatesItemInput` via:
//
//	GetConfigTemplatesItemArgs{...}
type GetConfigTemplatesItemInput interface {
	pulumi.Input

	ToGetConfigTemplatesItemOutput() GetConfigTemplatesItemOutput
	ToGetConfigTemplatesItemOutputWithContext(context.Context) GetConfigTemplatesItemOutput
}

type GetConfigTemplatesItemArgs struct {
	// The ID of the network or config template to copy configuration from
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the configuration template
	Name pulumi.StringInput `pulumi:"name"`
	// The product types of the configuration template
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetConfigTemplatesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesItem)(nil)).Elem()
}

func (i GetConfigTemplatesItemArgs) ToGetConfigTemplatesItemOutput() GetConfigTemplatesItemOutput {
	return i.ToGetConfigTemplatesItemOutputWithContext(context.Background())
}

func (i GetConfigTemplatesItemArgs) ToGetConfigTemplatesItemOutputWithContext(ctx context.Context) GetConfigTemplatesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesItemOutput)
}

// GetConfigTemplatesItemArrayInput is an input type that accepts GetConfigTemplatesItemArray and GetConfigTemplatesItemArrayOutput values.
// You can construct a concrete instance of `GetConfigTemplatesItemArrayInput` via:
//
//	GetConfigTemplatesItemArray{ GetConfigTemplatesItemArgs{...} }
type GetConfigTemplatesItemArrayInput interface {
	pulumi.Input

	ToGetConfigTemplatesItemArrayOutput() GetConfigTemplatesItemArrayOutput
	ToGetConfigTemplatesItemArrayOutputWithContext(context.Context) GetConfigTemplatesItemArrayOutput
}

type GetConfigTemplatesItemArray []GetConfigTemplatesItemInput

func (GetConfigTemplatesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesItem)(nil)).Elem()
}

func (i GetConfigTemplatesItemArray) ToGetConfigTemplatesItemArrayOutput() GetConfigTemplatesItemArrayOutput {
	return i.ToGetConfigTemplatesItemArrayOutputWithContext(context.Background())
}

func (i GetConfigTemplatesItemArray) ToGetConfigTemplatesItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesItemArrayOutput)
}

type GetConfigTemplatesItemOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesItem)(nil)).Elem()
}

func (o GetConfigTemplatesItemOutput) ToGetConfigTemplatesItemOutput() GetConfigTemplatesItemOutput {
	return o
}

func (o GetConfigTemplatesItemOutput) ToGetConfigTemplatesItemOutputWithContext(ctx context.Context) GetConfigTemplatesItemOutput {
	return o
}

// The ID of the network or config template to copy configuration from
func (o GetConfigTemplatesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the configuration template
func (o GetConfigTemplatesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesItem) string { return v.Name }).(pulumi.StringOutput)
}

// The product types of the configuration template
func (o GetConfigTemplatesItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigTemplatesItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in \n\nthis article\n\n. Not applicable if copying from existing network or template
func (o GetConfigTemplatesItemOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesItem) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetConfigTemplatesItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesItem)(nil)).Elem()
}

func (o GetConfigTemplatesItemArrayOutput) ToGetConfigTemplatesItemArrayOutput() GetConfigTemplatesItemArrayOutput {
	return o
}

func (o GetConfigTemplatesItemArrayOutput) ToGetConfigTemplatesItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesItemArrayOutput {
	return o
}

func (o GetConfigTemplatesItemArrayOutput) Index(i pulumi.IntInput) GetConfigTemplatesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigTemplatesItem {
		return vs[0].([]GetConfigTemplatesItem)[vs[1].(int)]
	}).(GetConfigTemplatesItemOutput)
}

type GetConfigTemplatesSwitchProfilesItem struct {
	// Switch model
	Model string `pulumi:"model"`
	// Switch template name
	Name string `pulumi:"name"`
	// Switch template id
	SwitchProfileId string `pulumi:"switchProfileId"`
}

// GetConfigTemplatesSwitchProfilesItemInput is an input type that accepts GetConfigTemplatesSwitchProfilesItemArgs and GetConfigTemplatesSwitchProfilesItemOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesItemInput` via:
//
//	GetConfigTemplatesSwitchProfilesItemArgs{...}
type GetConfigTemplatesSwitchProfilesItemInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesItemOutput() GetConfigTemplatesSwitchProfilesItemOutput
	ToGetConfigTemplatesSwitchProfilesItemOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesItemOutput
}

type GetConfigTemplatesSwitchProfilesItemArgs struct {
	// Switch model
	Model pulumi.StringInput `pulumi:"model"`
	// Switch template name
	Name pulumi.StringInput `pulumi:"name"`
	// Switch template id
	SwitchProfileId pulumi.StringInput `pulumi:"switchProfileId"`
}

func (GetConfigTemplatesSwitchProfilesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesItem)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesItemArgs) ToGetConfigTemplatesSwitchProfilesItemOutput() GetConfigTemplatesSwitchProfilesItemOutput {
	return i.ToGetConfigTemplatesSwitchProfilesItemOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesItemArgs) ToGetConfigTemplatesSwitchProfilesItemOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesItemOutput)
}

// GetConfigTemplatesSwitchProfilesItemArrayInput is an input type that accepts GetConfigTemplatesSwitchProfilesItemArray and GetConfigTemplatesSwitchProfilesItemArrayOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesItemArrayInput` via:
//
//	GetConfigTemplatesSwitchProfilesItemArray{ GetConfigTemplatesSwitchProfilesItemArgs{...} }
type GetConfigTemplatesSwitchProfilesItemArrayInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesItemArrayOutput() GetConfigTemplatesSwitchProfilesItemArrayOutput
	ToGetConfigTemplatesSwitchProfilesItemArrayOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesItemArrayOutput
}

type GetConfigTemplatesSwitchProfilesItemArray []GetConfigTemplatesSwitchProfilesItemInput

func (GetConfigTemplatesSwitchProfilesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesSwitchProfilesItem)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesItemArray) ToGetConfigTemplatesSwitchProfilesItemArrayOutput() GetConfigTemplatesSwitchProfilesItemArrayOutput {
	return i.ToGetConfigTemplatesSwitchProfilesItemArrayOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesItemArray) ToGetConfigTemplatesSwitchProfilesItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesItemArrayOutput)
}

type GetConfigTemplatesSwitchProfilesItemOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesItem)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesItemOutput) ToGetConfigTemplatesSwitchProfilesItemOutput() GetConfigTemplatesSwitchProfilesItemOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesItemOutput) ToGetConfigTemplatesSwitchProfilesItemOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesItemOutput {
	return o
}

// Switch model
func (o GetConfigTemplatesSwitchProfilesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Switch template name
func (o GetConfigTemplatesSwitchProfilesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Switch template id
func (o GetConfigTemplatesSwitchProfilesItemOutput) SwitchProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesItem) string { return v.SwitchProfileId }).(pulumi.StringOutput)
}

type GetConfigTemplatesSwitchProfilesItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesSwitchProfilesItem)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesItemArrayOutput) ToGetConfigTemplatesSwitchProfilesItemArrayOutput() GetConfigTemplatesSwitchProfilesItemArrayOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesItemArrayOutput) ToGetConfigTemplatesSwitchProfilesItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesItemArrayOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesItemArrayOutput) Index(i pulumi.IntInput) GetConfigTemplatesSwitchProfilesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigTemplatesSwitchProfilesItem {
		return vs[0].([]GetConfigTemplatesSwitchProfilesItem)[vs[1].(int)]
	}).(GetConfigTemplatesSwitchProfilesItemOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItem struct {
	// The number of a custom access policy to configure on the switch template port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
	AccessPolicyNumber int `pulumi:"accessPolicyNumber"`
	// The type of the access policy of the switch template port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType string `pulumi:"accessPolicyType"`
	// The VLANs allowed on the switch template port. Only applicable to trunk ports.
	AllowedVlans string `pulumi:"allowedVlans"`
	// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
	DaiTrusted bool `pulumi:"daiTrusted"`
	// The status of the switch template port.
	Enabled bool `pulumi:"enabled"`
	// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
	FlexibleStackingEnabled bool `pulumi:"flexibleStackingEnabled"`
	// The isolation status of the switch template port.
	IsolationEnabled bool `pulumi:"isolationEnabled"`
	// The link speed for the switch template port.
	LinkNegotiation string `pulumi:"linkNegotiation"`
	// Available link speeds for the switch template port.
	LinkNegotiationCapabilities []string `pulumi:"linkNegotiationCapabilities"`
	// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
	MacAllowLists []string `pulumi:"macAllowLists"`
	// Port mirror
	Mirror GetConfigTemplatesSwitchProfilesPortsItemMirror `pulumi:"mirror"`
	// Expansion module
	Module GetConfigTemplatesSwitchProfilesPortsItemModule `pulumi:"module"`
	// The name of the switch template port.
	Name string `pulumi:"name"`
	// The PoE status of the switch template port.
	PoeEnabled bool `pulumi:"poeEnabled"`
	// The identifier of the switch template port.
	PortId string `pulumi:"portId"`
	// The ID of the port schedule. A value of null will clear the port schedule.
	PortScheduleId string `pulumi:"portScheduleId"`
	// Profile attributes
	Profile GetConfigTemplatesSwitchProfilesPortsItemProfile `pulumi:"profile"`
	// The rapid spanning tree protocol status.
	RstpEnabled bool `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit int `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists []string `pulumi:"stickyMacAllowLists"`
	// The storm control status of the switch template port.
	StormControlEnabled bool `pulumi:"stormControlEnabled"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard string `pulumi:"stpGuard"`
	// The list of tags of the switch template port.
	Tags []string `pulumi:"tags"`
	// The type of the switch template port ('trunk' or 'access').
	Type string `pulumi:"type"`
	// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
	Udld string `pulumi:"udld"`
	// The VLAN of the switch template port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan int `pulumi:"vlan"`
	// The voice VLAN of the switch template port. Only applicable to access ports.
	VoiceVlan int `pulumi:"voiceVlan"`
}

// GetConfigTemplatesSwitchProfilesPortsItemInput is an input type that accepts GetConfigTemplatesSwitchProfilesPortsItemArgs and GetConfigTemplatesSwitchProfilesPortsItemOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesPortsItemInput` via:
//
//	GetConfigTemplatesSwitchProfilesPortsItemArgs{...}
type GetConfigTemplatesSwitchProfilesPortsItemInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesPortsItemOutput() GetConfigTemplatesSwitchProfilesPortsItemOutput
	ToGetConfigTemplatesSwitchProfilesPortsItemOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesPortsItemOutput
}

type GetConfigTemplatesSwitchProfilesPortsItemArgs struct {
	// The number of a custom access policy to configure on the switch template port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
	AccessPolicyNumber pulumi.IntInput `pulumi:"accessPolicyNumber"`
	// The type of the access policy of the switch template port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType pulumi.StringInput `pulumi:"accessPolicyType"`
	// The VLANs allowed on the switch template port. Only applicable to trunk ports.
	AllowedVlans pulumi.StringInput `pulumi:"allowedVlans"`
	// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
	DaiTrusted pulumi.BoolInput `pulumi:"daiTrusted"`
	// The status of the switch template port.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
	FlexibleStackingEnabled pulumi.BoolInput `pulumi:"flexibleStackingEnabled"`
	// The isolation status of the switch template port.
	IsolationEnabled pulumi.BoolInput `pulumi:"isolationEnabled"`
	// The link speed for the switch template port.
	LinkNegotiation pulumi.StringInput `pulumi:"linkNegotiation"`
	// Available link speeds for the switch template port.
	LinkNegotiationCapabilities pulumi.StringArrayInput `pulumi:"linkNegotiationCapabilities"`
	// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
	MacAllowLists pulumi.StringArrayInput `pulumi:"macAllowLists"`
	// Port mirror
	Mirror GetConfigTemplatesSwitchProfilesPortsItemMirrorInput `pulumi:"mirror"`
	// Expansion module
	Module GetConfigTemplatesSwitchProfilesPortsItemModuleInput `pulumi:"module"`
	// The name of the switch template port.
	Name pulumi.StringInput `pulumi:"name"`
	// The PoE status of the switch template port.
	PoeEnabled pulumi.BoolInput `pulumi:"poeEnabled"`
	// The identifier of the switch template port.
	PortId pulumi.StringInput `pulumi:"portId"`
	// The ID of the port schedule. A value of null will clear the port schedule.
	PortScheduleId pulumi.StringInput `pulumi:"portScheduleId"`
	// Profile attributes
	Profile GetConfigTemplatesSwitchProfilesPortsItemProfileInput `pulumi:"profile"`
	// The rapid spanning tree protocol status.
	RstpEnabled pulumi.BoolInput `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit pulumi.IntInput `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists pulumi.StringArrayInput `pulumi:"stickyMacAllowLists"`
	// The storm control status of the switch template port.
	StormControlEnabled pulumi.BoolInput `pulumi:"stormControlEnabled"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard pulumi.StringInput `pulumi:"stpGuard"`
	// The list of tags of the switch template port.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of the switch template port ('trunk' or 'access').
	Type pulumi.StringInput `pulumi:"type"`
	// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
	Udld pulumi.StringInput `pulumi:"udld"`
	// The VLAN of the switch template port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// The voice VLAN of the switch template port. Only applicable to access ports.
	VoiceVlan pulumi.IntInput `pulumi:"voiceVlan"`
}

func (GetConfigTemplatesSwitchProfilesPortsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItem)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesPortsItemArgs) ToGetConfigTemplatesSwitchProfilesPortsItemOutput() GetConfigTemplatesSwitchProfilesPortsItemOutput {
	return i.ToGetConfigTemplatesSwitchProfilesPortsItemOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesPortsItemArgs) ToGetConfigTemplatesSwitchProfilesPortsItemOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesPortsItemOutput)
}

// GetConfigTemplatesSwitchProfilesPortsItemArrayInput is an input type that accepts GetConfigTemplatesSwitchProfilesPortsItemArray and GetConfigTemplatesSwitchProfilesPortsItemArrayOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesPortsItemArrayInput` via:
//
//	GetConfigTemplatesSwitchProfilesPortsItemArray{ GetConfigTemplatesSwitchProfilesPortsItemArgs{...} }
type GetConfigTemplatesSwitchProfilesPortsItemArrayInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutput() GetConfigTemplatesSwitchProfilesPortsItemArrayOutput
	ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesPortsItemArrayOutput
}

type GetConfigTemplatesSwitchProfilesPortsItemArray []GetConfigTemplatesSwitchProfilesPortsItemInput

func (GetConfigTemplatesSwitchProfilesPortsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesSwitchProfilesPortsItem)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesPortsItemArray) ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutput() GetConfigTemplatesSwitchProfilesPortsItemArrayOutput {
	return i.ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesPortsItemArray) ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesPortsItemArrayOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesPortsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItem)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) ToGetConfigTemplatesSwitchProfilesPortsItemOutput() GetConfigTemplatesSwitchProfilesPortsItemOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) ToGetConfigTemplatesSwitchProfilesPortsItemOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemOutput {
	return o
}

// The number of a custom access policy to configure on the switch template port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) AccessPolicyNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) int { return v.AccessPolicyNumber }).(pulumi.IntOutput)
}

// The type of the access policy of the switch template port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) AccessPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.AccessPolicyType }).(pulumi.StringOutput)
}

// The VLANs allowed on the switch template port. Only applicable to trunk ports.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) AllowedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.AllowedVlans }).(pulumi.StringOutput)
}

// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) DaiTrusted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.DaiTrusted }).(pulumi.BoolOutput)
}

// The status of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) FlexibleStackingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.FlexibleStackingEnabled }).(pulumi.BoolOutput)
}

// The isolation status of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) IsolationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.IsolationEnabled }).(pulumi.BoolOutput)
}

// The link speed for the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) LinkNegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.LinkNegotiation }).(pulumi.StringOutput)
}

// Available link speeds for the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) LinkNegotiationCapabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) []string { return v.LinkNegotiationCapabilities }).(pulumi.StringArrayOutput)
}

// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) MacAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) []string { return v.MacAllowLists }).(pulumi.StringArrayOutput)
}

// Port mirror
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Mirror() GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) GetConfigTemplatesSwitchProfilesPortsItemMirror {
		return v.Mirror
	}).(GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput)
}

// Expansion module
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Module() GetConfigTemplatesSwitchProfilesPortsItemModuleOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) GetConfigTemplatesSwitchProfilesPortsItemModule {
		return v.Module
	}).(GetConfigTemplatesSwitchProfilesPortsItemModuleOutput)
}

// The name of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The PoE status of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) PoeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.PoeEnabled }).(pulumi.BoolOutput)
}

// The identifier of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.PortId }).(pulumi.StringOutput)
}

// The ID of the port schedule. A value of null will clear the port schedule.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) PortScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.PortScheduleId }).(pulumi.StringOutput)
}

// Profile attributes
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Profile() GetConfigTemplatesSwitchProfilesPortsItemProfileOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) GetConfigTemplatesSwitchProfilesPortsItemProfile {
		return v.Profile
	}).(GetConfigTemplatesSwitchProfilesPortsItemProfileOutput)
}

// The rapid spanning tree protocol status.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) RstpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.RstpEnabled }).(pulumi.BoolOutput)
}

// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) StickyMacAllowListLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) int { return v.StickyMacAllowListLimit }).(pulumi.IntOutput)
}

// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) StickyMacAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) []string { return v.StickyMacAllowLists }).(pulumi.StringArrayOutput)
}

// The storm control status of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) StormControlEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) bool { return v.StormControlEnabled }).(pulumi.BoolOutput)
}

// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) StpGuard() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.StpGuard }).(pulumi.StringOutput)
}

// The list of tags of the switch template port.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the switch template port ('trunk' or 'access').
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.Type }).(pulumi.StringOutput)
}

// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Udld() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) string { return v.Udld }).(pulumi.StringOutput)
}

// The VLAN of the switch template port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) int { return v.Vlan }).(pulumi.IntOutput)
}

// The voice VLAN of the switch template port. Only applicable to access ports.
func (o GetConfigTemplatesSwitchProfilesPortsItemOutput) VoiceVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItem) int { return v.VoiceVlan }).(pulumi.IntOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesPortsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigTemplatesSwitchProfilesPortsItem)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesPortsItemArrayOutput) ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutput() GetConfigTemplatesSwitchProfilesPortsItemArrayOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemArrayOutput) ToGetConfigTemplatesSwitchProfilesPortsItemArrayOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemArrayOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemArrayOutput) Index(i pulumi.IntInput) GetConfigTemplatesSwitchProfilesPortsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigTemplatesSwitchProfilesPortsItem {
		return vs[0].([]GetConfigTemplatesSwitchProfilesPortsItem)[vs[1].(int)]
	}).(GetConfigTemplatesSwitchProfilesPortsItemOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemMirror struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode string `pulumi:"mode"`
}

// GetConfigTemplatesSwitchProfilesPortsItemMirrorInput is an input type that accepts GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs and GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesPortsItemMirrorInput` via:
//
//	GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs{...}
type GetConfigTemplatesSwitchProfilesPortsItemMirrorInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutput() GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput
	ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput
}

type GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemMirror)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs) ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutput() GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput {
	return i.ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs) ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemMirror)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput) ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutput() GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput) ToGetConfigTemplatesSwitchProfilesPortsItemMirrorOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput {
	return o
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItemMirror) string { return v.Mode }).(pulumi.StringOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemModule struct {
	// The model of the expansion module.
	Model string `pulumi:"model"`
}

// GetConfigTemplatesSwitchProfilesPortsItemModuleInput is an input type that accepts GetConfigTemplatesSwitchProfilesPortsItemModuleArgs and GetConfigTemplatesSwitchProfilesPortsItemModuleOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesPortsItemModuleInput` via:
//
//	GetConfigTemplatesSwitchProfilesPortsItemModuleArgs{...}
type GetConfigTemplatesSwitchProfilesPortsItemModuleInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutput() GetConfigTemplatesSwitchProfilesPortsItemModuleOutput
	ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesPortsItemModuleOutput
}

type GetConfigTemplatesSwitchProfilesPortsItemModuleArgs struct {
	// The model of the expansion module.
	Model pulumi.StringInput `pulumi:"model"`
}

func (GetConfigTemplatesSwitchProfilesPortsItemModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemModule)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesPortsItemModuleArgs) ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutput() GetConfigTemplatesSwitchProfilesPortsItemModuleOutput {
	return i.ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesPortsItemModuleArgs) ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesPortsItemModuleOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemModuleOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesPortsItemModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemModule)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesPortsItemModuleOutput) ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutput() GetConfigTemplatesSwitchProfilesPortsItemModuleOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemModuleOutput) ToGetConfigTemplatesSwitchProfilesPortsItemModuleOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemModuleOutput {
	return o
}

// The model of the expansion module.
func (o GetConfigTemplatesSwitchProfilesPortsItemModuleOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItemModule) string { return v.Model }).(pulumi.StringOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemProfile struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled bool `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id string `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname string `pulumi:"iname"`
}

// GetConfigTemplatesSwitchProfilesPortsItemProfileInput is an input type that accepts GetConfigTemplatesSwitchProfilesPortsItemProfileArgs and GetConfigTemplatesSwitchProfilesPortsItemProfileOutput values.
// You can construct a concrete instance of `GetConfigTemplatesSwitchProfilesPortsItemProfileInput` via:
//
//	GetConfigTemplatesSwitchProfilesPortsItemProfileArgs{...}
type GetConfigTemplatesSwitchProfilesPortsItemProfileInput interface {
	pulumi.Input

	ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutput() GetConfigTemplatesSwitchProfilesPortsItemProfileOutput
	ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutputWithContext(context.Context) GetConfigTemplatesSwitchProfilesPortsItemProfileOutput
}

type GetConfigTemplatesSwitchProfilesPortsItemProfileArgs struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname pulumi.StringInput `pulumi:"iname"`
}

func (GetConfigTemplatesSwitchProfilesPortsItemProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemProfile)(nil)).Elem()
}

func (i GetConfigTemplatesSwitchProfilesPortsItemProfileArgs) ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutput() GetConfigTemplatesSwitchProfilesPortsItemProfileOutput {
	return i.ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutputWithContext(context.Background())
}

func (i GetConfigTemplatesSwitchProfilesPortsItemProfileArgs) ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigTemplatesSwitchProfilesPortsItemProfileOutput)
}

type GetConfigTemplatesSwitchProfilesPortsItemProfileOutput struct{ *pulumi.OutputState }

func (GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemProfile)(nil)).Elem()
}

func (o GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutput() GetConfigTemplatesSwitchProfilesPortsItemProfileOutput {
	return o
}

func (o GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) ToGetConfigTemplatesSwitchProfilesPortsItemProfileOutputWithContext(ctx context.Context) GetConfigTemplatesSwitchProfilesPortsItemProfileOutput {
	return o
}

// When enabled, override this port's configuration with a port profile.
func (o GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItemProfile) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItemProfile) string { return v.Id }).(pulumi.StringOutput)
}

// When enabled, the IName of the profile.
func (o GetConfigTemplatesSwitchProfilesPortsItemProfileOutput) Iname() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigTemplatesSwitchProfilesPortsItemProfile) string { return v.Iname }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItem struct {
	// Details about the status changes
	Details GetDevicesAvailabilitiesChangeHistoryItemDetails `pulumi:"details"`
	// Device information
	Device GetDevicesAvailabilitiesChangeHistoryItemDevice `pulumi:"device"`
	// Network information
	Network GetDevicesAvailabilitiesChangeHistoryItemNetwork `pulumi:"network"`
	// Timestamp, in iso8601 format, at which the event happened
	Ts string `pulumi:"ts"`
}

// GetDevicesAvailabilitiesChangeHistoryItemInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemArgs and GetDevicesAvailabilitiesChangeHistoryItemOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemOutput() GetDevicesAvailabilitiesChangeHistoryItemOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemArgs struct {
	// Details about the status changes
	Details GetDevicesAvailabilitiesChangeHistoryItemDetailsInput `pulumi:"details"`
	// Device information
	Device GetDevicesAvailabilitiesChangeHistoryItemDeviceInput `pulumi:"device"`
	// Network information
	Network GetDevicesAvailabilitiesChangeHistoryItemNetworkInput `pulumi:"network"`
	// Timestamp, in iso8601 format, at which the event happened
	Ts pulumi.StringInput `pulumi:"ts"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItem)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemArgs) ToGetDevicesAvailabilitiesChangeHistoryItemOutput() GetDevicesAvailabilitiesChangeHistoryItemOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemArgs) ToGetDevicesAvailabilitiesChangeHistoryItemOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemOutput)
}

// GetDevicesAvailabilitiesChangeHistoryItemArrayInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemArray and GetDevicesAvailabilitiesChangeHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemArrayInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemArray{ GetDevicesAvailabilitiesChangeHistoryItemArgs{...} }
type GetDevicesAvailabilitiesChangeHistoryItemArrayInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemArrayOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemArrayOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemArray []GetDevicesAvailabilitiesChangeHistoryItemInput

func (GetDevicesAvailabilitiesChangeHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItem)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemArray) ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemArrayOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemArray) ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemArrayOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItem)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) ToGetDevicesAvailabilitiesChangeHistoryItemOutput() GetDevicesAvailabilitiesChangeHistoryItemOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) ToGetDevicesAvailabilitiesChangeHistoryItemOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemOutput {
	return o
}

// Details about the status changes
func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) Details() GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItem) GetDevicesAvailabilitiesChangeHistoryItemDetails {
		return v.Details
	}).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput)
}

// Device information
func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) Device() GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItem) GetDevicesAvailabilitiesChangeHistoryItemDevice {
		return v.Device
	}).(GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput)
}

// Network information
func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) Network() GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItem) GetDevicesAvailabilitiesChangeHistoryItemNetwork {
		return v.Network
	}).(GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput)
}

// Timestamp, in iso8601 format, at which the event happened
func (o GetDevicesAvailabilitiesChangeHistoryItemOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItem) string { return v.Ts }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItem)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemArrayOutput) Index(i pulumi.IntInput) GetDevicesAvailabilitiesChangeHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesAvailabilitiesChangeHistoryItem {
		return vs[0].([]GetDevicesAvailabilitiesChangeHistoryItem)[vs[1].(int)]
	}).(GetDevicesAvailabilitiesChangeHistoryItemOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetails struct {
	// Details about the new status
	News []GetDevicesAvailabilitiesChangeHistoryItemDetailsNews `pulumi:"news"`
	// Details about the old status
	Olds []GetDevicesAvailabilitiesChangeHistoryItemDetailsOld `pulumi:"olds"`
}

// GetDevicesAvailabilitiesChangeHistoryItemDetailsInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs and GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDetailsInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemDetailsInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs struct {
	// Details about the new status
	News GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayInput `pulumi:"news"`
	// Details about the old status
	Olds GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayInput `pulumi:"olds"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetails)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetails)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput {
	return o
}

// Details about the new status
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput) News() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetails) []GetDevicesAvailabilitiesChangeHistoryItemDetailsNews {
		return v.News
	}).(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput)
}

// Details about the old status
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput) Olds() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetails) []GetDevicesAvailabilitiesChangeHistoryItemDetailsOld {
		return v.Olds
	}).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsNews struct {
	// Name of the detail
	Name string `pulumi:"name"`
	// Value of the detail
	Value string `pulumi:"value"`
}

// GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs and GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs struct {
	// Name of the detail
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the detail
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsNews)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput)
}

// GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray and GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray{ GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs{...} }
type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray []GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsInput

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItemDetailsNews)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsNews)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput {
	return o
}

// Name of the detail
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetailsNews) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the detail
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetailsNews) string { return v.Value }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItemDetailsNews)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput) Index(i pulumi.IntInput) GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesAvailabilitiesChangeHistoryItemDetailsNews {
		return vs[0].([]GetDevicesAvailabilitiesChangeHistoryItemDetailsNews)[vs[1].(int)]
	}).(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOld struct {
	// Name of the detail
	Name string `pulumi:"name"`
	// Value of the detail
	Value string `pulumi:"value"`
}

// GetDevicesAvailabilitiesChangeHistoryItemDetailsOldInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs and GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDetailsOldInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs struct {
	// Name of the detail
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the detail
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsOld)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput)
}

// GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray and GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray{ GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs{...} }
type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray []GetDevicesAvailabilitiesChangeHistoryItemDetailsOldInput

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItemDetailsOld)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsOld)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput {
	return o
}

// Name of the detail
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetailsOld) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the detail
func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDetailsOld) string { return v.Value }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesChangeHistoryItemDetailsOld)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput() GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput) Index(i pulumi.IntInput) GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesAvailabilitiesChangeHistoryItemDetailsOld {
		return vs[0].([]GetDevicesAvailabilitiesChangeHistoryItemDetailsOld)[vs[1].(int)]
	}).(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDevice struct {
	// Device model
	Model string `pulumi:"model"`
	// Device name
	Name string `pulumi:"name"`
	// Device product type.
	ProductType string `pulumi:"productType"`
	// Device serial number
	Serial string `pulumi:"serial"`
}

// GetDevicesAvailabilitiesChangeHistoryItemDeviceInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs and GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemDeviceInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemDeviceInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutput() GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs struct {
	// Device model
	Model pulumi.StringInput `pulumi:"model"`
	// Device name
	Name pulumi.StringInput `pulumi:"name"`
	// Device product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDevice)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutput() GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs) ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDevice)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutput() GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) ToGetDevicesAvailabilitiesChangeHistoryItemDeviceOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput {
	return o
}

// Device model
func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDevice) string { return v.Model }).(pulumi.StringOutput)
}

// Device name
func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDevice) string { return v.Name }).(pulumi.StringOutput)
}

// Device product type.
func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDevice) string { return v.ProductType }).(pulumi.StringOutput)
}

// Device serial number
func (o GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemDevice) string { return v.Serial }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemNetwork struct {
	// Network id
	Id string `pulumi:"id"`
	// Network name
	Name string `pulumi:"name"`
	// Network tags
	Tags []string `pulumi:"tags"`
	// Network dashboard url
	Url string `pulumi:"url"`
}

// GetDevicesAvailabilitiesChangeHistoryItemNetworkInput is an input type that accepts GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs and GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesChangeHistoryItemNetworkInput` via:
//
//	GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs{...}
type GetDevicesAvailabilitiesChangeHistoryItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutput() GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput
	ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutputWithContext(context.Context) GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput
}

type GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs struct {
	// Network id
	Id pulumi.StringInput `pulumi:"id"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
	// Network tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Network dashboard url
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemNetwork)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs) ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutput() GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput {
	return i.ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs) ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput)
}

type GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemNetwork)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutput() GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput {
	return o
}

func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) ToGetDevicesAvailabilitiesChangeHistoryItemNetworkOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput {
	return o
}

// Network id
func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Network name
func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Network tags
func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemNetwork) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Network dashboard url
func (o GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesChangeHistoryItemNetwork) string { return v.Url }).(pulumi.StringOutput)
}

type GetDevicesAvailabilitiesItem struct {
	// The device MAC address.
	Mac string `pulumi:"mac"`
	// The device name.
	Name string `pulumi:"name"`
	// Network info.
	Network GetDevicesAvailabilitiesItemNetwork `pulumi:"network"`
	// Device product type.
	ProductType string `pulumi:"productType"`
	// The device serial number.
	Serial string `pulumi:"serial"`
	// Status of the device. Possible values are: online, alerting, offline, dormant.
	Status string `pulumi:"status"`
	// List of custom tags for the device.
	Tags []string `pulumi:"tags"`
}

// GetDevicesAvailabilitiesItemInput is an input type that accepts GetDevicesAvailabilitiesItemArgs and GetDevicesAvailabilitiesItemOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesItemInput` via:
//
//	GetDevicesAvailabilitiesItemArgs{...}
type GetDevicesAvailabilitiesItemInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesItemOutput() GetDevicesAvailabilitiesItemOutput
	ToGetDevicesAvailabilitiesItemOutputWithContext(context.Context) GetDevicesAvailabilitiesItemOutput
}

type GetDevicesAvailabilitiesItemArgs struct {
	// The device MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
	// The device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network info.
	Network GetDevicesAvailabilitiesItemNetworkInput `pulumi:"network"`
	// Device product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The device serial number.
	Serial pulumi.StringInput `pulumi:"serial"`
	// Status of the device. Possible values are: online, alerting, offline, dormant.
	Status pulumi.StringInput `pulumi:"status"`
	// List of custom tags for the device.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDevicesAvailabilitiesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesItem)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesItemArgs) ToGetDevicesAvailabilitiesItemOutput() GetDevicesAvailabilitiesItemOutput {
	return i.ToGetDevicesAvailabilitiesItemOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesItemArgs) ToGetDevicesAvailabilitiesItemOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesItemOutput)
}

// GetDevicesAvailabilitiesItemArrayInput is an input type that accepts GetDevicesAvailabilitiesItemArray and GetDevicesAvailabilitiesItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesItemArrayInput` via:
//
//	GetDevicesAvailabilitiesItemArray{ GetDevicesAvailabilitiesItemArgs{...} }
type GetDevicesAvailabilitiesItemArrayInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesItemArrayOutput() GetDevicesAvailabilitiesItemArrayOutput
	ToGetDevicesAvailabilitiesItemArrayOutputWithContext(context.Context) GetDevicesAvailabilitiesItemArrayOutput
}

type GetDevicesAvailabilitiesItemArray []GetDevicesAvailabilitiesItemInput

func (GetDevicesAvailabilitiesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesItem)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesItemArray) ToGetDevicesAvailabilitiesItemArrayOutput() GetDevicesAvailabilitiesItemArrayOutput {
	return i.ToGetDevicesAvailabilitiesItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesItemArray) ToGetDevicesAvailabilitiesItemArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesItemArrayOutput)
}

type GetDevicesAvailabilitiesItemOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesItem)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesItemOutput) ToGetDevicesAvailabilitiesItemOutput() GetDevicesAvailabilitiesItemOutput {
	return o
}

func (o GetDevicesAvailabilitiesItemOutput) ToGetDevicesAvailabilitiesItemOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemOutput {
	return o
}

// The device MAC address.
func (o GetDevicesAvailabilitiesItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) string { return v.Mac }).(pulumi.StringOutput)
}

// The device name.
func (o GetDevicesAvailabilitiesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info.
func (o GetDevicesAvailabilitiesItemOutput) Network() GetDevicesAvailabilitiesItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) GetDevicesAvailabilitiesItemNetwork { return v.Network }).(GetDevicesAvailabilitiesItemNetworkOutput)
}

// Device product type.
func (o GetDevicesAvailabilitiesItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// The device serial number.
func (o GetDevicesAvailabilitiesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Status of the device. Possible values are: online, alerting, offline, dormant.
func (o GetDevicesAvailabilitiesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) string { return v.Status }).(pulumi.StringOutput)
}

// List of custom tags for the device.
func (o GetDevicesAvailabilitiesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDevicesAvailabilitiesItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesAvailabilitiesItem)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesItemArrayOutput) ToGetDevicesAvailabilitiesItemArrayOutput() GetDevicesAvailabilitiesItemArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesItemArrayOutput) ToGetDevicesAvailabilitiesItemArrayOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemArrayOutput {
	return o
}

func (o GetDevicesAvailabilitiesItemArrayOutput) Index(i pulumi.IntInput) GetDevicesAvailabilitiesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesAvailabilitiesItem {
		return vs[0].([]GetDevicesAvailabilitiesItem)[vs[1].(int)]
	}).(GetDevicesAvailabilitiesItemOutput)
}

type GetDevicesAvailabilitiesItemNetwork struct {
	// ID for the network containing the device.
	Id string `pulumi:"id"`
}

// GetDevicesAvailabilitiesItemNetworkInput is an input type that accepts GetDevicesAvailabilitiesItemNetworkArgs and GetDevicesAvailabilitiesItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesAvailabilitiesItemNetworkInput` via:
//
//	GetDevicesAvailabilitiesItemNetworkArgs{...}
type GetDevicesAvailabilitiesItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesAvailabilitiesItemNetworkOutput() GetDevicesAvailabilitiesItemNetworkOutput
	ToGetDevicesAvailabilitiesItemNetworkOutputWithContext(context.Context) GetDevicesAvailabilitiesItemNetworkOutput
}

type GetDevicesAvailabilitiesItemNetworkArgs struct {
	// ID for the network containing the device.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDevicesAvailabilitiesItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesItemNetwork)(nil)).Elem()
}

func (i GetDevicesAvailabilitiesItemNetworkArgs) ToGetDevicesAvailabilitiesItemNetworkOutput() GetDevicesAvailabilitiesItemNetworkOutput {
	return i.ToGetDevicesAvailabilitiesItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesAvailabilitiesItemNetworkArgs) ToGetDevicesAvailabilitiesItemNetworkOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesAvailabilitiesItemNetworkOutput)
}

type GetDevicesAvailabilitiesItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesAvailabilitiesItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesAvailabilitiesItemNetwork)(nil)).Elem()
}

func (o GetDevicesAvailabilitiesItemNetworkOutput) ToGetDevicesAvailabilitiesItemNetworkOutput() GetDevicesAvailabilitiesItemNetworkOutput {
	return o
}

func (o GetDevicesAvailabilitiesItemNetworkOutput) ToGetDevicesAvailabilitiesItemNetworkOutputWithContext(ctx context.Context) GetDevicesAvailabilitiesItemNetworkOutput {
	return o
}

// ID for the network containing the device.
func (o GetDevicesAvailabilitiesItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesAvailabilitiesItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetDevicesBootsHistoryItem struct {
	// Device network
	Network GetDevicesBootsHistoryItemNetwork `pulumi:"network"`
	// Device serial number
	Serial string `pulumi:"serial"`
	// Device power up
	Start GetDevicesBootsHistoryItemStart `pulumi:"start"`
}

// GetDevicesBootsHistoryItemInput is an input type that accepts GetDevicesBootsHistoryItemArgs and GetDevicesBootsHistoryItemOutput values.
// You can construct a concrete instance of `GetDevicesBootsHistoryItemInput` via:
//
//	GetDevicesBootsHistoryItemArgs{...}
type GetDevicesBootsHistoryItemInput interface {
	pulumi.Input

	ToGetDevicesBootsHistoryItemOutput() GetDevicesBootsHistoryItemOutput
	ToGetDevicesBootsHistoryItemOutputWithContext(context.Context) GetDevicesBootsHistoryItemOutput
}

type GetDevicesBootsHistoryItemArgs struct {
	// Device network
	Network GetDevicesBootsHistoryItemNetworkInput `pulumi:"network"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
	// Device power up
	Start GetDevicesBootsHistoryItemStartInput `pulumi:"start"`
}

func (GetDevicesBootsHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItem)(nil)).Elem()
}

func (i GetDevicesBootsHistoryItemArgs) ToGetDevicesBootsHistoryItemOutput() GetDevicesBootsHistoryItemOutput {
	return i.ToGetDevicesBootsHistoryItemOutputWithContext(context.Background())
}

func (i GetDevicesBootsHistoryItemArgs) ToGetDevicesBootsHistoryItemOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesBootsHistoryItemOutput)
}

// GetDevicesBootsHistoryItemArrayInput is an input type that accepts GetDevicesBootsHistoryItemArray and GetDevicesBootsHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesBootsHistoryItemArrayInput` via:
//
//	GetDevicesBootsHistoryItemArray{ GetDevicesBootsHistoryItemArgs{...} }
type GetDevicesBootsHistoryItemArrayInput interface {
	pulumi.Input

	ToGetDevicesBootsHistoryItemArrayOutput() GetDevicesBootsHistoryItemArrayOutput
	ToGetDevicesBootsHistoryItemArrayOutputWithContext(context.Context) GetDevicesBootsHistoryItemArrayOutput
}

type GetDevicesBootsHistoryItemArray []GetDevicesBootsHistoryItemInput

func (GetDevicesBootsHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesBootsHistoryItem)(nil)).Elem()
}

func (i GetDevicesBootsHistoryItemArray) ToGetDevicesBootsHistoryItemArrayOutput() GetDevicesBootsHistoryItemArrayOutput {
	return i.ToGetDevicesBootsHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesBootsHistoryItemArray) ToGetDevicesBootsHistoryItemArrayOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesBootsHistoryItemArrayOutput)
}

type GetDevicesBootsHistoryItemOutput struct{ *pulumi.OutputState }

func (GetDevicesBootsHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItem)(nil)).Elem()
}

func (o GetDevicesBootsHistoryItemOutput) ToGetDevicesBootsHistoryItemOutput() GetDevicesBootsHistoryItemOutput {
	return o
}

func (o GetDevicesBootsHistoryItemOutput) ToGetDevicesBootsHistoryItemOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemOutput {
	return o
}

// Device network
func (o GetDevicesBootsHistoryItemOutput) Network() GetDevicesBootsHistoryItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesBootsHistoryItem) GetDevicesBootsHistoryItemNetwork { return v.Network }).(GetDevicesBootsHistoryItemNetworkOutput)
}

// Device serial number
func (o GetDevicesBootsHistoryItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesBootsHistoryItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Device power up
func (o GetDevicesBootsHistoryItemOutput) Start() GetDevicesBootsHistoryItemStartOutput {
	return o.ApplyT(func(v GetDevicesBootsHistoryItem) GetDevicesBootsHistoryItemStart { return v.Start }).(GetDevicesBootsHistoryItemStartOutput)
}

type GetDevicesBootsHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesBootsHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesBootsHistoryItem)(nil)).Elem()
}

func (o GetDevicesBootsHistoryItemArrayOutput) ToGetDevicesBootsHistoryItemArrayOutput() GetDevicesBootsHistoryItemArrayOutput {
	return o
}

func (o GetDevicesBootsHistoryItemArrayOutput) ToGetDevicesBootsHistoryItemArrayOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemArrayOutput {
	return o
}

func (o GetDevicesBootsHistoryItemArrayOutput) Index(i pulumi.IntInput) GetDevicesBootsHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesBootsHistoryItem {
		return vs[0].([]GetDevicesBootsHistoryItem)[vs[1].(int)]
	}).(GetDevicesBootsHistoryItemOutput)
}

type GetDevicesBootsHistoryItemNetwork struct {
	// API-formatted network ID
	Id string `pulumi:"id"`
}

// GetDevicesBootsHistoryItemNetworkInput is an input type that accepts GetDevicesBootsHistoryItemNetworkArgs and GetDevicesBootsHistoryItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesBootsHistoryItemNetworkInput` via:
//
//	GetDevicesBootsHistoryItemNetworkArgs{...}
type GetDevicesBootsHistoryItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesBootsHistoryItemNetworkOutput() GetDevicesBootsHistoryItemNetworkOutput
	ToGetDevicesBootsHistoryItemNetworkOutputWithContext(context.Context) GetDevicesBootsHistoryItemNetworkOutput
}

type GetDevicesBootsHistoryItemNetworkArgs struct {
	// API-formatted network ID
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDevicesBootsHistoryItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItemNetwork)(nil)).Elem()
}

func (i GetDevicesBootsHistoryItemNetworkArgs) ToGetDevicesBootsHistoryItemNetworkOutput() GetDevicesBootsHistoryItemNetworkOutput {
	return i.ToGetDevicesBootsHistoryItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesBootsHistoryItemNetworkArgs) ToGetDevicesBootsHistoryItemNetworkOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesBootsHistoryItemNetworkOutput)
}

type GetDevicesBootsHistoryItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesBootsHistoryItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItemNetwork)(nil)).Elem()
}

func (o GetDevicesBootsHistoryItemNetworkOutput) ToGetDevicesBootsHistoryItemNetworkOutput() GetDevicesBootsHistoryItemNetworkOutput {
	return o
}

func (o GetDevicesBootsHistoryItemNetworkOutput) ToGetDevicesBootsHistoryItemNetworkOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemNetworkOutput {
	return o
}

// API-formatted network ID
func (o GetDevicesBootsHistoryItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesBootsHistoryItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetDevicesBootsHistoryItemStart struct {
	// Indicates when the device booted
	BootedAt string `pulumi:"bootedAt"`
}

// GetDevicesBootsHistoryItemStartInput is an input type that accepts GetDevicesBootsHistoryItemStartArgs and GetDevicesBootsHistoryItemStartOutput values.
// You can construct a concrete instance of `GetDevicesBootsHistoryItemStartInput` via:
//
//	GetDevicesBootsHistoryItemStartArgs{...}
type GetDevicesBootsHistoryItemStartInput interface {
	pulumi.Input

	ToGetDevicesBootsHistoryItemStartOutput() GetDevicesBootsHistoryItemStartOutput
	ToGetDevicesBootsHistoryItemStartOutputWithContext(context.Context) GetDevicesBootsHistoryItemStartOutput
}

type GetDevicesBootsHistoryItemStartArgs struct {
	// Indicates when the device booted
	BootedAt pulumi.StringInput `pulumi:"bootedAt"`
}

func (GetDevicesBootsHistoryItemStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItemStart)(nil)).Elem()
}

func (i GetDevicesBootsHistoryItemStartArgs) ToGetDevicesBootsHistoryItemStartOutput() GetDevicesBootsHistoryItemStartOutput {
	return i.ToGetDevicesBootsHistoryItemStartOutputWithContext(context.Background())
}

func (i GetDevicesBootsHistoryItemStartArgs) ToGetDevicesBootsHistoryItemStartOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesBootsHistoryItemStartOutput)
}

type GetDevicesBootsHistoryItemStartOutput struct{ *pulumi.OutputState }

func (GetDevicesBootsHistoryItemStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesBootsHistoryItemStart)(nil)).Elem()
}

func (o GetDevicesBootsHistoryItemStartOutput) ToGetDevicesBootsHistoryItemStartOutput() GetDevicesBootsHistoryItemStartOutput {
	return o
}

func (o GetDevicesBootsHistoryItemStartOutput) ToGetDevicesBootsHistoryItemStartOutputWithContext(ctx context.Context) GetDevicesBootsHistoryItemStartOutput {
	return o
}

// Indicates when the device booted
func (o GetDevicesBootsHistoryItemStartOutput) BootedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesBootsHistoryItemStart) string { return v.BootedAt }).(pulumi.StringOutput)
}

type GetDevicesItem struct {
	// Physical address of the device
	Address string `pulumi:"address"`
	// Additional device information
	Details []GetDevicesItemDetail `pulumi:"details"`
	// Firmware version of the device
	Firmware string `pulumi:"firmware"`
	// IMEI of the device, if applicable
	Imei float64 `pulumi:"imei"`
	// LAN IP address of the device
	LanIp string `pulumi:"lanIp"`
	// Latitude of the device
	Lat float64 `pulumi:"lat"`
	// Longitude of the device
	Lng float64 `pulumi:"lng"`
	// MAC address of the device
	Mac string `pulumi:"mac"`
	// Model of the device
	Model string `pulumi:"model"`
	// Name of the device
	Name string `pulumi:"name"`
	// ID of the network the device belongs to
	NetworkId string `pulumi:"networkId"`
	// Notes for the device, limited to 255 characters
	Notes string `pulumi:"notes"`
	// Product type of the device
	ProductType string `pulumi:"productType"`
	// Serial number of the device
	Serial string `pulumi:"serial"`
	// List of tags assigned to the device
	Tags []string `pulumi:"tags"`
}

// GetDevicesItemInput is an input type that accepts GetDevicesItemArgs and GetDevicesItemOutput values.
// You can construct a concrete instance of `GetDevicesItemInput` via:
//
//	GetDevicesItemArgs{...}
type GetDevicesItemInput interface {
	pulumi.Input

	ToGetDevicesItemOutput() GetDevicesItemOutput
	ToGetDevicesItemOutputWithContext(context.Context) GetDevicesItemOutput
}

type GetDevicesItemArgs struct {
	// Physical address of the device
	Address pulumi.StringInput `pulumi:"address"`
	// Additional device information
	Details GetDevicesItemDetailArrayInput `pulumi:"details"`
	// Firmware version of the device
	Firmware pulumi.StringInput `pulumi:"firmware"`
	// IMEI of the device, if applicable
	Imei pulumi.Float64Input `pulumi:"imei"`
	// LAN IP address of the device
	LanIp pulumi.StringInput `pulumi:"lanIp"`
	// Latitude of the device
	Lat pulumi.Float64Input `pulumi:"lat"`
	// Longitude of the device
	Lng pulumi.Float64Input `pulumi:"lng"`
	// MAC address of the device
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model of the device
	Model pulumi.StringInput `pulumi:"model"`
	// Name of the device
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the network the device belongs to
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Notes for the device, limited to 255 characters
	Notes pulumi.StringInput `pulumi:"notes"`
	// Product type of the device
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Serial number of the device
	Serial pulumi.StringInput `pulumi:"serial"`
	// List of tags assigned to the device
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDevicesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesItem)(nil)).Elem()
}

func (i GetDevicesItemArgs) ToGetDevicesItemOutput() GetDevicesItemOutput {
	return i.ToGetDevicesItemOutputWithContext(context.Background())
}

func (i GetDevicesItemArgs) ToGetDevicesItemOutputWithContext(ctx context.Context) GetDevicesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesItemOutput)
}

// GetDevicesItemArrayInput is an input type that accepts GetDevicesItemArray and GetDevicesItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesItemArrayInput` via:
//
//	GetDevicesItemArray{ GetDevicesItemArgs{...} }
type GetDevicesItemArrayInput interface {
	pulumi.Input

	ToGetDevicesItemArrayOutput() GetDevicesItemArrayOutput
	ToGetDevicesItemArrayOutputWithContext(context.Context) GetDevicesItemArrayOutput
}

type GetDevicesItemArray []GetDevicesItemInput

func (GetDevicesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesItem)(nil)).Elem()
}

func (i GetDevicesItemArray) ToGetDevicesItemArrayOutput() GetDevicesItemArrayOutput {
	return i.ToGetDevicesItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesItemArray) ToGetDevicesItemArrayOutputWithContext(ctx context.Context) GetDevicesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesItemArrayOutput)
}

type GetDevicesItemOutput struct{ *pulumi.OutputState }

func (GetDevicesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesItem)(nil)).Elem()
}

func (o GetDevicesItemOutput) ToGetDevicesItemOutput() GetDevicesItemOutput {
	return o
}

func (o GetDevicesItemOutput) ToGetDevicesItemOutputWithContext(ctx context.Context) GetDevicesItemOutput {
	return o
}

// Physical address of the device
func (o GetDevicesItemOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Address }).(pulumi.StringOutput)
}

// Additional device information
func (o GetDevicesItemOutput) Details() GetDevicesItemDetailArrayOutput {
	return o.ApplyT(func(v GetDevicesItem) []GetDevicesItemDetail { return v.Details }).(GetDevicesItemDetailArrayOutput)
}

// Firmware version of the device
func (o GetDevicesItemOutput) Firmware() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Firmware }).(pulumi.StringOutput)
}

// IMEI of the device, if applicable
func (o GetDevicesItemOutput) Imei() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesItem) float64 { return v.Imei }).(pulumi.Float64Output)
}

// LAN IP address of the device
func (o GetDevicesItemOutput) LanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.LanIp }).(pulumi.StringOutput)
}

// Latitude of the device
func (o GetDevicesItemOutput) Lat() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesItem) float64 { return v.Lat }).(pulumi.Float64Output)
}

// Longitude of the device
func (o GetDevicesItemOutput) Lng() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesItem) float64 { return v.Lng }).(pulumi.Float64Output)
}

// MAC address of the device
func (o GetDevicesItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model of the device
func (o GetDevicesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the device
func (o GetDevicesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the network the device belongs to
func (o GetDevicesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Notes for the device, limited to 255 characters
func (o GetDevicesItemOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Notes }).(pulumi.StringOutput)
}

// Product type of the device
func (o GetDevicesItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// Serial number of the device
func (o GetDevicesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// List of tags assigned to the device
func (o GetDevicesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDevicesItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesItem)(nil)).Elem()
}

func (o GetDevicesItemArrayOutput) ToGetDevicesItemArrayOutput() GetDevicesItemArrayOutput {
	return o
}

func (o GetDevicesItemArrayOutput) ToGetDevicesItemArrayOutputWithContext(ctx context.Context) GetDevicesItemArrayOutput {
	return o
}

func (o GetDevicesItemArrayOutput) Index(i pulumi.IntInput) GetDevicesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesItem {
		return vs[0].([]GetDevicesItem)[vs[1].(int)]
	}).(GetDevicesItemOutput)
}

type GetDevicesItemDetail struct {
	// Additional property name
	Name string `pulumi:"name"`
	// Additional property value
	Value string `pulumi:"value"`
}

// GetDevicesItemDetailInput is an input type that accepts GetDevicesItemDetailArgs and GetDevicesItemDetailOutput values.
// You can construct a concrete instance of `GetDevicesItemDetailInput` via:
//
//	GetDevicesItemDetailArgs{...}
type GetDevicesItemDetailInput interface {
	pulumi.Input

	ToGetDevicesItemDetailOutput() GetDevicesItemDetailOutput
	ToGetDevicesItemDetailOutputWithContext(context.Context) GetDevicesItemDetailOutput
}

type GetDevicesItemDetailArgs struct {
	// Additional property name
	Name pulumi.StringInput `pulumi:"name"`
	// Additional property value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDevicesItemDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesItemDetail)(nil)).Elem()
}

func (i GetDevicesItemDetailArgs) ToGetDevicesItemDetailOutput() GetDevicesItemDetailOutput {
	return i.ToGetDevicesItemDetailOutputWithContext(context.Background())
}

func (i GetDevicesItemDetailArgs) ToGetDevicesItemDetailOutputWithContext(ctx context.Context) GetDevicesItemDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesItemDetailOutput)
}

// GetDevicesItemDetailArrayInput is an input type that accepts GetDevicesItemDetailArray and GetDevicesItemDetailArrayOutput values.
// You can construct a concrete instance of `GetDevicesItemDetailArrayInput` via:
//
//	GetDevicesItemDetailArray{ GetDevicesItemDetailArgs{...} }
type GetDevicesItemDetailArrayInput interface {
	pulumi.Input

	ToGetDevicesItemDetailArrayOutput() GetDevicesItemDetailArrayOutput
	ToGetDevicesItemDetailArrayOutputWithContext(context.Context) GetDevicesItemDetailArrayOutput
}

type GetDevicesItemDetailArray []GetDevicesItemDetailInput

func (GetDevicesItemDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesItemDetail)(nil)).Elem()
}

func (i GetDevicesItemDetailArray) ToGetDevicesItemDetailArrayOutput() GetDevicesItemDetailArrayOutput {
	return i.ToGetDevicesItemDetailArrayOutputWithContext(context.Background())
}

func (i GetDevicesItemDetailArray) ToGetDevicesItemDetailArrayOutputWithContext(ctx context.Context) GetDevicesItemDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesItemDetailArrayOutput)
}

type GetDevicesItemDetailOutput struct{ *pulumi.OutputState }

func (GetDevicesItemDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesItemDetail)(nil)).Elem()
}

func (o GetDevicesItemDetailOutput) ToGetDevicesItemDetailOutput() GetDevicesItemDetailOutput {
	return o
}

func (o GetDevicesItemDetailOutput) ToGetDevicesItemDetailOutputWithContext(ctx context.Context) GetDevicesItemDetailOutput {
	return o
}

// Additional property name
func (o GetDevicesItemDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItemDetail) string { return v.Name }).(pulumi.StringOutput)
}

// Additional property value
func (o GetDevicesItemDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesItemDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetDevicesItemDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesItemDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesItemDetail)(nil)).Elem()
}

func (o GetDevicesItemDetailArrayOutput) ToGetDevicesItemDetailArrayOutput() GetDevicesItemDetailArrayOutput {
	return o
}

func (o GetDevicesItemDetailArrayOutput) ToGetDevicesItemDetailArrayOutputWithContext(ctx context.Context) GetDevicesItemDetailArrayOutput {
	return o
}

func (o GetDevicesItemDetailArrayOutput) Index(i pulumi.IntInput) GetDevicesItemDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesItemDetail {
		return vs[0].([]GetDevicesItemDetail)[vs[1].(int)]
	}).(GetDevicesItemDetailOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItem struct {
	// The device MAC address.
	Mac string `pulumi:"mac"`
	// The device name.
	Name string `pulumi:"name"`
	// Network info.
	Network GetDevicesPowerModulesStatusesByDeviceItemNetwork `pulumi:"network"`
	// Device product type.
	ProductType string `pulumi:"productType"`
	// The device serial number.
	Serial string `pulumi:"serial"`
	// Information for the device's AC power supplies.
	Slots []GetDevicesPowerModulesStatusesByDeviceItemSlot `pulumi:"slots"`
	// List of custom tags for the device.
	Tags []string `pulumi:"tags"`
}

// GetDevicesPowerModulesStatusesByDeviceItemInput is an input type that accepts GetDevicesPowerModulesStatusesByDeviceItemArgs and GetDevicesPowerModulesStatusesByDeviceItemOutput values.
// You can construct a concrete instance of `GetDevicesPowerModulesStatusesByDeviceItemInput` via:
//
//	GetDevicesPowerModulesStatusesByDeviceItemArgs{...}
type GetDevicesPowerModulesStatusesByDeviceItemInput interface {
	pulumi.Input

	ToGetDevicesPowerModulesStatusesByDeviceItemOutput() GetDevicesPowerModulesStatusesByDeviceItemOutput
	ToGetDevicesPowerModulesStatusesByDeviceItemOutputWithContext(context.Context) GetDevicesPowerModulesStatusesByDeviceItemOutput
}

type GetDevicesPowerModulesStatusesByDeviceItemArgs struct {
	// The device MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
	// The device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network info.
	Network GetDevicesPowerModulesStatusesByDeviceItemNetworkInput `pulumi:"network"`
	// Device product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The device serial number.
	Serial pulumi.StringInput `pulumi:"serial"`
	// Information for the device's AC power supplies.
	Slots GetDevicesPowerModulesStatusesByDeviceItemSlotArrayInput `pulumi:"slots"`
	// List of custom tags for the device.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDevicesPowerModulesStatusesByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItem)(nil)).Elem()
}

func (i GetDevicesPowerModulesStatusesByDeviceItemArgs) ToGetDevicesPowerModulesStatusesByDeviceItemOutput() GetDevicesPowerModulesStatusesByDeviceItemOutput {
	return i.ToGetDevicesPowerModulesStatusesByDeviceItemOutputWithContext(context.Background())
}

func (i GetDevicesPowerModulesStatusesByDeviceItemArgs) ToGetDevicesPowerModulesStatusesByDeviceItemOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesPowerModulesStatusesByDeviceItemOutput)
}

// GetDevicesPowerModulesStatusesByDeviceItemArrayInput is an input type that accepts GetDevicesPowerModulesStatusesByDeviceItemArray and GetDevicesPowerModulesStatusesByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesPowerModulesStatusesByDeviceItemArrayInput` via:
//
//	GetDevicesPowerModulesStatusesByDeviceItemArray{ GetDevicesPowerModulesStatusesByDeviceItemArgs{...} }
type GetDevicesPowerModulesStatusesByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemArrayOutput
	ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutputWithContext(context.Context) GetDevicesPowerModulesStatusesByDeviceItemArrayOutput
}

type GetDevicesPowerModulesStatusesByDeviceItemArray []GetDevicesPowerModulesStatusesByDeviceItemInput

func (GetDevicesPowerModulesStatusesByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesPowerModulesStatusesByDeviceItem)(nil)).Elem()
}

func (i GetDevicesPowerModulesStatusesByDeviceItemArray) ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemArrayOutput {
	return i.ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesPowerModulesStatusesByDeviceItemArray) ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesPowerModulesStatusesByDeviceItemArrayOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetDevicesPowerModulesStatusesByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItem)(nil)).Elem()
}

func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) ToGetDevicesPowerModulesStatusesByDeviceItemOutput() GetDevicesPowerModulesStatusesByDeviceItemOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) ToGetDevicesPowerModulesStatusesByDeviceItemOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemOutput {
	return o
}

// The device MAC address.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) string { return v.Mac }).(pulumi.StringOutput)
}

// The device name.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Network() GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) GetDevicesPowerModulesStatusesByDeviceItemNetwork {
		return v.Network
	}).(GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput)
}

// Device product type.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// The device serial number.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Information for the device's AC power supplies.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Slots() GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) []GetDevicesPowerModulesStatusesByDeviceItemSlot {
		return v.Slots
	}).(GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput)
}

// List of custom tags for the device.
func (o GetDevicesPowerModulesStatusesByDeviceItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesPowerModulesStatusesByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesPowerModulesStatusesByDeviceItem)(nil)).Elem()
}

func (o GetDevicesPowerModulesStatusesByDeviceItemArrayOutput) ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemArrayOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemArrayOutput) ToGetDevicesPowerModulesStatusesByDeviceItemArrayOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemArrayOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetDevicesPowerModulesStatusesByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesPowerModulesStatusesByDeviceItem {
		return vs[0].([]GetDevicesPowerModulesStatusesByDeviceItem)[vs[1].(int)]
	}).(GetDevicesPowerModulesStatusesByDeviceItemOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemNetwork struct {
	// ID for the network that the device is associated with.
	Id string `pulumi:"id"`
}

// GetDevicesPowerModulesStatusesByDeviceItemNetworkInput is an input type that accepts GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs and GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesPowerModulesStatusesByDeviceItemNetworkInput` via:
//
//	GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs{...}
type GetDevicesPowerModulesStatusesByDeviceItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutput() GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput
	ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutputWithContext(context.Context) GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput
}

type GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs struct {
	// ID for the network that the device is associated with.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemNetwork)(nil)).Elem()
}

func (i GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs) ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutput() GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput {
	return i.ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs) ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemNetwork)(nil)).Elem()
}

func (o GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput) ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutput() GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput) ToGetDevicesPowerModulesStatusesByDeviceItemNetworkOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput {
	return o
}

// ID for the network that the device is associated with.
func (o GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemSlot struct {
	// The power supply unit model.
	Model string `pulumi:"model"`
	// Which slot the AC power supply occupies. Possible values are: 0, 1, 2.
	Number int `pulumi:"number"`
	// The power supply unit serial number.
	Serial string `pulumi:"serial"`
	// Status of the power supply unit. Possible values are: connected, not connected, powering.
	Status string `pulumi:"status"`
}

// GetDevicesPowerModulesStatusesByDeviceItemSlotInput is an input type that accepts GetDevicesPowerModulesStatusesByDeviceItemSlotArgs and GetDevicesPowerModulesStatusesByDeviceItemSlotOutput values.
// You can construct a concrete instance of `GetDevicesPowerModulesStatusesByDeviceItemSlotInput` via:
//
//	GetDevicesPowerModulesStatusesByDeviceItemSlotArgs{...}
type GetDevicesPowerModulesStatusesByDeviceItemSlotInput interface {
	pulumi.Input

	ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotOutput
	ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutputWithContext(context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotOutput
}

type GetDevicesPowerModulesStatusesByDeviceItemSlotArgs struct {
	// The power supply unit model.
	Model pulumi.StringInput `pulumi:"model"`
	// Which slot the AC power supply occupies. Possible values are: 0, 1, 2.
	Number pulumi.IntInput `pulumi:"number"`
	// The power supply unit serial number.
	Serial pulumi.StringInput `pulumi:"serial"`
	// Status of the power supply unit. Possible values are: connected, not connected, powering.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDevicesPowerModulesStatusesByDeviceItemSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemSlot)(nil)).Elem()
}

func (i GetDevicesPowerModulesStatusesByDeviceItemSlotArgs) ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotOutput {
	return i.ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutputWithContext(context.Background())
}

func (i GetDevicesPowerModulesStatusesByDeviceItemSlotArgs) ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesPowerModulesStatusesByDeviceItemSlotOutput)
}

// GetDevicesPowerModulesStatusesByDeviceItemSlotArrayInput is an input type that accepts GetDevicesPowerModulesStatusesByDeviceItemSlotArray and GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput values.
// You can construct a concrete instance of `GetDevicesPowerModulesStatusesByDeviceItemSlotArrayInput` via:
//
//	GetDevicesPowerModulesStatusesByDeviceItemSlotArray{ GetDevicesPowerModulesStatusesByDeviceItemSlotArgs{...} }
type GetDevicesPowerModulesStatusesByDeviceItemSlotArrayInput interface {
	pulumi.Input

	ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput
	ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutputWithContext(context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput
}

type GetDevicesPowerModulesStatusesByDeviceItemSlotArray []GetDevicesPowerModulesStatusesByDeviceItemSlotInput

func (GetDevicesPowerModulesStatusesByDeviceItemSlotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesPowerModulesStatusesByDeviceItemSlot)(nil)).Elem()
}

func (i GetDevicesPowerModulesStatusesByDeviceItemSlotArray) ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput {
	return i.ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutputWithContext(context.Background())
}

func (i GetDevicesPowerModulesStatusesByDeviceItemSlotArray) ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemSlotOutput struct{ *pulumi.OutputState }

func (GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemSlot)(nil)).Elem()
}

func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) ToGetDevicesPowerModulesStatusesByDeviceItemSlotOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotOutput {
	return o
}

// The power supply unit model.
func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItemSlot) string { return v.Model }).(pulumi.StringOutput)
}

// Which slot the AC power supply occupies. Possible values are: 0, 1, 2.
func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItemSlot) int { return v.Number }).(pulumi.IntOutput)
}

// The power supply unit serial number.
func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItemSlot) string { return v.Serial }).(pulumi.StringOutput)
}

// Status of the power supply unit. Possible values are: connected, not connected, powering.
func (o GetDevicesPowerModulesStatusesByDeviceItemSlotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesPowerModulesStatusesByDeviceItemSlot) string { return v.Status }).(pulumi.StringOutput)
}

type GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesPowerModulesStatusesByDeviceItemSlot)(nil)).Elem()
}

func (o GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput) ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput() GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput) ToGetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutputWithContext(ctx context.Context) GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput {
	return o
}

func (o GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput) Index(i pulumi.IntInput) GetDevicesPowerModulesStatusesByDeviceItemSlotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesPowerModulesStatusesByDeviceItemSlot {
		return vs[0].([]GetDevicesPowerModulesStatusesByDeviceItemSlot)[vs[1].(int)]
	}).(GetDevicesPowerModulesStatusesByDeviceItemSlotOutput)
}

type GetDevicesProvisioningStatusesItem struct {
	// The device MAC address.
	Mac string `pulumi:"mac"`
	// The device name.
	Name string `pulumi:"name"`
	// Network info.
	Network GetDevicesProvisioningStatusesItemNetwork `pulumi:"network"`
	// Device product type.
	ProductType string `pulumi:"productType"`
	// The device serial number.
	Serial string `pulumi:"serial"`
	// The device provisioning status. Possible statuses: unprovisioned, incomplete, complete.
	Status string `pulumi:"status"`
	// List of custom tags for the device.
	Tags []string `pulumi:"tags"`
}

// GetDevicesProvisioningStatusesItemInput is an input type that accepts GetDevicesProvisioningStatusesItemArgs and GetDevicesProvisioningStatusesItemOutput values.
// You can construct a concrete instance of `GetDevicesProvisioningStatusesItemInput` via:
//
//	GetDevicesProvisioningStatusesItemArgs{...}
type GetDevicesProvisioningStatusesItemInput interface {
	pulumi.Input

	ToGetDevicesProvisioningStatusesItemOutput() GetDevicesProvisioningStatusesItemOutput
	ToGetDevicesProvisioningStatusesItemOutputWithContext(context.Context) GetDevicesProvisioningStatusesItemOutput
}

type GetDevicesProvisioningStatusesItemArgs struct {
	// The device MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
	// The device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network info.
	Network GetDevicesProvisioningStatusesItemNetworkInput `pulumi:"network"`
	// Device product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The device serial number.
	Serial pulumi.StringInput `pulumi:"serial"`
	// The device provisioning status. Possible statuses: unprovisioned, incomplete, complete.
	Status pulumi.StringInput `pulumi:"status"`
	// List of custom tags for the device.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDevicesProvisioningStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesProvisioningStatusesItem)(nil)).Elem()
}

func (i GetDevicesProvisioningStatusesItemArgs) ToGetDevicesProvisioningStatusesItemOutput() GetDevicesProvisioningStatusesItemOutput {
	return i.ToGetDevicesProvisioningStatusesItemOutputWithContext(context.Background())
}

func (i GetDevicesProvisioningStatusesItemArgs) ToGetDevicesProvisioningStatusesItemOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesProvisioningStatusesItemOutput)
}

// GetDevicesProvisioningStatusesItemArrayInput is an input type that accepts GetDevicesProvisioningStatusesItemArray and GetDevicesProvisioningStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesProvisioningStatusesItemArrayInput` via:
//
//	GetDevicesProvisioningStatusesItemArray{ GetDevicesProvisioningStatusesItemArgs{...} }
type GetDevicesProvisioningStatusesItemArrayInput interface {
	pulumi.Input

	ToGetDevicesProvisioningStatusesItemArrayOutput() GetDevicesProvisioningStatusesItemArrayOutput
	ToGetDevicesProvisioningStatusesItemArrayOutputWithContext(context.Context) GetDevicesProvisioningStatusesItemArrayOutput
}

type GetDevicesProvisioningStatusesItemArray []GetDevicesProvisioningStatusesItemInput

func (GetDevicesProvisioningStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesProvisioningStatusesItem)(nil)).Elem()
}

func (i GetDevicesProvisioningStatusesItemArray) ToGetDevicesProvisioningStatusesItemArrayOutput() GetDevicesProvisioningStatusesItemArrayOutput {
	return i.ToGetDevicesProvisioningStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesProvisioningStatusesItemArray) ToGetDevicesProvisioningStatusesItemArrayOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesProvisioningStatusesItemArrayOutput)
}

type GetDevicesProvisioningStatusesItemOutput struct{ *pulumi.OutputState }

func (GetDevicesProvisioningStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesProvisioningStatusesItem)(nil)).Elem()
}

func (o GetDevicesProvisioningStatusesItemOutput) ToGetDevicesProvisioningStatusesItemOutput() GetDevicesProvisioningStatusesItemOutput {
	return o
}

func (o GetDevicesProvisioningStatusesItemOutput) ToGetDevicesProvisioningStatusesItemOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemOutput {
	return o
}

// The device MAC address.
func (o GetDevicesProvisioningStatusesItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) string { return v.Mac }).(pulumi.StringOutput)
}

// The device name.
func (o GetDevicesProvisioningStatusesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info.
func (o GetDevicesProvisioningStatusesItemOutput) Network() GetDevicesProvisioningStatusesItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) GetDevicesProvisioningStatusesItemNetwork { return v.Network }).(GetDevicesProvisioningStatusesItemNetworkOutput)
}

// Device product type.
func (o GetDevicesProvisioningStatusesItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// The device serial number.
func (o GetDevicesProvisioningStatusesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// The device provisioning status. Possible statuses: unprovisioned, incomplete, complete.
func (o GetDevicesProvisioningStatusesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) string { return v.Status }).(pulumi.StringOutput)
}

// List of custom tags for the device.
func (o GetDevicesProvisioningStatusesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDevicesProvisioningStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesProvisioningStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesProvisioningStatusesItem)(nil)).Elem()
}

func (o GetDevicesProvisioningStatusesItemArrayOutput) ToGetDevicesProvisioningStatusesItemArrayOutput() GetDevicesProvisioningStatusesItemArrayOutput {
	return o
}

func (o GetDevicesProvisioningStatusesItemArrayOutput) ToGetDevicesProvisioningStatusesItemArrayOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemArrayOutput {
	return o
}

func (o GetDevicesProvisioningStatusesItemArrayOutput) Index(i pulumi.IntInput) GetDevicesProvisioningStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesProvisioningStatusesItem {
		return vs[0].([]GetDevicesProvisioningStatusesItem)[vs[1].(int)]
	}).(GetDevicesProvisioningStatusesItemOutput)
}

type GetDevicesProvisioningStatusesItemNetwork struct {
	// ID for the network containing the device.
	Id string `pulumi:"id"`
}

// GetDevicesProvisioningStatusesItemNetworkInput is an input type that accepts GetDevicesProvisioningStatusesItemNetworkArgs and GetDevicesProvisioningStatusesItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesProvisioningStatusesItemNetworkInput` via:
//
//	GetDevicesProvisioningStatusesItemNetworkArgs{...}
type GetDevicesProvisioningStatusesItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesProvisioningStatusesItemNetworkOutput() GetDevicesProvisioningStatusesItemNetworkOutput
	ToGetDevicesProvisioningStatusesItemNetworkOutputWithContext(context.Context) GetDevicesProvisioningStatusesItemNetworkOutput
}

type GetDevicesProvisioningStatusesItemNetworkArgs struct {
	// ID for the network containing the device.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDevicesProvisioningStatusesItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesProvisioningStatusesItemNetwork)(nil)).Elem()
}

func (i GetDevicesProvisioningStatusesItemNetworkArgs) ToGetDevicesProvisioningStatusesItemNetworkOutput() GetDevicesProvisioningStatusesItemNetworkOutput {
	return i.ToGetDevicesProvisioningStatusesItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesProvisioningStatusesItemNetworkArgs) ToGetDevicesProvisioningStatusesItemNetworkOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesProvisioningStatusesItemNetworkOutput)
}

type GetDevicesProvisioningStatusesItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesProvisioningStatusesItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesProvisioningStatusesItemNetwork)(nil)).Elem()
}

func (o GetDevicesProvisioningStatusesItemNetworkOutput) ToGetDevicesProvisioningStatusesItemNetworkOutput() GetDevicesProvisioningStatusesItemNetworkOutput {
	return o
}

func (o GetDevicesProvisioningStatusesItemNetworkOutput) ToGetDevicesProvisioningStatusesItemNetworkOutputWithContext(ctx context.Context) GetDevicesProvisioningStatusesItemNetworkOutput {
	return o
}

// ID for the network containing the device.
func (o GetDevicesProvisioningStatusesItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesProvisioningStatusesItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetDevicesStatusesItem struct {
	// Components
	Components GetDevicesStatusesItemComponents `pulumi:"components"`
	// IP Gateway
	Gateway string `pulumi:"gateway"`
	// IP Type
	IpType string `pulumi:"ipType"`
	// LAN IP Address
	LanIp string `pulumi:"lanIp"`
	// Device Last Reported Location
	LastReportedAt string `pulumi:"lastReportedAt"`
	// MAC Address
	Mac string `pulumi:"mac"`
	// Model
	Model string `pulumi:"model"`
	// Device Name
	Name string `pulumi:"name"`
	// Network ID
	NetworkId string `pulumi:"networkId"`
	// Primary DNS
	PrimaryDns string `pulumi:"primaryDns"`
	// Product Type
	ProductType string `pulumi:"productType"`
	// Public IP Address
	PublicIp string `pulumi:"publicIp"`
	// Secondary DNS
	SecondaryDns string `pulumi:"secondaryDns"`
	// Device Serial Number
	Serial string `pulumi:"serial"`
	// Device Status
	Status string `pulumi:"status"`
	// Tags
	Tags []string `pulumi:"tags"`
}

// GetDevicesStatusesItemInput is an input type that accepts GetDevicesStatusesItemArgs and GetDevicesStatusesItemOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemInput` via:
//
//	GetDevicesStatusesItemArgs{...}
type GetDevicesStatusesItemInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemOutput() GetDevicesStatusesItemOutput
	ToGetDevicesStatusesItemOutputWithContext(context.Context) GetDevicesStatusesItemOutput
}

type GetDevicesStatusesItemArgs struct {
	// Components
	Components GetDevicesStatusesItemComponentsInput `pulumi:"components"`
	// IP Gateway
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IP Type
	IpType pulumi.StringInput `pulumi:"ipType"`
	// LAN IP Address
	LanIp pulumi.StringInput `pulumi:"lanIp"`
	// Device Last Reported Location
	LastReportedAt pulumi.StringInput `pulumi:"lastReportedAt"`
	// MAC Address
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model
	Model pulumi.StringInput `pulumi:"model"`
	// Device Name
	Name pulumi.StringInput `pulumi:"name"`
	// Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Primary DNS
	PrimaryDns pulumi.StringInput `pulumi:"primaryDns"`
	// Product Type
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Public IP Address
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Secondary DNS
	SecondaryDns pulumi.StringInput `pulumi:"secondaryDns"`
	// Device Serial Number
	Serial pulumi.StringInput `pulumi:"serial"`
	// Device Status
	Status pulumi.StringInput `pulumi:"status"`
	// Tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDevicesStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItem)(nil)).Elem()
}

func (i GetDevicesStatusesItemArgs) ToGetDevicesStatusesItemOutput() GetDevicesStatusesItemOutput {
	return i.ToGetDevicesStatusesItemOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemArgs) ToGetDevicesStatusesItemOutputWithContext(ctx context.Context) GetDevicesStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemOutput)
}

// GetDevicesStatusesItemArrayInput is an input type that accepts GetDevicesStatusesItemArray and GetDevicesStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemArrayInput` via:
//
//	GetDevicesStatusesItemArray{ GetDevicesStatusesItemArgs{...} }
type GetDevicesStatusesItemArrayInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemArrayOutput() GetDevicesStatusesItemArrayOutput
	ToGetDevicesStatusesItemArrayOutputWithContext(context.Context) GetDevicesStatusesItemArrayOutput
}

type GetDevicesStatusesItemArray []GetDevicesStatusesItemInput

func (GetDevicesStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesStatusesItem)(nil)).Elem()
}

func (i GetDevicesStatusesItemArray) ToGetDevicesStatusesItemArrayOutput() GetDevicesStatusesItemArrayOutput {
	return i.ToGetDevicesStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemArray) ToGetDevicesStatusesItemArrayOutputWithContext(ctx context.Context) GetDevicesStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemArrayOutput)
}

type GetDevicesStatusesItemOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItem)(nil)).Elem()
}

func (o GetDevicesStatusesItemOutput) ToGetDevicesStatusesItemOutput() GetDevicesStatusesItemOutput {
	return o
}

func (o GetDevicesStatusesItemOutput) ToGetDevicesStatusesItemOutputWithContext(ctx context.Context) GetDevicesStatusesItemOutput {
	return o
}

// Components
func (o GetDevicesStatusesItemOutput) Components() GetDevicesStatusesItemComponentsOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) GetDevicesStatusesItemComponents { return v.Components }).(GetDevicesStatusesItemComponentsOutput)
}

// IP Gateway
func (o GetDevicesStatusesItemOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Gateway }).(pulumi.StringOutput)
}

// IP Type
func (o GetDevicesStatusesItemOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.IpType }).(pulumi.StringOutput)
}

// LAN IP Address
func (o GetDevicesStatusesItemOutput) LanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.LanIp }).(pulumi.StringOutput)
}

// Device Last Reported Location
func (o GetDevicesStatusesItemOutput) LastReportedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.LastReportedAt }).(pulumi.StringOutput)
}

// MAC Address
func (o GetDevicesStatusesItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model
func (o GetDevicesStatusesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Device Name
func (o GetDevicesStatusesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network ID
func (o GetDevicesStatusesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Primary DNS
func (o GetDevicesStatusesItemOutput) PrimaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.PrimaryDns }).(pulumi.StringOutput)
}

// Product Type
func (o GetDevicesStatusesItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// Public IP Address
func (o GetDevicesStatusesItemOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Secondary DNS
func (o GetDevicesStatusesItemOutput) SecondaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.SecondaryDns }).(pulumi.StringOutput)
}

// Device Serial Number
func (o GetDevicesStatusesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Device Status
func (o GetDevicesStatusesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) string { return v.Status }).(pulumi.StringOutput)
}

// Tags
func (o GetDevicesStatusesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDevicesStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesStatusesItem)(nil)).Elem()
}

func (o GetDevicesStatusesItemArrayOutput) ToGetDevicesStatusesItemArrayOutput() GetDevicesStatusesItemArrayOutput {
	return o
}

func (o GetDevicesStatusesItemArrayOutput) ToGetDevicesStatusesItemArrayOutputWithContext(ctx context.Context) GetDevicesStatusesItemArrayOutput {
	return o
}

func (o GetDevicesStatusesItemArrayOutput) Index(i pulumi.IntInput) GetDevicesStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesStatusesItem {
		return vs[0].([]GetDevicesStatusesItem)[vs[1].(int)]
	}).(GetDevicesStatusesItemOutput)
}

type GetDevicesStatusesItemComponents struct {
	// Power Supplies
	PowerSupplies []GetDevicesStatusesItemComponentsPowerSupply `pulumi:"powerSupplies"`
}

// GetDevicesStatusesItemComponentsInput is an input type that accepts GetDevicesStatusesItemComponentsArgs and GetDevicesStatusesItemComponentsOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemComponentsInput` via:
//
//	GetDevicesStatusesItemComponentsArgs{...}
type GetDevicesStatusesItemComponentsInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemComponentsOutput() GetDevicesStatusesItemComponentsOutput
	ToGetDevicesStatusesItemComponentsOutputWithContext(context.Context) GetDevicesStatusesItemComponentsOutput
}

type GetDevicesStatusesItemComponentsArgs struct {
	// Power Supplies
	PowerSupplies GetDevicesStatusesItemComponentsPowerSupplyArrayInput `pulumi:"powerSupplies"`
}

func (GetDevicesStatusesItemComponentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponents)(nil)).Elem()
}

func (i GetDevicesStatusesItemComponentsArgs) ToGetDevicesStatusesItemComponentsOutput() GetDevicesStatusesItemComponentsOutput {
	return i.ToGetDevicesStatusesItemComponentsOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemComponentsArgs) ToGetDevicesStatusesItemComponentsOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemComponentsOutput)
}

type GetDevicesStatusesItemComponentsOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemComponentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponents)(nil)).Elem()
}

func (o GetDevicesStatusesItemComponentsOutput) ToGetDevicesStatusesItemComponentsOutput() GetDevicesStatusesItemComponentsOutput {
	return o
}

func (o GetDevicesStatusesItemComponentsOutput) ToGetDevicesStatusesItemComponentsOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsOutput {
	return o
}

// Power Supplies
func (o GetDevicesStatusesItemComponentsOutput) PowerSupplies() GetDevicesStatusesItemComponentsPowerSupplyArrayOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponents) []GetDevicesStatusesItemComponentsPowerSupply {
		return v.PowerSupplies
	}).(GetDevicesStatusesItemComponentsPowerSupplyArrayOutput)
}

type GetDevicesStatusesItemComponentsPowerSupply struct {
	// Model of the power supply
	Model string `pulumi:"model"`
	// PoE info of the power supply
	Poe GetDevicesStatusesItemComponentsPowerSupplyPoe `pulumi:"poe"`
	// Serial of the power supply
	Serial string `pulumi:"serial"`
	// Slot the power supply is in
	Slot int `pulumi:"slot"`
	// Status of the power supply
	Status string `pulumi:"status"`
}

// GetDevicesStatusesItemComponentsPowerSupplyInput is an input type that accepts GetDevicesStatusesItemComponentsPowerSupplyArgs and GetDevicesStatusesItemComponentsPowerSupplyOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemComponentsPowerSupplyInput` via:
//
//	GetDevicesStatusesItemComponentsPowerSupplyArgs{...}
type GetDevicesStatusesItemComponentsPowerSupplyInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemComponentsPowerSupplyOutput() GetDevicesStatusesItemComponentsPowerSupplyOutput
	ToGetDevicesStatusesItemComponentsPowerSupplyOutputWithContext(context.Context) GetDevicesStatusesItemComponentsPowerSupplyOutput
}

type GetDevicesStatusesItemComponentsPowerSupplyArgs struct {
	// Model of the power supply
	Model pulumi.StringInput `pulumi:"model"`
	// PoE info of the power supply
	Poe GetDevicesStatusesItemComponentsPowerSupplyPoeInput `pulumi:"poe"`
	// Serial of the power supply
	Serial pulumi.StringInput `pulumi:"serial"`
	// Slot the power supply is in
	Slot pulumi.IntInput `pulumi:"slot"`
	// Status of the power supply
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDevicesStatusesItemComponentsPowerSupplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupply)(nil)).Elem()
}

func (i GetDevicesStatusesItemComponentsPowerSupplyArgs) ToGetDevicesStatusesItemComponentsPowerSupplyOutput() GetDevicesStatusesItemComponentsPowerSupplyOutput {
	return i.ToGetDevicesStatusesItemComponentsPowerSupplyOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemComponentsPowerSupplyArgs) ToGetDevicesStatusesItemComponentsPowerSupplyOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemComponentsPowerSupplyOutput)
}

// GetDevicesStatusesItemComponentsPowerSupplyArrayInput is an input type that accepts GetDevicesStatusesItemComponentsPowerSupplyArray and GetDevicesStatusesItemComponentsPowerSupplyArrayOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemComponentsPowerSupplyArrayInput` via:
//
//	GetDevicesStatusesItemComponentsPowerSupplyArray{ GetDevicesStatusesItemComponentsPowerSupplyArgs{...} }
type GetDevicesStatusesItemComponentsPowerSupplyArrayInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutput() GetDevicesStatusesItemComponentsPowerSupplyArrayOutput
	ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutputWithContext(context.Context) GetDevicesStatusesItemComponentsPowerSupplyArrayOutput
}

type GetDevicesStatusesItemComponentsPowerSupplyArray []GetDevicesStatusesItemComponentsPowerSupplyInput

func (GetDevicesStatusesItemComponentsPowerSupplyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesStatusesItemComponentsPowerSupply)(nil)).Elem()
}

func (i GetDevicesStatusesItemComponentsPowerSupplyArray) ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutput() GetDevicesStatusesItemComponentsPowerSupplyArrayOutput {
	return i.ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemComponentsPowerSupplyArray) ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemComponentsPowerSupplyArrayOutput)
}

type GetDevicesStatusesItemComponentsPowerSupplyOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemComponentsPowerSupplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupply)(nil)).Elem()
}

func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) ToGetDevicesStatusesItemComponentsPowerSupplyOutput() GetDevicesStatusesItemComponentsPowerSupplyOutput {
	return o
}

func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) ToGetDevicesStatusesItemComponentsPowerSupplyOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyOutput {
	return o
}

// Model of the power supply
func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupply) string { return v.Model }).(pulumi.StringOutput)
}

// PoE info of the power supply
func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) Poe() GetDevicesStatusesItemComponentsPowerSupplyPoeOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupply) GetDevicesStatusesItemComponentsPowerSupplyPoe {
		return v.Poe
	}).(GetDevicesStatusesItemComponentsPowerSupplyPoeOutput)
}

// Serial of the power supply
func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupply) string { return v.Serial }).(pulumi.StringOutput)
}

// Slot the power supply is in
func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) Slot() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupply) int { return v.Slot }).(pulumi.IntOutput)
}

// Status of the power supply
func (o GetDevicesStatusesItemComponentsPowerSupplyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupply) string { return v.Status }).(pulumi.StringOutput)
}

type GetDevicesStatusesItemComponentsPowerSupplyArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemComponentsPowerSupplyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesStatusesItemComponentsPowerSupply)(nil)).Elem()
}

func (o GetDevicesStatusesItemComponentsPowerSupplyArrayOutput) ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutput() GetDevicesStatusesItemComponentsPowerSupplyArrayOutput {
	return o
}

func (o GetDevicesStatusesItemComponentsPowerSupplyArrayOutput) ToGetDevicesStatusesItemComponentsPowerSupplyArrayOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyArrayOutput {
	return o
}

func (o GetDevicesStatusesItemComponentsPowerSupplyArrayOutput) Index(i pulumi.IntInput) GetDevicesStatusesItemComponentsPowerSupplyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesStatusesItemComponentsPowerSupply {
		return vs[0].([]GetDevicesStatusesItemComponentsPowerSupply)[vs[1].(int)]
	}).(GetDevicesStatusesItemComponentsPowerSupplyOutput)
}

type GetDevicesStatusesItemComponentsPowerSupplyPoe struct {
	// Maximum PoE this power supply can provide when connected to the current switch model
	Maximum int `pulumi:"maximum"`
	// Unit of the PoE maximum
	Unit string `pulumi:"unit"`
}

// GetDevicesStatusesItemComponentsPowerSupplyPoeInput is an input type that accepts GetDevicesStatusesItemComponentsPowerSupplyPoeArgs and GetDevicesStatusesItemComponentsPowerSupplyPoeOutput values.
// You can construct a concrete instance of `GetDevicesStatusesItemComponentsPowerSupplyPoeInput` via:
//
//	GetDevicesStatusesItemComponentsPowerSupplyPoeArgs{...}
type GetDevicesStatusesItemComponentsPowerSupplyPoeInput interface {
	pulumi.Input

	ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutput() GetDevicesStatusesItemComponentsPowerSupplyPoeOutput
	ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutputWithContext(context.Context) GetDevicesStatusesItemComponentsPowerSupplyPoeOutput
}

type GetDevicesStatusesItemComponentsPowerSupplyPoeArgs struct {
	// Maximum PoE this power supply can provide when connected to the current switch model
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// Unit of the PoE maximum
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetDevicesStatusesItemComponentsPowerSupplyPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupplyPoe)(nil)).Elem()
}

func (i GetDevicesStatusesItemComponentsPowerSupplyPoeArgs) ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutput() GetDevicesStatusesItemComponentsPowerSupplyPoeOutput {
	return i.ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutputWithContext(context.Background())
}

func (i GetDevicesStatusesItemComponentsPowerSupplyPoeArgs) ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesItemComponentsPowerSupplyPoeOutput)
}

type GetDevicesStatusesItemComponentsPowerSupplyPoeOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesItemComponentsPowerSupplyPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupplyPoe)(nil)).Elem()
}

func (o GetDevicesStatusesItemComponentsPowerSupplyPoeOutput) ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutput() GetDevicesStatusesItemComponentsPowerSupplyPoeOutput {
	return o
}

func (o GetDevicesStatusesItemComponentsPowerSupplyPoeOutput) ToGetDevicesStatusesItemComponentsPowerSupplyPoeOutputWithContext(ctx context.Context) GetDevicesStatusesItemComponentsPowerSupplyPoeOutput {
	return o
}

// Maximum PoE this power supply can provide when connected to the current switch model
func (o GetDevicesStatusesItemComponentsPowerSupplyPoeOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupplyPoe) int { return v.Maximum }).(pulumi.IntOutput)
}

// Unit of the PoE maximum
func (o GetDevicesStatusesItemComponentsPowerSupplyPoeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesStatusesItemComponentsPowerSupplyPoe) string { return v.Unit }).(pulumi.StringOutput)
}

type GetDevicesStatusesOverviewItem struct {
	// counts
	Counts GetDevicesStatusesOverviewItemCounts `pulumi:"counts"`
}

// GetDevicesStatusesOverviewItemInput is an input type that accepts GetDevicesStatusesOverviewItemArgs and GetDevicesStatusesOverviewItemOutput values.
// You can construct a concrete instance of `GetDevicesStatusesOverviewItemInput` via:
//
//	GetDevicesStatusesOverviewItemArgs{...}
type GetDevicesStatusesOverviewItemInput interface {
	pulumi.Input

	ToGetDevicesStatusesOverviewItemOutput() GetDevicesStatusesOverviewItemOutput
	ToGetDevicesStatusesOverviewItemOutputWithContext(context.Context) GetDevicesStatusesOverviewItemOutput
}

type GetDevicesStatusesOverviewItemArgs struct {
	// counts
	Counts GetDevicesStatusesOverviewItemCountsInput `pulumi:"counts"`
}

func (GetDevicesStatusesOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItem)(nil)).Elem()
}

func (i GetDevicesStatusesOverviewItemArgs) ToGetDevicesStatusesOverviewItemOutput() GetDevicesStatusesOverviewItemOutput {
	return i.ToGetDevicesStatusesOverviewItemOutputWithContext(context.Background())
}

func (i GetDevicesStatusesOverviewItemArgs) ToGetDevicesStatusesOverviewItemOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesOverviewItemOutput)
}

type GetDevicesStatusesOverviewItemOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItem)(nil)).Elem()
}

func (o GetDevicesStatusesOverviewItemOutput) ToGetDevicesStatusesOverviewItemOutput() GetDevicesStatusesOverviewItemOutput {
	return o
}

func (o GetDevicesStatusesOverviewItemOutput) ToGetDevicesStatusesOverviewItemOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemOutput {
	return o
}

// counts
func (o GetDevicesStatusesOverviewItemOutput) Counts() GetDevicesStatusesOverviewItemCountsOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItem) GetDevicesStatusesOverviewItemCounts { return v.Counts }).(GetDevicesStatusesOverviewItemCountsOutput)
}

type GetDevicesStatusesOverviewItemCounts struct {
	// byStatus
	ByStatus GetDevicesStatusesOverviewItemCountsByStatus `pulumi:"byStatus"`
}

// GetDevicesStatusesOverviewItemCountsInput is an input type that accepts GetDevicesStatusesOverviewItemCountsArgs and GetDevicesStatusesOverviewItemCountsOutput values.
// You can construct a concrete instance of `GetDevicesStatusesOverviewItemCountsInput` via:
//
//	GetDevicesStatusesOverviewItemCountsArgs{...}
type GetDevicesStatusesOverviewItemCountsInput interface {
	pulumi.Input

	ToGetDevicesStatusesOverviewItemCountsOutput() GetDevicesStatusesOverviewItemCountsOutput
	ToGetDevicesStatusesOverviewItemCountsOutputWithContext(context.Context) GetDevicesStatusesOverviewItemCountsOutput
}

type GetDevicesStatusesOverviewItemCountsArgs struct {
	// byStatus
	ByStatus GetDevicesStatusesOverviewItemCountsByStatusInput `pulumi:"byStatus"`
}

func (GetDevicesStatusesOverviewItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItemCounts)(nil)).Elem()
}

func (i GetDevicesStatusesOverviewItemCountsArgs) ToGetDevicesStatusesOverviewItemCountsOutput() GetDevicesStatusesOverviewItemCountsOutput {
	return i.ToGetDevicesStatusesOverviewItemCountsOutputWithContext(context.Background())
}

func (i GetDevicesStatusesOverviewItemCountsArgs) ToGetDevicesStatusesOverviewItemCountsOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesOverviewItemCountsOutput)
}

type GetDevicesStatusesOverviewItemCountsOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesOverviewItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItemCounts)(nil)).Elem()
}

func (o GetDevicesStatusesOverviewItemCountsOutput) ToGetDevicesStatusesOverviewItemCountsOutput() GetDevicesStatusesOverviewItemCountsOutput {
	return o
}

func (o GetDevicesStatusesOverviewItemCountsOutput) ToGetDevicesStatusesOverviewItemCountsOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemCountsOutput {
	return o
}

// byStatus
func (o GetDevicesStatusesOverviewItemCountsOutput) ByStatus() GetDevicesStatusesOverviewItemCountsByStatusOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItemCounts) GetDevicesStatusesOverviewItemCountsByStatus {
		return v.ByStatus
	}).(GetDevicesStatusesOverviewItemCountsByStatusOutput)
}

type GetDevicesStatusesOverviewItemCountsByStatus struct {
	// alerting count
	Alerting int `pulumi:"alerting"`
	// dormant count
	Dormant int `pulumi:"dormant"`
	// offline count
	Offline int `pulumi:"offline"`
	// online count
	Online int `pulumi:"online"`
}

// GetDevicesStatusesOverviewItemCountsByStatusInput is an input type that accepts GetDevicesStatusesOverviewItemCountsByStatusArgs and GetDevicesStatusesOverviewItemCountsByStatusOutput values.
// You can construct a concrete instance of `GetDevicesStatusesOverviewItemCountsByStatusInput` via:
//
//	GetDevicesStatusesOverviewItemCountsByStatusArgs{...}
type GetDevicesStatusesOverviewItemCountsByStatusInput interface {
	pulumi.Input

	ToGetDevicesStatusesOverviewItemCountsByStatusOutput() GetDevicesStatusesOverviewItemCountsByStatusOutput
	ToGetDevicesStatusesOverviewItemCountsByStatusOutputWithContext(context.Context) GetDevicesStatusesOverviewItemCountsByStatusOutput
}

type GetDevicesStatusesOverviewItemCountsByStatusArgs struct {
	// alerting count
	Alerting pulumi.IntInput `pulumi:"alerting"`
	// dormant count
	Dormant pulumi.IntInput `pulumi:"dormant"`
	// offline count
	Offline pulumi.IntInput `pulumi:"offline"`
	// online count
	Online pulumi.IntInput `pulumi:"online"`
}

func (GetDevicesStatusesOverviewItemCountsByStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItemCountsByStatus)(nil)).Elem()
}

func (i GetDevicesStatusesOverviewItemCountsByStatusArgs) ToGetDevicesStatusesOverviewItemCountsByStatusOutput() GetDevicesStatusesOverviewItemCountsByStatusOutput {
	return i.ToGetDevicesStatusesOverviewItemCountsByStatusOutputWithContext(context.Background())
}

func (i GetDevicesStatusesOverviewItemCountsByStatusArgs) ToGetDevicesStatusesOverviewItemCountsByStatusOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemCountsByStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesStatusesOverviewItemCountsByStatusOutput)
}

type GetDevicesStatusesOverviewItemCountsByStatusOutput struct{ *pulumi.OutputState }

func (GetDevicesStatusesOverviewItemCountsByStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesStatusesOverviewItemCountsByStatus)(nil)).Elem()
}

func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) ToGetDevicesStatusesOverviewItemCountsByStatusOutput() GetDevicesStatusesOverviewItemCountsByStatusOutput {
	return o
}

func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) ToGetDevicesStatusesOverviewItemCountsByStatusOutputWithContext(ctx context.Context) GetDevicesStatusesOverviewItemCountsByStatusOutput {
	return o
}

// alerting count
func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) Alerting() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItemCountsByStatus) int { return v.Alerting }).(pulumi.IntOutput)
}

// dormant count
func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) Dormant() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItemCountsByStatus) int { return v.Dormant }).(pulumi.IntOutput)
}

// offline count
func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) Offline() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItemCountsByStatus) int { return v.Offline }).(pulumi.IntOutput)
}

// online count
func (o GetDevicesStatusesOverviewItemCountsByStatusOutput) Online() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesStatusesOverviewItemCountsByStatus) int { return v.Online }).(pulumi.IntOutput)
}

type GetDevicesUplinksAddressesByDeviceItem struct {
	// The device MAC address.
	Mac string `pulumi:"mac"`
	// The device name.
	Name string `pulumi:"name"`
	// Network info.
	Network GetDevicesUplinksAddressesByDeviceItemNetwork `pulumi:"network"`
	// Device product type.
	ProductType string `pulumi:"productType"`
	// The device serial number.
	Serial string `pulumi:"serial"`
	// List of custom tags for the device.
	Tags []string `pulumi:"tags"`
	// List of device uplink addresses information.
	Uplinks []GetDevicesUplinksAddressesByDeviceItemUplink `pulumi:"uplinks"`
}

// GetDevicesUplinksAddressesByDeviceItemInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemArgs and GetDevicesUplinksAddressesByDeviceItemOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemArgs{...}
type GetDevicesUplinksAddressesByDeviceItemInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemOutput() GetDevicesUplinksAddressesByDeviceItemOutput
	ToGetDevicesUplinksAddressesByDeviceItemOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemOutput
}

type GetDevicesUplinksAddressesByDeviceItemArgs struct {
	// The device MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
	// The device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network info.
	Network GetDevicesUplinksAddressesByDeviceItemNetworkInput `pulumi:"network"`
	// Device product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The device serial number.
	Serial pulumi.StringInput `pulumi:"serial"`
	// List of custom tags for the device.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// List of device uplink addresses information.
	Uplinks GetDevicesUplinksAddressesByDeviceItemUplinkArrayInput `pulumi:"uplinks"`
}

func (GetDevicesUplinksAddressesByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItem)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemArgs) ToGetDevicesUplinksAddressesByDeviceItemOutput() GetDevicesUplinksAddressesByDeviceItemOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemArgs) ToGetDevicesUplinksAddressesByDeviceItemOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemOutput)
}

// GetDevicesUplinksAddressesByDeviceItemArrayInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemArray and GetDevicesUplinksAddressesByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemArrayInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemArray{ GetDevicesUplinksAddressesByDeviceItemArgs{...} }
type GetDevicesUplinksAddressesByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemArrayOutput() GetDevicesUplinksAddressesByDeviceItemArrayOutput
	ToGetDevicesUplinksAddressesByDeviceItemArrayOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemArrayOutput
}

type GetDevicesUplinksAddressesByDeviceItemArray []GetDevicesUplinksAddressesByDeviceItemInput

func (GetDevicesUplinksAddressesByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItem)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemArray) ToGetDevicesUplinksAddressesByDeviceItemArrayOutput() GetDevicesUplinksAddressesByDeviceItemArrayOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemArray) ToGetDevicesUplinksAddressesByDeviceItemArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemArrayOutput)
}

type GetDevicesUplinksAddressesByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItem)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemOutput) ToGetDevicesUplinksAddressesByDeviceItemOutput() GetDevicesUplinksAddressesByDeviceItemOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemOutput) ToGetDevicesUplinksAddressesByDeviceItemOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemOutput {
	return o
}

// The device MAC address.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) string { return v.Mac }).(pulumi.StringOutput)
}

// The device name.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Network() GetDevicesUplinksAddressesByDeviceItemNetworkOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) GetDevicesUplinksAddressesByDeviceItemNetwork {
		return v.Network
	}).(GetDevicesUplinksAddressesByDeviceItemNetworkOutput)
}

// Device product type.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// The device serial number.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

// List of custom tags for the device.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// List of device uplink addresses information.
func (o GetDevicesUplinksAddressesByDeviceItemOutput) Uplinks() GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItem) []GetDevicesUplinksAddressesByDeviceItemUplink {
		return v.Uplinks
	}).(GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput)
}

type GetDevicesUplinksAddressesByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItem)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemArrayOutput() GetDevicesUplinksAddressesByDeviceItemArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetDevicesUplinksAddressesByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesUplinksAddressesByDeviceItem {
		return vs[0].([]GetDevicesUplinksAddressesByDeviceItem)[vs[1].(int)]
	}).(GetDevicesUplinksAddressesByDeviceItemOutput)
}

type GetDevicesUplinksAddressesByDeviceItemNetwork struct {
	// ID for the network containing the device.
	Id string `pulumi:"id"`
}

// GetDevicesUplinksAddressesByDeviceItemNetworkInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemNetworkArgs and GetDevicesUplinksAddressesByDeviceItemNetworkOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemNetworkInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemNetworkArgs{...}
type GetDevicesUplinksAddressesByDeviceItemNetworkInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemNetworkOutput() GetDevicesUplinksAddressesByDeviceItemNetworkOutput
	ToGetDevicesUplinksAddressesByDeviceItemNetworkOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemNetworkOutput
}

type GetDevicesUplinksAddressesByDeviceItemNetworkArgs struct {
	// ID for the network containing the device.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDevicesUplinksAddressesByDeviceItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemNetwork)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemNetworkArgs) ToGetDevicesUplinksAddressesByDeviceItemNetworkOutput() GetDevicesUplinksAddressesByDeviceItemNetworkOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemNetworkOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemNetworkArgs) ToGetDevicesUplinksAddressesByDeviceItemNetworkOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemNetworkOutput)
}

type GetDevicesUplinksAddressesByDeviceItemNetworkOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemNetwork)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemNetworkOutput) ToGetDevicesUplinksAddressesByDeviceItemNetworkOutput() GetDevicesUplinksAddressesByDeviceItemNetworkOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemNetworkOutput) ToGetDevicesUplinksAddressesByDeviceItemNetworkOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemNetworkOutput {
	return o
}

// ID for the network containing the device.
func (o GetDevicesUplinksAddressesByDeviceItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplink struct {
	// Available addresses for the interface.
	Addresses []GetDevicesUplinksAddressesByDeviceItemUplinkAddress `pulumi:"addresses"`
	// Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
	Interface string `pulumi:"interface"`
}

// GetDevicesUplinksAddressesByDeviceItemUplinkInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemUplinkArgs and GetDevicesUplinksAddressesByDeviceItemUplinkOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemUplinkInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemUplinkArgs{...}
type GetDevicesUplinksAddressesByDeviceItemUplinkInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemUplinkOutput() GetDevicesUplinksAddressesByDeviceItemUplinkOutput
	ToGetDevicesUplinksAddressesByDeviceItemUplinkOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkOutput
}

type GetDevicesUplinksAddressesByDeviceItemUplinkArgs struct {
	// Available addresses for the interface.
	Addresses GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayInput `pulumi:"addresses"`
	// Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
	Interface pulumi.StringInput `pulumi:"interface"`
}

func (GetDevicesUplinksAddressesByDeviceItemUplinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplink)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkOutput() GetDevicesUplinksAddressesByDeviceItemUplinkOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemUplinkOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemUplinkOutput)
}

// GetDevicesUplinksAddressesByDeviceItemUplinkArrayInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemUplinkArray and GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemUplinkArrayInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemUplinkArray{ GetDevicesUplinksAddressesByDeviceItemUplinkArgs{...} }
type GetDevicesUplinksAddressesByDeviceItemUplinkArrayInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput
	ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput
}

type GetDevicesUplinksAddressesByDeviceItemUplinkArray []GetDevicesUplinksAddressesByDeviceItemUplinkInput

func (GetDevicesUplinksAddressesByDeviceItemUplinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItemUplink)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkArray) ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkArray) ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemUplinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplink)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkOutput() GetDevicesUplinksAddressesByDeviceItemUplinkOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkOutput {
	return o
}

// Available addresses for the interface.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkOutput) Addresses() GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplink) []GetDevicesUplinksAddressesByDeviceItemUplinkAddress {
		return v.Addresses
	}).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput)
}

// Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
func (o GetDevicesUplinksAddressesByDeviceItemUplinkOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplink) string { return v.Interface }).(pulumi.StringOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItemUplink)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput) Index(i pulumi.IntInput) GetDevicesUplinksAddressesByDeviceItemUplinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesUplinksAddressesByDeviceItemUplink {
		return vs[0].([]GetDevicesUplinksAddressesByDeviceItemUplink)[vs[1].(int)]
	}).(GetDevicesUplinksAddressesByDeviceItemUplinkOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddress struct {
	// Device uplink address.
	Address string `pulumi:"address"`
	// Indicates how the device uplink address is assigned. Available options are: static, dynamic.
	AssignmentMode string `pulumi:"assignmentMode"`
	// Device uplink gateway address.
	Gateway string `pulumi:"gateway"`
	// Type of address for the device uplink. Available options are: ipv4, ipv6.
	Protocol string `pulumi:"protocol"`
	// Public interface information.
	Public GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic `pulumi:"public"`
}

// GetDevicesUplinksAddressesByDeviceItemUplinkAddressInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs and GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemUplinkAddressInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs{...}
type GetDevicesUplinksAddressesByDeviceItemUplinkAddressInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput
	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs struct {
	// Device uplink address.
	Address pulumi.StringInput `pulumi:"address"`
	// Indicates how the device uplink address is assigned. Available options are: static, dynamic.
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// Device uplink gateway address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Type of address for the device uplink. Available options are: ipv4, ipv6.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Public interface information.
	Public GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicInput `pulumi:"public"`
}

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddress)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput)
}

// GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray and GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray{ GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs{...} }
type GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput
	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray []GetDevicesUplinksAddressesByDeviceItemUplinkAddressInput

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItemUplinkAddress)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddress)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput {
	return o
}

// Device uplink address.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddress) string { return v.Address }).(pulumi.StringOutput)
}

// Indicates how the device uplink address is assigned. Available options are: static, dynamic.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddress) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// Device uplink gateway address.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddress) string { return v.Gateway }).(pulumi.StringOutput)
}

// Type of address for the device uplink. Available options are: ipv4, ipv6.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddress) string { return v.Protocol }).(pulumi.StringOutput)
}

// Public interface information.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput) Public() GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddress) GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic {
		return v.Public
	}).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksAddressesByDeviceItemUplinkAddress)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput) Index(i pulumi.IntInput) GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesUplinksAddressesByDeviceItemUplinkAddress {
		return vs[0].([]GetDevicesUplinksAddressesByDeviceItemUplinkAddress)[vs[1].(int)]
	}).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic struct {
	// The device uplink public IP address.
	Address string `pulumi:"address"`
}

// GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicInput is an input type that accepts GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs and GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput values.
// You can construct a concrete instance of `GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicInput` via:
//
//	GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs{...}
type GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicInput interface {
	pulumi.Input

	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput
	ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutputWithContext(context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs struct {
	// The device uplink public IP address.
	Address pulumi.StringInput `pulumi:"address"`
}

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic)(nil)).Elem()
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput {
	return i.ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutputWithContext(context.Background())
}

func (i GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput)
}

type GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic)(nil)).Elem()
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput() GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput {
	return o
}

func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput) ToGetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutputWithContext(ctx context.Context) GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput {
	return o
}

// The device uplink public IP address.
func (o GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublic) string { return v.Address }).(pulumi.StringOutput)
}

type GetDevicesUplinksLossAndLatencyItem struct {
	// IP address of uplink
	Ip string `pulumi:"ip"`
	// Network ID
	NetworkId string `pulumi:"networkId"`
	// Serial of MX device
	Serial string `pulumi:"serial"`
	// Loss and latency timeseries data
	TimeSeries []GetDevicesUplinksLossAndLatencyItemTimeSeries `pulumi:"timeSeries"`
	// Uplink interface (wan1, wan2, or cellular)
	Uplink string `pulumi:"uplink"`
}

// GetDevicesUplinksLossAndLatencyItemInput is an input type that accepts GetDevicesUplinksLossAndLatencyItemArgs and GetDevicesUplinksLossAndLatencyItemOutput values.
// You can construct a concrete instance of `GetDevicesUplinksLossAndLatencyItemInput` via:
//
//	GetDevicesUplinksLossAndLatencyItemArgs{...}
type GetDevicesUplinksLossAndLatencyItemInput interface {
	pulumi.Input

	ToGetDevicesUplinksLossAndLatencyItemOutput() GetDevicesUplinksLossAndLatencyItemOutput
	ToGetDevicesUplinksLossAndLatencyItemOutputWithContext(context.Context) GetDevicesUplinksLossAndLatencyItemOutput
}

type GetDevicesUplinksLossAndLatencyItemArgs struct {
	// IP address of uplink
	Ip pulumi.StringInput `pulumi:"ip"`
	// Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Serial of MX device
	Serial pulumi.StringInput `pulumi:"serial"`
	// Loss and latency timeseries data
	TimeSeries GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayInput `pulumi:"timeSeries"`
	// Uplink interface (wan1, wan2, or cellular)
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetDevicesUplinksLossAndLatencyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItem)(nil)).Elem()
}

func (i GetDevicesUplinksLossAndLatencyItemArgs) ToGetDevicesUplinksLossAndLatencyItemOutput() GetDevicesUplinksLossAndLatencyItemOutput {
	return i.ToGetDevicesUplinksLossAndLatencyItemOutputWithContext(context.Background())
}

func (i GetDevicesUplinksLossAndLatencyItemArgs) ToGetDevicesUplinksLossAndLatencyItemOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksLossAndLatencyItemOutput)
}

// GetDevicesUplinksLossAndLatencyItemArrayInput is an input type that accepts GetDevicesUplinksLossAndLatencyItemArray and GetDevicesUplinksLossAndLatencyItemArrayOutput values.
// You can construct a concrete instance of `GetDevicesUplinksLossAndLatencyItemArrayInput` via:
//
//	GetDevicesUplinksLossAndLatencyItemArray{ GetDevicesUplinksLossAndLatencyItemArgs{...} }
type GetDevicesUplinksLossAndLatencyItemArrayInput interface {
	pulumi.Input

	ToGetDevicesUplinksLossAndLatencyItemArrayOutput() GetDevicesUplinksLossAndLatencyItemArrayOutput
	ToGetDevicesUplinksLossAndLatencyItemArrayOutputWithContext(context.Context) GetDevicesUplinksLossAndLatencyItemArrayOutput
}

type GetDevicesUplinksLossAndLatencyItemArray []GetDevicesUplinksLossAndLatencyItemInput

func (GetDevicesUplinksLossAndLatencyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksLossAndLatencyItem)(nil)).Elem()
}

func (i GetDevicesUplinksLossAndLatencyItemArray) ToGetDevicesUplinksLossAndLatencyItemArrayOutput() GetDevicesUplinksLossAndLatencyItemArrayOutput {
	return i.ToGetDevicesUplinksLossAndLatencyItemArrayOutputWithContext(context.Background())
}

func (i GetDevicesUplinksLossAndLatencyItemArray) ToGetDevicesUplinksLossAndLatencyItemArrayOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksLossAndLatencyItemArrayOutput)
}

type GetDevicesUplinksLossAndLatencyItemOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksLossAndLatencyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItem)(nil)).Elem()
}

func (o GetDevicesUplinksLossAndLatencyItemOutput) ToGetDevicesUplinksLossAndLatencyItemOutput() GetDevicesUplinksLossAndLatencyItemOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemOutput) ToGetDevicesUplinksLossAndLatencyItemOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemOutput {
	return o
}

// IP address of uplink
func (o GetDevicesUplinksLossAndLatencyItemOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItem) string { return v.Ip }).(pulumi.StringOutput)
}

// Network ID
func (o GetDevicesUplinksLossAndLatencyItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Serial of MX device
func (o GetDevicesUplinksLossAndLatencyItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Loss and latency timeseries data
func (o GetDevicesUplinksLossAndLatencyItemOutput) TimeSeries() GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItem) []GetDevicesUplinksLossAndLatencyItemTimeSeries {
		return v.TimeSeries
	}).(GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput)
}

// Uplink interface (wan1, wan2, or cellular)
func (o GetDevicesUplinksLossAndLatencyItemOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItem) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetDevicesUplinksLossAndLatencyItemArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksLossAndLatencyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksLossAndLatencyItem)(nil)).Elem()
}

func (o GetDevicesUplinksLossAndLatencyItemArrayOutput) ToGetDevicesUplinksLossAndLatencyItemArrayOutput() GetDevicesUplinksLossAndLatencyItemArrayOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemArrayOutput) ToGetDevicesUplinksLossAndLatencyItemArrayOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemArrayOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemArrayOutput) Index(i pulumi.IntInput) GetDevicesUplinksLossAndLatencyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesUplinksLossAndLatencyItem {
		return vs[0].([]GetDevicesUplinksLossAndLatencyItem)[vs[1].(int)]
	}).(GetDevicesUplinksLossAndLatencyItemOutput)
}

type GetDevicesUplinksLossAndLatencyItemTimeSeries struct {
	// Latency in milliseconds
	LatencyMs float64 `pulumi:"latencyMs"`
	// Loss percentage
	LossPercent float64 `pulumi:"lossPercent"`
	// Timestamp for this data point
	Ts string `pulumi:"ts"`
}

// GetDevicesUplinksLossAndLatencyItemTimeSeriesInput is an input type that accepts GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs and GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput values.
// You can construct a concrete instance of `GetDevicesUplinksLossAndLatencyItemTimeSeriesInput` via:
//
//	GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs{...}
type GetDevicesUplinksLossAndLatencyItemTimeSeriesInput interface {
	pulumi.Input

	ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput
	ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutputWithContext(context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput
}

type GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs struct {
	// Latency in milliseconds
	LatencyMs pulumi.Float64Input `pulumi:"latencyMs"`
	// Loss percentage
	LossPercent pulumi.Float64Input `pulumi:"lossPercent"`
	// Timestamp for this data point
	Ts pulumi.StringInput `pulumi:"ts"`
}

func (GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemTimeSeries)(nil)).Elem()
}

func (i GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput {
	return i.ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutputWithContext(context.Background())
}

func (i GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput)
}

// GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayInput is an input type that accepts GetDevicesUplinksLossAndLatencyItemTimeSeriesArray and GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput values.
// You can construct a concrete instance of `GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayInput` via:
//
//	GetDevicesUplinksLossAndLatencyItemTimeSeriesArray{ GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs{...} }
type GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayInput interface {
	pulumi.Input

	ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput
	ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutputWithContext(context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput
}

type GetDevicesUplinksLossAndLatencyItemTimeSeriesArray []GetDevicesUplinksLossAndLatencyItemTimeSeriesInput

func (GetDevicesUplinksLossAndLatencyItemTimeSeriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksLossAndLatencyItemTimeSeries)(nil)).Elem()
}

func (i GetDevicesUplinksLossAndLatencyItemTimeSeriesArray) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput {
	return i.ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutputWithContext(context.Background())
}

func (i GetDevicesUplinksLossAndLatencyItemTimeSeriesArray) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput)
}

type GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemTimeSeries)(nil)).Elem()
}

func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput {
	return o
}

// Latency in milliseconds
func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) LatencyMs() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItemTimeSeries) float64 { return v.LatencyMs }).(pulumi.Float64Output)
}

// Loss percentage
func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) LossPercent() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItemTimeSeries) float64 { return v.LossPercent }).(pulumi.Float64Output)
}

// Timestamp for this data point
func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesUplinksLossAndLatencyItemTimeSeries) string { return v.Ts }).(pulumi.StringOutput)
}

type GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesUplinksLossAndLatencyItemTimeSeries)(nil)).Elem()
}

func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput() GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput) ToGetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutputWithContext(ctx context.Context) GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput {
	return o
}

func (o GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput) Index(i pulumi.IntInput) GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesUplinksLossAndLatencyItemTimeSeries {
		return vs[0].([]GetDevicesUplinksLossAndLatencyItemTimeSeries)[vs[1].(int)]
	}).(GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput)
}

type GetEarlyAccessFeaturesItem struct {
	// Descriptions of the early access feature
	Descriptions GetEarlyAccessFeaturesItemDescriptions `pulumi:"descriptions"`
	// Link to the documentation of this early access feature
	DocumentationLink string `pulumi:"documentationLink"`
	// If this early access feature can only be opted in for the entire organization
	IsOrgScopedOnly bool `pulumi:"isOrgScopedOnly"`
	// Name of the early access feature
	Name string `pulumi:"name"`
	// Short name of the early access feature
	ShortName string `pulumi:"shortName"`
	// Link to get support for this early access feature
	SupportLink string `pulumi:"supportLink"`
	// Topic of the early access feature
	Topic string `pulumi:"topic"`
}

// GetEarlyAccessFeaturesItemInput is an input type that accepts GetEarlyAccessFeaturesItemArgs and GetEarlyAccessFeaturesItemOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesItemInput` via:
//
//	GetEarlyAccessFeaturesItemArgs{...}
type GetEarlyAccessFeaturesItemInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesItemOutput() GetEarlyAccessFeaturesItemOutput
	ToGetEarlyAccessFeaturesItemOutputWithContext(context.Context) GetEarlyAccessFeaturesItemOutput
}

type GetEarlyAccessFeaturesItemArgs struct {
	// Descriptions of the early access feature
	Descriptions GetEarlyAccessFeaturesItemDescriptionsInput `pulumi:"descriptions"`
	// Link to the documentation of this early access feature
	DocumentationLink pulumi.StringInput `pulumi:"documentationLink"`
	// If this early access feature can only be opted in for the entire organization
	IsOrgScopedOnly pulumi.BoolInput `pulumi:"isOrgScopedOnly"`
	// Name of the early access feature
	Name pulumi.StringInput `pulumi:"name"`
	// Short name of the early access feature
	ShortName pulumi.StringInput `pulumi:"shortName"`
	// Link to get support for this early access feature
	SupportLink pulumi.StringInput `pulumi:"supportLink"`
	// Topic of the early access feature
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetEarlyAccessFeaturesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesItem)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesItemArgs) ToGetEarlyAccessFeaturesItemOutput() GetEarlyAccessFeaturesItemOutput {
	return i.ToGetEarlyAccessFeaturesItemOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesItemArgs) ToGetEarlyAccessFeaturesItemOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesItemOutput)
}

// GetEarlyAccessFeaturesItemArrayInput is an input type that accepts GetEarlyAccessFeaturesItemArray and GetEarlyAccessFeaturesItemArrayOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesItemArrayInput` via:
//
//	GetEarlyAccessFeaturesItemArray{ GetEarlyAccessFeaturesItemArgs{...} }
type GetEarlyAccessFeaturesItemArrayInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesItemArrayOutput() GetEarlyAccessFeaturesItemArrayOutput
	ToGetEarlyAccessFeaturesItemArrayOutputWithContext(context.Context) GetEarlyAccessFeaturesItemArrayOutput
}

type GetEarlyAccessFeaturesItemArray []GetEarlyAccessFeaturesItemInput

func (GetEarlyAccessFeaturesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEarlyAccessFeaturesItem)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesItemArray) ToGetEarlyAccessFeaturesItemArrayOutput() GetEarlyAccessFeaturesItemArrayOutput {
	return i.ToGetEarlyAccessFeaturesItemArrayOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesItemArray) ToGetEarlyAccessFeaturesItemArrayOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesItemArrayOutput)
}

type GetEarlyAccessFeaturesItemOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesItem)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesItemOutput) ToGetEarlyAccessFeaturesItemOutput() GetEarlyAccessFeaturesItemOutput {
	return o
}

func (o GetEarlyAccessFeaturesItemOutput) ToGetEarlyAccessFeaturesItemOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemOutput {
	return o
}

// Descriptions of the early access feature
func (o GetEarlyAccessFeaturesItemOutput) Descriptions() GetEarlyAccessFeaturesItemDescriptionsOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) GetEarlyAccessFeaturesItemDescriptions { return v.Descriptions }).(GetEarlyAccessFeaturesItemDescriptionsOutput)
}

// Link to the documentation of this early access feature
func (o GetEarlyAccessFeaturesItemOutput) DocumentationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) string { return v.DocumentationLink }).(pulumi.StringOutput)
}

// If this early access feature can only be opted in for the entire organization
func (o GetEarlyAccessFeaturesItemOutput) IsOrgScopedOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) bool { return v.IsOrgScopedOnly }).(pulumi.BoolOutput)
}

// Name of the early access feature
func (o GetEarlyAccessFeaturesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Short name of the early access feature
func (o GetEarlyAccessFeaturesItemOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) string { return v.ShortName }).(pulumi.StringOutput)
}

// Link to get support for this early access feature
func (o GetEarlyAccessFeaturesItemOutput) SupportLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) string { return v.SupportLink }).(pulumi.StringOutput)
}

// Topic of the early access feature
func (o GetEarlyAccessFeaturesItemOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItem) string { return v.Topic }).(pulumi.StringOutput)
}

type GetEarlyAccessFeaturesItemArrayOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEarlyAccessFeaturesItem)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesItemArrayOutput) ToGetEarlyAccessFeaturesItemArrayOutput() GetEarlyAccessFeaturesItemArrayOutput {
	return o
}

func (o GetEarlyAccessFeaturesItemArrayOutput) ToGetEarlyAccessFeaturesItemArrayOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemArrayOutput {
	return o
}

func (o GetEarlyAccessFeaturesItemArrayOutput) Index(i pulumi.IntInput) GetEarlyAccessFeaturesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEarlyAccessFeaturesItem {
		return vs[0].([]GetEarlyAccessFeaturesItem)[vs[1].(int)]
	}).(GetEarlyAccessFeaturesItemOutput)
}

type GetEarlyAccessFeaturesItemDescriptions struct {
	// Long description
	Long string `pulumi:"long"`
	// Short description
	Short string `pulumi:"short"`
}

// GetEarlyAccessFeaturesItemDescriptionsInput is an input type that accepts GetEarlyAccessFeaturesItemDescriptionsArgs and GetEarlyAccessFeaturesItemDescriptionsOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesItemDescriptionsInput` via:
//
//	GetEarlyAccessFeaturesItemDescriptionsArgs{...}
type GetEarlyAccessFeaturesItemDescriptionsInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesItemDescriptionsOutput() GetEarlyAccessFeaturesItemDescriptionsOutput
	ToGetEarlyAccessFeaturesItemDescriptionsOutputWithContext(context.Context) GetEarlyAccessFeaturesItemDescriptionsOutput
}

type GetEarlyAccessFeaturesItemDescriptionsArgs struct {
	// Long description
	Long pulumi.StringInput `pulumi:"long"`
	// Short description
	Short pulumi.StringInput `pulumi:"short"`
}

func (GetEarlyAccessFeaturesItemDescriptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesItemDescriptions)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesItemDescriptionsArgs) ToGetEarlyAccessFeaturesItemDescriptionsOutput() GetEarlyAccessFeaturesItemDescriptionsOutput {
	return i.ToGetEarlyAccessFeaturesItemDescriptionsOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesItemDescriptionsArgs) ToGetEarlyAccessFeaturesItemDescriptionsOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemDescriptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesItemDescriptionsOutput)
}

type GetEarlyAccessFeaturesItemDescriptionsOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesItemDescriptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesItemDescriptions)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesItemDescriptionsOutput) ToGetEarlyAccessFeaturesItemDescriptionsOutput() GetEarlyAccessFeaturesItemDescriptionsOutput {
	return o
}

func (o GetEarlyAccessFeaturesItemDescriptionsOutput) ToGetEarlyAccessFeaturesItemDescriptionsOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesItemDescriptionsOutput {
	return o
}

// Long description
func (o GetEarlyAccessFeaturesItemDescriptionsOutput) Long() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItemDescriptions) string { return v.Long }).(pulumi.StringOutput)
}

// Short description
func (o GetEarlyAccessFeaturesItemDescriptionsOutput) Short() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesItemDescriptions) string { return v.Short }).(pulumi.StringOutput)
}

type GetEarlyAccessFeaturesOptInsItem struct {
	// Time when Early Access Feature was created
	CreatedAt string `pulumi:"createdAt"`
	// ID of Early Access Feature
	Id string `pulumi:"id"`
	// Networks assigned to the Early Access Feature
	LimitScopeToNetworks []GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork `pulumi:"limitScopeToNetworks"`
	// Name of Early Access Feature
	ShortName string `pulumi:"shortName"`
}

// GetEarlyAccessFeaturesOptInsItemInput is an input type that accepts GetEarlyAccessFeaturesOptInsItemArgs and GetEarlyAccessFeaturesOptInsItemOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesOptInsItemInput` via:
//
//	GetEarlyAccessFeaturesOptInsItemArgs{...}
type GetEarlyAccessFeaturesOptInsItemInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesOptInsItemOutput() GetEarlyAccessFeaturesOptInsItemOutput
	ToGetEarlyAccessFeaturesOptInsItemOutputWithContext(context.Context) GetEarlyAccessFeaturesOptInsItemOutput
}

type GetEarlyAccessFeaturesOptInsItemArgs struct {
	// Time when Early Access Feature was created
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// ID of Early Access Feature
	Id pulumi.StringInput `pulumi:"id"`
	// Networks assigned to the Early Access Feature
	LimitScopeToNetworks GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayInput `pulumi:"limitScopeToNetworks"`
	// Name of Early Access Feature
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (GetEarlyAccessFeaturesOptInsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItem)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesOptInsItemArgs) ToGetEarlyAccessFeaturesOptInsItemOutput() GetEarlyAccessFeaturesOptInsItemOutput {
	return i.ToGetEarlyAccessFeaturesOptInsItemOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesOptInsItemArgs) ToGetEarlyAccessFeaturesOptInsItemOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesOptInsItemOutput)
}

type GetEarlyAccessFeaturesOptInsItemOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesOptInsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItem)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesOptInsItemOutput) ToGetEarlyAccessFeaturesOptInsItemOutput() GetEarlyAccessFeaturesOptInsItemOutput {
	return o
}

func (o GetEarlyAccessFeaturesOptInsItemOutput) ToGetEarlyAccessFeaturesOptInsItemOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemOutput {
	return o
}

// Time when Early Access Feature was created
func (o GetEarlyAccessFeaturesOptInsItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// ID of Early Access Feature
func (o GetEarlyAccessFeaturesOptInsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Networks assigned to the Early Access Feature
func (o GetEarlyAccessFeaturesOptInsItemOutput) LimitScopeToNetworks() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItem) []GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork {
		return v.LimitScopeToNetworks
	}).(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput)
}

// Name of Early Access Feature
func (o GetEarlyAccessFeaturesOptInsItemOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItem) string { return v.ShortName }).(pulumi.StringOutput)
}

type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork struct {
	// ID of Network
	Id string `pulumi:"id"`
	// Name of Network
	Name string `pulumi:"name"`
}

// GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkInput is an input type that accepts GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs and GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkInput` via:
//
//	GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs{...}
type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput
	ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutputWithContext(context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput
}

type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs struct {
	// ID of Network
	Id pulumi.StringInput `pulumi:"id"`
	// Name of Network
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput {
	return i.ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput)
}

// GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayInput is an input type that accepts GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray and GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput values.
// You can construct a concrete instance of `GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayInput` via:
//
//	GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray{ GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs{...} }
type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayInput interface {
	pulumi.Input

	ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput
	ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutputWithContext(context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput
}

type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray []GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkInput

func (GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork)(nil)).Elem()
}

func (i GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput {
	return i.ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutputWithContext(context.Background())
}

func (i GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput)
}

type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput {
	return o
}

func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput {
	return o
}

// ID of Network
func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of Network
func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork)(nil)).Elem()
}

func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput() GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput {
	return o
}

func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput) ToGetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutputWithContext(ctx context.Context) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput {
	return o
}

func (o GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput) Index(i pulumi.IntInput) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork {
		return vs[0].([]GetEarlyAccessFeaturesOptInsItemLimitScopeToNetwork)[vs[1].(int)]
	}).(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput)
}

type GetFirmwareUpgradesByDeviceItem struct {
	// Status of the device upgrade
	DeviceStatus string `pulumi:"deviceStatus"`
	// Name assigned to the device
	Name string `pulumi:"name"`
	// Serial of the device
	Serial string `pulumi:"serial"`
	// The devices upgrade details and status
	Upgrade GetFirmwareUpgradesByDeviceItemUpgrade `pulumi:"upgrade"`
}

// GetFirmwareUpgradesByDeviceItemInput is an input type that accepts GetFirmwareUpgradesByDeviceItemArgs and GetFirmwareUpgradesByDeviceItemOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemInput` via:
//
//	GetFirmwareUpgradesByDeviceItemArgs{...}
type GetFirmwareUpgradesByDeviceItemInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemOutput() GetFirmwareUpgradesByDeviceItemOutput
	ToGetFirmwareUpgradesByDeviceItemOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemOutput
}

type GetFirmwareUpgradesByDeviceItemArgs struct {
	// Status of the device upgrade
	DeviceStatus pulumi.StringInput `pulumi:"deviceStatus"`
	// Name assigned to the device
	Name pulumi.StringInput `pulumi:"name"`
	// Serial of the device
	Serial pulumi.StringInput `pulumi:"serial"`
	// The devices upgrade details and status
	Upgrade GetFirmwareUpgradesByDeviceItemUpgradeInput `pulumi:"upgrade"`
}

func (GetFirmwareUpgradesByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItem)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemArgs) ToGetFirmwareUpgradesByDeviceItemOutput() GetFirmwareUpgradesByDeviceItemOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemArgs) ToGetFirmwareUpgradesByDeviceItemOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemOutput)
}

// GetFirmwareUpgradesByDeviceItemArrayInput is an input type that accepts GetFirmwareUpgradesByDeviceItemArray and GetFirmwareUpgradesByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemArrayInput` via:
//
//	GetFirmwareUpgradesByDeviceItemArray{ GetFirmwareUpgradesByDeviceItemArgs{...} }
type GetFirmwareUpgradesByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemArrayOutput() GetFirmwareUpgradesByDeviceItemArrayOutput
	ToGetFirmwareUpgradesByDeviceItemArrayOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemArrayOutput
}

type GetFirmwareUpgradesByDeviceItemArray []GetFirmwareUpgradesByDeviceItemInput

func (GetFirmwareUpgradesByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirmwareUpgradesByDeviceItem)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemArray) ToGetFirmwareUpgradesByDeviceItemArrayOutput() GetFirmwareUpgradesByDeviceItemArrayOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemArray) ToGetFirmwareUpgradesByDeviceItemArrayOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemArrayOutput)
}

type GetFirmwareUpgradesByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItem)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemOutput) ToGetFirmwareUpgradesByDeviceItemOutput() GetFirmwareUpgradesByDeviceItemOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemOutput) ToGetFirmwareUpgradesByDeviceItemOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemOutput {
	return o
}

// Status of the device upgrade
func (o GetFirmwareUpgradesByDeviceItemOutput) DeviceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItem) string { return v.DeviceStatus }).(pulumi.StringOutput)
}

// Name assigned to the device
func (o GetFirmwareUpgradesByDeviceItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItem) string { return v.Name }).(pulumi.StringOutput)
}

// Serial of the device
func (o GetFirmwareUpgradesByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

// The devices upgrade details and status
func (o GetFirmwareUpgradesByDeviceItemOutput) Upgrade() GetFirmwareUpgradesByDeviceItemUpgradeOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItem) GetFirmwareUpgradesByDeviceItemUpgrade { return v.Upgrade }).(GetFirmwareUpgradesByDeviceItemUpgradeOutput)
}

type GetFirmwareUpgradesByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirmwareUpgradesByDeviceItem)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemArrayOutput) ToGetFirmwareUpgradesByDeviceItemArrayOutput() GetFirmwareUpgradesByDeviceItemArrayOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemArrayOutput) ToGetFirmwareUpgradesByDeviceItemArrayOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemArrayOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetFirmwareUpgradesByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirmwareUpgradesByDeviceItem {
		return vs[0].([]GetFirmwareUpgradesByDeviceItem)[vs[1].(int)]
	}).(GetFirmwareUpgradesByDeviceItemOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgrade struct {
	// The initial version of the device
	FromVersion GetFirmwareUpgradesByDeviceItemUpgradeFromVersion `pulumi:"fromVersion"`
	// ID of the upgrade
	Id string `pulumi:"id"`
	// Staged upgrade
	Staged GetFirmwareUpgradesByDeviceItemUpgradeStaged `pulumi:"staged"`
	// Status of the upgrade
	Status string `pulumi:"status"`
	// Start time of the upgrade
	Time string `pulumi:"time"`
	// Version the device is upgrading to
	ToVersion GetFirmwareUpgradesByDeviceItemUpgradeToVersion `pulumi:"toVersion"`
	// ID of the upgrade batch
	UpgradeBatchId string `pulumi:"upgradeBatchId"`
}

// GetFirmwareUpgradesByDeviceItemUpgradeInput is an input type that accepts GetFirmwareUpgradesByDeviceItemUpgradeArgs and GetFirmwareUpgradesByDeviceItemUpgradeOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemUpgradeInput` via:
//
//	GetFirmwareUpgradesByDeviceItemUpgradeArgs{...}
type GetFirmwareUpgradesByDeviceItemUpgradeInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemUpgradeOutput() GetFirmwareUpgradesByDeviceItemUpgradeOutput
	ToGetFirmwareUpgradesByDeviceItemUpgradeOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemUpgradeOutput
}

type GetFirmwareUpgradesByDeviceItemUpgradeArgs struct {
	// The initial version of the device
	FromVersion GetFirmwareUpgradesByDeviceItemUpgradeFromVersionInput `pulumi:"fromVersion"`
	// ID of the upgrade
	Id pulumi.StringInput `pulumi:"id"`
	// Staged upgrade
	Staged GetFirmwareUpgradesByDeviceItemUpgradeStagedInput `pulumi:"staged"`
	// Status of the upgrade
	Status pulumi.StringInput `pulumi:"status"`
	// Start time of the upgrade
	Time pulumi.StringInput `pulumi:"time"`
	// Version the device is upgrading to
	ToVersion GetFirmwareUpgradesByDeviceItemUpgradeToVersionInput `pulumi:"toVersion"`
	// ID of the upgrade batch
	UpgradeBatchId pulumi.StringInput `pulumi:"upgradeBatchId"`
}

func (GetFirmwareUpgradesByDeviceItemUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgrade)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeOutput() GetFirmwareUpgradesByDeviceItemUpgradeOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemUpgradeOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemUpgradeOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgrade)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeOutput() GetFirmwareUpgradesByDeviceItemUpgradeOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeOutput {
	return o
}

// The initial version of the device
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) FromVersion() GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) GetFirmwareUpgradesByDeviceItemUpgradeFromVersion {
		return v.FromVersion
	}).(GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput)
}

// ID of the upgrade
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) string { return v.Id }).(pulumi.StringOutput)
}

// Staged upgrade
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) Staged() GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) GetFirmwareUpgradesByDeviceItemUpgradeStaged {
		return v.Staged
	}).(GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput)
}

// Status of the upgrade
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) string { return v.Status }).(pulumi.StringOutput)
}

// Start time of the upgrade
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) string { return v.Time }).(pulumi.StringOutput)
}

// Version the device is upgrading to
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) ToVersion() GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) GetFirmwareUpgradesByDeviceItemUpgradeToVersion {
		return v.ToVersion
	}).(GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput)
}

// ID of the upgrade batch
func (o GetFirmwareUpgradesByDeviceItemUpgradeOutput) UpgradeBatchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgrade) string { return v.UpgradeBatchId }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeFromVersion struct {
	// ID of the initial firmware version
	Id string `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate string `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType string `pulumi:"releaseType"`
	// Firmware version short name
	ShortName string `pulumi:"shortName"`
}

// GetFirmwareUpgradesByDeviceItemUpgradeFromVersionInput is an input type that accepts GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs and GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemUpgradeFromVersionInput` via:
//
//	GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs{...}
type GetFirmwareUpgradesByDeviceItemUpgradeFromVersionInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput
	ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput
}

type GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs struct {
	// ID of the initial firmware version
	Id pulumi.StringInput `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType pulumi.StringInput `pulumi:"releaseType"`
	// Firmware version short name
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeFromVersion)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeFromVersion)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput {
	return o
}

// ID of the initial firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeFromVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Release date of the firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeFromVersion) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Release type of the firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ReleaseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeFromVersion) string { return v.ReleaseType }).(pulumi.StringOutput)
}

// Firmware version short name
func (o GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeFromVersion) string { return v.ShortName }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeStaged struct {
	// The staged upgrade group
	Group GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup `pulumi:"group"`
}

// GetFirmwareUpgradesByDeviceItemUpgradeStagedInput is an input type that accepts GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs and GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemUpgradeStagedInput` via:
//
//	GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs{...}
type GetFirmwareUpgradesByDeviceItemUpgradeStagedInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput
	ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput
}

type GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs struct {
	// The staged upgrade group
	Group GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupInput `pulumi:"group"`
}

func (GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStaged)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStaged)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput {
	return o
}

// The staged upgrade group
func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput) Group() GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeStaged) GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup {
		return v.Group
	}).(GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup struct {
	// Id of the staged upgrade group
	Id string `pulumi:"id"`
}

// GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupInput is an input type that accepts GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs and GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupInput` via:
//
//	GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs{...}
type GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput
	ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput
}

type GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs struct {
	// Id of the staged upgrade group
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput() GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput {
	return o
}

// Id of the staged upgrade group
func (o GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeStagedGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeToVersion struct {
	// ID of the initial firmware version
	Id string `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate string `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType string `pulumi:"releaseType"`
	// Firmware version short name
	ShortName string `pulumi:"shortName"`
}

// GetFirmwareUpgradesByDeviceItemUpgradeToVersionInput is an input type that accepts GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs and GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesByDeviceItemUpgradeToVersionInput` via:
//
//	GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs{...}
type GetFirmwareUpgradesByDeviceItemUpgradeToVersionInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput
	ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutputWithContext(context.Context) GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput
}

type GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs struct {
	// ID of the initial firmware version
	Id pulumi.StringInput `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType pulumi.StringInput `pulumi:"releaseType"`
	// Firmware version short name
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeToVersion)(nil)).Elem()
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput {
	return i.ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs) ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput)
}

type GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeToVersion)(nil)).Elem()
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput() GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput {
	return o
}

func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ToGetFirmwareUpgradesByDeviceItemUpgradeToVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput {
	return o
}

// ID of the initial firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeToVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Release date of the firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeToVersion) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Release type of the firmware version
func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ReleaseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeToVersion) string { return v.ReleaseType }).(pulumi.StringOutput)
}

// Firmware version short name
func (o GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesByDeviceItemUpgradeToVersion) string { return v.ShortName }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesItem struct {
	// Timestamp when upgrade completed. Null if status pending.
	CompletedAt string `pulumi:"completedAt"`
	// ID of the upgrade's starting version
	FromVersion GetFirmwareUpgradesItemFromVersion `pulumi:"fromVersion"`
	// Network of the upgrade
	Network GetFirmwareUpgradesItemNetwork `pulumi:"network"`
	// product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
	ProductTypes string `pulumi:"productTypes"`
	// Status of upgrade event: [Cancelled, Completed]
	Status string `pulumi:"status"`
	// Scheduled start time
	Time string `pulumi:"time"`
	// ID of the upgrade's target version
	ToVersion GetFirmwareUpgradesItemToVersion `pulumi:"toVersion"`
	// The upgrade batch
	UpgradeBatchId string `pulumi:"upgradeBatchId"`
	// The upgrade
	UpgradeId string `pulumi:"upgradeId"`
}

// GetFirmwareUpgradesItemInput is an input type that accepts GetFirmwareUpgradesItemArgs and GetFirmwareUpgradesItemOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesItemInput` via:
//
//	GetFirmwareUpgradesItemArgs{...}
type GetFirmwareUpgradesItemInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesItemOutput() GetFirmwareUpgradesItemOutput
	ToGetFirmwareUpgradesItemOutputWithContext(context.Context) GetFirmwareUpgradesItemOutput
}

type GetFirmwareUpgradesItemArgs struct {
	// Timestamp when upgrade completed. Null if status pending.
	CompletedAt pulumi.StringInput `pulumi:"completedAt"`
	// ID of the upgrade's starting version
	FromVersion GetFirmwareUpgradesItemFromVersionInput `pulumi:"fromVersion"`
	// Network of the upgrade
	Network GetFirmwareUpgradesItemNetworkInput `pulumi:"network"`
	// product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
	ProductTypes pulumi.StringInput `pulumi:"productTypes"`
	// Status of upgrade event: [Cancelled, Completed]
	Status pulumi.StringInput `pulumi:"status"`
	// Scheduled start time
	Time pulumi.StringInput `pulumi:"time"`
	// ID of the upgrade's target version
	ToVersion GetFirmwareUpgradesItemToVersionInput `pulumi:"toVersion"`
	// The upgrade batch
	UpgradeBatchId pulumi.StringInput `pulumi:"upgradeBatchId"`
	// The upgrade
	UpgradeId pulumi.StringInput `pulumi:"upgradeId"`
}

func (GetFirmwareUpgradesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItem)(nil)).Elem()
}

func (i GetFirmwareUpgradesItemArgs) ToGetFirmwareUpgradesItemOutput() GetFirmwareUpgradesItemOutput {
	return i.ToGetFirmwareUpgradesItemOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesItemArgs) ToGetFirmwareUpgradesItemOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesItemOutput)
}

// GetFirmwareUpgradesItemArrayInput is an input type that accepts GetFirmwareUpgradesItemArray and GetFirmwareUpgradesItemArrayOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesItemArrayInput` via:
//
//	GetFirmwareUpgradesItemArray{ GetFirmwareUpgradesItemArgs{...} }
type GetFirmwareUpgradesItemArrayInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesItemArrayOutput() GetFirmwareUpgradesItemArrayOutput
	ToGetFirmwareUpgradesItemArrayOutputWithContext(context.Context) GetFirmwareUpgradesItemArrayOutput
}

type GetFirmwareUpgradesItemArray []GetFirmwareUpgradesItemInput

func (GetFirmwareUpgradesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirmwareUpgradesItem)(nil)).Elem()
}

func (i GetFirmwareUpgradesItemArray) ToGetFirmwareUpgradesItemArrayOutput() GetFirmwareUpgradesItemArrayOutput {
	return i.ToGetFirmwareUpgradesItemArrayOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesItemArray) ToGetFirmwareUpgradesItemArrayOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesItemArrayOutput)
}

type GetFirmwareUpgradesItemOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItem)(nil)).Elem()
}

func (o GetFirmwareUpgradesItemOutput) ToGetFirmwareUpgradesItemOutput() GetFirmwareUpgradesItemOutput {
	return o
}

func (o GetFirmwareUpgradesItemOutput) ToGetFirmwareUpgradesItemOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemOutput {
	return o
}

// Timestamp when upgrade completed. Null if status pending.
func (o GetFirmwareUpgradesItemOutput) CompletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.CompletedAt }).(pulumi.StringOutput)
}

// ID of the upgrade's starting version
func (o GetFirmwareUpgradesItemOutput) FromVersion() GetFirmwareUpgradesItemFromVersionOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) GetFirmwareUpgradesItemFromVersion { return v.FromVersion }).(GetFirmwareUpgradesItemFromVersionOutput)
}

// Network of the upgrade
func (o GetFirmwareUpgradesItemOutput) Network() GetFirmwareUpgradesItemNetworkOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) GetFirmwareUpgradesItemNetwork { return v.Network }).(GetFirmwareUpgradesItemNetworkOutput)
}

// product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
func (o GetFirmwareUpgradesItemOutput) ProductTypes() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.ProductTypes }).(pulumi.StringOutput)
}

// Status of upgrade event: [Cancelled, Completed]
func (o GetFirmwareUpgradesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.Status }).(pulumi.StringOutput)
}

// Scheduled start time
func (o GetFirmwareUpgradesItemOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.Time }).(pulumi.StringOutput)
}

// ID of the upgrade's target version
func (o GetFirmwareUpgradesItemOutput) ToVersion() GetFirmwareUpgradesItemToVersionOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) GetFirmwareUpgradesItemToVersion { return v.ToVersion }).(GetFirmwareUpgradesItemToVersionOutput)
}

// The upgrade batch
func (o GetFirmwareUpgradesItemOutput) UpgradeBatchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.UpgradeBatchId }).(pulumi.StringOutput)
}

// The upgrade
func (o GetFirmwareUpgradesItemOutput) UpgradeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItem) string { return v.UpgradeId }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesItemArrayOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirmwareUpgradesItem)(nil)).Elem()
}

func (o GetFirmwareUpgradesItemArrayOutput) ToGetFirmwareUpgradesItemArrayOutput() GetFirmwareUpgradesItemArrayOutput {
	return o
}

func (o GetFirmwareUpgradesItemArrayOutput) ToGetFirmwareUpgradesItemArrayOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemArrayOutput {
	return o
}

func (o GetFirmwareUpgradesItemArrayOutput) Index(i pulumi.IntInput) GetFirmwareUpgradesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirmwareUpgradesItem {
		return vs[0].([]GetFirmwareUpgradesItem)[vs[1].(int)]
	}).(GetFirmwareUpgradesItemOutput)
}

type GetFirmwareUpgradesItemFromVersion struct {
	// Firmware name
	Firmware string `pulumi:"firmware"`
	// Firmware version ID
	Id string `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate string `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType string `pulumi:"releaseType"`
	// Firmware version short name
	ShortName string `pulumi:"shortName"`
}

// GetFirmwareUpgradesItemFromVersionInput is an input type that accepts GetFirmwareUpgradesItemFromVersionArgs and GetFirmwareUpgradesItemFromVersionOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesItemFromVersionInput` via:
//
//	GetFirmwareUpgradesItemFromVersionArgs{...}
type GetFirmwareUpgradesItemFromVersionInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesItemFromVersionOutput() GetFirmwareUpgradesItemFromVersionOutput
	ToGetFirmwareUpgradesItemFromVersionOutputWithContext(context.Context) GetFirmwareUpgradesItemFromVersionOutput
}

type GetFirmwareUpgradesItemFromVersionArgs struct {
	// Firmware name
	Firmware pulumi.StringInput `pulumi:"firmware"`
	// Firmware version ID
	Id pulumi.StringInput `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType pulumi.StringInput `pulumi:"releaseType"`
	// Firmware version short name
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (GetFirmwareUpgradesItemFromVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemFromVersion)(nil)).Elem()
}

func (i GetFirmwareUpgradesItemFromVersionArgs) ToGetFirmwareUpgradesItemFromVersionOutput() GetFirmwareUpgradesItemFromVersionOutput {
	return i.ToGetFirmwareUpgradesItemFromVersionOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesItemFromVersionArgs) ToGetFirmwareUpgradesItemFromVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemFromVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesItemFromVersionOutput)
}

type GetFirmwareUpgradesItemFromVersionOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesItemFromVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemFromVersion)(nil)).Elem()
}

func (o GetFirmwareUpgradesItemFromVersionOutput) ToGetFirmwareUpgradesItemFromVersionOutput() GetFirmwareUpgradesItemFromVersionOutput {
	return o
}

func (o GetFirmwareUpgradesItemFromVersionOutput) ToGetFirmwareUpgradesItemFromVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemFromVersionOutput {
	return o
}

// Firmware name
func (o GetFirmwareUpgradesItemFromVersionOutput) Firmware() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemFromVersion) string { return v.Firmware }).(pulumi.StringOutput)
}

// Firmware version ID
func (o GetFirmwareUpgradesItemFromVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemFromVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Release date of the firmware version
func (o GetFirmwareUpgradesItemFromVersionOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemFromVersion) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Release type of the firmware version
func (o GetFirmwareUpgradesItemFromVersionOutput) ReleaseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemFromVersion) string { return v.ReleaseType }).(pulumi.StringOutput)
}

// Firmware version short name
func (o GetFirmwareUpgradesItemFromVersionOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemFromVersion) string { return v.ShortName }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesItemNetwork struct {
	// ID of network
	Id string `pulumi:"id"`
	// The network
	Name string `pulumi:"name"`
}

// GetFirmwareUpgradesItemNetworkInput is an input type that accepts GetFirmwareUpgradesItemNetworkArgs and GetFirmwareUpgradesItemNetworkOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesItemNetworkInput` via:
//
//	GetFirmwareUpgradesItemNetworkArgs{...}
type GetFirmwareUpgradesItemNetworkInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesItemNetworkOutput() GetFirmwareUpgradesItemNetworkOutput
	ToGetFirmwareUpgradesItemNetworkOutputWithContext(context.Context) GetFirmwareUpgradesItemNetworkOutput
}

type GetFirmwareUpgradesItemNetworkArgs struct {
	// ID of network
	Id pulumi.StringInput `pulumi:"id"`
	// The network
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirmwareUpgradesItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemNetwork)(nil)).Elem()
}

func (i GetFirmwareUpgradesItemNetworkArgs) ToGetFirmwareUpgradesItemNetworkOutput() GetFirmwareUpgradesItemNetworkOutput {
	return i.ToGetFirmwareUpgradesItemNetworkOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesItemNetworkArgs) ToGetFirmwareUpgradesItemNetworkOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesItemNetworkOutput)
}

type GetFirmwareUpgradesItemNetworkOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemNetwork)(nil)).Elem()
}

func (o GetFirmwareUpgradesItemNetworkOutput) ToGetFirmwareUpgradesItemNetworkOutput() GetFirmwareUpgradesItemNetworkOutput {
	return o
}

func (o GetFirmwareUpgradesItemNetworkOutput) ToGetFirmwareUpgradesItemNetworkOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemNetworkOutput {
	return o
}

// ID of network
func (o GetFirmwareUpgradesItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The network
func (o GetFirmwareUpgradesItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirmwareUpgradesItemToVersion struct {
	// Firmware name
	Firmware string `pulumi:"firmware"`
	// Firmware version ID
	Id string `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate string `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType string `pulumi:"releaseType"`
	// Firmware version short name
	ShortName string `pulumi:"shortName"`
}

// GetFirmwareUpgradesItemToVersionInput is an input type that accepts GetFirmwareUpgradesItemToVersionArgs and GetFirmwareUpgradesItemToVersionOutput values.
// You can construct a concrete instance of `GetFirmwareUpgradesItemToVersionInput` via:
//
//	GetFirmwareUpgradesItemToVersionArgs{...}
type GetFirmwareUpgradesItemToVersionInput interface {
	pulumi.Input

	ToGetFirmwareUpgradesItemToVersionOutput() GetFirmwareUpgradesItemToVersionOutput
	ToGetFirmwareUpgradesItemToVersionOutputWithContext(context.Context) GetFirmwareUpgradesItemToVersionOutput
}

type GetFirmwareUpgradesItemToVersionArgs struct {
	// Firmware name
	Firmware pulumi.StringInput `pulumi:"firmware"`
	// Firmware version ID
	Id pulumi.StringInput `pulumi:"id"`
	// Release date of the firmware version
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Release type of the firmware version
	ReleaseType pulumi.StringInput `pulumi:"releaseType"`
	// Firmware version short name
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (GetFirmwareUpgradesItemToVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemToVersion)(nil)).Elem()
}

func (i GetFirmwareUpgradesItemToVersionArgs) ToGetFirmwareUpgradesItemToVersionOutput() GetFirmwareUpgradesItemToVersionOutput {
	return i.ToGetFirmwareUpgradesItemToVersionOutputWithContext(context.Background())
}

func (i GetFirmwareUpgradesItemToVersionArgs) ToGetFirmwareUpgradesItemToVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemToVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirmwareUpgradesItemToVersionOutput)
}

type GetFirmwareUpgradesItemToVersionOutput struct{ *pulumi.OutputState }

func (GetFirmwareUpgradesItemToVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirmwareUpgradesItemToVersion)(nil)).Elem()
}

func (o GetFirmwareUpgradesItemToVersionOutput) ToGetFirmwareUpgradesItemToVersionOutput() GetFirmwareUpgradesItemToVersionOutput {
	return o
}

func (o GetFirmwareUpgradesItemToVersionOutput) ToGetFirmwareUpgradesItemToVersionOutputWithContext(ctx context.Context) GetFirmwareUpgradesItemToVersionOutput {
	return o
}

// Firmware name
func (o GetFirmwareUpgradesItemToVersionOutput) Firmware() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemToVersion) string { return v.Firmware }).(pulumi.StringOutput)
}

// Firmware version ID
func (o GetFirmwareUpgradesItemToVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemToVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Release date of the firmware version
func (o GetFirmwareUpgradesItemToVersionOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemToVersion) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Release type of the firmware version
func (o GetFirmwareUpgradesItemToVersionOutput) ReleaseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemToVersion) string { return v.ReleaseType }).(pulumi.StringOutput)
}

// Firmware version short name
func (o GetFirmwareUpgradesItemToVersionOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirmwareUpgradesItemToVersion) string { return v.ShortName }).(pulumi.StringOutput)
}

type GetInsightApplicationsItem struct {
	// Application identifier
	ApplicationId string `pulumi:"applicationId"`
	// Application name
	Name string `pulumi:"name"`
	// Thresholds defined by a user or Meraki models for each application
	Thresholds GetInsightApplicationsItemThresholds `pulumi:"thresholds"`
}

// GetInsightApplicationsItemInput is an input type that accepts GetInsightApplicationsItemArgs and GetInsightApplicationsItemOutput values.
// You can construct a concrete instance of `GetInsightApplicationsItemInput` via:
//
//	GetInsightApplicationsItemArgs{...}
type GetInsightApplicationsItemInput interface {
	pulumi.Input

	ToGetInsightApplicationsItemOutput() GetInsightApplicationsItemOutput
	ToGetInsightApplicationsItemOutputWithContext(context.Context) GetInsightApplicationsItemOutput
}

type GetInsightApplicationsItemArgs struct {
	// Application identifier
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Application name
	Name pulumi.StringInput `pulumi:"name"`
	// Thresholds defined by a user or Meraki models for each application
	Thresholds GetInsightApplicationsItemThresholdsInput `pulumi:"thresholds"`
}

func (GetInsightApplicationsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItem)(nil)).Elem()
}

func (i GetInsightApplicationsItemArgs) ToGetInsightApplicationsItemOutput() GetInsightApplicationsItemOutput {
	return i.ToGetInsightApplicationsItemOutputWithContext(context.Background())
}

func (i GetInsightApplicationsItemArgs) ToGetInsightApplicationsItemOutputWithContext(ctx context.Context) GetInsightApplicationsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightApplicationsItemOutput)
}

// GetInsightApplicationsItemArrayInput is an input type that accepts GetInsightApplicationsItemArray and GetInsightApplicationsItemArrayOutput values.
// You can construct a concrete instance of `GetInsightApplicationsItemArrayInput` via:
//
//	GetInsightApplicationsItemArray{ GetInsightApplicationsItemArgs{...} }
type GetInsightApplicationsItemArrayInput interface {
	pulumi.Input

	ToGetInsightApplicationsItemArrayOutput() GetInsightApplicationsItemArrayOutput
	ToGetInsightApplicationsItemArrayOutputWithContext(context.Context) GetInsightApplicationsItemArrayOutput
}

type GetInsightApplicationsItemArray []GetInsightApplicationsItemInput

func (GetInsightApplicationsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightApplicationsItem)(nil)).Elem()
}

func (i GetInsightApplicationsItemArray) ToGetInsightApplicationsItemArrayOutput() GetInsightApplicationsItemArrayOutput {
	return i.ToGetInsightApplicationsItemArrayOutputWithContext(context.Background())
}

func (i GetInsightApplicationsItemArray) ToGetInsightApplicationsItemArrayOutputWithContext(ctx context.Context) GetInsightApplicationsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightApplicationsItemArrayOutput)
}

type GetInsightApplicationsItemOutput struct{ *pulumi.OutputState }

func (GetInsightApplicationsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItem)(nil)).Elem()
}

func (o GetInsightApplicationsItemOutput) ToGetInsightApplicationsItemOutput() GetInsightApplicationsItemOutput {
	return o
}

func (o GetInsightApplicationsItemOutput) ToGetInsightApplicationsItemOutputWithContext(ctx context.Context) GetInsightApplicationsItemOutput {
	return o
}

// Application identifier
func (o GetInsightApplicationsItemOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightApplicationsItem) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Application name
func (o GetInsightApplicationsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightApplicationsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Thresholds defined by a user or Meraki models for each application
func (o GetInsightApplicationsItemOutput) Thresholds() GetInsightApplicationsItemThresholdsOutput {
	return o.ApplyT(func(v GetInsightApplicationsItem) GetInsightApplicationsItemThresholds { return v.Thresholds }).(GetInsightApplicationsItemThresholdsOutput)
}

type GetInsightApplicationsItemArrayOutput struct{ *pulumi.OutputState }

func (GetInsightApplicationsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightApplicationsItem)(nil)).Elem()
}

func (o GetInsightApplicationsItemArrayOutput) ToGetInsightApplicationsItemArrayOutput() GetInsightApplicationsItemArrayOutput {
	return o
}

func (o GetInsightApplicationsItemArrayOutput) ToGetInsightApplicationsItemArrayOutputWithContext(ctx context.Context) GetInsightApplicationsItemArrayOutput {
	return o
}

func (o GetInsightApplicationsItemArrayOutput) Index(i pulumi.IntInput) GetInsightApplicationsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightApplicationsItem {
		return vs[0].([]GetInsightApplicationsItem)[vs[1].(int)]
	}).(GetInsightApplicationsItemOutput)
}

type GetInsightApplicationsItemThresholds struct {
	// Threshold for each network
	ByNetworks []GetInsightApplicationsItemThresholdsByNetwork `pulumi:"byNetworks"`
	// Threshold type (static or smart)
	Type string `pulumi:"type"`
}

// GetInsightApplicationsItemThresholdsInput is an input type that accepts GetInsightApplicationsItemThresholdsArgs and GetInsightApplicationsItemThresholdsOutput values.
// You can construct a concrete instance of `GetInsightApplicationsItemThresholdsInput` via:
//
//	GetInsightApplicationsItemThresholdsArgs{...}
type GetInsightApplicationsItemThresholdsInput interface {
	pulumi.Input

	ToGetInsightApplicationsItemThresholdsOutput() GetInsightApplicationsItemThresholdsOutput
	ToGetInsightApplicationsItemThresholdsOutputWithContext(context.Context) GetInsightApplicationsItemThresholdsOutput
}

type GetInsightApplicationsItemThresholdsArgs struct {
	// Threshold for each network
	ByNetworks GetInsightApplicationsItemThresholdsByNetworkArrayInput `pulumi:"byNetworks"`
	// Threshold type (static or smart)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInsightApplicationsItemThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItemThresholds)(nil)).Elem()
}

func (i GetInsightApplicationsItemThresholdsArgs) ToGetInsightApplicationsItemThresholdsOutput() GetInsightApplicationsItemThresholdsOutput {
	return i.ToGetInsightApplicationsItemThresholdsOutputWithContext(context.Background())
}

func (i GetInsightApplicationsItemThresholdsArgs) ToGetInsightApplicationsItemThresholdsOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightApplicationsItemThresholdsOutput)
}

type GetInsightApplicationsItemThresholdsOutput struct{ *pulumi.OutputState }

func (GetInsightApplicationsItemThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItemThresholds)(nil)).Elem()
}

func (o GetInsightApplicationsItemThresholdsOutput) ToGetInsightApplicationsItemThresholdsOutput() GetInsightApplicationsItemThresholdsOutput {
	return o
}

func (o GetInsightApplicationsItemThresholdsOutput) ToGetInsightApplicationsItemThresholdsOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsOutput {
	return o
}

// Threshold for each network
func (o GetInsightApplicationsItemThresholdsOutput) ByNetworks() GetInsightApplicationsItemThresholdsByNetworkArrayOutput {
	return o.ApplyT(func(v GetInsightApplicationsItemThresholds) []GetInsightApplicationsItemThresholdsByNetwork {
		return v.ByNetworks
	}).(GetInsightApplicationsItemThresholdsByNetworkArrayOutput)
}

// Threshold type (static or smart)
func (o GetInsightApplicationsItemThresholdsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightApplicationsItemThresholds) string { return v.Type }).(pulumi.StringOutput)
}

type GetInsightApplicationsItemThresholdsByNetwork struct {
	// Number of useful information bits delivered over a network per unit of time
	Goodput int `pulumi:"goodput"`
	// Network identifier
	NetworkId string `pulumi:"networkId"`
	// Duration of the response, in milliseconds
	ResponseDuration int `pulumi:"responseDuration"`
}

// GetInsightApplicationsItemThresholdsByNetworkInput is an input type that accepts GetInsightApplicationsItemThresholdsByNetworkArgs and GetInsightApplicationsItemThresholdsByNetworkOutput values.
// You can construct a concrete instance of `GetInsightApplicationsItemThresholdsByNetworkInput` via:
//
//	GetInsightApplicationsItemThresholdsByNetworkArgs{...}
type GetInsightApplicationsItemThresholdsByNetworkInput interface {
	pulumi.Input

	ToGetInsightApplicationsItemThresholdsByNetworkOutput() GetInsightApplicationsItemThresholdsByNetworkOutput
	ToGetInsightApplicationsItemThresholdsByNetworkOutputWithContext(context.Context) GetInsightApplicationsItemThresholdsByNetworkOutput
}

type GetInsightApplicationsItemThresholdsByNetworkArgs struct {
	// Number of useful information bits delivered over a network per unit of time
	Goodput pulumi.IntInput `pulumi:"goodput"`
	// Network identifier
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Duration of the response, in milliseconds
	ResponseDuration pulumi.IntInput `pulumi:"responseDuration"`
}

func (GetInsightApplicationsItemThresholdsByNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItemThresholdsByNetwork)(nil)).Elem()
}

func (i GetInsightApplicationsItemThresholdsByNetworkArgs) ToGetInsightApplicationsItemThresholdsByNetworkOutput() GetInsightApplicationsItemThresholdsByNetworkOutput {
	return i.ToGetInsightApplicationsItemThresholdsByNetworkOutputWithContext(context.Background())
}

func (i GetInsightApplicationsItemThresholdsByNetworkArgs) ToGetInsightApplicationsItemThresholdsByNetworkOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsByNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightApplicationsItemThresholdsByNetworkOutput)
}

// GetInsightApplicationsItemThresholdsByNetworkArrayInput is an input type that accepts GetInsightApplicationsItemThresholdsByNetworkArray and GetInsightApplicationsItemThresholdsByNetworkArrayOutput values.
// You can construct a concrete instance of `GetInsightApplicationsItemThresholdsByNetworkArrayInput` via:
//
//	GetInsightApplicationsItemThresholdsByNetworkArray{ GetInsightApplicationsItemThresholdsByNetworkArgs{...} }
type GetInsightApplicationsItemThresholdsByNetworkArrayInput interface {
	pulumi.Input

	ToGetInsightApplicationsItemThresholdsByNetworkArrayOutput() GetInsightApplicationsItemThresholdsByNetworkArrayOutput
	ToGetInsightApplicationsItemThresholdsByNetworkArrayOutputWithContext(context.Context) GetInsightApplicationsItemThresholdsByNetworkArrayOutput
}

type GetInsightApplicationsItemThresholdsByNetworkArray []GetInsightApplicationsItemThresholdsByNetworkInput

func (GetInsightApplicationsItemThresholdsByNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightApplicationsItemThresholdsByNetwork)(nil)).Elem()
}

func (i GetInsightApplicationsItemThresholdsByNetworkArray) ToGetInsightApplicationsItemThresholdsByNetworkArrayOutput() GetInsightApplicationsItemThresholdsByNetworkArrayOutput {
	return i.ToGetInsightApplicationsItemThresholdsByNetworkArrayOutputWithContext(context.Background())
}

func (i GetInsightApplicationsItemThresholdsByNetworkArray) ToGetInsightApplicationsItemThresholdsByNetworkArrayOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsByNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightApplicationsItemThresholdsByNetworkArrayOutput)
}

type GetInsightApplicationsItemThresholdsByNetworkOutput struct{ *pulumi.OutputState }

func (GetInsightApplicationsItemThresholdsByNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightApplicationsItemThresholdsByNetwork)(nil)).Elem()
}

func (o GetInsightApplicationsItemThresholdsByNetworkOutput) ToGetInsightApplicationsItemThresholdsByNetworkOutput() GetInsightApplicationsItemThresholdsByNetworkOutput {
	return o
}

func (o GetInsightApplicationsItemThresholdsByNetworkOutput) ToGetInsightApplicationsItemThresholdsByNetworkOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsByNetworkOutput {
	return o
}

// Number of useful information bits delivered over a network per unit of time
func (o GetInsightApplicationsItemThresholdsByNetworkOutput) Goodput() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightApplicationsItemThresholdsByNetwork) int { return v.Goodput }).(pulumi.IntOutput)
}

// Network identifier
func (o GetInsightApplicationsItemThresholdsByNetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightApplicationsItemThresholdsByNetwork) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Duration of the response, in milliseconds
func (o GetInsightApplicationsItemThresholdsByNetworkOutput) ResponseDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightApplicationsItemThresholdsByNetwork) int { return v.ResponseDuration }).(pulumi.IntOutput)
}

type GetInsightApplicationsItemThresholdsByNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetInsightApplicationsItemThresholdsByNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightApplicationsItemThresholdsByNetwork)(nil)).Elem()
}

func (o GetInsightApplicationsItemThresholdsByNetworkArrayOutput) ToGetInsightApplicationsItemThresholdsByNetworkArrayOutput() GetInsightApplicationsItemThresholdsByNetworkArrayOutput {
	return o
}

func (o GetInsightApplicationsItemThresholdsByNetworkArrayOutput) ToGetInsightApplicationsItemThresholdsByNetworkArrayOutputWithContext(ctx context.Context) GetInsightApplicationsItemThresholdsByNetworkArrayOutput {
	return o
}

func (o GetInsightApplicationsItemThresholdsByNetworkArrayOutput) Index(i pulumi.IntInput) GetInsightApplicationsItemThresholdsByNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightApplicationsItemThresholdsByNetwork {
		return vs[0].([]GetInsightApplicationsItemThresholdsByNetwork)[vs[1].(int)]
	}).(GetInsightApplicationsItemThresholdsByNetworkOutput)
}

type GetInsightMonitoredMediaServersItem struct {
	// The IP address (IPv4 only) or hostname of the media server to monitor
	Address string `pulumi:"address"`
	// Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead
	BestEffortMonitoringEnabled bool `pulumi:"bestEffortMonitoringEnabled"`
	// Monitored media server id
	Id string `pulumi:"id"`
	// The name of the VoIP provider
	Name string `pulumi:"name"`
}

// GetInsightMonitoredMediaServersItemInput is an input type that accepts GetInsightMonitoredMediaServersItemArgs and GetInsightMonitoredMediaServersItemOutput values.
// You can construct a concrete instance of `GetInsightMonitoredMediaServersItemInput` via:
//
//	GetInsightMonitoredMediaServersItemArgs{...}
type GetInsightMonitoredMediaServersItemInput interface {
	pulumi.Input

	ToGetInsightMonitoredMediaServersItemOutput() GetInsightMonitoredMediaServersItemOutput
	ToGetInsightMonitoredMediaServersItemOutputWithContext(context.Context) GetInsightMonitoredMediaServersItemOutput
}

type GetInsightMonitoredMediaServersItemArgs struct {
	// The IP address (IPv4 only) or hostname of the media server to monitor
	Address pulumi.StringInput `pulumi:"address"`
	// Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead
	BestEffortMonitoringEnabled pulumi.BoolInput `pulumi:"bestEffortMonitoringEnabled"`
	// Monitored media server id
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the VoIP provider
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInsightMonitoredMediaServersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightMonitoredMediaServersItem)(nil)).Elem()
}

func (i GetInsightMonitoredMediaServersItemArgs) ToGetInsightMonitoredMediaServersItemOutput() GetInsightMonitoredMediaServersItemOutput {
	return i.ToGetInsightMonitoredMediaServersItemOutputWithContext(context.Background())
}

func (i GetInsightMonitoredMediaServersItemArgs) ToGetInsightMonitoredMediaServersItemOutputWithContext(ctx context.Context) GetInsightMonitoredMediaServersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightMonitoredMediaServersItemOutput)
}

// GetInsightMonitoredMediaServersItemArrayInput is an input type that accepts GetInsightMonitoredMediaServersItemArray and GetInsightMonitoredMediaServersItemArrayOutput values.
// You can construct a concrete instance of `GetInsightMonitoredMediaServersItemArrayInput` via:
//
//	GetInsightMonitoredMediaServersItemArray{ GetInsightMonitoredMediaServersItemArgs{...} }
type GetInsightMonitoredMediaServersItemArrayInput interface {
	pulumi.Input

	ToGetInsightMonitoredMediaServersItemArrayOutput() GetInsightMonitoredMediaServersItemArrayOutput
	ToGetInsightMonitoredMediaServersItemArrayOutputWithContext(context.Context) GetInsightMonitoredMediaServersItemArrayOutput
}

type GetInsightMonitoredMediaServersItemArray []GetInsightMonitoredMediaServersItemInput

func (GetInsightMonitoredMediaServersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightMonitoredMediaServersItem)(nil)).Elem()
}

func (i GetInsightMonitoredMediaServersItemArray) ToGetInsightMonitoredMediaServersItemArrayOutput() GetInsightMonitoredMediaServersItemArrayOutput {
	return i.ToGetInsightMonitoredMediaServersItemArrayOutputWithContext(context.Background())
}

func (i GetInsightMonitoredMediaServersItemArray) ToGetInsightMonitoredMediaServersItemArrayOutputWithContext(ctx context.Context) GetInsightMonitoredMediaServersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightMonitoredMediaServersItemArrayOutput)
}

type GetInsightMonitoredMediaServersItemOutput struct{ *pulumi.OutputState }

func (GetInsightMonitoredMediaServersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightMonitoredMediaServersItem)(nil)).Elem()
}

func (o GetInsightMonitoredMediaServersItemOutput) ToGetInsightMonitoredMediaServersItemOutput() GetInsightMonitoredMediaServersItemOutput {
	return o
}

func (o GetInsightMonitoredMediaServersItemOutput) ToGetInsightMonitoredMediaServersItemOutputWithContext(ctx context.Context) GetInsightMonitoredMediaServersItemOutput {
	return o
}

// The IP address (IPv4 only) or hostname of the media server to monitor
func (o GetInsightMonitoredMediaServersItemOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightMonitoredMediaServersItem) string { return v.Address }).(pulumi.StringOutput)
}

// Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead
func (o GetInsightMonitoredMediaServersItemOutput) BestEffortMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInsightMonitoredMediaServersItem) bool { return v.BestEffortMonitoringEnabled }).(pulumi.BoolOutput)
}

// Monitored media server id
func (o GetInsightMonitoredMediaServersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightMonitoredMediaServersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the VoIP provider
func (o GetInsightMonitoredMediaServersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightMonitoredMediaServersItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetInsightMonitoredMediaServersItemArrayOutput struct{ *pulumi.OutputState }

func (GetInsightMonitoredMediaServersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightMonitoredMediaServersItem)(nil)).Elem()
}

func (o GetInsightMonitoredMediaServersItemArrayOutput) ToGetInsightMonitoredMediaServersItemArrayOutput() GetInsightMonitoredMediaServersItemArrayOutput {
	return o
}

func (o GetInsightMonitoredMediaServersItemArrayOutput) ToGetInsightMonitoredMediaServersItemArrayOutputWithContext(ctx context.Context) GetInsightMonitoredMediaServersItemArrayOutput {
	return o
}

func (o GetInsightMonitoredMediaServersItemArrayOutput) Index(i pulumi.IntInput) GetInsightMonitoredMediaServersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightMonitoredMediaServersItem {
		return vs[0].([]GetInsightMonitoredMediaServersItem)[vs[1].(int)]
	}).(GetInsightMonitoredMediaServersItemOutput)
}

type GetInventoryDevicesItem struct {
	// Claimed time of the device
	ClaimedAt string `pulumi:"claimedAt"`
	// Country/region code from device, network, or store order
	CountryCode string `pulumi:"countryCode"`
	// Additional device information
	Details []GetInventoryDevicesItemDetail `pulumi:"details"`
	// License expiration date of the device
	LicenseExpirationDate string `pulumi:"licenseExpirationDate"`
	// MAC address of the device
	Mac string `pulumi:"mac"`
	// Model type of the device
	Model string `pulumi:"model"`
	// Name of the device
	Name string `pulumi:"name"`
	// Network Id of the device
	NetworkId string `pulumi:"networkId"`
	// Order number of the device
	OrderNumber string `pulumi:"orderNumber"`
	// Product type of the device
	ProductType string `pulumi:"productType"`
	// Serial number of the device
	Serial string `pulumi:"serial"`
	// Device tags
	Tags []string `pulumi:"tags"`
}

// GetInventoryDevicesItemInput is an input type that accepts GetInventoryDevicesItemArgs and GetInventoryDevicesItemOutput values.
// You can construct a concrete instance of `GetInventoryDevicesItemInput` via:
//
//	GetInventoryDevicesItemArgs{...}
type GetInventoryDevicesItemInput interface {
	pulumi.Input

	ToGetInventoryDevicesItemOutput() GetInventoryDevicesItemOutput
	ToGetInventoryDevicesItemOutputWithContext(context.Context) GetInventoryDevicesItemOutput
}

type GetInventoryDevicesItemArgs struct {
	// Claimed time of the device
	ClaimedAt pulumi.StringInput `pulumi:"claimedAt"`
	// Country/region code from device, network, or store order
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// Additional device information
	Details GetInventoryDevicesItemDetailArrayInput `pulumi:"details"`
	// License expiration date of the device
	LicenseExpirationDate pulumi.StringInput `pulumi:"licenseExpirationDate"`
	// MAC address of the device
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model type of the device
	Model pulumi.StringInput `pulumi:"model"`
	// Name of the device
	Name pulumi.StringInput `pulumi:"name"`
	// Network Id of the device
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Order number of the device
	OrderNumber pulumi.StringInput `pulumi:"orderNumber"`
	// Product type of the device
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Serial number of the device
	Serial pulumi.StringInput `pulumi:"serial"`
	// Device tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetInventoryDevicesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesItem)(nil)).Elem()
}

func (i GetInventoryDevicesItemArgs) ToGetInventoryDevicesItemOutput() GetInventoryDevicesItemOutput {
	return i.ToGetInventoryDevicesItemOutputWithContext(context.Background())
}

func (i GetInventoryDevicesItemArgs) ToGetInventoryDevicesItemOutputWithContext(ctx context.Context) GetInventoryDevicesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryDevicesItemOutput)
}

// GetInventoryDevicesItemArrayInput is an input type that accepts GetInventoryDevicesItemArray and GetInventoryDevicesItemArrayOutput values.
// You can construct a concrete instance of `GetInventoryDevicesItemArrayInput` via:
//
//	GetInventoryDevicesItemArray{ GetInventoryDevicesItemArgs{...} }
type GetInventoryDevicesItemArrayInput interface {
	pulumi.Input

	ToGetInventoryDevicesItemArrayOutput() GetInventoryDevicesItemArrayOutput
	ToGetInventoryDevicesItemArrayOutputWithContext(context.Context) GetInventoryDevicesItemArrayOutput
}

type GetInventoryDevicesItemArray []GetInventoryDevicesItemInput

func (GetInventoryDevicesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryDevicesItem)(nil)).Elem()
}

func (i GetInventoryDevicesItemArray) ToGetInventoryDevicesItemArrayOutput() GetInventoryDevicesItemArrayOutput {
	return i.ToGetInventoryDevicesItemArrayOutputWithContext(context.Background())
}

func (i GetInventoryDevicesItemArray) ToGetInventoryDevicesItemArrayOutputWithContext(ctx context.Context) GetInventoryDevicesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryDevicesItemArrayOutput)
}

type GetInventoryDevicesItemOutput struct{ *pulumi.OutputState }

func (GetInventoryDevicesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesItem)(nil)).Elem()
}

func (o GetInventoryDevicesItemOutput) ToGetInventoryDevicesItemOutput() GetInventoryDevicesItemOutput {
	return o
}

func (o GetInventoryDevicesItemOutput) ToGetInventoryDevicesItemOutputWithContext(ctx context.Context) GetInventoryDevicesItemOutput {
	return o
}

// Claimed time of the device
func (o GetInventoryDevicesItemOutput) ClaimedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.ClaimedAt }).(pulumi.StringOutput)
}

// Country/region code from device, network, or store order
func (o GetInventoryDevicesItemOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.CountryCode }).(pulumi.StringOutput)
}

// Additional device information
func (o GetInventoryDevicesItemOutput) Details() GetInventoryDevicesItemDetailArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) []GetInventoryDevicesItemDetail { return v.Details }).(GetInventoryDevicesItemDetailArrayOutput)
}

// License expiration date of the device
func (o GetInventoryDevicesItemOutput) LicenseExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.LicenseExpirationDate }).(pulumi.StringOutput)
}

// MAC address of the device
func (o GetInventoryDevicesItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model type of the device
func (o GetInventoryDevicesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the device
func (o GetInventoryDevicesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network Id of the device
func (o GetInventoryDevicesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Order number of the device
func (o GetInventoryDevicesItemOutput) OrderNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.OrderNumber }).(pulumi.StringOutput)
}

// Product type of the device
func (o GetInventoryDevicesItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// Serial number of the device
func (o GetInventoryDevicesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Device tags
func (o GetInventoryDevicesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryDevicesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetInventoryDevicesItemArrayOutput struct{ *pulumi.OutputState }

func (GetInventoryDevicesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryDevicesItem)(nil)).Elem()
}

func (o GetInventoryDevicesItemArrayOutput) ToGetInventoryDevicesItemArrayOutput() GetInventoryDevicesItemArrayOutput {
	return o
}

func (o GetInventoryDevicesItemArrayOutput) ToGetInventoryDevicesItemArrayOutputWithContext(ctx context.Context) GetInventoryDevicesItemArrayOutput {
	return o
}

func (o GetInventoryDevicesItemArrayOutput) Index(i pulumi.IntInput) GetInventoryDevicesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInventoryDevicesItem {
		return vs[0].([]GetInventoryDevicesItem)[vs[1].(int)]
	}).(GetInventoryDevicesItemOutput)
}

type GetInventoryDevicesItemDetail struct {
	// Additional property name
	Name string `pulumi:"name"`
	// Additional property value
	Value string `pulumi:"value"`
}

// GetInventoryDevicesItemDetailInput is an input type that accepts GetInventoryDevicesItemDetailArgs and GetInventoryDevicesItemDetailOutput values.
// You can construct a concrete instance of `GetInventoryDevicesItemDetailInput` via:
//
//	GetInventoryDevicesItemDetailArgs{...}
type GetInventoryDevicesItemDetailInput interface {
	pulumi.Input

	ToGetInventoryDevicesItemDetailOutput() GetInventoryDevicesItemDetailOutput
	ToGetInventoryDevicesItemDetailOutputWithContext(context.Context) GetInventoryDevicesItemDetailOutput
}

type GetInventoryDevicesItemDetailArgs struct {
	// Additional property name
	Name pulumi.StringInput `pulumi:"name"`
	// Additional property value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInventoryDevicesItemDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesItemDetail)(nil)).Elem()
}

func (i GetInventoryDevicesItemDetailArgs) ToGetInventoryDevicesItemDetailOutput() GetInventoryDevicesItemDetailOutput {
	return i.ToGetInventoryDevicesItemDetailOutputWithContext(context.Background())
}

func (i GetInventoryDevicesItemDetailArgs) ToGetInventoryDevicesItemDetailOutputWithContext(ctx context.Context) GetInventoryDevicesItemDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryDevicesItemDetailOutput)
}

// GetInventoryDevicesItemDetailArrayInput is an input type that accepts GetInventoryDevicesItemDetailArray and GetInventoryDevicesItemDetailArrayOutput values.
// You can construct a concrete instance of `GetInventoryDevicesItemDetailArrayInput` via:
//
//	GetInventoryDevicesItemDetailArray{ GetInventoryDevicesItemDetailArgs{...} }
type GetInventoryDevicesItemDetailArrayInput interface {
	pulumi.Input

	ToGetInventoryDevicesItemDetailArrayOutput() GetInventoryDevicesItemDetailArrayOutput
	ToGetInventoryDevicesItemDetailArrayOutputWithContext(context.Context) GetInventoryDevicesItemDetailArrayOutput
}

type GetInventoryDevicesItemDetailArray []GetInventoryDevicesItemDetailInput

func (GetInventoryDevicesItemDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryDevicesItemDetail)(nil)).Elem()
}

func (i GetInventoryDevicesItemDetailArray) ToGetInventoryDevicesItemDetailArrayOutput() GetInventoryDevicesItemDetailArrayOutput {
	return i.ToGetInventoryDevicesItemDetailArrayOutputWithContext(context.Background())
}

func (i GetInventoryDevicesItemDetailArray) ToGetInventoryDevicesItemDetailArrayOutputWithContext(ctx context.Context) GetInventoryDevicesItemDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryDevicesItemDetailArrayOutput)
}

type GetInventoryDevicesItemDetailOutput struct{ *pulumi.OutputState }

func (GetInventoryDevicesItemDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryDevicesItemDetail)(nil)).Elem()
}

func (o GetInventoryDevicesItemDetailOutput) ToGetInventoryDevicesItemDetailOutput() GetInventoryDevicesItemDetailOutput {
	return o
}

func (o GetInventoryDevicesItemDetailOutput) ToGetInventoryDevicesItemDetailOutputWithContext(ctx context.Context) GetInventoryDevicesItemDetailOutput {
	return o
}

// Additional property name
func (o GetInventoryDevicesItemDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItemDetail) string { return v.Name }).(pulumi.StringOutput)
}

// Additional property value
func (o GetInventoryDevicesItemDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryDevicesItemDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetInventoryDevicesItemDetailArrayOutput struct{ *pulumi.OutputState }

func (GetInventoryDevicesItemDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryDevicesItemDetail)(nil)).Elem()
}

func (o GetInventoryDevicesItemDetailArrayOutput) ToGetInventoryDevicesItemDetailArrayOutput() GetInventoryDevicesItemDetailArrayOutput {
	return o
}

func (o GetInventoryDevicesItemDetailArrayOutput) ToGetInventoryDevicesItemDetailArrayOutputWithContext(ctx context.Context) GetInventoryDevicesItemDetailArrayOutput {
	return o
}

func (o GetInventoryDevicesItemDetailArrayOutput) Index(i pulumi.IntInput) GetInventoryDevicesItemDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInventoryDevicesItemDetail {
		return vs[0].([]GetInventoryDevicesItemDetail)[vs[1].(int)]
	}).(GetInventoryDevicesItemDetailOutput)
}

type GetInventoryOnboardingCloudMonitoringImportsItem struct {
	// Represents the details of an imported device.
	Device GetInventoryOnboardingCloudMonitoringImportsItemDevice `pulumi:"device"`
	// Database ID for the new entity entry.
	ImportId string `pulumi:"importId"`
}

// GetInventoryOnboardingCloudMonitoringImportsItemInput is an input type that accepts GetInventoryOnboardingCloudMonitoringImportsItemArgs and GetInventoryOnboardingCloudMonitoringImportsItemOutput values.
// You can construct a concrete instance of `GetInventoryOnboardingCloudMonitoringImportsItemInput` via:
//
//	GetInventoryOnboardingCloudMonitoringImportsItemArgs{...}
type GetInventoryOnboardingCloudMonitoringImportsItemInput interface {
	pulumi.Input

	ToGetInventoryOnboardingCloudMonitoringImportsItemOutput() GetInventoryOnboardingCloudMonitoringImportsItemOutput
	ToGetInventoryOnboardingCloudMonitoringImportsItemOutputWithContext(context.Context) GetInventoryOnboardingCloudMonitoringImportsItemOutput
}

type GetInventoryOnboardingCloudMonitoringImportsItemArgs struct {
	// Represents the details of an imported device.
	Device GetInventoryOnboardingCloudMonitoringImportsItemDeviceInput `pulumi:"device"`
	// Database ID for the new entity entry.
	ImportId pulumi.StringInput `pulumi:"importId"`
}

func (GetInventoryOnboardingCloudMonitoringImportsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItem)(nil)).Elem()
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemArgs) ToGetInventoryOnboardingCloudMonitoringImportsItemOutput() GetInventoryOnboardingCloudMonitoringImportsItemOutput {
	return i.ToGetInventoryOnboardingCloudMonitoringImportsItemOutputWithContext(context.Background())
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemArgs) ToGetInventoryOnboardingCloudMonitoringImportsItemOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryOnboardingCloudMonitoringImportsItemOutput)
}

// GetInventoryOnboardingCloudMonitoringImportsItemArrayInput is an input type that accepts GetInventoryOnboardingCloudMonitoringImportsItemArray and GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput values.
// You can construct a concrete instance of `GetInventoryOnboardingCloudMonitoringImportsItemArrayInput` via:
//
//	GetInventoryOnboardingCloudMonitoringImportsItemArray{ GetInventoryOnboardingCloudMonitoringImportsItemArgs{...} }
type GetInventoryOnboardingCloudMonitoringImportsItemArrayInput interface {
	pulumi.Input

	ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutput() GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput
	ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutputWithContext(context.Context) GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput
}

type GetInventoryOnboardingCloudMonitoringImportsItemArray []GetInventoryOnboardingCloudMonitoringImportsItemInput

func (GetInventoryOnboardingCloudMonitoringImportsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryOnboardingCloudMonitoringImportsItem)(nil)).Elem()
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemArray) ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutput() GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput {
	return i.ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutputWithContext(context.Background())
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemArray) ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput)
}

type GetInventoryOnboardingCloudMonitoringImportsItemOutput struct{ *pulumi.OutputState }

func (GetInventoryOnboardingCloudMonitoringImportsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItem)(nil)).Elem()
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemOutput() GetInventoryOnboardingCloudMonitoringImportsItemOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemOutput {
	return o
}

// Represents the details of an imported device.
func (o GetInventoryOnboardingCloudMonitoringImportsItemOutput) Device() GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringImportsItem) GetInventoryOnboardingCloudMonitoringImportsItemDevice {
		return v.Device
	}).(GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput)
}

// Database ID for the new entity entry.
func (o GetInventoryOnboardingCloudMonitoringImportsItemOutput) ImportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringImportsItem) string { return v.ImportId }).(pulumi.StringOutput)
}

type GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput struct{ *pulumi.OutputState }

func (GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryOnboardingCloudMonitoringImportsItem)(nil)).Elem()
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutput() GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemArrayOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput) Index(i pulumi.IntInput) GetInventoryOnboardingCloudMonitoringImportsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInventoryOnboardingCloudMonitoringImportsItem {
		return vs[0].([]GetInventoryOnboardingCloudMonitoringImportsItem)[vs[1].(int)]
	}).(GetInventoryOnboardingCloudMonitoringImportsItemOutput)
}

type GetInventoryOnboardingCloudMonitoringImportsItemDevice struct {
	// Whether or not the device was successfully created in dashboard.
	Created bool `pulumi:"created"`
	// Represents the current state of importing the device.
	Status string `pulumi:"status"`
	// The url to the device details page within dashboard.
	Url string `pulumi:"url"`
}

// GetInventoryOnboardingCloudMonitoringImportsItemDeviceInput is an input type that accepts GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs and GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput values.
// You can construct a concrete instance of `GetInventoryOnboardingCloudMonitoringImportsItemDeviceInput` via:
//
//	GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs{...}
type GetInventoryOnboardingCloudMonitoringImportsItemDeviceInput interface {
	pulumi.Input

	ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput() GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput
	ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutputWithContext(context.Context) GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput
}

type GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs struct {
	// Whether or not the device was successfully created in dashboard.
	Created pulumi.BoolInput `pulumi:"created"`
	// Represents the current state of importing the device.
	Status pulumi.StringInput `pulumi:"status"`
	// The url to the device details page within dashboard.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItemDevice)(nil)).Elem()
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs) ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput() GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput {
	return i.ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutputWithContext(context.Background())
}

func (i GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs) ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput)
}

type GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput struct{ *pulumi.OutputState }

func (GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItemDevice)(nil)).Elem()
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput() GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) ToGetInventoryOnboardingCloudMonitoringImportsItemDeviceOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput {
	return o
}

// Whether or not the device was successfully created in dashboard.
func (o GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) Created() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringImportsItemDevice) bool { return v.Created }).(pulumi.BoolOutput)
}

// Represents the current state of importing the device.
func (o GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringImportsItemDevice) string { return v.Status }).(pulumi.StringOutput)
}

// The url to the device details page within dashboard.
func (o GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringImportsItemDevice) string { return v.Url }).(pulumi.StringOutput)
}

type GetInventoryOnboardingCloudMonitoringNetworksItem struct {
	// Enrollment string for the network
	EnrollmentString string `pulumi:"enrollmentString"`
	// Network ID
	Id string `pulumi:"id"`
	// If the network is bound to a config template
	IsBoundToConfigTemplate bool `pulumi:"isBoundToConfigTemplate"`
	// Network name
	Name string `pulumi:"name"`
	// Notes for the network
	Notes string `pulumi:"notes"`
	// Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// List of the product types that the network supports
	ProductTypes []string `pulumi:"productTypes"`
	// Network tags
	Tags []string `pulumi:"tags"`
	// Timezone of the network
	TimeZone string `pulumi:"timeZone"`
	// URL to the network Dashboard UI
	Url string `pulumi:"url"`
}

// GetInventoryOnboardingCloudMonitoringNetworksItemInput is an input type that accepts GetInventoryOnboardingCloudMonitoringNetworksItemArgs and GetInventoryOnboardingCloudMonitoringNetworksItemOutput values.
// You can construct a concrete instance of `GetInventoryOnboardingCloudMonitoringNetworksItemInput` via:
//
//	GetInventoryOnboardingCloudMonitoringNetworksItemArgs{...}
type GetInventoryOnboardingCloudMonitoringNetworksItemInput interface {
	pulumi.Input

	ToGetInventoryOnboardingCloudMonitoringNetworksItemOutput() GetInventoryOnboardingCloudMonitoringNetworksItemOutput
	ToGetInventoryOnboardingCloudMonitoringNetworksItemOutputWithContext(context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemOutput
}

type GetInventoryOnboardingCloudMonitoringNetworksItemArgs struct {
	// Enrollment string for the network
	EnrollmentString pulumi.StringInput `pulumi:"enrollmentString"`
	// Network ID
	Id pulumi.StringInput `pulumi:"id"`
	// If the network is bound to a config template
	IsBoundToConfigTemplate pulumi.BoolInput `pulumi:"isBoundToConfigTemplate"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
	// Notes for the network
	Notes pulumi.StringInput `pulumi:"notes"`
	// Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// List of the product types that the network supports
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Network tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Timezone of the network
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// URL to the network Dashboard UI
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetInventoryOnboardingCloudMonitoringNetworksItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringNetworksItem)(nil)).Elem()
}

func (i GetInventoryOnboardingCloudMonitoringNetworksItemArgs) ToGetInventoryOnboardingCloudMonitoringNetworksItemOutput() GetInventoryOnboardingCloudMonitoringNetworksItemOutput {
	return i.ToGetInventoryOnboardingCloudMonitoringNetworksItemOutputWithContext(context.Background())
}

func (i GetInventoryOnboardingCloudMonitoringNetworksItemArgs) ToGetInventoryOnboardingCloudMonitoringNetworksItemOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryOnboardingCloudMonitoringNetworksItemOutput)
}

// GetInventoryOnboardingCloudMonitoringNetworksItemArrayInput is an input type that accepts GetInventoryOnboardingCloudMonitoringNetworksItemArray and GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput values.
// You can construct a concrete instance of `GetInventoryOnboardingCloudMonitoringNetworksItemArrayInput` via:
//
//	GetInventoryOnboardingCloudMonitoringNetworksItemArray{ GetInventoryOnboardingCloudMonitoringNetworksItemArgs{...} }
type GetInventoryOnboardingCloudMonitoringNetworksItemArrayInput interface {
	pulumi.Input

	ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput() GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput
	ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutputWithContext(context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput
}

type GetInventoryOnboardingCloudMonitoringNetworksItemArray []GetInventoryOnboardingCloudMonitoringNetworksItemInput

func (GetInventoryOnboardingCloudMonitoringNetworksItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryOnboardingCloudMonitoringNetworksItem)(nil)).Elem()
}

func (i GetInventoryOnboardingCloudMonitoringNetworksItemArray) ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput() GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput {
	return i.ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutputWithContext(context.Background())
}

func (i GetInventoryOnboardingCloudMonitoringNetworksItemArray) ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput)
}

type GetInventoryOnboardingCloudMonitoringNetworksItemOutput struct{ *pulumi.OutputState }

func (GetInventoryOnboardingCloudMonitoringNetworksItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringNetworksItem)(nil)).Elem()
}

func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) ToGetInventoryOnboardingCloudMonitoringNetworksItemOutput() GetInventoryOnboardingCloudMonitoringNetworksItemOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) ToGetInventoryOnboardingCloudMonitoringNetworksItemOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemOutput {
	return o
}

// Enrollment string for the network
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) EnrollmentString() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.EnrollmentString }).(pulumi.StringOutput)
}

// Network ID
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.Id }).(pulumi.StringOutput)
}

// If the network is bound to a config template
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) IsBoundToConfigTemplate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) bool { return v.IsBoundToConfigTemplate }).(pulumi.BoolOutput)
}

// Network name
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.Name }).(pulumi.StringOutput)
}

// Notes for the network
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.Notes }).(pulumi.StringOutput)
}

// Organization ID
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// List of the product types that the network supports
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Network tags
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Timezone of the network
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.TimeZone }).(pulumi.StringOutput)
}

// URL to the network Dashboard UI
func (o GetInventoryOnboardingCloudMonitoringNetworksItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryOnboardingCloudMonitoringNetworksItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput struct{ *pulumi.OutputState }

func (GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInventoryOnboardingCloudMonitoringNetworksItem)(nil)).Elem()
}

func (o GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput) ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput() GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput) ToGetInventoryOnboardingCloudMonitoringNetworksItemArrayOutputWithContext(ctx context.Context) GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput {
	return o
}

func (o GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput) Index(i pulumi.IntInput) GetInventoryOnboardingCloudMonitoringNetworksItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInventoryOnboardingCloudMonitoringNetworksItem {
		return vs[0].([]GetInventoryOnboardingCloudMonitoringNetworksItem)[vs[1].(int)]
	}).(GetInventoryOnboardingCloudMonitoringNetworksItemOutput)
}

type GetLicensesItem struct {
	// The date the license started burning
	ActivationDate string `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate string `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial string `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays int `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate string `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId string `pulumi:"headLicenseId"`
	// License ID
	Id string `pulumi:"id"`
	// License key
	LicenseKey string `pulumi:"licenseKey"`
	// License type
	LicenseType string `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId string `pulumi:"networkId"`
	// Order number
	OrderNumber string `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses []GetLicensesItemPermanentlyQueuedLicense `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount int `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State string `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays int `pulumi:"totalDurationInDays"`
}

// GetLicensesItemInput is an input type that accepts GetLicensesItemArgs and GetLicensesItemOutput values.
// You can construct a concrete instance of `GetLicensesItemInput` via:
//
//	GetLicensesItemArgs{...}
type GetLicensesItemInput interface {
	pulumi.Input

	ToGetLicensesItemOutput() GetLicensesItemOutput
	ToGetLicensesItemOutputWithContext(context.Context) GetLicensesItemOutput
}

type GetLicensesItemArgs struct {
	// The date the license started burning
	ActivationDate pulumi.StringInput `pulumi:"activationDate"`
	// The date the license was claimed into the organization
	ClaimDate pulumi.StringInput `pulumi:"claimDate"`
	// Serial number of the device the license is assigned to
	DeviceSerial pulumi.StringInput `pulumi:"deviceSerial"`
	// The duration of the individual license
	DurationInDays pulumi.IntInput `pulumi:"durationInDays"`
	// The date the license will expire
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The id of the head license this license is queued behind. If there is no head license, it returns nil.
	HeadLicenseId pulumi.StringInput `pulumi:"headLicenseId"`
	// License ID
	Id pulumi.StringInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringInput `pulumi:"licenseType"`
	// ID of the network the license is assigned to
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Order number
	OrderNumber pulumi.StringInput `pulumi:"orderNumber"`
	// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
	PermanentlyQueuedLicenses GetLicensesItemPermanentlyQueuedLicenseArrayInput `pulumi:"permanentlyQueuedLicenses"`
	// The number of seats of the license. Only applicable to SM licenses.
	SeatCount pulumi.IntInput `pulumi:"seatCount"`
	// The state of the license. All queued licenses have a status of *recentlyQueued*.
	State pulumi.StringInput `pulumi:"state"`
	// The duration of the license plus all permanently queued licenses associated with it
	TotalDurationInDays pulumi.IntInput `pulumi:"totalDurationInDays"`
}

func (GetLicensesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesItem)(nil)).Elem()
}

func (i GetLicensesItemArgs) ToGetLicensesItemOutput() GetLicensesItemOutput {
	return i.ToGetLicensesItemOutputWithContext(context.Background())
}

func (i GetLicensesItemArgs) ToGetLicensesItemOutputWithContext(ctx context.Context) GetLicensesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesItemOutput)
}

type GetLicensesItemOutput struct{ *pulumi.OutputState }

func (GetLicensesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesItem)(nil)).Elem()
}

func (o GetLicensesItemOutput) ToGetLicensesItemOutput() GetLicensesItemOutput {
	return o
}

func (o GetLicensesItemOutput) ToGetLicensesItemOutputWithContext(ctx context.Context) GetLicensesItemOutput {
	return o
}

// The date the license started burning
func (o GetLicensesItemOutput) ActivationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.ActivationDate }).(pulumi.StringOutput)
}

// The date the license was claimed into the organization
func (o GetLicensesItemOutput) ClaimDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.ClaimDate }).(pulumi.StringOutput)
}

// Serial number of the device the license is assigned to
func (o GetLicensesItemOutput) DeviceSerial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.DeviceSerial }).(pulumi.StringOutput)
}

// The duration of the individual license
func (o GetLicensesItemOutput) DurationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesItem) int { return v.DurationInDays }).(pulumi.IntOutput)
}

// The date the license will expire
func (o GetLicensesItemOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The id of the head license this license is queued behind. If there is no head license, it returns nil.
func (o GetLicensesItemOutput) HeadLicenseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.HeadLicenseId }).(pulumi.StringOutput)
}

// License ID
func (o GetLicensesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.Id }).(pulumi.StringOutput)
}

// License key
func (o GetLicensesItemOutput) LicenseKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.LicenseKey }).(pulumi.StringOutput)
}

// License type
func (o GetLicensesItemOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.LicenseType }).(pulumi.StringOutput)
}

// ID of the network the license is assigned to
func (o GetLicensesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Order number
func (o GetLicensesItemOutput) OrderNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.OrderNumber }).(pulumi.StringOutput)
}

// DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
func (o GetLicensesItemOutput) PermanentlyQueuedLicenses() GetLicensesItemPermanentlyQueuedLicenseArrayOutput {
	return o.ApplyT(func(v GetLicensesItem) []GetLicensesItemPermanentlyQueuedLicense { return v.PermanentlyQueuedLicenses }).(GetLicensesItemPermanentlyQueuedLicenseArrayOutput)
}

// The number of seats of the license. Only applicable to SM licenses.
func (o GetLicensesItemOutput) SeatCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesItem) int { return v.SeatCount }).(pulumi.IntOutput)
}

// The state of the license. All queued licenses have a status of *recentlyQueued*.
func (o GetLicensesItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItem) string { return v.State }).(pulumi.StringOutput)
}

// The duration of the license plus all permanently queued licenses associated with it
func (o GetLicensesItemOutput) TotalDurationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesItem) int { return v.TotalDurationInDays }).(pulumi.IntOutput)
}

type GetLicensesItemPermanentlyQueuedLicense struct {
	// The duration of the individual license
	DurationInDays int `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id string `pulumi:"id"`
	// License key
	LicenseKey string `pulumi:"licenseKey"`
	// License type
	LicenseType string `pulumi:"licenseType"`
	// Order number
	OrderNumber string `pulumi:"orderNumber"`
}

// GetLicensesItemPermanentlyQueuedLicenseInput is an input type that accepts GetLicensesItemPermanentlyQueuedLicenseArgs and GetLicensesItemPermanentlyQueuedLicenseOutput values.
// You can construct a concrete instance of `GetLicensesItemPermanentlyQueuedLicenseInput` via:
//
//	GetLicensesItemPermanentlyQueuedLicenseArgs{...}
type GetLicensesItemPermanentlyQueuedLicenseInput interface {
	pulumi.Input

	ToGetLicensesItemPermanentlyQueuedLicenseOutput() GetLicensesItemPermanentlyQueuedLicenseOutput
	ToGetLicensesItemPermanentlyQueuedLicenseOutputWithContext(context.Context) GetLicensesItemPermanentlyQueuedLicenseOutput
}

type GetLicensesItemPermanentlyQueuedLicenseArgs struct {
	// The duration of the individual license
	DurationInDays pulumi.IntInput `pulumi:"durationInDays"`
	// Permanently queued license ID
	Id pulumi.StringInput `pulumi:"id"`
	// License key
	LicenseKey pulumi.StringInput `pulumi:"licenseKey"`
	// License type
	LicenseType pulumi.StringInput `pulumi:"licenseType"`
	// Order number
	OrderNumber pulumi.StringInput `pulumi:"orderNumber"`
}

func (GetLicensesItemPermanentlyQueuedLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesItemPermanentlyQueuedLicense)(nil)).Elem()
}

func (i GetLicensesItemPermanentlyQueuedLicenseArgs) ToGetLicensesItemPermanentlyQueuedLicenseOutput() GetLicensesItemPermanentlyQueuedLicenseOutput {
	return i.ToGetLicensesItemPermanentlyQueuedLicenseOutputWithContext(context.Background())
}

func (i GetLicensesItemPermanentlyQueuedLicenseArgs) ToGetLicensesItemPermanentlyQueuedLicenseOutputWithContext(ctx context.Context) GetLicensesItemPermanentlyQueuedLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesItemPermanentlyQueuedLicenseOutput)
}

// GetLicensesItemPermanentlyQueuedLicenseArrayInput is an input type that accepts GetLicensesItemPermanentlyQueuedLicenseArray and GetLicensesItemPermanentlyQueuedLicenseArrayOutput values.
// You can construct a concrete instance of `GetLicensesItemPermanentlyQueuedLicenseArrayInput` via:
//
//	GetLicensesItemPermanentlyQueuedLicenseArray{ GetLicensesItemPermanentlyQueuedLicenseArgs{...} }
type GetLicensesItemPermanentlyQueuedLicenseArrayInput interface {
	pulumi.Input

	ToGetLicensesItemPermanentlyQueuedLicenseArrayOutput() GetLicensesItemPermanentlyQueuedLicenseArrayOutput
	ToGetLicensesItemPermanentlyQueuedLicenseArrayOutputWithContext(context.Context) GetLicensesItemPermanentlyQueuedLicenseArrayOutput
}

type GetLicensesItemPermanentlyQueuedLicenseArray []GetLicensesItemPermanentlyQueuedLicenseInput

func (GetLicensesItemPermanentlyQueuedLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensesItemPermanentlyQueuedLicense)(nil)).Elem()
}

func (i GetLicensesItemPermanentlyQueuedLicenseArray) ToGetLicensesItemPermanentlyQueuedLicenseArrayOutput() GetLicensesItemPermanentlyQueuedLicenseArrayOutput {
	return i.ToGetLicensesItemPermanentlyQueuedLicenseArrayOutputWithContext(context.Background())
}

func (i GetLicensesItemPermanentlyQueuedLicenseArray) ToGetLicensesItemPermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) GetLicensesItemPermanentlyQueuedLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesItemPermanentlyQueuedLicenseArrayOutput)
}

type GetLicensesItemPermanentlyQueuedLicenseOutput struct{ *pulumi.OutputState }

func (GetLicensesItemPermanentlyQueuedLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesItemPermanentlyQueuedLicense)(nil)).Elem()
}

func (o GetLicensesItemPermanentlyQueuedLicenseOutput) ToGetLicensesItemPermanentlyQueuedLicenseOutput() GetLicensesItemPermanentlyQueuedLicenseOutput {
	return o
}

func (o GetLicensesItemPermanentlyQueuedLicenseOutput) ToGetLicensesItemPermanentlyQueuedLicenseOutputWithContext(ctx context.Context) GetLicensesItemPermanentlyQueuedLicenseOutput {
	return o
}

// The duration of the individual license
func (o GetLicensesItemPermanentlyQueuedLicenseOutput) DurationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesItemPermanentlyQueuedLicense) int { return v.DurationInDays }).(pulumi.IntOutput)
}

// Permanently queued license ID
func (o GetLicensesItemPermanentlyQueuedLicenseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItemPermanentlyQueuedLicense) string { return v.Id }).(pulumi.StringOutput)
}

// License key
func (o GetLicensesItemPermanentlyQueuedLicenseOutput) LicenseKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItemPermanentlyQueuedLicense) string { return v.LicenseKey }).(pulumi.StringOutput)
}

// License type
func (o GetLicensesItemPermanentlyQueuedLicenseOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItemPermanentlyQueuedLicense) string { return v.LicenseType }).(pulumi.StringOutput)
}

// Order number
func (o GetLicensesItemPermanentlyQueuedLicenseOutput) OrderNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesItemPermanentlyQueuedLicense) string { return v.OrderNumber }).(pulumi.StringOutput)
}

type GetLicensesItemPermanentlyQueuedLicenseArrayOutput struct{ *pulumi.OutputState }

func (GetLicensesItemPermanentlyQueuedLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensesItemPermanentlyQueuedLicense)(nil)).Elem()
}

func (o GetLicensesItemPermanentlyQueuedLicenseArrayOutput) ToGetLicensesItemPermanentlyQueuedLicenseArrayOutput() GetLicensesItemPermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o GetLicensesItemPermanentlyQueuedLicenseArrayOutput) ToGetLicensesItemPermanentlyQueuedLicenseArrayOutputWithContext(ctx context.Context) GetLicensesItemPermanentlyQueuedLicenseArrayOutput {
	return o
}

func (o GetLicensesItemPermanentlyQueuedLicenseArrayOutput) Index(i pulumi.IntInput) GetLicensesItemPermanentlyQueuedLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensesItemPermanentlyQueuedLicense {
		return vs[0].([]GetLicensesItemPermanentlyQueuedLicense)[vs[1].(int)]
	}).(GetLicensesItemPermanentlyQueuedLicenseOutput)
}

type GetLicensesOverviewItem struct {
	// License expiration date (Co-termination licensing only)
	ExpirationDate string `pulumi:"expirationDate"`
	// Total number of licenses (Per-device licensing only)
	LicenseCount int `pulumi:"licenseCount"`
	// Data by license type (Per-device licensing only)
	LicenseTypes []GetLicensesOverviewItemLicenseType `pulumi:"licenseTypes"`
	// License counts (Co-termination licensing only)
	LicensedDeviceCounts string `pulumi:"licensedDeviceCounts"`
	// Aggregated data for licenses by state (Per-device licensing only)
	States GetLicensesOverviewItemStates `pulumi:"states"`
	// License status (Co-termination licensing only)
	Status string `pulumi:"status"`
	// Aggregated data for Systems Manager licenses (Per-device licensing only)
	SystemsManager GetLicensesOverviewItemSystemsManager `pulumi:"systemsManager"`
}

// GetLicensesOverviewItemInput is an input type that accepts GetLicensesOverviewItemArgs and GetLicensesOverviewItemOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemInput` via:
//
//	GetLicensesOverviewItemArgs{...}
type GetLicensesOverviewItemInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemOutput() GetLicensesOverviewItemOutput
	ToGetLicensesOverviewItemOutputWithContext(context.Context) GetLicensesOverviewItemOutput
}

type GetLicensesOverviewItemArgs struct {
	// License expiration date (Co-termination licensing only)
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// Total number of licenses (Per-device licensing only)
	LicenseCount pulumi.IntInput `pulumi:"licenseCount"`
	// Data by license type (Per-device licensing only)
	LicenseTypes GetLicensesOverviewItemLicenseTypeArrayInput `pulumi:"licenseTypes"`
	// License counts (Co-termination licensing only)
	LicensedDeviceCounts pulumi.StringInput `pulumi:"licensedDeviceCounts"`
	// Aggregated data for licenses by state (Per-device licensing only)
	States GetLicensesOverviewItemStatesInput `pulumi:"states"`
	// License status (Co-termination licensing only)
	Status pulumi.StringInput `pulumi:"status"`
	// Aggregated data for Systems Manager licenses (Per-device licensing only)
	SystemsManager GetLicensesOverviewItemSystemsManagerInput `pulumi:"systemsManager"`
}

func (GetLicensesOverviewItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItem)(nil)).Elem()
}

func (i GetLicensesOverviewItemArgs) ToGetLicensesOverviewItemOutput() GetLicensesOverviewItemOutput {
	return i.ToGetLicensesOverviewItemOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemArgs) ToGetLicensesOverviewItemOutputWithContext(ctx context.Context) GetLicensesOverviewItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemOutput)
}

type GetLicensesOverviewItemOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItem)(nil)).Elem()
}

func (o GetLicensesOverviewItemOutput) ToGetLicensesOverviewItemOutput() GetLicensesOverviewItemOutput {
	return o
}

func (o GetLicensesOverviewItemOutput) ToGetLicensesOverviewItemOutputWithContext(ctx context.Context) GetLicensesOverviewItemOutput {
	return o
}

// License expiration date (Co-termination licensing only)
func (o GetLicensesOverviewItemOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Total number of licenses (Per-device licensing only)
func (o GetLicensesOverviewItemOutput) LicenseCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) int { return v.LicenseCount }).(pulumi.IntOutput)
}

// Data by license type (Per-device licensing only)
func (o GetLicensesOverviewItemOutput) LicenseTypes() GetLicensesOverviewItemLicenseTypeArrayOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) []GetLicensesOverviewItemLicenseType { return v.LicenseTypes }).(GetLicensesOverviewItemLicenseTypeArrayOutput)
}

// License counts (Co-termination licensing only)
func (o GetLicensesOverviewItemOutput) LicensedDeviceCounts() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) string { return v.LicensedDeviceCounts }).(pulumi.StringOutput)
}

// Aggregated data for licenses by state (Per-device licensing only)
func (o GetLicensesOverviewItemOutput) States() GetLicensesOverviewItemStatesOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) GetLicensesOverviewItemStates { return v.States }).(GetLicensesOverviewItemStatesOutput)
}

// License status (Co-termination licensing only)
func (o GetLicensesOverviewItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) string { return v.Status }).(pulumi.StringOutput)
}

// Aggregated data for Systems Manager licenses (Per-device licensing only)
func (o GetLicensesOverviewItemOutput) SystemsManager() GetLicensesOverviewItemSystemsManagerOutput {
	return o.ApplyT(func(v GetLicensesOverviewItem) GetLicensesOverviewItemSystemsManager { return v.SystemsManager }).(GetLicensesOverviewItemSystemsManagerOutput)
}

type GetLicensesOverviewItemLicenseType struct {
	// Aggregated count data for the license type
	Counts GetLicensesOverviewItemLicenseTypeCounts `pulumi:"counts"`
	// License type
	LicenseType string `pulumi:"licenseType"`
}

// GetLicensesOverviewItemLicenseTypeInput is an input type that accepts GetLicensesOverviewItemLicenseTypeArgs and GetLicensesOverviewItemLicenseTypeOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemLicenseTypeInput` via:
//
//	GetLicensesOverviewItemLicenseTypeArgs{...}
type GetLicensesOverviewItemLicenseTypeInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemLicenseTypeOutput() GetLicensesOverviewItemLicenseTypeOutput
	ToGetLicensesOverviewItemLicenseTypeOutputWithContext(context.Context) GetLicensesOverviewItemLicenseTypeOutput
}

type GetLicensesOverviewItemLicenseTypeArgs struct {
	// Aggregated count data for the license type
	Counts GetLicensesOverviewItemLicenseTypeCountsInput `pulumi:"counts"`
	// License type
	LicenseType pulumi.StringInput `pulumi:"licenseType"`
}

func (GetLicensesOverviewItemLicenseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemLicenseType)(nil)).Elem()
}

func (i GetLicensesOverviewItemLicenseTypeArgs) ToGetLicensesOverviewItemLicenseTypeOutput() GetLicensesOverviewItemLicenseTypeOutput {
	return i.ToGetLicensesOverviewItemLicenseTypeOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemLicenseTypeArgs) ToGetLicensesOverviewItemLicenseTypeOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemLicenseTypeOutput)
}

// GetLicensesOverviewItemLicenseTypeArrayInput is an input type that accepts GetLicensesOverviewItemLicenseTypeArray and GetLicensesOverviewItemLicenseTypeArrayOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemLicenseTypeArrayInput` via:
//
//	GetLicensesOverviewItemLicenseTypeArray{ GetLicensesOverviewItemLicenseTypeArgs{...} }
type GetLicensesOverviewItemLicenseTypeArrayInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemLicenseTypeArrayOutput() GetLicensesOverviewItemLicenseTypeArrayOutput
	ToGetLicensesOverviewItemLicenseTypeArrayOutputWithContext(context.Context) GetLicensesOverviewItemLicenseTypeArrayOutput
}

type GetLicensesOverviewItemLicenseTypeArray []GetLicensesOverviewItemLicenseTypeInput

func (GetLicensesOverviewItemLicenseTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensesOverviewItemLicenseType)(nil)).Elem()
}

func (i GetLicensesOverviewItemLicenseTypeArray) ToGetLicensesOverviewItemLicenseTypeArrayOutput() GetLicensesOverviewItemLicenseTypeArrayOutput {
	return i.ToGetLicensesOverviewItemLicenseTypeArrayOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemLicenseTypeArray) ToGetLicensesOverviewItemLicenseTypeArrayOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemLicenseTypeArrayOutput)
}

type GetLicensesOverviewItemLicenseTypeOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemLicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemLicenseType)(nil)).Elem()
}

func (o GetLicensesOverviewItemLicenseTypeOutput) ToGetLicensesOverviewItemLicenseTypeOutput() GetLicensesOverviewItemLicenseTypeOutput {
	return o
}

func (o GetLicensesOverviewItemLicenseTypeOutput) ToGetLicensesOverviewItemLicenseTypeOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeOutput {
	return o
}

// Aggregated count data for the license type
func (o GetLicensesOverviewItemLicenseTypeOutput) Counts() GetLicensesOverviewItemLicenseTypeCountsOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemLicenseType) GetLicensesOverviewItemLicenseTypeCounts { return v.Counts }).(GetLicensesOverviewItemLicenseTypeCountsOutput)
}

// License type
func (o GetLicensesOverviewItemLicenseTypeOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemLicenseType) string { return v.LicenseType }).(pulumi.StringOutput)
}

type GetLicensesOverviewItemLicenseTypeArrayOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemLicenseTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensesOverviewItemLicenseType)(nil)).Elem()
}

func (o GetLicensesOverviewItemLicenseTypeArrayOutput) ToGetLicensesOverviewItemLicenseTypeArrayOutput() GetLicensesOverviewItemLicenseTypeArrayOutput {
	return o
}

func (o GetLicensesOverviewItemLicenseTypeArrayOutput) ToGetLicensesOverviewItemLicenseTypeArrayOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeArrayOutput {
	return o
}

func (o GetLicensesOverviewItemLicenseTypeArrayOutput) Index(i pulumi.IntInput) GetLicensesOverviewItemLicenseTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensesOverviewItemLicenseType {
		return vs[0].([]GetLicensesOverviewItemLicenseType)[vs[1].(int)]
	}).(GetLicensesOverviewItemLicenseTypeOutput)
}

type GetLicensesOverviewItemLicenseTypeCounts struct {
	// The number of unassigned licenses
	Unassigned int `pulumi:"unassigned"`
}

// GetLicensesOverviewItemLicenseTypeCountsInput is an input type that accepts GetLicensesOverviewItemLicenseTypeCountsArgs and GetLicensesOverviewItemLicenseTypeCountsOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemLicenseTypeCountsInput` via:
//
//	GetLicensesOverviewItemLicenseTypeCountsArgs{...}
type GetLicensesOverviewItemLicenseTypeCountsInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemLicenseTypeCountsOutput() GetLicensesOverviewItemLicenseTypeCountsOutput
	ToGetLicensesOverviewItemLicenseTypeCountsOutputWithContext(context.Context) GetLicensesOverviewItemLicenseTypeCountsOutput
}

type GetLicensesOverviewItemLicenseTypeCountsArgs struct {
	// The number of unassigned licenses
	Unassigned pulumi.IntInput `pulumi:"unassigned"`
}

func (GetLicensesOverviewItemLicenseTypeCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemLicenseTypeCounts)(nil)).Elem()
}

func (i GetLicensesOverviewItemLicenseTypeCountsArgs) ToGetLicensesOverviewItemLicenseTypeCountsOutput() GetLicensesOverviewItemLicenseTypeCountsOutput {
	return i.ToGetLicensesOverviewItemLicenseTypeCountsOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemLicenseTypeCountsArgs) ToGetLicensesOverviewItemLicenseTypeCountsOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemLicenseTypeCountsOutput)
}

type GetLicensesOverviewItemLicenseTypeCountsOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemLicenseTypeCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemLicenseTypeCounts)(nil)).Elem()
}

func (o GetLicensesOverviewItemLicenseTypeCountsOutput) ToGetLicensesOverviewItemLicenseTypeCountsOutput() GetLicensesOverviewItemLicenseTypeCountsOutput {
	return o
}

func (o GetLicensesOverviewItemLicenseTypeCountsOutput) ToGetLicensesOverviewItemLicenseTypeCountsOutputWithContext(ctx context.Context) GetLicensesOverviewItemLicenseTypeCountsOutput {
	return o
}

// The number of unassigned licenses
func (o GetLicensesOverviewItemLicenseTypeCountsOutput) Unassigned() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemLicenseTypeCounts) int { return v.Unassigned }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStates struct {
	// Data for active licenses
	Active GetLicensesOverviewItemStatesActive `pulumi:"active"`
	// Data for expired licenses
	Expired GetLicensesOverviewItemStatesExpired `pulumi:"expired"`
	// Data for expiring licenses
	Expiring GetLicensesOverviewItemStatesExpiring `pulumi:"expiring"`
	// Data for recently queued licenses
	RecentlyQueued GetLicensesOverviewItemStatesRecentlyQueued `pulumi:"recentlyQueued"`
	// Data for unused licenses
	Unused GetLicensesOverviewItemStatesUnused `pulumi:"unused"`
	// Data for unused, active licenses
	UnusedActive GetLicensesOverviewItemStatesUnusedActive `pulumi:"unusedActive"`
}

// GetLicensesOverviewItemStatesInput is an input type that accepts GetLicensesOverviewItemStatesArgs and GetLicensesOverviewItemStatesOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesInput` via:
//
//	GetLicensesOverviewItemStatesArgs{...}
type GetLicensesOverviewItemStatesInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesOutput() GetLicensesOverviewItemStatesOutput
	ToGetLicensesOverviewItemStatesOutputWithContext(context.Context) GetLicensesOverviewItemStatesOutput
}

type GetLicensesOverviewItemStatesArgs struct {
	// Data for active licenses
	Active GetLicensesOverviewItemStatesActiveInput `pulumi:"active"`
	// Data for expired licenses
	Expired GetLicensesOverviewItemStatesExpiredInput `pulumi:"expired"`
	// Data for expiring licenses
	Expiring GetLicensesOverviewItemStatesExpiringInput `pulumi:"expiring"`
	// Data for recently queued licenses
	RecentlyQueued GetLicensesOverviewItemStatesRecentlyQueuedInput `pulumi:"recentlyQueued"`
	// Data for unused licenses
	Unused GetLicensesOverviewItemStatesUnusedInput `pulumi:"unused"`
	// Data for unused, active licenses
	UnusedActive GetLicensesOverviewItemStatesUnusedActiveInput `pulumi:"unusedActive"`
}

func (GetLicensesOverviewItemStatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStates)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesArgs) ToGetLicensesOverviewItemStatesOutput() GetLicensesOverviewItemStatesOutput {
	return i.ToGetLicensesOverviewItemStatesOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesArgs) ToGetLicensesOverviewItemStatesOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesOutput)
}

type GetLicensesOverviewItemStatesOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStates)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesOutput) ToGetLicensesOverviewItemStatesOutput() GetLicensesOverviewItemStatesOutput {
	return o
}

func (o GetLicensesOverviewItemStatesOutput) ToGetLicensesOverviewItemStatesOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesOutput {
	return o
}

// Data for active licenses
func (o GetLicensesOverviewItemStatesOutput) Active() GetLicensesOverviewItemStatesActiveOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesActive { return v.Active }).(GetLicensesOverviewItemStatesActiveOutput)
}

// Data for expired licenses
func (o GetLicensesOverviewItemStatesOutput) Expired() GetLicensesOverviewItemStatesExpiredOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesExpired { return v.Expired }).(GetLicensesOverviewItemStatesExpiredOutput)
}

// Data for expiring licenses
func (o GetLicensesOverviewItemStatesOutput) Expiring() GetLicensesOverviewItemStatesExpiringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesExpiring { return v.Expiring }).(GetLicensesOverviewItemStatesExpiringOutput)
}

// Data for recently queued licenses
func (o GetLicensesOverviewItemStatesOutput) RecentlyQueued() GetLicensesOverviewItemStatesRecentlyQueuedOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesRecentlyQueued {
		return v.RecentlyQueued
	}).(GetLicensesOverviewItemStatesRecentlyQueuedOutput)
}

// Data for unused licenses
func (o GetLicensesOverviewItemStatesOutput) Unused() GetLicensesOverviewItemStatesUnusedOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesUnused { return v.Unused }).(GetLicensesOverviewItemStatesUnusedOutput)
}

// Data for unused, active licenses
func (o GetLicensesOverviewItemStatesOutput) UnusedActive() GetLicensesOverviewItemStatesUnusedActiveOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStates) GetLicensesOverviewItemStatesUnusedActive { return v.UnusedActive }).(GetLicensesOverviewItemStatesUnusedActiveOutput)
}

type GetLicensesOverviewItemStatesActive struct {
	// The number of active licenses
	Count int `pulumi:"count"`
}

// GetLicensesOverviewItemStatesActiveInput is an input type that accepts GetLicensesOverviewItemStatesActiveArgs and GetLicensesOverviewItemStatesActiveOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesActiveInput` via:
//
//	GetLicensesOverviewItemStatesActiveArgs{...}
type GetLicensesOverviewItemStatesActiveInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesActiveOutput() GetLicensesOverviewItemStatesActiveOutput
	ToGetLicensesOverviewItemStatesActiveOutputWithContext(context.Context) GetLicensesOverviewItemStatesActiveOutput
}

type GetLicensesOverviewItemStatesActiveArgs struct {
	// The number of active licenses
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetLicensesOverviewItemStatesActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesActive)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesActiveArgs) ToGetLicensesOverviewItemStatesActiveOutput() GetLicensesOverviewItemStatesActiveOutput {
	return i.ToGetLicensesOverviewItemStatesActiveOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesActiveArgs) ToGetLicensesOverviewItemStatesActiveOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesActiveOutput)
}

type GetLicensesOverviewItemStatesActiveOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesActive)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesActiveOutput) ToGetLicensesOverviewItemStatesActiveOutput() GetLicensesOverviewItemStatesActiveOutput {
	return o
}

func (o GetLicensesOverviewItemStatesActiveOutput) ToGetLicensesOverviewItemStatesActiveOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesActiveOutput {
	return o
}

// The number of active licenses
func (o GetLicensesOverviewItemStatesActiveOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesActive) int { return v.Count }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesExpired struct {
	// The number of expired licenses
	Count int `pulumi:"count"`
}

// GetLicensesOverviewItemStatesExpiredInput is an input type that accepts GetLicensesOverviewItemStatesExpiredArgs and GetLicensesOverviewItemStatesExpiredOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesExpiredInput` via:
//
//	GetLicensesOverviewItemStatesExpiredArgs{...}
type GetLicensesOverviewItemStatesExpiredInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesExpiredOutput() GetLicensesOverviewItemStatesExpiredOutput
	ToGetLicensesOverviewItemStatesExpiredOutputWithContext(context.Context) GetLicensesOverviewItemStatesExpiredOutput
}

type GetLicensesOverviewItemStatesExpiredArgs struct {
	// The number of expired licenses
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetLicensesOverviewItemStatesExpiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpired)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesExpiredArgs) ToGetLicensesOverviewItemStatesExpiredOutput() GetLicensesOverviewItemStatesExpiredOutput {
	return i.ToGetLicensesOverviewItemStatesExpiredOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesExpiredArgs) ToGetLicensesOverviewItemStatesExpiredOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesExpiredOutput)
}

type GetLicensesOverviewItemStatesExpiredOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesExpiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpired)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesExpiredOutput) ToGetLicensesOverviewItemStatesExpiredOutput() GetLicensesOverviewItemStatesExpiredOutput {
	return o
}

func (o GetLicensesOverviewItemStatesExpiredOutput) ToGetLicensesOverviewItemStatesExpiredOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiredOutput {
	return o
}

// The number of expired licenses
func (o GetLicensesOverviewItemStatesExpiredOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpired) int { return v.Count }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesExpiring struct {
	// The number of expiring licenses
	Count int `pulumi:"count"`
	// Data for the critical threshold
	Critical GetLicensesOverviewItemStatesExpiringCritical `pulumi:"critical"`
	// Data for the warning threshold
	Warning GetLicensesOverviewItemStatesExpiringWarning `pulumi:"warning"`
}

// GetLicensesOverviewItemStatesExpiringInput is an input type that accepts GetLicensesOverviewItemStatesExpiringArgs and GetLicensesOverviewItemStatesExpiringOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesExpiringInput` via:
//
//	GetLicensesOverviewItemStatesExpiringArgs{...}
type GetLicensesOverviewItemStatesExpiringInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesExpiringOutput() GetLicensesOverviewItemStatesExpiringOutput
	ToGetLicensesOverviewItemStatesExpiringOutputWithContext(context.Context) GetLicensesOverviewItemStatesExpiringOutput
}

type GetLicensesOverviewItemStatesExpiringArgs struct {
	// The number of expiring licenses
	Count pulumi.IntInput `pulumi:"count"`
	// Data for the critical threshold
	Critical GetLicensesOverviewItemStatesExpiringCriticalInput `pulumi:"critical"`
	// Data for the warning threshold
	Warning GetLicensesOverviewItemStatesExpiringWarningInput `pulumi:"warning"`
}

func (GetLicensesOverviewItemStatesExpiringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiring)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesExpiringArgs) ToGetLicensesOverviewItemStatesExpiringOutput() GetLicensesOverviewItemStatesExpiringOutput {
	return i.ToGetLicensesOverviewItemStatesExpiringOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesExpiringArgs) ToGetLicensesOverviewItemStatesExpiringOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesExpiringOutput)
}

type GetLicensesOverviewItemStatesExpiringOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesExpiringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiring)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesExpiringOutput) ToGetLicensesOverviewItemStatesExpiringOutput() GetLicensesOverviewItemStatesExpiringOutput {
	return o
}

func (o GetLicensesOverviewItemStatesExpiringOutput) ToGetLicensesOverviewItemStatesExpiringOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringOutput {
	return o
}

// The number of expiring licenses
func (o GetLicensesOverviewItemStatesExpiringOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiring) int { return v.Count }).(pulumi.IntOutput)
}

// Data for the critical threshold
func (o GetLicensesOverviewItemStatesExpiringOutput) Critical() GetLicensesOverviewItemStatesExpiringCriticalOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiring) GetLicensesOverviewItemStatesExpiringCritical {
		return v.Critical
	}).(GetLicensesOverviewItemStatesExpiringCriticalOutput)
}

// Data for the warning threshold
func (o GetLicensesOverviewItemStatesExpiringOutput) Warning() GetLicensesOverviewItemStatesExpiringWarningOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiring) GetLicensesOverviewItemStatesExpiringWarning {
		return v.Warning
	}).(GetLicensesOverviewItemStatesExpiringWarningOutput)
}

type GetLicensesOverviewItemStatesExpiringCritical struct {
	// The number of licenses that will expire in this window
	ExpiringCount int `pulumi:"expiringCount"`
	// The number of days from now denoting the critical threshold for an expiring license
	ThresholdInDays int `pulumi:"thresholdInDays"`
}

// GetLicensesOverviewItemStatesExpiringCriticalInput is an input type that accepts GetLicensesOverviewItemStatesExpiringCriticalArgs and GetLicensesOverviewItemStatesExpiringCriticalOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesExpiringCriticalInput` via:
//
//	GetLicensesOverviewItemStatesExpiringCriticalArgs{...}
type GetLicensesOverviewItemStatesExpiringCriticalInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesExpiringCriticalOutput() GetLicensesOverviewItemStatesExpiringCriticalOutput
	ToGetLicensesOverviewItemStatesExpiringCriticalOutputWithContext(context.Context) GetLicensesOverviewItemStatesExpiringCriticalOutput
}

type GetLicensesOverviewItemStatesExpiringCriticalArgs struct {
	// The number of licenses that will expire in this window
	ExpiringCount pulumi.IntInput `pulumi:"expiringCount"`
	// The number of days from now denoting the critical threshold for an expiring license
	ThresholdInDays pulumi.IntInput `pulumi:"thresholdInDays"`
}

func (GetLicensesOverviewItemStatesExpiringCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringCritical)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesExpiringCriticalArgs) ToGetLicensesOverviewItemStatesExpiringCriticalOutput() GetLicensesOverviewItemStatesExpiringCriticalOutput {
	return i.ToGetLicensesOverviewItemStatesExpiringCriticalOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesExpiringCriticalArgs) ToGetLicensesOverviewItemStatesExpiringCriticalOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesExpiringCriticalOutput)
}

type GetLicensesOverviewItemStatesExpiringCriticalOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesExpiringCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringCritical)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesExpiringCriticalOutput) ToGetLicensesOverviewItemStatesExpiringCriticalOutput() GetLicensesOverviewItemStatesExpiringCriticalOutput {
	return o
}

func (o GetLicensesOverviewItemStatesExpiringCriticalOutput) ToGetLicensesOverviewItemStatesExpiringCriticalOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringCriticalOutput {
	return o
}

// The number of licenses that will expire in this window
func (o GetLicensesOverviewItemStatesExpiringCriticalOutput) ExpiringCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiringCritical) int { return v.ExpiringCount }).(pulumi.IntOutput)
}

// The number of days from now denoting the critical threshold for an expiring license
func (o GetLicensesOverviewItemStatesExpiringCriticalOutput) ThresholdInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiringCritical) int { return v.ThresholdInDays }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesExpiringWarning struct {
	// The number of licenses that will expire in this window
	ExpiringCount int `pulumi:"expiringCount"`
	// The number of days from now denoting the warning threshold for an expiring license
	ThresholdInDays int `pulumi:"thresholdInDays"`
}

// GetLicensesOverviewItemStatesExpiringWarningInput is an input type that accepts GetLicensesOverviewItemStatesExpiringWarningArgs and GetLicensesOverviewItemStatesExpiringWarningOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesExpiringWarningInput` via:
//
//	GetLicensesOverviewItemStatesExpiringWarningArgs{...}
type GetLicensesOverviewItemStatesExpiringWarningInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesExpiringWarningOutput() GetLicensesOverviewItemStatesExpiringWarningOutput
	ToGetLicensesOverviewItemStatesExpiringWarningOutputWithContext(context.Context) GetLicensesOverviewItemStatesExpiringWarningOutput
}

type GetLicensesOverviewItemStatesExpiringWarningArgs struct {
	// The number of licenses that will expire in this window
	ExpiringCount pulumi.IntInput `pulumi:"expiringCount"`
	// The number of days from now denoting the warning threshold for an expiring license
	ThresholdInDays pulumi.IntInput `pulumi:"thresholdInDays"`
}

func (GetLicensesOverviewItemStatesExpiringWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringWarning)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesExpiringWarningArgs) ToGetLicensesOverviewItemStatesExpiringWarningOutput() GetLicensesOverviewItemStatesExpiringWarningOutput {
	return i.ToGetLicensesOverviewItemStatesExpiringWarningOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesExpiringWarningArgs) ToGetLicensesOverviewItemStatesExpiringWarningOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesExpiringWarningOutput)
}

type GetLicensesOverviewItemStatesExpiringWarningOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesExpiringWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringWarning)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesExpiringWarningOutput) ToGetLicensesOverviewItemStatesExpiringWarningOutput() GetLicensesOverviewItemStatesExpiringWarningOutput {
	return o
}

func (o GetLicensesOverviewItemStatesExpiringWarningOutput) ToGetLicensesOverviewItemStatesExpiringWarningOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesExpiringWarningOutput {
	return o
}

// The number of licenses that will expire in this window
func (o GetLicensesOverviewItemStatesExpiringWarningOutput) ExpiringCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiringWarning) int { return v.ExpiringCount }).(pulumi.IntOutput)
}

// The number of days from now denoting the warning threshold for an expiring license
func (o GetLicensesOverviewItemStatesExpiringWarningOutput) ThresholdInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesExpiringWarning) int { return v.ThresholdInDays }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesRecentlyQueued struct {
	// The number of recently queued licenses
	Count int `pulumi:"count"`
}

// GetLicensesOverviewItemStatesRecentlyQueuedInput is an input type that accepts GetLicensesOverviewItemStatesRecentlyQueuedArgs and GetLicensesOverviewItemStatesRecentlyQueuedOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesRecentlyQueuedInput` via:
//
//	GetLicensesOverviewItemStatesRecentlyQueuedArgs{...}
type GetLicensesOverviewItemStatesRecentlyQueuedInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesRecentlyQueuedOutput() GetLicensesOverviewItemStatesRecentlyQueuedOutput
	ToGetLicensesOverviewItemStatesRecentlyQueuedOutputWithContext(context.Context) GetLicensesOverviewItemStatesRecentlyQueuedOutput
}

type GetLicensesOverviewItemStatesRecentlyQueuedArgs struct {
	// The number of recently queued licenses
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetLicensesOverviewItemStatesRecentlyQueuedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesRecentlyQueued)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesRecentlyQueuedArgs) ToGetLicensesOverviewItemStatesRecentlyQueuedOutput() GetLicensesOverviewItemStatesRecentlyQueuedOutput {
	return i.ToGetLicensesOverviewItemStatesRecentlyQueuedOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesRecentlyQueuedArgs) ToGetLicensesOverviewItemStatesRecentlyQueuedOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesRecentlyQueuedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesRecentlyQueuedOutput)
}

type GetLicensesOverviewItemStatesRecentlyQueuedOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesRecentlyQueuedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesRecentlyQueued)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesRecentlyQueuedOutput) ToGetLicensesOverviewItemStatesRecentlyQueuedOutput() GetLicensesOverviewItemStatesRecentlyQueuedOutput {
	return o
}

func (o GetLicensesOverviewItemStatesRecentlyQueuedOutput) ToGetLicensesOverviewItemStatesRecentlyQueuedOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesRecentlyQueuedOutput {
	return o
}

// The number of recently queued licenses
func (o GetLicensesOverviewItemStatesRecentlyQueuedOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesRecentlyQueued) int { return v.Count }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesUnused struct {
	// The number of unused licenses
	Count int `pulumi:"count"`
	// Information about the soonest forthcoming license activation
	SoonestActivation GetLicensesOverviewItemStatesUnusedSoonestActivation `pulumi:"soonestActivation"`
}

// GetLicensesOverviewItemStatesUnusedInput is an input type that accepts GetLicensesOverviewItemStatesUnusedArgs and GetLicensesOverviewItemStatesUnusedOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesUnusedInput` via:
//
//	GetLicensesOverviewItemStatesUnusedArgs{...}
type GetLicensesOverviewItemStatesUnusedInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesUnusedOutput() GetLicensesOverviewItemStatesUnusedOutput
	ToGetLicensesOverviewItemStatesUnusedOutputWithContext(context.Context) GetLicensesOverviewItemStatesUnusedOutput
}

type GetLicensesOverviewItemStatesUnusedArgs struct {
	// The number of unused licenses
	Count pulumi.IntInput `pulumi:"count"`
	// Information about the soonest forthcoming license activation
	SoonestActivation GetLicensesOverviewItemStatesUnusedSoonestActivationInput `pulumi:"soonestActivation"`
}

func (GetLicensesOverviewItemStatesUnusedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnused)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesUnusedArgs) ToGetLicensesOverviewItemStatesUnusedOutput() GetLicensesOverviewItemStatesUnusedOutput {
	return i.ToGetLicensesOverviewItemStatesUnusedOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesUnusedArgs) ToGetLicensesOverviewItemStatesUnusedOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesUnusedOutput)
}

type GetLicensesOverviewItemStatesUnusedOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesUnusedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnused)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesUnusedOutput) ToGetLicensesOverviewItemStatesUnusedOutput() GetLicensesOverviewItemStatesUnusedOutput {
	return o
}

func (o GetLicensesOverviewItemStatesUnusedOutput) ToGetLicensesOverviewItemStatesUnusedOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedOutput {
	return o
}

// The number of unused licenses
func (o GetLicensesOverviewItemStatesUnusedOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnused) int { return v.Count }).(pulumi.IntOutput)
}

// Information about the soonest forthcoming license activation
func (o GetLicensesOverviewItemStatesUnusedOutput) SoonestActivation() GetLicensesOverviewItemStatesUnusedSoonestActivationOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnused) GetLicensesOverviewItemStatesUnusedSoonestActivation {
		return v.SoonestActivation
	}).(GetLicensesOverviewItemStatesUnusedSoonestActivationOutput)
}

type GetLicensesOverviewItemStatesUnusedActive struct {
	// The number of unused, active licenses
	Count int `pulumi:"count"`
	// Information about the oldest historical license activation
	OldestActivation GetLicensesOverviewItemStatesUnusedActiveOldestActivation `pulumi:"oldestActivation"`
}

// GetLicensesOverviewItemStatesUnusedActiveInput is an input type that accepts GetLicensesOverviewItemStatesUnusedActiveArgs and GetLicensesOverviewItemStatesUnusedActiveOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesUnusedActiveInput` via:
//
//	GetLicensesOverviewItemStatesUnusedActiveArgs{...}
type GetLicensesOverviewItemStatesUnusedActiveInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesUnusedActiveOutput() GetLicensesOverviewItemStatesUnusedActiveOutput
	ToGetLicensesOverviewItemStatesUnusedActiveOutputWithContext(context.Context) GetLicensesOverviewItemStatesUnusedActiveOutput
}

type GetLicensesOverviewItemStatesUnusedActiveArgs struct {
	// The number of unused, active licenses
	Count pulumi.IntInput `pulumi:"count"`
	// Information about the oldest historical license activation
	OldestActivation GetLicensesOverviewItemStatesUnusedActiveOldestActivationInput `pulumi:"oldestActivation"`
}

func (GetLicensesOverviewItemStatesUnusedActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActive)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesUnusedActiveArgs) ToGetLicensesOverviewItemStatesUnusedActiveOutput() GetLicensesOverviewItemStatesUnusedActiveOutput {
	return i.ToGetLicensesOverviewItemStatesUnusedActiveOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesUnusedActiveArgs) ToGetLicensesOverviewItemStatesUnusedActiveOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesUnusedActiveOutput)
}

type GetLicensesOverviewItemStatesUnusedActiveOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesUnusedActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActive)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesUnusedActiveOutput) ToGetLicensesOverviewItemStatesUnusedActiveOutput() GetLicensesOverviewItemStatesUnusedActiveOutput {
	return o
}

func (o GetLicensesOverviewItemStatesUnusedActiveOutput) ToGetLicensesOverviewItemStatesUnusedActiveOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedActiveOutput {
	return o
}

// The number of unused, active licenses
func (o GetLicensesOverviewItemStatesUnusedActiveOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedActive) int { return v.Count }).(pulumi.IntOutput)
}

// Information about the oldest historical license activation
func (o GetLicensesOverviewItemStatesUnusedActiveOutput) OldestActivation() GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedActive) GetLicensesOverviewItemStatesUnusedActiveOldestActivation {
		return v.OldestActivation
	}).(GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput)
}

type GetLicensesOverviewItemStatesUnusedActiveOldestActivation struct {
	// The oldest license activation date
	ActivationDate string `pulumi:"activationDate"`
	// The number of licenses that activated on this date
	ActiveCount int `pulumi:"activeCount"`
}

// GetLicensesOverviewItemStatesUnusedActiveOldestActivationInput is an input type that accepts GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs and GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesUnusedActiveOldestActivationInput` via:
//
//	GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs{...}
type GetLicensesOverviewItemStatesUnusedActiveOldestActivationInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput() GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput
	ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutputWithContext(context.Context) GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput
}

type GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs struct {
	// The oldest license activation date
	ActivationDate pulumi.StringInput `pulumi:"activationDate"`
	// The number of licenses that activated on this date
	ActiveCount pulumi.IntInput `pulumi:"activeCount"`
}

func (GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActiveOldestActivation)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs) ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput() GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput {
	return i.ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs) ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput)
}

type GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActiveOldestActivation)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput) ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput() GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput {
	return o
}

func (o GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput) ToGetLicensesOverviewItemStatesUnusedActiveOldestActivationOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput {
	return o
}

// The oldest license activation date
func (o GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput) ActivationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedActiveOldestActivation) string { return v.ActivationDate }).(pulumi.StringOutput)
}

// The number of licenses that activated on this date
func (o GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput) ActiveCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedActiveOldestActivation) int { return v.ActiveCount }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemStatesUnusedSoonestActivation struct {
	// The soonest license activation date
	ActivationDate string `pulumi:"activationDate"`
	// The number of licenses that will activate on this date
	ToActivateCount int `pulumi:"toActivateCount"`
}

// GetLicensesOverviewItemStatesUnusedSoonestActivationInput is an input type that accepts GetLicensesOverviewItemStatesUnusedSoonestActivationArgs and GetLicensesOverviewItemStatesUnusedSoonestActivationOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemStatesUnusedSoonestActivationInput` via:
//
//	GetLicensesOverviewItemStatesUnusedSoonestActivationArgs{...}
type GetLicensesOverviewItemStatesUnusedSoonestActivationInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutput() GetLicensesOverviewItemStatesUnusedSoonestActivationOutput
	ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutputWithContext(context.Context) GetLicensesOverviewItemStatesUnusedSoonestActivationOutput
}

type GetLicensesOverviewItemStatesUnusedSoonestActivationArgs struct {
	// The soonest license activation date
	ActivationDate pulumi.StringInput `pulumi:"activationDate"`
	// The number of licenses that will activate on this date
	ToActivateCount pulumi.IntInput `pulumi:"toActivateCount"`
}

func (GetLicensesOverviewItemStatesUnusedSoonestActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedSoonestActivation)(nil)).Elem()
}

func (i GetLicensesOverviewItemStatesUnusedSoonestActivationArgs) ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutput() GetLicensesOverviewItemStatesUnusedSoonestActivationOutput {
	return i.ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemStatesUnusedSoonestActivationArgs) ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedSoonestActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemStatesUnusedSoonestActivationOutput)
}

type GetLicensesOverviewItemStatesUnusedSoonestActivationOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemStatesUnusedSoonestActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedSoonestActivation)(nil)).Elem()
}

func (o GetLicensesOverviewItemStatesUnusedSoonestActivationOutput) ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutput() GetLicensesOverviewItemStatesUnusedSoonestActivationOutput {
	return o
}

func (o GetLicensesOverviewItemStatesUnusedSoonestActivationOutput) ToGetLicensesOverviewItemStatesUnusedSoonestActivationOutputWithContext(ctx context.Context) GetLicensesOverviewItemStatesUnusedSoonestActivationOutput {
	return o
}

// The soonest license activation date
func (o GetLicensesOverviewItemStatesUnusedSoonestActivationOutput) ActivationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedSoonestActivation) string { return v.ActivationDate }).(pulumi.StringOutput)
}

// The number of licenses that will activate on this date
func (o GetLicensesOverviewItemStatesUnusedSoonestActivationOutput) ToActivateCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemStatesUnusedSoonestActivation) int { return v.ToActivateCount }).(pulumi.IntOutput)
}

type GetLicensesOverviewItemSystemsManager struct {
	// Aggregated license count data for Systems Manager
	Counts GetLicensesOverviewItemSystemsManagerCounts `pulumi:"counts"`
}

// GetLicensesOverviewItemSystemsManagerInput is an input type that accepts GetLicensesOverviewItemSystemsManagerArgs and GetLicensesOverviewItemSystemsManagerOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemSystemsManagerInput` via:
//
//	GetLicensesOverviewItemSystemsManagerArgs{...}
type GetLicensesOverviewItemSystemsManagerInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemSystemsManagerOutput() GetLicensesOverviewItemSystemsManagerOutput
	ToGetLicensesOverviewItemSystemsManagerOutputWithContext(context.Context) GetLicensesOverviewItemSystemsManagerOutput
}

type GetLicensesOverviewItemSystemsManagerArgs struct {
	// Aggregated license count data for Systems Manager
	Counts GetLicensesOverviewItemSystemsManagerCountsInput `pulumi:"counts"`
}

func (GetLicensesOverviewItemSystemsManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemSystemsManager)(nil)).Elem()
}

func (i GetLicensesOverviewItemSystemsManagerArgs) ToGetLicensesOverviewItemSystemsManagerOutput() GetLicensesOverviewItemSystemsManagerOutput {
	return i.ToGetLicensesOverviewItemSystemsManagerOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemSystemsManagerArgs) ToGetLicensesOverviewItemSystemsManagerOutputWithContext(ctx context.Context) GetLicensesOverviewItemSystemsManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemSystemsManagerOutput)
}

type GetLicensesOverviewItemSystemsManagerOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemSystemsManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemSystemsManager)(nil)).Elem()
}

func (o GetLicensesOverviewItemSystemsManagerOutput) ToGetLicensesOverviewItemSystemsManagerOutput() GetLicensesOverviewItemSystemsManagerOutput {
	return o
}

func (o GetLicensesOverviewItemSystemsManagerOutput) ToGetLicensesOverviewItemSystemsManagerOutputWithContext(ctx context.Context) GetLicensesOverviewItemSystemsManagerOutput {
	return o
}

// Aggregated license count data for Systems Manager
func (o GetLicensesOverviewItemSystemsManagerOutput) Counts() GetLicensesOverviewItemSystemsManagerCountsOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemSystemsManager) GetLicensesOverviewItemSystemsManagerCounts {
		return v.Counts
	}).(GetLicensesOverviewItemSystemsManagerCountsOutput)
}

type GetLicensesOverviewItemSystemsManagerCounts struct {
	// The number of Systems Manager seats in use
	ActiveSeats int `pulumi:"activeSeats"`
	// The total number of enrolled Systems Manager devices
	OrgwideEnrolledDevices int `pulumi:"orgwideEnrolledDevices"`
	// The total number of Systems Manager seats
	TotalSeats int `pulumi:"totalSeats"`
	// The number of unused Systems Manager seats
	UnassignedSeats int `pulumi:"unassignedSeats"`
}

// GetLicensesOverviewItemSystemsManagerCountsInput is an input type that accepts GetLicensesOverviewItemSystemsManagerCountsArgs and GetLicensesOverviewItemSystemsManagerCountsOutput values.
// You can construct a concrete instance of `GetLicensesOverviewItemSystemsManagerCountsInput` via:
//
//	GetLicensesOverviewItemSystemsManagerCountsArgs{...}
type GetLicensesOverviewItemSystemsManagerCountsInput interface {
	pulumi.Input

	ToGetLicensesOverviewItemSystemsManagerCountsOutput() GetLicensesOverviewItemSystemsManagerCountsOutput
	ToGetLicensesOverviewItemSystemsManagerCountsOutputWithContext(context.Context) GetLicensesOverviewItemSystemsManagerCountsOutput
}

type GetLicensesOverviewItemSystemsManagerCountsArgs struct {
	// The number of Systems Manager seats in use
	ActiveSeats pulumi.IntInput `pulumi:"activeSeats"`
	// The total number of enrolled Systems Manager devices
	OrgwideEnrolledDevices pulumi.IntInput `pulumi:"orgwideEnrolledDevices"`
	// The total number of Systems Manager seats
	TotalSeats pulumi.IntInput `pulumi:"totalSeats"`
	// The number of unused Systems Manager seats
	UnassignedSeats pulumi.IntInput `pulumi:"unassignedSeats"`
}

func (GetLicensesOverviewItemSystemsManagerCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemSystemsManagerCounts)(nil)).Elem()
}

func (i GetLicensesOverviewItemSystemsManagerCountsArgs) ToGetLicensesOverviewItemSystemsManagerCountsOutput() GetLicensesOverviewItemSystemsManagerCountsOutput {
	return i.ToGetLicensesOverviewItemSystemsManagerCountsOutputWithContext(context.Background())
}

func (i GetLicensesOverviewItemSystemsManagerCountsArgs) ToGetLicensesOverviewItemSystemsManagerCountsOutputWithContext(ctx context.Context) GetLicensesOverviewItemSystemsManagerCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensesOverviewItemSystemsManagerCountsOutput)
}

type GetLicensesOverviewItemSystemsManagerCountsOutput struct{ *pulumi.OutputState }

func (GetLicensesOverviewItemSystemsManagerCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensesOverviewItemSystemsManagerCounts)(nil)).Elem()
}

func (o GetLicensesOverviewItemSystemsManagerCountsOutput) ToGetLicensesOverviewItemSystemsManagerCountsOutput() GetLicensesOverviewItemSystemsManagerCountsOutput {
	return o
}

func (o GetLicensesOverviewItemSystemsManagerCountsOutput) ToGetLicensesOverviewItemSystemsManagerCountsOutputWithContext(ctx context.Context) GetLicensesOverviewItemSystemsManagerCountsOutput {
	return o
}

// The number of Systems Manager seats in use
func (o GetLicensesOverviewItemSystemsManagerCountsOutput) ActiveSeats() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemSystemsManagerCounts) int { return v.ActiveSeats }).(pulumi.IntOutput)
}

// The total number of enrolled Systems Manager devices
func (o GetLicensesOverviewItemSystemsManagerCountsOutput) OrgwideEnrolledDevices() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemSystemsManagerCounts) int { return v.OrgwideEnrolledDevices }).(pulumi.IntOutput)
}

// The total number of Systems Manager seats
func (o GetLicensesOverviewItemSystemsManagerCountsOutput) TotalSeats() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemSystemsManagerCounts) int { return v.TotalSeats }).(pulumi.IntOutput)
}

// The number of unused Systems Manager seats
func (o GetLicensesOverviewItemSystemsManagerCountsOutput) UnassignedSeats() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensesOverviewItemSystemsManagerCounts) int { return v.UnassignedSeats }).(pulumi.IntOutput)
}

type GetLicensingCotermLicensesItem struct {
	// When the license was claimed into the organization
	ClaimedAt string `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts []GetLicensingCotermLicensesItemCount `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration int `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions []GetLicensingCotermLicensesItemEdition `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired bool `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated bool `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt string `pulumi:"invalidatedAt"`
	// The key of the license
	Key string `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode string `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId string `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt string `pulumi:"startedAt"`
}

// GetLicensingCotermLicensesItemInput is an input type that accepts GetLicensingCotermLicensesItemArgs and GetLicensingCotermLicensesItemOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemInput` via:
//
//	GetLicensingCotermLicensesItemArgs{...}
type GetLicensingCotermLicensesItemInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemOutput() GetLicensingCotermLicensesItemOutput
	ToGetLicensingCotermLicensesItemOutputWithContext(context.Context) GetLicensingCotermLicensesItemOutput
}

type GetLicensingCotermLicensesItemArgs struct {
	// When the license was claimed into the organization
	ClaimedAt pulumi.StringInput `pulumi:"claimedAt"`
	// The counts of the license by model type
	Counts GetLicensingCotermLicensesItemCountArrayInput `pulumi:"counts"`
	// The duration (term length) of the license, measured in days
	Duration pulumi.IntInput `pulumi:"duration"`
	// The editions of the license for each relevant product type
	Editions GetLicensingCotermLicensesItemEditionArrayInput `pulumi:"editions"`
	// Flag to indicate if the license is expired
	Expired pulumi.BoolInput `pulumi:"expired"`
	// Flag to indicated that the license is invalidated
	Invalidated pulumi.BoolInput `pulumi:"invalidated"`
	// When the license was invalidated. Will be null for active licenses
	InvalidatedAt pulumi.StringInput `pulumi:"invalidatedAt"`
	// The key of the license
	Key pulumi.StringInput `pulumi:"key"`
	// The operation mode of the license when it was claimed
	Mode pulumi.StringInput `pulumi:"mode"`
	// The ID of the organization that the license is claimed in
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// When the license's term began (approximately the date when the license was created)
	StartedAt pulumi.StringInput `pulumi:"startedAt"`
}

func (GetLicensingCotermLicensesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItem)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemArgs) ToGetLicensingCotermLicensesItemOutput() GetLicensingCotermLicensesItemOutput {
	return i.ToGetLicensingCotermLicensesItemOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemArgs) ToGetLicensingCotermLicensesItemOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemOutput)
}

// GetLicensingCotermLicensesItemArrayInput is an input type that accepts GetLicensingCotermLicensesItemArray and GetLicensingCotermLicensesItemArrayOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemArrayInput` via:
//
//	GetLicensingCotermLicensesItemArray{ GetLicensingCotermLicensesItemArgs{...} }
type GetLicensingCotermLicensesItemArrayInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemArrayOutput() GetLicensingCotermLicensesItemArrayOutput
	ToGetLicensingCotermLicensesItemArrayOutputWithContext(context.Context) GetLicensingCotermLicensesItemArrayOutput
}

type GetLicensingCotermLicensesItemArray []GetLicensingCotermLicensesItemInput

func (GetLicensingCotermLicensesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItem)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemArray) ToGetLicensingCotermLicensesItemArrayOutput() GetLicensingCotermLicensesItemArrayOutput {
	return i.ToGetLicensingCotermLicensesItemArrayOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemArray) ToGetLicensingCotermLicensesItemArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemArrayOutput)
}

type GetLicensingCotermLicensesItemOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItem)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemOutput) ToGetLicensingCotermLicensesItemOutput() GetLicensingCotermLicensesItemOutput {
	return o
}

func (o GetLicensingCotermLicensesItemOutput) ToGetLicensingCotermLicensesItemOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemOutput {
	return o
}

// When the license was claimed into the organization
func (o GetLicensingCotermLicensesItemOutput) ClaimedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.ClaimedAt }).(pulumi.StringOutput)
}

// The counts of the license by model type
func (o GetLicensingCotermLicensesItemOutput) Counts() GetLicensingCotermLicensesItemCountArrayOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) []GetLicensingCotermLicensesItemCount { return v.Counts }).(GetLicensingCotermLicensesItemCountArrayOutput)
}

// The duration (term length) of the license, measured in days
func (o GetLicensingCotermLicensesItemOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) int { return v.Duration }).(pulumi.IntOutput)
}

// The editions of the license for each relevant product type
func (o GetLicensingCotermLicensesItemOutput) Editions() GetLicensingCotermLicensesItemEditionArrayOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) []GetLicensingCotermLicensesItemEdition { return v.Editions }).(GetLicensingCotermLicensesItemEditionArrayOutput)
}

// Flag to indicate if the license is expired
func (o GetLicensingCotermLicensesItemOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) bool { return v.Expired }).(pulumi.BoolOutput)
}

// Flag to indicated that the license is invalidated
func (o GetLicensingCotermLicensesItemOutput) Invalidated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) bool { return v.Invalidated }).(pulumi.BoolOutput)
}

// When the license was invalidated. Will be null for active licenses
func (o GetLicensingCotermLicensesItemOutput) InvalidatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.InvalidatedAt }).(pulumi.StringOutput)
}

// The key of the license
func (o GetLicensingCotermLicensesItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.Key }).(pulumi.StringOutput)
}

// The operation mode of the license when it was claimed
func (o GetLicensingCotermLicensesItemOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.Mode }).(pulumi.StringOutput)
}

// The ID of the organization that the license is claimed in
func (o GetLicensingCotermLicensesItemOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// When the license's term began (approximately the date when the license was created)
func (o GetLicensingCotermLicensesItemOutput) StartedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItem) string { return v.StartedAt }).(pulumi.StringOutput)
}

type GetLicensingCotermLicensesItemArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItem)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemArrayOutput) ToGetLicensingCotermLicensesItemArrayOutput() GetLicensingCotermLicensesItemArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemArrayOutput) ToGetLicensingCotermLicensesItemArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemArrayOutput) Index(i pulumi.IntInput) GetLicensingCotermLicensesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingCotermLicensesItem {
		return vs[0].([]GetLicensingCotermLicensesItem)[vs[1].(int)]
	}).(GetLicensingCotermLicensesItemOutput)
}

type GetLicensingCotermLicensesItemCount struct {
	// The number of counts the license contains of this model
	Count int `pulumi:"count"`
	// The license model type
	Model string `pulumi:"model"`
}

// GetLicensingCotermLicensesItemCountInput is an input type that accepts GetLicensingCotermLicensesItemCountArgs and GetLicensingCotermLicensesItemCountOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemCountInput` via:
//
//	GetLicensingCotermLicensesItemCountArgs{...}
type GetLicensingCotermLicensesItemCountInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemCountOutput() GetLicensingCotermLicensesItemCountOutput
	ToGetLicensingCotermLicensesItemCountOutputWithContext(context.Context) GetLicensingCotermLicensesItemCountOutput
}

type GetLicensingCotermLicensesItemCountArgs struct {
	// The number of counts the license contains of this model
	Count pulumi.IntInput `pulumi:"count"`
	// The license model type
	Model pulumi.StringInput `pulumi:"model"`
}

func (GetLicensingCotermLicensesItemCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItemCount)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemCountArgs) ToGetLicensingCotermLicensesItemCountOutput() GetLicensingCotermLicensesItemCountOutput {
	return i.ToGetLicensingCotermLicensesItemCountOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemCountArgs) ToGetLicensingCotermLicensesItemCountOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemCountOutput)
}

// GetLicensingCotermLicensesItemCountArrayInput is an input type that accepts GetLicensingCotermLicensesItemCountArray and GetLicensingCotermLicensesItemCountArrayOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemCountArrayInput` via:
//
//	GetLicensingCotermLicensesItemCountArray{ GetLicensingCotermLicensesItemCountArgs{...} }
type GetLicensingCotermLicensesItemCountArrayInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemCountArrayOutput() GetLicensingCotermLicensesItemCountArrayOutput
	ToGetLicensingCotermLicensesItemCountArrayOutputWithContext(context.Context) GetLicensingCotermLicensesItemCountArrayOutput
}

type GetLicensingCotermLicensesItemCountArray []GetLicensingCotermLicensesItemCountInput

func (GetLicensingCotermLicensesItemCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItemCount)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemCountArray) ToGetLicensingCotermLicensesItemCountArrayOutput() GetLicensingCotermLicensesItemCountArrayOutput {
	return i.ToGetLicensingCotermLicensesItemCountArrayOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemCountArray) ToGetLicensingCotermLicensesItemCountArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemCountArrayOutput)
}

type GetLicensingCotermLicensesItemCountOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItemCount)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemCountOutput) ToGetLicensingCotermLicensesItemCountOutput() GetLicensingCotermLicensesItemCountOutput {
	return o
}

func (o GetLicensingCotermLicensesItemCountOutput) ToGetLicensingCotermLicensesItemCountOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemCountOutput {
	return o
}

// The number of counts the license contains of this model
func (o GetLicensingCotermLicensesItemCountOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItemCount) int { return v.Count }).(pulumi.IntOutput)
}

// The license model type
func (o GetLicensingCotermLicensesItemCountOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItemCount) string { return v.Model }).(pulumi.StringOutput)
}

type GetLicensingCotermLicensesItemCountArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItemCount)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemCountArrayOutput) ToGetLicensingCotermLicensesItemCountArrayOutput() GetLicensingCotermLicensesItemCountArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemCountArrayOutput) ToGetLicensingCotermLicensesItemCountArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemCountArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemCountArrayOutput) Index(i pulumi.IntInput) GetLicensingCotermLicensesItemCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingCotermLicensesItemCount {
		return vs[0].([]GetLicensingCotermLicensesItemCount)[vs[1].(int)]
	}).(GetLicensingCotermLicensesItemCountOutput)
}

type GetLicensingCotermLicensesItemEdition struct {
	// The name of the license edition
	Edition string `pulumi:"edition"`
	// The product type of the license edition
	ProductType string `pulumi:"productType"`
}

// GetLicensingCotermLicensesItemEditionInput is an input type that accepts GetLicensingCotermLicensesItemEditionArgs and GetLicensingCotermLicensesItemEditionOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemEditionInput` via:
//
//	GetLicensingCotermLicensesItemEditionArgs{...}
type GetLicensingCotermLicensesItemEditionInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemEditionOutput() GetLicensingCotermLicensesItemEditionOutput
	ToGetLicensingCotermLicensesItemEditionOutputWithContext(context.Context) GetLicensingCotermLicensesItemEditionOutput
}

type GetLicensingCotermLicensesItemEditionArgs struct {
	// The name of the license edition
	Edition pulumi.StringInput `pulumi:"edition"`
	// The product type of the license edition
	ProductType pulumi.StringInput `pulumi:"productType"`
}

func (GetLicensingCotermLicensesItemEditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItemEdition)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemEditionArgs) ToGetLicensingCotermLicensesItemEditionOutput() GetLicensingCotermLicensesItemEditionOutput {
	return i.ToGetLicensingCotermLicensesItemEditionOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemEditionArgs) ToGetLicensingCotermLicensesItemEditionOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemEditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemEditionOutput)
}

// GetLicensingCotermLicensesItemEditionArrayInput is an input type that accepts GetLicensingCotermLicensesItemEditionArray and GetLicensingCotermLicensesItemEditionArrayOutput values.
// You can construct a concrete instance of `GetLicensingCotermLicensesItemEditionArrayInput` via:
//
//	GetLicensingCotermLicensesItemEditionArray{ GetLicensingCotermLicensesItemEditionArgs{...} }
type GetLicensingCotermLicensesItemEditionArrayInput interface {
	pulumi.Input

	ToGetLicensingCotermLicensesItemEditionArrayOutput() GetLicensingCotermLicensesItemEditionArrayOutput
	ToGetLicensingCotermLicensesItemEditionArrayOutputWithContext(context.Context) GetLicensingCotermLicensesItemEditionArrayOutput
}

type GetLicensingCotermLicensesItemEditionArray []GetLicensingCotermLicensesItemEditionInput

func (GetLicensingCotermLicensesItemEditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItemEdition)(nil)).Elem()
}

func (i GetLicensingCotermLicensesItemEditionArray) ToGetLicensingCotermLicensesItemEditionArrayOutput() GetLicensingCotermLicensesItemEditionArrayOutput {
	return i.ToGetLicensingCotermLicensesItemEditionArrayOutputWithContext(context.Background())
}

func (i GetLicensingCotermLicensesItemEditionArray) ToGetLicensingCotermLicensesItemEditionArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemEditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingCotermLicensesItemEditionArrayOutput)
}

type GetLicensingCotermLicensesItemEditionOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingCotermLicensesItemEdition)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemEditionOutput) ToGetLicensingCotermLicensesItemEditionOutput() GetLicensingCotermLicensesItemEditionOutput {
	return o
}

func (o GetLicensingCotermLicensesItemEditionOutput) ToGetLicensingCotermLicensesItemEditionOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemEditionOutput {
	return o
}

// The name of the license edition
func (o GetLicensingCotermLicensesItemEditionOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItemEdition) string { return v.Edition }).(pulumi.StringOutput)
}

// The product type of the license edition
func (o GetLicensingCotermLicensesItemEditionOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingCotermLicensesItemEdition) string { return v.ProductType }).(pulumi.StringOutput)
}

type GetLicensingCotermLicensesItemEditionArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingCotermLicensesItemEditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingCotermLicensesItemEdition)(nil)).Elem()
}

func (o GetLicensingCotermLicensesItemEditionArrayOutput) ToGetLicensingCotermLicensesItemEditionArrayOutput() GetLicensingCotermLicensesItemEditionArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemEditionArrayOutput) ToGetLicensingCotermLicensesItemEditionArrayOutputWithContext(ctx context.Context) GetLicensingCotermLicensesItemEditionArrayOutput {
	return o
}

func (o GetLicensingCotermLicensesItemEditionArrayOutput) Index(i pulumi.IntInput) GetLicensingCotermLicensesItemEditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingCotermLicensesItemEdition {
		return vs[0].([]GetLicensingCotermLicensesItemEdition)[vs[1].(int)]
	}).(GetLicensingCotermLicensesItemEditionOutput)
}

type GetLoginSecurityItem struct {
	// Number of consecutive failed login attempts after which users' accounts will be locked.
	AccountLockoutAttempts int `pulumi:"accountLockoutAttempts"`
	// Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
	ApiAuthentication GetLoginSecurityItemApiAuthentication `pulumi:"apiAuthentication"`
	// Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
	EnforceAccountLockout bool `pulumi:"enforceAccountLockout"`
	// Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
	EnforceDifferentPasswords bool `pulumi:"enforceDifferentPasswords"`
	// Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
	EnforceIdleTimeout bool `pulumi:"enforceIdleTimeout"`
	// Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
	EnforceLoginIpRanges bool `pulumi:"enforceLoginIpRanges"`
	// Boolean indicating whether users are forced to change their password every X number of days.
	EnforcePasswordExpiration bool `pulumi:"enforcePasswordExpiration"`
	// Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol
	EnforceStrongPasswords bool `pulumi:"enforceStrongPasswords"`
	// Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
	EnforceTwoFactorAuth bool `pulumi:"enforceTwoFactorAuth"`
	// Number of minutes users can remain idle before being logged out of their accounts.
	IdleTimeoutMinutes int `pulumi:"idleTimeoutMinutes"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	LoginIpRanges []string `pulumi:"loginIpRanges"`
	// Number of recent passwords that new password must be distinct from.
	NumDifferentPasswords int `pulumi:"numDifferentPasswords"`
	// Number of days after which users will be forced to change their password.
	PasswordExpirationDays int `pulumi:"passwordExpirationDays"`
}

// GetLoginSecurityItemInput is an input type that accepts GetLoginSecurityItemArgs and GetLoginSecurityItemOutput values.
// You can construct a concrete instance of `GetLoginSecurityItemInput` via:
//
//	GetLoginSecurityItemArgs{...}
type GetLoginSecurityItemInput interface {
	pulumi.Input

	ToGetLoginSecurityItemOutput() GetLoginSecurityItemOutput
	ToGetLoginSecurityItemOutputWithContext(context.Context) GetLoginSecurityItemOutput
}

type GetLoginSecurityItemArgs struct {
	// Number of consecutive failed login attempts after which users' accounts will be locked.
	AccountLockoutAttempts pulumi.IntInput `pulumi:"accountLockoutAttempts"`
	// Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
	ApiAuthentication GetLoginSecurityItemApiAuthenticationInput `pulumi:"apiAuthentication"`
	// Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
	EnforceAccountLockout pulumi.BoolInput `pulumi:"enforceAccountLockout"`
	// Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
	EnforceDifferentPasswords pulumi.BoolInput `pulumi:"enforceDifferentPasswords"`
	// Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
	EnforceIdleTimeout pulumi.BoolInput `pulumi:"enforceIdleTimeout"`
	// Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
	EnforceLoginIpRanges pulumi.BoolInput `pulumi:"enforceLoginIpRanges"`
	// Boolean indicating whether users are forced to change their password every X number of days.
	EnforcePasswordExpiration pulumi.BoolInput `pulumi:"enforcePasswordExpiration"`
	// Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol
	EnforceStrongPasswords pulumi.BoolInput `pulumi:"enforceStrongPasswords"`
	// Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
	EnforceTwoFactorAuth pulumi.BoolInput `pulumi:"enforceTwoFactorAuth"`
	// Number of minutes users can remain idle before being logged out of their accounts.
	IdleTimeoutMinutes pulumi.IntInput `pulumi:"idleTimeoutMinutes"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	LoginIpRanges pulumi.StringArrayInput `pulumi:"loginIpRanges"`
	// Number of recent passwords that new password must be distinct from.
	NumDifferentPasswords pulumi.IntInput `pulumi:"numDifferentPasswords"`
	// Number of days after which users will be forced to change their password.
	PasswordExpirationDays pulumi.IntInput `pulumi:"passwordExpirationDays"`
}

func (GetLoginSecurityItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItem)(nil)).Elem()
}

func (i GetLoginSecurityItemArgs) ToGetLoginSecurityItemOutput() GetLoginSecurityItemOutput {
	return i.ToGetLoginSecurityItemOutputWithContext(context.Background())
}

func (i GetLoginSecurityItemArgs) ToGetLoginSecurityItemOutputWithContext(ctx context.Context) GetLoginSecurityItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoginSecurityItemOutput)
}

type GetLoginSecurityItemOutput struct{ *pulumi.OutputState }

func (GetLoginSecurityItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItem)(nil)).Elem()
}

func (o GetLoginSecurityItemOutput) ToGetLoginSecurityItemOutput() GetLoginSecurityItemOutput {
	return o
}

func (o GetLoginSecurityItemOutput) ToGetLoginSecurityItemOutputWithContext(ctx context.Context) GetLoginSecurityItemOutput {
	return o
}

// Number of consecutive failed login attempts after which users' accounts will be locked.
func (o GetLoginSecurityItemOutput) AccountLockoutAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) int { return v.AccountLockoutAttempts }).(pulumi.IntOutput)
}

// Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
func (o GetLoginSecurityItemOutput) ApiAuthentication() GetLoginSecurityItemApiAuthenticationOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) GetLoginSecurityItemApiAuthentication { return v.ApiAuthentication }).(GetLoginSecurityItemApiAuthenticationOutput)
}

// Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
func (o GetLoginSecurityItemOutput) EnforceAccountLockout() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceAccountLockout }).(pulumi.BoolOutput)
}

// Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
func (o GetLoginSecurityItemOutput) EnforceDifferentPasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceDifferentPasswords }).(pulumi.BoolOutput)
}

// Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
func (o GetLoginSecurityItemOutput) EnforceIdleTimeout() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceIdleTimeout }).(pulumi.BoolOutput)
}

// Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
func (o GetLoginSecurityItemOutput) EnforceLoginIpRanges() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceLoginIpRanges }).(pulumi.BoolOutput)
}

// Boolean indicating whether users are forced to change their password every X number of days.
func (o GetLoginSecurityItemOutput) EnforcePasswordExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforcePasswordExpiration }).(pulumi.BoolOutput)
}

// Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol
func (o GetLoginSecurityItemOutput) EnforceStrongPasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceStrongPasswords }).(pulumi.BoolOutput)
}

// Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
func (o GetLoginSecurityItemOutput) EnforceTwoFactorAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) bool { return v.EnforceTwoFactorAuth }).(pulumi.BoolOutput)
}

// Number of minutes users can remain idle before being logged out of their accounts.
func (o GetLoginSecurityItemOutput) IdleTimeoutMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) int { return v.IdleTimeoutMinutes }).(pulumi.IntOutput)
}

// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
func (o GetLoginSecurityItemOutput) LoginIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) []string { return v.LoginIpRanges }).(pulumi.StringArrayOutput)
}

// Number of recent passwords that new password must be distinct from.
func (o GetLoginSecurityItemOutput) NumDifferentPasswords() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) int { return v.NumDifferentPasswords }).(pulumi.IntOutput)
}

// Number of days after which users will be forced to change their password.
func (o GetLoginSecurityItemOutput) PasswordExpirationDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoginSecurityItem) int { return v.PasswordExpirationDays }).(pulumi.IntOutput)
}

type GetLoginSecurityItemApiAuthentication struct {
	// Details for API-only IP restrictions.
	IpRestrictionsForKeys GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys `pulumi:"ipRestrictionsForKeys"`
}

// GetLoginSecurityItemApiAuthenticationInput is an input type that accepts GetLoginSecurityItemApiAuthenticationArgs and GetLoginSecurityItemApiAuthenticationOutput values.
// You can construct a concrete instance of `GetLoginSecurityItemApiAuthenticationInput` via:
//
//	GetLoginSecurityItemApiAuthenticationArgs{...}
type GetLoginSecurityItemApiAuthenticationInput interface {
	pulumi.Input

	ToGetLoginSecurityItemApiAuthenticationOutput() GetLoginSecurityItemApiAuthenticationOutput
	ToGetLoginSecurityItemApiAuthenticationOutputWithContext(context.Context) GetLoginSecurityItemApiAuthenticationOutput
}

type GetLoginSecurityItemApiAuthenticationArgs struct {
	// Details for API-only IP restrictions.
	IpRestrictionsForKeys GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysInput `pulumi:"ipRestrictionsForKeys"`
}

func (GetLoginSecurityItemApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItemApiAuthentication)(nil)).Elem()
}

func (i GetLoginSecurityItemApiAuthenticationArgs) ToGetLoginSecurityItemApiAuthenticationOutput() GetLoginSecurityItemApiAuthenticationOutput {
	return i.ToGetLoginSecurityItemApiAuthenticationOutputWithContext(context.Background())
}

func (i GetLoginSecurityItemApiAuthenticationArgs) ToGetLoginSecurityItemApiAuthenticationOutputWithContext(ctx context.Context) GetLoginSecurityItemApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoginSecurityItemApiAuthenticationOutput)
}

type GetLoginSecurityItemApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetLoginSecurityItemApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItemApiAuthentication)(nil)).Elem()
}

func (o GetLoginSecurityItemApiAuthenticationOutput) ToGetLoginSecurityItemApiAuthenticationOutput() GetLoginSecurityItemApiAuthenticationOutput {
	return o
}

func (o GetLoginSecurityItemApiAuthenticationOutput) ToGetLoginSecurityItemApiAuthenticationOutputWithContext(ctx context.Context) GetLoginSecurityItemApiAuthenticationOutput {
	return o
}

// Details for API-only IP restrictions.
func (o GetLoginSecurityItemApiAuthenticationOutput) IpRestrictionsForKeys() GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput {
	return o.ApplyT(func(v GetLoginSecurityItemApiAuthentication) GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys {
		return v.IpRestrictionsForKeys
	}).(GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput)
}

type GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys struct {
	// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
	Enabled bool `pulumi:"enabled"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	Ranges []string `pulumi:"ranges"`
}

// GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysInput is an input type that accepts GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs and GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput values.
// You can construct a concrete instance of `GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysInput` via:
//
//	GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs{...}
type GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysInput interface {
	pulumi.Input

	ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput() GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput
	ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutputWithContext(context.Context) GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput
}

type GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs struct {
	// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
	Ranges pulumi.StringArrayInput `pulumi:"ranges"`
}

func (GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (i GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs) ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput() GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput {
	return i.ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutputWithContext(context.Background())
}

func (i GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs) ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutputWithContext(ctx context.Context) GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput)
}

type GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput struct{ *pulumi.OutputState }

func (GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys)(nil)).Elem()
}

func (o GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput) ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput() GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput {
	return o
}

func (o GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput) ToGetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutputWithContext(ctx context.Context) GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput {
	return o
}

// Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
func (o GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
func (o GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput) Ranges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeys) []string { return v.Ranges }).(pulumi.StringArrayOutput)
}

type GetOpenapiSpecItem struct {
	Info    GetOpenapiSpecItemInfo  `pulumi:"info"`
	Openapi string                  `pulumi:"openapi"`
	Paths   GetOpenapiSpecItemPaths `pulumi:"paths"`
}

// GetOpenapiSpecItemInput is an input type that accepts GetOpenapiSpecItemArgs and GetOpenapiSpecItemOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemInput` via:
//
//	GetOpenapiSpecItemArgs{...}
type GetOpenapiSpecItemInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemOutput() GetOpenapiSpecItemOutput
	ToGetOpenapiSpecItemOutputWithContext(context.Context) GetOpenapiSpecItemOutput
}

type GetOpenapiSpecItemArgs struct {
	Info    GetOpenapiSpecItemInfoInput  `pulumi:"info"`
	Openapi pulumi.StringInput           `pulumi:"openapi"`
	Paths   GetOpenapiSpecItemPathsInput `pulumi:"paths"`
}

func (GetOpenapiSpecItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItem)(nil)).Elem()
}

func (i GetOpenapiSpecItemArgs) ToGetOpenapiSpecItemOutput() GetOpenapiSpecItemOutput {
	return i.ToGetOpenapiSpecItemOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemArgs) ToGetOpenapiSpecItemOutputWithContext(ctx context.Context) GetOpenapiSpecItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemOutput)
}

type GetOpenapiSpecItemOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItem)(nil)).Elem()
}

func (o GetOpenapiSpecItemOutput) ToGetOpenapiSpecItemOutput() GetOpenapiSpecItemOutput {
	return o
}

func (o GetOpenapiSpecItemOutput) ToGetOpenapiSpecItemOutputWithContext(ctx context.Context) GetOpenapiSpecItemOutput {
	return o
}

func (o GetOpenapiSpecItemOutput) Info() GetOpenapiSpecItemInfoOutput {
	return o.ApplyT(func(v GetOpenapiSpecItem) GetOpenapiSpecItemInfo { return v.Info }).(GetOpenapiSpecItemInfoOutput)
}

func (o GetOpenapiSpecItemOutput) Openapi() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItem) string { return v.Openapi }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemOutput) Paths() GetOpenapiSpecItemPathsOutput {
	return o.ApplyT(func(v GetOpenapiSpecItem) GetOpenapiSpecItemPaths { return v.Paths }).(GetOpenapiSpecItemPathsOutput)
}

type GetOpenapiSpecItemInfo struct {
	Description string `pulumi:"description"`
	Title       string `pulumi:"title"`
	Version     string `pulumi:"version"`
}

// GetOpenapiSpecItemInfoInput is an input type that accepts GetOpenapiSpecItemInfoArgs and GetOpenapiSpecItemInfoOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemInfoInput` via:
//
//	GetOpenapiSpecItemInfoArgs{...}
type GetOpenapiSpecItemInfoInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemInfoOutput() GetOpenapiSpecItemInfoOutput
	ToGetOpenapiSpecItemInfoOutputWithContext(context.Context) GetOpenapiSpecItemInfoOutput
}

type GetOpenapiSpecItemInfoArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Title       pulumi.StringInput `pulumi:"title"`
	Version     pulumi.StringInput `pulumi:"version"`
}

func (GetOpenapiSpecItemInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemInfo)(nil)).Elem()
}

func (i GetOpenapiSpecItemInfoArgs) ToGetOpenapiSpecItemInfoOutput() GetOpenapiSpecItemInfoOutput {
	return i.ToGetOpenapiSpecItemInfoOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemInfoArgs) ToGetOpenapiSpecItemInfoOutputWithContext(ctx context.Context) GetOpenapiSpecItemInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemInfoOutput)
}

type GetOpenapiSpecItemInfoOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemInfo)(nil)).Elem()
}

func (o GetOpenapiSpecItemInfoOutput) ToGetOpenapiSpecItemInfoOutput() GetOpenapiSpecItemInfoOutput {
	return o
}

func (o GetOpenapiSpecItemInfoOutput) ToGetOpenapiSpecItemInfoOutputWithContext(ctx context.Context) GetOpenapiSpecItemInfoOutput {
	return o
}

func (o GetOpenapiSpecItemInfoOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemInfo) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemInfoOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemInfo) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemInfoOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemInfo) string { return v.Version }).(pulumi.StringOutput)
}

type GetOpenapiSpecItemPaths struct {
	Organizations GetOpenapiSpecItemPathsOrganizations `pulumi:"organizations"`
}

// GetOpenapiSpecItemPathsInput is an input type that accepts GetOpenapiSpecItemPathsArgs and GetOpenapiSpecItemPathsOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsInput` via:
//
//	GetOpenapiSpecItemPathsArgs{...}
type GetOpenapiSpecItemPathsInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOutput() GetOpenapiSpecItemPathsOutput
	ToGetOpenapiSpecItemPathsOutputWithContext(context.Context) GetOpenapiSpecItemPathsOutput
}

type GetOpenapiSpecItemPathsArgs struct {
	Organizations GetOpenapiSpecItemPathsOrganizationsInput `pulumi:"organizations"`
}

func (GetOpenapiSpecItemPathsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPaths)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsArgs) ToGetOpenapiSpecItemPathsOutput() GetOpenapiSpecItemPathsOutput {
	return i.ToGetOpenapiSpecItemPathsOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsArgs) ToGetOpenapiSpecItemPathsOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOutput)
}

type GetOpenapiSpecItemPathsOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPaths)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOutput) ToGetOpenapiSpecItemPathsOutput() GetOpenapiSpecItemPathsOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOutput) ToGetOpenapiSpecItemPathsOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOutput) Organizations() GetOpenapiSpecItemPathsOrganizationsOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPaths) GetOpenapiSpecItemPathsOrganizations { return v.Organizations }).(GetOpenapiSpecItemPathsOrganizationsOutput)
}

type GetOpenapiSpecItemPathsOrganizations struct {
	Get GetOpenapiSpecItemPathsOrganizationsGet `pulumi:"get"`
}

// GetOpenapiSpecItemPathsOrganizationsInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsArgs and GetOpenapiSpecItemPathsOrganizationsOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsArgs{...}
type GetOpenapiSpecItemPathsOrganizationsInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsOutput() GetOpenapiSpecItemPathsOrganizationsOutput
	ToGetOpenapiSpecItemPathsOrganizationsOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsOutput
}

type GetOpenapiSpecItemPathsOrganizationsArgs struct {
	Get GetOpenapiSpecItemPathsOrganizationsGetInput `pulumi:"get"`
}

func (GetOpenapiSpecItemPathsOrganizationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizations)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsArgs) ToGetOpenapiSpecItemPathsOrganizationsOutput() GetOpenapiSpecItemPathsOrganizationsOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsArgs) ToGetOpenapiSpecItemPathsOrganizationsOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsOutput)
}

type GetOpenapiSpecItemPathsOrganizationsOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizations)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsOutput) ToGetOpenapiSpecItemPathsOrganizationsOutput() GetOpenapiSpecItemPathsOrganizationsOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsOutput) ToGetOpenapiSpecItemPathsOrganizationsOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsOutput) Get() GetOpenapiSpecItemPathsOrganizationsGetOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizations) GetOpenapiSpecItemPathsOrganizationsGet { return v.Get }).(GetOpenapiSpecItemPathsOrganizationsGetOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGet struct {
	Description string                                           `pulumi:"description"`
	OperationId string                                           `pulumi:"operationId"`
	Responses   GetOpenapiSpecItemPathsOrganizationsGetResponses `pulumi:"responses"`
}

// GetOpenapiSpecItemPathsOrganizationsGetInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetArgs and GetOpenapiSpecItemPathsOrganizationsGetOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetArgs{...}
type GetOpenapiSpecItemPathsOrganizationsGetInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetOutput() GetOpenapiSpecItemPathsOrganizationsGetOutput
	ToGetOpenapiSpecItemPathsOrganizationsGetOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetOutput
}

type GetOpenapiSpecItemPathsOrganizationsGetArgs struct {
	Description pulumi.StringInput                                    `pulumi:"description"`
	OperationId pulumi.StringInput                                    `pulumi:"operationId"`
	Responses   GetOpenapiSpecItemPathsOrganizationsGetResponsesInput `pulumi:"responses"`
}

func (GetOpenapiSpecItemPathsOrganizationsGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGet)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetArgs) ToGetOpenapiSpecItemPathsOrganizationsGetOutput() GetOpenapiSpecItemPathsOrganizationsGetOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetArgs) ToGetOpenapiSpecItemPathsOrganizationsGetOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGet)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetOutput) ToGetOpenapiSpecItemPathsOrganizationsGetOutput() GetOpenapiSpecItemPathsOrganizationsGetOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetOutput) ToGetOpenapiSpecItemPathsOrganizationsGetOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGet) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemPathsOrganizationsGetOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGet) string { return v.OperationId }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemPathsOrganizationsGetOutput) Responses() GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGet) GetOpenapiSpecItemPathsOrganizationsGetResponses {
		return v.Responses
	}).(GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponses struct {
	Status200 GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200 `pulumi:"status200"`
}

// GetOpenapiSpecItemPathsOrganizationsGetResponsesInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs and GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetResponsesInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs{...}
type GetOpenapiSpecItemPathsOrganizationsGetResponsesInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput
	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs struct {
	Status200 GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Input `pulumi:"status200"`
}

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponses)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponses)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput) Status200() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponses) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200 {
		return v.Status200
	}).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200 struct {
	Description string                                                            `pulumi:"description"`
	Examples    GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples `pulumi:"examples"`
}

// GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Input is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args and GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Input` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args{...}
type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Input interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output
	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200OutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args struct {
	Description pulumi.StringInput                                                     `pulumi:"description"`
	Examples    GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesInput `pulumi:"examples"`
}

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200OutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200OutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200OutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output) Examples() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples {
		return v.Examples
	}).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples struct {
	ApplicationJsons []GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson `pulumi:"applicationJsons"`
}

// GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs and GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs{...}
type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput
	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs struct {
	ApplicationJsons GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayInput `pulumi:"applicationJsons"`
}

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput) ApplicationJsons() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Examples) []GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson {
		return v.ApplicationJsons
	}).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs and GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs{...}
type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput
	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput)
}

// GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayInput is an input type that accepts GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray and GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput values.
// You can construct a concrete instance of `GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayInput` via:
//
//	GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray{ GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs{...} }
type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayInput interface {
	pulumi.Input

	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput
	ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutputWithContext(context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray []GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonInput

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson)(nil)).Elem()
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput {
	return i.ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutputWithContext(context.Background())
}

func (i GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson) string {
		return v.Id
	}).(pulumi.StringOutput)
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson) string {
		return v.Name
	}).(pulumi.StringOutput)
}

type GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput struct{ *pulumi.OutputState }

func (GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson)(nil)).Elem()
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput() GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput) ToGetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutputWithContext(ctx context.Context) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput {
	return o
}

func (o GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput) Index(i pulumi.IntInput) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson {
		return vs[0].([]GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJson)[vs[1].(int)]
	}).(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput)
}

type GetPolicyObjectsGroupsItem struct {
	// Type of object groups. (NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category string `pulumi:"category"`
	// Time Stamp of policy object creation.
	CreatedAt string `pulumi:"createdAt"`
	// Policy object ID
	Id string `pulumi:"id"`
	// Name of the Policy object group.
	Name string `pulumi:"name"`
	// Network ID's associated with the policy objects.
	NetworkIds []string `pulumi:"networkIds"`
	// Policy objects associated with Network Object Group or Port Object Group
	ObjectIds []string `pulumi:"objectIds"`
	// Time Stamp of policy object updation.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPolicyObjectsGroupsItemInput is an input type that accepts GetPolicyObjectsGroupsItemArgs and GetPolicyObjectsGroupsItemOutput values.
// You can construct a concrete instance of `GetPolicyObjectsGroupsItemInput` via:
//
//	GetPolicyObjectsGroupsItemArgs{...}
type GetPolicyObjectsGroupsItemInput interface {
	pulumi.Input

	ToGetPolicyObjectsGroupsItemOutput() GetPolicyObjectsGroupsItemOutput
	ToGetPolicyObjectsGroupsItemOutputWithContext(context.Context) GetPolicyObjectsGroupsItemOutput
}

type GetPolicyObjectsGroupsItemArgs struct {
	// Type of object groups. (NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category pulumi.StringInput `pulumi:"category"`
	// Time Stamp of policy object creation.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Policy object ID
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Policy object group.
	Name pulumi.StringInput `pulumi:"name"`
	// Network ID's associated with the policy objects.
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
	// Policy objects associated with Network Object Group or Port Object Group
	ObjectIds pulumi.StringArrayInput `pulumi:"objectIds"`
	// Time Stamp of policy object updation.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPolicyObjectsGroupsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyObjectsGroupsItem)(nil)).Elem()
}

func (i GetPolicyObjectsGroupsItemArgs) ToGetPolicyObjectsGroupsItemOutput() GetPolicyObjectsGroupsItemOutput {
	return i.ToGetPolicyObjectsGroupsItemOutputWithContext(context.Background())
}

func (i GetPolicyObjectsGroupsItemArgs) ToGetPolicyObjectsGroupsItemOutputWithContext(ctx context.Context) GetPolicyObjectsGroupsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyObjectsGroupsItemOutput)
}

type GetPolicyObjectsGroupsItemOutput struct{ *pulumi.OutputState }

func (GetPolicyObjectsGroupsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyObjectsGroupsItem)(nil)).Elem()
}

func (o GetPolicyObjectsGroupsItemOutput) ToGetPolicyObjectsGroupsItemOutput() GetPolicyObjectsGroupsItemOutput {
	return o
}

func (o GetPolicyObjectsGroupsItemOutput) ToGetPolicyObjectsGroupsItemOutputWithContext(ctx context.Context) GetPolicyObjectsGroupsItemOutput {
	return o
}

// Type of object groups. (NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
func (o GetPolicyObjectsGroupsItemOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) string { return v.Category }).(pulumi.StringOutput)
}

// Time Stamp of policy object creation.
func (o GetPolicyObjectsGroupsItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Policy object ID
func (o GetPolicyObjectsGroupsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Policy object group.
func (o GetPolicyObjectsGroupsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network ID's associated with the policy objects.
func (o GetPolicyObjectsGroupsItemOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// Policy objects associated with Network Object Group or Port Object Group
func (o GetPolicyObjectsGroupsItemOutput) ObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) []string { return v.ObjectIds }).(pulumi.StringArrayOutput)
}

// Time Stamp of policy object updation.
func (o GetPolicyObjectsGroupsItemOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsGroupsItem) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetPolicyObjectsItem struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category string `pulumi:"category"`
	// CIDR Value of a policy object
	Cidr string `pulumi:"cidr"`
	// Time Stamp of policy object creation.
	CreatedAt string `pulumi:"createdAt"`
	// The IDs of policy object groups the policy object belongs to.
	GroupIds []string `pulumi:"groupIds"`
	// Policy object ID
	Id string `pulumi:"id"`
	// Name of policy object (alphanumeric, space, dash, or underscore characters only).
	Name string `pulumi:"name"`
	// The IDs of the networks that use the policy object.
	NetworkIds []string `pulumi:"networkIds"`
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type string `pulumi:"type"`
	// Time Stamp of policy object updation.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPolicyObjectsItemInput is an input type that accepts GetPolicyObjectsItemArgs and GetPolicyObjectsItemOutput values.
// You can construct a concrete instance of `GetPolicyObjectsItemInput` via:
//
//	GetPolicyObjectsItemArgs{...}
type GetPolicyObjectsItemInput interface {
	pulumi.Input

	ToGetPolicyObjectsItemOutput() GetPolicyObjectsItemOutput
	ToGetPolicyObjectsItemOutputWithContext(context.Context) GetPolicyObjectsItemOutput
}

type GetPolicyObjectsItemArgs struct {
	// Category of a policy object (one of: adaptivePolicy, network)
	Category pulumi.StringInput `pulumi:"category"`
	// CIDR Value of a policy object
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Time Stamp of policy object creation.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The IDs of policy object groups the policy object belongs to.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Policy object ID
	Id pulumi.StringInput `pulumi:"id"`
	// Name of policy object (alphanumeric, space, dash, or underscore characters only).
	Name pulumi.StringInput `pulumi:"name"`
	// The IDs of the networks that use the policy object.
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	Type pulumi.StringInput `pulumi:"type"`
	// Time Stamp of policy object updation.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPolicyObjectsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyObjectsItem)(nil)).Elem()
}

func (i GetPolicyObjectsItemArgs) ToGetPolicyObjectsItemOutput() GetPolicyObjectsItemOutput {
	return i.ToGetPolicyObjectsItemOutputWithContext(context.Background())
}

func (i GetPolicyObjectsItemArgs) ToGetPolicyObjectsItemOutputWithContext(ctx context.Context) GetPolicyObjectsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyObjectsItemOutput)
}

type GetPolicyObjectsItemOutput struct{ *pulumi.OutputState }

func (GetPolicyObjectsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyObjectsItem)(nil)).Elem()
}

func (o GetPolicyObjectsItemOutput) ToGetPolicyObjectsItemOutput() GetPolicyObjectsItemOutput {
	return o
}

func (o GetPolicyObjectsItemOutput) ToGetPolicyObjectsItemOutputWithContext(ctx context.Context) GetPolicyObjectsItemOutput {
	return o
}

// Category of a policy object (one of: adaptivePolicy, network)
func (o GetPolicyObjectsItemOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.Category }).(pulumi.StringOutput)
}

// CIDR Value of a policy object
func (o GetPolicyObjectsItemOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.Cidr }).(pulumi.StringOutput)
}

// Time Stamp of policy object creation.
func (o GetPolicyObjectsItemOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The IDs of policy object groups the policy object belongs to.
func (o GetPolicyObjectsItemOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Policy object ID
func (o GetPolicyObjectsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Name of policy object (alphanumeric, space, dash, or underscore characters only).
func (o GetPolicyObjectsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The IDs of the networks that use the policy object.
func (o GetPolicyObjectsItemOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
func (o GetPolicyObjectsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.Type }).(pulumi.StringOutput)
}

// Time Stamp of policy object updation.
func (o GetPolicyObjectsItemOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyObjectsItem) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetSamlIdpsItem struct {
	// URL that is consuming SAML Identity Provider (IdP)
	ConsumerUrl string `pulumi:"consumerUrl"`
	// ID associated with the SAML Identity Provider (IdP)
	IdpId string `pulumi:"idpId"`
	// Dashboard will redirect users to this URL when they sign out.
	SloLogoutUrl string `pulumi:"sloLogoutUrl"`
	// Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
	X509certSha1Fingerprint string `pulumi:"x509certSha1Fingerprint"`
}

// GetSamlIdpsItemInput is an input type that accepts GetSamlIdpsItemArgs and GetSamlIdpsItemOutput values.
// You can construct a concrete instance of `GetSamlIdpsItemInput` via:
//
//	GetSamlIdpsItemArgs{...}
type GetSamlIdpsItemInput interface {
	pulumi.Input

	ToGetSamlIdpsItemOutput() GetSamlIdpsItemOutput
	ToGetSamlIdpsItemOutputWithContext(context.Context) GetSamlIdpsItemOutput
}

type GetSamlIdpsItemArgs struct {
	// URL that is consuming SAML Identity Provider (IdP)
	ConsumerUrl pulumi.StringInput `pulumi:"consumerUrl"`
	// ID associated with the SAML Identity Provider (IdP)
	IdpId pulumi.StringInput `pulumi:"idpId"`
	// Dashboard will redirect users to this URL when they sign out.
	SloLogoutUrl pulumi.StringInput `pulumi:"sloLogoutUrl"`
	// Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
	X509certSha1Fingerprint pulumi.StringInput `pulumi:"x509certSha1Fingerprint"`
}

func (GetSamlIdpsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlIdpsItem)(nil)).Elem()
}

func (i GetSamlIdpsItemArgs) ToGetSamlIdpsItemOutput() GetSamlIdpsItemOutput {
	return i.ToGetSamlIdpsItemOutputWithContext(context.Background())
}

func (i GetSamlIdpsItemArgs) ToGetSamlIdpsItemOutputWithContext(ctx context.Context) GetSamlIdpsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlIdpsItemOutput)
}

// GetSamlIdpsItemArrayInput is an input type that accepts GetSamlIdpsItemArray and GetSamlIdpsItemArrayOutput values.
// You can construct a concrete instance of `GetSamlIdpsItemArrayInput` via:
//
//	GetSamlIdpsItemArray{ GetSamlIdpsItemArgs{...} }
type GetSamlIdpsItemArrayInput interface {
	pulumi.Input

	ToGetSamlIdpsItemArrayOutput() GetSamlIdpsItemArrayOutput
	ToGetSamlIdpsItemArrayOutputWithContext(context.Context) GetSamlIdpsItemArrayOutput
}

type GetSamlIdpsItemArray []GetSamlIdpsItemInput

func (GetSamlIdpsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlIdpsItem)(nil)).Elem()
}

func (i GetSamlIdpsItemArray) ToGetSamlIdpsItemArrayOutput() GetSamlIdpsItemArrayOutput {
	return i.ToGetSamlIdpsItemArrayOutputWithContext(context.Background())
}

func (i GetSamlIdpsItemArray) ToGetSamlIdpsItemArrayOutputWithContext(ctx context.Context) GetSamlIdpsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlIdpsItemArrayOutput)
}

type GetSamlIdpsItemOutput struct{ *pulumi.OutputState }

func (GetSamlIdpsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlIdpsItem)(nil)).Elem()
}

func (o GetSamlIdpsItemOutput) ToGetSamlIdpsItemOutput() GetSamlIdpsItemOutput {
	return o
}

func (o GetSamlIdpsItemOutput) ToGetSamlIdpsItemOutputWithContext(ctx context.Context) GetSamlIdpsItemOutput {
	return o
}

// URL that is consuming SAML Identity Provider (IdP)
func (o GetSamlIdpsItemOutput) ConsumerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlIdpsItem) string { return v.ConsumerUrl }).(pulumi.StringOutput)
}

// ID associated with the SAML Identity Provider (IdP)
func (o GetSamlIdpsItemOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlIdpsItem) string { return v.IdpId }).(pulumi.StringOutput)
}

// Dashboard will redirect users to this URL when they sign out.
func (o GetSamlIdpsItemOutput) SloLogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlIdpsItem) string { return v.SloLogoutUrl }).(pulumi.StringOutput)
}

// Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
func (o GetSamlIdpsItemOutput) X509certSha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlIdpsItem) string { return v.X509certSha1Fingerprint }).(pulumi.StringOutput)
}

type GetSamlIdpsItemArrayOutput struct{ *pulumi.OutputState }

func (GetSamlIdpsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlIdpsItem)(nil)).Elem()
}

func (o GetSamlIdpsItemArrayOutput) ToGetSamlIdpsItemArrayOutput() GetSamlIdpsItemArrayOutput {
	return o
}

func (o GetSamlIdpsItemArrayOutput) ToGetSamlIdpsItemArrayOutputWithContext(ctx context.Context) GetSamlIdpsItemArrayOutput {
	return o
}

func (o GetSamlIdpsItemArrayOutput) Index(i pulumi.IntInput) GetSamlIdpsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlIdpsItem {
		return vs[0].([]GetSamlIdpsItem)[vs[1].(int)]
	}).(GetSamlIdpsItemOutput)
}

type GetSamlItem struct {
	// Toggle depicting if SAML SSO settings are enabled
	Enabled bool `pulumi:"enabled"`
}

// GetSamlItemInput is an input type that accepts GetSamlItemArgs and GetSamlItemOutput values.
// You can construct a concrete instance of `GetSamlItemInput` via:
//
//	GetSamlItemArgs{...}
type GetSamlItemInput interface {
	pulumi.Input

	ToGetSamlItemOutput() GetSamlItemOutput
	ToGetSamlItemOutputWithContext(context.Context) GetSamlItemOutput
}

type GetSamlItemArgs struct {
	// Toggle depicting if SAML SSO settings are enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetSamlItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlItem)(nil)).Elem()
}

func (i GetSamlItemArgs) ToGetSamlItemOutput() GetSamlItemOutput {
	return i.ToGetSamlItemOutputWithContext(context.Background())
}

func (i GetSamlItemArgs) ToGetSamlItemOutputWithContext(ctx context.Context) GetSamlItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlItemOutput)
}

type GetSamlItemOutput struct{ *pulumi.OutputState }

func (GetSamlItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlItem)(nil)).Elem()
}

func (o GetSamlItemOutput) ToGetSamlItemOutput() GetSamlItemOutput {
	return o
}

func (o GetSamlItemOutput) ToGetSamlItemOutputWithContext(ctx context.Context) GetSamlItemOutput {
	return o
}

// Toggle depicting if SAML SSO settings are enabled
func (o GetSamlItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSamlItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetSamlRolesItem struct {
	// The list of camera access privileges for SAML administrator
	Cameras []GetSamlRolesItemCamera `pulumi:"cameras"`
	// ID associated with the SAML role
	Id string `pulumi:"id"`
	// The list of networks that the SAML administrator has privileges on
	Networks []GetSamlRolesItemNetwork `pulumi:"networks"`
	// The privilege of the SAML administrator on the organization
	OrgAccess string `pulumi:"orgAccess"`
	// The role of the SAML administrator
	Role string `pulumi:"role"`
	// The list of tags that the SAML administrator has privleges on
	Tags []GetSamlRolesItemTag `pulumi:"tags"`
}

// GetSamlRolesItemInput is an input type that accepts GetSamlRolesItemArgs and GetSamlRolesItemOutput values.
// You can construct a concrete instance of `GetSamlRolesItemInput` via:
//
//	GetSamlRolesItemArgs{...}
type GetSamlRolesItemInput interface {
	pulumi.Input

	ToGetSamlRolesItemOutput() GetSamlRolesItemOutput
	ToGetSamlRolesItemOutputWithContext(context.Context) GetSamlRolesItemOutput
}

type GetSamlRolesItemArgs struct {
	// The list of camera access privileges for SAML administrator
	Cameras GetSamlRolesItemCameraArrayInput `pulumi:"cameras"`
	// ID associated with the SAML role
	Id pulumi.StringInput `pulumi:"id"`
	// The list of networks that the SAML administrator has privileges on
	Networks GetSamlRolesItemNetworkArrayInput `pulumi:"networks"`
	// The privilege of the SAML administrator on the organization
	OrgAccess pulumi.StringInput `pulumi:"orgAccess"`
	// The role of the SAML administrator
	Role pulumi.StringInput `pulumi:"role"`
	// The list of tags that the SAML administrator has privleges on
	Tags GetSamlRolesItemTagArrayInput `pulumi:"tags"`
}

func (GetSamlRolesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItem)(nil)).Elem()
}

func (i GetSamlRolesItemArgs) ToGetSamlRolesItemOutput() GetSamlRolesItemOutput {
	return i.ToGetSamlRolesItemOutputWithContext(context.Background())
}

func (i GetSamlRolesItemArgs) ToGetSamlRolesItemOutputWithContext(ctx context.Context) GetSamlRolesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemOutput)
}

// GetSamlRolesItemArrayInput is an input type that accepts GetSamlRolesItemArray and GetSamlRolesItemArrayOutput values.
// You can construct a concrete instance of `GetSamlRolesItemArrayInput` via:
//
//	GetSamlRolesItemArray{ GetSamlRolesItemArgs{...} }
type GetSamlRolesItemArrayInput interface {
	pulumi.Input

	ToGetSamlRolesItemArrayOutput() GetSamlRolesItemArrayOutput
	ToGetSamlRolesItemArrayOutputWithContext(context.Context) GetSamlRolesItemArrayOutput
}

type GetSamlRolesItemArray []GetSamlRolesItemInput

func (GetSamlRolesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItem)(nil)).Elem()
}

func (i GetSamlRolesItemArray) ToGetSamlRolesItemArrayOutput() GetSamlRolesItemArrayOutput {
	return i.ToGetSamlRolesItemArrayOutputWithContext(context.Background())
}

func (i GetSamlRolesItemArray) ToGetSamlRolesItemArrayOutputWithContext(ctx context.Context) GetSamlRolesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemArrayOutput)
}

type GetSamlRolesItemOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItem)(nil)).Elem()
}

func (o GetSamlRolesItemOutput) ToGetSamlRolesItemOutput() GetSamlRolesItemOutput {
	return o
}

func (o GetSamlRolesItemOutput) ToGetSamlRolesItemOutputWithContext(ctx context.Context) GetSamlRolesItemOutput {
	return o
}

// The list of camera access privileges for SAML administrator
func (o GetSamlRolesItemOutput) Cameras() GetSamlRolesItemCameraArrayOutput {
	return o.ApplyT(func(v GetSamlRolesItem) []GetSamlRolesItemCamera { return v.Cameras }).(GetSamlRolesItemCameraArrayOutput)
}

// ID associated with the SAML role
func (o GetSamlRolesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The list of networks that the SAML administrator has privileges on
func (o GetSamlRolesItemOutput) Networks() GetSamlRolesItemNetworkArrayOutput {
	return o.ApplyT(func(v GetSamlRolesItem) []GetSamlRolesItemNetwork { return v.Networks }).(GetSamlRolesItemNetworkArrayOutput)
}

// The privilege of the SAML administrator on the organization
func (o GetSamlRolesItemOutput) OrgAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItem) string { return v.OrgAccess }).(pulumi.StringOutput)
}

// The role of the SAML administrator
func (o GetSamlRolesItemOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItem) string { return v.Role }).(pulumi.StringOutput)
}

// The list of tags that the SAML administrator has privleges on
func (o GetSamlRolesItemOutput) Tags() GetSamlRolesItemTagArrayOutput {
	return o.ApplyT(func(v GetSamlRolesItem) []GetSamlRolesItemTag { return v.Tags }).(GetSamlRolesItemTagArrayOutput)
}

type GetSamlRolesItemArrayOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItem)(nil)).Elem()
}

func (o GetSamlRolesItemArrayOutput) ToGetSamlRolesItemArrayOutput() GetSamlRolesItemArrayOutput {
	return o
}

func (o GetSamlRolesItemArrayOutput) ToGetSamlRolesItemArrayOutputWithContext(ctx context.Context) GetSamlRolesItemArrayOutput {
	return o
}

func (o GetSamlRolesItemArrayOutput) Index(i pulumi.IntInput) GetSamlRolesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlRolesItem {
		return vs[0].([]GetSamlRolesItem)[vs[1].(int)]
	}).(GetSamlRolesItemOutput)
}

type GetSamlRolesItemCamera struct {
	// Camera access ability
	Access string `pulumi:"access"`
	// Whether or not SAML administrator has org-wide access
	OrgWide bool `pulumi:"orgWide"`
}

// GetSamlRolesItemCameraInput is an input type that accepts GetSamlRolesItemCameraArgs and GetSamlRolesItemCameraOutput values.
// You can construct a concrete instance of `GetSamlRolesItemCameraInput` via:
//
//	GetSamlRolesItemCameraArgs{...}
type GetSamlRolesItemCameraInput interface {
	pulumi.Input

	ToGetSamlRolesItemCameraOutput() GetSamlRolesItemCameraOutput
	ToGetSamlRolesItemCameraOutputWithContext(context.Context) GetSamlRolesItemCameraOutput
}

type GetSamlRolesItemCameraArgs struct {
	// Camera access ability
	Access pulumi.StringInput `pulumi:"access"`
	// Whether or not SAML administrator has org-wide access
	OrgWide pulumi.BoolInput `pulumi:"orgWide"`
}

func (GetSamlRolesItemCameraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemCamera)(nil)).Elem()
}

func (i GetSamlRolesItemCameraArgs) ToGetSamlRolesItemCameraOutput() GetSamlRolesItemCameraOutput {
	return i.ToGetSamlRolesItemCameraOutputWithContext(context.Background())
}

func (i GetSamlRolesItemCameraArgs) ToGetSamlRolesItemCameraOutputWithContext(ctx context.Context) GetSamlRolesItemCameraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemCameraOutput)
}

// GetSamlRolesItemCameraArrayInput is an input type that accepts GetSamlRolesItemCameraArray and GetSamlRolesItemCameraArrayOutput values.
// You can construct a concrete instance of `GetSamlRolesItemCameraArrayInput` via:
//
//	GetSamlRolesItemCameraArray{ GetSamlRolesItemCameraArgs{...} }
type GetSamlRolesItemCameraArrayInput interface {
	pulumi.Input

	ToGetSamlRolesItemCameraArrayOutput() GetSamlRolesItemCameraArrayOutput
	ToGetSamlRolesItemCameraArrayOutputWithContext(context.Context) GetSamlRolesItemCameraArrayOutput
}

type GetSamlRolesItemCameraArray []GetSamlRolesItemCameraInput

func (GetSamlRolesItemCameraArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemCamera)(nil)).Elem()
}

func (i GetSamlRolesItemCameraArray) ToGetSamlRolesItemCameraArrayOutput() GetSamlRolesItemCameraArrayOutput {
	return i.ToGetSamlRolesItemCameraArrayOutputWithContext(context.Background())
}

func (i GetSamlRolesItemCameraArray) ToGetSamlRolesItemCameraArrayOutputWithContext(ctx context.Context) GetSamlRolesItemCameraArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemCameraArrayOutput)
}

type GetSamlRolesItemCameraOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemCameraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemCamera)(nil)).Elem()
}

func (o GetSamlRolesItemCameraOutput) ToGetSamlRolesItemCameraOutput() GetSamlRolesItemCameraOutput {
	return o
}

func (o GetSamlRolesItemCameraOutput) ToGetSamlRolesItemCameraOutputWithContext(ctx context.Context) GetSamlRolesItemCameraOutput {
	return o
}

// Camera access ability
func (o GetSamlRolesItemCameraOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItemCamera) string { return v.Access }).(pulumi.StringOutput)
}

// Whether or not SAML administrator has org-wide access
func (o GetSamlRolesItemCameraOutput) OrgWide() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSamlRolesItemCamera) bool { return v.OrgWide }).(pulumi.BoolOutput)
}

type GetSamlRolesItemCameraArrayOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemCameraArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemCamera)(nil)).Elem()
}

func (o GetSamlRolesItemCameraArrayOutput) ToGetSamlRolesItemCameraArrayOutput() GetSamlRolesItemCameraArrayOutput {
	return o
}

func (o GetSamlRolesItemCameraArrayOutput) ToGetSamlRolesItemCameraArrayOutputWithContext(ctx context.Context) GetSamlRolesItemCameraArrayOutput {
	return o
}

func (o GetSamlRolesItemCameraArrayOutput) Index(i pulumi.IntInput) GetSamlRolesItemCameraOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlRolesItemCamera {
		return vs[0].([]GetSamlRolesItemCamera)[vs[1].(int)]
	}).(GetSamlRolesItemCameraOutput)
}

type GetSamlRolesItemNetwork struct {
	// The privilege of the SAML administrator on the network
	Access string `pulumi:"access"`
	// The network ID
	Id string `pulumi:"id"`
}

// GetSamlRolesItemNetworkInput is an input type that accepts GetSamlRolesItemNetworkArgs and GetSamlRolesItemNetworkOutput values.
// You can construct a concrete instance of `GetSamlRolesItemNetworkInput` via:
//
//	GetSamlRolesItemNetworkArgs{...}
type GetSamlRolesItemNetworkInput interface {
	pulumi.Input

	ToGetSamlRolesItemNetworkOutput() GetSamlRolesItemNetworkOutput
	ToGetSamlRolesItemNetworkOutputWithContext(context.Context) GetSamlRolesItemNetworkOutput
}

type GetSamlRolesItemNetworkArgs struct {
	// The privilege of the SAML administrator on the network
	Access pulumi.StringInput `pulumi:"access"`
	// The network ID
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSamlRolesItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemNetwork)(nil)).Elem()
}

func (i GetSamlRolesItemNetworkArgs) ToGetSamlRolesItemNetworkOutput() GetSamlRolesItemNetworkOutput {
	return i.ToGetSamlRolesItemNetworkOutputWithContext(context.Background())
}

func (i GetSamlRolesItemNetworkArgs) ToGetSamlRolesItemNetworkOutputWithContext(ctx context.Context) GetSamlRolesItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemNetworkOutput)
}

// GetSamlRolesItemNetworkArrayInput is an input type that accepts GetSamlRolesItemNetworkArray and GetSamlRolesItemNetworkArrayOutput values.
// You can construct a concrete instance of `GetSamlRolesItemNetworkArrayInput` via:
//
//	GetSamlRolesItemNetworkArray{ GetSamlRolesItemNetworkArgs{...} }
type GetSamlRolesItemNetworkArrayInput interface {
	pulumi.Input

	ToGetSamlRolesItemNetworkArrayOutput() GetSamlRolesItemNetworkArrayOutput
	ToGetSamlRolesItemNetworkArrayOutputWithContext(context.Context) GetSamlRolesItemNetworkArrayOutput
}

type GetSamlRolesItemNetworkArray []GetSamlRolesItemNetworkInput

func (GetSamlRolesItemNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemNetwork)(nil)).Elem()
}

func (i GetSamlRolesItemNetworkArray) ToGetSamlRolesItemNetworkArrayOutput() GetSamlRolesItemNetworkArrayOutput {
	return i.ToGetSamlRolesItemNetworkArrayOutputWithContext(context.Background())
}

func (i GetSamlRolesItemNetworkArray) ToGetSamlRolesItemNetworkArrayOutputWithContext(ctx context.Context) GetSamlRolesItemNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemNetworkArrayOutput)
}

type GetSamlRolesItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemNetwork)(nil)).Elem()
}

func (o GetSamlRolesItemNetworkOutput) ToGetSamlRolesItemNetworkOutput() GetSamlRolesItemNetworkOutput {
	return o
}

func (o GetSamlRolesItemNetworkOutput) ToGetSamlRolesItemNetworkOutputWithContext(ctx context.Context) GetSamlRolesItemNetworkOutput {
	return o
}

// The privilege of the SAML administrator on the network
func (o GetSamlRolesItemNetworkOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItemNetwork) string { return v.Access }).(pulumi.StringOutput)
}

// The network ID
func (o GetSamlRolesItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetSamlRolesItemNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemNetwork)(nil)).Elem()
}

func (o GetSamlRolesItemNetworkArrayOutput) ToGetSamlRolesItemNetworkArrayOutput() GetSamlRolesItemNetworkArrayOutput {
	return o
}

func (o GetSamlRolesItemNetworkArrayOutput) ToGetSamlRolesItemNetworkArrayOutputWithContext(ctx context.Context) GetSamlRolesItemNetworkArrayOutput {
	return o
}

func (o GetSamlRolesItemNetworkArrayOutput) Index(i pulumi.IntInput) GetSamlRolesItemNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlRolesItemNetwork {
		return vs[0].([]GetSamlRolesItemNetwork)[vs[1].(int)]
	}).(GetSamlRolesItemNetworkOutput)
}

type GetSamlRolesItemTag struct {
	// The privilege of the SAML administrator on the tag
	Access string `pulumi:"access"`
	// The name of the tag
	Tag string `pulumi:"tag"`
}

// GetSamlRolesItemTagInput is an input type that accepts GetSamlRolesItemTagArgs and GetSamlRolesItemTagOutput values.
// You can construct a concrete instance of `GetSamlRolesItemTagInput` via:
//
//	GetSamlRolesItemTagArgs{...}
type GetSamlRolesItemTagInput interface {
	pulumi.Input

	ToGetSamlRolesItemTagOutput() GetSamlRolesItemTagOutput
	ToGetSamlRolesItemTagOutputWithContext(context.Context) GetSamlRolesItemTagOutput
}

type GetSamlRolesItemTagArgs struct {
	// The privilege of the SAML administrator on the tag
	Access pulumi.StringInput `pulumi:"access"`
	// The name of the tag
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetSamlRolesItemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemTag)(nil)).Elem()
}

func (i GetSamlRolesItemTagArgs) ToGetSamlRolesItemTagOutput() GetSamlRolesItemTagOutput {
	return i.ToGetSamlRolesItemTagOutputWithContext(context.Background())
}

func (i GetSamlRolesItemTagArgs) ToGetSamlRolesItemTagOutputWithContext(ctx context.Context) GetSamlRolesItemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemTagOutput)
}

// GetSamlRolesItemTagArrayInput is an input type that accepts GetSamlRolesItemTagArray and GetSamlRolesItemTagArrayOutput values.
// You can construct a concrete instance of `GetSamlRolesItemTagArrayInput` via:
//
//	GetSamlRolesItemTagArray{ GetSamlRolesItemTagArgs{...} }
type GetSamlRolesItemTagArrayInput interface {
	pulumi.Input

	ToGetSamlRolesItemTagArrayOutput() GetSamlRolesItemTagArrayOutput
	ToGetSamlRolesItemTagArrayOutputWithContext(context.Context) GetSamlRolesItemTagArrayOutput
}

type GetSamlRolesItemTagArray []GetSamlRolesItemTagInput

func (GetSamlRolesItemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemTag)(nil)).Elem()
}

func (i GetSamlRolesItemTagArray) ToGetSamlRolesItemTagArrayOutput() GetSamlRolesItemTagArrayOutput {
	return i.ToGetSamlRolesItemTagArrayOutputWithContext(context.Background())
}

func (i GetSamlRolesItemTagArray) ToGetSamlRolesItemTagArrayOutputWithContext(ctx context.Context) GetSamlRolesItemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlRolesItemTagArrayOutput)
}

type GetSamlRolesItemTagOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlRolesItemTag)(nil)).Elem()
}

func (o GetSamlRolesItemTagOutput) ToGetSamlRolesItemTagOutput() GetSamlRolesItemTagOutput {
	return o
}

func (o GetSamlRolesItemTagOutput) ToGetSamlRolesItemTagOutputWithContext(ctx context.Context) GetSamlRolesItemTagOutput {
	return o
}

// The privilege of the SAML administrator on the tag
func (o GetSamlRolesItemTagOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItemTag) string { return v.Access }).(pulumi.StringOutput)
}

// The name of the tag
func (o GetSamlRolesItemTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlRolesItemTag) string { return v.Tag }).(pulumi.StringOutput)
}

type GetSamlRolesItemTagArrayOutput struct{ *pulumi.OutputState }

func (GetSamlRolesItemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlRolesItemTag)(nil)).Elem()
}

func (o GetSamlRolesItemTagArrayOutput) ToGetSamlRolesItemTagArrayOutput() GetSamlRolesItemTagArrayOutput {
	return o
}

func (o GetSamlRolesItemTagArrayOutput) ToGetSamlRolesItemTagArrayOutputWithContext(ctx context.Context) GetSamlRolesItemTagArrayOutput {
	return o
}

func (o GetSamlRolesItemTagArrayOutput) Index(i pulumi.IntInput) GetSamlRolesItemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlRolesItemTag {
		return vs[0].([]GetSamlRolesItemTag)[vs[1].(int)]
	}).(GetSamlRolesItemTagOutput)
}

type GetSensorReadingsHistoryItem struct {
	// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
	ApparentPower GetSensorReadingsHistoryItemApparentPower `pulumi:"apparentPower"`
	// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
	Battery GetSensorReadingsHistoryItemBattery `pulumi:"battery"`
	// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
	Button GetSensorReadingsHistoryItemButton `pulumi:"button"`
	// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
	Co2 GetSensorReadingsHistoryItemCo2 `pulumi:"co2"`
	// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
	Current GetSensorReadingsHistoryItemCurrent `pulumi:"current"`
	// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
	Door GetSensorReadingsHistoryItemDoor `pulumi:"door"`
	// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
	DownstreamPower GetSensorReadingsHistoryItemDownstreamPower `pulumi:"downstreamPower"`
	// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
	Frequency GetSensorReadingsHistoryItemFrequency `pulumi:"frequency"`
	// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
	Humidity GetSensorReadingsHistoryItemHumidity `pulumi:"humidity"`
	// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
	IndoorAirQuality GetSensorReadingsHistoryItemIndoorAirQuality `pulumi:"indoorAirQuality"`
	// Type of sensor reading.
	Metric string `pulumi:"metric"`
	// Network to which the sensor belongs.
	Network GetSensorReadingsHistoryItemNetwork `pulumi:"network"`
	// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
	Noise GetSensorReadingsHistoryItemNoise `pulumi:"noise"`
	// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
	Pm25 GetSensorReadingsHistoryItemPm25 `pulumi:"pm25"`
	// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
	PowerFactor GetSensorReadingsHistoryItemPowerFactor `pulumi:"powerFactor"`
	// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
	RealPower GetSensorReadingsHistoryItemRealPower `pulumi:"realPower"`
	// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
	RemoteLockoutSwitch GetSensorReadingsHistoryItemRemoteLockoutSwitch `pulumi:"remoteLockoutSwitch"`
	// Serial number of the sensor that took the reading.
	Serial string `pulumi:"serial"`
	// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
	Temperature GetSensorReadingsHistoryItemTemperature `pulumi:"temperature"`
	// Time at which the reading occurred, in ISO8601 format.
	Ts string `pulumi:"ts"`
	// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
	Tvoc GetSensorReadingsHistoryItemTvoc `pulumi:"tvoc"`
	// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
	Voltage GetSensorReadingsHistoryItemVoltage `pulumi:"voltage"`
	// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
	Water GetSensorReadingsHistoryItemWater `pulumi:"water"`
}

// GetSensorReadingsHistoryItemInput is an input type that accepts GetSensorReadingsHistoryItemArgs and GetSensorReadingsHistoryItemOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemInput` via:
//
//	GetSensorReadingsHistoryItemArgs{...}
type GetSensorReadingsHistoryItemInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemOutput() GetSensorReadingsHistoryItemOutput
	ToGetSensorReadingsHistoryItemOutputWithContext(context.Context) GetSensorReadingsHistoryItemOutput
}

type GetSensorReadingsHistoryItemArgs struct {
	// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
	ApparentPower GetSensorReadingsHistoryItemApparentPowerInput `pulumi:"apparentPower"`
	// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
	Battery GetSensorReadingsHistoryItemBatteryInput `pulumi:"battery"`
	// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
	Button GetSensorReadingsHistoryItemButtonInput `pulumi:"button"`
	// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
	Co2 GetSensorReadingsHistoryItemCo2Input `pulumi:"co2"`
	// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
	Current GetSensorReadingsHistoryItemCurrentInput `pulumi:"current"`
	// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
	Door GetSensorReadingsHistoryItemDoorInput `pulumi:"door"`
	// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
	DownstreamPower GetSensorReadingsHistoryItemDownstreamPowerInput `pulumi:"downstreamPower"`
	// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
	Frequency GetSensorReadingsHistoryItemFrequencyInput `pulumi:"frequency"`
	// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
	Humidity GetSensorReadingsHistoryItemHumidityInput `pulumi:"humidity"`
	// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
	IndoorAirQuality GetSensorReadingsHistoryItemIndoorAirQualityInput `pulumi:"indoorAirQuality"`
	// Type of sensor reading.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Network to which the sensor belongs.
	Network GetSensorReadingsHistoryItemNetworkInput `pulumi:"network"`
	// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
	Noise GetSensorReadingsHistoryItemNoiseInput `pulumi:"noise"`
	// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
	Pm25 GetSensorReadingsHistoryItemPm25Input `pulumi:"pm25"`
	// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
	PowerFactor GetSensorReadingsHistoryItemPowerFactorInput `pulumi:"powerFactor"`
	// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
	RealPower GetSensorReadingsHistoryItemRealPowerInput `pulumi:"realPower"`
	// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
	RemoteLockoutSwitch GetSensorReadingsHistoryItemRemoteLockoutSwitchInput `pulumi:"remoteLockoutSwitch"`
	// Serial number of the sensor that took the reading.
	Serial pulumi.StringInput `pulumi:"serial"`
	// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
	Temperature GetSensorReadingsHistoryItemTemperatureInput `pulumi:"temperature"`
	// Time at which the reading occurred, in ISO8601 format.
	Ts pulumi.StringInput `pulumi:"ts"`
	// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
	Tvoc GetSensorReadingsHistoryItemTvocInput `pulumi:"tvoc"`
	// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
	Voltage GetSensorReadingsHistoryItemVoltageInput `pulumi:"voltage"`
	// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
	Water GetSensorReadingsHistoryItemWaterInput `pulumi:"water"`
}

func (GetSensorReadingsHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItem)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemArgs) ToGetSensorReadingsHistoryItemOutput() GetSensorReadingsHistoryItemOutput {
	return i.ToGetSensorReadingsHistoryItemOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemArgs) ToGetSensorReadingsHistoryItemOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemOutput)
}

// GetSensorReadingsHistoryItemArrayInput is an input type that accepts GetSensorReadingsHistoryItemArray and GetSensorReadingsHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemArrayInput` via:
//
//	GetSensorReadingsHistoryItemArray{ GetSensorReadingsHistoryItemArgs{...} }
type GetSensorReadingsHistoryItemArrayInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemArrayOutput() GetSensorReadingsHistoryItemArrayOutput
	ToGetSensorReadingsHistoryItemArrayOutputWithContext(context.Context) GetSensorReadingsHistoryItemArrayOutput
}

type GetSensorReadingsHistoryItemArray []GetSensorReadingsHistoryItemInput

func (GetSensorReadingsHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsHistoryItem)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemArray) ToGetSensorReadingsHistoryItemArrayOutput() GetSensorReadingsHistoryItemArrayOutput {
	return i.ToGetSensorReadingsHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemArray) ToGetSensorReadingsHistoryItemArrayOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemArrayOutput)
}

type GetSensorReadingsHistoryItemOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItem)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemOutput) ToGetSensorReadingsHistoryItemOutput() GetSensorReadingsHistoryItemOutput {
	return o
}

func (o GetSensorReadingsHistoryItemOutput) ToGetSensorReadingsHistoryItemOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemOutput {
	return o
}

// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
func (o GetSensorReadingsHistoryItemOutput) ApparentPower() GetSensorReadingsHistoryItemApparentPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemApparentPower { return v.ApparentPower }).(GetSensorReadingsHistoryItemApparentPowerOutput)
}

// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
func (o GetSensorReadingsHistoryItemOutput) Battery() GetSensorReadingsHistoryItemBatteryOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemBattery { return v.Battery }).(GetSensorReadingsHistoryItemBatteryOutput)
}

// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
func (o GetSensorReadingsHistoryItemOutput) Button() GetSensorReadingsHistoryItemButtonOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemButton { return v.Button }).(GetSensorReadingsHistoryItemButtonOutput)
}

// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
func (o GetSensorReadingsHistoryItemOutput) Co2() GetSensorReadingsHistoryItemCo2Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemCo2 { return v.Co2 }).(GetSensorReadingsHistoryItemCo2Output)
}

// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
func (o GetSensorReadingsHistoryItemOutput) Current() GetSensorReadingsHistoryItemCurrentOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemCurrent { return v.Current }).(GetSensorReadingsHistoryItemCurrentOutput)
}

// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
func (o GetSensorReadingsHistoryItemOutput) Door() GetSensorReadingsHistoryItemDoorOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemDoor { return v.Door }).(GetSensorReadingsHistoryItemDoorOutput)
}

// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
func (o GetSensorReadingsHistoryItemOutput) DownstreamPower() GetSensorReadingsHistoryItemDownstreamPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemDownstreamPower {
		return v.DownstreamPower
	}).(GetSensorReadingsHistoryItemDownstreamPowerOutput)
}

// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
func (o GetSensorReadingsHistoryItemOutput) Frequency() GetSensorReadingsHistoryItemFrequencyOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemFrequency { return v.Frequency }).(GetSensorReadingsHistoryItemFrequencyOutput)
}

// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
func (o GetSensorReadingsHistoryItemOutput) Humidity() GetSensorReadingsHistoryItemHumidityOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemHumidity { return v.Humidity }).(GetSensorReadingsHistoryItemHumidityOutput)
}

// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
func (o GetSensorReadingsHistoryItemOutput) IndoorAirQuality() GetSensorReadingsHistoryItemIndoorAirQualityOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemIndoorAirQuality {
		return v.IndoorAirQuality
	}).(GetSensorReadingsHistoryItemIndoorAirQualityOutput)
}

// Type of sensor reading.
func (o GetSensorReadingsHistoryItemOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) string { return v.Metric }).(pulumi.StringOutput)
}

// Network to which the sensor belongs.
func (o GetSensorReadingsHistoryItemOutput) Network() GetSensorReadingsHistoryItemNetworkOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemNetwork { return v.Network }).(GetSensorReadingsHistoryItemNetworkOutput)
}

// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
func (o GetSensorReadingsHistoryItemOutput) Noise() GetSensorReadingsHistoryItemNoiseOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemNoise { return v.Noise }).(GetSensorReadingsHistoryItemNoiseOutput)
}

// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
func (o GetSensorReadingsHistoryItemOutput) Pm25() GetSensorReadingsHistoryItemPm25Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemPm25 { return v.Pm25 }).(GetSensorReadingsHistoryItemPm25Output)
}

// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
func (o GetSensorReadingsHistoryItemOutput) PowerFactor() GetSensorReadingsHistoryItemPowerFactorOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemPowerFactor { return v.PowerFactor }).(GetSensorReadingsHistoryItemPowerFactorOutput)
}

// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
func (o GetSensorReadingsHistoryItemOutput) RealPower() GetSensorReadingsHistoryItemRealPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemRealPower { return v.RealPower }).(GetSensorReadingsHistoryItemRealPowerOutput)
}

// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
func (o GetSensorReadingsHistoryItemOutput) RemoteLockoutSwitch() GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemRemoteLockoutSwitch {
		return v.RemoteLockoutSwitch
	}).(GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput)
}

// Serial number of the sensor that took the reading.
func (o GetSensorReadingsHistoryItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
func (o GetSensorReadingsHistoryItemOutput) Temperature() GetSensorReadingsHistoryItemTemperatureOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemTemperature { return v.Temperature }).(GetSensorReadingsHistoryItemTemperatureOutput)
}

// Time at which the reading occurred, in ISO8601 format.
func (o GetSensorReadingsHistoryItemOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) string { return v.Ts }).(pulumi.StringOutput)
}

// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
func (o GetSensorReadingsHistoryItemOutput) Tvoc() GetSensorReadingsHistoryItemTvocOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemTvoc { return v.Tvoc }).(GetSensorReadingsHistoryItemTvocOutput)
}

// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
func (o GetSensorReadingsHistoryItemOutput) Voltage() GetSensorReadingsHistoryItemVoltageOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemVoltage { return v.Voltage }).(GetSensorReadingsHistoryItemVoltageOutput)
}

// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
func (o GetSensorReadingsHistoryItemOutput) Water() GetSensorReadingsHistoryItemWaterOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItem) GetSensorReadingsHistoryItemWater { return v.Water }).(GetSensorReadingsHistoryItemWaterOutput)
}

type GetSensorReadingsHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsHistoryItem)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemArrayOutput) ToGetSensorReadingsHistoryItemArrayOutput() GetSensorReadingsHistoryItemArrayOutput {
	return o
}

func (o GetSensorReadingsHistoryItemArrayOutput) ToGetSensorReadingsHistoryItemArrayOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemArrayOutput {
	return o
}

func (o GetSensorReadingsHistoryItemArrayOutput) Index(i pulumi.IntInput) GetSensorReadingsHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorReadingsHistoryItem {
		return vs[0].([]GetSensorReadingsHistoryItem)[vs[1].(int)]
	}).(GetSensorReadingsHistoryItemOutput)
}

type GetSensorReadingsHistoryItemApparentPower struct {
	// Apparent power reading in volt-amperes.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsHistoryItemApparentPowerInput is an input type that accepts GetSensorReadingsHistoryItemApparentPowerArgs and GetSensorReadingsHistoryItemApparentPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemApparentPowerInput` via:
//
//	GetSensorReadingsHistoryItemApparentPowerArgs{...}
type GetSensorReadingsHistoryItemApparentPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemApparentPowerOutput() GetSensorReadingsHistoryItemApparentPowerOutput
	ToGetSensorReadingsHistoryItemApparentPowerOutputWithContext(context.Context) GetSensorReadingsHistoryItemApparentPowerOutput
}

type GetSensorReadingsHistoryItemApparentPowerArgs struct {
	// Apparent power reading in volt-amperes.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsHistoryItemApparentPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemApparentPower)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemApparentPowerArgs) ToGetSensorReadingsHistoryItemApparentPowerOutput() GetSensorReadingsHistoryItemApparentPowerOutput {
	return i.ToGetSensorReadingsHistoryItemApparentPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemApparentPowerArgs) ToGetSensorReadingsHistoryItemApparentPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemApparentPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemApparentPowerOutput)
}

type GetSensorReadingsHistoryItemApparentPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemApparentPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemApparentPower)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemApparentPowerOutput) ToGetSensorReadingsHistoryItemApparentPowerOutput() GetSensorReadingsHistoryItemApparentPowerOutput {
	return o
}

func (o GetSensorReadingsHistoryItemApparentPowerOutput) ToGetSensorReadingsHistoryItemApparentPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemApparentPowerOutput {
	return o
}

// Apparent power reading in volt-amperes.
func (o GetSensorReadingsHistoryItemApparentPowerOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemApparentPower) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemBattery struct {
	// Remaining battery life.
	Percentage int `pulumi:"percentage"`
}

// GetSensorReadingsHistoryItemBatteryInput is an input type that accepts GetSensorReadingsHistoryItemBatteryArgs and GetSensorReadingsHistoryItemBatteryOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemBatteryInput` via:
//
//	GetSensorReadingsHistoryItemBatteryArgs{...}
type GetSensorReadingsHistoryItemBatteryInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemBatteryOutput() GetSensorReadingsHistoryItemBatteryOutput
	ToGetSensorReadingsHistoryItemBatteryOutputWithContext(context.Context) GetSensorReadingsHistoryItemBatteryOutput
}

type GetSensorReadingsHistoryItemBatteryArgs struct {
	// Remaining battery life.
	Percentage pulumi.IntInput `pulumi:"percentage"`
}

func (GetSensorReadingsHistoryItemBatteryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemBattery)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemBatteryArgs) ToGetSensorReadingsHistoryItemBatteryOutput() GetSensorReadingsHistoryItemBatteryOutput {
	return i.ToGetSensorReadingsHistoryItemBatteryOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemBatteryArgs) ToGetSensorReadingsHistoryItemBatteryOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemBatteryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemBatteryOutput)
}

type GetSensorReadingsHistoryItemBatteryOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemBatteryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemBattery)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemBatteryOutput) ToGetSensorReadingsHistoryItemBatteryOutput() GetSensorReadingsHistoryItemBatteryOutput {
	return o
}

func (o GetSensorReadingsHistoryItemBatteryOutput) ToGetSensorReadingsHistoryItemBatteryOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemBatteryOutput {
	return o
}

// Remaining battery life.
func (o GetSensorReadingsHistoryItemBatteryOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemBattery) int { return v.Percentage }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemButton struct {
	// Type of button press that occurred.
	PressType string `pulumi:"pressType"`
}

// GetSensorReadingsHistoryItemButtonInput is an input type that accepts GetSensorReadingsHistoryItemButtonArgs and GetSensorReadingsHistoryItemButtonOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemButtonInput` via:
//
//	GetSensorReadingsHistoryItemButtonArgs{...}
type GetSensorReadingsHistoryItemButtonInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemButtonOutput() GetSensorReadingsHistoryItemButtonOutput
	ToGetSensorReadingsHistoryItemButtonOutputWithContext(context.Context) GetSensorReadingsHistoryItemButtonOutput
}

type GetSensorReadingsHistoryItemButtonArgs struct {
	// Type of button press that occurred.
	PressType pulumi.StringInput `pulumi:"pressType"`
}

func (GetSensorReadingsHistoryItemButtonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemButton)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemButtonArgs) ToGetSensorReadingsHistoryItemButtonOutput() GetSensorReadingsHistoryItemButtonOutput {
	return i.ToGetSensorReadingsHistoryItemButtonOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemButtonArgs) ToGetSensorReadingsHistoryItemButtonOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemButtonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemButtonOutput)
}

type GetSensorReadingsHistoryItemButtonOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemButtonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemButton)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemButtonOutput) ToGetSensorReadingsHistoryItemButtonOutput() GetSensorReadingsHistoryItemButtonOutput {
	return o
}

func (o GetSensorReadingsHistoryItemButtonOutput) ToGetSensorReadingsHistoryItemButtonOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemButtonOutput {
	return o
}

// Type of button press that occurred.
func (o GetSensorReadingsHistoryItemButtonOutput) PressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemButton) string { return v.PressType }).(pulumi.StringOutput)
}

type GetSensorReadingsHistoryItemCo2 struct {
	// CO2 reading in parts per million.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsHistoryItemCo2Input is an input type that accepts GetSensorReadingsHistoryItemCo2Args and GetSensorReadingsHistoryItemCo2Output values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemCo2Input` via:
//
//	GetSensorReadingsHistoryItemCo2Args{...}
type GetSensorReadingsHistoryItemCo2Input interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemCo2Output() GetSensorReadingsHistoryItemCo2Output
	ToGetSensorReadingsHistoryItemCo2OutputWithContext(context.Context) GetSensorReadingsHistoryItemCo2Output
}

type GetSensorReadingsHistoryItemCo2Args struct {
	// CO2 reading in parts per million.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsHistoryItemCo2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemCo2)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemCo2Args) ToGetSensorReadingsHistoryItemCo2Output() GetSensorReadingsHistoryItemCo2Output {
	return i.ToGetSensorReadingsHistoryItemCo2OutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemCo2Args) ToGetSensorReadingsHistoryItemCo2OutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemCo2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemCo2Output)
}

type GetSensorReadingsHistoryItemCo2Output struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemCo2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemCo2)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemCo2Output) ToGetSensorReadingsHistoryItemCo2Output() GetSensorReadingsHistoryItemCo2Output {
	return o
}

func (o GetSensorReadingsHistoryItemCo2Output) ToGetSensorReadingsHistoryItemCo2OutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemCo2Output {
	return o
}

// CO2 reading in parts per million.
func (o GetSensorReadingsHistoryItemCo2Output) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemCo2) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemCurrent struct {
	// Electrical current reading in amperes.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsHistoryItemCurrentInput is an input type that accepts GetSensorReadingsHistoryItemCurrentArgs and GetSensorReadingsHistoryItemCurrentOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemCurrentInput` via:
//
//	GetSensorReadingsHistoryItemCurrentArgs{...}
type GetSensorReadingsHistoryItemCurrentInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemCurrentOutput() GetSensorReadingsHistoryItemCurrentOutput
	ToGetSensorReadingsHistoryItemCurrentOutputWithContext(context.Context) GetSensorReadingsHistoryItemCurrentOutput
}

type GetSensorReadingsHistoryItemCurrentArgs struct {
	// Electrical current reading in amperes.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsHistoryItemCurrentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemCurrent)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemCurrentArgs) ToGetSensorReadingsHistoryItemCurrentOutput() GetSensorReadingsHistoryItemCurrentOutput {
	return i.ToGetSensorReadingsHistoryItemCurrentOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemCurrentArgs) ToGetSensorReadingsHistoryItemCurrentOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemCurrentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemCurrentOutput)
}

type GetSensorReadingsHistoryItemCurrentOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemCurrentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemCurrent)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemCurrentOutput) ToGetSensorReadingsHistoryItemCurrentOutput() GetSensorReadingsHistoryItemCurrentOutput {
	return o
}

func (o GetSensorReadingsHistoryItemCurrentOutput) ToGetSensorReadingsHistoryItemCurrentOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemCurrentOutput {
	return o
}

// Electrical current reading in amperes.
func (o GetSensorReadingsHistoryItemCurrentOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemCurrent) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemDoor struct {
	// True if the door is open.
	Open bool `pulumi:"open"`
}

// GetSensorReadingsHistoryItemDoorInput is an input type that accepts GetSensorReadingsHistoryItemDoorArgs and GetSensorReadingsHistoryItemDoorOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemDoorInput` via:
//
//	GetSensorReadingsHistoryItemDoorArgs{...}
type GetSensorReadingsHistoryItemDoorInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemDoorOutput() GetSensorReadingsHistoryItemDoorOutput
	ToGetSensorReadingsHistoryItemDoorOutputWithContext(context.Context) GetSensorReadingsHistoryItemDoorOutput
}

type GetSensorReadingsHistoryItemDoorArgs struct {
	// True if the door is open.
	Open pulumi.BoolInput `pulumi:"open"`
}

func (GetSensorReadingsHistoryItemDoorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemDoor)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemDoorArgs) ToGetSensorReadingsHistoryItemDoorOutput() GetSensorReadingsHistoryItemDoorOutput {
	return i.ToGetSensorReadingsHistoryItemDoorOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemDoorArgs) ToGetSensorReadingsHistoryItemDoorOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemDoorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemDoorOutput)
}

type GetSensorReadingsHistoryItemDoorOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemDoorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemDoor)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemDoorOutput) ToGetSensorReadingsHistoryItemDoorOutput() GetSensorReadingsHistoryItemDoorOutput {
	return o
}

func (o GetSensorReadingsHistoryItemDoorOutput) ToGetSensorReadingsHistoryItemDoorOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemDoorOutput {
	return o
}

// True if the door is open.
func (o GetSensorReadingsHistoryItemDoorOutput) Open() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemDoor) bool { return v.Open }).(pulumi.BoolOutput)
}

type GetSensorReadingsHistoryItemDownstreamPower struct {
	// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
	Enabled bool `pulumi:"enabled"`
}

// GetSensorReadingsHistoryItemDownstreamPowerInput is an input type that accepts GetSensorReadingsHistoryItemDownstreamPowerArgs and GetSensorReadingsHistoryItemDownstreamPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemDownstreamPowerInput` via:
//
//	GetSensorReadingsHistoryItemDownstreamPowerArgs{...}
type GetSensorReadingsHistoryItemDownstreamPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemDownstreamPowerOutput() GetSensorReadingsHistoryItemDownstreamPowerOutput
	ToGetSensorReadingsHistoryItemDownstreamPowerOutputWithContext(context.Context) GetSensorReadingsHistoryItemDownstreamPowerOutput
}

type GetSensorReadingsHistoryItemDownstreamPowerArgs struct {
	// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetSensorReadingsHistoryItemDownstreamPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemDownstreamPower)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemDownstreamPowerArgs) ToGetSensorReadingsHistoryItemDownstreamPowerOutput() GetSensorReadingsHistoryItemDownstreamPowerOutput {
	return i.ToGetSensorReadingsHistoryItemDownstreamPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemDownstreamPowerArgs) ToGetSensorReadingsHistoryItemDownstreamPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemDownstreamPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemDownstreamPowerOutput)
}

type GetSensorReadingsHistoryItemDownstreamPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemDownstreamPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemDownstreamPower)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemDownstreamPowerOutput) ToGetSensorReadingsHistoryItemDownstreamPowerOutput() GetSensorReadingsHistoryItemDownstreamPowerOutput {
	return o
}

func (o GetSensorReadingsHistoryItemDownstreamPowerOutput) ToGetSensorReadingsHistoryItemDownstreamPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemDownstreamPowerOutput {
	return o
}

// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
func (o GetSensorReadingsHistoryItemDownstreamPowerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemDownstreamPower) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetSensorReadingsHistoryItemFrequency struct {
	// Electrical current frequency reading in hertz.
	Level float64 `pulumi:"level"`
}

// GetSensorReadingsHistoryItemFrequencyInput is an input type that accepts GetSensorReadingsHistoryItemFrequencyArgs and GetSensorReadingsHistoryItemFrequencyOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemFrequencyInput` via:
//
//	GetSensorReadingsHistoryItemFrequencyArgs{...}
type GetSensorReadingsHistoryItemFrequencyInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemFrequencyOutput() GetSensorReadingsHistoryItemFrequencyOutput
	ToGetSensorReadingsHistoryItemFrequencyOutputWithContext(context.Context) GetSensorReadingsHistoryItemFrequencyOutput
}

type GetSensorReadingsHistoryItemFrequencyArgs struct {
	// Electrical current frequency reading in hertz.
	Level pulumi.Float64Input `pulumi:"level"`
}

func (GetSensorReadingsHistoryItemFrequencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemFrequency)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemFrequencyArgs) ToGetSensorReadingsHistoryItemFrequencyOutput() GetSensorReadingsHistoryItemFrequencyOutput {
	return i.ToGetSensorReadingsHistoryItemFrequencyOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemFrequencyArgs) ToGetSensorReadingsHistoryItemFrequencyOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemFrequencyOutput)
}

type GetSensorReadingsHistoryItemFrequencyOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemFrequency)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemFrequencyOutput) ToGetSensorReadingsHistoryItemFrequencyOutput() GetSensorReadingsHistoryItemFrequencyOutput {
	return o
}

func (o GetSensorReadingsHistoryItemFrequencyOutput) ToGetSensorReadingsHistoryItemFrequencyOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemFrequencyOutput {
	return o
}

// Electrical current frequency reading in hertz.
func (o GetSensorReadingsHistoryItemFrequencyOutput) Level() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemFrequency) float64 { return v.Level }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemHumidity struct {
	// Humidity reading in %RH.
	RelativePercentage int `pulumi:"relativePercentage"`
}

// GetSensorReadingsHistoryItemHumidityInput is an input type that accepts GetSensorReadingsHistoryItemHumidityArgs and GetSensorReadingsHistoryItemHumidityOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemHumidityInput` via:
//
//	GetSensorReadingsHistoryItemHumidityArgs{...}
type GetSensorReadingsHistoryItemHumidityInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemHumidityOutput() GetSensorReadingsHistoryItemHumidityOutput
	ToGetSensorReadingsHistoryItemHumidityOutputWithContext(context.Context) GetSensorReadingsHistoryItemHumidityOutput
}

type GetSensorReadingsHistoryItemHumidityArgs struct {
	// Humidity reading in %RH.
	RelativePercentage pulumi.IntInput `pulumi:"relativePercentage"`
}

func (GetSensorReadingsHistoryItemHumidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemHumidity)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemHumidityArgs) ToGetSensorReadingsHistoryItemHumidityOutput() GetSensorReadingsHistoryItemHumidityOutput {
	return i.ToGetSensorReadingsHistoryItemHumidityOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemHumidityArgs) ToGetSensorReadingsHistoryItemHumidityOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemHumidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemHumidityOutput)
}

type GetSensorReadingsHistoryItemHumidityOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemHumidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemHumidity)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemHumidityOutput) ToGetSensorReadingsHistoryItemHumidityOutput() GetSensorReadingsHistoryItemHumidityOutput {
	return o
}

func (o GetSensorReadingsHistoryItemHumidityOutput) ToGetSensorReadingsHistoryItemHumidityOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemHumidityOutput {
	return o
}

// Humidity reading in %RH.
func (o GetSensorReadingsHistoryItemHumidityOutput) RelativePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemHumidity) int { return v.RelativePercentage }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemIndoorAirQuality struct {
	// Indoor air quality score between 0 and 100.
	Score int `pulumi:"score"`
}

// GetSensorReadingsHistoryItemIndoorAirQualityInput is an input type that accepts GetSensorReadingsHistoryItemIndoorAirQualityArgs and GetSensorReadingsHistoryItemIndoorAirQualityOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemIndoorAirQualityInput` via:
//
//	GetSensorReadingsHistoryItemIndoorAirQualityArgs{...}
type GetSensorReadingsHistoryItemIndoorAirQualityInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemIndoorAirQualityOutput() GetSensorReadingsHistoryItemIndoorAirQualityOutput
	ToGetSensorReadingsHistoryItemIndoorAirQualityOutputWithContext(context.Context) GetSensorReadingsHistoryItemIndoorAirQualityOutput
}

type GetSensorReadingsHistoryItemIndoorAirQualityArgs struct {
	// Indoor air quality score between 0 and 100.
	Score pulumi.IntInput `pulumi:"score"`
}

func (GetSensorReadingsHistoryItemIndoorAirQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemIndoorAirQuality)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemIndoorAirQualityArgs) ToGetSensorReadingsHistoryItemIndoorAirQualityOutput() GetSensorReadingsHistoryItemIndoorAirQualityOutput {
	return i.ToGetSensorReadingsHistoryItemIndoorAirQualityOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemIndoorAirQualityArgs) ToGetSensorReadingsHistoryItemIndoorAirQualityOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemIndoorAirQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemIndoorAirQualityOutput)
}

type GetSensorReadingsHistoryItemIndoorAirQualityOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemIndoorAirQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemIndoorAirQuality)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemIndoorAirQualityOutput) ToGetSensorReadingsHistoryItemIndoorAirQualityOutput() GetSensorReadingsHistoryItemIndoorAirQualityOutput {
	return o
}

func (o GetSensorReadingsHistoryItemIndoorAirQualityOutput) ToGetSensorReadingsHistoryItemIndoorAirQualityOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemIndoorAirQualityOutput {
	return o
}

// Indoor air quality score between 0 and 100.
func (o GetSensorReadingsHistoryItemIndoorAirQualityOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemIndoorAirQuality) int { return v.Score }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemNetwork struct {
	// ID of the network.
	Id string `pulumi:"id"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// GetSensorReadingsHistoryItemNetworkInput is an input type that accepts GetSensorReadingsHistoryItemNetworkArgs and GetSensorReadingsHistoryItemNetworkOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemNetworkInput` via:
//
//	GetSensorReadingsHistoryItemNetworkArgs{...}
type GetSensorReadingsHistoryItemNetworkInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemNetworkOutput() GetSensorReadingsHistoryItemNetworkOutput
	ToGetSensorReadingsHistoryItemNetworkOutputWithContext(context.Context) GetSensorReadingsHistoryItemNetworkOutput
}

type GetSensorReadingsHistoryItemNetworkArgs struct {
	// ID of the network.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSensorReadingsHistoryItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNetwork)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemNetworkArgs) ToGetSensorReadingsHistoryItemNetworkOutput() GetSensorReadingsHistoryItemNetworkOutput {
	return i.ToGetSensorReadingsHistoryItemNetworkOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemNetworkArgs) ToGetSensorReadingsHistoryItemNetworkOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemNetworkOutput)
}

type GetSensorReadingsHistoryItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNetwork)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemNetworkOutput) ToGetSensorReadingsHistoryItemNetworkOutput() GetSensorReadingsHistoryItemNetworkOutput {
	return o
}

func (o GetSensorReadingsHistoryItemNetworkOutput) ToGetSensorReadingsHistoryItemNetworkOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNetworkOutput {
	return o
}

// ID of the network.
func (o GetSensorReadingsHistoryItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network.
func (o GetSensorReadingsHistoryItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSensorReadingsHistoryItemNoise struct {
	// Ambient noise reading.
	Ambient GetSensorReadingsHistoryItemNoiseAmbient `pulumi:"ambient"`
}

// GetSensorReadingsHistoryItemNoiseInput is an input type that accepts GetSensorReadingsHistoryItemNoiseArgs and GetSensorReadingsHistoryItemNoiseOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemNoiseInput` via:
//
//	GetSensorReadingsHistoryItemNoiseArgs{...}
type GetSensorReadingsHistoryItemNoiseInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemNoiseOutput() GetSensorReadingsHistoryItemNoiseOutput
	ToGetSensorReadingsHistoryItemNoiseOutputWithContext(context.Context) GetSensorReadingsHistoryItemNoiseOutput
}

type GetSensorReadingsHistoryItemNoiseArgs struct {
	// Ambient noise reading.
	Ambient GetSensorReadingsHistoryItemNoiseAmbientInput `pulumi:"ambient"`
}

func (GetSensorReadingsHistoryItemNoiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNoise)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemNoiseArgs) ToGetSensorReadingsHistoryItemNoiseOutput() GetSensorReadingsHistoryItemNoiseOutput {
	return i.ToGetSensorReadingsHistoryItemNoiseOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemNoiseArgs) ToGetSensorReadingsHistoryItemNoiseOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNoiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemNoiseOutput)
}

type GetSensorReadingsHistoryItemNoiseOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemNoiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNoise)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemNoiseOutput) ToGetSensorReadingsHistoryItemNoiseOutput() GetSensorReadingsHistoryItemNoiseOutput {
	return o
}

func (o GetSensorReadingsHistoryItemNoiseOutput) ToGetSensorReadingsHistoryItemNoiseOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNoiseOutput {
	return o
}

// Ambient noise reading.
func (o GetSensorReadingsHistoryItemNoiseOutput) Ambient() GetSensorReadingsHistoryItemNoiseAmbientOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemNoise) GetSensorReadingsHistoryItemNoiseAmbient { return v.Ambient }).(GetSensorReadingsHistoryItemNoiseAmbientOutput)
}

type GetSensorReadingsHistoryItemNoiseAmbient struct {
	// Ambient noise reading in adjusted decibels.
	Level int `pulumi:"level"`
}

// GetSensorReadingsHistoryItemNoiseAmbientInput is an input type that accepts GetSensorReadingsHistoryItemNoiseAmbientArgs and GetSensorReadingsHistoryItemNoiseAmbientOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemNoiseAmbientInput` via:
//
//	GetSensorReadingsHistoryItemNoiseAmbientArgs{...}
type GetSensorReadingsHistoryItemNoiseAmbientInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemNoiseAmbientOutput() GetSensorReadingsHistoryItemNoiseAmbientOutput
	ToGetSensorReadingsHistoryItemNoiseAmbientOutputWithContext(context.Context) GetSensorReadingsHistoryItemNoiseAmbientOutput
}

type GetSensorReadingsHistoryItemNoiseAmbientArgs struct {
	// Ambient noise reading in adjusted decibels.
	Level pulumi.IntInput `pulumi:"level"`
}

func (GetSensorReadingsHistoryItemNoiseAmbientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNoiseAmbient)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemNoiseAmbientArgs) ToGetSensorReadingsHistoryItemNoiseAmbientOutput() GetSensorReadingsHistoryItemNoiseAmbientOutput {
	return i.ToGetSensorReadingsHistoryItemNoiseAmbientOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemNoiseAmbientArgs) ToGetSensorReadingsHistoryItemNoiseAmbientOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNoiseAmbientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemNoiseAmbientOutput)
}

type GetSensorReadingsHistoryItemNoiseAmbientOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemNoiseAmbientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemNoiseAmbient)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemNoiseAmbientOutput) ToGetSensorReadingsHistoryItemNoiseAmbientOutput() GetSensorReadingsHistoryItemNoiseAmbientOutput {
	return o
}

func (o GetSensorReadingsHistoryItemNoiseAmbientOutput) ToGetSensorReadingsHistoryItemNoiseAmbientOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemNoiseAmbientOutput {
	return o
}

// Ambient noise reading in adjusted decibels.
func (o GetSensorReadingsHistoryItemNoiseAmbientOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemNoiseAmbient) int { return v.Level }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemPm25 struct {
	// PM2.5 reading in micrograms per cubic meter.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsHistoryItemPm25Input is an input type that accepts GetSensorReadingsHistoryItemPm25Args and GetSensorReadingsHistoryItemPm25Output values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemPm25Input` via:
//
//	GetSensorReadingsHistoryItemPm25Args{...}
type GetSensorReadingsHistoryItemPm25Input interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemPm25Output() GetSensorReadingsHistoryItemPm25Output
	ToGetSensorReadingsHistoryItemPm25OutputWithContext(context.Context) GetSensorReadingsHistoryItemPm25Output
}

type GetSensorReadingsHistoryItemPm25Args struct {
	// PM2.5 reading in micrograms per cubic meter.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsHistoryItemPm25Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemPm25)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemPm25Args) ToGetSensorReadingsHistoryItemPm25Output() GetSensorReadingsHistoryItemPm25Output {
	return i.ToGetSensorReadingsHistoryItemPm25OutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemPm25Args) ToGetSensorReadingsHistoryItemPm25OutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemPm25Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemPm25Output)
}

type GetSensorReadingsHistoryItemPm25Output struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemPm25Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemPm25)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemPm25Output) ToGetSensorReadingsHistoryItemPm25Output() GetSensorReadingsHistoryItemPm25Output {
	return o
}

func (o GetSensorReadingsHistoryItemPm25Output) ToGetSensorReadingsHistoryItemPm25OutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemPm25Output {
	return o
}

// PM2.5 reading in micrograms per cubic meter.
func (o GetSensorReadingsHistoryItemPm25Output) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemPm25) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemPowerFactor struct {
	// Power factor reading as a percentage.
	Percentage int `pulumi:"percentage"`
}

// GetSensorReadingsHistoryItemPowerFactorInput is an input type that accepts GetSensorReadingsHistoryItemPowerFactorArgs and GetSensorReadingsHistoryItemPowerFactorOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemPowerFactorInput` via:
//
//	GetSensorReadingsHistoryItemPowerFactorArgs{...}
type GetSensorReadingsHistoryItemPowerFactorInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemPowerFactorOutput() GetSensorReadingsHistoryItemPowerFactorOutput
	ToGetSensorReadingsHistoryItemPowerFactorOutputWithContext(context.Context) GetSensorReadingsHistoryItemPowerFactorOutput
}

type GetSensorReadingsHistoryItemPowerFactorArgs struct {
	// Power factor reading as a percentage.
	Percentage pulumi.IntInput `pulumi:"percentage"`
}

func (GetSensorReadingsHistoryItemPowerFactorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemPowerFactor)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemPowerFactorArgs) ToGetSensorReadingsHistoryItemPowerFactorOutput() GetSensorReadingsHistoryItemPowerFactorOutput {
	return i.ToGetSensorReadingsHistoryItemPowerFactorOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemPowerFactorArgs) ToGetSensorReadingsHistoryItemPowerFactorOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemPowerFactorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemPowerFactorOutput)
}

type GetSensorReadingsHistoryItemPowerFactorOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemPowerFactorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemPowerFactor)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemPowerFactorOutput) ToGetSensorReadingsHistoryItemPowerFactorOutput() GetSensorReadingsHistoryItemPowerFactorOutput {
	return o
}

func (o GetSensorReadingsHistoryItemPowerFactorOutput) ToGetSensorReadingsHistoryItemPowerFactorOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemPowerFactorOutput {
	return o
}

// Power factor reading as a percentage.
func (o GetSensorReadingsHistoryItemPowerFactorOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemPowerFactor) int { return v.Percentage }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemRealPower struct {
	// Real power reading in watts.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsHistoryItemRealPowerInput is an input type that accepts GetSensorReadingsHistoryItemRealPowerArgs and GetSensorReadingsHistoryItemRealPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemRealPowerInput` via:
//
//	GetSensorReadingsHistoryItemRealPowerArgs{...}
type GetSensorReadingsHistoryItemRealPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemRealPowerOutput() GetSensorReadingsHistoryItemRealPowerOutput
	ToGetSensorReadingsHistoryItemRealPowerOutputWithContext(context.Context) GetSensorReadingsHistoryItemRealPowerOutput
}

type GetSensorReadingsHistoryItemRealPowerArgs struct {
	// Real power reading in watts.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsHistoryItemRealPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemRealPower)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemRealPowerArgs) ToGetSensorReadingsHistoryItemRealPowerOutput() GetSensorReadingsHistoryItemRealPowerOutput {
	return i.ToGetSensorReadingsHistoryItemRealPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemRealPowerArgs) ToGetSensorReadingsHistoryItemRealPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemRealPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemRealPowerOutput)
}

type GetSensorReadingsHistoryItemRealPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemRealPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemRealPower)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemRealPowerOutput) ToGetSensorReadingsHistoryItemRealPowerOutput() GetSensorReadingsHistoryItemRealPowerOutput {
	return o
}

func (o GetSensorReadingsHistoryItemRealPowerOutput) ToGetSensorReadingsHistoryItemRealPowerOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemRealPowerOutput {
	return o
}

// Real power reading in watts.
func (o GetSensorReadingsHistoryItemRealPowerOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemRealPower) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemRemoteLockoutSwitch struct {
	// True if power controls are disabled via the MT40's physical remote lockout switch.
	Locked bool `pulumi:"locked"`
}

// GetSensorReadingsHistoryItemRemoteLockoutSwitchInput is an input type that accepts GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs and GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemRemoteLockoutSwitchInput` via:
//
//	GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs{...}
type GetSensorReadingsHistoryItemRemoteLockoutSwitchInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutput() GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput
	ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutputWithContext(context.Context) GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput
}

type GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs struct {
	// True if power controls are disabled via the MT40's physical remote lockout switch.
	Locked pulumi.BoolInput `pulumi:"locked"`
}

func (GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemRemoteLockoutSwitch)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs) ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutput() GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput {
	return i.ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs) ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput)
}

type GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemRemoteLockoutSwitch)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput) ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutput() GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput {
	return o
}

func (o GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput) ToGetSensorReadingsHistoryItemRemoteLockoutSwitchOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput {
	return o
}

// True if power controls are disabled via the MT40's physical remote lockout switch.
func (o GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemRemoteLockoutSwitch) bool { return v.Locked }).(pulumi.BoolOutput)
}

type GetSensorReadingsHistoryItemTemperature struct {
	// Temperature reading in degrees Celsius.
	Celsius float64 `pulumi:"celsius"`
	// Temperature reading in degrees Fahrenheit.
	Fahrenheit float64 `pulumi:"fahrenheit"`
}

// GetSensorReadingsHistoryItemTemperatureInput is an input type that accepts GetSensorReadingsHistoryItemTemperatureArgs and GetSensorReadingsHistoryItemTemperatureOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemTemperatureInput` via:
//
//	GetSensorReadingsHistoryItemTemperatureArgs{...}
type GetSensorReadingsHistoryItemTemperatureInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemTemperatureOutput() GetSensorReadingsHistoryItemTemperatureOutput
	ToGetSensorReadingsHistoryItemTemperatureOutputWithContext(context.Context) GetSensorReadingsHistoryItemTemperatureOutput
}

type GetSensorReadingsHistoryItemTemperatureArgs struct {
	// Temperature reading in degrees Celsius.
	Celsius pulumi.Float64Input `pulumi:"celsius"`
	// Temperature reading in degrees Fahrenheit.
	Fahrenheit pulumi.Float64Input `pulumi:"fahrenheit"`
}

func (GetSensorReadingsHistoryItemTemperatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemTemperature)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemTemperatureArgs) ToGetSensorReadingsHistoryItemTemperatureOutput() GetSensorReadingsHistoryItemTemperatureOutput {
	return i.ToGetSensorReadingsHistoryItemTemperatureOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemTemperatureArgs) ToGetSensorReadingsHistoryItemTemperatureOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemTemperatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemTemperatureOutput)
}

type GetSensorReadingsHistoryItemTemperatureOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemTemperatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemTemperature)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemTemperatureOutput) ToGetSensorReadingsHistoryItemTemperatureOutput() GetSensorReadingsHistoryItemTemperatureOutput {
	return o
}

func (o GetSensorReadingsHistoryItemTemperatureOutput) ToGetSensorReadingsHistoryItemTemperatureOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemTemperatureOutput {
	return o
}

// Temperature reading in degrees Celsius.
func (o GetSensorReadingsHistoryItemTemperatureOutput) Celsius() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemTemperature) float64 { return v.Celsius }).(pulumi.Float64Output)
}

// Temperature reading in degrees Fahrenheit.
func (o GetSensorReadingsHistoryItemTemperatureOutput) Fahrenheit() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemTemperature) float64 { return v.Fahrenheit }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemTvoc struct {
	// TVOC reading in micrograms per cubic meter.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsHistoryItemTvocInput is an input type that accepts GetSensorReadingsHistoryItemTvocArgs and GetSensorReadingsHistoryItemTvocOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemTvocInput` via:
//
//	GetSensorReadingsHistoryItemTvocArgs{...}
type GetSensorReadingsHistoryItemTvocInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemTvocOutput() GetSensorReadingsHistoryItemTvocOutput
	ToGetSensorReadingsHistoryItemTvocOutputWithContext(context.Context) GetSensorReadingsHistoryItemTvocOutput
}

type GetSensorReadingsHistoryItemTvocArgs struct {
	// TVOC reading in micrograms per cubic meter.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsHistoryItemTvocArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemTvoc)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemTvocArgs) ToGetSensorReadingsHistoryItemTvocOutput() GetSensorReadingsHistoryItemTvocOutput {
	return i.ToGetSensorReadingsHistoryItemTvocOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemTvocArgs) ToGetSensorReadingsHistoryItemTvocOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemTvocOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemTvocOutput)
}

type GetSensorReadingsHistoryItemTvocOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemTvocOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemTvoc)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemTvocOutput) ToGetSensorReadingsHistoryItemTvocOutput() GetSensorReadingsHistoryItemTvocOutput {
	return o
}

func (o GetSensorReadingsHistoryItemTvocOutput) ToGetSensorReadingsHistoryItemTvocOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemTvocOutput {
	return o
}

// TVOC reading in micrograms per cubic meter.
func (o GetSensorReadingsHistoryItemTvocOutput) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemTvoc) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsHistoryItemVoltage struct {
	// Voltage reading in volts.
	Level float64 `pulumi:"level"`
}

// GetSensorReadingsHistoryItemVoltageInput is an input type that accepts GetSensorReadingsHistoryItemVoltageArgs and GetSensorReadingsHistoryItemVoltageOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemVoltageInput` via:
//
//	GetSensorReadingsHistoryItemVoltageArgs{...}
type GetSensorReadingsHistoryItemVoltageInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemVoltageOutput() GetSensorReadingsHistoryItemVoltageOutput
	ToGetSensorReadingsHistoryItemVoltageOutputWithContext(context.Context) GetSensorReadingsHistoryItemVoltageOutput
}

type GetSensorReadingsHistoryItemVoltageArgs struct {
	// Voltage reading in volts.
	Level pulumi.Float64Input `pulumi:"level"`
}

func (GetSensorReadingsHistoryItemVoltageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemVoltage)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemVoltageArgs) ToGetSensorReadingsHistoryItemVoltageOutput() GetSensorReadingsHistoryItemVoltageOutput {
	return i.ToGetSensorReadingsHistoryItemVoltageOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemVoltageArgs) ToGetSensorReadingsHistoryItemVoltageOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemVoltageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemVoltageOutput)
}

type GetSensorReadingsHistoryItemVoltageOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemVoltageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemVoltage)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemVoltageOutput) ToGetSensorReadingsHistoryItemVoltageOutput() GetSensorReadingsHistoryItemVoltageOutput {
	return o
}

func (o GetSensorReadingsHistoryItemVoltageOutput) ToGetSensorReadingsHistoryItemVoltageOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemVoltageOutput {
	return o
}

// Voltage reading in volts.
func (o GetSensorReadingsHistoryItemVoltageOutput) Level() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemVoltage) float64 { return v.Level }).(pulumi.Float64Output)
}

type GetSensorReadingsHistoryItemWater struct {
	// True if water is detected.
	Present bool `pulumi:"present"`
}

// GetSensorReadingsHistoryItemWaterInput is an input type that accepts GetSensorReadingsHistoryItemWaterArgs and GetSensorReadingsHistoryItemWaterOutput values.
// You can construct a concrete instance of `GetSensorReadingsHistoryItemWaterInput` via:
//
//	GetSensorReadingsHistoryItemWaterArgs{...}
type GetSensorReadingsHistoryItemWaterInput interface {
	pulumi.Input

	ToGetSensorReadingsHistoryItemWaterOutput() GetSensorReadingsHistoryItemWaterOutput
	ToGetSensorReadingsHistoryItemWaterOutputWithContext(context.Context) GetSensorReadingsHistoryItemWaterOutput
}

type GetSensorReadingsHistoryItemWaterArgs struct {
	// True if water is detected.
	Present pulumi.BoolInput `pulumi:"present"`
}

func (GetSensorReadingsHistoryItemWaterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemWater)(nil)).Elem()
}

func (i GetSensorReadingsHistoryItemWaterArgs) ToGetSensorReadingsHistoryItemWaterOutput() GetSensorReadingsHistoryItemWaterOutput {
	return i.ToGetSensorReadingsHistoryItemWaterOutputWithContext(context.Background())
}

func (i GetSensorReadingsHistoryItemWaterArgs) ToGetSensorReadingsHistoryItemWaterOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemWaterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsHistoryItemWaterOutput)
}

type GetSensorReadingsHistoryItemWaterOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsHistoryItemWaterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsHistoryItemWater)(nil)).Elem()
}

func (o GetSensorReadingsHistoryItemWaterOutput) ToGetSensorReadingsHistoryItemWaterOutput() GetSensorReadingsHistoryItemWaterOutput {
	return o
}

func (o GetSensorReadingsHistoryItemWaterOutput) ToGetSensorReadingsHistoryItemWaterOutputWithContext(ctx context.Context) GetSensorReadingsHistoryItemWaterOutput {
	return o
}

// True if water is detected.
func (o GetSensorReadingsHistoryItemWaterOutput) Present() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsHistoryItemWater) bool { return v.Present }).(pulumi.BoolOutput)
}

type GetSensorReadingsLatestItem struct {
	// Network to which the sensor belongs.
	Network GetSensorReadingsLatestItemNetwork `pulumi:"network"`
	// Array of latest readings from the sensor. Each object represents a single reading for a single metric.
	Readings []GetSensorReadingsLatestItemReading `pulumi:"readings"`
	// Serial number of the sensor that took the readings.
	Serial string `pulumi:"serial"`
}

// GetSensorReadingsLatestItemInput is an input type that accepts GetSensorReadingsLatestItemArgs and GetSensorReadingsLatestItemOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemInput` via:
//
//	GetSensorReadingsLatestItemArgs{...}
type GetSensorReadingsLatestItemInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemOutput() GetSensorReadingsLatestItemOutput
	ToGetSensorReadingsLatestItemOutputWithContext(context.Context) GetSensorReadingsLatestItemOutput
}

type GetSensorReadingsLatestItemArgs struct {
	// Network to which the sensor belongs.
	Network GetSensorReadingsLatestItemNetworkInput `pulumi:"network"`
	// Array of latest readings from the sensor. Each object represents a single reading for a single metric.
	Readings GetSensorReadingsLatestItemReadingArrayInput `pulumi:"readings"`
	// Serial number of the sensor that took the readings.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetSensorReadingsLatestItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItem)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemArgs) ToGetSensorReadingsLatestItemOutput() GetSensorReadingsLatestItemOutput {
	return i.ToGetSensorReadingsLatestItemOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemArgs) ToGetSensorReadingsLatestItemOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemOutput)
}

// GetSensorReadingsLatestItemArrayInput is an input type that accepts GetSensorReadingsLatestItemArray and GetSensorReadingsLatestItemArrayOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemArrayInput` via:
//
//	GetSensorReadingsLatestItemArray{ GetSensorReadingsLatestItemArgs{...} }
type GetSensorReadingsLatestItemArrayInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemArrayOutput() GetSensorReadingsLatestItemArrayOutput
	ToGetSensorReadingsLatestItemArrayOutputWithContext(context.Context) GetSensorReadingsLatestItemArrayOutput
}

type GetSensorReadingsLatestItemArray []GetSensorReadingsLatestItemInput

func (GetSensorReadingsLatestItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsLatestItem)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemArray) ToGetSensorReadingsLatestItemArrayOutput() GetSensorReadingsLatestItemArrayOutput {
	return i.ToGetSensorReadingsLatestItemArrayOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemArray) ToGetSensorReadingsLatestItemArrayOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemArrayOutput)
}

type GetSensorReadingsLatestItemOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItem)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemOutput) ToGetSensorReadingsLatestItemOutput() GetSensorReadingsLatestItemOutput {
	return o
}

func (o GetSensorReadingsLatestItemOutput) ToGetSensorReadingsLatestItemOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemOutput {
	return o
}

// Network to which the sensor belongs.
func (o GetSensorReadingsLatestItemOutput) Network() GetSensorReadingsLatestItemNetworkOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItem) GetSensorReadingsLatestItemNetwork { return v.Network }).(GetSensorReadingsLatestItemNetworkOutput)
}

// Array of latest readings from the sensor. Each object represents a single reading for a single metric.
func (o GetSensorReadingsLatestItemOutput) Readings() GetSensorReadingsLatestItemReadingArrayOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItem) []GetSensorReadingsLatestItemReading { return v.Readings }).(GetSensorReadingsLatestItemReadingArrayOutput)
}

// Serial number of the sensor that took the readings.
func (o GetSensorReadingsLatestItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetSensorReadingsLatestItemArrayOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsLatestItem)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemArrayOutput) ToGetSensorReadingsLatestItemArrayOutput() GetSensorReadingsLatestItemArrayOutput {
	return o
}

func (o GetSensorReadingsLatestItemArrayOutput) ToGetSensorReadingsLatestItemArrayOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemArrayOutput {
	return o
}

func (o GetSensorReadingsLatestItemArrayOutput) Index(i pulumi.IntInput) GetSensorReadingsLatestItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorReadingsLatestItem {
		return vs[0].([]GetSensorReadingsLatestItem)[vs[1].(int)]
	}).(GetSensorReadingsLatestItemOutput)
}

type GetSensorReadingsLatestItemNetwork struct {
	// ID of the network.
	Id string `pulumi:"id"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// GetSensorReadingsLatestItemNetworkInput is an input type that accepts GetSensorReadingsLatestItemNetworkArgs and GetSensorReadingsLatestItemNetworkOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemNetworkInput` via:
//
//	GetSensorReadingsLatestItemNetworkArgs{...}
type GetSensorReadingsLatestItemNetworkInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemNetworkOutput() GetSensorReadingsLatestItemNetworkOutput
	ToGetSensorReadingsLatestItemNetworkOutputWithContext(context.Context) GetSensorReadingsLatestItemNetworkOutput
}

type GetSensorReadingsLatestItemNetworkArgs struct {
	// ID of the network.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSensorReadingsLatestItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemNetwork)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemNetworkArgs) ToGetSensorReadingsLatestItemNetworkOutput() GetSensorReadingsLatestItemNetworkOutput {
	return i.ToGetSensorReadingsLatestItemNetworkOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemNetworkArgs) ToGetSensorReadingsLatestItemNetworkOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemNetworkOutput)
}

type GetSensorReadingsLatestItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemNetwork)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemNetworkOutput) ToGetSensorReadingsLatestItemNetworkOutput() GetSensorReadingsLatestItemNetworkOutput {
	return o
}

func (o GetSensorReadingsLatestItemNetworkOutput) ToGetSensorReadingsLatestItemNetworkOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemNetworkOutput {
	return o
}

// ID of the network.
func (o GetSensorReadingsLatestItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network.
func (o GetSensorReadingsLatestItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSensorReadingsLatestItemReading struct {
	// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
	ApparentPower GetSensorReadingsLatestItemReadingApparentPower `pulumi:"apparentPower"`
	// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
	Battery GetSensorReadingsLatestItemReadingBattery `pulumi:"battery"`
	// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
	Button GetSensorReadingsLatestItemReadingButton `pulumi:"button"`
	// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
	Co2 GetSensorReadingsLatestItemReadingCo2 `pulumi:"co2"`
	// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
	Current GetSensorReadingsLatestItemReadingCurrent `pulumi:"current"`
	// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
	Door GetSensorReadingsLatestItemReadingDoor `pulumi:"door"`
	// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
	DownstreamPower GetSensorReadingsLatestItemReadingDownstreamPower `pulumi:"downstreamPower"`
	// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
	Frequency GetSensorReadingsLatestItemReadingFrequency `pulumi:"frequency"`
	// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
	Humidity GetSensorReadingsLatestItemReadingHumidity `pulumi:"humidity"`
	// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
	IndoorAirQuality GetSensorReadingsLatestItemReadingIndoorAirQuality `pulumi:"indoorAirQuality"`
	// Type of sensor reading.
	Metric string `pulumi:"metric"`
	// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
	Noise GetSensorReadingsLatestItemReadingNoise `pulumi:"noise"`
	// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
	Pm25 GetSensorReadingsLatestItemReadingPm25 `pulumi:"pm25"`
	// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
	PowerFactor GetSensorReadingsLatestItemReadingPowerFactor `pulumi:"powerFactor"`
	// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
	RealPower GetSensorReadingsLatestItemReadingRealPower `pulumi:"realPower"`
	// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
	RemoteLockoutSwitch GetSensorReadingsLatestItemReadingRemoteLockoutSwitch `pulumi:"remoteLockoutSwitch"`
	// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
	Temperature GetSensorReadingsLatestItemReadingTemperature `pulumi:"temperature"`
	// Time at which the reading occurred, in ISO8601 format.
	Ts string `pulumi:"ts"`
	// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
	Tvoc GetSensorReadingsLatestItemReadingTvoc `pulumi:"tvoc"`
	// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
	Voltage GetSensorReadingsLatestItemReadingVoltage `pulumi:"voltage"`
	// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
	Water GetSensorReadingsLatestItemReadingWater `pulumi:"water"`
}

// GetSensorReadingsLatestItemReadingInput is an input type that accepts GetSensorReadingsLatestItemReadingArgs and GetSensorReadingsLatestItemReadingOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingInput` via:
//
//	GetSensorReadingsLatestItemReadingArgs{...}
type GetSensorReadingsLatestItemReadingInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingOutput() GetSensorReadingsLatestItemReadingOutput
	ToGetSensorReadingsLatestItemReadingOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingOutput
}

type GetSensorReadingsLatestItemReadingArgs struct {
	// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
	ApparentPower GetSensorReadingsLatestItemReadingApparentPowerInput `pulumi:"apparentPower"`
	// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
	Battery GetSensorReadingsLatestItemReadingBatteryInput `pulumi:"battery"`
	// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
	Button GetSensorReadingsLatestItemReadingButtonInput `pulumi:"button"`
	// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
	Co2 GetSensorReadingsLatestItemReadingCo2Input `pulumi:"co2"`
	// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
	Current GetSensorReadingsLatestItemReadingCurrentInput `pulumi:"current"`
	// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
	Door GetSensorReadingsLatestItemReadingDoorInput `pulumi:"door"`
	// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
	DownstreamPower GetSensorReadingsLatestItemReadingDownstreamPowerInput `pulumi:"downstreamPower"`
	// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
	Frequency GetSensorReadingsLatestItemReadingFrequencyInput `pulumi:"frequency"`
	// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
	Humidity GetSensorReadingsLatestItemReadingHumidityInput `pulumi:"humidity"`
	// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
	IndoorAirQuality GetSensorReadingsLatestItemReadingIndoorAirQualityInput `pulumi:"indoorAirQuality"`
	// Type of sensor reading.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
	Noise GetSensorReadingsLatestItemReadingNoiseInput `pulumi:"noise"`
	// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
	Pm25 GetSensorReadingsLatestItemReadingPm25Input `pulumi:"pm25"`
	// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
	PowerFactor GetSensorReadingsLatestItemReadingPowerFactorInput `pulumi:"powerFactor"`
	// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
	RealPower GetSensorReadingsLatestItemReadingRealPowerInput `pulumi:"realPower"`
	// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
	RemoteLockoutSwitch GetSensorReadingsLatestItemReadingRemoteLockoutSwitchInput `pulumi:"remoteLockoutSwitch"`
	// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
	Temperature GetSensorReadingsLatestItemReadingTemperatureInput `pulumi:"temperature"`
	// Time at which the reading occurred, in ISO8601 format.
	Ts pulumi.StringInput `pulumi:"ts"`
	// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
	Tvoc GetSensorReadingsLatestItemReadingTvocInput `pulumi:"tvoc"`
	// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
	Voltage GetSensorReadingsLatestItemReadingVoltageInput `pulumi:"voltage"`
	// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
	Water GetSensorReadingsLatestItemReadingWaterInput `pulumi:"water"`
}

func (GetSensorReadingsLatestItemReadingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReading)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingArgs) ToGetSensorReadingsLatestItemReadingOutput() GetSensorReadingsLatestItemReadingOutput {
	return i.ToGetSensorReadingsLatestItemReadingOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingArgs) ToGetSensorReadingsLatestItemReadingOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingOutput)
}

// GetSensorReadingsLatestItemReadingArrayInput is an input type that accepts GetSensorReadingsLatestItemReadingArray and GetSensorReadingsLatestItemReadingArrayOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingArrayInput` via:
//
//	GetSensorReadingsLatestItemReadingArray{ GetSensorReadingsLatestItemReadingArgs{...} }
type GetSensorReadingsLatestItemReadingArrayInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingArrayOutput() GetSensorReadingsLatestItemReadingArrayOutput
	ToGetSensorReadingsLatestItemReadingArrayOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingArrayOutput
}

type GetSensorReadingsLatestItemReadingArray []GetSensorReadingsLatestItemReadingInput

func (GetSensorReadingsLatestItemReadingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsLatestItemReading)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingArray) ToGetSensorReadingsLatestItemReadingArrayOutput() GetSensorReadingsLatestItemReadingArrayOutput {
	return i.ToGetSensorReadingsLatestItemReadingArrayOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingArray) ToGetSensorReadingsLatestItemReadingArrayOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingArrayOutput)
}

type GetSensorReadingsLatestItemReadingOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReading)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingOutput) ToGetSensorReadingsLatestItemReadingOutput() GetSensorReadingsLatestItemReadingOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingOutput) ToGetSensorReadingsLatestItemReadingOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingOutput {
	return o
}

// Reading for the 'apparentPower' metric. This will only be present if the 'metric' property equals 'apparentPower'.
func (o GetSensorReadingsLatestItemReadingOutput) ApparentPower() GetSensorReadingsLatestItemReadingApparentPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingApparentPower {
		return v.ApparentPower
	}).(GetSensorReadingsLatestItemReadingApparentPowerOutput)
}

// Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
func (o GetSensorReadingsLatestItemReadingOutput) Battery() GetSensorReadingsLatestItemReadingBatteryOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingBattery { return v.Battery }).(GetSensorReadingsLatestItemReadingBatteryOutput)
}

// Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
func (o GetSensorReadingsLatestItemReadingOutput) Button() GetSensorReadingsLatestItemReadingButtonOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingButton { return v.Button }).(GetSensorReadingsLatestItemReadingButtonOutput)
}

// Reading for the 'co2' metric. This will only be present if the 'metric' property equals 'co2'.
func (o GetSensorReadingsLatestItemReadingOutput) Co2() GetSensorReadingsLatestItemReadingCo2Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingCo2 { return v.Co2 }).(GetSensorReadingsLatestItemReadingCo2Output)
}

// Reading for the 'current' metric. This will only be present if the 'metric' property equals 'current'.
func (o GetSensorReadingsLatestItemReadingOutput) Current() GetSensorReadingsLatestItemReadingCurrentOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingCurrent { return v.Current }).(GetSensorReadingsLatestItemReadingCurrentOutput)
}

// Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
func (o GetSensorReadingsLatestItemReadingOutput) Door() GetSensorReadingsLatestItemReadingDoorOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingDoor { return v.Door }).(GetSensorReadingsLatestItemReadingDoorOutput)
}

// Reading for the 'downstreamPower' metric. This will only be present if the 'metric' property equals 'downstreamPower'.
func (o GetSensorReadingsLatestItemReadingOutput) DownstreamPower() GetSensorReadingsLatestItemReadingDownstreamPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingDownstreamPower {
		return v.DownstreamPower
	}).(GetSensorReadingsLatestItemReadingDownstreamPowerOutput)
}

// Reading for the 'frequency' metric. This will only be present if the 'metric' property equals 'frequency'.
func (o GetSensorReadingsLatestItemReadingOutput) Frequency() GetSensorReadingsLatestItemReadingFrequencyOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingFrequency {
		return v.Frequency
	}).(GetSensorReadingsLatestItemReadingFrequencyOutput)
}

// Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
func (o GetSensorReadingsLatestItemReadingOutput) Humidity() GetSensorReadingsLatestItemReadingHumidityOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingHumidity {
		return v.Humidity
	}).(GetSensorReadingsLatestItemReadingHumidityOutput)
}

// Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
func (o GetSensorReadingsLatestItemReadingOutput) IndoorAirQuality() GetSensorReadingsLatestItemReadingIndoorAirQualityOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingIndoorAirQuality {
		return v.IndoorAirQuality
	}).(GetSensorReadingsLatestItemReadingIndoorAirQualityOutput)
}

// Type of sensor reading.
func (o GetSensorReadingsLatestItemReadingOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) string { return v.Metric }).(pulumi.StringOutput)
}

// Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
func (o GetSensorReadingsLatestItemReadingOutput) Noise() GetSensorReadingsLatestItemReadingNoiseOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingNoise { return v.Noise }).(GetSensorReadingsLatestItemReadingNoiseOutput)
}

// Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
func (o GetSensorReadingsLatestItemReadingOutput) Pm25() GetSensorReadingsLatestItemReadingPm25Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingPm25 { return v.Pm25 }).(GetSensorReadingsLatestItemReadingPm25Output)
}

// Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
func (o GetSensorReadingsLatestItemReadingOutput) PowerFactor() GetSensorReadingsLatestItemReadingPowerFactorOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingPowerFactor {
		return v.PowerFactor
	}).(GetSensorReadingsLatestItemReadingPowerFactorOutput)
}

// Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
func (o GetSensorReadingsLatestItemReadingOutput) RealPower() GetSensorReadingsLatestItemReadingRealPowerOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingRealPower {
		return v.RealPower
	}).(GetSensorReadingsLatestItemReadingRealPowerOutput)
}

// Reading for the 'remoteLockoutSwitch' metric. This will only be present if the 'metric' property equals 'remoteLockoutSwitch'.
func (o GetSensorReadingsLatestItemReadingOutput) RemoteLockoutSwitch() GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingRemoteLockoutSwitch {
		return v.RemoteLockoutSwitch
	}).(GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput)
}

// Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
func (o GetSensorReadingsLatestItemReadingOutput) Temperature() GetSensorReadingsLatestItemReadingTemperatureOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingTemperature {
		return v.Temperature
	}).(GetSensorReadingsLatestItemReadingTemperatureOutput)
}

// Time at which the reading occurred, in ISO8601 format.
func (o GetSensorReadingsLatestItemReadingOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) string { return v.Ts }).(pulumi.StringOutput)
}

// Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
func (o GetSensorReadingsLatestItemReadingOutput) Tvoc() GetSensorReadingsLatestItemReadingTvocOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingTvoc { return v.Tvoc }).(GetSensorReadingsLatestItemReadingTvocOutput)
}

// Reading for the 'voltage' metric. This will only be present if the 'metric' property equals 'voltage'.
func (o GetSensorReadingsLatestItemReadingOutput) Voltage() GetSensorReadingsLatestItemReadingVoltageOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingVoltage { return v.Voltage }).(GetSensorReadingsLatestItemReadingVoltageOutput)
}

// Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
func (o GetSensorReadingsLatestItemReadingOutput) Water() GetSensorReadingsLatestItemReadingWaterOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReading) GetSensorReadingsLatestItemReadingWater { return v.Water }).(GetSensorReadingsLatestItemReadingWaterOutput)
}

type GetSensorReadingsLatestItemReadingArrayOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorReadingsLatestItemReading)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingArrayOutput) ToGetSensorReadingsLatestItemReadingArrayOutput() GetSensorReadingsLatestItemReadingArrayOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingArrayOutput) ToGetSensorReadingsLatestItemReadingArrayOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingArrayOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingArrayOutput) Index(i pulumi.IntInput) GetSensorReadingsLatestItemReadingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorReadingsLatestItemReading {
		return vs[0].([]GetSensorReadingsLatestItemReading)[vs[1].(int)]
	}).(GetSensorReadingsLatestItemReadingOutput)
}

type GetSensorReadingsLatestItemReadingApparentPower struct {
	// Apparent power reading in volt-amperes.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsLatestItemReadingApparentPowerInput is an input type that accepts GetSensorReadingsLatestItemReadingApparentPowerArgs and GetSensorReadingsLatestItemReadingApparentPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingApparentPowerInput` via:
//
//	GetSensorReadingsLatestItemReadingApparentPowerArgs{...}
type GetSensorReadingsLatestItemReadingApparentPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingApparentPowerOutput() GetSensorReadingsLatestItemReadingApparentPowerOutput
	ToGetSensorReadingsLatestItemReadingApparentPowerOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingApparentPowerOutput
}

type GetSensorReadingsLatestItemReadingApparentPowerArgs struct {
	// Apparent power reading in volt-amperes.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsLatestItemReadingApparentPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingApparentPower)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingApparentPowerArgs) ToGetSensorReadingsLatestItemReadingApparentPowerOutput() GetSensorReadingsLatestItemReadingApparentPowerOutput {
	return i.ToGetSensorReadingsLatestItemReadingApparentPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingApparentPowerArgs) ToGetSensorReadingsLatestItemReadingApparentPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingApparentPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingApparentPowerOutput)
}

type GetSensorReadingsLatestItemReadingApparentPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingApparentPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingApparentPower)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingApparentPowerOutput) ToGetSensorReadingsLatestItemReadingApparentPowerOutput() GetSensorReadingsLatestItemReadingApparentPowerOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingApparentPowerOutput) ToGetSensorReadingsLatestItemReadingApparentPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingApparentPowerOutput {
	return o
}

// Apparent power reading in volt-amperes.
func (o GetSensorReadingsLatestItemReadingApparentPowerOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingApparentPower) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingBattery struct {
	// Remaining battery life.
	Percentage int `pulumi:"percentage"`
}

// GetSensorReadingsLatestItemReadingBatteryInput is an input type that accepts GetSensorReadingsLatestItemReadingBatteryArgs and GetSensorReadingsLatestItemReadingBatteryOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingBatteryInput` via:
//
//	GetSensorReadingsLatestItemReadingBatteryArgs{...}
type GetSensorReadingsLatestItemReadingBatteryInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingBatteryOutput() GetSensorReadingsLatestItemReadingBatteryOutput
	ToGetSensorReadingsLatestItemReadingBatteryOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingBatteryOutput
}

type GetSensorReadingsLatestItemReadingBatteryArgs struct {
	// Remaining battery life.
	Percentage pulumi.IntInput `pulumi:"percentage"`
}

func (GetSensorReadingsLatestItemReadingBatteryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingBattery)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingBatteryArgs) ToGetSensorReadingsLatestItemReadingBatteryOutput() GetSensorReadingsLatestItemReadingBatteryOutput {
	return i.ToGetSensorReadingsLatestItemReadingBatteryOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingBatteryArgs) ToGetSensorReadingsLatestItemReadingBatteryOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingBatteryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingBatteryOutput)
}

type GetSensorReadingsLatestItemReadingBatteryOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingBatteryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingBattery)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingBatteryOutput) ToGetSensorReadingsLatestItemReadingBatteryOutput() GetSensorReadingsLatestItemReadingBatteryOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingBatteryOutput) ToGetSensorReadingsLatestItemReadingBatteryOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingBatteryOutput {
	return o
}

// Remaining battery life.
func (o GetSensorReadingsLatestItemReadingBatteryOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingBattery) int { return v.Percentage }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingButton struct {
	// Type of button press that occurred.
	PressType string `pulumi:"pressType"`
}

// GetSensorReadingsLatestItemReadingButtonInput is an input type that accepts GetSensorReadingsLatestItemReadingButtonArgs and GetSensorReadingsLatestItemReadingButtonOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingButtonInput` via:
//
//	GetSensorReadingsLatestItemReadingButtonArgs{...}
type GetSensorReadingsLatestItemReadingButtonInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingButtonOutput() GetSensorReadingsLatestItemReadingButtonOutput
	ToGetSensorReadingsLatestItemReadingButtonOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingButtonOutput
}

type GetSensorReadingsLatestItemReadingButtonArgs struct {
	// Type of button press that occurred.
	PressType pulumi.StringInput `pulumi:"pressType"`
}

func (GetSensorReadingsLatestItemReadingButtonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingButton)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingButtonArgs) ToGetSensorReadingsLatestItemReadingButtonOutput() GetSensorReadingsLatestItemReadingButtonOutput {
	return i.ToGetSensorReadingsLatestItemReadingButtonOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingButtonArgs) ToGetSensorReadingsLatestItemReadingButtonOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingButtonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingButtonOutput)
}

type GetSensorReadingsLatestItemReadingButtonOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingButtonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingButton)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingButtonOutput) ToGetSensorReadingsLatestItemReadingButtonOutput() GetSensorReadingsLatestItemReadingButtonOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingButtonOutput) ToGetSensorReadingsLatestItemReadingButtonOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingButtonOutput {
	return o
}

// Type of button press that occurred.
func (o GetSensorReadingsLatestItemReadingButtonOutput) PressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingButton) string { return v.PressType }).(pulumi.StringOutput)
}

type GetSensorReadingsLatestItemReadingCo2 struct {
	// CO2 reading in parts per million.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsLatestItemReadingCo2Input is an input type that accepts GetSensorReadingsLatestItemReadingCo2Args and GetSensorReadingsLatestItemReadingCo2Output values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingCo2Input` via:
//
//	GetSensorReadingsLatestItemReadingCo2Args{...}
type GetSensorReadingsLatestItemReadingCo2Input interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingCo2Output() GetSensorReadingsLatestItemReadingCo2Output
	ToGetSensorReadingsLatestItemReadingCo2OutputWithContext(context.Context) GetSensorReadingsLatestItemReadingCo2Output
}

type GetSensorReadingsLatestItemReadingCo2Args struct {
	// CO2 reading in parts per million.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsLatestItemReadingCo2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingCo2)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingCo2Args) ToGetSensorReadingsLatestItemReadingCo2Output() GetSensorReadingsLatestItemReadingCo2Output {
	return i.ToGetSensorReadingsLatestItemReadingCo2OutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingCo2Args) ToGetSensorReadingsLatestItemReadingCo2OutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingCo2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingCo2Output)
}

type GetSensorReadingsLatestItemReadingCo2Output struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingCo2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingCo2)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingCo2Output) ToGetSensorReadingsLatestItemReadingCo2Output() GetSensorReadingsLatestItemReadingCo2Output {
	return o
}

func (o GetSensorReadingsLatestItemReadingCo2Output) ToGetSensorReadingsLatestItemReadingCo2OutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingCo2Output {
	return o
}

// CO2 reading in parts per million.
func (o GetSensorReadingsLatestItemReadingCo2Output) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingCo2) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingCurrent struct {
	// Electrical current reading in amperes.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsLatestItemReadingCurrentInput is an input type that accepts GetSensorReadingsLatestItemReadingCurrentArgs and GetSensorReadingsLatestItemReadingCurrentOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingCurrentInput` via:
//
//	GetSensorReadingsLatestItemReadingCurrentArgs{...}
type GetSensorReadingsLatestItemReadingCurrentInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingCurrentOutput() GetSensorReadingsLatestItemReadingCurrentOutput
	ToGetSensorReadingsLatestItemReadingCurrentOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingCurrentOutput
}

type GetSensorReadingsLatestItemReadingCurrentArgs struct {
	// Electrical current reading in amperes.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsLatestItemReadingCurrentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingCurrent)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingCurrentArgs) ToGetSensorReadingsLatestItemReadingCurrentOutput() GetSensorReadingsLatestItemReadingCurrentOutput {
	return i.ToGetSensorReadingsLatestItemReadingCurrentOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingCurrentArgs) ToGetSensorReadingsLatestItemReadingCurrentOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingCurrentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingCurrentOutput)
}

type GetSensorReadingsLatestItemReadingCurrentOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingCurrentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingCurrent)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingCurrentOutput) ToGetSensorReadingsLatestItemReadingCurrentOutput() GetSensorReadingsLatestItemReadingCurrentOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingCurrentOutput) ToGetSensorReadingsLatestItemReadingCurrentOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingCurrentOutput {
	return o
}

// Electrical current reading in amperes.
func (o GetSensorReadingsLatestItemReadingCurrentOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingCurrent) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingDoor struct {
	// True if the door is open.
	Open bool `pulumi:"open"`
}

// GetSensorReadingsLatestItemReadingDoorInput is an input type that accepts GetSensorReadingsLatestItemReadingDoorArgs and GetSensorReadingsLatestItemReadingDoorOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingDoorInput` via:
//
//	GetSensorReadingsLatestItemReadingDoorArgs{...}
type GetSensorReadingsLatestItemReadingDoorInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingDoorOutput() GetSensorReadingsLatestItemReadingDoorOutput
	ToGetSensorReadingsLatestItemReadingDoorOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingDoorOutput
}

type GetSensorReadingsLatestItemReadingDoorArgs struct {
	// True if the door is open.
	Open pulumi.BoolInput `pulumi:"open"`
}

func (GetSensorReadingsLatestItemReadingDoorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingDoor)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingDoorArgs) ToGetSensorReadingsLatestItemReadingDoorOutput() GetSensorReadingsLatestItemReadingDoorOutput {
	return i.ToGetSensorReadingsLatestItemReadingDoorOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingDoorArgs) ToGetSensorReadingsLatestItemReadingDoorOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingDoorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingDoorOutput)
}

type GetSensorReadingsLatestItemReadingDoorOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingDoorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingDoor)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingDoorOutput) ToGetSensorReadingsLatestItemReadingDoorOutput() GetSensorReadingsLatestItemReadingDoorOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingDoorOutput) ToGetSensorReadingsLatestItemReadingDoorOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingDoorOutput {
	return o
}

// True if the door is open.
func (o GetSensorReadingsLatestItemReadingDoorOutput) Open() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingDoor) bool { return v.Open }).(pulumi.BoolOutput)
}

type GetSensorReadingsLatestItemReadingDownstreamPower struct {
	// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
	Enabled bool `pulumi:"enabled"`
}

// GetSensorReadingsLatestItemReadingDownstreamPowerInput is an input type that accepts GetSensorReadingsLatestItemReadingDownstreamPowerArgs and GetSensorReadingsLatestItemReadingDownstreamPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingDownstreamPowerInput` via:
//
//	GetSensorReadingsLatestItemReadingDownstreamPowerArgs{...}
type GetSensorReadingsLatestItemReadingDownstreamPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingDownstreamPowerOutput() GetSensorReadingsLatestItemReadingDownstreamPowerOutput
	ToGetSensorReadingsLatestItemReadingDownstreamPowerOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingDownstreamPowerOutput
}

type GetSensorReadingsLatestItemReadingDownstreamPowerArgs struct {
	// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetSensorReadingsLatestItemReadingDownstreamPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingDownstreamPower)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingDownstreamPowerArgs) ToGetSensorReadingsLatestItemReadingDownstreamPowerOutput() GetSensorReadingsLatestItemReadingDownstreamPowerOutput {
	return i.ToGetSensorReadingsLatestItemReadingDownstreamPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingDownstreamPowerArgs) ToGetSensorReadingsLatestItemReadingDownstreamPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingDownstreamPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingDownstreamPowerOutput)
}

type GetSensorReadingsLatestItemReadingDownstreamPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingDownstreamPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingDownstreamPower)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingDownstreamPowerOutput) ToGetSensorReadingsLatestItemReadingDownstreamPowerOutput() GetSensorReadingsLatestItemReadingDownstreamPowerOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingDownstreamPowerOutput) ToGetSensorReadingsLatestItemReadingDownstreamPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingDownstreamPowerOutput {
	return o
}

// True if power is turned on to the device that is connected downstream of the MT40 power monitor.
func (o GetSensorReadingsLatestItemReadingDownstreamPowerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingDownstreamPower) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetSensorReadingsLatestItemReadingFrequency struct {
	// Electrical current frequency reading in hertz.
	Level float64 `pulumi:"level"`
}

// GetSensorReadingsLatestItemReadingFrequencyInput is an input type that accepts GetSensorReadingsLatestItemReadingFrequencyArgs and GetSensorReadingsLatestItemReadingFrequencyOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingFrequencyInput` via:
//
//	GetSensorReadingsLatestItemReadingFrequencyArgs{...}
type GetSensorReadingsLatestItemReadingFrequencyInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingFrequencyOutput() GetSensorReadingsLatestItemReadingFrequencyOutput
	ToGetSensorReadingsLatestItemReadingFrequencyOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingFrequencyOutput
}

type GetSensorReadingsLatestItemReadingFrequencyArgs struct {
	// Electrical current frequency reading in hertz.
	Level pulumi.Float64Input `pulumi:"level"`
}

func (GetSensorReadingsLatestItemReadingFrequencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingFrequency)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingFrequencyArgs) ToGetSensorReadingsLatestItemReadingFrequencyOutput() GetSensorReadingsLatestItemReadingFrequencyOutput {
	return i.ToGetSensorReadingsLatestItemReadingFrequencyOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingFrequencyArgs) ToGetSensorReadingsLatestItemReadingFrequencyOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingFrequencyOutput)
}

type GetSensorReadingsLatestItemReadingFrequencyOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingFrequency)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingFrequencyOutput) ToGetSensorReadingsLatestItemReadingFrequencyOutput() GetSensorReadingsLatestItemReadingFrequencyOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingFrequencyOutput) ToGetSensorReadingsLatestItemReadingFrequencyOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingFrequencyOutput {
	return o
}

// Electrical current frequency reading in hertz.
func (o GetSensorReadingsLatestItemReadingFrequencyOutput) Level() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingFrequency) float64 { return v.Level }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingHumidity struct {
	// Humidity reading in %RH.
	RelativePercentage int `pulumi:"relativePercentage"`
}

// GetSensorReadingsLatestItemReadingHumidityInput is an input type that accepts GetSensorReadingsLatestItemReadingHumidityArgs and GetSensorReadingsLatestItemReadingHumidityOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingHumidityInput` via:
//
//	GetSensorReadingsLatestItemReadingHumidityArgs{...}
type GetSensorReadingsLatestItemReadingHumidityInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingHumidityOutput() GetSensorReadingsLatestItemReadingHumidityOutput
	ToGetSensorReadingsLatestItemReadingHumidityOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingHumidityOutput
}

type GetSensorReadingsLatestItemReadingHumidityArgs struct {
	// Humidity reading in %RH.
	RelativePercentage pulumi.IntInput `pulumi:"relativePercentage"`
}

func (GetSensorReadingsLatestItemReadingHumidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingHumidity)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingHumidityArgs) ToGetSensorReadingsLatestItemReadingHumidityOutput() GetSensorReadingsLatestItemReadingHumidityOutput {
	return i.ToGetSensorReadingsLatestItemReadingHumidityOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingHumidityArgs) ToGetSensorReadingsLatestItemReadingHumidityOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingHumidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingHumidityOutput)
}

type GetSensorReadingsLatestItemReadingHumidityOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingHumidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingHumidity)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingHumidityOutput) ToGetSensorReadingsLatestItemReadingHumidityOutput() GetSensorReadingsLatestItemReadingHumidityOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingHumidityOutput) ToGetSensorReadingsLatestItemReadingHumidityOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingHumidityOutput {
	return o
}

// Humidity reading in %RH.
func (o GetSensorReadingsLatestItemReadingHumidityOutput) RelativePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingHumidity) int { return v.RelativePercentage }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingIndoorAirQuality struct {
	// Indoor air quality score between 0 and 100.
	Score int `pulumi:"score"`
}

// GetSensorReadingsLatestItemReadingIndoorAirQualityInput is an input type that accepts GetSensorReadingsLatestItemReadingIndoorAirQualityArgs and GetSensorReadingsLatestItemReadingIndoorAirQualityOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingIndoorAirQualityInput` via:
//
//	GetSensorReadingsLatestItemReadingIndoorAirQualityArgs{...}
type GetSensorReadingsLatestItemReadingIndoorAirQualityInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutput() GetSensorReadingsLatestItemReadingIndoorAirQualityOutput
	ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingIndoorAirQualityOutput
}

type GetSensorReadingsLatestItemReadingIndoorAirQualityArgs struct {
	// Indoor air quality score between 0 and 100.
	Score pulumi.IntInput `pulumi:"score"`
}

func (GetSensorReadingsLatestItemReadingIndoorAirQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingIndoorAirQuality)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingIndoorAirQualityArgs) ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutput() GetSensorReadingsLatestItemReadingIndoorAirQualityOutput {
	return i.ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingIndoorAirQualityArgs) ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingIndoorAirQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingIndoorAirQualityOutput)
}

type GetSensorReadingsLatestItemReadingIndoorAirQualityOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingIndoorAirQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingIndoorAirQuality)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingIndoorAirQualityOutput) ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutput() GetSensorReadingsLatestItemReadingIndoorAirQualityOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingIndoorAirQualityOutput) ToGetSensorReadingsLatestItemReadingIndoorAirQualityOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingIndoorAirQualityOutput {
	return o
}

// Indoor air quality score between 0 and 100.
func (o GetSensorReadingsLatestItemReadingIndoorAirQualityOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingIndoorAirQuality) int { return v.Score }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingNoise struct {
	// Ambient noise reading.
	Ambient GetSensorReadingsLatestItemReadingNoiseAmbient `pulumi:"ambient"`
}

// GetSensorReadingsLatestItemReadingNoiseInput is an input type that accepts GetSensorReadingsLatestItemReadingNoiseArgs and GetSensorReadingsLatestItemReadingNoiseOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingNoiseInput` via:
//
//	GetSensorReadingsLatestItemReadingNoiseArgs{...}
type GetSensorReadingsLatestItemReadingNoiseInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingNoiseOutput() GetSensorReadingsLatestItemReadingNoiseOutput
	ToGetSensorReadingsLatestItemReadingNoiseOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingNoiseOutput
}

type GetSensorReadingsLatestItemReadingNoiseArgs struct {
	// Ambient noise reading.
	Ambient GetSensorReadingsLatestItemReadingNoiseAmbientInput `pulumi:"ambient"`
}

func (GetSensorReadingsLatestItemReadingNoiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoise)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingNoiseArgs) ToGetSensorReadingsLatestItemReadingNoiseOutput() GetSensorReadingsLatestItemReadingNoiseOutput {
	return i.ToGetSensorReadingsLatestItemReadingNoiseOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingNoiseArgs) ToGetSensorReadingsLatestItemReadingNoiseOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingNoiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingNoiseOutput)
}

type GetSensorReadingsLatestItemReadingNoiseOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingNoiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoise)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingNoiseOutput) ToGetSensorReadingsLatestItemReadingNoiseOutput() GetSensorReadingsLatestItemReadingNoiseOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingNoiseOutput) ToGetSensorReadingsLatestItemReadingNoiseOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingNoiseOutput {
	return o
}

// Ambient noise reading.
func (o GetSensorReadingsLatestItemReadingNoiseOutput) Ambient() GetSensorReadingsLatestItemReadingNoiseAmbientOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingNoise) GetSensorReadingsLatestItemReadingNoiseAmbient {
		return v.Ambient
	}).(GetSensorReadingsLatestItemReadingNoiseAmbientOutput)
}

type GetSensorReadingsLatestItemReadingNoiseAmbient struct {
	// Ambient noise reading in adjusted decibels.
	Level int `pulumi:"level"`
}

// GetSensorReadingsLatestItemReadingNoiseAmbientInput is an input type that accepts GetSensorReadingsLatestItemReadingNoiseAmbientArgs and GetSensorReadingsLatestItemReadingNoiseAmbientOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingNoiseAmbientInput` via:
//
//	GetSensorReadingsLatestItemReadingNoiseAmbientArgs{...}
type GetSensorReadingsLatestItemReadingNoiseAmbientInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingNoiseAmbientOutput() GetSensorReadingsLatestItemReadingNoiseAmbientOutput
	ToGetSensorReadingsLatestItemReadingNoiseAmbientOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingNoiseAmbientOutput
}

type GetSensorReadingsLatestItemReadingNoiseAmbientArgs struct {
	// Ambient noise reading in adjusted decibels.
	Level pulumi.IntInput `pulumi:"level"`
}

func (GetSensorReadingsLatestItemReadingNoiseAmbientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoiseAmbient)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingNoiseAmbientArgs) ToGetSensorReadingsLatestItemReadingNoiseAmbientOutput() GetSensorReadingsLatestItemReadingNoiseAmbientOutput {
	return i.ToGetSensorReadingsLatestItemReadingNoiseAmbientOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingNoiseAmbientArgs) ToGetSensorReadingsLatestItemReadingNoiseAmbientOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingNoiseAmbientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingNoiseAmbientOutput)
}

type GetSensorReadingsLatestItemReadingNoiseAmbientOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingNoiseAmbientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoiseAmbient)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingNoiseAmbientOutput) ToGetSensorReadingsLatestItemReadingNoiseAmbientOutput() GetSensorReadingsLatestItemReadingNoiseAmbientOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingNoiseAmbientOutput) ToGetSensorReadingsLatestItemReadingNoiseAmbientOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingNoiseAmbientOutput {
	return o
}

// Ambient noise reading in adjusted decibels.
func (o GetSensorReadingsLatestItemReadingNoiseAmbientOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingNoiseAmbient) int { return v.Level }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingPm25 struct {
	// PM2.5 reading in micrograms per cubic meter.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsLatestItemReadingPm25Input is an input type that accepts GetSensorReadingsLatestItemReadingPm25Args and GetSensorReadingsLatestItemReadingPm25Output values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingPm25Input` via:
//
//	GetSensorReadingsLatestItemReadingPm25Args{...}
type GetSensorReadingsLatestItemReadingPm25Input interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingPm25Output() GetSensorReadingsLatestItemReadingPm25Output
	ToGetSensorReadingsLatestItemReadingPm25OutputWithContext(context.Context) GetSensorReadingsLatestItemReadingPm25Output
}

type GetSensorReadingsLatestItemReadingPm25Args struct {
	// PM2.5 reading in micrograms per cubic meter.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsLatestItemReadingPm25Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingPm25)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingPm25Args) ToGetSensorReadingsLatestItemReadingPm25Output() GetSensorReadingsLatestItemReadingPm25Output {
	return i.ToGetSensorReadingsLatestItemReadingPm25OutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingPm25Args) ToGetSensorReadingsLatestItemReadingPm25OutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingPm25Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingPm25Output)
}

type GetSensorReadingsLatestItemReadingPm25Output struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingPm25Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingPm25)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingPm25Output) ToGetSensorReadingsLatestItemReadingPm25Output() GetSensorReadingsLatestItemReadingPm25Output {
	return o
}

func (o GetSensorReadingsLatestItemReadingPm25Output) ToGetSensorReadingsLatestItemReadingPm25OutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingPm25Output {
	return o
}

// PM2.5 reading in micrograms per cubic meter.
func (o GetSensorReadingsLatestItemReadingPm25Output) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingPm25) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingPowerFactor struct {
	// Power factor reading as a percentage.
	Percentage int `pulumi:"percentage"`
}

// GetSensorReadingsLatestItemReadingPowerFactorInput is an input type that accepts GetSensorReadingsLatestItemReadingPowerFactorArgs and GetSensorReadingsLatestItemReadingPowerFactorOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingPowerFactorInput` via:
//
//	GetSensorReadingsLatestItemReadingPowerFactorArgs{...}
type GetSensorReadingsLatestItemReadingPowerFactorInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingPowerFactorOutput() GetSensorReadingsLatestItemReadingPowerFactorOutput
	ToGetSensorReadingsLatestItemReadingPowerFactorOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingPowerFactorOutput
}

type GetSensorReadingsLatestItemReadingPowerFactorArgs struct {
	// Power factor reading as a percentage.
	Percentage pulumi.IntInput `pulumi:"percentage"`
}

func (GetSensorReadingsLatestItemReadingPowerFactorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingPowerFactor)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingPowerFactorArgs) ToGetSensorReadingsLatestItemReadingPowerFactorOutput() GetSensorReadingsLatestItemReadingPowerFactorOutput {
	return i.ToGetSensorReadingsLatestItemReadingPowerFactorOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingPowerFactorArgs) ToGetSensorReadingsLatestItemReadingPowerFactorOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingPowerFactorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingPowerFactorOutput)
}

type GetSensorReadingsLatestItemReadingPowerFactorOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingPowerFactorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingPowerFactor)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingPowerFactorOutput) ToGetSensorReadingsLatestItemReadingPowerFactorOutput() GetSensorReadingsLatestItemReadingPowerFactorOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingPowerFactorOutput) ToGetSensorReadingsLatestItemReadingPowerFactorOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingPowerFactorOutput {
	return o
}

// Power factor reading as a percentage.
func (o GetSensorReadingsLatestItemReadingPowerFactorOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingPowerFactor) int { return v.Percentage }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingRealPower struct {
	// Real power reading in watts.
	Draw float64 `pulumi:"draw"`
}

// GetSensorReadingsLatestItemReadingRealPowerInput is an input type that accepts GetSensorReadingsLatestItemReadingRealPowerArgs and GetSensorReadingsLatestItemReadingRealPowerOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingRealPowerInput` via:
//
//	GetSensorReadingsLatestItemReadingRealPowerArgs{...}
type GetSensorReadingsLatestItemReadingRealPowerInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingRealPowerOutput() GetSensorReadingsLatestItemReadingRealPowerOutput
	ToGetSensorReadingsLatestItemReadingRealPowerOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingRealPowerOutput
}

type GetSensorReadingsLatestItemReadingRealPowerArgs struct {
	// Real power reading in watts.
	Draw pulumi.Float64Input `pulumi:"draw"`
}

func (GetSensorReadingsLatestItemReadingRealPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingRealPower)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingRealPowerArgs) ToGetSensorReadingsLatestItemReadingRealPowerOutput() GetSensorReadingsLatestItemReadingRealPowerOutput {
	return i.ToGetSensorReadingsLatestItemReadingRealPowerOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingRealPowerArgs) ToGetSensorReadingsLatestItemReadingRealPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingRealPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingRealPowerOutput)
}

type GetSensorReadingsLatestItemReadingRealPowerOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingRealPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingRealPower)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingRealPowerOutput) ToGetSensorReadingsLatestItemReadingRealPowerOutput() GetSensorReadingsLatestItemReadingRealPowerOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingRealPowerOutput) ToGetSensorReadingsLatestItemReadingRealPowerOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingRealPowerOutput {
	return o
}

// Real power reading in watts.
func (o GetSensorReadingsLatestItemReadingRealPowerOutput) Draw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingRealPower) float64 { return v.Draw }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingRemoteLockoutSwitch struct {
	// True if power controls are disabled via the MT40's physical remote lockout switch.
	Locked bool `pulumi:"locked"`
}

// GetSensorReadingsLatestItemReadingRemoteLockoutSwitchInput is an input type that accepts GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs and GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingRemoteLockoutSwitchInput` via:
//
//	GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs{...}
type GetSensorReadingsLatestItemReadingRemoteLockoutSwitchInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput() GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput
	ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput
}

type GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs struct {
	// True if power controls are disabled via the MT40's physical remote lockout switch.
	Locked pulumi.BoolInput `pulumi:"locked"`
}

func (GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingRemoteLockoutSwitch)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs) ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput() GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput {
	return i.ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs) ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput)
}

type GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingRemoteLockoutSwitch)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput) ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput() GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput) ToGetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput {
	return o
}

// True if power controls are disabled via the MT40's physical remote lockout switch.
func (o GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingRemoteLockoutSwitch) bool { return v.Locked }).(pulumi.BoolOutput)
}

type GetSensorReadingsLatestItemReadingTemperature struct {
	// Temperature reading in degrees Celsius.
	Celsius float64 `pulumi:"celsius"`
	// Temperature reading in degrees Fahrenheit.
	Fahrenheit float64 `pulumi:"fahrenheit"`
}

// GetSensorReadingsLatestItemReadingTemperatureInput is an input type that accepts GetSensorReadingsLatestItemReadingTemperatureArgs and GetSensorReadingsLatestItemReadingTemperatureOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingTemperatureInput` via:
//
//	GetSensorReadingsLatestItemReadingTemperatureArgs{...}
type GetSensorReadingsLatestItemReadingTemperatureInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingTemperatureOutput() GetSensorReadingsLatestItemReadingTemperatureOutput
	ToGetSensorReadingsLatestItemReadingTemperatureOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingTemperatureOutput
}

type GetSensorReadingsLatestItemReadingTemperatureArgs struct {
	// Temperature reading in degrees Celsius.
	Celsius pulumi.Float64Input `pulumi:"celsius"`
	// Temperature reading in degrees Fahrenheit.
	Fahrenheit pulumi.Float64Input `pulumi:"fahrenheit"`
}

func (GetSensorReadingsLatestItemReadingTemperatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingTemperature)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingTemperatureArgs) ToGetSensorReadingsLatestItemReadingTemperatureOutput() GetSensorReadingsLatestItemReadingTemperatureOutput {
	return i.ToGetSensorReadingsLatestItemReadingTemperatureOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingTemperatureArgs) ToGetSensorReadingsLatestItemReadingTemperatureOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingTemperatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingTemperatureOutput)
}

type GetSensorReadingsLatestItemReadingTemperatureOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingTemperatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingTemperature)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingTemperatureOutput) ToGetSensorReadingsLatestItemReadingTemperatureOutput() GetSensorReadingsLatestItemReadingTemperatureOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingTemperatureOutput) ToGetSensorReadingsLatestItemReadingTemperatureOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingTemperatureOutput {
	return o
}

// Temperature reading in degrees Celsius.
func (o GetSensorReadingsLatestItemReadingTemperatureOutput) Celsius() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingTemperature) float64 { return v.Celsius }).(pulumi.Float64Output)
}

// Temperature reading in degrees Fahrenheit.
func (o GetSensorReadingsLatestItemReadingTemperatureOutput) Fahrenheit() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingTemperature) float64 { return v.Fahrenheit }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingTvoc struct {
	// TVOC reading in micrograms per cubic meter.
	Concentration int `pulumi:"concentration"`
}

// GetSensorReadingsLatestItemReadingTvocInput is an input type that accepts GetSensorReadingsLatestItemReadingTvocArgs and GetSensorReadingsLatestItemReadingTvocOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingTvocInput` via:
//
//	GetSensorReadingsLatestItemReadingTvocArgs{...}
type GetSensorReadingsLatestItemReadingTvocInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingTvocOutput() GetSensorReadingsLatestItemReadingTvocOutput
	ToGetSensorReadingsLatestItemReadingTvocOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingTvocOutput
}

type GetSensorReadingsLatestItemReadingTvocArgs struct {
	// TVOC reading in micrograms per cubic meter.
	Concentration pulumi.IntInput `pulumi:"concentration"`
}

func (GetSensorReadingsLatestItemReadingTvocArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingTvoc)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingTvocArgs) ToGetSensorReadingsLatestItemReadingTvocOutput() GetSensorReadingsLatestItemReadingTvocOutput {
	return i.ToGetSensorReadingsLatestItemReadingTvocOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingTvocArgs) ToGetSensorReadingsLatestItemReadingTvocOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingTvocOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingTvocOutput)
}

type GetSensorReadingsLatestItemReadingTvocOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingTvocOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingTvoc)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingTvocOutput) ToGetSensorReadingsLatestItemReadingTvocOutput() GetSensorReadingsLatestItemReadingTvocOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingTvocOutput) ToGetSensorReadingsLatestItemReadingTvocOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingTvocOutput {
	return o
}

// TVOC reading in micrograms per cubic meter.
func (o GetSensorReadingsLatestItemReadingTvocOutput) Concentration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingTvoc) int { return v.Concentration }).(pulumi.IntOutput)
}

type GetSensorReadingsLatestItemReadingVoltage struct {
	// Voltage reading in volts.
	Level float64 `pulumi:"level"`
}

// GetSensorReadingsLatestItemReadingVoltageInput is an input type that accepts GetSensorReadingsLatestItemReadingVoltageArgs and GetSensorReadingsLatestItemReadingVoltageOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingVoltageInput` via:
//
//	GetSensorReadingsLatestItemReadingVoltageArgs{...}
type GetSensorReadingsLatestItemReadingVoltageInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingVoltageOutput() GetSensorReadingsLatestItemReadingVoltageOutput
	ToGetSensorReadingsLatestItemReadingVoltageOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingVoltageOutput
}

type GetSensorReadingsLatestItemReadingVoltageArgs struct {
	// Voltage reading in volts.
	Level pulumi.Float64Input `pulumi:"level"`
}

func (GetSensorReadingsLatestItemReadingVoltageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingVoltage)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingVoltageArgs) ToGetSensorReadingsLatestItemReadingVoltageOutput() GetSensorReadingsLatestItemReadingVoltageOutput {
	return i.ToGetSensorReadingsLatestItemReadingVoltageOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingVoltageArgs) ToGetSensorReadingsLatestItemReadingVoltageOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingVoltageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingVoltageOutput)
}

type GetSensorReadingsLatestItemReadingVoltageOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingVoltageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingVoltage)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingVoltageOutput) ToGetSensorReadingsLatestItemReadingVoltageOutput() GetSensorReadingsLatestItemReadingVoltageOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingVoltageOutput) ToGetSensorReadingsLatestItemReadingVoltageOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingVoltageOutput {
	return o
}

// Voltage reading in volts.
func (o GetSensorReadingsLatestItemReadingVoltageOutput) Level() pulumi.Float64Output {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingVoltage) float64 { return v.Level }).(pulumi.Float64Output)
}

type GetSensorReadingsLatestItemReadingWater struct {
	// True if water is detected.
	Present bool `pulumi:"present"`
}

// GetSensorReadingsLatestItemReadingWaterInput is an input type that accepts GetSensorReadingsLatestItemReadingWaterArgs and GetSensorReadingsLatestItemReadingWaterOutput values.
// You can construct a concrete instance of `GetSensorReadingsLatestItemReadingWaterInput` via:
//
//	GetSensorReadingsLatestItemReadingWaterArgs{...}
type GetSensorReadingsLatestItemReadingWaterInput interface {
	pulumi.Input

	ToGetSensorReadingsLatestItemReadingWaterOutput() GetSensorReadingsLatestItemReadingWaterOutput
	ToGetSensorReadingsLatestItemReadingWaterOutputWithContext(context.Context) GetSensorReadingsLatestItemReadingWaterOutput
}

type GetSensorReadingsLatestItemReadingWaterArgs struct {
	// True if water is detected.
	Present pulumi.BoolInput `pulumi:"present"`
}

func (GetSensorReadingsLatestItemReadingWaterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingWater)(nil)).Elem()
}

func (i GetSensorReadingsLatestItemReadingWaterArgs) ToGetSensorReadingsLatestItemReadingWaterOutput() GetSensorReadingsLatestItemReadingWaterOutput {
	return i.ToGetSensorReadingsLatestItemReadingWaterOutputWithContext(context.Background())
}

func (i GetSensorReadingsLatestItemReadingWaterArgs) ToGetSensorReadingsLatestItemReadingWaterOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingWaterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorReadingsLatestItemReadingWaterOutput)
}

type GetSensorReadingsLatestItemReadingWaterOutput struct{ *pulumi.OutputState }

func (GetSensorReadingsLatestItemReadingWaterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorReadingsLatestItemReadingWater)(nil)).Elem()
}

func (o GetSensorReadingsLatestItemReadingWaterOutput) ToGetSensorReadingsLatestItemReadingWaterOutput() GetSensorReadingsLatestItemReadingWaterOutput {
	return o
}

func (o GetSensorReadingsLatestItemReadingWaterOutput) ToGetSensorReadingsLatestItemReadingWaterOutputWithContext(ctx context.Context) GetSensorReadingsLatestItemReadingWaterOutput {
	return o
}

// True if water is detected.
func (o GetSensorReadingsLatestItemReadingWaterOutput) Present() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSensorReadingsLatestItemReadingWater) bool { return v.Present }).(pulumi.BoolOutput)
}

type GetSmAdminsRolesItem struct {
	// The name of the limited access role
	Name string `pulumi:"name"`
	// The Id of the limited access role
	RoleId string `pulumi:"roleId"`
	// The scope of the limited access role
	Scope string `pulumi:"scope"`
	// The tags of the limited access role
	Tags []string `pulumi:"tags"`
}

// GetSmAdminsRolesItemInput is an input type that accepts GetSmAdminsRolesItemArgs and GetSmAdminsRolesItemOutput values.
// You can construct a concrete instance of `GetSmAdminsRolesItemInput` via:
//
//	GetSmAdminsRolesItemArgs{...}
type GetSmAdminsRolesItemInput interface {
	pulumi.Input

	ToGetSmAdminsRolesItemOutput() GetSmAdminsRolesItemOutput
	ToGetSmAdminsRolesItemOutputWithContext(context.Context) GetSmAdminsRolesItemOutput
}

type GetSmAdminsRolesItemArgs struct {
	// The name of the limited access role
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of the limited access role
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// The scope of the limited access role
	Scope pulumi.StringInput `pulumi:"scope"`
	// The tags of the limited access role
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSmAdminsRolesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmAdminsRolesItem)(nil)).Elem()
}

func (i GetSmAdminsRolesItemArgs) ToGetSmAdminsRolesItemOutput() GetSmAdminsRolesItemOutput {
	return i.ToGetSmAdminsRolesItemOutputWithContext(context.Background())
}

func (i GetSmAdminsRolesItemArgs) ToGetSmAdminsRolesItemOutputWithContext(ctx context.Context) GetSmAdminsRolesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmAdminsRolesItemOutput)
}

type GetSmAdminsRolesItemOutput struct{ *pulumi.OutputState }

func (GetSmAdminsRolesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmAdminsRolesItem)(nil)).Elem()
}

func (o GetSmAdminsRolesItemOutput) ToGetSmAdminsRolesItemOutput() GetSmAdminsRolesItemOutput {
	return o
}

func (o GetSmAdminsRolesItemOutput) ToGetSmAdminsRolesItemOutputWithContext(ctx context.Context) GetSmAdminsRolesItemOutput {
	return o
}

// The name of the limited access role
func (o GetSmAdminsRolesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmAdminsRolesItem) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of the limited access role
func (o GetSmAdminsRolesItemOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmAdminsRolesItem) string { return v.RoleId }).(pulumi.StringOutput)
}

// The scope of the limited access role
func (o GetSmAdminsRolesItemOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmAdminsRolesItem) string { return v.Scope }).(pulumi.StringOutput)
}

// The tags of the limited access role
func (o GetSmAdminsRolesItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSmAdminsRolesItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSmApnsCertItem struct {
	// Organization APNS Certificate used by devices to communication with Apple
	Certificate string `pulumi:"certificate"`
}

// GetSmApnsCertItemInput is an input type that accepts GetSmApnsCertItemArgs and GetSmApnsCertItemOutput values.
// You can construct a concrete instance of `GetSmApnsCertItemInput` via:
//
//	GetSmApnsCertItemArgs{...}
type GetSmApnsCertItemInput interface {
	pulumi.Input

	ToGetSmApnsCertItemOutput() GetSmApnsCertItemOutput
	ToGetSmApnsCertItemOutputWithContext(context.Context) GetSmApnsCertItemOutput
}

type GetSmApnsCertItemArgs struct {
	// Organization APNS Certificate used by devices to communication with Apple
	Certificate pulumi.StringInput `pulumi:"certificate"`
}

func (GetSmApnsCertItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmApnsCertItem)(nil)).Elem()
}

func (i GetSmApnsCertItemArgs) ToGetSmApnsCertItemOutput() GetSmApnsCertItemOutput {
	return i.ToGetSmApnsCertItemOutputWithContext(context.Background())
}

func (i GetSmApnsCertItemArgs) ToGetSmApnsCertItemOutputWithContext(ctx context.Context) GetSmApnsCertItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmApnsCertItemOutput)
}

type GetSmApnsCertItemOutput struct{ *pulumi.OutputState }

func (GetSmApnsCertItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmApnsCertItem)(nil)).Elem()
}

func (o GetSmApnsCertItemOutput) ToGetSmApnsCertItemOutput() GetSmApnsCertItemOutput {
	return o
}

func (o GetSmApnsCertItemOutput) ToGetSmApnsCertItemOutputWithContext(ctx context.Context) GetSmApnsCertItemOutput {
	return o
}

// Organization APNS Certificate used by devices to communication with Apple
func (o GetSmApnsCertItemOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmApnsCertItem) string { return v.Certificate }).(pulumi.StringOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItem struct {
	// Sentry Group Policies for the Organization keyed by the Network or Locale Id the Policy belongs to
	Items []GetSmSentryPoliciesAssignmentsByNetworkItemItem `pulumi:"items"`
	// Metadata relevant to the paginated dataset
	Meta GetSmSentryPoliciesAssignmentsByNetworkItemMeta `pulumi:"meta"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemArgs and GetSmSentryPoliciesAssignmentsByNetworkItemOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemArgs struct {
	// Sentry Group Policies for the Organization keyed by the Network or Locale Id the Policy belongs to
	Items GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayInput `pulumi:"items"`
	// Metadata relevant to the paginated dataset
	Meta GetSmSentryPoliciesAssignmentsByNetworkItemMetaInput `pulumi:"meta"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItem)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemOutput)
}

// GetSmSentryPoliciesAssignmentsByNetworkItemArrayInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemArray and GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemArrayInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemArray{ GetSmSentryPoliciesAssignmentsByNetworkItemArgs{...} }
type GetSmSentryPoliciesAssignmentsByNetworkItemArrayInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemArray []GetSmSentryPoliciesAssignmentsByNetworkItemInput

func (GetSmSentryPoliciesAssignmentsByNetworkItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItem)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItem)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemOutput {
	return o
}

// Sentry Group Policies for the Organization keyed by the Network or Locale Id the Policy belongs to
func (o GetSmSentryPoliciesAssignmentsByNetworkItemOutput) Items() GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItem) []GetSmSentryPoliciesAssignmentsByNetworkItemItem {
		return v.Items
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput)
}

// Metadata relevant to the paginated dataset
func (o GetSmSentryPoliciesAssignmentsByNetworkItemOutput) Meta() GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItem) GetSmSentryPoliciesAssignmentsByNetworkItemMeta {
		return v.Meta
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItem)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput) Index(i pulumi.IntInput) GetSmSentryPoliciesAssignmentsByNetworkItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSmSentryPoliciesAssignmentsByNetworkItem {
		return vs[0].([]GetSmSentryPoliciesAssignmentsByNetworkItem)[vs[1].(int)]
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItem struct {
	// The Id of the Network
	NetworkId string `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies []GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy `pulumi:"policies"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemItemInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs and GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemItemInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemItemInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs struct {
	// The Id of the Network
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Array of Sentry Group Policies for the Network
	Policies GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayInput `pulumi:"policies"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItem)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput)
}

// GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemItemArray and GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemItemArray{ GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs{...} }
type GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemArray []GetSmSentryPoliciesAssignmentsByNetworkItemItemInput

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItemItem)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItem)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput {
	return o
}

// The Id of the Network
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Array of Sentry Group Policies for the Network
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput) Policies() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItem) []GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy {
		return v.Policies
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItemItem)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput) Index(i pulumi.IntInput) GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSmSentryPoliciesAssignmentsByNetworkItemItem {
		return vs[0].([]GetSmSentryPoliciesAssignmentsByNetworkItemItem)[vs[1].(int)]
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy struct {
	// The creation time of the Sentry Policy
	CreatedAt string `pulumi:"createdAt"`
	// The number of the Group Policy
	GroupNumber string `pulumi:"groupNumber"`
	// The Id of the Group Policy. This is associated with the network specified by the networkId.
	GroupPolicyId string `pulumi:"groupPolicyId"`
	// The last update time of the Sentry Policy
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
	NetworkId string `pulumi:"networkId"`
	// The Id of the Sentry Policy
	PolicyId string `pulumi:"policyId"`
	// The priority of the Sentry Policy
	Priority string `pulumi:"priority"`
	// The scope of the Sentry Policy
	Scope string `pulumi:"scope"`
	// The Id of the Systems Manager Network the Sentry Policy is assigned to
	SmNetworkId string `pulumi:"smNetworkId"`
	// The tags of the Sentry Policy
	Tags []string `pulumi:"tags"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs and GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs struct {
	// The creation time of the Sentry Policy
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The number of the Group Policy
	GroupNumber pulumi.StringInput `pulumi:"groupNumber"`
	// The Id of the Group Policy. This is associated with the network specified by the networkId.
	GroupPolicyId pulumi.StringInput `pulumi:"groupPolicyId"`
	// The last update time of the Sentry Policy
	LastUpdatedAt pulumi.StringInput `pulumi:"lastUpdatedAt"`
	// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The Id of the Sentry Policy
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The priority of the Sentry Policy
	Priority pulumi.StringInput `pulumi:"priority"`
	// The scope of the Sentry Policy
	Scope pulumi.StringInput `pulumi:"scope"`
	// The Id of the Systems Manager Network the Sentry Policy is assigned to
	SmNetworkId pulumi.StringInput `pulumi:"smNetworkId"`
	// The tags of the Sentry Policy
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput)
}

// GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray and GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray{ GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs{...} }
type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray []GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyInput

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput {
	return o
}

// The creation time of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The number of the Group Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) GroupNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.GroupNumber }).(pulumi.StringOutput)
}

// The Id of the Group Policy. This is associated with the network specified by the networkId.
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) GroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.GroupPolicyId }).(pulumi.StringOutput)
}

// The last update time of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The Id of the Network the Sentry Policy is associated with. In a locale, this should be the Wireless Group if present, otherwise the Wired Group.
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The Id of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The priority of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.Priority }).(pulumi.StringOutput)
}

// The scope of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.Scope }).(pulumi.StringOutput)
}

// The Id of the Systems Manager Network the Sentry Policy is assigned to
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) SmNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) string { return v.SmNetworkId }).(pulumi.StringOutput)
}

// The tags of the Sentry Policy
func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput() GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput) Index(i pulumi.IntInput) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy {
		return vs[0].([]GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicy)[vs[1].(int)]
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMeta struct {
	// Counts relating to the paginated dataset
	Counts GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts `pulumi:"counts"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemMetaInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs and GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemMetaInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemMetaInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs struct {
	// Counts relating to the paginated dataset
	Counts GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsInput `pulumi:"counts"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMeta)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMeta)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput {
	return o
}

// Counts relating to the paginated dataset
func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput) Counts() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemMeta) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts {
		return v.Counts
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts struct {
	// Counts relating to the paginated items
	Items GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems `pulumi:"items"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs and GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs struct {
	// Counts relating to the paginated items
	Items GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsInput `pulumi:"items"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput {
	return o
}

// Counts relating to the paginated items
func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput) Items() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemMetaCounts) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems {
		return v.Items
	}).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems struct {
	// The number of items in the dataset that are available on subsequent pages
	Remaining int `pulumi:"remaining"`
	// The total number of items in the dataset
	Total int `pulumi:"total"`
}

// GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsInput is an input type that accepts GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs and GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput values.
// You can construct a concrete instance of `GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsInput` via:
//
//	GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs{...}
type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsInput interface {
	pulumi.Input

	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput
	ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutputWithContext(context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs struct {
	// The number of items in the dataset that are available on subsequent pages
	Remaining pulumi.IntInput `pulumi:"remaining"`
	// The total number of items in the dataset
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems)(nil)).Elem()
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput {
	return i.ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutputWithContext(context.Background())
}

func (i GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput)
}

type GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput struct{ *pulumi.OutputState }

func (GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems)(nil)).Elem()
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput() GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput {
	return o
}

func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput) ToGetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutputWithContext(ctx context.Context) GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput {
	return o
}

// The number of items in the dataset that are available on subsequent pages
func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput) Remaining() pulumi.IntOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems) int { return v.Remaining }).(pulumi.IntOutput)
}

// The total number of items in the dataset
func (o GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItems) int { return v.Total }).(pulumi.IntOutput)
}

type GetSmVppAccountsItem struct {
	// The allowed admins for the VPP account
	AllowedAdmins string `pulumi:"allowedAdmins"`
	// The network IDs of the assignable networks for the VPP account
	AssignableNetworkIds []string `pulumi:"assignableNetworkIds"`
	// The assignable networks for the VPP account
	AssignableNetworks string `pulumi:"assignableNetworks"`
	// The VPP service token
	ContentToken string `pulumi:"contentToken"`
	// The email address associated with the VPP account
	Email string `pulumi:"email"`
	// The id of the VPP Account
	Id string `pulumi:"id"`
	// The last time the VPP account was force synced
	LastForceSyncedAt string `pulumi:"lastForceSyncedAt"`
	// The last time the VPP account was synced
	LastSyncedAt string `pulumi:"lastSyncedAt"`
	// The name of the VPP account
	Name string `pulumi:"name"`
	// The network IDs of the admins for the VPP account
	NetworkIdAdmins string `pulumi:"networkIdAdmins"`
	// The parsed VPP service token
	ParsedToken GetSmVppAccountsItemParsedToken `pulumi:"parsedToken"`
	// The id of the VPP Account
	VppAccountId string `pulumi:"vppAccountId"`
	// The VPP location ID
	VppLocationId string `pulumi:"vppLocationId"`
	// The VPP location name
	VppLocationName string `pulumi:"vppLocationName"`
	// The VPP Account's Service Token
	VppServiceToken string `pulumi:"vppServiceToken"`
}

// GetSmVppAccountsItemInput is an input type that accepts GetSmVppAccountsItemArgs and GetSmVppAccountsItemOutput values.
// You can construct a concrete instance of `GetSmVppAccountsItemInput` via:
//
//	GetSmVppAccountsItemArgs{...}
type GetSmVppAccountsItemInput interface {
	pulumi.Input

	ToGetSmVppAccountsItemOutput() GetSmVppAccountsItemOutput
	ToGetSmVppAccountsItemOutputWithContext(context.Context) GetSmVppAccountsItemOutput
}

type GetSmVppAccountsItemArgs struct {
	// The allowed admins for the VPP account
	AllowedAdmins pulumi.StringInput `pulumi:"allowedAdmins"`
	// The network IDs of the assignable networks for the VPP account
	AssignableNetworkIds pulumi.StringArrayInput `pulumi:"assignableNetworkIds"`
	// The assignable networks for the VPP account
	AssignableNetworks pulumi.StringInput `pulumi:"assignableNetworks"`
	// The VPP service token
	ContentToken pulumi.StringInput `pulumi:"contentToken"`
	// The email address associated with the VPP account
	Email pulumi.StringInput `pulumi:"email"`
	// The id of the VPP Account
	Id pulumi.StringInput `pulumi:"id"`
	// The last time the VPP account was force synced
	LastForceSyncedAt pulumi.StringInput `pulumi:"lastForceSyncedAt"`
	// The last time the VPP account was synced
	LastSyncedAt pulumi.StringInput `pulumi:"lastSyncedAt"`
	// The name of the VPP account
	Name pulumi.StringInput `pulumi:"name"`
	// The network IDs of the admins for the VPP account
	NetworkIdAdmins pulumi.StringInput `pulumi:"networkIdAdmins"`
	// The parsed VPP service token
	ParsedToken GetSmVppAccountsItemParsedTokenInput `pulumi:"parsedToken"`
	// The id of the VPP Account
	VppAccountId pulumi.StringInput `pulumi:"vppAccountId"`
	// The VPP location ID
	VppLocationId pulumi.StringInput `pulumi:"vppLocationId"`
	// The VPP location name
	VppLocationName pulumi.StringInput `pulumi:"vppLocationName"`
	// The VPP Account's Service Token
	VppServiceToken pulumi.StringInput `pulumi:"vppServiceToken"`
}

func (GetSmVppAccountsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmVppAccountsItem)(nil)).Elem()
}

func (i GetSmVppAccountsItemArgs) ToGetSmVppAccountsItemOutput() GetSmVppAccountsItemOutput {
	return i.ToGetSmVppAccountsItemOutputWithContext(context.Background())
}

func (i GetSmVppAccountsItemArgs) ToGetSmVppAccountsItemOutputWithContext(ctx context.Context) GetSmVppAccountsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmVppAccountsItemOutput)
}

// GetSmVppAccountsItemArrayInput is an input type that accepts GetSmVppAccountsItemArray and GetSmVppAccountsItemArrayOutput values.
// You can construct a concrete instance of `GetSmVppAccountsItemArrayInput` via:
//
//	GetSmVppAccountsItemArray{ GetSmVppAccountsItemArgs{...} }
type GetSmVppAccountsItemArrayInput interface {
	pulumi.Input

	ToGetSmVppAccountsItemArrayOutput() GetSmVppAccountsItemArrayOutput
	ToGetSmVppAccountsItemArrayOutputWithContext(context.Context) GetSmVppAccountsItemArrayOutput
}

type GetSmVppAccountsItemArray []GetSmVppAccountsItemInput

func (GetSmVppAccountsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmVppAccountsItem)(nil)).Elem()
}

func (i GetSmVppAccountsItemArray) ToGetSmVppAccountsItemArrayOutput() GetSmVppAccountsItemArrayOutput {
	return i.ToGetSmVppAccountsItemArrayOutputWithContext(context.Background())
}

func (i GetSmVppAccountsItemArray) ToGetSmVppAccountsItemArrayOutputWithContext(ctx context.Context) GetSmVppAccountsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmVppAccountsItemArrayOutput)
}

type GetSmVppAccountsItemOutput struct{ *pulumi.OutputState }

func (GetSmVppAccountsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmVppAccountsItem)(nil)).Elem()
}

func (o GetSmVppAccountsItemOutput) ToGetSmVppAccountsItemOutput() GetSmVppAccountsItemOutput {
	return o
}

func (o GetSmVppAccountsItemOutput) ToGetSmVppAccountsItemOutputWithContext(ctx context.Context) GetSmVppAccountsItemOutput {
	return o
}

// The allowed admins for the VPP account
func (o GetSmVppAccountsItemOutput) AllowedAdmins() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.AllowedAdmins }).(pulumi.StringOutput)
}

// The network IDs of the assignable networks for the VPP account
func (o GetSmVppAccountsItemOutput) AssignableNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) []string { return v.AssignableNetworkIds }).(pulumi.StringArrayOutput)
}

// The assignable networks for the VPP account
func (o GetSmVppAccountsItemOutput) AssignableNetworks() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.AssignableNetworks }).(pulumi.StringOutput)
}

// The VPP service token
func (o GetSmVppAccountsItemOutput) ContentToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.ContentToken }).(pulumi.StringOutput)
}

// The email address associated with the VPP account
func (o GetSmVppAccountsItemOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.Email }).(pulumi.StringOutput)
}

// The id of the VPP Account
func (o GetSmVppAccountsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.Id }).(pulumi.StringOutput)
}

// The last time the VPP account was force synced
func (o GetSmVppAccountsItemOutput) LastForceSyncedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.LastForceSyncedAt }).(pulumi.StringOutput)
}

// The last time the VPP account was synced
func (o GetSmVppAccountsItemOutput) LastSyncedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.LastSyncedAt }).(pulumi.StringOutput)
}

// The name of the VPP account
func (o GetSmVppAccountsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The network IDs of the admins for the VPP account
func (o GetSmVppAccountsItemOutput) NetworkIdAdmins() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.NetworkIdAdmins }).(pulumi.StringOutput)
}

// The parsed VPP service token
func (o GetSmVppAccountsItemOutput) ParsedToken() GetSmVppAccountsItemParsedTokenOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) GetSmVppAccountsItemParsedToken { return v.ParsedToken }).(GetSmVppAccountsItemParsedTokenOutput)
}

// The id of the VPP Account
func (o GetSmVppAccountsItemOutput) VppAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.VppAccountId }).(pulumi.StringOutput)
}

// The VPP location ID
func (o GetSmVppAccountsItemOutput) VppLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.VppLocationId }).(pulumi.StringOutput)
}

// The VPP location name
func (o GetSmVppAccountsItemOutput) VppLocationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.VppLocationName }).(pulumi.StringOutput)
}

// The VPP Account's Service Token
func (o GetSmVppAccountsItemOutput) VppServiceToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItem) string { return v.VppServiceToken }).(pulumi.StringOutput)
}

type GetSmVppAccountsItemArrayOutput struct{ *pulumi.OutputState }

func (GetSmVppAccountsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSmVppAccountsItem)(nil)).Elem()
}

func (o GetSmVppAccountsItemArrayOutput) ToGetSmVppAccountsItemArrayOutput() GetSmVppAccountsItemArrayOutput {
	return o
}

func (o GetSmVppAccountsItemArrayOutput) ToGetSmVppAccountsItemArrayOutputWithContext(ctx context.Context) GetSmVppAccountsItemArrayOutput {
	return o
}

func (o GetSmVppAccountsItemArrayOutput) Index(i pulumi.IntInput) GetSmVppAccountsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSmVppAccountsItem {
		return vs[0].([]GetSmVppAccountsItem)[vs[1].(int)]
	}).(GetSmVppAccountsItemOutput)
}

type GetSmVppAccountsItemParsedToken struct {
	// The expiration time of the token
	ExpiresAt string `pulumi:"expiresAt"`
	// The hashed token
	HashedToken string `pulumi:"hashedToken"`
	// The organization name
	OrgName string `pulumi:"orgName"`
}

// GetSmVppAccountsItemParsedTokenInput is an input type that accepts GetSmVppAccountsItemParsedTokenArgs and GetSmVppAccountsItemParsedTokenOutput values.
// You can construct a concrete instance of `GetSmVppAccountsItemParsedTokenInput` via:
//
//	GetSmVppAccountsItemParsedTokenArgs{...}
type GetSmVppAccountsItemParsedTokenInput interface {
	pulumi.Input

	ToGetSmVppAccountsItemParsedTokenOutput() GetSmVppAccountsItemParsedTokenOutput
	ToGetSmVppAccountsItemParsedTokenOutputWithContext(context.Context) GetSmVppAccountsItemParsedTokenOutput
}

type GetSmVppAccountsItemParsedTokenArgs struct {
	// The expiration time of the token
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// The hashed token
	HashedToken pulumi.StringInput `pulumi:"hashedToken"`
	// The organization name
	OrgName pulumi.StringInput `pulumi:"orgName"`
}

func (GetSmVppAccountsItemParsedTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmVppAccountsItemParsedToken)(nil)).Elem()
}

func (i GetSmVppAccountsItemParsedTokenArgs) ToGetSmVppAccountsItemParsedTokenOutput() GetSmVppAccountsItemParsedTokenOutput {
	return i.ToGetSmVppAccountsItemParsedTokenOutputWithContext(context.Background())
}

func (i GetSmVppAccountsItemParsedTokenArgs) ToGetSmVppAccountsItemParsedTokenOutputWithContext(ctx context.Context) GetSmVppAccountsItemParsedTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSmVppAccountsItemParsedTokenOutput)
}

type GetSmVppAccountsItemParsedTokenOutput struct{ *pulumi.OutputState }

func (GetSmVppAccountsItemParsedTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmVppAccountsItemParsedToken)(nil)).Elem()
}

func (o GetSmVppAccountsItemParsedTokenOutput) ToGetSmVppAccountsItemParsedTokenOutput() GetSmVppAccountsItemParsedTokenOutput {
	return o
}

func (o GetSmVppAccountsItemParsedTokenOutput) ToGetSmVppAccountsItemParsedTokenOutputWithContext(ctx context.Context) GetSmVppAccountsItemParsedTokenOutput {
	return o
}

// The expiration time of the token
func (o GetSmVppAccountsItemParsedTokenOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItemParsedToken) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The hashed token
func (o GetSmVppAccountsItemParsedTokenOutput) HashedToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItemParsedToken) string { return v.HashedToken }).(pulumi.StringOutput)
}

// The organization name
func (o GetSmVppAccountsItemParsedTokenOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmVppAccountsItemParsedToken) string { return v.OrgName }).(pulumi.StringOutput)
}

type GetSnmpItem struct {
	// The hostname of the SNMP server.
	Hostname string `pulumi:"hostname"`
	// The list of IPv4 addresses that are allowed to access the SNMP server.
	PeerIps []string `pulumi:"peerIps"`
	// The port of the SNMP server.
	Port int `pulumi:"port"`
	// The community string for SNMP version 2c, if enabled.
	V2CommunityString string `pulumi:"v2CommunityString"`
	// Boolean indicating whether SNMP version 2c is enabled for the organization.
	V2cEnabled bool `pulumi:"v2cEnabled"`
	// The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
	V3AuthMode string `pulumi:"v3AuthMode"`
	// Boolean indicating whether SNMP version 3 is enabled for the organization.
	V3Enabled bool `pulumi:"v3Enabled"`
	// The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
	V3PrivMode string `pulumi:"v3PrivMode"`
	// The user for SNMP version 3, if enabled.
	V3User string `pulumi:"v3User"`
}

// GetSnmpItemInput is an input type that accepts GetSnmpItemArgs and GetSnmpItemOutput values.
// You can construct a concrete instance of `GetSnmpItemInput` via:
//
//	GetSnmpItemArgs{...}
type GetSnmpItemInput interface {
	pulumi.Input

	ToGetSnmpItemOutput() GetSnmpItemOutput
	ToGetSnmpItemOutputWithContext(context.Context) GetSnmpItemOutput
}

type GetSnmpItemArgs struct {
	// The hostname of the SNMP server.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The list of IPv4 addresses that are allowed to access the SNMP server.
	PeerIps pulumi.StringArrayInput `pulumi:"peerIps"`
	// The port of the SNMP server.
	Port pulumi.IntInput `pulumi:"port"`
	// The community string for SNMP version 2c, if enabled.
	V2CommunityString pulumi.StringInput `pulumi:"v2CommunityString"`
	// Boolean indicating whether SNMP version 2c is enabled for the organization.
	V2cEnabled pulumi.BoolInput `pulumi:"v2cEnabled"`
	// The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
	V3AuthMode pulumi.StringInput `pulumi:"v3AuthMode"`
	// Boolean indicating whether SNMP version 3 is enabled for the organization.
	V3Enabled pulumi.BoolInput `pulumi:"v3Enabled"`
	// The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
	V3PrivMode pulumi.StringInput `pulumi:"v3PrivMode"`
	// The user for SNMP version 3, if enabled.
	V3User pulumi.StringInput `pulumi:"v3User"`
}

func (GetSnmpItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnmpItem)(nil)).Elem()
}

func (i GetSnmpItemArgs) ToGetSnmpItemOutput() GetSnmpItemOutput {
	return i.ToGetSnmpItemOutputWithContext(context.Background())
}

func (i GetSnmpItemArgs) ToGetSnmpItemOutputWithContext(ctx context.Context) GetSnmpItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnmpItemOutput)
}

type GetSnmpItemOutput struct{ *pulumi.OutputState }

func (GetSnmpItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnmpItem)(nil)).Elem()
}

func (o GetSnmpItemOutput) ToGetSnmpItemOutput() GetSnmpItemOutput {
	return o
}

func (o GetSnmpItemOutput) ToGetSnmpItemOutputWithContext(ctx context.Context) GetSnmpItemOutput {
	return o
}

// The hostname of the SNMP server.
func (o GetSnmpItemOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnmpItem) string { return v.Hostname }).(pulumi.StringOutput)
}

// The list of IPv4 addresses that are allowed to access the SNMP server.
func (o GetSnmpItemOutput) PeerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnmpItem) []string { return v.PeerIps }).(pulumi.StringArrayOutput)
}

// The port of the SNMP server.
func (o GetSnmpItemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnmpItem) int { return v.Port }).(pulumi.IntOutput)
}

// The community string for SNMP version 2c, if enabled.
func (o GetSnmpItemOutput) V2CommunityString() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnmpItem) string { return v.V2CommunityString }).(pulumi.StringOutput)
}

// Boolean indicating whether SNMP version 2c is enabled for the organization.
func (o GetSnmpItemOutput) V2cEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnmpItem) bool { return v.V2cEnabled }).(pulumi.BoolOutput)
}

// The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
func (o GetSnmpItemOutput) V3AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnmpItem) string { return v.V3AuthMode }).(pulumi.StringOutput)
}

// Boolean indicating whether SNMP version 3 is enabled for the organization.
func (o GetSnmpItemOutput) V3Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnmpItem) bool { return v.V3Enabled }).(pulumi.BoolOutput)
}

// The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
func (o GetSnmpItemOutput) V3PrivMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnmpItem) string { return v.V3PrivMode }).(pulumi.StringOutput)
}

// The user for SNMP version 3, if enabled.
func (o GetSnmpItemOutput) V3User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnmpItem) string { return v.V3User }).(pulumi.StringOutput)
}

type GetSummaryTopAppliancesByUtilizationItem struct {
	// Mac address of the appliance
	Mac string `pulumi:"mac"`
	// Model of the appliance
	Model string `pulumi:"model"`
	// Name of the appliance
	Name string `pulumi:"name"`
	// Network info
	Network GetSummaryTopAppliancesByUtilizationItemNetwork `pulumi:"network"`
	// Serial number of the appliance
	Serial string `pulumi:"serial"`
	// Utilization of the appliance
	Utilization GetSummaryTopAppliancesByUtilizationItemUtilization `pulumi:"utilization"`
}

// GetSummaryTopAppliancesByUtilizationItemInput is an input type that accepts GetSummaryTopAppliancesByUtilizationItemArgs and GetSummaryTopAppliancesByUtilizationItemOutput values.
// You can construct a concrete instance of `GetSummaryTopAppliancesByUtilizationItemInput` via:
//
//	GetSummaryTopAppliancesByUtilizationItemArgs{...}
type GetSummaryTopAppliancesByUtilizationItemInput interface {
	pulumi.Input

	ToGetSummaryTopAppliancesByUtilizationItemOutput() GetSummaryTopAppliancesByUtilizationItemOutput
	ToGetSummaryTopAppliancesByUtilizationItemOutputWithContext(context.Context) GetSummaryTopAppliancesByUtilizationItemOutput
}

type GetSummaryTopAppliancesByUtilizationItemArgs struct {
	// Mac address of the appliance
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model of the appliance
	Model pulumi.StringInput `pulumi:"model"`
	// Name of the appliance
	Name pulumi.StringInput `pulumi:"name"`
	// Network info
	Network GetSummaryTopAppliancesByUtilizationItemNetworkInput `pulumi:"network"`
	// Serial number of the appliance
	Serial pulumi.StringInput `pulumi:"serial"`
	// Utilization of the appliance
	Utilization GetSummaryTopAppliancesByUtilizationItemUtilizationInput `pulumi:"utilization"`
}

func (GetSummaryTopAppliancesByUtilizationItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItem)(nil)).Elem()
}

func (i GetSummaryTopAppliancesByUtilizationItemArgs) ToGetSummaryTopAppliancesByUtilizationItemOutput() GetSummaryTopAppliancesByUtilizationItemOutput {
	return i.ToGetSummaryTopAppliancesByUtilizationItemOutputWithContext(context.Background())
}

func (i GetSummaryTopAppliancesByUtilizationItemArgs) ToGetSummaryTopAppliancesByUtilizationItemOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopAppliancesByUtilizationItemOutput)
}

// GetSummaryTopAppliancesByUtilizationItemArrayInput is an input type that accepts GetSummaryTopAppliancesByUtilizationItemArray and GetSummaryTopAppliancesByUtilizationItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopAppliancesByUtilizationItemArrayInput` via:
//
//	GetSummaryTopAppliancesByUtilizationItemArray{ GetSummaryTopAppliancesByUtilizationItemArgs{...} }
type GetSummaryTopAppliancesByUtilizationItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopAppliancesByUtilizationItemArrayOutput() GetSummaryTopAppliancesByUtilizationItemArrayOutput
	ToGetSummaryTopAppliancesByUtilizationItemArrayOutputWithContext(context.Context) GetSummaryTopAppliancesByUtilizationItemArrayOutput
}

type GetSummaryTopAppliancesByUtilizationItemArray []GetSummaryTopAppliancesByUtilizationItemInput

func (GetSummaryTopAppliancesByUtilizationItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopAppliancesByUtilizationItem)(nil)).Elem()
}

func (i GetSummaryTopAppliancesByUtilizationItemArray) ToGetSummaryTopAppliancesByUtilizationItemArrayOutput() GetSummaryTopAppliancesByUtilizationItemArrayOutput {
	return i.ToGetSummaryTopAppliancesByUtilizationItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopAppliancesByUtilizationItemArray) ToGetSummaryTopAppliancesByUtilizationItemArrayOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopAppliancesByUtilizationItemArrayOutput)
}

type GetSummaryTopAppliancesByUtilizationItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopAppliancesByUtilizationItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItem)(nil)).Elem()
}

func (o GetSummaryTopAppliancesByUtilizationItemOutput) ToGetSummaryTopAppliancesByUtilizationItemOutput() GetSummaryTopAppliancesByUtilizationItemOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemOutput) ToGetSummaryTopAppliancesByUtilizationItemOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemOutput {
	return o
}

// Mac address of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Network() GetSummaryTopAppliancesByUtilizationItemNetworkOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) GetSummaryTopAppliancesByUtilizationItemNetwork {
		return v.Network
	}).(GetSummaryTopAppliancesByUtilizationItemNetworkOutput)
}

// Serial number of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Utilization of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemOutput) Utilization() GetSummaryTopAppliancesByUtilizationItemUtilizationOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItem) GetSummaryTopAppliancesByUtilizationItemUtilization {
		return v.Utilization
	}).(GetSummaryTopAppliancesByUtilizationItemUtilizationOutput)
}

type GetSummaryTopAppliancesByUtilizationItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopAppliancesByUtilizationItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopAppliancesByUtilizationItem)(nil)).Elem()
}

func (o GetSummaryTopAppliancesByUtilizationItemArrayOutput) ToGetSummaryTopAppliancesByUtilizationItemArrayOutput() GetSummaryTopAppliancesByUtilizationItemArrayOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemArrayOutput) ToGetSummaryTopAppliancesByUtilizationItemArrayOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemArrayOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopAppliancesByUtilizationItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopAppliancesByUtilizationItem {
		return vs[0].([]GetSummaryTopAppliancesByUtilizationItem)[vs[1].(int)]
	}).(GetSummaryTopAppliancesByUtilizationItemOutput)
}

type GetSummaryTopAppliancesByUtilizationItemNetwork struct {
	// Network id
	Id string `pulumi:"id"`
	// Network name
	Name string `pulumi:"name"`
}

// GetSummaryTopAppliancesByUtilizationItemNetworkInput is an input type that accepts GetSummaryTopAppliancesByUtilizationItemNetworkArgs and GetSummaryTopAppliancesByUtilizationItemNetworkOutput values.
// You can construct a concrete instance of `GetSummaryTopAppliancesByUtilizationItemNetworkInput` via:
//
//	GetSummaryTopAppliancesByUtilizationItemNetworkArgs{...}
type GetSummaryTopAppliancesByUtilizationItemNetworkInput interface {
	pulumi.Input

	ToGetSummaryTopAppliancesByUtilizationItemNetworkOutput() GetSummaryTopAppliancesByUtilizationItemNetworkOutput
	ToGetSummaryTopAppliancesByUtilizationItemNetworkOutputWithContext(context.Context) GetSummaryTopAppliancesByUtilizationItemNetworkOutput
}

type GetSummaryTopAppliancesByUtilizationItemNetworkArgs struct {
	// Network id
	Id pulumi.StringInput `pulumi:"id"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSummaryTopAppliancesByUtilizationItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemNetwork)(nil)).Elem()
}

func (i GetSummaryTopAppliancesByUtilizationItemNetworkArgs) ToGetSummaryTopAppliancesByUtilizationItemNetworkOutput() GetSummaryTopAppliancesByUtilizationItemNetworkOutput {
	return i.ToGetSummaryTopAppliancesByUtilizationItemNetworkOutputWithContext(context.Background())
}

func (i GetSummaryTopAppliancesByUtilizationItemNetworkArgs) ToGetSummaryTopAppliancesByUtilizationItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopAppliancesByUtilizationItemNetworkOutput)
}

type GetSummaryTopAppliancesByUtilizationItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSummaryTopAppliancesByUtilizationItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemNetwork)(nil)).Elem()
}

func (o GetSummaryTopAppliancesByUtilizationItemNetworkOutput) ToGetSummaryTopAppliancesByUtilizationItemNetworkOutput() GetSummaryTopAppliancesByUtilizationItemNetworkOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemNetworkOutput) ToGetSummaryTopAppliancesByUtilizationItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemNetworkOutput {
	return o
}

// Network id
func (o GetSummaryTopAppliancesByUtilizationItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Network name
func (o GetSummaryTopAppliancesByUtilizationItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSummaryTopAppliancesByUtilizationItemUtilization struct {
	// Average utilization of the appliance
	Average GetSummaryTopAppliancesByUtilizationItemUtilizationAverage `pulumi:"average"`
}

// GetSummaryTopAppliancesByUtilizationItemUtilizationInput is an input type that accepts GetSummaryTopAppliancesByUtilizationItemUtilizationArgs and GetSummaryTopAppliancesByUtilizationItemUtilizationOutput values.
// You can construct a concrete instance of `GetSummaryTopAppliancesByUtilizationItemUtilizationInput` via:
//
//	GetSummaryTopAppliancesByUtilizationItemUtilizationArgs{...}
type GetSummaryTopAppliancesByUtilizationItemUtilizationInput interface {
	pulumi.Input

	ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationOutput
	ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutputWithContext(context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationOutput
}

type GetSummaryTopAppliancesByUtilizationItemUtilizationArgs struct {
	// Average utilization of the appliance
	Average GetSummaryTopAppliancesByUtilizationItemUtilizationAverageInput `pulumi:"average"`
}

func (GetSummaryTopAppliancesByUtilizationItemUtilizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilization)(nil)).Elem()
}

func (i GetSummaryTopAppliancesByUtilizationItemUtilizationArgs) ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationOutput {
	return i.ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutputWithContext(context.Background())
}

func (i GetSummaryTopAppliancesByUtilizationItemUtilizationArgs) ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopAppliancesByUtilizationItemUtilizationOutput)
}

type GetSummaryTopAppliancesByUtilizationItemUtilizationOutput struct{ *pulumi.OutputState }

func (GetSummaryTopAppliancesByUtilizationItemUtilizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilization)(nil)).Elem()
}

func (o GetSummaryTopAppliancesByUtilizationItemUtilizationOutput) ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemUtilizationOutput) ToGetSummaryTopAppliancesByUtilizationItemUtilizationOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationOutput {
	return o
}

// Average utilization of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemUtilizationOutput) Average() GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItemUtilization) GetSummaryTopAppliancesByUtilizationItemUtilizationAverage {
		return v.Average
	}).(GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput)
}

type GetSummaryTopAppliancesByUtilizationItemUtilizationAverage struct {
	// Average percentage utilization of the appliance
	Percentage float64 `pulumi:"percentage"`
}

// GetSummaryTopAppliancesByUtilizationItemUtilizationAverageInput is an input type that accepts GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs and GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput values.
// You can construct a concrete instance of `GetSummaryTopAppliancesByUtilizationItemUtilizationAverageInput` via:
//
//	GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs{...}
type GetSummaryTopAppliancesByUtilizationItemUtilizationAverageInput interface {
	pulumi.Input

	ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput
	ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutputWithContext(context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput
}

type GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs struct {
	// Average percentage utilization of the appliance
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilizationAverage)(nil)).Elem()
}

func (i GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs) ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput {
	return i.ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutputWithContext(context.Background())
}

func (i GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs) ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput)
}

type GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilizationAverage)(nil)).Elem()
}

func (o GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput) ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput() GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput {
	return o
}

func (o GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput) ToGetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutputWithContext(ctx context.Context) GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput {
	return o
}

// Average percentage utilization of the appliance
func (o GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopAppliancesByUtilizationItemUtilizationAverage) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetSummaryTopClientsByUsageItem struct {
	// ID of client
	Id string `pulumi:"id"`
	// MAC address of client
	Mac string `pulumi:"mac"`
	// Name of client
	Name    string                                 `pulumi:"name"`
	Network GetSummaryTopClientsByUsageItemNetwork `pulumi:"network"`
	// Data usage information
	Usage GetSummaryTopClientsByUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopClientsByUsageItemInput is an input type that accepts GetSummaryTopClientsByUsageItemArgs and GetSummaryTopClientsByUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsByUsageItemInput` via:
//
//	GetSummaryTopClientsByUsageItemArgs{...}
type GetSummaryTopClientsByUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopClientsByUsageItemOutput() GetSummaryTopClientsByUsageItemOutput
	ToGetSummaryTopClientsByUsageItemOutputWithContext(context.Context) GetSummaryTopClientsByUsageItemOutput
}

type GetSummaryTopClientsByUsageItemArgs struct {
	// ID of client
	Id pulumi.StringInput `pulumi:"id"`
	// MAC address of client
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of client
	Name    pulumi.StringInput                          `pulumi:"name"`
	Network GetSummaryTopClientsByUsageItemNetworkInput `pulumi:"network"`
	// Data usage information
	Usage GetSummaryTopClientsByUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopClientsByUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopClientsByUsageItemArgs) ToGetSummaryTopClientsByUsageItemOutput() GetSummaryTopClientsByUsageItemOutput {
	return i.ToGetSummaryTopClientsByUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsByUsageItemArgs) ToGetSummaryTopClientsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsByUsageItemOutput)
}

// GetSummaryTopClientsByUsageItemArrayInput is an input type that accepts GetSummaryTopClientsByUsageItemArray and GetSummaryTopClientsByUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsByUsageItemArrayInput` via:
//
//	GetSummaryTopClientsByUsageItemArray{ GetSummaryTopClientsByUsageItemArgs{...} }
type GetSummaryTopClientsByUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopClientsByUsageItemArrayOutput() GetSummaryTopClientsByUsageItemArrayOutput
	ToGetSummaryTopClientsByUsageItemArrayOutputWithContext(context.Context) GetSummaryTopClientsByUsageItemArrayOutput
}

type GetSummaryTopClientsByUsageItemArray []GetSummaryTopClientsByUsageItemInput

func (GetSummaryTopClientsByUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopClientsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopClientsByUsageItemArray) ToGetSummaryTopClientsByUsageItemArrayOutput() GetSummaryTopClientsByUsageItemArrayOutput {
	return i.ToGetSummaryTopClientsByUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsByUsageItemArray) ToGetSummaryTopClientsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsByUsageItemArrayOutput)
}

type GetSummaryTopClientsByUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsByUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopClientsByUsageItemOutput) ToGetSummaryTopClientsByUsageItemOutput() GetSummaryTopClientsByUsageItemOutput {
	return o
}

func (o GetSummaryTopClientsByUsageItemOutput) ToGetSummaryTopClientsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemOutput {
	return o
}

// ID of client
func (o GetSummaryTopClientsByUsageItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItem) string { return v.Id }).(pulumi.StringOutput)
}

// MAC address of client
func (o GetSummaryTopClientsByUsageItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of client
func (o GetSummaryTopClientsByUsageItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItem) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSummaryTopClientsByUsageItemOutput) Network() GetSummaryTopClientsByUsageItemNetworkOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItem) GetSummaryTopClientsByUsageItemNetwork { return v.Network }).(GetSummaryTopClientsByUsageItemNetworkOutput)
}

// Data usage information
func (o GetSummaryTopClientsByUsageItemOutput) Usage() GetSummaryTopClientsByUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItem) GetSummaryTopClientsByUsageItemUsage { return v.Usage }).(GetSummaryTopClientsByUsageItemUsageOutput)
}

type GetSummaryTopClientsByUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsByUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopClientsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopClientsByUsageItemArrayOutput) ToGetSummaryTopClientsByUsageItemArrayOutput() GetSummaryTopClientsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopClientsByUsageItemArrayOutput) ToGetSummaryTopClientsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopClientsByUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopClientsByUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopClientsByUsageItem {
		return vs[0].([]GetSummaryTopClientsByUsageItem)[vs[1].(int)]
	}).(GetSummaryTopClientsByUsageItemOutput)
}

type GetSummaryTopClientsByUsageItemNetwork struct {
	// ID of network
	Id string `pulumi:"id"`
	// Name of network
	Name string `pulumi:"name"`
}

// GetSummaryTopClientsByUsageItemNetworkInput is an input type that accepts GetSummaryTopClientsByUsageItemNetworkArgs and GetSummaryTopClientsByUsageItemNetworkOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsByUsageItemNetworkInput` via:
//
//	GetSummaryTopClientsByUsageItemNetworkArgs{...}
type GetSummaryTopClientsByUsageItemNetworkInput interface {
	pulumi.Input

	ToGetSummaryTopClientsByUsageItemNetworkOutput() GetSummaryTopClientsByUsageItemNetworkOutput
	ToGetSummaryTopClientsByUsageItemNetworkOutputWithContext(context.Context) GetSummaryTopClientsByUsageItemNetworkOutput
}

type GetSummaryTopClientsByUsageItemNetworkArgs struct {
	// ID of network
	Id pulumi.StringInput `pulumi:"id"`
	// Name of network
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSummaryTopClientsByUsageItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItemNetwork)(nil)).Elem()
}

func (i GetSummaryTopClientsByUsageItemNetworkArgs) ToGetSummaryTopClientsByUsageItemNetworkOutput() GetSummaryTopClientsByUsageItemNetworkOutput {
	return i.ToGetSummaryTopClientsByUsageItemNetworkOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsByUsageItemNetworkArgs) ToGetSummaryTopClientsByUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsByUsageItemNetworkOutput)
}

type GetSummaryTopClientsByUsageItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsByUsageItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItemNetwork)(nil)).Elem()
}

func (o GetSummaryTopClientsByUsageItemNetworkOutput) ToGetSummaryTopClientsByUsageItemNetworkOutput() GetSummaryTopClientsByUsageItemNetworkOutput {
	return o
}

func (o GetSummaryTopClientsByUsageItemNetworkOutput) ToGetSummaryTopClientsByUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemNetworkOutput {
	return o
}

// ID of network
func (o GetSummaryTopClientsByUsageItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of network
func (o GetSummaryTopClientsByUsageItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSummaryTopClientsByUsageItemUsage struct {
	// Downstream data usage by client
	Downstream float64 `pulumi:"downstream"`
	// Percentage of total data usage by client
	Percentage float64 `pulumi:"percentage"`
	// Total data usage by client
	Total float64 `pulumi:"total"`
	// Upstream data usage by client
	Upstream float64 `pulumi:"upstream"`
}

// GetSummaryTopClientsByUsageItemUsageInput is an input type that accepts GetSummaryTopClientsByUsageItemUsageArgs and GetSummaryTopClientsByUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsByUsageItemUsageInput` via:
//
//	GetSummaryTopClientsByUsageItemUsageArgs{...}
type GetSummaryTopClientsByUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopClientsByUsageItemUsageOutput() GetSummaryTopClientsByUsageItemUsageOutput
	ToGetSummaryTopClientsByUsageItemUsageOutputWithContext(context.Context) GetSummaryTopClientsByUsageItemUsageOutput
}

type GetSummaryTopClientsByUsageItemUsageArgs struct {
	// Downstream data usage by client
	Downstream pulumi.Float64Input `pulumi:"downstream"`
	// Percentage of total data usage by client
	Percentage pulumi.Float64Input `pulumi:"percentage"`
	// Total data usage by client
	Total pulumi.Float64Input `pulumi:"total"`
	// Upstream data usage by client
	Upstream pulumi.Float64Input `pulumi:"upstream"`
}

func (GetSummaryTopClientsByUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopClientsByUsageItemUsageArgs) ToGetSummaryTopClientsByUsageItemUsageOutput() GetSummaryTopClientsByUsageItemUsageOutput {
	return i.ToGetSummaryTopClientsByUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsByUsageItemUsageArgs) ToGetSummaryTopClientsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsByUsageItemUsageOutput)
}

type GetSummaryTopClientsByUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsByUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsByUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopClientsByUsageItemUsageOutput) ToGetSummaryTopClientsByUsageItemUsageOutput() GetSummaryTopClientsByUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopClientsByUsageItemUsageOutput) ToGetSummaryTopClientsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopClientsByUsageItemUsageOutput {
	return o
}

// Downstream data usage by client
func (o GetSummaryTopClientsByUsageItemUsageOutput) Downstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemUsage) float64 { return v.Downstream }).(pulumi.Float64Output)
}

// Percentage of total data usage by client
func (o GetSummaryTopClientsByUsageItemUsageOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemUsage) float64 { return v.Percentage }).(pulumi.Float64Output)
}

// Total data usage by client
func (o GetSummaryTopClientsByUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

// Upstream data usage by client
func (o GetSummaryTopClientsByUsageItemUsageOutput) Upstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsByUsageItemUsage) float64 { return v.Upstream }).(pulumi.Float64Output)
}

type GetSummaryTopClientsManufacturersByUsageItem struct {
	// Clients info
	Clients GetSummaryTopClientsManufacturersByUsageItemClients `pulumi:"clients"`
	// Name of the manufacturer
	Name string `pulumi:"name"`
	// Clients usage
	Usage GetSummaryTopClientsManufacturersByUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopClientsManufacturersByUsageItemInput is an input type that accepts GetSummaryTopClientsManufacturersByUsageItemArgs and GetSummaryTopClientsManufacturersByUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsManufacturersByUsageItemInput` via:
//
//	GetSummaryTopClientsManufacturersByUsageItemArgs{...}
type GetSummaryTopClientsManufacturersByUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopClientsManufacturersByUsageItemOutput() GetSummaryTopClientsManufacturersByUsageItemOutput
	ToGetSummaryTopClientsManufacturersByUsageItemOutputWithContext(context.Context) GetSummaryTopClientsManufacturersByUsageItemOutput
}

type GetSummaryTopClientsManufacturersByUsageItemArgs struct {
	// Clients info
	Clients GetSummaryTopClientsManufacturersByUsageItemClientsInput `pulumi:"clients"`
	// Name of the manufacturer
	Name pulumi.StringInput `pulumi:"name"`
	// Clients usage
	Usage GetSummaryTopClientsManufacturersByUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopClientsManufacturersByUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopClientsManufacturersByUsageItemArgs) ToGetSummaryTopClientsManufacturersByUsageItemOutput() GetSummaryTopClientsManufacturersByUsageItemOutput {
	return i.ToGetSummaryTopClientsManufacturersByUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsManufacturersByUsageItemArgs) ToGetSummaryTopClientsManufacturersByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsManufacturersByUsageItemOutput)
}

// GetSummaryTopClientsManufacturersByUsageItemArrayInput is an input type that accepts GetSummaryTopClientsManufacturersByUsageItemArray and GetSummaryTopClientsManufacturersByUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsManufacturersByUsageItemArrayInput` via:
//
//	GetSummaryTopClientsManufacturersByUsageItemArray{ GetSummaryTopClientsManufacturersByUsageItemArgs{...} }
type GetSummaryTopClientsManufacturersByUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopClientsManufacturersByUsageItemArrayOutput() GetSummaryTopClientsManufacturersByUsageItemArrayOutput
	ToGetSummaryTopClientsManufacturersByUsageItemArrayOutputWithContext(context.Context) GetSummaryTopClientsManufacturersByUsageItemArrayOutput
}

type GetSummaryTopClientsManufacturersByUsageItemArray []GetSummaryTopClientsManufacturersByUsageItemInput

func (GetSummaryTopClientsManufacturersByUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopClientsManufacturersByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopClientsManufacturersByUsageItemArray) ToGetSummaryTopClientsManufacturersByUsageItemArrayOutput() GetSummaryTopClientsManufacturersByUsageItemArrayOutput {
	return i.ToGetSummaryTopClientsManufacturersByUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsManufacturersByUsageItemArray) ToGetSummaryTopClientsManufacturersByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsManufacturersByUsageItemArrayOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsManufacturersByUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopClientsManufacturersByUsageItemOutput) ToGetSummaryTopClientsManufacturersByUsageItemOutput() GetSummaryTopClientsManufacturersByUsageItemOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemOutput) ToGetSummaryTopClientsManufacturersByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemOutput {
	return o
}

// Clients info
func (o GetSummaryTopClientsManufacturersByUsageItemOutput) Clients() GetSummaryTopClientsManufacturersByUsageItemClientsOutput {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItem) GetSummaryTopClientsManufacturersByUsageItemClients {
		return v.Clients
	}).(GetSummaryTopClientsManufacturersByUsageItemClientsOutput)
}

// Name of the manufacturer
func (o GetSummaryTopClientsManufacturersByUsageItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItem) string { return v.Name }).(pulumi.StringOutput)
}

// Clients usage
func (o GetSummaryTopClientsManufacturersByUsageItemOutput) Usage() GetSummaryTopClientsManufacturersByUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItem) GetSummaryTopClientsManufacturersByUsageItemUsage {
		return v.Usage
	}).(GetSummaryTopClientsManufacturersByUsageItemUsageOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsManufacturersByUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopClientsManufacturersByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopClientsManufacturersByUsageItemArrayOutput) ToGetSummaryTopClientsManufacturersByUsageItemArrayOutput() GetSummaryTopClientsManufacturersByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemArrayOutput) ToGetSummaryTopClientsManufacturersByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopClientsManufacturersByUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopClientsManufacturersByUsageItem {
		return vs[0].([]GetSummaryTopClientsManufacturersByUsageItem)[vs[1].(int)]
	}).(GetSummaryTopClientsManufacturersByUsageItemOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemClients struct {
	// Counts of clients
	Counts GetSummaryTopClientsManufacturersByUsageItemClientsCounts `pulumi:"counts"`
}

// GetSummaryTopClientsManufacturersByUsageItemClientsInput is an input type that accepts GetSummaryTopClientsManufacturersByUsageItemClientsArgs and GetSummaryTopClientsManufacturersByUsageItemClientsOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsManufacturersByUsageItemClientsInput` via:
//
//	GetSummaryTopClientsManufacturersByUsageItemClientsArgs{...}
type GetSummaryTopClientsManufacturersByUsageItemClientsInput interface {
	pulumi.Input

	ToGetSummaryTopClientsManufacturersByUsageItemClientsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsOutput
	ToGetSummaryTopClientsManufacturersByUsageItemClientsOutputWithContext(context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsOutput
}

type GetSummaryTopClientsManufacturersByUsageItemClientsArgs struct {
	// Counts of clients
	Counts GetSummaryTopClientsManufacturersByUsageItemClientsCountsInput `pulumi:"counts"`
}

func (GetSummaryTopClientsManufacturersByUsageItemClientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClients)(nil)).Elem()
}

func (i GetSummaryTopClientsManufacturersByUsageItemClientsArgs) ToGetSummaryTopClientsManufacturersByUsageItemClientsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsOutput {
	return i.ToGetSummaryTopClientsManufacturersByUsageItemClientsOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsManufacturersByUsageItemClientsArgs) ToGetSummaryTopClientsManufacturersByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsManufacturersByUsageItemClientsOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemClientsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsManufacturersByUsageItemClientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClients)(nil)).Elem()
}

func (o GetSummaryTopClientsManufacturersByUsageItemClientsOutput) ToGetSummaryTopClientsManufacturersByUsageItemClientsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemClientsOutput) ToGetSummaryTopClientsManufacturersByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsOutput {
	return o
}

// Counts of clients
func (o GetSummaryTopClientsManufacturersByUsageItemClientsOutput) Counts() GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItemClients) GetSummaryTopClientsManufacturersByUsageItemClientsCounts {
		return v.Counts
	}).(GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemClientsCounts struct {
	// Total counts of clients
	Total int `pulumi:"total"`
}

// GetSummaryTopClientsManufacturersByUsageItemClientsCountsInput is an input type that accepts GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs and GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsManufacturersByUsageItemClientsCountsInput` via:
//
//	GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs{...}
type GetSummaryTopClientsManufacturersByUsageItemClientsCountsInput interface {
	pulumi.Input

	ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput
	ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutputWithContext(context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput
}

type GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs struct {
	// Total counts of clients
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClientsCounts)(nil)).Elem()
}

func (i GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs) ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput {
	return i.ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs) ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClientsCounts)(nil)).Elem()
}

func (o GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput) ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput() GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput) ToGetSummaryTopClientsManufacturersByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput {
	return o
}

// Total counts of clients
func (o GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItemClientsCounts) int { return v.Total }).(pulumi.IntOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemUsage struct {
	// Downstream data usage by client
	Downstream float64 `pulumi:"downstream"`
	// Total data usage by client
	Total float64 `pulumi:"total"`
	// Upstream data usage by client
	Upstream float64 `pulumi:"upstream"`
}

// GetSummaryTopClientsManufacturersByUsageItemUsageInput is an input type that accepts GetSummaryTopClientsManufacturersByUsageItemUsageArgs and GetSummaryTopClientsManufacturersByUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopClientsManufacturersByUsageItemUsageInput` via:
//
//	GetSummaryTopClientsManufacturersByUsageItemUsageArgs{...}
type GetSummaryTopClientsManufacturersByUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopClientsManufacturersByUsageItemUsageOutput() GetSummaryTopClientsManufacturersByUsageItemUsageOutput
	ToGetSummaryTopClientsManufacturersByUsageItemUsageOutputWithContext(context.Context) GetSummaryTopClientsManufacturersByUsageItemUsageOutput
}

type GetSummaryTopClientsManufacturersByUsageItemUsageArgs struct {
	// Downstream data usage by client
	Downstream pulumi.Float64Input `pulumi:"downstream"`
	// Total data usage by client
	Total pulumi.Float64Input `pulumi:"total"`
	// Upstream data usage by client
	Upstream pulumi.Float64Input `pulumi:"upstream"`
}

func (GetSummaryTopClientsManufacturersByUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopClientsManufacturersByUsageItemUsageArgs) ToGetSummaryTopClientsManufacturersByUsageItemUsageOutput() GetSummaryTopClientsManufacturersByUsageItemUsageOutput {
	return i.ToGetSummaryTopClientsManufacturersByUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopClientsManufacturersByUsageItemUsageArgs) ToGetSummaryTopClientsManufacturersByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopClientsManufacturersByUsageItemUsageOutput)
}

type GetSummaryTopClientsManufacturersByUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopClientsManufacturersByUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopClientsManufacturersByUsageItemUsageOutput) ToGetSummaryTopClientsManufacturersByUsageItemUsageOutput() GetSummaryTopClientsManufacturersByUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopClientsManufacturersByUsageItemUsageOutput) ToGetSummaryTopClientsManufacturersByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopClientsManufacturersByUsageItemUsageOutput {
	return o
}

// Downstream data usage by client
func (o GetSummaryTopClientsManufacturersByUsageItemUsageOutput) Downstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItemUsage) float64 { return v.Downstream }).(pulumi.Float64Output)
}

// Total data usage by client
func (o GetSummaryTopClientsManufacturersByUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

// Upstream data usage by client
func (o GetSummaryTopClientsManufacturersByUsageItemUsageOutput) Upstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopClientsManufacturersByUsageItemUsage) float64 { return v.Upstream }).(pulumi.Float64Output)
}

type GetSummaryTopDevicesByUsageItem struct {
	// Clients
	Clients GetSummaryTopDevicesByUsageItemClients `pulumi:"clients"`
	// Mac address of the device
	Mac string `pulumi:"mac"`
	// Model of the device
	Model string `pulumi:"model"`
	// Name of the device
	Name string `pulumi:"name"`
	// Network info
	Network GetSummaryTopDevicesByUsageItemNetwork `pulumi:"network"`
	// Product type of the device
	ProductType string `pulumi:"productType"`
	// Serial number of the device
	Serial string `pulumi:"serial"`
	// Data usage of the device
	Usage GetSummaryTopDevicesByUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopDevicesByUsageItemInput is an input type that accepts GetSummaryTopDevicesByUsageItemArgs and GetSummaryTopDevicesByUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemInput` via:
//
//	GetSummaryTopDevicesByUsageItemArgs{...}
type GetSummaryTopDevicesByUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemOutput() GetSummaryTopDevicesByUsageItemOutput
	ToGetSummaryTopDevicesByUsageItemOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemOutput
}

type GetSummaryTopDevicesByUsageItemArgs struct {
	// Clients
	Clients GetSummaryTopDevicesByUsageItemClientsInput `pulumi:"clients"`
	// Mac address of the device
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model of the device
	Model pulumi.StringInput `pulumi:"model"`
	// Name of the device
	Name pulumi.StringInput `pulumi:"name"`
	// Network info
	Network GetSummaryTopDevicesByUsageItemNetworkInput `pulumi:"network"`
	// Product type of the device
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Serial number of the device
	Serial pulumi.StringInput `pulumi:"serial"`
	// Data usage of the device
	Usage GetSummaryTopDevicesByUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopDevicesByUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemArgs) ToGetSummaryTopDevicesByUsageItemOutput() GetSummaryTopDevicesByUsageItemOutput {
	return i.ToGetSummaryTopDevicesByUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemArgs) ToGetSummaryTopDevicesByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemOutput)
}

// GetSummaryTopDevicesByUsageItemArrayInput is an input type that accepts GetSummaryTopDevicesByUsageItemArray and GetSummaryTopDevicesByUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemArrayInput` via:
//
//	GetSummaryTopDevicesByUsageItemArray{ GetSummaryTopDevicesByUsageItemArgs{...} }
type GetSummaryTopDevicesByUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemArrayOutput() GetSummaryTopDevicesByUsageItemArrayOutput
	ToGetSummaryTopDevicesByUsageItemArrayOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemArrayOutput
}

type GetSummaryTopDevicesByUsageItemArray []GetSummaryTopDevicesByUsageItemInput

func (GetSummaryTopDevicesByUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopDevicesByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemArray) ToGetSummaryTopDevicesByUsageItemArrayOutput() GetSummaryTopDevicesByUsageItemArrayOutput {
	return i.ToGetSummaryTopDevicesByUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemArray) ToGetSummaryTopDevicesByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemArrayOutput)
}

type GetSummaryTopDevicesByUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemOutput) ToGetSummaryTopDevicesByUsageItemOutput() GetSummaryTopDevicesByUsageItemOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemOutput) ToGetSummaryTopDevicesByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemOutput {
	return o
}

// Clients
func (o GetSummaryTopDevicesByUsageItemOutput) Clients() GetSummaryTopDevicesByUsageItemClientsOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) GetSummaryTopDevicesByUsageItemClients { return v.Clients }).(GetSummaryTopDevicesByUsageItemClientsOutput)
}

// Mac address of the device
func (o GetSummaryTopDevicesByUsageItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model of the device
func (o GetSummaryTopDevicesByUsageItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the device
func (o GetSummaryTopDevicesByUsageItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info
func (o GetSummaryTopDevicesByUsageItemOutput) Network() GetSummaryTopDevicesByUsageItemNetworkOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) GetSummaryTopDevicesByUsageItemNetwork { return v.Network }).(GetSummaryTopDevicesByUsageItemNetworkOutput)
}

// Product type of the device
func (o GetSummaryTopDevicesByUsageItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// Serial number of the device
func (o GetSummaryTopDevicesByUsageItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Data usage of the device
func (o GetSummaryTopDevicesByUsageItemOutput) Usage() GetSummaryTopDevicesByUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItem) GetSummaryTopDevicesByUsageItemUsage { return v.Usage }).(GetSummaryTopDevicesByUsageItemUsageOutput)
}

type GetSummaryTopDevicesByUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopDevicesByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemArrayOutput) ToGetSummaryTopDevicesByUsageItemArrayOutput() GetSummaryTopDevicesByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemArrayOutput) ToGetSummaryTopDevicesByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopDevicesByUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopDevicesByUsageItem {
		return vs[0].([]GetSummaryTopDevicesByUsageItem)[vs[1].(int)]
	}).(GetSummaryTopDevicesByUsageItemOutput)
}

type GetSummaryTopDevicesByUsageItemClients struct {
	// Counts of clients
	Counts GetSummaryTopDevicesByUsageItemClientsCounts `pulumi:"counts"`
}

// GetSummaryTopDevicesByUsageItemClientsInput is an input type that accepts GetSummaryTopDevicesByUsageItemClientsArgs and GetSummaryTopDevicesByUsageItemClientsOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemClientsInput` via:
//
//	GetSummaryTopDevicesByUsageItemClientsArgs{...}
type GetSummaryTopDevicesByUsageItemClientsInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemClientsOutput() GetSummaryTopDevicesByUsageItemClientsOutput
	ToGetSummaryTopDevicesByUsageItemClientsOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemClientsOutput
}

type GetSummaryTopDevicesByUsageItemClientsArgs struct {
	// Counts of clients
	Counts GetSummaryTopDevicesByUsageItemClientsCountsInput `pulumi:"counts"`
}

func (GetSummaryTopDevicesByUsageItemClientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClients)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemClientsArgs) ToGetSummaryTopDevicesByUsageItemClientsOutput() GetSummaryTopDevicesByUsageItemClientsOutput {
	return i.ToGetSummaryTopDevicesByUsageItemClientsOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemClientsArgs) ToGetSummaryTopDevicesByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemClientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemClientsOutput)
}

type GetSummaryTopDevicesByUsageItemClientsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemClientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClients)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemClientsOutput) ToGetSummaryTopDevicesByUsageItemClientsOutput() GetSummaryTopDevicesByUsageItemClientsOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemClientsOutput) ToGetSummaryTopDevicesByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemClientsOutput {
	return o
}

// Counts of clients
func (o GetSummaryTopDevicesByUsageItemClientsOutput) Counts() GetSummaryTopDevicesByUsageItemClientsCountsOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemClients) GetSummaryTopDevicesByUsageItemClientsCounts {
		return v.Counts
	}).(GetSummaryTopDevicesByUsageItemClientsCountsOutput)
}

type GetSummaryTopDevicesByUsageItemClientsCounts struct {
	// Total counts of clients
	Total int `pulumi:"total"`
}

// GetSummaryTopDevicesByUsageItemClientsCountsInput is an input type that accepts GetSummaryTopDevicesByUsageItemClientsCountsArgs and GetSummaryTopDevicesByUsageItemClientsCountsOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemClientsCountsInput` via:
//
//	GetSummaryTopDevicesByUsageItemClientsCountsArgs{...}
type GetSummaryTopDevicesByUsageItemClientsCountsInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemClientsCountsOutput() GetSummaryTopDevicesByUsageItemClientsCountsOutput
	ToGetSummaryTopDevicesByUsageItemClientsCountsOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemClientsCountsOutput
}

type GetSummaryTopDevicesByUsageItemClientsCountsArgs struct {
	// Total counts of clients
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSummaryTopDevicesByUsageItemClientsCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClientsCounts)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemClientsCountsArgs) ToGetSummaryTopDevicesByUsageItemClientsCountsOutput() GetSummaryTopDevicesByUsageItemClientsCountsOutput {
	return i.ToGetSummaryTopDevicesByUsageItemClientsCountsOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemClientsCountsArgs) ToGetSummaryTopDevicesByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemClientsCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemClientsCountsOutput)
}

type GetSummaryTopDevicesByUsageItemClientsCountsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemClientsCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClientsCounts)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemClientsCountsOutput) ToGetSummaryTopDevicesByUsageItemClientsCountsOutput() GetSummaryTopDevicesByUsageItemClientsCountsOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemClientsCountsOutput) ToGetSummaryTopDevicesByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemClientsCountsOutput {
	return o
}

// Total counts of clients
func (o GetSummaryTopDevicesByUsageItemClientsCountsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemClientsCounts) int { return v.Total }).(pulumi.IntOutput)
}

type GetSummaryTopDevicesByUsageItemNetwork struct {
	// Network id
	Id string `pulumi:"id"`
	// Network name
	Name string `pulumi:"name"`
}

// GetSummaryTopDevicesByUsageItemNetworkInput is an input type that accepts GetSummaryTopDevicesByUsageItemNetworkArgs and GetSummaryTopDevicesByUsageItemNetworkOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemNetworkInput` via:
//
//	GetSummaryTopDevicesByUsageItemNetworkArgs{...}
type GetSummaryTopDevicesByUsageItemNetworkInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemNetworkOutput() GetSummaryTopDevicesByUsageItemNetworkOutput
	ToGetSummaryTopDevicesByUsageItemNetworkOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemNetworkOutput
}

type GetSummaryTopDevicesByUsageItemNetworkArgs struct {
	// Network id
	Id pulumi.StringInput `pulumi:"id"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSummaryTopDevicesByUsageItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemNetwork)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemNetworkArgs) ToGetSummaryTopDevicesByUsageItemNetworkOutput() GetSummaryTopDevicesByUsageItemNetworkOutput {
	return i.ToGetSummaryTopDevicesByUsageItemNetworkOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemNetworkArgs) ToGetSummaryTopDevicesByUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemNetworkOutput)
}

type GetSummaryTopDevicesByUsageItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemNetwork)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemNetworkOutput) ToGetSummaryTopDevicesByUsageItemNetworkOutput() GetSummaryTopDevicesByUsageItemNetworkOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemNetworkOutput) ToGetSummaryTopDevicesByUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemNetworkOutput {
	return o
}

// Network id
func (o GetSummaryTopDevicesByUsageItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Network name
func (o GetSummaryTopDevicesByUsageItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSummaryTopDevicesByUsageItemUsage struct {
	// Data usage of the device by percentage
	Percentage float64 `pulumi:"percentage"`
	// Total data usage of the device
	Total float64 `pulumi:"total"`
}

// GetSummaryTopDevicesByUsageItemUsageInput is an input type that accepts GetSummaryTopDevicesByUsageItemUsageArgs and GetSummaryTopDevicesByUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesByUsageItemUsageInput` via:
//
//	GetSummaryTopDevicesByUsageItemUsageArgs{...}
type GetSummaryTopDevicesByUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesByUsageItemUsageOutput() GetSummaryTopDevicesByUsageItemUsageOutput
	ToGetSummaryTopDevicesByUsageItemUsageOutputWithContext(context.Context) GetSummaryTopDevicesByUsageItemUsageOutput
}

type GetSummaryTopDevicesByUsageItemUsageArgs struct {
	// Data usage of the device by percentage
	Percentage pulumi.Float64Input `pulumi:"percentage"`
	// Total data usage of the device
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetSummaryTopDevicesByUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopDevicesByUsageItemUsageArgs) ToGetSummaryTopDevicesByUsageItemUsageOutput() GetSummaryTopDevicesByUsageItemUsageOutput {
	return i.ToGetSummaryTopDevicesByUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesByUsageItemUsageArgs) ToGetSummaryTopDevicesByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesByUsageItemUsageOutput)
}

type GetSummaryTopDevicesByUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesByUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesByUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopDevicesByUsageItemUsageOutput) ToGetSummaryTopDevicesByUsageItemUsageOutput() GetSummaryTopDevicesByUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopDevicesByUsageItemUsageOutput) ToGetSummaryTopDevicesByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopDevicesByUsageItemUsageOutput {
	return o
}

// Data usage of the device by percentage
func (o GetSummaryTopDevicesByUsageItemUsageOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemUsage) float64 { return v.Percentage }).(pulumi.Float64Output)
}

// Total data usage of the device
func (o GetSummaryTopDevicesByUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopDevicesByUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetSummaryTopDevicesModelsByUsageItem struct {
	// Total number of devices per model
	Count int `pulumi:"count"`
	// The device model
	Model string `pulumi:"model"`
	// Usage info in megabytes
	Usage GetSummaryTopDevicesModelsByUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopDevicesModelsByUsageItemInput is an input type that accepts GetSummaryTopDevicesModelsByUsageItemArgs and GetSummaryTopDevicesModelsByUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesModelsByUsageItemInput` via:
//
//	GetSummaryTopDevicesModelsByUsageItemArgs{...}
type GetSummaryTopDevicesModelsByUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesModelsByUsageItemOutput() GetSummaryTopDevicesModelsByUsageItemOutput
	ToGetSummaryTopDevicesModelsByUsageItemOutputWithContext(context.Context) GetSummaryTopDevicesModelsByUsageItemOutput
}

type GetSummaryTopDevicesModelsByUsageItemArgs struct {
	// Total number of devices per model
	Count pulumi.IntInput `pulumi:"count"`
	// The device model
	Model pulumi.StringInput `pulumi:"model"`
	// Usage info in megabytes
	Usage GetSummaryTopDevicesModelsByUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopDevicesModelsByUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopDevicesModelsByUsageItemArgs) ToGetSummaryTopDevicesModelsByUsageItemOutput() GetSummaryTopDevicesModelsByUsageItemOutput {
	return i.ToGetSummaryTopDevicesModelsByUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesModelsByUsageItemArgs) ToGetSummaryTopDevicesModelsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesModelsByUsageItemOutput)
}

// GetSummaryTopDevicesModelsByUsageItemArrayInput is an input type that accepts GetSummaryTopDevicesModelsByUsageItemArray and GetSummaryTopDevicesModelsByUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesModelsByUsageItemArrayInput` via:
//
//	GetSummaryTopDevicesModelsByUsageItemArray{ GetSummaryTopDevicesModelsByUsageItemArgs{...} }
type GetSummaryTopDevicesModelsByUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesModelsByUsageItemArrayOutput() GetSummaryTopDevicesModelsByUsageItemArrayOutput
	ToGetSummaryTopDevicesModelsByUsageItemArrayOutputWithContext(context.Context) GetSummaryTopDevicesModelsByUsageItemArrayOutput
}

type GetSummaryTopDevicesModelsByUsageItemArray []GetSummaryTopDevicesModelsByUsageItemInput

func (GetSummaryTopDevicesModelsByUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopDevicesModelsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopDevicesModelsByUsageItemArray) ToGetSummaryTopDevicesModelsByUsageItemArrayOutput() GetSummaryTopDevicesModelsByUsageItemArrayOutput {
	return i.ToGetSummaryTopDevicesModelsByUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesModelsByUsageItemArray) ToGetSummaryTopDevicesModelsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesModelsByUsageItemArrayOutput)
}

type GetSummaryTopDevicesModelsByUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesModelsByUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopDevicesModelsByUsageItemOutput) ToGetSummaryTopDevicesModelsByUsageItemOutput() GetSummaryTopDevicesModelsByUsageItemOutput {
	return o
}

func (o GetSummaryTopDevicesModelsByUsageItemOutput) ToGetSummaryTopDevicesModelsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemOutput {
	return o
}

// Total number of devices per model
func (o GetSummaryTopDevicesModelsByUsageItemOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesModelsByUsageItem) int { return v.Count }).(pulumi.IntOutput)
}

// The device model
func (o GetSummaryTopDevicesModelsByUsageItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesModelsByUsageItem) string { return v.Model }).(pulumi.StringOutput)
}

// Usage info in megabytes
func (o GetSummaryTopDevicesModelsByUsageItemOutput) Usage() GetSummaryTopDevicesModelsByUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopDevicesModelsByUsageItem) GetSummaryTopDevicesModelsByUsageItemUsage {
		return v.Usage
	}).(GetSummaryTopDevicesModelsByUsageItemUsageOutput)
}

type GetSummaryTopDevicesModelsByUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesModelsByUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopDevicesModelsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopDevicesModelsByUsageItemArrayOutput) ToGetSummaryTopDevicesModelsByUsageItemArrayOutput() GetSummaryTopDevicesModelsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopDevicesModelsByUsageItemArrayOutput) ToGetSummaryTopDevicesModelsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopDevicesModelsByUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopDevicesModelsByUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopDevicesModelsByUsageItem {
		return vs[0].([]GetSummaryTopDevicesModelsByUsageItem)[vs[1].(int)]
	}).(GetSummaryTopDevicesModelsByUsageItemOutput)
}

type GetSummaryTopDevicesModelsByUsageItemUsage struct {
	// Average usage in megabytes
	Average float64 `pulumi:"average"`
	// Total usage in megabytes
	Total float64 `pulumi:"total"`
}

// GetSummaryTopDevicesModelsByUsageItemUsageInput is an input type that accepts GetSummaryTopDevicesModelsByUsageItemUsageArgs and GetSummaryTopDevicesModelsByUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopDevicesModelsByUsageItemUsageInput` via:
//
//	GetSummaryTopDevicesModelsByUsageItemUsageArgs{...}
type GetSummaryTopDevicesModelsByUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopDevicesModelsByUsageItemUsageOutput() GetSummaryTopDevicesModelsByUsageItemUsageOutput
	ToGetSummaryTopDevicesModelsByUsageItemUsageOutputWithContext(context.Context) GetSummaryTopDevicesModelsByUsageItemUsageOutput
}

type GetSummaryTopDevicesModelsByUsageItemUsageArgs struct {
	// Average usage in megabytes
	Average pulumi.Float64Input `pulumi:"average"`
	// Total usage in megabytes
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetSummaryTopDevicesModelsByUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopDevicesModelsByUsageItemUsageArgs) ToGetSummaryTopDevicesModelsByUsageItemUsageOutput() GetSummaryTopDevicesModelsByUsageItemUsageOutput {
	return i.ToGetSummaryTopDevicesModelsByUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopDevicesModelsByUsageItemUsageArgs) ToGetSummaryTopDevicesModelsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopDevicesModelsByUsageItemUsageOutput)
}

type GetSummaryTopDevicesModelsByUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopDevicesModelsByUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopDevicesModelsByUsageItemUsageOutput) ToGetSummaryTopDevicesModelsByUsageItemUsageOutput() GetSummaryTopDevicesModelsByUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopDevicesModelsByUsageItemUsageOutput) ToGetSummaryTopDevicesModelsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopDevicesModelsByUsageItemUsageOutput {
	return o
}

// Average usage in megabytes
func (o GetSummaryTopDevicesModelsByUsageItemUsageOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopDevicesModelsByUsageItemUsage) float64 { return v.Average }).(pulumi.Float64Output)
}

// Total usage in megabytes
func (o GetSummaryTopDevicesModelsByUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopDevicesModelsByUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetSummaryTopNetworksByStatusItem struct {
	// Network clients data
	Clients GetSummaryTopNetworksByStatusItemClients `pulumi:"clients"`
	// Network device information
	Devices GetSummaryTopNetworksByStatusItemDevices `pulumi:"devices"`
	// Network name
	Name string `pulumi:"name"`
	// Network identifier
	NetworkId string `pulumi:"networkId"`
	// Product types in network
	ProductTypes []string `pulumi:"productTypes"`
	// Network device statuses
	Statuses GetSummaryTopNetworksByStatusItemStatuses `pulumi:"statuses"`
	// Network tags
	Tags []string `pulumi:"tags"`
	// Network clients list URL
	Url string `pulumi:"url"`
}

// GetSummaryTopNetworksByStatusItemInput is an input type that accepts GetSummaryTopNetworksByStatusItemArgs and GetSummaryTopNetworksByStatusItemOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemInput` via:
//
//	GetSummaryTopNetworksByStatusItemArgs{...}
type GetSummaryTopNetworksByStatusItemInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemOutput() GetSummaryTopNetworksByStatusItemOutput
	ToGetSummaryTopNetworksByStatusItemOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemOutput
}

type GetSummaryTopNetworksByStatusItemArgs struct {
	// Network clients data
	Clients GetSummaryTopNetworksByStatusItemClientsInput `pulumi:"clients"`
	// Network device information
	Devices GetSummaryTopNetworksByStatusItemDevicesInput `pulumi:"devices"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
	// Network identifier
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Product types in network
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Network device statuses
	Statuses GetSummaryTopNetworksByStatusItemStatusesInput `pulumi:"statuses"`
	// Network tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Network clients list URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetSummaryTopNetworksByStatusItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItem)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemArgs) ToGetSummaryTopNetworksByStatusItemOutput() GetSummaryTopNetworksByStatusItemOutput {
	return i.ToGetSummaryTopNetworksByStatusItemOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemArgs) ToGetSummaryTopNetworksByStatusItemOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemOutput)
}

// GetSummaryTopNetworksByStatusItemArrayInput is an input type that accepts GetSummaryTopNetworksByStatusItemArray and GetSummaryTopNetworksByStatusItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemArrayInput` via:
//
//	GetSummaryTopNetworksByStatusItemArray{ GetSummaryTopNetworksByStatusItemArgs{...} }
type GetSummaryTopNetworksByStatusItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemArrayOutput() GetSummaryTopNetworksByStatusItemArrayOutput
	ToGetSummaryTopNetworksByStatusItemArrayOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemArrayOutput
}

type GetSummaryTopNetworksByStatusItemArray []GetSummaryTopNetworksByStatusItemInput

func (GetSummaryTopNetworksByStatusItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItem)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemArray) ToGetSummaryTopNetworksByStatusItemArrayOutput() GetSummaryTopNetworksByStatusItemArrayOutput {
	return i.ToGetSummaryTopNetworksByStatusItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemArray) ToGetSummaryTopNetworksByStatusItemArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemArrayOutput)
}

type GetSummaryTopNetworksByStatusItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItem)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemOutput) ToGetSummaryTopNetworksByStatusItemOutput() GetSummaryTopNetworksByStatusItemOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemOutput) ToGetSummaryTopNetworksByStatusItemOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemOutput {
	return o
}

// Network clients data
func (o GetSummaryTopNetworksByStatusItemOutput) Clients() GetSummaryTopNetworksByStatusItemClientsOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) GetSummaryTopNetworksByStatusItemClients { return v.Clients }).(GetSummaryTopNetworksByStatusItemClientsOutput)
}

// Network device information
func (o GetSummaryTopNetworksByStatusItemOutput) Devices() GetSummaryTopNetworksByStatusItemDevicesOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) GetSummaryTopNetworksByStatusItemDevices { return v.Devices }).(GetSummaryTopNetworksByStatusItemDevicesOutput)
}

// Network name
func (o GetSummaryTopNetworksByStatusItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network identifier
func (o GetSummaryTopNetworksByStatusItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Product types in network
func (o GetSummaryTopNetworksByStatusItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Network device statuses
func (o GetSummaryTopNetworksByStatusItemOutput) Statuses() GetSummaryTopNetworksByStatusItemStatusesOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) GetSummaryTopNetworksByStatusItemStatuses { return v.Statuses }).(GetSummaryTopNetworksByStatusItemStatusesOutput)
}

// Network tags
func (o GetSummaryTopNetworksByStatusItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Network clients list URL
func (o GetSummaryTopNetworksByStatusItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetSummaryTopNetworksByStatusItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItem)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemArrayOutput) ToGetSummaryTopNetworksByStatusItemArrayOutput() GetSummaryTopNetworksByStatusItemArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemArrayOutput) ToGetSummaryTopNetworksByStatusItemArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopNetworksByStatusItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopNetworksByStatusItem {
		return vs[0].([]GetSummaryTopNetworksByStatusItem)[vs[1].(int)]
	}).(GetSummaryTopNetworksByStatusItemOutput)
}

type GetSummaryTopNetworksByStatusItemClients struct {
	// Network client counts
	Counts GetSummaryTopNetworksByStatusItemClientsCounts `pulumi:"counts"`
	// Network client usage data
	Usage GetSummaryTopNetworksByStatusItemClientsUsage `pulumi:"usage"`
}

// GetSummaryTopNetworksByStatusItemClientsInput is an input type that accepts GetSummaryTopNetworksByStatusItemClientsArgs and GetSummaryTopNetworksByStatusItemClientsOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemClientsInput` via:
//
//	GetSummaryTopNetworksByStatusItemClientsArgs{...}
type GetSummaryTopNetworksByStatusItemClientsInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemClientsOutput() GetSummaryTopNetworksByStatusItemClientsOutput
	ToGetSummaryTopNetworksByStatusItemClientsOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemClientsOutput
}

type GetSummaryTopNetworksByStatusItemClientsArgs struct {
	// Network client counts
	Counts GetSummaryTopNetworksByStatusItemClientsCountsInput `pulumi:"counts"`
	// Network client usage data
	Usage GetSummaryTopNetworksByStatusItemClientsUsageInput `pulumi:"usage"`
}

func (GetSummaryTopNetworksByStatusItemClientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClients)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemClientsArgs) ToGetSummaryTopNetworksByStatusItemClientsOutput() GetSummaryTopNetworksByStatusItemClientsOutput {
	return i.ToGetSummaryTopNetworksByStatusItemClientsOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemClientsArgs) ToGetSummaryTopNetworksByStatusItemClientsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemClientsOutput)
}

type GetSummaryTopNetworksByStatusItemClientsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemClientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClients)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemClientsOutput) ToGetSummaryTopNetworksByStatusItemClientsOutput() GetSummaryTopNetworksByStatusItemClientsOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemClientsOutput) ToGetSummaryTopNetworksByStatusItemClientsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsOutput {
	return o
}

// Network client counts
func (o GetSummaryTopNetworksByStatusItemClientsOutput) Counts() GetSummaryTopNetworksByStatusItemClientsCountsOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemClients) GetSummaryTopNetworksByStatusItemClientsCounts {
		return v.Counts
	}).(GetSummaryTopNetworksByStatusItemClientsCountsOutput)
}

// Network client usage data
func (o GetSummaryTopNetworksByStatusItemClientsOutput) Usage() GetSummaryTopNetworksByStatusItemClientsUsageOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemClients) GetSummaryTopNetworksByStatusItemClientsUsage {
		return v.Usage
	}).(GetSummaryTopNetworksByStatusItemClientsUsageOutput)
}

type GetSummaryTopNetworksByStatusItemClientsCounts struct {
	// Total count of clients in network
	Total int `pulumi:"total"`
}

// GetSummaryTopNetworksByStatusItemClientsCountsInput is an input type that accepts GetSummaryTopNetworksByStatusItemClientsCountsArgs and GetSummaryTopNetworksByStatusItemClientsCountsOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemClientsCountsInput` via:
//
//	GetSummaryTopNetworksByStatusItemClientsCountsArgs{...}
type GetSummaryTopNetworksByStatusItemClientsCountsInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemClientsCountsOutput() GetSummaryTopNetworksByStatusItemClientsCountsOutput
	ToGetSummaryTopNetworksByStatusItemClientsCountsOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemClientsCountsOutput
}

type GetSummaryTopNetworksByStatusItemClientsCountsArgs struct {
	// Total count of clients in network
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSummaryTopNetworksByStatusItemClientsCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsCounts)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemClientsCountsArgs) ToGetSummaryTopNetworksByStatusItemClientsCountsOutput() GetSummaryTopNetworksByStatusItemClientsCountsOutput {
	return i.ToGetSummaryTopNetworksByStatusItemClientsCountsOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemClientsCountsArgs) ToGetSummaryTopNetworksByStatusItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemClientsCountsOutput)
}

type GetSummaryTopNetworksByStatusItemClientsCountsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemClientsCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsCounts)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemClientsCountsOutput) ToGetSummaryTopNetworksByStatusItemClientsCountsOutput() GetSummaryTopNetworksByStatusItemClientsCountsOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemClientsCountsOutput) ToGetSummaryTopNetworksByStatusItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsCountsOutput {
	return o
}

// Total count of clients in network
func (o GetSummaryTopNetworksByStatusItemClientsCountsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemClientsCounts) int { return v.Total }).(pulumi.IntOutput)
}

type GetSummaryTopNetworksByStatusItemClientsUsage struct {
	// Total downstream usage in network, in KB
	Downstream float64 `pulumi:"downstream"`
	// Total upstream usage in network, in KB
	Upstream float64 `pulumi:"upstream"`
}

// GetSummaryTopNetworksByStatusItemClientsUsageInput is an input type that accepts GetSummaryTopNetworksByStatusItemClientsUsageArgs and GetSummaryTopNetworksByStatusItemClientsUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemClientsUsageInput` via:
//
//	GetSummaryTopNetworksByStatusItemClientsUsageArgs{...}
type GetSummaryTopNetworksByStatusItemClientsUsageInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemClientsUsageOutput() GetSummaryTopNetworksByStatusItemClientsUsageOutput
	ToGetSummaryTopNetworksByStatusItemClientsUsageOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemClientsUsageOutput
}

type GetSummaryTopNetworksByStatusItemClientsUsageArgs struct {
	// Total downstream usage in network, in KB
	Downstream pulumi.Float64Input `pulumi:"downstream"`
	// Total upstream usage in network, in KB
	Upstream pulumi.Float64Input `pulumi:"upstream"`
}

func (GetSummaryTopNetworksByStatusItemClientsUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsUsage)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemClientsUsageArgs) ToGetSummaryTopNetworksByStatusItemClientsUsageOutput() GetSummaryTopNetworksByStatusItemClientsUsageOutput {
	return i.ToGetSummaryTopNetworksByStatusItemClientsUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemClientsUsageArgs) ToGetSummaryTopNetworksByStatusItemClientsUsageOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemClientsUsageOutput)
}

type GetSummaryTopNetworksByStatusItemClientsUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemClientsUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsUsage)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemClientsUsageOutput) ToGetSummaryTopNetworksByStatusItemClientsUsageOutput() GetSummaryTopNetworksByStatusItemClientsUsageOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemClientsUsageOutput) ToGetSummaryTopNetworksByStatusItemClientsUsageOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemClientsUsageOutput {
	return o
}

// Total downstream usage in network, in KB
func (o GetSummaryTopNetworksByStatusItemClientsUsageOutput) Downstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemClientsUsage) float64 { return v.Downstream }).(pulumi.Float64Output)
}

// Total upstream usage in network, in KB
func (o GetSummaryTopNetworksByStatusItemClientsUsageOutput) Upstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemClientsUsage) float64 { return v.Upstream }).(pulumi.Float64Output)
}

type GetSummaryTopNetworksByStatusItemDevices struct {
	// URLs by product type
	ByProductTypes []GetSummaryTopNetworksByStatusItemDevicesByProductType `pulumi:"byProductTypes"`
}

// GetSummaryTopNetworksByStatusItemDevicesInput is an input type that accepts GetSummaryTopNetworksByStatusItemDevicesArgs and GetSummaryTopNetworksByStatusItemDevicesOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemDevicesInput` via:
//
//	GetSummaryTopNetworksByStatusItemDevicesArgs{...}
type GetSummaryTopNetworksByStatusItemDevicesInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemDevicesOutput() GetSummaryTopNetworksByStatusItemDevicesOutput
	ToGetSummaryTopNetworksByStatusItemDevicesOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemDevicesOutput
}

type GetSummaryTopNetworksByStatusItemDevicesArgs struct {
	// URLs by product type
	ByProductTypes GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayInput `pulumi:"byProductTypes"`
}

func (GetSummaryTopNetworksByStatusItemDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevices)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemDevicesArgs) ToGetSummaryTopNetworksByStatusItemDevicesOutput() GetSummaryTopNetworksByStatusItemDevicesOutput {
	return i.ToGetSummaryTopNetworksByStatusItemDevicesOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemDevicesArgs) ToGetSummaryTopNetworksByStatusItemDevicesOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemDevicesOutput)
}

type GetSummaryTopNetworksByStatusItemDevicesOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevices)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemDevicesOutput) ToGetSummaryTopNetworksByStatusItemDevicesOutput() GetSummaryTopNetworksByStatusItemDevicesOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemDevicesOutput) ToGetSummaryTopNetworksByStatusItemDevicesOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesOutput {
	return o
}

// URLs by product type
func (o GetSummaryTopNetworksByStatusItemDevicesOutput) ByProductTypes() GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemDevices) []GetSummaryTopNetworksByStatusItemDevicesByProductType {
		return v.ByProductTypes
	}).(GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput)
}

type GetSummaryTopNetworksByStatusItemDevicesByProductType struct {
	// Product type
	ProductType string `pulumi:"productType"`
	// URL to clients list for the relevant product type
	Url string `pulumi:"url"`
}

// GetSummaryTopNetworksByStatusItemDevicesByProductTypeInput is an input type that accepts GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs and GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemDevicesByProductTypeInput` via:
//
//	GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs{...}
type GetSummaryTopNetworksByStatusItemDevicesByProductTypeInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput
	ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput
}

type GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs struct {
	// Product type
	ProductType pulumi.StringInput `pulumi:"productType"`
	// URL to clients list for the relevant product type
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevicesByProductType)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput {
	return i.ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput)
}

// GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayInput is an input type that accepts GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray and GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayInput` via:
//
//	GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray{ GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs{...} }
type GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput
	ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput
}

type GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray []GetSummaryTopNetworksByStatusItemDevicesByProductTypeInput

func (GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItemDevicesByProductType)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput {
	return i.ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput)
}

type GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevicesByProductType)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput {
	return o
}

// Product type
func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemDevicesByProductType) string { return v.ProductType }).(pulumi.StringOutput)
}

// URL to clients list for the relevant product type
func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemDevicesByProductType) string { return v.Url }).(pulumi.StringOutput)
}

type GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItemDevicesByProductType)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput) ToGetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput) Index(i pulumi.IntInput) GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopNetworksByStatusItemDevicesByProductType {
		return vs[0].([]GetSummaryTopNetworksByStatusItemDevicesByProductType)[vs[1].(int)]
	}).(GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput)
}

type GetSummaryTopNetworksByStatusItemStatuses struct {
	// List of status counts by product type
	ByProductTypes []GetSummaryTopNetworksByStatusItemStatusesByProductType `pulumi:"byProductTypes"`
	// Overall status of network
	Overall string `pulumi:"overall"`
}

// GetSummaryTopNetworksByStatusItemStatusesInput is an input type that accepts GetSummaryTopNetworksByStatusItemStatusesArgs and GetSummaryTopNetworksByStatusItemStatusesOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemStatusesInput` via:
//
//	GetSummaryTopNetworksByStatusItemStatusesArgs{...}
type GetSummaryTopNetworksByStatusItemStatusesInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemStatusesOutput() GetSummaryTopNetworksByStatusItemStatusesOutput
	ToGetSummaryTopNetworksByStatusItemStatusesOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemStatusesOutput
}

type GetSummaryTopNetworksByStatusItemStatusesArgs struct {
	// List of status counts by product type
	ByProductTypes GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayInput `pulumi:"byProductTypes"`
	// Overall status of network
	Overall pulumi.StringInput `pulumi:"overall"`
}

func (GetSummaryTopNetworksByStatusItemStatusesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatuses)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemStatusesArgs) ToGetSummaryTopNetworksByStatusItemStatusesOutput() GetSummaryTopNetworksByStatusItemStatusesOutput {
	return i.ToGetSummaryTopNetworksByStatusItemStatusesOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemStatusesArgs) ToGetSummaryTopNetworksByStatusItemStatusesOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemStatusesOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemStatusesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatuses)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemStatusesOutput) ToGetSummaryTopNetworksByStatusItemStatusesOutput() GetSummaryTopNetworksByStatusItemStatusesOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemStatusesOutput) ToGetSummaryTopNetworksByStatusItemStatusesOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesOutput {
	return o
}

// List of status counts by product type
func (o GetSummaryTopNetworksByStatusItemStatusesOutput) ByProductTypes() GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatuses) []GetSummaryTopNetworksByStatusItemStatusesByProductType {
		return v.ByProductTypes
	}).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput)
}

// Overall status of network
func (o GetSummaryTopNetworksByStatusItemStatusesOutput) Overall() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatuses) string { return v.Overall }).(pulumi.StringOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesByProductType struct {
	// Counts of devices by status
	Counts GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts `pulumi:"counts"`
	// Product type
	ProductType string `pulumi:"productType"`
}

// GetSummaryTopNetworksByStatusItemStatusesByProductTypeInput is an input type that accepts GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs and GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemStatusesByProductTypeInput` via:
//
//	GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs{...}
type GetSummaryTopNetworksByStatusItemStatusesByProductTypeInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput
	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs struct {
	// Counts of devices by status
	Counts GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsInput `pulumi:"counts"`
	// Product type
	ProductType pulumi.StringInput `pulumi:"productType"`
}

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductType)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput {
	return i.ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput)
}

// GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayInput is an input type that accepts GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray and GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayInput` via:
//
//	GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray{ GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs{...} }
type GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput
	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray []GetSummaryTopNetworksByStatusItemStatusesByProductTypeInput

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItemStatusesByProductType)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput {
	return i.ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductType)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput {
	return o
}

// Counts of devices by status
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput) Counts() GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductType) GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts {
		return v.Counts
	}).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput)
}

// Product type
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductType) string { return v.ProductType }).(pulumi.StringOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopNetworksByStatusItemStatusesByProductType)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput) Index(i pulumi.IntInput) GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopNetworksByStatusItemStatusesByProductType {
		return vs[0].([]GetSummaryTopNetworksByStatusItemStatusesByProductType)[vs[1].(int)]
	}).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts struct {
	// Count of alerting devices
	Alerting int `pulumi:"alerting"`
	// Count of dormant devices
	Dormant int `pulumi:"dormant"`
	// Count of offline devices
	Offline int `pulumi:"offline"`
	// Count of online devices
	Online int `pulumi:"online"`
}

// GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsInput is an input type that accepts GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs and GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput values.
// You can construct a concrete instance of `GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsInput` via:
//
//	GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs{...}
type GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsInput interface {
	pulumi.Input

	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput
	ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutputWithContext(context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs struct {
	// Count of alerting devices
	Alerting pulumi.IntInput `pulumi:"alerting"`
	// Count of dormant devices
	Dormant pulumi.IntInput `pulumi:"dormant"`
	// Count of offline devices
	Offline pulumi.IntInput `pulumi:"offline"`
	// Count of online devices
	Online pulumi.IntInput `pulumi:"online"`
}

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts)(nil)).Elem()
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput {
	return i.ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutputWithContext(context.Background())
}

func (i GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput)
}

type GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts)(nil)).Elem()
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput() GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput {
	return o
}

func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) ToGetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutputWithContext(ctx context.Context) GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput {
	return o
}

// Count of alerting devices
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) Alerting() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts) int { return v.Alerting }).(pulumi.IntOutput)
}

// Count of dormant devices
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) Dormant() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts) int { return v.Dormant }).(pulumi.IntOutput)
}

// Count of offline devices
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) Offline() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts) int { return v.Offline }).(pulumi.IntOutput)
}

// Count of online devices
func (o GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput) Online() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopNetworksByStatusItemStatusesByProductTypeCounts) int { return v.Online }).(pulumi.IntOutput)
}

type GetSummaryTopSsidsByUsageItem struct {
	// Clients info of the SSID
	Clients GetSummaryTopSsidsByUsageItemClients `pulumi:"clients"`
	// Name of the SSID
	Name string `pulumi:"name"`
	// Date usage of the SSID, in megabytes
	Usage GetSummaryTopSsidsByUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopSsidsByUsageItemInput is an input type that accepts GetSummaryTopSsidsByUsageItemArgs and GetSummaryTopSsidsByUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopSsidsByUsageItemInput` via:
//
//	GetSummaryTopSsidsByUsageItemArgs{...}
type GetSummaryTopSsidsByUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopSsidsByUsageItemOutput() GetSummaryTopSsidsByUsageItemOutput
	ToGetSummaryTopSsidsByUsageItemOutputWithContext(context.Context) GetSummaryTopSsidsByUsageItemOutput
}

type GetSummaryTopSsidsByUsageItemArgs struct {
	// Clients info of the SSID
	Clients GetSummaryTopSsidsByUsageItemClientsInput `pulumi:"clients"`
	// Name of the SSID
	Name pulumi.StringInput `pulumi:"name"`
	// Date usage of the SSID, in megabytes
	Usage GetSummaryTopSsidsByUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopSsidsByUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopSsidsByUsageItemArgs) ToGetSummaryTopSsidsByUsageItemOutput() GetSummaryTopSsidsByUsageItemOutput {
	return i.ToGetSummaryTopSsidsByUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopSsidsByUsageItemArgs) ToGetSummaryTopSsidsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSsidsByUsageItemOutput)
}

// GetSummaryTopSsidsByUsageItemArrayInput is an input type that accepts GetSummaryTopSsidsByUsageItemArray and GetSummaryTopSsidsByUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopSsidsByUsageItemArrayInput` via:
//
//	GetSummaryTopSsidsByUsageItemArray{ GetSummaryTopSsidsByUsageItemArgs{...} }
type GetSummaryTopSsidsByUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopSsidsByUsageItemArrayOutput() GetSummaryTopSsidsByUsageItemArrayOutput
	ToGetSummaryTopSsidsByUsageItemArrayOutputWithContext(context.Context) GetSummaryTopSsidsByUsageItemArrayOutput
}

type GetSummaryTopSsidsByUsageItemArray []GetSummaryTopSsidsByUsageItemInput

func (GetSummaryTopSsidsByUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopSsidsByUsageItem)(nil)).Elem()
}

func (i GetSummaryTopSsidsByUsageItemArray) ToGetSummaryTopSsidsByUsageItemArrayOutput() GetSummaryTopSsidsByUsageItemArrayOutput {
	return i.ToGetSummaryTopSsidsByUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopSsidsByUsageItemArray) ToGetSummaryTopSsidsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSsidsByUsageItemArrayOutput)
}

type GetSummaryTopSsidsByUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSsidsByUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopSsidsByUsageItemOutput) ToGetSummaryTopSsidsByUsageItemOutput() GetSummaryTopSsidsByUsageItemOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemOutput) ToGetSummaryTopSsidsByUsageItemOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemOutput {
	return o
}

// Clients info of the SSID
func (o GetSummaryTopSsidsByUsageItemOutput) Clients() GetSummaryTopSsidsByUsageItemClientsOutput {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItem) GetSummaryTopSsidsByUsageItemClients { return v.Clients }).(GetSummaryTopSsidsByUsageItemClientsOutput)
}

// Name of the SSID
func (o GetSummaryTopSsidsByUsageItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItem) string { return v.Name }).(pulumi.StringOutput)
}

// Date usage of the SSID, in megabytes
func (o GetSummaryTopSsidsByUsageItemOutput) Usage() GetSummaryTopSsidsByUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItem) GetSummaryTopSsidsByUsageItemUsage { return v.Usage }).(GetSummaryTopSsidsByUsageItemUsageOutput)
}

type GetSummaryTopSsidsByUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSsidsByUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopSsidsByUsageItem)(nil)).Elem()
}

func (o GetSummaryTopSsidsByUsageItemArrayOutput) ToGetSummaryTopSsidsByUsageItemArrayOutput() GetSummaryTopSsidsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemArrayOutput) ToGetSummaryTopSsidsByUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopSsidsByUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopSsidsByUsageItem {
		return vs[0].([]GetSummaryTopSsidsByUsageItem)[vs[1].(int)]
	}).(GetSummaryTopSsidsByUsageItemOutput)
}

type GetSummaryTopSsidsByUsageItemClients struct {
	// Counts of the clients
	Counts GetSummaryTopSsidsByUsageItemClientsCounts `pulumi:"counts"`
}

// GetSummaryTopSsidsByUsageItemClientsInput is an input type that accepts GetSummaryTopSsidsByUsageItemClientsArgs and GetSummaryTopSsidsByUsageItemClientsOutput values.
// You can construct a concrete instance of `GetSummaryTopSsidsByUsageItemClientsInput` via:
//
//	GetSummaryTopSsidsByUsageItemClientsArgs{...}
type GetSummaryTopSsidsByUsageItemClientsInput interface {
	pulumi.Input

	ToGetSummaryTopSsidsByUsageItemClientsOutput() GetSummaryTopSsidsByUsageItemClientsOutput
	ToGetSummaryTopSsidsByUsageItemClientsOutputWithContext(context.Context) GetSummaryTopSsidsByUsageItemClientsOutput
}

type GetSummaryTopSsidsByUsageItemClientsArgs struct {
	// Counts of the clients
	Counts GetSummaryTopSsidsByUsageItemClientsCountsInput `pulumi:"counts"`
}

func (GetSummaryTopSsidsByUsageItemClientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClients)(nil)).Elem()
}

func (i GetSummaryTopSsidsByUsageItemClientsArgs) ToGetSummaryTopSsidsByUsageItemClientsOutput() GetSummaryTopSsidsByUsageItemClientsOutput {
	return i.ToGetSummaryTopSsidsByUsageItemClientsOutputWithContext(context.Background())
}

func (i GetSummaryTopSsidsByUsageItemClientsArgs) ToGetSummaryTopSsidsByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemClientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSsidsByUsageItemClientsOutput)
}

type GetSummaryTopSsidsByUsageItemClientsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSsidsByUsageItemClientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClients)(nil)).Elem()
}

func (o GetSummaryTopSsidsByUsageItemClientsOutput) ToGetSummaryTopSsidsByUsageItemClientsOutput() GetSummaryTopSsidsByUsageItemClientsOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemClientsOutput) ToGetSummaryTopSsidsByUsageItemClientsOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemClientsOutput {
	return o
}

// Counts of the clients
func (o GetSummaryTopSsidsByUsageItemClientsOutput) Counts() GetSummaryTopSsidsByUsageItemClientsCountsOutput {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemClients) GetSummaryTopSsidsByUsageItemClientsCounts {
		return v.Counts
	}).(GetSummaryTopSsidsByUsageItemClientsCountsOutput)
}

type GetSummaryTopSsidsByUsageItemClientsCounts struct {
	// Total counts of the clients
	Total int `pulumi:"total"`
}

// GetSummaryTopSsidsByUsageItemClientsCountsInput is an input type that accepts GetSummaryTopSsidsByUsageItemClientsCountsArgs and GetSummaryTopSsidsByUsageItemClientsCountsOutput values.
// You can construct a concrete instance of `GetSummaryTopSsidsByUsageItemClientsCountsInput` via:
//
//	GetSummaryTopSsidsByUsageItemClientsCountsArgs{...}
type GetSummaryTopSsidsByUsageItemClientsCountsInput interface {
	pulumi.Input

	ToGetSummaryTopSsidsByUsageItemClientsCountsOutput() GetSummaryTopSsidsByUsageItemClientsCountsOutput
	ToGetSummaryTopSsidsByUsageItemClientsCountsOutputWithContext(context.Context) GetSummaryTopSsidsByUsageItemClientsCountsOutput
}

type GetSummaryTopSsidsByUsageItemClientsCountsArgs struct {
	// Total counts of the clients
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSummaryTopSsidsByUsageItemClientsCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClientsCounts)(nil)).Elem()
}

func (i GetSummaryTopSsidsByUsageItemClientsCountsArgs) ToGetSummaryTopSsidsByUsageItemClientsCountsOutput() GetSummaryTopSsidsByUsageItemClientsCountsOutput {
	return i.ToGetSummaryTopSsidsByUsageItemClientsCountsOutputWithContext(context.Background())
}

func (i GetSummaryTopSsidsByUsageItemClientsCountsArgs) ToGetSummaryTopSsidsByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemClientsCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSsidsByUsageItemClientsCountsOutput)
}

type GetSummaryTopSsidsByUsageItemClientsCountsOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSsidsByUsageItemClientsCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClientsCounts)(nil)).Elem()
}

func (o GetSummaryTopSsidsByUsageItemClientsCountsOutput) ToGetSummaryTopSsidsByUsageItemClientsCountsOutput() GetSummaryTopSsidsByUsageItemClientsCountsOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemClientsCountsOutput) ToGetSummaryTopSsidsByUsageItemClientsCountsOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemClientsCountsOutput {
	return o
}

// Total counts of the clients
func (o GetSummaryTopSsidsByUsageItemClientsCountsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemClientsCounts) int { return v.Total }).(pulumi.IntOutput)
}

type GetSummaryTopSsidsByUsageItemUsage struct {
	// Downstream usage of the SSID
	Downstream float64 `pulumi:"downstream"`
	// Percentage usage of the SSID
	Percentage float64 `pulumi:"percentage"`
	// Total usage of the SSID
	Total float64 `pulumi:"total"`
	// Upstream usage of the SSID
	Upstream float64 `pulumi:"upstream"`
}

// GetSummaryTopSsidsByUsageItemUsageInput is an input type that accepts GetSummaryTopSsidsByUsageItemUsageArgs and GetSummaryTopSsidsByUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopSsidsByUsageItemUsageInput` via:
//
//	GetSummaryTopSsidsByUsageItemUsageArgs{...}
type GetSummaryTopSsidsByUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopSsidsByUsageItemUsageOutput() GetSummaryTopSsidsByUsageItemUsageOutput
	ToGetSummaryTopSsidsByUsageItemUsageOutputWithContext(context.Context) GetSummaryTopSsidsByUsageItemUsageOutput
}

type GetSummaryTopSsidsByUsageItemUsageArgs struct {
	// Downstream usage of the SSID
	Downstream pulumi.Float64Input `pulumi:"downstream"`
	// Percentage usage of the SSID
	Percentage pulumi.Float64Input `pulumi:"percentage"`
	// Total usage of the SSID
	Total pulumi.Float64Input `pulumi:"total"`
	// Upstream usage of the SSID
	Upstream pulumi.Float64Input `pulumi:"upstream"`
}

func (GetSummaryTopSsidsByUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopSsidsByUsageItemUsageArgs) ToGetSummaryTopSsidsByUsageItemUsageOutput() GetSummaryTopSsidsByUsageItemUsageOutput {
	return i.ToGetSummaryTopSsidsByUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopSsidsByUsageItemUsageArgs) ToGetSummaryTopSsidsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSsidsByUsageItemUsageOutput)
}

type GetSummaryTopSsidsByUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSsidsByUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSsidsByUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopSsidsByUsageItemUsageOutput) ToGetSummaryTopSsidsByUsageItemUsageOutput() GetSummaryTopSsidsByUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopSsidsByUsageItemUsageOutput) ToGetSummaryTopSsidsByUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopSsidsByUsageItemUsageOutput {
	return o
}

// Downstream usage of the SSID
func (o GetSummaryTopSsidsByUsageItemUsageOutput) Downstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemUsage) float64 { return v.Downstream }).(pulumi.Float64Output)
}

// Percentage usage of the SSID
func (o GetSummaryTopSsidsByUsageItemUsageOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemUsage) float64 { return v.Percentage }).(pulumi.Float64Output)
}

// Total usage of the SSID
func (o GetSummaryTopSsidsByUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

// Upstream usage of the SSID
func (o GetSummaryTopSsidsByUsageItemUsageOutput) Upstream() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopSsidsByUsageItemUsage) float64 { return v.Upstream }).(pulumi.Float64Output)
}

type GetSummaryTopSwitchesByEnergyUsageItem struct {
	// Mac address of the switch
	Mac string `pulumi:"mac"`
	// Model of the switch
	Model string `pulumi:"model"`
	// Name of the switch
	Name string `pulumi:"name"`
	// Network info
	Network GetSummaryTopSwitchesByEnergyUsageItemNetwork `pulumi:"network"`
	// Energy usage of the switch
	Usage GetSummaryTopSwitchesByEnergyUsageItemUsage `pulumi:"usage"`
}

// GetSummaryTopSwitchesByEnergyUsageItemInput is an input type that accepts GetSummaryTopSwitchesByEnergyUsageItemArgs and GetSummaryTopSwitchesByEnergyUsageItemOutput values.
// You can construct a concrete instance of `GetSummaryTopSwitchesByEnergyUsageItemInput` via:
//
//	GetSummaryTopSwitchesByEnergyUsageItemArgs{...}
type GetSummaryTopSwitchesByEnergyUsageItemInput interface {
	pulumi.Input

	ToGetSummaryTopSwitchesByEnergyUsageItemOutput() GetSummaryTopSwitchesByEnergyUsageItemOutput
	ToGetSummaryTopSwitchesByEnergyUsageItemOutputWithContext(context.Context) GetSummaryTopSwitchesByEnergyUsageItemOutput
}

type GetSummaryTopSwitchesByEnergyUsageItemArgs struct {
	// Mac address of the switch
	Mac pulumi.StringInput `pulumi:"mac"`
	// Model of the switch
	Model pulumi.StringInput `pulumi:"model"`
	// Name of the switch
	Name pulumi.StringInput `pulumi:"name"`
	// Network info
	Network GetSummaryTopSwitchesByEnergyUsageItemNetworkInput `pulumi:"network"`
	// Energy usage of the switch
	Usage GetSummaryTopSwitchesByEnergyUsageItemUsageInput `pulumi:"usage"`
}

func (GetSummaryTopSwitchesByEnergyUsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItem)(nil)).Elem()
}

func (i GetSummaryTopSwitchesByEnergyUsageItemArgs) ToGetSummaryTopSwitchesByEnergyUsageItemOutput() GetSummaryTopSwitchesByEnergyUsageItemOutput {
	return i.ToGetSummaryTopSwitchesByEnergyUsageItemOutputWithContext(context.Background())
}

func (i GetSummaryTopSwitchesByEnergyUsageItemArgs) ToGetSummaryTopSwitchesByEnergyUsageItemOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSwitchesByEnergyUsageItemOutput)
}

// GetSummaryTopSwitchesByEnergyUsageItemArrayInput is an input type that accepts GetSummaryTopSwitchesByEnergyUsageItemArray and GetSummaryTopSwitchesByEnergyUsageItemArrayOutput values.
// You can construct a concrete instance of `GetSummaryTopSwitchesByEnergyUsageItemArrayInput` via:
//
//	GetSummaryTopSwitchesByEnergyUsageItemArray{ GetSummaryTopSwitchesByEnergyUsageItemArgs{...} }
type GetSummaryTopSwitchesByEnergyUsageItemArrayInput interface {
	pulumi.Input

	ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutput() GetSummaryTopSwitchesByEnergyUsageItemArrayOutput
	ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutputWithContext(context.Context) GetSummaryTopSwitchesByEnergyUsageItemArrayOutput
}

type GetSummaryTopSwitchesByEnergyUsageItemArray []GetSummaryTopSwitchesByEnergyUsageItemInput

func (GetSummaryTopSwitchesByEnergyUsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopSwitchesByEnergyUsageItem)(nil)).Elem()
}

func (i GetSummaryTopSwitchesByEnergyUsageItemArray) ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutput() GetSummaryTopSwitchesByEnergyUsageItemArrayOutput {
	return i.ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutputWithContext(context.Background())
}

func (i GetSummaryTopSwitchesByEnergyUsageItemArray) ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSwitchesByEnergyUsageItemArrayOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSwitchesByEnergyUsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItem)(nil)).Elem()
}

func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) ToGetSummaryTopSwitchesByEnergyUsageItemOutput() GetSummaryTopSwitchesByEnergyUsageItemOutput {
	return o
}

func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) ToGetSummaryTopSwitchesByEnergyUsageItemOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemOutput {
	return o
}

// Mac address of the switch
func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Model of the switch
func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItem) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the switch
func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network info
func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) Network() GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItem) GetSummaryTopSwitchesByEnergyUsageItemNetwork {
		return v.Network
	}).(GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput)
}

// Energy usage of the switch
func (o GetSummaryTopSwitchesByEnergyUsageItemOutput) Usage() GetSummaryTopSwitchesByEnergyUsageItemUsageOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItem) GetSummaryTopSwitchesByEnergyUsageItemUsage {
		return v.Usage
	}).(GetSummaryTopSwitchesByEnergyUsageItemUsageOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemArrayOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSwitchesByEnergyUsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSummaryTopSwitchesByEnergyUsageItem)(nil)).Elem()
}

func (o GetSummaryTopSwitchesByEnergyUsageItemArrayOutput) ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutput() GetSummaryTopSwitchesByEnergyUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopSwitchesByEnergyUsageItemArrayOutput) ToGetSummaryTopSwitchesByEnergyUsageItemArrayOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemArrayOutput {
	return o
}

func (o GetSummaryTopSwitchesByEnergyUsageItemArrayOutput) Index(i pulumi.IntInput) GetSummaryTopSwitchesByEnergyUsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSummaryTopSwitchesByEnergyUsageItem {
		return vs[0].([]GetSummaryTopSwitchesByEnergyUsageItem)[vs[1].(int)]
	}).(GetSummaryTopSwitchesByEnergyUsageItemOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemNetwork struct {
	// Network id
	Id string `pulumi:"id"`
	// Network name
	Name string `pulumi:"name"`
}

// GetSummaryTopSwitchesByEnergyUsageItemNetworkInput is an input type that accepts GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs and GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput values.
// You can construct a concrete instance of `GetSummaryTopSwitchesByEnergyUsageItemNetworkInput` via:
//
//	GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs{...}
type GetSummaryTopSwitchesByEnergyUsageItemNetworkInput interface {
	pulumi.Input

	ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutput() GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput
	ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutputWithContext(context.Context) GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput
}

type GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs struct {
	// Network id
	Id pulumi.StringInput `pulumi:"id"`
	// Network name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemNetwork)(nil)).Elem()
}

func (i GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs) ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutput() GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput {
	return i.ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutputWithContext(context.Background())
}

func (i GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs) ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemNetwork)(nil)).Elem()
}

func (o GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput) ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutput() GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput {
	return o
}

func (o GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput) ToGetSummaryTopSwitchesByEnergyUsageItemNetworkOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput {
	return o
}

// Network id
func (o GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Network name
func (o GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemUsage struct {
	// Total energy usage of the switch
	Total float64 `pulumi:"total"`
}

// GetSummaryTopSwitchesByEnergyUsageItemUsageInput is an input type that accepts GetSummaryTopSwitchesByEnergyUsageItemUsageArgs and GetSummaryTopSwitchesByEnergyUsageItemUsageOutput values.
// You can construct a concrete instance of `GetSummaryTopSwitchesByEnergyUsageItemUsageInput` via:
//
//	GetSummaryTopSwitchesByEnergyUsageItemUsageArgs{...}
type GetSummaryTopSwitchesByEnergyUsageItemUsageInput interface {
	pulumi.Input

	ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutput() GetSummaryTopSwitchesByEnergyUsageItemUsageOutput
	ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutputWithContext(context.Context) GetSummaryTopSwitchesByEnergyUsageItemUsageOutput
}

type GetSummaryTopSwitchesByEnergyUsageItemUsageArgs struct {
	// Total energy usage of the switch
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetSummaryTopSwitchesByEnergyUsageItemUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemUsage)(nil)).Elem()
}

func (i GetSummaryTopSwitchesByEnergyUsageItemUsageArgs) ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutput() GetSummaryTopSwitchesByEnergyUsageItemUsageOutput {
	return i.ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutputWithContext(context.Background())
}

func (i GetSummaryTopSwitchesByEnergyUsageItemUsageArgs) ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSummaryTopSwitchesByEnergyUsageItemUsageOutput)
}

type GetSummaryTopSwitchesByEnergyUsageItemUsageOutput struct{ *pulumi.OutputState }

func (GetSummaryTopSwitchesByEnergyUsageItemUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemUsage)(nil)).Elem()
}

func (o GetSummaryTopSwitchesByEnergyUsageItemUsageOutput) ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutput() GetSummaryTopSwitchesByEnergyUsageItemUsageOutput {
	return o
}

func (o GetSummaryTopSwitchesByEnergyUsageItemUsageOutput) ToGetSummaryTopSwitchesByEnergyUsageItemUsageOutputWithContext(ctx context.Context) GetSummaryTopSwitchesByEnergyUsageItemUsageOutput {
	return o
}

// Total energy usage of the switch
func (o GetSummaryTopSwitchesByEnergyUsageItemUsageOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSummaryTopSwitchesByEnergyUsageItemUsage) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetSwitchPortsBySwitchItem struct {
	// The MAC address of the switch.
	Mac string `pulumi:"mac"`
	// The model of the switch.
	Model string `pulumi:"model"`
	// The name of the switch.
	Name string `pulumi:"name"`
	// Identifying information of the switch's network.
	Network GetSwitchPortsBySwitchItemNetwork `pulumi:"network"`
	// Ports belonging to the switch
	Ports []GetSwitchPortsBySwitchItemPort `pulumi:"ports"`
	// The serial number of the switch.
	Serial string `pulumi:"serial"`
}

// GetSwitchPortsBySwitchItemInput is an input type that accepts GetSwitchPortsBySwitchItemArgs and GetSwitchPortsBySwitchItemOutput values.
// You can construct a concrete instance of `GetSwitchPortsBySwitchItemInput` via:
//
//	GetSwitchPortsBySwitchItemArgs{...}
type GetSwitchPortsBySwitchItemInput interface {
	pulumi.Input

	ToGetSwitchPortsBySwitchItemOutput() GetSwitchPortsBySwitchItemOutput
	ToGetSwitchPortsBySwitchItemOutputWithContext(context.Context) GetSwitchPortsBySwitchItemOutput
}

type GetSwitchPortsBySwitchItemArgs struct {
	// The MAC address of the switch.
	Mac pulumi.StringInput `pulumi:"mac"`
	// The model of the switch.
	Model pulumi.StringInput `pulumi:"model"`
	// The name of the switch.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifying information of the switch's network.
	Network GetSwitchPortsBySwitchItemNetworkInput `pulumi:"network"`
	// Ports belonging to the switch
	Ports GetSwitchPortsBySwitchItemPortArrayInput `pulumi:"ports"`
	// The serial number of the switch.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetSwitchPortsBySwitchItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItem)(nil)).Elem()
}

func (i GetSwitchPortsBySwitchItemArgs) ToGetSwitchPortsBySwitchItemOutput() GetSwitchPortsBySwitchItemOutput {
	return i.ToGetSwitchPortsBySwitchItemOutputWithContext(context.Background())
}

func (i GetSwitchPortsBySwitchItemArgs) ToGetSwitchPortsBySwitchItemOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsBySwitchItemOutput)
}

// GetSwitchPortsBySwitchItemArrayInput is an input type that accepts GetSwitchPortsBySwitchItemArray and GetSwitchPortsBySwitchItemArrayOutput values.
// You can construct a concrete instance of `GetSwitchPortsBySwitchItemArrayInput` via:
//
//	GetSwitchPortsBySwitchItemArray{ GetSwitchPortsBySwitchItemArgs{...} }
type GetSwitchPortsBySwitchItemArrayInput interface {
	pulumi.Input

	ToGetSwitchPortsBySwitchItemArrayOutput() GetSwitchPortsBySwitchItemArrayOutput
	ToGetSwitchPortsBySwitchItemArrayOutputWithContext(context.Context) GetSwitchPortsBySwitchItemArrayOutput
}

type GetSwitchPortsBySwitchItemArray []GetSwitchPortsBySwitchItemInput

func (GetSwitchPortsBySwitchItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsBySwitchItem)(nil)).Elem()
}

func (i GetSwitchPortsBySwitchItemArray) ToGetSwitchPortsBySwitchItemArrayOutput() GetSwitchPortsBySwitchItemArrayOutput {
	return i.ToGetSwitchPortsBySwitchItemArrayOutputWithContext(context.Background())
}

func (i GetSwitchPortsBySwitchItemArray) ToGetSwitchPortsBySwitchItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsBySwitchItemArrayOutput)
}

type GetSwitchPortsBySwitchItemOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsBySwitchItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItem)(nil)).Elem()
}

func (o GetSwitchPortsBySwitchItemOutput) ToGetSwitchPortsBySwitchItemOutput() GetSwitchPortsBySwitchItemOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemOutput) ToGetSwitchPortsBySwitchItemOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemOutput {
	return o
}

// The MAC address of the switch.
func (o GetSwitchPortsBySwitchItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) string { return v.Mac }).(pulumi.StringOutput)
}

// The model of the switch.
func (o GetSwitchPortsBySwitchItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) string { return v.Model }).(pulumi.StringOutput)
}

// The name of the switch.
func (o GetSwitchPortsBySwitchItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) string { return v.Name }).(pulumi.StringOutput)
}

// Identifying information of the switch's network.
func (o GetSwitchPortsBySwitchItemOutput) Network() GetSwitchPortsBySwitchItemNetworkOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) GetSwitchPortsBySwitchItemNetwork { return v.Network }).(GetSwitchPortsBySwitchItemNetworkOutput)
}

// Ports belonging to the switch
func (o GetSwitchPortsBySwitchItemOutput) Ports() GetSwitchPortsBySwitchItemPortArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) []GetSwitchPortsBySwitchItemPort { return v.Ports }).(GetSwitchPortsBySwitchItemPortArrayOutput)
}

// The serial number of the switch.
func (o GetSwitchPortsBySwitchItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetSwitchPortsBySwitchItemArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsBySwitchItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsBySwitchItem)(nil)).Elem()
}

func (o GetSwitchPortsBySwitchItemArrayOutput) ToGetSwitchPortsBySwitchItemArrayOutput() GetSwitchPortsBySwitchItemArrayOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemArrayOutput) ToGetSwitchPortsBySwitchItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemArrayOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemArrayOutput) Index(i pulumi.IntInput) GetSwitchPortsBySwitchItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchPortsBySwitchItem {
		return vs[0].([]GetSwitchPortsBySwitchItem)[vs[1].(int)]
	}).(GetSwitchPortsBySwitchItemOutput)
}

type GetSwitchPortsBySwitchItemNetwork struct {
	// The ID of the network.
	Id string `pulumi:"id"`
	// The name of the network.
	Name string `pulumi:"name"`
}

// GetSwitchPortsBySwitchItemNetworkInput is an input type that accepts GetSwitchPortsBySwitchItemNetworkArgs and GetSwitchPortsBySwitchItemNetworkOutput values.
// You can construct a concrete instance of `GetSwitchPortsBySwitchItemNetworkInput` via:
//
//	GetSwitchPortsBySwitchItemNetworkArgs{...}
type GetSwitchPortsBySwitchItemNetworkInput interface {
	pulumi.Input

	ToGetSwitchPortsBySwitchItemNetworkOutput() GetSwitchPortsBySwitchItemNetworkOutput
	ToGetSwitchPortsBySwitchItemNetworkOutputWithContext(context.Context) GetSwitchPortsBySwitchItemNetworkOutput
}

type GetSwitchPortsBySwitchItemNetworkArgs struct {
	// The ID of the network.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSwitchPortsBySwitchItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItemNetwork)(nil)).Elem()
}

func (i GetSwitchPortsBySwitchItemNetworkArgs) ToGetSwitchPortsBySwitchItemNetworkOutput() GetSwitchPortsBySwitchItemNetworkOutput {
	return i.ToGetSwitchPortsBySwitchItemNetworkOutputWithContext(context.Background())
}

func (i GetSwitchPortsBySwitchItemNetworkArgs) ToGetSwitchPortsBySwitchItemNetworkOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsBySwitchItemNetworkOutput)
}

type GetSwitchPortsBySwitchItemNetworkOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsBySwitchItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItemNetwork)(nil)).Elem()
}

func (o GetSwitchPortsBySwitchItemNetworkOutput) ToGetSwitchPortsBySwitchItemNetworkOutput() GetSwitchPortsBySwitchItemNetworkOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemNetworkOutput) ToGetSwitchPortsBySwitchItemNetworkOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemNetworkOutput {
	return o
}

// The ID of the network.
func (o GetSwitchPortsBySwitchItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the network.
func (o GetSwitchPortsBySwitchItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSwitchPortsBySwitchItemPort struct {
	// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType string `pulumi:"accessPolicyType"`
	// The VLANs allowed on the switch port. Only applicable to trunk ports.
	AllowedVlans string `pulumi:"allowedVlans"`
	// The status of the switch port.
	Enabled bool `pulumi:"enabled"`
	// The link speed for the switch port.
	LinkNegotiation string `pulumi:"linkNegotiation"`
	// The name of the switch port.
	Name string `pulumi:"name"`
	// The PoE status of the switch port.
	PoeEnabled bool `pulumi:"poeEnabled"`
	// The identifier of the switch port.
	PortId string `pulumi:"portId"`
	// The rapid spanning tree protocol status.
	RstpEnabled bool `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit int `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists []string `pulumi:"stickyMacAllowLists"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard string `pulumi:"stpGuard"`
	// The list of tags of the switch port.
	Tags []string `pulumi:"tags"`
	// The type of the switch port ('trunk' or 'access').
	Type string `pulumi:"type"`
	// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan int `pulumi:"vlan"`
	// The voice VLAN of the switch port. Only applicable to access ports.
	VoiceVlan int `pulumi:"voiceVlan"`
}

// GetSwitchPortsBySwitchItemPortInput is an input type that accepts GetSwitchPortsBySwitchItemPortArgs and GetSwitchPortsBySwitchItemPortOutput values.
// You can construct a concrete instance of `GetSwitchPortsBySwitchItemPortInput` via:
//
//	GetSwitchPortsBySwitchItemPortArgs{...}
type GetSwitchPortsBySwitchItemPortInput interface {
	pulumi.Input

	ToGetSwitchPortsBySwitchItemPortOutput() GetSwitchPortsBySwitchItemPortOutput
	ToGetSwitchPortsBySwitchItemPortOutputWithContext(context.Context) GetSwitchPortsBySwitchItemPortOutput
}

type GetSwitchPortsBySwitchItemPortArgs struct {
	// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType pulumi.StringInput `pulumi:"accessPolicyType"`
	// The VLANs allowed on the switch port. Only applicable to trunk ports.
	AllowedVlans pulumi.StringInput `pulumi:"allowedVlans"`
	// The status of the switch port.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The link speed for the switch port.
	LinkNegotiation pulumi.StringInput `pulumi:"linkNegotiation"`
	// The name of the switch port.
	Name pulumi.StringInput `pulumi:"name"`
	// The PoE status of the switch port.
	PoeEnabled pulumi.BoolInput `pulumi:"poeEnabled"`
	// The identifier of the switch port.
	PortId pulumi.StringInput `pulumi:"portId"`
	// The rapid spanning tree protocol status.
	RstpEnabled pulumi.BoolInput `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit pulumi.IntInput `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists pulumi.StringArrayInput `pulumi:"stickyMacAllowLists"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard pulumi.StringInput `pulumi:"stpGuard"`
	// The list of tags of the switch port.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of the switch port ('trunk' or 'access').
	Type pulumi.StringInput `pulumi:"type"`
	// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// The voice VLAN of the switch port. Only applicable to access ports.
	VoiceVlan pulumi.IntInput `pulumi:"voiceVlan"`
}

func (GetSwitchPortsBySwitchItemPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItemPort)(nil)).Elem()
}

func (i GetSwitchPortsBySwitchItemPortArgs) ToGetSwitchPortsBySwitchItemPortOutput() GetSwitchPortsBySwitchItemPortOutput {
	return i.ToGetSwitchPortsBySwitchItemPortOutputWithContext(context.Background())
}

func (i GetSwitchPortsBySwitchItemPortArgs) ToGetSwitchPortsBySwitchItemPortOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsBySwitchItemPortOutput)
}

// GetSwitchPortsBySwitchItemPortArrayInput is an input type that accepts GetSwitchPortsBySwitchItemPortArray and GetSwitchPortsBySwitchItemPortArrayOutput values.
// You can construct a concrete instance of `GetSwitchPortsBySwitchItemPortArrayInput` via:
//
//	GetSwitchPortsBySwitchItemPortArray{ GetSwitchPortsBySwitchItemPortArgs{...} }
type GetSwitchPortsBySwitchItemPortArrayInput interface {
	pulumi.Input

	ToGetSwitchPortsBySwitchItemPortArrayOutput() GetSwitchPortsBySwitchItemPortArrayOutput
	ToGetSwitchPortsBySwitchItemPortArrayOutputWithContext(context.Context) GetSwitchPortsBySwitchItemPortArrayOutput
}

type GetSwitchPortsBySwitchItemPortArray []GetSwitchPortsBySwitchItemPortInput

func (GetSwitchPortsBySwitchItemPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsBySwitchItemPort)(nil)).Elem()
}

func (i GetSwitchPortsBySwitchItemPortArray) ToGetSwitchPortsBySwitchItemPortArrayOutput() GetSwitchPortsBySwitchItemPortArrayOutput {
	return i.ToGetSwitchPortsBySwitchItemPortArrayOutputWithContext(context.Background())
}

func (i GetSwitchPortsBySwitchItemPortArray) ToGetSwitchPortsBySwitchItemPortArrayOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsBySwitchItemPortArrayOutput)
}

type GetSwitchPortsBySwitchItemPortOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsBySwitchItemPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsBySwitchItemPort)(nil)).Elem()
}

func (o GetSwitchPortsBySwitchItemPortOutput) ToGetSwitchPortsBySwitchItemPortOutput() GetSwitchPortsBySwitchItemPortOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemPortOutput) ToGetSwitchPortsBySwitchItemPortOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemPortOutput {
	return o
}

// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
func (o GetSwitchPortsBySwitchItemPortOutput) AccessPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.AccessPolicyType }).(pulumi.StringOutput)
}

// The VLANs allowed on the switch port. Only applicable to trunk ports.
func (o GetSwitchPortsBySwitchItemPortOutput) AllowedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.AllowedVlans }).(pulumi.StringOutput)
}

// The status of the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The link speed for the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) LinkNegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.LinkNegotiation }).(pulumi.StringOutput)
}

// The name of the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.Name }).(pulumi.StringOutput)
}

// The PoE status of the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) PoeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) bool { return v.PoeEnabled }).(pulumi.BoolOutput)
}

// The identifier of the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.PortId }).(pulumi.StringOutput)
}

// The rapid spanning tree protocol status.
func (o GetSwitchPortsBySwitchItemPortOutput) RstpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) bool { return v.RstpEnabled }).(pulumi.BoolOutput)
}

// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetSwitchPortsBySwitchItemPortOutput) StickyMacAllowListLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) int { return v.StickyMacAllowListLimit }).(pulumi.IntOutput)
}

// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetSwitchPortsBySwitchItemPortOutput) StickyMacAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) []string { return v.StickyMacAllowLists }).(pulumi.StringArrayOutput)
}

// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
func (o GetSwitchPortsBySwitchItemPortOutput) StpGuard() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.StpGuard }).(pulumi.StringOutput)
}

// The list of tags of the switch port.
func (o GetSwitchPortsBySwitchItemPortOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the switch port ('trunk' or 'access').
func (o GetSwitchPortsBySwitchItemPortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) string { return v.Type }).(pulumi.StringOutput)
}

// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
func (o GetSwitchPortsBySwitchItemPortOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) int { return v.Vlan }).(pulumi.IntOutput)
}

// The voice VLAN of the switch port. Only applicable to access ports.
func (o GetSwitchPortsBySwitchItemPortOutput) VoiceVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsBySwitchItemPort) int { return v.VoiceVlan }).(pulumi.IntOutput)
}

type GetSwitchPortsBySwitchItemPortArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsBySwitchItemPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsBySwitchItemPort)(nil)).Elem()
}

func (o GetSwitchPortsBySwitchItemPortArrayOutput) ToGetSwitchPortsBySwitchItemPortArrayOutput() GetSwitchPortsBySwitchItemPortArrayOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemPortArrayOutput) ToGetSwitchPortsBySwitchItemPortArrayOutputWithContext(ctx context.Context) GetSwitchPortsBySwitchItemPortArrayOutput {
	return o
}

func (o GetSwitchPortsBySwitchItemPortArrayOutput) Index(i pulumi.IntInput) GetSwitchPortsBySwitchItemPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchPortsBySwitchItemPort {
		return vs[0].([]GetSwitchPortsBySwitchItemPort)[vs[1].(int)]
	}).(GetSwitchPortsBySwitchItemPortOutput)
}

type GetUplinksStatusesItem struct {
	// Device High Availability Capabilities
	HighAvailability GetUplinksStatusesItemHighAvailability `pulumi:"highAvailability"`
	// Last reported time for the device
	LastReportedAt string `pulumi:"lastReportedAt"`
	// The uplink model
	Model string `pulumi:"model"`
	// Network identifier
	NetworkId string `pulumi:"networkId"`
	// The uplink serial
	Serial string `pulumi:"serial"`
	// Uplinks
	Uplinks []GetUplinksStatusesItemUplink `pulumi:"uplinks"`
}

// GetUplinksStatusesItemInput is an input type that accepts GetUplinksStatusesItemArgs and GetUplinksStatusesItemOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemInput` via:
//
//	GetUplinksStatusesItemArgs{...}
type GetUplinksStatusesItemInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemOutput() GetUplinksStatusesItemOutput
	ToGetUplinksStatusesItemOutputWithContext(context.Context) GetUplinksStatusesItemOutput
}

type GetUplinksStatusesItemArgs struct {
	// Device High Availability Capabilities
	HighAvailability GetUplinksStatusesItemHighAvailabilityInput `pulumi:"highAvailability"`
	// Last reported time for the device
	LastReportedAt pulumi.StringInput `pulumi:"lastReportedAt"`
	// The uplink model
	Model pulumi.StringInput `pulumi:"model"`
	// Network identifier
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The uplink serial
	Serial pulumi.StringInput `pulumi:"serial"`
	// Uplinks
	Uplinks GetUplinksStatusesItemUplinkArrayInput `pulumi:"uplinks"`
}

func (GetUplinksStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItem)(nil)).Elem()
}

func (i GetUplinksStatusesItemArgs) ToGetUplinksStatusesItemOutput() GetUplinksStatusesItemOutput {
	return i.ToGetUplinksStatusesItemOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemArgs) ToGetUplinksStatusesItemOutputWithContext(ctx context.Context) GetUplinksStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemOutput)
}

// GetUplinksStatusesItemArrayInput is an input type that accepts GetUplinksStatusesItemArray and GetUplinksStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemArrayInput` via:
//
//	GetUplinksStatusesItemArray{ GetUplinksStatusesItemArgs{...} }
type GetUplinksStatusesItemArrayInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemArrayOutput() GetUplinksStatusesItemArrayOutput
	ToGetUplinksStatusesItemArrayOutputWithContext(context.Context) GetUplinksStatusesItemArrayOutput
}

type GetUplinksStatusesItemArray []GetUplinksStatusesItemInput

func (GetUplinksStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUplinksStatusesItem)(nil)).Elem()
}

func (i GetUplinksStatusesItemArray) ToGetUplinksStatusesItemArrayOutput() GetUplinksStatusesItemArrayOutput {
	return i.ToGetUplinksStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemArray) ToGetUplinksStatusesItemArrayOutputWithContext(ctx context.Context) GetUplinksStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemArrayOutput)
}

type GetUplinksStatusesItemOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItem)(nil)).Elem()
}

func (o GetUplinksStatusesItemOutput) ToGetUplinksStatusesItemOutput() GetUplinksStatusesItemOutput {
	return o
}

func (o GetUplinksStatusesItemOutput) ToGetUplinksStatusesItemOutputWithContext(ctx context.Context) GetUplinksStatusesItemOutput {
	return o
}

// Device High Availability Capabilities
func (o GetUplinksStatusesItemOutput) HighAvailability() GetUplinksStatusesItemHighAvailabilityOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) GetUplinksStatusesItemHighAvailability { return v.HighAvailability }).(GetUplinksStatusesItemHighAvailabilityOutput)
}

// Last reported time for the device
func (o GetUplinksStatusesItemOutput) LastReportedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) string { return v.LastReportedAt }).(pulumi.StringOutput)
}

// The uplink model
func (o GetUplinksStatusesItemOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) string { return v.Model }).(pulumi.StringOutput)
}

// Network identifier
func (o GetUplinksStatusesItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The uplink serial
func (o GetUplinksStatusesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Uplinks
func (o GetUplinksStatusesItemOutput) Uplinks() GetUplinksStatusesItemUplinkArrayOutput {
	return o.ApplyT(func(v GetUplinksStatusesItem) []GetUplinksStatusesItemUplink { return v.Uplinks }).(GetUplinksStatusesItemUplinkArrayOutput)
}

type GetUplinksStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUplinksStatusesItem)(nil)).Elem()
}

func (o GetUplinksStatusesItemArrayOutput) ToGetUplinksStatusesItemArrayOutput() GetUplinksStatusesItemArrayOutput {
	return o
}

func (o GetUplinksStatusesItemArrayOutput) ToGetUplinksStatusesItemArrayOutputWithContext(ctx context.Context) GetUplinksStatusesItemArrayOutput {
	return o
}

func (o GetUplinksStatusesItemArrayOutput) Index(i pulumi.IntInput) GetUplinksStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUplinksStatusesItem {
		return vs[0].([]GetUplinksStatusesItem)[vs[1].(int)]
	}).(GetUplinksStatusesItemOutput)
}

type GetUplinksStatusesItemHighAvailability struct {
	// Indicates whether High Availability is enabled for the device. For devices that do not support HA, this will be 'false'
	Enabled bool `pulumi:"enabled"`
	// The HA role of the device on the network. For devices that do not support HA, this will be 'primary'
	Role string `pulumi:"role"`
}

// GetUplinksStatusesItemHighAvailabilityInput is an input type that accepts GetUplinksStatusesItemHighAvailabilityArgs and GetUplinksStatusesItemHighAvailabilityOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemHighAvailabilityInput` via:
//
//	GetUplinksStatusesItemHighAvailabilityArgs{...}
type GetUplinksStatusesItemHighAvailabilityInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemHighAvailabilityOutput() GetUplinksStatusesItemHighAvailabilityOutput
	ToGetUplinksStatusesItemHighAvailabilityOutputWithContext(context.Context) GetUplinksStatusesItemHighAvailabilityOutput
}

type GetUplinksStatusesItemHighAvailabilityArgs struct {
	// Indicates whether High Availability is enabled for the device. For devices that do not support HA, this will be 'false'
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The HA role of the device on the network. For devices that do not support HA, this will be 'primary'
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetUplinksStatusesItemHighAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemHighAvailability)(nil)).Elem()
}

func (i GetUplinksStatusesItemHighAvailabilityArgs) ToGetUplinksStatusesItemHighAvailabilityOutput() GetUplinksStatusesItemHighAvailabilityOutput {
	return i.ToGetUplinksStatusesItemHighAvailabilityOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemHighAvailabilityArgs) ToGetUplinksStatusesItemHighAvailabilityOutputWithContext(ctx context.Context) GetUplinksStatusesItemHighAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemHighAvailabilityOutput)
}

type GetUplinksStatusesItemHighAvailabilityOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemHighAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemHighAvailability)(nil)).Elem()
}

func (o GetUplinksStatusesItemHighAvailabilityOutput) ToGetUplinksStatusesItemHighAvailabilityOutput() GetUplinksStatusesItemHighAvailabilityOutput {
	return o
}

func (o GetUplinksStatusesItemHighAvailabilityOutput) ToGetUplinksStatusesItemHighAvailabilityOutputWithContext(ctx context.Context) GetUplinksStatusesItemHighAvailabilityOutput {
	return o
}

// Indicates whether High Availability is enabled for the device. For devices that do not support HA, this will be 'false'
func (o GetUplinksStatusesItemHighAvailabilityOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemHighAvailability) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The HA role of the device on the network. For devices that do not support HA, this will be 'primary'
func (o GetUplinksStatusesItemHighAvailabilityOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemHighAvailability) string { return v.Role }).(pulumi.StringOutput)
}

type GetUplinksStatusesItemUplink struct {
	// Access Point Name
	Apn string `pulumi:"apn"`
	// Connection Type
	ConnectionType string `pulumi:"connectionType"`
	// Primary DNS IP
	Dns1 string `pulumi:"dns1"`
	// Secondary DNS IP
	Dns2 string `pulumi:"dns2"`
	// Gateway IP
	Gateway string `pulumi:"gateway"`
	// Integrated Circuit Card Identification Number
	Iccid string `pulumi:"iccid"`
	// Uplink interface
	Interface string `pulumi:"interface"`
	// Uplink IP
	Ip string `pulumi:"ip"`
	// The way in which the IP is assigned
	IpAssignedBy string `pulumi:"ipAssignedBy"`
	// Primary DNS IP
	PrimaryDns string `pulumi:"primaryDns"`
	// Network Provider
	Provider string `pulumi:"provider"`
	// Public IP
	PublicIp string `pulumi:"publicIp"`
	// Secondary DNS IP
	SecondaryDns string `pulumi:"secondaryDns"`
	// Tower Signal Status
	SignalStat GetUplinksStatusesItemUplinkSignalStat `pulumi:"signalStat"`
	// Signal Type
	SignalType string `pulumi:"signalType"`
	// Uplink status
	Status string `pulumi:"status"`
}

// GetUplinksStatusesItemUplinkInput is an input type that accepts GetUplinksStatusesItemUplinkArgs and GetUplinksStatusesItemUplinkOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemUplinkInput` via:
//
//	GetUplinksStatusesItemUplinkArgs{...}
type GetUplinksStatusesItemUplinkInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemUplinkOutput() GetUplinksStatusesItemUplinkOutput
	ToGetUplinksStatusesItemUplinkOutputWithContext(context.Context) GetUplinksStatusesItemUplinkOutput
}

type GetUplinksStatusesItemUplinkArgs struct {
	// Access Point Name
	Apn pulumi.StringInput `pulumi:"apn"`
	// Connection Type
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Primary DNS IP
	Dns1 pulumi.StringInput `pulumi:"dns1"`
	// Secondary DNS IP
	Dns2 pulumi.StringInput `pulumi:"dns2"`
	// Gateway IP
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Integrated Circuit Card Identification Number
	Iccid pulumi.StringInput `pulumi:"iccid"`
	// Uplink interface
	Interface pulumi.StringInput `pulumi:"interface"`
	// Uplink IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// The way in which the IP is assigned
	IpAssignedBy pulumi.StringInput `pulumi:"ipAssignedBy"`
	// Primary DNS IP
	PrimaryDns pulumi.StringInput `pulumi:"primaryDns"`
	// Network Provider
	Provider pulumi.StringInput `pulumi:"provider"`
	// Public IP
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Secondary DNS IP
	SecondaryDns pulumi.StringInput `pulumi:"secondaryDns"`
	// Tower Signal Status
	SignalStat GetUplinksStatusesItemUplinkSignalStatInput `pulumi:"signalStat"`
	// Signal Type
	SignalType pulumi.StringInput `pulumi:"signalType"`
	// Uplink status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetUplinksStatusesItemUplinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemUplink)(nil)).Elem()
}

func (i GetUplinksStatusesItemUplinkArgs) ToGetUplinksStatusesItemUplinkOutput() GetUplinksStatusesItemUplinkOutput {
	return i.ToGetUplinksStatusesItemUplinkOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemUplinkArgs) ToGetUplinksStatusesItemUplinkOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemUplinkOutput)
}

// GetUplinksStatusesItemUplinkArrayInput is an input type that accepts GetUplinksStatusesItemUplinkArray and GetUplinksStatusesItemUplinkArrayOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemUplinkArrayInput` via:
//
//	GetUplinksStatusesItemUplinkArray{ GetUplinksStatusesItemUplinkArgs{...} }
type GetUplinksStatusesItemUplinkArrayInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemUplinkArrayOutput() GetUplinksStatusesItemUplinkArrayOutput
	ToGetUplinksStatusesItemUplinkArrayOutputWithContext(context.Context) GetUplinksStatusesItemUplinkArrayOutput
}

type GetUplinksStatusesItemUplinkArray []GetUplinksStatusesItemUplinkInput

func (GetUplinksStatusesItemUplinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUplinksStatusesItemUplink)(nil)).Elem()
}

func (i GetUplinksStatusesItemUplinkArray) ToGetUplinksStatusesItemUplinkArrayOutput() GetUplinksStatusesItemUplinkArrayOutput {
	return i.ToGetUplinksStatusesItemUplinkArrayOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemUplinkArray) ToGetUplinksStatusesItemUplinkArrayOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemUplinkArrayOutput)
}

type GetUplinksStatusesItemUplinkOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemUplinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemUplink)(nil)).Elem()
}

func (o GetUplinksStatusesItemUplinkOutput) ToGetUplinksStatusesItemUplinkOutput() GetUplinksStatusesItemUplinkOutput {
	return o
}

func (o GetUplinksStatusesItemUplinkOutput) ToGetUplinksStatusesItemUplinkOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkOutput {
	return o
}

// Access Point Name
func (o GetUplinksStatusesItemUplinkOutput) Apn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Apn }).(pulumi.StringOutput)
}

// Connection Type
func (o GetUplinksStatusesItemUplinkOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Primary DNS IP
func (o GetUplinksStatusesItemUplinkOutput) Dns1() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Dns1 }).(pulumi.StringOutput)
}

// Secondary DNS IP
func (o GetUplinksStatusesItemUplinkOutput) Dns2() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Dns2 }).(pulumi.StringOutput)
}

// Gateway IP
func (o GetUplinksStatusesItemUplinkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Gateway }).(pulumi.StringOutput)
}

// Integrated Circuit Card Identification Number
func (o GetUplinksStatusesItemUplinkOutput) Iccid() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Iccid }).(pulumi.StringOutput)
}

// Uplink interface
func (o GetUplinksStatusesItemUplinkOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Interface }).(pulumi.StringOutput)
}

// Uplink IP
func (o GetUplinksStatusesItemUplinkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Ip }).(pulumi.StringOutput)
}

// The way in which the IP is assigned
func (o GetUplinksStatusesItemUplinkOutput) IpAssignedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.IpAssignedBy }).(pulumi.StringOutput)
}

// Primary DNS IP
func (o GetUplinksStatusesItemUplinkOutput) PrimaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.PrimaryDns }).(pulumi.StringOutput)
}

// Network Provider
func (o GetUplinksStatusesItemUplinkOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Provider }).(pulumi.StringOutput)
}

// Public IP
func (o GetUplinksStatusesItemUplinkOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Secondary DNS IP
func (o GetUplinksStatusesItemUplinkOutput) SecondaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.SecondaryDns }).(pulumi.StringOutput)
}

// Tower Signal Status
func (o GetUplinksStatusesItemUplinkOutput) SignalStat() GetUplinksStatusesItemUplinkSignalStatOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) GetUplinksStatusesItemUplinkSignalStat { return v.SignalStat }).(GetUplinksStatusesItemUplinkSignalStatOutput)
}

// Signal Type
func (o GetUplinksStatusesItemUplinkOutput) SignalType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.SignalType }).(pulumi.StringOutput)
}

// Uplink status
func (o GetUplinksStatusesItemUplinkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplink) string { return v.Status }).(pulumi.StringOutput)
}

type GetUplinksStatusesItemUplinkArrayOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemUplinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUplinksStatusesItemUplink)(nil)).Elem()
}

func (o GetUplinksStatusesItemUplinkArrayOutput) ToGetUplinksStatusesItemUplinkArrayOutput() GetUplinksStatusesItemUplinkArrayOutput {
	return o
}

func (o GetUplinksStatusesItemUplinkArrayOutput) ToGetUplinksStatusesItemUplinkArrayOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkArrayOutput {
	return o
}

func (o GetUplinksStatusesItemUplinkArrayOutput) Index(i pulumi.IntInput) GetUplinksStatusesItemUplinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUplinksStatusesItemUplink {
		return vs[0].([]GetUplinksStatusesItemUplink)[vs[1].(int)]
	}).(GetUplinksStatusesItemUplinkOutput)
}

type GetUplinksStatusesItemUplinkSignalStat struct {
	// Reference Signal Received Power
	Rsrp string `pulumi:"rsrp"`
	// Reference Signal Received Quality
	Rsrq string `pulumi:"rsrq"`
}

// GetUplinksStatusesItemUplinkSignalStatInput is an input type that accepts GetUplinksStatusesItemUplinkSignalStatArgs and GetUplinksStatusesItemUplinkSignalStatOutput values.
// You can construct a concrete instance of `GetUplinksStatusesItemUplinkSignalStatInput` via:
//
//	GetUplinksStatusesItemUplinkSignalStatArgs{...}
type GetUplinksStatusesItemUplinkSignalStatInput interface {
	pulumi.Input

	ToGetUplinksStatusesItemUplinkSignalStatOutput() GetUplinksStatusesItemUplinkSignalStatOutput
	ToGetUplinksStatusesItemUplinkSignalStatOutputWithContext(context.Context) GetUplinksStatusesItemUplinkSignalStatOutput
}

type GetUplinksStatusesItemUplinkSignalStatArgs struct {
	// Reference Signal Received Power
	Rsrp pulumi.StringInput `pulumi:"rsrp"`
	// Reference Signal Received Quality
	Rsrq pulumi.StringInput `pulumi:"rsrq"`
}

func (GetUplinksStatusesItemUplinkSignalStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemUplinkSignalStat)(nil)).Elem()
}

func (i GetUplinksStatusesItemUplinkSignalStatArgs) ToGetUplinksStatusesItemUplinkSignalStatOutput() GetUplinksStatusesItemUplinkSignalStatOutput {
	return i.ToGetUplinksStatusesItemUplinkSignalStatOutputWithContext(context.Background())
}

func (i GetUplinksStatusesItemUplinkSignalStatArgs) ToGetUplinksStatusesItemUplinkSignalStatOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkSignalStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUplinksStatusesItemUplinkSignalStatOutput)
}

type GetUplinksStatusesItemUplinkSignalStatOutput struct{ *pulumi.OutputState }

func (GetUplinksStatusesItemUplinkSignalStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUplinksStatusesItemUplinkSignalStat)(nil)).Elem()
}

func (o GetUplinksStatusesItemUplinkSignalStatOutput) ToGetUplinksStatusesItemUplinkSignalStatOutput() GetUplinksStatusesItemUplinkSignalStatOutput {
	return o
}

func (o GetUplinksStatusesItemUplinkSignalStatOutput) ToGetUplinksStatusesItemUplinkSignalStatOutputWithContext(ctx context.Context) GetUplinksStatusesItemUplinkSignalStatOutput {
	return o
}

// Reference Signal Received Power
func (o GetUplinksStatusesItemUplinkSignalStatOutput) Rsrp() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplinkSignalStat) string { return v.Rsrp }).(pulumi.StringOutput)
}

// Reference Signal Received Quality
func (o GetUplinksStatusesItemUplinkSignalStatOutput) Rsrq() pulumi.StringOutput {
	return o.ApplyT(func(v GetUplinksStatusesItemUplinkSignalStat) string { return v.Rsrq }).(pulumi.StringOutput)
}

type GetWebhooksCallbacksStatusesItem struct {
	// The ID of the callback
	CallbackId string `pulumi:"callbackId"`
	// Information around who initiated the callback
	CreatedBy GetWebhooksCallbacksStatusesItemCreatedBy `pulumi:"createdBy"`
	// The errors returned by the callback
	Errors []string `pulumi:"errors"`
	// The status of the callback
	Status string `pulumi:"status"`
	// The webhook receiver used by the callback to send results
	Webhook GetWebhooksCallbacksStatusesItemWebhook `pulumi:"webhook"`
}

// GetWebhooksCallbacksStatusesItemInput is an input type that accepts GetWebhooksCallbacksStatusesItemArgs and GetWebhooksCallbacksStatusesItemOutput values.
// You can construct a concrete instance of `GetWebhooksCallbacksStatusesItemInput` via:
//
//	GetWebhooksCallbacksStatusesItemArgs{...}
type GetWebhooksCallbacksStatusesItemInput interface {
	pulumi.Input

	ToGetWebhooksCallbacksStatusesItemOutput() GetWebhooksCallbacksStatusesItemOutput
	ToGetWebhooksCallbacksStatusesItemOutputWithContext(context.Context) GetWebhooksCallbacksStatusesItemOutput
}

type GetWebhooksCallbacksStatusesItemArgs struct {
	// The ID of the callback
	CallbackId pulumi.StringInput `pulumi:"callbackId"`
	// Information around who initiated the callback
	CreatedBy GetWebhooksCallbacksStatusesItemCreatedByInput `pulumi:"createdBy"`
	// The errors returned by the callback
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// The status of the callback
	Status pulumi.StringInput `pulumi:"status"`
	// The webhook receiver used by the callback to send results
	Webhook GetWebhooksCallbacksStatusesItemWebhookInput `pulumi:"webhook"`
}

func (GetWebhooksCallbacksStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItem)(nil)).Elem()
}

func (i GetWebhooksCallbacksStatusesItemArgs) ToGetWebhooksCallbacksStatusesItemOutput() GetWebhooksCallbacksStatusesItemOutput {
	return i.ToGetWebhooksCallbacksStatusesItemOutputWithContext(context.Background())
}

func (i GetWebhooksCallbacksStatusesItemArgs) ToGetWebhooksCallbacksStatusesItemOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksCallbacksStatusesItemOutput)
}

type GetWebhooksCallbacksStatusesItemOutput struct{ *pulumi.OutputState }

func (GetWebhooksCallbacksStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItem)(nil)).Elem()
}

func (o GetWebhooksCallbacksStatusesItemOutput) ToGetWebhooksCallbacksStatusesItemOutput() GetWebhooksCallbacksStatusesItemOutput {
	return o
}

func (o GetWebhooksCallbacksStatusesItemOutput) ToGetWebhooksCallbacksStatusesItemOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemOutput {
	return o
}

// The ID of the callback
func (o GetWebhooksCallbacksStatusesItemOutput) CallbackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItem) string { return v.CallbackId }).(pulumi.StringOutput)
}

// Information around who initiated the callback
func (o GetWebhooksCallbacksStatusesItemOutput) CreatedBy() GetWebhooksCallbacksStatusesItemCreatedByOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItem) GetWebhooksCallbacksStatusesItemCreatedBy { return v.CreatedBy }).(GetWebhooksCallbacksStatusesItemCreatedByOutput)
}

// The errors returned by the callback
func (o GetWebhooksCallbacksStatusesItemOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItem) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// The status of the callback
func (o GetWebhooksCallbacksStatusesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItem) string { return v.Status }).(pulumi.StringOutput)
}

// The webhook receiver used by the callback to send results
func (o GetWebhooksCallbacksStatusesItemOutput) Webhook() GetWebhooksCallbacksStatusesItemWebhookOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItem) GetWebhooksCallbacksStatusesItemWebhook { return v.Webhook }).(GetWebhooksCallbacksStatusesItemWebhookOutput)
}

type GetWebhooksCallbacksStatusesItemCreatedBy struct {
	// The ID of the user who initiated the callback
	AdminId string `pulumi:"adminId"`
}

// GetWebhooksCallbacksStatusesItemCreatedByInput is an input type that accepts GetWebhooksCallbacksStatusesItemCreatedByArgs and GetWebhooksCallbacksStatusesItemCreatedByOutput values.
// You can construct a concrete instance of `GetWebhooksCallbacksStatusesItemCreatedByInput` via:
//
//	GetWebhooksCallbacksStatusesItemCreatedByArgs{...}
type GetWebhooksCallbacksStatusesItemCreatedByInput interface {
	pulumi.Input

	ToGetWebhooksCallbacksStatusesItemCreatedByOutput() GetWebhooksCallbacksStatusesItemCreatedByOutput
	ToGetWebhooksCallbacksStatusesItemCreatedByOutputWithContext(context.Context) GetWebhooksCallbacksStatusesItemCreatedByOutput
}

type GetWebhooksCallbacksStatusesItemCreatedByArgs struct {
	// The ID of the user who initiated the callback
	AdminId pulumi.StringInput `pulumi:"adminId"`
}

func (GetWebhooksCallbacksStatusesItemCreatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemCreatedBy)(nil)).Elem()
}

func (i GetWebhooksCallbacksStatusesItemCreatedByArgs) ToGetWebhooksCallbacksStatusesItemCreatedByOutput() GetWebhooksCallbacksStatusesItemCreatedByOutput {
	return i.ToGetWebhooksCallbacksStatusesItemCreatedByOutputWithContext(context.Background())
}

func (i GetWebhooksCallbacksStatusesItemCreatedByArgs) ToGetWebhooksCallbacksStatusesItemCreatedByOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemCreatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksCallbacksStatusesItemCreatedByOutput)
}

type GetWebhooksCallbacksStatusesItemCreatedByOutput struct{ *pulumi.OutputState }

func (GetWebhooksCallbacksStatusesItemCreatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemCreatedBy)(nil)).Elem()
}

func (o GetWebhooksCallbacksStatusesItemCreatedByOutput) ToGetWebhooksCallbacksStatusesItemCreatedByOutput() GetWebhooksCallbacksStatusesItemCreatedByOutput {
	return o
}

func (o GetWebhooksCallbacksStatusesItemCreatedByOutput) ToGetWebhooksCallbacksStatusesItemCreatedByOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemCreatedByOutput {
	return o
}

// The ID of the user who initiated the callback
func (o GetWebhooksCallbacksStatusesItemCreatedByOutput) AdminId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemCreatedBy) string { return v.AdminId }).(pulumi.StringOutput)
}

type GetWebhooksCallbacksStatusesItemWebhook struct {
	// The webhook receiver used for the callback webhook
	HttpServer GetWebhooksCallbacksStatusesItemWebhookHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate `pulumi:"payloadTemplate"`
	// The timestamp the callback was sent to the webhook receiver
	SentAt string `pulumi:"sentAt"`
	// The webhook receiver URL where the callback will be sent
	Url string `pulumi:"url"`
}

// GetWebhooksCallbacksStatusesItemWebhookInput is an input type that accepts GetWebhooksCallbacksStatusesItemWebhookArgs and GetWebhooksCallbacksStatusesItemWebhookOutput values.
// You can construct a concrete instance of `GetWebhooksCallbacksStatusesItemWebhookInput` via:
//
//	GetWebhooksCallbacksStatusesItemWebhookArgs{...}
type GetWebhooksCallbacksStatusesItemWebhookInput interface {
	pulumi.Input

	ToGetWebhooksCallbacksStatusesItemWebhookOutput() GetWebhooksCallbacksStatusesItemWebhookOutput
	ToGetWebhooksCallbacksStatusesItemWebhookOutputWithContext(context.Context) GetWebhooksCallbacksStatusesItemWebhookOutput
}

type GetWebhooksCallbacksStatusesItemWebhookArgs struct {
	// The webhook receiver used for the callback webhook
	HttpServer GetWebhooksCallbacksStatusesItemWebhookHttpServerInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateInput `pulumi:"payloadTemplate"`
	// The timestamp the callback was sent to the webhook receiver
	SentAt pulumi.StringInput `pulumi:"sentAt"`
	// The webhook receiver URL where the callback will be sent
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetWebhooksCallbacksStatusesItemWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhook)(nil)).Elem()
}

func (i GetWebhooksCallbacksStatusesItemWebhookArgs) ToGetWebhooksCallbacksStatusesItemWebhookOutput() GetWebhooksCallbacksStatusesItemWebhookOutput {
	return i.ToGetWebhooksCallbacksStatusesItemWebhookOutputWithContext(context.Background())
}

func (i GetWebhooksCallbacksStatusesItemWebhookArgs) ToGetWebhooksCallbacksStatusesItemWebhookOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksCallbacksStatusesItemWebhookOutput)
}

type GetWebhooksCallbacksStatusesItemWebhookOutput struct{ *pulumi.OutputState }

func (GetWebhooksCallbacksStatusesItemWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhook)(nil)).Elem()
}

func (o GetWebhooksCallbacksStatusesItemWebhookOutput) ToGetWebhooksCallbacksStatusesItemWebhookOutput() GetWebhooksCallbacksStatusesItemWebhookOutput {
	return o
}

func (o GetWebhooksCallbacksStatusesItemWebhookOutput) ToGetWebhooksCallbacksStatusesItemWebhookOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookOutput {
	return o
}

// The webhook receiver used for the callback webhook
func (o GetWebhooksCallbacksStatusesItemWebhookOutput) HttpServer() GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhook) GetWebhooksCallbacksStatusesItemWebhookHttpServer {
		return v.HttpServer
	}).(GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput)
}

// The payload template of the webhook used for the callback
func (o GetWebhooksCallbacksStatusesItemWebhookOutput) PayloadTemplate() GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhook) GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate {
		return v.PayloadTemplate
	}).(GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput)
}

// The timestamp the callback was sent to the webhook receiver
func (o GetWebhooksCallbacksStatusesItemWebhookOutput) SentAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhook) string { return v.SentAt }).(pulumi.StringOutput)
}

// The webhook receiver URL where the callback will be sent
func (o GetWebhooksCallbacksStatusesItemWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type GetWebhooksCallbacksStatusesItemWebhookHttpServer struct {
	// The webhook receiver ID that will receive information
	Id string `pulumi:"id"`
}

// GetWebhooksCallbacksStatusesItemWebhookHttpServerInput is an input type that accepts GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs and GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput values.
// You can construct a concrete instance of `GetWebhooksCallbacksStatusesItemWebhookHttpServerInput` via:
//
//	GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs{...}
type GetWebhooksCallbacksStatusesItemWebhookHttpServerInput interface {
	pulumi.Input

	ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutput() GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput
	ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutputWithContext(context.Context) GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput
}

type GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs struct {
	// The webhook receiver ID that will receive information
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookHttpServer)(nil)).Elem()
}

func (i GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs) ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutput() GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput {
	return i.ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutputWithContext(context.Background())
}

func (i GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs) ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput)
}

type GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput struct{ *pulumi.OutputState }

func (GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookHttpServer)(nil)).Elem()
}

func (o GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput) ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutput() GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput {
	return o
}

func (o GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput) ToGetWebhooksCallbacksStatusesItemWebhookHttpServerOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput {
	return o
}

// The webhook receiver ID that will receive information
func (o GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhookHttpServer) string { return v.Id }).(pulumi.StringOutput)
}

type GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate struct {
	// The ID of the payload template
	Id string `pulumi:"id"`
}

// GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateInput is an input type that accepts GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs and GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput values.
// You can construct a concrete instance of `GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateInput` via:
//
//	GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs{...}
type GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateInput interface {
	pulumi.Input

	ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput() GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput
	ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutputWithContext(context.Context) GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput
}

type GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs struct {
	// The ID of the payload template
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate)(nil)).Elem()
}

func (i GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs) ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput() GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput {
	return i.ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutputWithContext(context.Background())
}

func (i GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs) ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput)
}

type GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput struct{ *pulumi.OutputState }

func (GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate)(nil)).Elem()
}

func (o GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput) ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput() GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput {
	return o
}

func (o GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput) ToGetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutputWithContext(ctx context.Context) GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput {
	return o
}

// The ID of the payload template
func (o GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksCallbacksStatusesItemWebhookPayloadTemplate) string { return v.Id }).(pulumi.StringOutput)
}

type GetWebhooksLogsItem struct {
	// Type of alert that the webhook is delivering
	AlertType string `pulumi:"alertType"`
	// When the webhook log was created, in ISO8601 format
	LoggedAt string `pulumi:"loggedAt"`
	// Network ID for the webhook log
	NetworkId string `pulumi:"networkId"`
	// ID for the webhook log's organization
	OrganizationId string `pulumi:"organizationId"`
	// Response code from the webhook
	ResponseCode int `pulumi:"responseCode"`
	// Duration of the response, in milliseconds
	ResponseDuration int `pulumi:"responseDuration"`
	// When the webhook was sent, in ISO8601 format
	SentAt string `pulumi:"sentAt"`
	// URL where the webhook was sent
	Url string `pulumi:"url"`
}

// GetWebhooksLogsItemInput is an input type that accepts GetWebhooksLogsItemArgs and GetWebhooksLogsItemOutput values.
// You can construct a concrete instance of `GetWebhooksLogsItemInput` via:
//
//	GetWebhooksLogsItemArgs{...}
type GetWebhooksLogsItemInput interface {
	pulumi.Input

	ToGetWebhooksLogsItemOutput() GetWebhooksLogsItemOutput
	ToGetWebhooksLogsItemOutputWithContext(context.Context) GetWebhooksLogsItemOutput
}

type GetWebhooksLogsItemArgs struct {
	// Type of alert that the webhook is delivering
	AlertType pulumi.StringInput `pulumi:"alertType"`
	// When the webhook log was created, in ISO8601 format
	LoggedAt pulumi.StringInput `pulumi:"loggedAt"`
	// Network ID for the webhook log
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// ID for the webhook log's organization
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Response code from the webhook
	ResponseCode pulumi.IntInput `pulumi:"responseCode"`
	// Duration of the response, in milliseconds
	ResponseDuration pulumi.IntInput `pulumi:"responseDuration"`
	// When the webhook was sent, in ISO8601 format
	SentAt pulumi.StringInput `pulumi:"sentAt"`
	// URL where the webhook was sent
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetWebhooksLogsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksLogsItem)(nil)).Elem()
}

func (i GetWebhooksLogsItemArgs) ToGetWebhooksLogsItemOutput() GetWebhooksLogsItemOutput {
	return i.ToGetWebhooksLogsItemOutputWithContext(context.Background())
}

func (i GetWebhooksLogsItemArgs) ToGetWebhooksLogsItemOutputWithContext(ctx context.Context) GetWebhooksLogsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksLogsItemOutput)
}

// GetWebhooksLogsItemArrayInput is an input type that accepts GetWebhooksLogsItemArray and GetWebhooksLogsItemArrayOutput values.
// You can construct a concrete instance of `GetWebhooksLogsItemArrayInput` via:
//
//	GetWebhooksLogsItemArray{ GetWebhooksLogsItemArgs{...} }
type GetWebhooksLogsItemArrayInput interface {
	pulumi.Input

	ToGetWebhooksLogsItemArrayOutput() GetWebhooksLogsItemArrayOutput
	ToGetWebhooksLogsItemArrayOutputWithContext(context.Context) GetWebhooksLogsItemArrayOutput
}

type GetWebhooksLogsItemArray []GetWebhooksLogsItemInput

func (GetWebhooksLogsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhooksLogsItem)(nil)).Elem()
}

func (i GetWebhooksLogsItemArray) ToGetWebhooksLogsItemArrayOutput() GetWebhooksLogsItemArrayOutput {
	return i.ToGetWebhooksLogsItemArrayOutputWithContext(context.Background())
}

func (i GetWebhooksLogsItemArray) ToGetWebhooksLogsItemArrayOutputWithContext(ctx context.Context) GetWebhooksLogsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhooksLogsItemArrayOutput)
}

type GetWebhooksLogsItemOutput struct{ *pulumi.OutputState }

func (GetWebhooksLogsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhooksLogsItem)(nil)).Elem()
}

func (o GetWebhooksLogsItemOutput) ToGetWebhooksLogsItemOutput() GetWebhooksLogsItemOutput {
	return o
}

func (o GetWebhooksLogsItemOutput) ToGetWebhooksLogsItemOutputWithContext(ctx context.Context) GetWebhooksLogsItemOutput {
	return o
}

// Type of alert that the webhook is delivering
func (o GetWebhooksLogsItemOutput) AlertType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.AlertType }).(pulumi.StringOutput)
}

// When the webhook log was created, in ISO8601 format
func (o GetWebhooksLogsItemOutput) LoggedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.LoggedAt }).(pulumi.StringOutput)
}

// Network ID for the webhook log
func (o GetWebhooksLogsItemOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.NetworkId }).(pulumi.StringOutput)
}

// ID for the webhook log's organization
func (o GetWebhooksLogsItemOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Response code from the webhook
func (o GetWebhooksLogsItemOutput) ResponseCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) int { return v.ResponseCode }).(pulumi.IntOutput)
}

// Duration of the response, in milliseconds
func (o GetWebhooksLogsItemOutput) ResponseDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) int { return v.ResponseDuration }).(pulumi.IntOutput)
}

// When the webhook was sent, in ISO8601 format
func (o GetWebhooksLogsItemOutput) SentAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.SentAt }).(pulumi.StringOutput)
}

// URL where the webhook was sent
func (o GetWebhooksLogsItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhooksLogsItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetWebhooksLogsItemArrayOutput struct{ *pulumi.OutputState }

func (GetWebhooksLogsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhooksLogsItem)(nil)).Elem()
}

func (o GetWebhooksLogsItemArrayOutput) ToGetWebhooksLogsItemArrayOutput() GetWebhooksLogsItemArrayOutput {
	return o
}

func (o GetWebhooksLogsItemArrayOutput) ToGetWebhooksLogsItemArrayOutputWithContext(ctx context.Context) GetWebhooksLogsItemArrayOutput {
	return o
}

func (o GetWebhooksLogsItemArrayOutput) Index(i pulumi.IntInput) GetWebhooksLogsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebhooksLogsItem {
		return vs[0].([]GetWebhooksLogsItem)[vs[1].(int)]
	}).(GetWebhooksLogsItemOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItem struct {
	// Channel utilization broken down by band.
	ByBands []GetWirelessDevicesChannelUtilizationByDeviceItemByBand `pulumi:"byBands"`
	// The MAC address of the device.
	Mac string `pulumi:"mac"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationByDeviceItemNetwork `pulumi:"network"`
	// The serial number for the device.
	Serial string `pulumi:"serial"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemArgs and GetWirelessDevicesChannelUtilizationByDeviceItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemOutput() GetWirelessDevicesChannelUtilizationByDeviceItemOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemArgs struct {
	// Channel utilization broken down by band.
	ByBands GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayInput `pulumi:"byBands"`
	// The MAC address of the device.
	Mac pulumi.StringInput `pulumi:"mac"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationByDeviceItemNetworkInput `pulumi:"network"`
	// The serial number for the device.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemOutput() GetWirelessDevicesChannelUtilizationByDeviceItemOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemOutput)
}

// GetWirelessDevicesChannelUtilizationByDeviceItemArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemArray and GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemArray{ GetWirelessDevicesChannelUtilizationByDeviceItemArgs{...} }
type GetWirelessDevicesChannelUtilizationByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemArray []GetWirelessDevicesChannelUtilizationByDeviceItemInput

func (GetWirelessDevicesChannelUtilizationByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByDeviceItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemArray) ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemArray) ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemOutput() GetWirelessDevicesChannelUtilizationByDeviceItemOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemOutput {
	return o
}

// Channel utilization broken down by band.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) ByBands() GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItem) []GetWirelessDevicesChannelUtilizationByDeviceItemByBand {
		return v.ByBands
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput)
}

// The MAC address of the device.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Network for the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) Network() GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItem) GetWirelessDevicesChannelUtilizationByDeviceItemNetwork {
		return v.Network
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput)
}

// The serial number for the device.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByDeviceItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationByDeviceItem {
		return vs[0].([]GetWirelessDevicesChannelUtilizationByDeviceItem)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBand struct {
	// The band for the given metrics.
	Band string `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi `pulumi:"wifi"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemByBandInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs and GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemByBandInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemByBandInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs struct {
	// The band for the given metrics.
	Band pulumi.StringInput `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiInput `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalInput `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiInput `pulumi:"wifi"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput)
}

// GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray and GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray{ GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs{...} }
type GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray []GetWirelessDevicesChannelUtilizationByDeviceItemByBandInput

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByDeviceItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput {
	return o
}

// The band for the given metrics.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBand) string { return v.Band }).(pulumi.StringOutput)
}

// An object containing non-wifi utilization.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) NonWifi() GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBand) GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi {
		return v.NonWifi
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput)
}

// An object containing total channel utilization.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) Total() GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBand) GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal {
		return v.Total
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput)
}

// An object containing wifi utilization.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput) Wifi() GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBand) GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi {
		return v.Wifi
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByDeviceItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationByDeviceItemByBand {
		return vs[0].([]GetWirelessDevicesChannelUtilizationByDeviceItemByBand)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs and GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput {
	return o
}

// Percentage of non-wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifi) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal struct {
	// Percentage of total channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs and GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs struct {
	// Percentage of total channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput {
	return o
}

// Percentage of total channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotal) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs and GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput {
	return o
}

// Percentage of wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifi) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemNetwork struct {
	// Network ID of the given utilization metrics.
	Id string `pulumi:"id"`
}

// GetWirelessDevicesChannelUtilizationByDeviceItemNetworkInput is an input type that accepts GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs and GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByDeviceItemNetworkInput` via:
//
//	GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs{...}
type GetWirelessDevicesChannelUtilizationByDeviceItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput() GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput
	ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput
}

type GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs struct {
	// Network ID of the given utilization metrics.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput() GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput)
}

type GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput() GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput {
	return o
}

// Network ID of the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByDeviceItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItem struct {
	// Channel utilization broken down by band.
	ByBands []GetWirelessDevicesChannelUtilizationByNetworkItemByBand `pulumi:"byBands"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationByNetworkItemNetwork `pulumi:"network"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemArgs and GetWirelessDevicesChannelUtilizationByNetworkItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemOutput() GetWirelessDevicesChannelUtilizationByNetworkItemOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemArgs struct {
	// Channel utilization broken down by band.
	ByBands GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayInput `pulumi:"byBands"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationByNetworkItemNetworkInput `pulumi:"network"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemOutput() GetWirelessDevicesChannelUtilizationByNetworkItemOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemOutput)
}

// GetWirelessDevicesChannelUtilizationByNetworkItemArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemArray and GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemArray{ GetWirelessDevicesChannelUtilizationByNetworkItemArgs{...} }
type GetWirelessDevicesChannelUtilizationByNetworkItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemArray []GetWirelessDevicesChannelUtilizationByNetworkItemInput

func (GetWirelessDevicesChannelUtilizationByNetworkItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByNetworkItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemArray) ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemArray) ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemOutput() GetWirelessDevicesChannelUtilizationByNetworkItemOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemOutput {
	return o
}

// Channel utilization broken down by band.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemOutput) ByBands() GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItem) []GetWirelessDevicesChannelUtilizationByNetworkItemByBand {
		return v.ByBands
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput)
}

// Network for the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemOutput) Network() GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItem) GetWirelessDevicesChannelUtilizationByNetworkItemNetwork {
		return v.Network
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByNetworkItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationByNetworkItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationByNetworkItem {
		return vs[0].([]GetWirelessDevicesChannelUtilizationByNetworkItem)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBand struct {
	// The band for the given metrics.
	Band string `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi `pulumi:"wifi"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemByBandInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs and GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemByBandInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemByBandInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs struct {
	// The band for the given metrics.
	Band pulumi.StringInput `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiInput `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalInput `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiInput `pulumi:"wifi"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput)
}

// GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray and GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray{ GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs{...} }
type GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray []GetWirelessDevicesChannelUtilizationByNetworkItemByBandInput

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByNetworkItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput {
	return o
}

// The band for the given metrics.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBand) string { return v.Band }).(pulumi.StringOutput)
}

// An object containing non-wifi utilization.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) NonWifi() GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBand) GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi {
		return v.NonWifi
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput)
}

// An object containing total channel utilization.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) Total() GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBand) GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal {
		return v.Total
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput)
}

// An object containing wifi utilization.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput) Wifi() GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBand) GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi {
		return v.Wifi
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationByNetworkItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationByNetworkItemByBand {
		return vs[0].([]GetWirelessDevicesChannelUtilizationByNetworkItemByBand)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs and GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput {
	return o
}

// Percentage of non-wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifi) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal struct {
	// Percentage of total channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs and GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs struct {
	// Percentage of total channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput {
	return o
}

// Percentage of total channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotal) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs and GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput {
	return o
}

// Percentage of wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifi) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemNetwork struct {
	// Network ID of the given utilization metrics.
	Id string `pulumi:"id"`
}

// GetWirelessDevicesChannelUtilizationByNetworkItemNetworkInput is an input type that accepts GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs and GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationByNetworkItemNetworkInput` via:
//
//	GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs{...}
type GetWirelessDevicesChannelUtilizationByNetworkItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput() GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput
	ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput
}

type GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs struct {
	// Network ID of the given utilization metrics.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput() GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput {
	return i.ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput)
}

type GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput() GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput {
	return o
}

// Network ID of the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationByNetworkItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem struct {
	// Channel utilization broken down by band.
	ByBands []GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand `pulumi:"byBands"`
	// The end time of the channel utilization interval.
	EndTs string `pulumi:"endTs"`
	// The MAC address of the device.
	Mac string `pulumi:"mac"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork `pulumi:"network"`
	// The serial number for the device.
	Serial string `pulumi:"serial"`
	// The start time of the channel utilization interval.
	StartTs string `pulumi:"startTs"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs struct {
	// Channel utilization broken down by band.
	ByBands GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayInput `pulumi:"byBands"`
	// The end time of the channel utilization interval.
	EndTs pulumi.StringInput `pulumi:"endTs"`
	// The MAC address of the device.
	Mac pulumi.StringInput `pulumi:"mac"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkInput `pulumi:"network"`
	// The serial number for the device.
	Serial pulumi.StringInput `pulumi:"serial"`
	// The start time of the channel utilization interval.
	StartTs pulumi.StringInput `pulumi:"startTs"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput)
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray{ GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs{...} }
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray []GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemInput

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput {
	return o
}

// Channel utilization broken down by band.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) ByBands() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) []GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand {
		return v.ByBands
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput)
}

// The end time of the channel utilization interval.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) EndTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) string { return v.EndTs }).(pulumi.StringOutput)
}

// The MAC address of the device.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) string { return v.Mac }).(pulumi.StringOutput)
}

// Network for the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) Network() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork {
		return v.Network
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput)
}

// The serial number for the device.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) string { return v.Serial }).(pulumi.StringOutput)
}

// The start time of the channel utilization interval.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput) StartTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem) string { return v.StartTs }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem {
		return vs[0].([]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItem)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand struct {
	// The band for the given metrics.
	Band string `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi `pulumi:"wifi"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs struct {
	// The band for the given metrics.
	Band pulumi.StringInput `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiInput `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalInput `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiInput `pulumi:"wifi"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput)
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray{ GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs{...} }
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray []GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandInput

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput {
	return o
}

// The band for the given metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand) string { return v.Band }).(pulumi.StringOutput)
}

// An object containing non-wifi utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) NonWifi() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi {
		return v.NonWifi
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput)
}

// An object containing total channel utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) Total() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal {
		return v.Total
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput)
}

// An object containing wifi utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput) Wifi() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi {
		return v.Wifi
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand {
		return vs[0].([]GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBand)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput {
	return o
}

// Percentage of non-wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifi) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal struct {
	// Percentage of total channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs struct {
	// Percentage of total channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput {
	return o
}

// Percentage of total channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotal) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput {
	return o
}

// Percentage of wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifi) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork struct {
	// Network ID of the given utilization metrics.
	Id string `pulumi:"id"`
}

// GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs and GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs struct {
	// Network ID of the given utilization metrics.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput {
	return o
}

// Network ID of the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem struct {
	// Channel utilization broken down by band.
	ByBands []GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand `pulumi:"byBands"`
	// The end time of the channel utilization interval.
	EndTs string `pulumi:"endTs"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork `pulumi:"network"`
	// The start time of the channel utilization interval.
	StartTs string `pulumi:"startTs"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs struct {
	// Channel utilization broken down by band.
	ByBands GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayInput `pulumi:"byBands"`
	// The end time of the channel utilization interval.
	EndTs pulumi.StringInput `pulumi:"endTs"`
	// Network for the given utilization metrics.
	Network GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkInput `pulumi:"network"`
	// The start time of the channel utilization interval.
	StartTs pulumi.StringInput `pulumi:"startTs"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput)
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray{ GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs{...} }
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray []GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemInput

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput {
	return o
}

// Channel utilization broken down by band.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) ByBands() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem) []GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand {
		return v.ByBands
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput)
}

// The end time of the channel utilization interval.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) EndTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem) string { return v.EndTs }).(pulumi.StringOutput)
}

// Network for the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) Network() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork {
		return v.Network
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput)
}

// The start time of the channel utilization interval.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput) StartTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem) string { return v.StartTs }).(pulumi.StringOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem {
		return vs[0].([]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItem)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand struct {
	// The band for the given metrics.
	Band string `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi `pulumi:"wifi"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs struct {
	// The band for the given metrics.
	Band pulumi.StringInput `pulumi:"band"`
	// An object containing non-wifi utilization.
	NonWifi GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiInput `pulumi:"nonWifi"`
	// An object containing total channel utilization.
	Total GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalInput `pulumi:"total"`
	// An object containing wifi utilization.
	Wifi GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiInput `pulumi:"wifi"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput)
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray{ GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs{...} }
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray []GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandInput

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput {
	return o
}

// The band for the given metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand) string { return v.Band }).(pulumi.StringOutput)
}

// An object containing non-wifi utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) NonWifi() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi {
		return v.NonWifi
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput)
}

// An object containing total channel utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) Total() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal {
		return v.Total
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput)
}

// An object containing wifi utilization.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput) Wifi() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi {
		return v.Wifi
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand {
		return vs[0].([]GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBand)[vs[1].(int)]
	}).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs struct {
	// Percentage of non-wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput {
	return o
}

// Percentage of non-wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifi) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal struct {
	// Percentage of total channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs struct {
	// Percentage of total channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput {
	return o
}

// Percentage of total channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotal) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage float64 `pulumi:"percentage"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs struct {
	// Percentage of wifi channel utiliation for the given band.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput {
	return o
}

// Percentage of wifi channel utiliation for the given band.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifi) float64 {
		return v.Percentage
	}).(pulumi.Float64Output)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork struct {
	// Network ID of the given utilization metrics.
	Id string `pulumi:"id"`
}

// GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkInput is an input type that accepts GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs and GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkInput` via:
//
//	GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs{...}
type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput
	ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutputWithContext(context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs struct {
	// Network ID of the given utilization metrics.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput {
	return i.ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput)
}

type GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput() GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput) ToGetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput {
	return o
}

// Network ID of the given utilization metrics.
func (o GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessDevicesEthernetStatusesItem struct {
	// Aggregation details object
	Aggregation GetWirelessDevicesEthernetStatusesItemAggregation `pulumi:"aggregation"`
	// The name of the AP
	Name string `pulumi:"name"`
	// Network details object
	Network GetWirelessDevicesEthernetStatusesItemNetwork `pulumi:"network"`
	// List of port details
	Ports []GetWirelessDevicesEthernetStatusesItemPort `pulumi:"ports"`
	// Power details object
	Power GetWirelessDevicesEthernetStatusesItemPower `pulumi:"power"`
	// The serial number of the AP
	Serial string `pulumi:"serial"`
}

// GetWirelessDevicesEthernetStatusesItemInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemArgs and GetWirelessDevicesEthernetStatusesItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemArgs{...}
type GetWirelessDevicesEthernetStatusesItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemOutput() GetWirelessDevicesEthernetStatusesItemOutput
	ToGetWirelessDevicesEthernetStatusesItemOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemOutput
}

type GetWirelessDevicesEthernetStatusesItemArgs struct {
	// Aggregation details object
	Aggregation GetWirelessDevicesEthernetStatusesItemAggregationInput `pulumi:"aggregation"`
	// The name of the AP
	Name pulumi.StringInput `pulumi:"name"`
	// Network details object
	Network GetWirelessDevicesEthernetStatusesItemNetworkInput `pulumi:"network"`
	// List of port details
	Ports GetWirelessDevicesEthernetStatusesItemPortArrayInput `pulumi:"ports"`
	// Power details object
	Power GetWirelessDevicesEthernetStatusesItemPowerInput `pulumi:"power"`
	// The serial number of the AP
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetWirelessDevicesEthernetStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItem)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemArgs) ToGetWirelessDevicesEthernetStatusesItemOutput() GetWirelessDevicesEthernetStatusesItemOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemArgs) ToGetWirelessDevicesEthernetStatusesItemOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemOutput)
}

// GetWirelessDevicesEthernetStatusesItemArrayInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemArray and GetWirelessDevicesEthernetStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemArrayInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemArray{ GetWirelessDevicesEthernetStatusesItemArgs{...} }
type GetWirelessDevicesEthernetStatusesItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemArrayOutput() GetWirelessDevicesEthernetStatusesItemArrayOutput
	ToGetWirelessDevicesEthernetStatusesItemArrayOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemArrayOutput
}

type GetWirelessDevicesEthernetStatusesItemArray []GetWirelessDevicesEthernetStatusesItemInput

func (GetWirelessDevicesEthernetStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesEthernetStatusesItem)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemArray) ToGetWirelessDevicesEthernetStatusesItemArrayOutput() GetWirelessDevicesEthernetStatusesItemArrayOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemArray) ToGetWirelessDevicesEthernetStatusesItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemArrayOutput)
}

type GetWirelessDevicesEthernetStatusesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItem)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemOutput) ToGetWirelessDevicesEthernetStatusesItemOutput() GetWirelessDevicesEthernetStatusesItemOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemOutput) ToGetWirelessDevicesEthernetStatusesItemOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemOutput {
	return o
}

// Aggregation details object
func (o GetWirelessDevicesEthernetStatusesItemOutput) Aggregation() GetWirelessDevicesEthernetStatusesItemAggregationOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) GetWirelessDevicesEthernetStatusesItemAggregation {
		return v.Aggregation
	}).(GetWirelessDevicesEthernetStatusesItemAggregationOutput)
}

// The name of the AP
func (o GetWirelessDevicesEthernetStatusesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) string { return v.Name }).(pulumi.StringOutput)
}

// Network details object
func (o GetWirelessDevicesEthernetStatusesItemOutput) Network() GetWirelessDevicesEthernetStatusesItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) GetWirelessDevicesEthernetStatusesItemNetwork {
		return v.Network
	}).(GetWirelessDevicesEthernetStatusesItemNetworkOutput)
}

// List of port details
func (o GetWirelessDevicesEthernetStatusesItemOutput) Ports() GetWirelessDevicesEthernetStatusesItemPortArrayOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) []GetWirelessDevicesEthernetStatusesItemPort {
		return v.Ports
	}).(GetWirelessDevicesEthernetStatusesItemPortArrayOutput)
}

// Power details object
func (o GetWirelessDevicesEthernetStatusesItemOutput) Power() GetWirelessDevicesEthernetStatusesItemPowerOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) GetWirelessDevicesEthernetStatusesItemPower {
		return v.Power
	}).(GetWirelessDevicesEthernetStatusesItemPowerOutput)
}

// The serial number of the AP
func (o GetWirelessDevicesEthernetStatusesItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetWirelessDevicesEthernetStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesEthernetStatusesItem)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemArrayOutput) ToGetWirelessDevicesEthernetStatusesItemArrayOutput() GetWirelessDevicesEthernetStatusesItemArrayOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemArrayOutput) ToGetWirelessDevicesEthernetStatusesItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemArrayOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesEthernetStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesEthernetStatusesItem {
		return vs[0].([]GetWirelessDevicesEthernetStatusesItem)[vs[1].(int)]
	}).(GetWirelessDevicesEthernetStatusesItemOutput)
}

type GetWirelessDevicesEthernetStatusesItemAggregation struct {
	// Link Aggregation enabled flag
	Enabled bool `pulumi:"enabled"`
	// Link Aggregation speed
	Speed int `pulumi:"speed"`
}

// GetWirelessDevicesEthernetStatusesItemAggregationInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemAggregationArgs and GetWirelessDevicesEthernetStatusesItemAggregationOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemAggregationInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemAggregationArgs{...}
type GetWirelessDevicesEthernetStatusesItemAggregationInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemAggregationOutput() GetWirelessDevicesEthernetStatusesItemAggregationOutput
	ToGetWirelessDevicesEthernetStatusesItemAggregationOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemAggregationOutput
}

type GetWirelessDevicesEthernetStatusesItemAggregationArgs struct {
	// Link Aggregation enabled flag
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Link Aggregation speed
	Speed pulumi.IntInput `pulumi:"speed"`
}

func (GetWirelessDevicesEthernetStatusesItemAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemAggregation)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemAggregationArgs) ToGetWirelessDevicesEthernetStatusesItemAggregationOutput() GetWirelessDevicesEthernetStatusesItemAggregationOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemAggregationOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemAggregationArgs) ToGetWirelessDevicesEthernetStatusesItemAggregationOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemAggregationOutput)
}

type GetWirelessDevicesEthernetStatusesItemAggregationOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemAggregation)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemAggregationOutput) ToGetWirelessDevicesEthernetStatusesItemAggregationOutput() GetWirelessDevicesEthernetStatusesItemAggregationOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemAggregationOutput) ToGetWirelessDevicesEthernetStatusesItemAggregationOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemAggregationOutput {
	return o
}

// Link Aggregation enabled flag
func (o GetWirelessDevicesEthernetStatusesItemAggregationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemAggregation) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Link Aggregation speed
func (o GetWirelessDevicesEthernetStatusesItemAggregationOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemAggregation) int { return v.Speed }).(pulumi.IntOutput)
}

type GetWirelessDevicesEthernetStatusesItemNetwork struct {
	// The network ID the AP is associated to
	Id string `pulumi:"id"`
}

// GetWirelessDevicesEthernetStatusesItemNetworkInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemNetworkArgs and GetWirelessDevicesEthernetStatusesItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemNetworkInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemNetworkArgs{...}
type GetWirelessDevicesEthernetStatusesItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemNetworkOutput() GetWirelessDevicesEthernetStatusesItemNetworkOutput
	ToGetWirelessDevicesEthernetStatusesItemNetworkOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemNetworkOutput
}

type GetWirelessDevicesEthernetStatusesItemNetworkArgs struct {
	// The network ID the AP is associated to
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessDevicesEthernetStatusesItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemNetworkArgs) ToGetWirelessDevicesEthernetStatusesItemNetworkOutput() GetWirelessDevicesEthernetStatusesItemNetworkOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemNetworkArgs) ToGetWirelessDevicesEthernetStatusesItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemNetworkOutput)
}

type GetWirelessDevicesEthernetStatusesItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemNetworkOutput) ToGetWirelessDevicesEthernetStatusesItemNetworkOutput() GetWirelessDevicesEthernetStatusesItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemNetworkOutput) ToGetWirelessDevicesEthernetStatusesItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemNetworkOutput {
	return o
}

// The network ID the AP is associated to
func (o GetWirelessDevicesEthernetStatusesItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessDevicesEthernetStatusesItemPort struct {
	// Link negotiation details object for the port
	LinkNegotiation GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation `pulumi:"linkNegotiation"`
	// Label of the port
	Name string `pulumi:"name"`
	// PoE details object for the port
	Poe GetWirelessDevicesEthernetStatusesItemPortPoe `pulumi:"poe"`
}

// GetWirelessDevicesEthernetStatusesItemPortInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPortArgs and GetWirelessDevicesEthernetStatusesItemPortOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPortInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPortArgs{...}
type GetWirelessDevicesEthernetStatusesItemPortInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPortOutput() GetWirelessDevicesEthernetStatusesItemPortOutput
	ToGetWirelessDevicesEthernetStatusesItemPortOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPortOutput
}

type GetWirelessDevicesEthernetStatusesItemPortArgs struct {
	// Link negotiation details object for the port
	LinkNegotiation GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationInput `pulumi:"linkNegotiation"`
	// Label of the port
	Name pulumi.StringInput `pulumi:"name"`
	// PoE details object for the port
	Poe GetWirelessDevicesEthernetStatusesItemPortPoeInput `pulumi:"poe"`
}

func (GetWirelessDevicesEthernetStatusesItemPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPort)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPortArgs) ToGetWirelessDevicesEthernetStatusesItemPortOutput() GetWirelessDevicesEthernetStatusesItemPortOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPortOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPortArgs) ToGetWirelessDevicesEthernetStatusesItemPortOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPortOutput)
}

// GetWirelessDevicesEthernetStatusesItemPortArrayInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPortArray and GetWirelessDevicesEthernetStatusesItemPortArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPortArrayInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPortArray{ GetWirelessDevicesEthernetStatusesItemPortArgs{...} }
type GetWirelessDevicesEthernetStatusesItemPortArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPortArrayOutput() GetWirelessDevicesEthernetStatusesItemPortArrayOutput
	ToGetWirelessDevicesEthernetStatusesItemPortArrayOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPortArrayOutput
}

type GetWirelessDevicesEthernetStatusesItemPortArray []GetWirelessDevicesEthernetStatusesItemPortInput

func (GetWirelessDevicesEthernetStatusesItemPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesEthernetStatusesItemPort)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPortArray) ToGetWirelessDevicesEthernetStatusesItemPortArrayOutput() GetWirelessDevicesEthernetStatusesItemPortArrayOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPortArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPortArray) ToGetWirelessDevicesEthernetStatusesItemPortArrayOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPortArrayOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPort)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPortOutput) ToGetWirelessDevicesEthernetStatusesItemPortOutput() GetWirelessDevicesEthernetStatusesItemPortOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPortOutput) ToGetWirelessDevicesEthernetStatusesItemPortOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortOutput {
	return o
}

// Link negotiation details object for the port
func (o GetWirelessDevicesEthernetStatusesItemPortOutput) LinkNegotiation() GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPort) GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation {
		return v.LinkNegotiation
	}).(GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput)
}

// Label of the port
func (o GetWirelessDevicesEthernetStatusesItemPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPort) string { return v.Name }).(pulumi.StringOutput)
}

// PoE details object for the port
func (o GetWirelessDevicesEthernetStatusesItemPortOutput) Poe() GetWirelessDevicesEthernetStatusesItemPortPoeOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPort) GetWirelessDevicesEthernetStatusesItemPortPoe {
		return v.Poe
	}).(GetWirelessDevicesEthernetStatusesItemPortPoeOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesEthernetStatusesItemPort)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPortArrayOutput) ToGetWirelessDevicesEthernetStatusesItemPortArrayOutput() GetWirelessDevicesEthernetStatusesItemPortArrayOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPortArrayOutput) ToGetWirelessDevicesEthernetStatusesItemPortArrayOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortArrayOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPortArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesEthernetStatusesItemPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesEthernetStatusesItemPort {
		return vs[0].([]GetWirelessDevicesEthernetStatusesItemPort)[vs[1].(int)]
	}).(GetWirelessDevicesEthernetStatusesItemPortOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation struct {
	// The duplex mode of the port. Can be 'full' or 'half'
	Duplex string `pulumi:"duplex"`
	// The speed of the port
	Speed int `pulumi:"speed"`
}

// GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs and GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs{...}
type GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput() GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput
	ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput
}

type GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs struct {
	// The duplex mode of the port. Can be 'full' or 'half'
	Duplex pulumi.StringInput `pulumi:"duplex"`
	// The speed of the port
	Speed pulumi.IntInput `pulumi:"speed"`
}

func (GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs) ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput() GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs) ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput) ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput() GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput) ToGetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput {
	return o
}

// The duplex mode of the port. Can be 'full' or 'half'
func (o GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput) Duplex() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation) string { return v.Duplex }).(pulumi.StringOutput)
}

// The speed of the port
func (o GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPortLinkNegotiation) int { return v.Speed }).(pulumi.IntOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortPoe struct {
	// The PoE Standard for the port. Can be '802.3at', '802.3af', '802.3bt', or null
	Standard string `pulumi:"standard"`
}

// GetWirelessDevicesEthernetStatusesItemPortPoeInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPortPoeArgs and GetWirelessDevicesEthernetStatusesItemPortPoeOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPortPoeInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPortPoeArgs{...}
type GetWirelessDevicesEthernetStatusesItemPortPoeInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPortPoeOutput() GetWirelessDevicesEthernetStatusesItemPortPoeOutput
	ToGetWirelessDevicesEthernetStatusesItemPortPoeOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPortPoeOutput
}

type GetWirelessDevicesEthernetStatusesItemPortPoeArgs struct {
	// The PoE Standard for the port. Can be '802.3at', '802.3af', '802.3bt', or null
	Standard pulumi.StringInput `pulumi:"standard"`
}

func (GetWirelessDevicesEthernetStatusesItemPortPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortPoe)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPortPoeArgs) ToGetWirelessDevicesEthernetStatusesItemPortPoeOutput() GetWirelessDevicesEthernetStatusesItemPortPoeOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPortPoeOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPortPoeArgs) ToGetWirelessDevicesEthernetStatusesItemPortPoeOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPortPoeOutput)
}

type GetWirelessDevicesEthernetStatusesItemPortPoeOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPortPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortPoe)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPortPoeOutput) ToGetWirelessDevicesEthernetStatusesItemPortPoeOutput() GetWirelessDevicesEthernetStatusesItemPortPoeOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPortPoeOutput) ToGetWirelessDevicesEthernetStatusesItemPortPoeOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPortPoeOutput {
	return o
}

// The PoE Standard for the port. Can be '802.3at', '802.3af', '802.3bt', or null
func (o GetWirelessDevicesEthernetStatusesItemPortPoeOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPortPoe) string { return v.Standard }).(pulumi.StringOutput)
}

type GetWirelessDevicesEthernetStatusesItemPower struct {
	// AC power details object
	Ac GetWirelessDevicesEthernetStatusesItemPowerAc `pulumi:"ac"`
	// The PoE power mode for the AP. Can be 'full' or 'low'
	Mode string `pulumi:"mode"`
	// PoE power details object
	Poe GetWirelessDevicesEthernetStatusesItemPowerPoe `pulumi:"poe"`
}

// GetWirelessDevicesEthernetStatusesItemPowerInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPowerArgs and GetWirelessDevicesEthernetStatusesItemPowerOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPowerInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPowerArgs{...}
type GetWirelessDevicesEthernetStatusesItemPowerInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPowerOutput() GetWirelessDevicesEthernetStatusesItemPowerOutput
	ToGetWirelessDevicesEthernetStatusesItemPowerOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPowerOutput
}

type GetWirelessDevicesEthernetStatusesItemPowerArgs struct {
	// AC power details object
	Ac GetWirelessDevicesEthernetStatusesItemPowerAcInput `pulumi:"ac"`
	// The PoE power mode for the AP. Can be 'full' or 'low'
	Mode pulumi.StringInput `pulumi:"mode"`
	// PoE power details object
	Poe GetWirelessDevicesEthernetStatusesItemPowerPoeInput `pulumi:"poe"`
}

func (GetWirelessDevicesEthernetStatusesItemPowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPower)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPowerArgs) ToGetWirelessDevicesEthernetStatusesItemPowerOutput() GetWirelessDevicesEthernetStatusesItemPowerOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPowerOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPowerArgs) ToGetWirelessDevicesEthernetStatusesItemPowerOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPowerOutput)
}

type GetWirelessDevicesEthernetStatusesItemPowerOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPower)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPowerOutput) ToGetWirelessDevicesEthernetStatusesItemPowerOutput() GetWirelessDevicesEthernetStatusesItemPowerOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPowerOutput) ToGetWirelessDevicesEthernetStatusesItemPowerOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerOutput {
	return o
}

// AC power details object
func (o GetWirelessDevicesEthernetStatusesItemPowerOutput) Ac() GetWirelessDevicesEthernetStatusesItemPowerAcOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPower) GetWirelessDevicesEthernetStatusesItemPowerAc {
		return v.Ac
	}).(GetWirelessDevicesEthernetStatusesItemPowerAcOutput)
}

// The PoE power mode for the AP. Can be 'full' or 'low'
func (o GetWirelessDevicesEthernetStatusesItemPowerOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPower) string { return v.Mode }).(pulumi.StringOutput)
}

// PoE power details object
func (o GetWirelessDevicesEthernetStatusesItemPowerOutput) Poe() GetWirelessDevicesEthernetStatusesItemPowerPoeOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPower) GetWirelessDevicesEthernetStatusesItemPowerPoe {
		return v.Poe
	}).(GetWirelessDevicesEthernetStatusesItemPowerPoeOutput)
}

type GetWirelessDevicesEthernetStatusesItemPowerAc struct {
	// AC power connected
	IsConnected bool `pulumi:"isConnected"`
}

// GetWirelessDevicesEthernetStatusesItemPowerAcInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPowerAcArgs and GetWirelessDevicesEthernetStatusesItemPowerAcOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPowerAcInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPowerAcArgs{...}
type GetWirelessDevicesEthernetStatusesItemPowerAcInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPowerAcOutput() GetWirelessDevicesEthernetStatusesItemPowerAcOutput
	ToGetWirelessDevicesEthernetStatusesItemPowerAcOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPowerAcOutput
}

type GetWirelessDevicesEthernetStatusesItemPowerAcArgs struct {
	// AC power connected
	IsConnected pulumi.BoolInput `pulumi:"isConnected"`
}

func (GetWirelessDevicesEthernetStatusesItemPowerAcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerAc)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPowerAcArgs) ToGetWirelessDevicesEthernetStatusesItemPowerAcOutput() GetWirelessDevicesEthernetStatusesItemPowerAcOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPowerAcOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPowerAcArgs) ToGetWirelessDevicesEthernetStatusesItemPowerAcOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerAcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPowerAcOutput)
}

type GetWirelessDevicesEthernetStatusesItemPowerAcOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPowerAcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerAc)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPowerAcOutput) ToGetWirelessDevicesEthernetStatusesItemPowerAcOutput() GetWirelessDevicesEthernetStatusesItemPowerAcOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPowerAcOutput) ToGetWirelessDevicesEthernetStatusesItemPowerAcOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerAcOutput {
	return o
}

// AC power connected
func (o GetWirelessDevicesEthernetStatusesItemPowerAcOutput) IsConnected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPowerAc) bool { return v.IsConnected }).(pulumi.BoolOutput)
}

type GetWirelessDevicesEthernetStatusesItemPowerPoe struct {
	// PoE power connected
	IsConnected bool `pulumi:"isConnected"`
}

// GetWirelessDevicesEthernetStatusesItemPowerPoeInput is an input type that accepts GetWirelessDevicesEthernetStatusesItemPowerPoeArgs and GetWirelessDevicesEthernetStatusesItemPowerPoeOutput values.
// You can construct a concrete instance of `GetWirelessDevicesEthernetStatusesItemPowerPoeInput` via:
//
//	GetWirelessDevicesEthernetStatusesItemPowerPoeArgs{...}
type GetWirelessDevicesEthernetStatusesItemPowerPoeInput interface {
	pulumi.Input

	ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutput() GetWirelessDevicesEthernetStatusesItemPowerPoeOutput
	ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutputWithContext(context.Context) GetWirelessDevicesEthernetStatusesItemPowerPoeOutput
}

type GetWirelessDevicesEthernetStatusesItemPowerPoeArgs struct {
	// PoE power connected
	IsConnected pulumi.BoolInput `pulumi:"isConnected"`
}

func (GetWirelessDevicesEthernetStatusesItemPowerPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerPoe)(nil)).Elem()
}

func (i GetWirelessDevicesEthernetStatusesItemPowerPoeArgs) ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutput() GetWirelessDevicesEthernetStatusesItemPowerPoeOutput {
	return i.ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutputWithContext(context.Background())
}

func (i GetWirelessDevicesEthernetStatusesItemPowerPoeArgs) ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesEthernetStatusesItemPowerPoeOutput)
}

type GetWirelessDevicesEthernetStatusesItemPowerPoeOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesEthernetStatusesItemPowerPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerPoe)(nil)).Elem()
}

func (o GetWirelessDevicesEthernetStatusesItemPowerPoeOutput) ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutput() GetWirelessDevicesEthernetStatusesItemPowerPoeOutput {
	return o
}

func (o GetWirelessDevicesEthernetStatusesItemPowerPoeOutput) ToGetWirelessDevicesEthernetStatusesItemPowerPoeOutputWithContext(ctx context.Context) GetWirelessDevicesEthernetStatusesItemPowerPoeOutput {
	return o
}

// PoE power connected
func (o GetWirelessDevicesEthernetStatusesItemPowerPoeOutput) IsConnected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessDevicesEthernetStatusesItemPowerPoe) bool { return v.IsConnected }).(pulumi.BoolOutput)
}

type GetWirelessDevicesPacketLossByClientItem struct {
	// Client.
	Client GetWirelessDevicesPacketLossByClientItemClient `pulumi:"client"`
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByClientItemDownstream `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByClientItemNetwork `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByClientItemUpstream `pulumi:"upstream"`
}

// GetWirelessDevicesPacketLossByClientItemInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemArgs and GetWirelessDevicesPacketLossByClientItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemArgs{...}
type GetWirelessDevicesPacketLossByClientItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemOutput() GetWirelessDevicesPacketLossByClientItemOutput
	ToGetWirelessDevicesPacketLossByClientItemOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemOutput
}

type GetWirelessDevicesPacketLossByClientItemArgs struct {
	// Client.
	Client GetWirelessDevicesPacketLossByClientItemClientInput `pulumi:"client"`
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByClientItemDownstreamInput `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByClientItemNetworkInput `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByClientItemUpstreamInput `pulumi:"upstream"`
}

func (GetWirelessDevicesPacketLossByClientItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemArgs) ToGetWirelessDevicesPacketLossByClientItemOutput() GetWirelessDevicesPacketLossByClientItemOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemArgs) ToGetWirelessDevicesPacketLossByClientItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemOutput)
}

// GetWirelessDevicesPacketLossByClientItemArrayInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemArray and GetWirelessDevicesPacketLossByClientItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemArrayInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemArray{ GetWirelessDevicesPacketLossByClientItemArgs{...} }
type GetWirelessDevicesPacketLossByClientItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemArrayOutput() GetWirelessDevicesPacketLossByClientItemArrayOutput
	ToGetWirelessDevicesPacketLossByClientItemArrayOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemArrayOutput
}

type GetWirelessDevicesPacketLossByClientItemArray []GetWirelessDevicesPacketLossByClientItemInput

func (GetWirelessDevicesPacketLossByClientItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByClientItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemArray) ToGetWirelessDevicesPacketLossByClientItemArrayOutput() GetWirelessDevicesPacketLossByClientItemArrayOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemArray) ToGetWirelessDevicesPacketLossByClientItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemArrayOutput)
}

type GetWirelessDevicesPacketLossByClientItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemOutput) ToGetWirelessDevicesPacketLossByClientItemOutput() GetWirelessDevicesPacketLossByClientItemOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemOutput) ToGetWirelessDevicesPacketLossByClientItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemOutput {
	return o
}

// Client.
func (o GetWirelessDevicesPacketLossByClientItemOutput) Client() GetWirelessDevicesPacketLossByClientItemClientOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItem) GetWirelessDevicesPacketLossByClientItemClient {
		return v.Client
	}).(GetWirelessDevicesPacketLossByClientItemClientOutput)
}

// Packets sent from an AP to a client.
func (o GetWirelessDevicesPacketLossByClientItemOutput) Downstream() GetWirelessDevicesPacketLossByClientItemDownstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItem) GetWirelessDevicesPacketLossByClientItemDownstream {
		return v.Downstream
	}).(GetWirelessDevicesPacketLossByClientItemDownstreamOutput)
}

// Network.
func (o GetWirelessDevicesPacketLossByClientItemOutput) Network() GetWirelessDevicesPacketLossByClientItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItem) GetWirelessDevicesPacketLossByClientItemNetwork {
		return v.Network
	}).(GetWirelessDevicesPacketLossByClientItemNetworkOutput)
}

// Packets sent from a client to an AP.
func (o GetWirelessDevicesPacketLossByClientItemOutput) Upstream() GetWirelessDevicesPacketLossByClientItemUpstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItem) GetWirelessDevicesPacketLossByClientItemUpstream {
		return v.Upstream
	}).(GetWirelessDevicesPacketLossByClientItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByClientItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByClientItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemArrayOutput) ToGetWirelessDevicesPacketLossByClientItemArrayOutput() GetWirelessDevicesPacketLossByClientItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemArrayOutput) ToGetWirelessDevicesPacketLossByClientItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesPacketLossByClientItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesPacketLossByClientItem {
		return vs[0].([]GetWirelessDevicesPacketLossByClientItem)[vs[1].(int)]
	}).(GetWirelessDevicesPacketLossByClientItemOutput)
}

type GetWirelessDevicesPacketLossByClientItemClient struct {
	// Client ID.
	Id string `pulumi:"id"`
	// MAC address.
	Mac string `pulumi:"mac"`
}

// GetWirelessDevicesPacketLossByClientItemClientInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemClientArgs and GetWirelessDevicesPacketLossByClientItemClientOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemClientInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemClientArgs{...}
type GetWirelessDevicesPacketLossByClientItemClientInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemClientOutput() GetWirelessDevicesPacketLossByClientItemClientOutput
	ToGetWirelessDevicesPacketLossByClientItemClientOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemClientOutput
}

type GetWirelessDevicesPacketLossByClientItemClientArgs struct {
	// Client ID.
	Id pulumi.StringInput `pulumi:"id"`
	// MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
}

func (GetWirelessDevicesPacketLossByClientItemClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemClient)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemClientArgs) ToGetWirelessDevicesPacketLossByClientItemClientOutput() GetWirelessDevicesPacketLossByClientItemClientOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemClientOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemClientArgs) ToGetWirelessDevicesPacketLossByClientItemClientOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemClientOutput)
}

type GetWirelessDevicesPacketLossByClientItemClientOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemClient)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemClientOutput) ToGetWirelessDevicesPacketLossByClientItemClientOutput() GetWirelessDevicesPacketLossByClientItemClientOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemClientOutput) ToGetWirelessDevicesPacketLossByClientItemClientOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemClientOutput {
	return o
}

// Client ID.
func (o GetWirelessDevicesPacketLossByClientItemClientOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemClient) string { return v.Id }).(pulumi.StringOutput)
}

// MAC address.
func (o GetWirelessDevicesPacketLossByClientItemClientOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemClient) string { return v.Mac }).(pulumi.StringOutput)
}

type GetWirelessDevicesPacketLossByClientItemDownstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost int `pulumi:"lost"`
	// Total packets received by a client.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByClientItemDownstreamInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemDownstreamArgs and GetWirelessDevicesPacketLossByClientItemDownstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemDownstreamInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemDownstreamArgs{...}
type GetWirelessDevicesPacketLossByClientItemDownstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemDownstreamOutput() GetWirelessDevicesPacketLossByClientItemDownstreamOutput
	ToGetWirelessDevicesPacketLossByClientItemDownstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemDownstreamOutput
}

type GetWirelessDevicesPacketLossByClientItemDownstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets received by a client.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByClientItemDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemDownstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemDownstreamArgs) ToGetWirelessDevicesPacketLossByClientItemDownstreamOutput() GetWirelessDevicesPacketLossByClientItemDownstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemDownstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemDownstreamArgs) ToGetWirelessDevicesPacketLossByClientItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemDownstreamOutput)
}

type GetWirelessDevicesPacketLossByClientItemDownstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemDownstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemDownstreamOutput) ToGetWirelessDevicesPacketLossByClientItemDownstreamOutput() GetWirelessDevicesPacketLossByClientItemDownstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemDownstreamOutput) ToGetWirelessDevicesPacketLossByClientItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemDownstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByClientItemDownstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemDownstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by an AP that did not reach the client.
func (o GetWirelessDevicesPacketLossByClientItemDownstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemDownstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets received by a client.
func (o GetWirelessDevicesPacketLossByClientItemDownstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemDownstream) int { return v.Total }).(pulumi.IntOutput)
}

type GetWirelessDevicesPacketLossByClientItemNetwork struct {
	// Network ID.
	Id string `pulumi:"id"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// GetWirelessDevicesPacketLossByClientItemNetworkInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemNetworkArgs and GetWirelessDevicesPacketLossByClientItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemNetworkInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemNetworkArgs{...}
type GetWirelessDevicesPacketLossByClientItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemNetworkOutput() GetWirelessDevicesPacketLossByClientItemNetworkOutput
	ToGetWirelessDevicesPacketLossByClientItemNetworkOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemNetworkOutput
}

type GetWirelessDevicesPacketLossByClientItemNetworkArgs struct {
	// Network ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessDevicesPacketLossByClientItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemNetworkArgs) ToGetWirelessDevicesPacketLossByClientItemNetworkOutput() GetWirelessDevicesPacketLossByClientItemNetworkOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemNetworkArgs) ToGetWirelessDevicesPacketLossByClientItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemNetworkOutput)
}

type GetWirelessDevicesPacketLossByClientItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemNetworkOutput) ToGetWirelessDevicesPacketLossByClientItemNetworkOutput() GetWirelessDevicesPacketLossByClientItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemNetworkOutput) ToGetWirelessDevicesPacketLossByClientItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemNetworkOutput {
	return o
}

// Network ID.
func (o GetWirelessDevicesPacketLossByClientItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network.
func (o GetWirelessDevicesPacketLossByClientItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessDevicesPacketLossByClientItemUpstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost int `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByClientItemUpstreamInput is an input type that accepts GetWirelessDevicesPacketLossByClientItemUpstreamArgs and GetWirelessDevicesPacketLossByClientItemUpstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByClientItemUpstreamInput` via:
//
//	GetWirelessDevicesPacketLossByClientItemUpstreamArgs{...}
type GetWirelessDevicesPacketLossByClientItemUpstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByClientItemUpstreamOutput() GetWirelessDevicesPacketLossByClientItemUpstreamOutput
	ToGetWirelessDevicesPacketLossByClientItemUpstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByClientItemUpstreamOutput
}

type GetWirelessDevicesPacketLossByClientItemUpstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByClientItemUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemUpstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByClientItemUpstreamArgs) ToGetWirelessDevicesPacketLossByClientItemUpstreamOutput() GetWirelessDevicesPacketLossByClientItemUpstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByClientItemUpstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByClientItemUpstreamArgs) ToGetWirelessDevicesPacketLossByClientItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByClientItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByClientItemUpstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByClientItemUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemUpstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByClientItemUpstreamOutput) ToGetWirelessDevicesPacketLossByClientItemUpstreamOutput() GetWirelessDevicesPacketLossByClientItemUpstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByClientItemUpstreamOutput) ToGetWirelessDevicesPacketLossByClientItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByClientItemUpstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByClientItemUpstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemUpstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by a client and did not reach the AP.
func (o GetWirelessDevicesPacketLossByClientItemUpstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemUpstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets sent by a client to an AP.
func (o GetWirelessDevicesPacketLossByClientItemUpstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByClientItemUpstream) int { return v.Total }).(pulumi.IntOutput)
}

type GetWirelessDevicesPacketLossByDeviceItem struct {
	// Device.
	Device GetWirelessDevicesPacketLossByDeviceItemDevice `pulumi:"device"`
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByDeviceItemDownstream `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByDeviceItemNetwork `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByDeviceItemUpstream `pulumi:"upstream"`
}

// GetWirelessDevicesPacketLossByDeviceItemInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemArgs and GetWirelessDevicesPacketLossByDeviceItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemArgs{...}
type GetWirelessDevicesPacketLossByDeviceItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemOutput() GetWirelessDevicesPacketLossByDeviceItemOutput
	ToGetWirelessDevicesPacketLossByDeviceItemOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemOutput
}

type GetWirelessDevicesPacketLossByDeviceItemArgs struct {
	// Device.
	Device GetWirelessDevicesPacketLossByDeviceItemDeviceInput `pulumi:"device"`
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByDeviceItemDownstreamInput `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByDeviceItemNetworkInput `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByDeviceItemUpstreamInput `pulumi:"upstream"`
}

func (GetWirelessDevicesPacketLossByDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemArgs) ToGetWirelessDevicesPacketLossByDeviceItemOutput() GetWirelessDevicesPacketLossByDeviceItemOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemArgs) ToGetWirelessDevicesPacketLossByDeviceItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemOutput)
}

// GetWirelessDevicesPacketLossByDeviceItemArrayInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemArray and GetWirelessDevicesPacketLossByDeviceItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemArrayInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemArray{ GetWirelessDevicesPacketLossByDeviceItemArgs{...} }
type GetWirelessDevicesPacketLossByDeviceItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemArrayOutput() GetWirelessDevicesPacketLossByDeviceItemArrayOutput
	ToGetWirelessDevicesPacketLossByDeviceItemArrayOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemArrayOutput
}

type GetWirelessDevicesPacketLossByDeviceItemArray []GetWirelessDevicesPacketLossByDeviceItemInput

func (GetWirelessDevicesPacketLossByDeviceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByDeviceItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemArray) ToGetWirelessDevicesPacketLossByDeviceItemArrayOutput() GetWirelessDevicesPacketLossByDeviceItemArrayOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemArray) ToGetWirelessDevicesPacketLossByDeviceItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemArrayOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemOutput) ToGetWirelessDevicesPacketLossByDeviceItemOutput() GetWirelessDevicesPacketLossByDeviceItemOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemOutput) ToGetWirelessDevicesPacketLossByDeviceItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemOutput {
	return o
}

// Device.
func (o GetWirelessDevicesPacketLossByDeviceItemOutput) Device() GetWirelessDevicesPacketLossByDeviceItemDeviceOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItem) GetWirelessDevicesPacketLossByDeviceItemDevice {
		return v.Device
	}).(GetWirelessDevicesPacketLossByDeviceItemDeviceOutput)
}

// Packets sent from an AP to a client.
func (o GetWirelessDevicesPacketLossByDeviceItemOutput) Downstream() GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItem) GetWirelessDevicesPacketLossByDeviceItemDownstream {
		return v.Downstream
	}).(GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput)
}

// Network.
func (o GetWirelessDevicesPacketLossByDeviceItemOutput) Network() GetWirelessDevicesPacketLossByDeviceItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItem) GetWirelessDevicesPacketLossByDeviceItemNetwork {
		return v.Network
	}).(GetWirelessDevicesPacketLossByDeviceItemNetworkOutput)
}

// Packets sent from a client to an AP.
func (o GetWirelessDevicesPacketLossByDeviceItemOutput) Upstream() GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItem) GetWirelessDevicesPacketLossByDeviceItemUpstream {
		return v.Upstream
	}).(GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByDeviceItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemArrayOutput) ToGetWirelessDevicesPacketLossByDeviceItemArrayOutput() GetWirelessDevicesPacketLossByDeviceItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemArrayOutput) ToGetWirelessDevicesPacketLossByDeviceItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesPacketLossByDeviceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesPacketLossByDeviceItem {
		return vs[0].([]GetWirelessDevicesPacketLossByDeviceItem)[vs[1].(int)]
	}).(GetWirelessDevicesPacketLossByDeviceItemOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemDevice struct {
	// MAC address
	Mac string `pulumi:"mac"`
	// Name
	Name string `pulumi:"name"`
	// Serial Number
	Serial string `pulumi:"serial"`
}

// GetWirelessDevicesPacketLossByDeviceItemDeviceInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemDeviceArgs and GetWirelessDevicesPacketLossByDeviceItemDeviceOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemDeviceInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemDeviceArgs{...}
type GetWirelessDevicesPacketLossByDeviceItemDeviceInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutput() GetWirelessDevicesPacketLossByDeviceItemDeviceOutput
	ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemDeviceOutput
}

type GetWirelessDevicesPacketLossByDeviceItemDeviceArgs struct {
	// MAC address
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name
	Name pulumi.StringInput `pulumi:"name"`
	// Serial Number
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetWirelessDevicesPacketLossByDeviceItemDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDevice)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemDeviceArgs) ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutput() GetWirelessDevicesPacketLossByDeviceItemDeviceOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemDeviceArgs) ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemDeviceOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemDeviceOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDevice)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutput() GetWirelessDevicesPacketLossByDeviceItemDeviceOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) ToGetWirelessDevicesPacketLossByDeviceItemDeviceOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemDeviceOutput {
	return o
}

// MAC address
func (o GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDevice) string { return v.Mac }).(pulumi.StringOutput)
}

// Name
func (o GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDevice) string { return v.Name }).(pulumi.StringOutput)
}

// Serial Number
func (o GetWirelessDevicesPacketLossByDeviceItemDeviceOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDevice) string { return v.Serial }).(pulumi.StringOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemDownstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost int `pulumi:"lost"`
	// Total packets received by a client.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByDeviceItemDownstreamInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs and GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemDownstreamInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs{...}
type GetWirelessDevicesPacketLossByDeviceItemDownstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutput() GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput
	ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput
}

type GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets received by a client.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDownstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs) ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutput() GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs) ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDownstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutput() GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) ToGetWirelessDevicesPacketLossByDeviceItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDownstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by an AP that did not reach the client.
func (o GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDownstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets received by a client.
func (o GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemDownstream) int { return v.Total }).(pulumi.IntOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemNetwork struct {
	// Network ID.
	Id string `pulumi:"id"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// GetWirelessDevicesPacketLossByDeviceItemNetworkInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemNetworkArgs and GetWirelessDevicesPacketLossByDeviceItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemNetworkInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemNetworkArgs{...}
type GetWirelessDevicesPacketLossByDeviceItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutput() GetWirelessDevicesPacketLossByDeviceItemNetworkOutput
	ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemNetworkOutput
}

type GetWirelessDevicesPacketLossByDeviceItemNetworkArgs struct {
	// Network ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessDevicesPacketLossByDeviceItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemNetworkArgs) ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutput() GetWirelessDevicesPacketLossByDeviceItemNetworkOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemNetworkArgs) ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemNetworkOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemNetworkOutput) ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutput() GetWirelessDevicesPacketLossByDeviceItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemNetworkOutput) ToGetWirelessDevicesPacketLossByDeviceItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemNetworkOutput {
	return o
}

// Network ID.
func (o GetWirelessDevicesPacketLossByDeviceItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network.
func (o GetWirelessDevicesPacketLossByDeviceItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemUpstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost int `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByDeviceItemUpstreamInput is an input type that accepts GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs and GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByDeviceItemUpstreamInput` via:
//
//	GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs{...}
type GetWirelessDevicesPacketLossByDeviceItemUpstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutput() GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput
	ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput
}

type GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemUpstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs) ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutput() GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs) ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemUpstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutput() GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) ToGetWirelessDevicesPacketLossByDeviceItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemUpstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by a client and did not reach the AP.
func (o GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemUpstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets sent by a client to an AP.
func (o GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByDeviceItemUpstream) int { return v.Total }).(pulumi.IntOutput)
}

type GetWirelessDevicesPacketLossByNetworkItem struct {
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByNetworkItemDownstream `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByNetworkItemNetwork `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByNetworkItemUpstream `pulumi:"upstream"`
}

// GetWirelessDevicesPacketLossByNetworkItemInput is an input type that accepts GetWirelessDevicesPacketLossByNetworkItemArgs and GetWirelessDevicesPacketLossByNetworkItemOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByNetworkItemInput` via:
//
//	GetWirelessDevicesPacketLossByNetworkItemArgs{...}
type GetWirelessDevicesPacketLossByNetworkItemInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByNetworkItemOutput() GetWirelessDevicesPacketLossByNetworkItemOutput
	ToGetWirelessDevicesPacketLossByNetworkItemOutputWithContext(context.Context) GetWirelessDevicesPacketLossByNetworkItemOutput
}

type GetWirelessDevicesPacketLossByNetworkItemArgs struct {
	// Packets sent from an AP to a client.
	Downstream GetWirelessDevicesPacketLossByNetworkItemDownstreamInput `pulumi:"downstream"`
	// Network.
	Network GetWirelessDevicesPacketLossByNetworkItemNetworkInput `pulumi:"network"`
	// Packets sent from a client to an AP.
	Upstream GetWirelessDevicesPacketLossByNetworkItemUpstreamInput `pulumi:"upstream"`
}

func (GetWirelessDevicesPacketLossByNetworkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByNetworkItemArgs) ToGetWirelessDevicesPacketLossByNetworkItemOutput() GetWirelessDevicesPacketLossByNetworkItemOutput {
	return i.ToGetWirelessDevicesPacketLossByNetworkItemOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByNetworkItemArgs) ToGetWirelessDevicesPacketLossByNetworkItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByNetworkItemOutput)
}

// GetWirelessDevicesPacketLossByNetworkItemArrayInput is an input type that accepts GetWirelessDevicesPacketLossByNetworkItemArray and GetWirelessDevicesPacketLossByNetworkItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByNetworkItemArrayInput` via:
//
//	GetWirelessDevicesPacketLossByNetworkItemArray{ GetWirelessDevicesPacketLossByNetworkItemArgs{...} }
type GetWirelessDevicesPacketLossByNetworkItemArrayInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByNetworkItemArrayOutput() GetWirelessDevicesPacketLossByNetworkItemArrayOutput
	ToGetWirelessDevicesPacketLossByNetworkItemArrayOutputWithContext(context.Context) GetWirelessDevicesPacketLossByNetworkItemArrayOutput
}

type GetWirelessDevicesPacketLossByNetworkItemArray []GetWirelessDevicesPacketLossByNetworkItemInput

func (GetWirelessDevicesPacketLossByNetworkItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByNetworkItem)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByNetworkItemArray) ToGetWirelessDevicesPacketLossByNetworkItemArrayOutput() GetWirelessDevicesPacketLossByNetworkItemArrayOutput {
	return i.ToGetWirelessDevicesPacketLossByNetworkItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByNetworkItemArray) ToGetWirelessDevicesPacketLossByNetworkItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByNetworkItemArrayOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByNetworkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByNetworkItemOutput) ToGetWirelessDevicesPacketLossByNetworkItemOutput() GetWirelessDevicesPacketLossByNetworkItemOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemOutput) ToGetWirelessDevicesPacketLossByNetworkItemOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemOutput {
	return o
}

// Packets sent from an AP to a client.
func (o GetWirelessDevicesPacketLossByNetworkItemOutput) Downstream() GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItem) GetWirelessDevicesPacketLossByNetworkItemDownstream {
		return v.Downstream
	}).(GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput)
}

// Network.
func (o GetWirelessDevicesPacketLossByNetworkItemOutput) Network() GetWirelessDevicesPacketLossByNetworkItemNetworkOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItem) GetWirelessDevicesPacketLossByNetworkItemNetwork {
		return v.Network
	}).(GetWirelessDevicesPacketLossByNetworkItemNetworkOutput)
}

// Packets sent from a client to an AP.
func (o GetWirelessDevicesPacketLossByNetworkItemOutput) Upstream() GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItem) GetWirelessDevicesPacketLossByNetworkItemUpstream {
		return v.Upstream
	}).(GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByNetworkItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessDevicesPacketLossByNetworkItem)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByNetworkItemArrayOutput) ToGetWirelessDevicesPacketLossByNetworkItemArrayOutput() GetWirelessDevicesPacketLossByNetworkItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemArrayOutput) ToGetWirelessDevicesPacketLossByNetworkItemArrayOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemArrayOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemArrayOutput) Index(i pulumi.IntInput) GetWirelessDevicesPacketLossByNetworkItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessDevicesPacketLossByNetworkItem {
		return vs[0].([]GetWirelessDevicesPacketLossByNetworkItem)[vs[1].(int)]
	}).(GetWirelessDevicesPacketLossByNetworkItemOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemDownstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost int `pulumi:"lost"`
	// Total packets received by a client.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByNetworkItemDownstreamInput is an input type that accepts GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs and GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByNetworkItemDownstreamInput` via:
//
//	GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs{...}
type GetWirelessDevicesPacketLossByNetworkItemDownstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutput() GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput
	ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput
}

type GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by an AP that did not reach the client.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets received by a client.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemDownstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs) ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutput() GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs) ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemDownstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutput() GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) ToGetWirelessDevicesPacketLossByNetworkItemDownstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemDownstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by an AP that did not reach the client.
func (o GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemDownstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets received by a client.
func (o GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemDownstream) int { return v.Total }).(pulumi.IntOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemNetwork struct {
	// Network ID.
	Id string `pulumi:"id"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// GetWirelessDevicesPacketLossByNetworkItemNetworkInput is an input type that accepts GetWirelessDevicesPacketLossByNetworkItemNetworkArgs and GetWirelessDevicesPacketLossByNetworkItemNetworkOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByNetworkItemNetworkInput` via:
//
//	GetWirelessDevicesPacketLossByNetworkItemNetworkArgs{...}
type GetWirelessDevicesPacketLossByNetworkItemNetworkInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutput() GetWirelessDevicesPacketLossByNetworkItemNetworkOutput
	ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutputWithContext(context.Context) GetWirelessDevicesPacketLossByNetworkItemNetworkOutput
}

type GetWirelessDevicesPacketLossByNetworkItemNetworkArgs struct {
	// Network ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessDevicesPacketLossByNetworkItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemNetwork)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByNetworkItemNetworkArgs) ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutput() GetWirelessDevicesPacketLossByNetworkItemNetworkOutput {
	return i.ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByNetworkItemNetworkArgs) ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByNetworkItemNetworkOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByNetworkItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemNetwork)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByNetworkItemNetworkOutput) ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutput() GetWirelessDevicesPacketLossByNetworkItemNetworkOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemNetworkOutput) ToGetWirelessDevicesPacketLossByNetworkItemNetworkOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemNetworkOutput {
	return o
}

// Network ID.
func (o GetWirelessDevicesPacketLossByNetworkItemNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network.
func (o GetWirelessDevicesPacketLossByNetworkItemNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemUpstream struct {
	// Percentage of lost packets.
	LossPercentage float64 `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost int `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total int `pulumi:"total"`
}

// GetWirelessDevicesPacketLossByNetworkItemUpstreamInput is an input type that accepts GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs and GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput values.
// You can construct a concrete instance of `GetWirelessDevicesPacketLossByNetworkItemUpstreamInput` via:
//
//	GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs{...}
type GetWirelessDevicesPacketLossByNetworkItemUpstreamInput interface {
	pulumi.Input

	ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutput() GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput
	ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutputWithContext(context.Context) GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput
}

type GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs struct {
	// Percentage of lost packets.
	LossPercentage pulumi.Float64Input `pulumi:"lossPercentage"`
	// Total packets sent by a client and did not reach the AP.
	Lost pulumi.IntInput `pulumi:"lost"`
	// Total packets sent by a client to an AP.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemUpstream)(nil)).Elem()
}

func (i GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs) ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutput() GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput {
	return i.ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutputWithContext(context.Background())
}

func (i GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs) ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput)
}

type GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput struct{ *pulumi.OutputState }

func (GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemUpstream)(nil)).Elem()
}

func (o GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutput() GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput {
	return o
}

func (o GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) ToGetWirelessDevicesPacketLossByNetworkItemUpstreamOutputWithContext(ctx context.Context) GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput {
	return o
}

// Percentage of lost packets.
func (o GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) LossPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemUpstream) float64 { return v.LossPercentage }).(pulumi.Float64Output)
}

// Total packets sent by a client and did not reach the AP.
func (o GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) Lost() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemUpstream) int { return v.Lost }).(pulumi.IntOutput)
}

// Total packets sent by a client to an AP.
func (o GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessDevicesPacketLossByNetworkItemUpstream) int { return v.Total }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesActionInput)(nil)).Elem(), ActionBatchesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesActionArrayInput)(nil)).Elem(), ActionBatchesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackInput)(nil)).Elem(), ActionBatchesCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackPtrInput)(nil)).Elem(), ActionBatchesCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackHttpServerInput)(nil)).Elem(), ActionBatchesCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackHttpServerPtrInput)(nil)).Elem(), ActionBatchesCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackPayloadTemplateInput)(nil)).Elem(), ActionBatchesCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesCallbackPayloadTemplatePtrInput)(nil)).Elem(), ActionBatchesCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesStatusInput)(nil)).Elem(), ActionBatchesStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesStatusPtrInput)(nil)).Elem(), ActionBatchesStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesStatusCreatedResourceInput)(nil)).Elem(), ActionBatchesStatusCreatedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionBatchesStatusCreatedResourceArrayInput)(nil)).Elem(), ActionBatchesStatusCreatedResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyAclsRuleInput)(nil)).Elem(), AdaptivePolicyAclsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyAclsRuleArrayInput)(nil)).Elem(), AdaptivePolicyAclsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyGroupsPolicyObjectInput)(nil)).Elem(), AdaptivePolicyGroupsPolicyObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyGroupsPolicyObjectArrayInput)(nil)).Elem(), AdaptivePolicyGroupsPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesAclInput)(nil)).Elem(), AdaptivePolicyPoliciesAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesAclArrayInput)(nil)).Elem(), AdaptivePolicyPoliciesAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesDestinationGroupInput)(nil)).Elem(), AdaptivePolicyPoliciesDestinationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesDestinationGroupPtrInput)(nil)).Elem(), AdaptivePolicyPoliciesDestinationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesSourceGroupInput)(nil)).Elem(), AdaptivePolicyPoliciesSourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptivePolicyPoliciesSourceGroupPtrInput)(nil)).Elem(), AdaptivePolicyPoliciesSourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminsNetworkInput)(nil)).Elem(), AdminsNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminsNetworkArrayInput)(nil)).Elem(), AdminsNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminsTagInput)(nil)).Elem(), AdminsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminsTagArrayInput)(nil)).Elem(), AdminsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesAlertConditionInput)(nil)).Elem(), AlertsProfilesAlertConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesAlertConditionPtrInput)(nil)).Elem(), AlertsProfilesAlertConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesRecipientsInput)(nil)).Elem(), AlertsProfilesRecipientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsProfilesRecipientsPtrInput)(nil)).Elem(), AlertsProfilesRecipientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceSecurityIntrusionAllowedRuleInput)(nil)).Elem(), ApplianceSecurityIntrusionAllowedRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceSecurityIntrusionAllowedRuleArrayInput)(nil)).Elem(), ApplianceSecurityIntrusionAllowedRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerArrayInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeersResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseArrayInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeersResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrInput)(nil)).Elem(), ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnVpnFirewallRulesRuleInput)(nil)).Elem(), ApplianceVpnVpnFirewallRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVpnVpnFirewallRulesRuleArrayInput)(nil)).Elem(), ApplianceVpnVpnFirewallRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesAdminSettingsInput)(nil)).Elem(), BrandingPoliciesAdminSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesAdminSettingsPtrInput)(nil)).Elem(), BrandingPoliciesAdminSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoInput)(nil)).Elem(), BrandingPoliciesCustomLogoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoPtrInput)(nil)).Elem(), BrandingPoliciesCustomLogoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoImageInput)(nil)).Elem(), BrandingPoliciesCustomLogoImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoImagePtrInput)(nil)).Elem(), BrandingPoliciesCustomLogoImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoImagePreviewInput)(nil)).Elem(), BrandingPoliciesCustomLogoImagePreviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesCustomLogoImagePreviewPtrInput)(nil)).Elem(), BrandingPoliciesCustomLogoImagePreviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesHelpSettingsInput)(nil)).Elem(), BrandingPoliciesHelpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingPoliciesHelpSettingsPtrInput)(nil)).Elem(), BrandingPoliciesHelpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsArtifactsStatusInput)(nil)).Elem(), CameraCustomAnalyticsArtifactsStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsArtifactsStatusPtrInput)(nil)).Elem(), CameraCustomAnalyticsArtifactsStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOnDeviceInput)(nil)).Elem(), CameraRolesAppliedOnDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOnDeviceArrayInput)(nil)).Elem(), CameraRolesAppliedOnDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOnNetworkInput)(nil)).Elem(), CameraRolesAppliedOnNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOnNetworkArrayInput)(nil)).Elem(), CameraRolesAppliedOnNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOrgWideInput)(nil)).Elem(), CameraRolesAppliedOrgWideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraRolesAppliedOrgWideArrayInput)(nil)).Elem(), CameraRolesAppliedOrgWideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimItemInput)(nil)).Elem(), ClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimItemPtrInput)(nil)).Elem(), ClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimItemLicenseInput)(nil)).Elem(), ClaimItemLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimItemLicenseArrayInput)(nil)).Elem(), ClaimItemLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimParametersInput)(nil)).Elem(), ClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimParametersPtrInput)(nil)).Elem(), ClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimParametersLicenseInput)(nil)).Elem(), ClaimParametersLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClaimParametersLicenseArrayInput)(nil)).Elem(), ClaimParametersLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemInput)(nil)).Elem(), CloneItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemPtrInput)(nil)).Elem(), CloneItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemApiInput)(nil)).Elem(), CloneItemApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemApiPtrInput)(nil)).Elem(), CloneItemApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemCloudInput)(nil)).Elem(), CloneItemCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemCloudPtrInput)(nil)).Elem(), CloneItemCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemCloudRegionInput)(nil)).Elem(), CloneItemCloudRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemCloudRegionPtrInput)(nil)).Elem(), CloneItemCloudRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemLicensingInput)(nil)).Elem(), CloneItemLicensingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemLicensingPtrInput)(nil)).Elem(), CloneItemLicensingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemManagementInput)(nil)).Elem(), CloneItemManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemManagementPtrInput)(nil)).Elem(), CloneItemManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemManagementDetailInput)(nil)).Elem(), CloneItemManagementDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneItemManagementDetailArrayInput)(nil)).Elem(), CloneItemManagementDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneParametersInput)(nil)).Elem(), CloneParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloneParametersPtrInput)(nil)).Elem(), CloneParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsMirrorInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsMirrorPtrInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsModuleInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsModulePtrInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsProfileInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigTemplatesSwitchProfilesPortsProfilePtrInput)(nil)).Elem(), ConfigTemplatesSwitchProfilesPortsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimItemInput)(nil)).Elem(), InventoryClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimItemPtrInput)(nil)).Elem(), InventoryClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimItemLicenseInput)(nil)).Elem(), InventoryClaimItemLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimItemLicenseArrayInput)(nil)).Elem(), InventoryClaimItemLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimParametersInput)(nil)).Elem(), InventoryClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimParametersPtrInput)(nil)).Elem(), InventoryClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimParametersLicenseInput)(nil)).Elem(), InventoryClaimParametersLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryClaimParametersLicenseArrayInput)(nil)).Elem(), InventoryClaimParametersLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringExportEventsParametersInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringExportEventsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringExportEventsParametersPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringExportEventsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersDeviceInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemArrayInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemItemInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersItemItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringImportsParametersItemItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemArrayInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrInput)(nil)).Elem(), InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryReleaseItemInput)(nil)).Elem(), InventoryReleaseItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryReleaseItemPtrInput)(nil)).Elem(), InventoryReleaseItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryReleaseParametersInput)(nil)).Elem(), InventoryReleaseParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InventoryReleaseParametersPtrInput)(nil)).Elem(), InventoryReleaseParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemInput)(nil)).Elem(), LicensesAssignSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemPtrInput)(nil)).Elem(), LicensesAssignSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemResultingLicenseInput)(nil)).Elem(), LicensesAssignSeatsItemResultingLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemResultingLicenseArrayInput)(nil)).Elem(), LicensesAssignSeatsItemResultingLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseInput)(nil)).Elem(), LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput)(nil)).Elem(), LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsParametersInput)(nil)).Elem(), LicensesAssignSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesAssignSeatsParametersPtrInput)(nil)).Elem(), LicensesAssignSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveItemInput)(nil)).Elem(), LicensesMoveItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveItemPtrInput)(nil)).Elem(), LicensesMoveItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveParametersInput)(nil)).Elem(), LicensesMoveParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveParametersPtrInput)(nil)).Elem(), LicensesMoveParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveSeatsItemInput)(nil)).Elem(), LicensesMoveSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveSeatsItemPtrInput)(nil)).Elem(), LicensesMoveSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveSeatsParametersInput)(nil)).Elem(), LicensesMoveSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesMoveSeatsParametersPtrInput)(nil)).Elem(), LicensesMoveSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesPermanentlyQueuedLicenseInput)(nil)).Elem(), LicensesPermanentlyQueuedLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesPermanentlyQueuedLicenseArrayInput)(nil)).Elem(), LicensesPermanentlyQueuedLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemInput)(nil)).Elem(), LicensesRenewSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemPtrInput)(nil)).Elem(), LicensesRenewSeatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemResultingLicenseInput)(nil)).Elem(), LicensesRenewSeatsItemResultingLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemResultingLicenseArrayInput)(nil)).Elem(), LicensesRenewSeatsItemResultingLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseInput)(nil)).Elem(), LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayInput)(nil)).Elem(), LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsParametersInput)(nil)).Elem(), LicensesRenewSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensesRenewSeatsParametersPtrInput)(nil)).Elem(), LicensesRenewSeatsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemInput)(nil)).Elem(), LicensingCotermLicensesMoveItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemPtrInput)(nil)).Elem(), LicensingCotermLicensesMoveItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseCountInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseCountArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseEditionInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseEditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemMovedLicenseEditionArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemMovedLicenseEditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseCountInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseCountArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseEditionInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseEditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveItemRemainderLicenseEditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersPtrInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersDestinationInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersDestinationPtrInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseCountInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersLicenseCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingCotermLicensesMoveParametersLicenseCountArrayInput)(nil)).Elem(), LicensingCotermLicensesMoveParametersLicenseCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginSecurityApiAuthenticationInput)(nil)).Elem(), LoginSecurityApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginSecurityApiAuthenticationPtrInput)(nil)).Elem(), LoginSecurityApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginSecurityApiAuthenticationIpRestrictionsForKeysInput)(nil)).Elem(), LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrInput)(nil)).Elem(), LoginSecurityApiAuthenticationIpRestrictionsForKeysArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineItemInput)(nil)).Elem(), NetworksCombineItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineItemPtrInput)(nil)).Elem(), NetworksCombineItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineItemResultingNetworkInput)(nil)).Elem(), NetworksCombineItemResultingNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineItemResultingNetworkPtrInput)(nil)).Elem(), NetworksCombineItemResultingNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineParametersInput)(nil)).Elem(), NetworksCombineParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworksCombineParametersPtrInput)(nil)).Elem(), NetworksCombineParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesCameraInput)(nil)).Elem(), SamlRolesCameraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesCameraArrayInput)(nil)).Elem(), SamlRolesCameraArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesNetworkInput)(nil)).Elem(), SamlRolesNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesNetworkArrayInput)(nil)).Elem(), SamlRolesNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesTagInput)(nil)).Elem(), SamlRolesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesTagArrayInput)(nil)).Elem(), SamlRolesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemPtrInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemArrayInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemPolicyInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemItemPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsItemItemPolicyArrayInput)(nil)).Elem(), SmSentryPoliciesAssignmentsItemItemPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersPtrInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemArrayInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemPolicyInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersItemPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmSentryPoliciesAssignmentsParametersItemPolicyArrayInput)(nil)).Elem(), SmSentryPoliciesAssignmentsParametersItemPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDevicesCloneParametersInput)(nil)).Elem(), SwitchDevicesCloneParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDevicesCloneParametersPtrInput)(nil)).Elem(), SwitchDevicesCloneParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseApiInput)(nil)).Elem(), BaseApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseApiPtrInput)(nil)).Elem(), BaseApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseCloudInput)(nil)).Elem(), BaseCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseCloudPtrInput)(nil)).Elem(), BaseCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseCloudRegionInput)(nil)).Elem(), BaseCloudRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseCloudRegionPtrInput)(nil)).Elem(), BaseCloudRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseLicensingInput)(nil)).Elem(), BaseLicensingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseLicensingPtrInput)(nil)).Elem(), BaseLicensingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseManagementInput)(nil)).Elem(), BaseManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseManagementPtrInput)(nil)).Elem(), BaseManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseManagementDetailInput)(nil)).Elem(), BaseManagementDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseManagementDetailArrayInput)(nil)).Elem(), BaseManagementDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemInput)(nil)).Elem(), GetActionBatchesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemArrayInput)(nil)).Elem(), GetActionBatchesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemActionInput)(nil)).Elem(), GetActionBatchesItemActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemActionArrayInput)(nil)).Elem(), GetActionBatchesItemActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemCallbackInput)(nil)).Elem(), GetActionBatchesItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemStatusInput)(nil)).Elem(), GetActionBatchesItemStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemStatusCreatedResourceInput)(nil)).Elem(), GetActionBatchesItemStatusCreatedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionBatchesItemStatusCreatedResourceArrayInput)(nil)).Elem(), GetActionBatchesItemStatusCreatedResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyAclsItemInput)(nil)).Elem(), GetAdaptivePolicyAclsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyAclsItemArrayInput)(nil)).Elem(), GetAdaptivePolicyAclsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyAclsItemRuleInput)(nil)).Elem(), GetAdaptivePolicyAclsItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyAclsItemRuleArrayInput)(nil)).Elem(), GetAdaptivePolicyAclsItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyGroupsItemInput)(nil)).Elem(), GetAdaptivePolicyGroupsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyGroupsItemArrayInput)(nil)).Elem(), GetAdaptivePolicyGroupsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyGroupsItemPolicyObjectInput)(nil)).Elem(), GetAdaptivePolicyGroupsItemPolicyObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyGroupsItemPolicyObjectArrayInput)(nil)).Elem(), GetAdaptivePolicyGroupsItemPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyOverviewItemInput)(nil)).Elem(), GetAdaptivePolicyOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyOverviewItemCountsInput)(nil)).Elem(), GetAdaptivePolicyOverviewItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyOverviewItemLimitsInput)(nil)).Elem(), GetAdaptivePolicyOverviewItemLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemArrayInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemAclInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemAclArrayInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemDestinationGroupInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemDestinationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicyPoliciesItemSourceGroupInput)(nil)).Elem(), GetAdaptivePolicyPoliciesItemSourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptivePolicySettingsItemInput)(nil)).Elem(), GetAdaptivePolicySettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemInput)(nil)).Elem(), GetAdminsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemArrayInput)(nil)).Elem(), GetAdminsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemNetworkInput)(nil)).Elem(), GetAdminsItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemNetworkArrayInput)(nil)).Elem(), GetAdminsItemNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemTagInput)(nil)).Elem(), GetAdminsItemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsItemTagArrayInput)(nil)).Elem(), GetAdminsItemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsProfilesItemInput)(nil)).Elem(), GetAlertsProfilesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsProfilesItemArrayInput)(nil)).Elem(), GetAlertsProfilesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsProfilesItemAlertConditionInput)(nil)).Elem(), GetAlertsProfilesItemAlertConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsProfilesItemRecipientsInput)(nil)).Elem(), GetAlertsProfilesItemRecipientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsItemInput)(nil)).Elem(), GetApiRequestsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsItemArrayInput)(nil)).Elem(), GetApiRequestsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewItemInput)(nil)).Elem(), GetApiRequestsOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewItemResponseCodeCountsInput)(nil)).Elem(), GetApiRequestsOverviewItemResponseCodeCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemInput)(nil)).Elem(), GetApiRequestsOverviewResponseCodesByIntervalItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemArrayInput)(nil)).Elem(), GetApiRequestsOverviewResponseCodesByIntervalItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemCountInput)(nil)).Elem(), GetApiRequestsOverviewResponseCodesByIntervalItemCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayInput)(nil)).Elem(), GetApiRequestsOverviewResponseCodesByIntervalItemCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceSecurityIntrusionItemInput)(nil)).Elem(), GetApplianceSecurityIntrusionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceSecurityIntrusionItemAllowedRuleInput)(nil)).Elem(), GetApplianceSecurityIntrusionItemAllowedRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceSecurityIntrusionItemAllowedRuleArrayInput)(nil)).Elem(), GetApplianceSecurityIntrusionItemAllowedRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayInput)(nil)).Elem(), GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemInput)(nil)).Elem(), GetApplianceUplinksStatusesOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCountsInput)(nil)).Elem(), GetApplianceUplinksStatusesOverviewItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksStatusesOverviewItemCountsByStatusInput)(nil)).Elem(), GetApplianceUplinksStatusesOverviewItemCountsByStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemInput)(nil)).Elem(), GetApplianceUplinksUsageByNetworkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemArrayInput)(nil)).Elem(), GetApplianceUplinksUsageByNetworkItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemByUplinkInput)(nil)).Elem(), GetApplianceUplinksUsageByNetworkItemByUplinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksUsageByNetworkItemByUplinkArrayInput)(nil)).Elem(), GetApplianceUplinksUsageByNetworkItemByUplinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemInput)(nil)).Elem(), GetApplianceVpnThirdPartyVpnpeersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeerInput)(nil)).Elem(), GetApplianceVpnThirdPartyVpnpeersItemPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeerArrayInput)(nil)).Elem(), GetApplianceVpnThirdPartyVpnpeersItemPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesInput)(nil)).Elem(), GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItemInput)(nil)).Elem(), GetApplianceVpnVpnFirewallRulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItemRuleInput)(nil)).Elem(), GetApplianceVpnVpnFirewallRulesItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceVpnVpnFirewallRulesItemRuleArrayInput)(nil)).Elem(), GetApplianceVpnVpnFirewallRulesItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemInput)(nil)).Elem(), GetBrandingPoliciesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemArrayInput)(nil)).Elem(), GetBrandingPoliciesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemAdminSettingsInput)(nil)).Elem(), GetBrandingPoliciesItemAdminSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoInput)(nil)).Elem(), GetBrandingPoliciesItemCustomLogoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImageInput)(nil)).Elem(), GetBrandingPoliciesItemCustomLogoImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemCustomLogoImagePreviewInput)(nil)).Elem(), GetBrandingPoliciesItemCustomLogoImagePreviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesItemHelpSettingsInput)(nil)).Elem(), GetBrandingPoliciesItemHelpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingPoliciesPrioritiesItemInput)(nil)).Elem(), GetBrandingPoliciesPrioritiesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemInput)(nil)).Elem(), GetCameraBoundariesAreasByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemArrayInput)(nil)).Elem(), GetCameraBoundariesAreasByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundariesInput)(nil)).Elem(), GetCameraBoundariesAreasByDeviceItemBoundariesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundariesVertexInput)(nil)).Elem(), GetCameraBoundariesAreasByDeviceItemBoundariesVertexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayInput)(nil)).Elem(), GetCameraBoundariesAreasByDeviceItemBoundariesVertexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemArrayInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemBoundariesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesVertexInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemBoundariesVertexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayInput)(nil)).Elem(), GetCameraBoundariesLinesByDeviceItemBoundariesVertexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItemInput)(nil)).Elem(), GetCameraCustomAnalyticsArtifactsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItemArrayInput)(nil)).Elem(), GetCameraCustomAnalyticsArtifactsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsArtifactsItemStatusInput)(nil)).Elem(), GetCameraCustomAnalyticsArtifactsItemStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItemInput)(nil)).Elem(), GetCameraDetectionsHistoryByBoundaryByIntervalItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayInput)(nil)).Elem(), GetCameraDetectionsHistoryByBoundaryByIntervalItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsInput)(nil)).Elem(), GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraPermissionsItemInput)(nil)).Elem(), GetCameraPermissionsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemInput)(nil)).Elem(), GetCameraRolesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemArrayInput)(nil)).Elem(), GetCameraRolesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOnDeviceInput)(nil)).Elem(), GetCameraRolesItemAppliedOnDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOnDeviceArrayInput)(nil)).Elem(), GetCameraRolesItemAppliedOnDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOnNetworkInput)(nil)).Elem(), GetCameraRolesItemAppliedOnNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOnNetworkArrayInput)(nil)).Elem(), GetCameraRolesItemAppliedOnNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOrgWideInput)(nil)).Elem(), GetCameraRolesItemAppliedOrgWideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraRolesItemAppliedOrgWideArrayInput)(nil)).Elem(), GetCameraRolesItemAppliedOrgWideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemInput)(nil)).Elem(), GetCellularGatewayUplinkStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemArrayInput)(nil)).Elem(), GetCellularGatewayUplinkStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplinkInput)(nil)).Elem(), GetCellularGatewayUplinkStatusesItemUplinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplinkArrayInput)(nil)).Elem(), GetCellularGatewayUplinkStatusesItemUplinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayUplinkStatusesItemUplinkSignalStatInput)(nil)).Elem(), GetCellularGatewayUplinkStatusesItemUplinkSignalStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsBandwidthUsageHistoryItemInput)(nil)).Elem(), GetClientsBandwidthUsageHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsBandwidthUsageHistoryItemArrayInput)(nil)).Elem(), GetClientsBandwidthUsageHistoryItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsOverviewItemInput)(nil)).Elem(), GetClientsOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsOverviewItemCountsInput)(nil)).Elem(), GetClientsOverviewItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsOverviewItemUsageInput)(nil)).Elem(), GetClientsOverviewItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsOverviewItemUsageOverallInput)(nil)).Elem(), GetClientsOverviewItemUsageOverallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemInput)(nil)).Elem(), GetClientsSearchItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemRecordInput)(nil)).Elem(), GetClientsSearchItemRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemRecordArrayInput)(nil)).Elem(), GetClientsSearchItemRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemRecordClientVpnConnectionInput)(nil)).Elem(), GetClientsSearchItemRecordClientVpnConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemRecordClientVpnConnectionArrayInput)(nil)).Elem(), GetClientsSearchItemRecordClientVpnConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientsSearchItemRecordNetworkInput)(nil)).Elem(), GetClientsSearchItemRecordNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesItemInput)(nil)).Elem(), GetConfigTemplatesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesItemArrayInput)(nil)).Elem(), GetConfigTemplatesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesItemInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesItemArrayInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesPortsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemArrayInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesPortsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemMirrorInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesPortsItemMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemModuleInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesPortsItemModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigTemplatesSwitchProfilesPortsItemProfileInput)(nil)).Elem(), GetConfigTemplatesSwitchProfilesPortsItemProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemArrayInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsOldInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemDeviceInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesChangeHistoryItemNetworkInput)(nil)).Elem(), GetDevicesAvailabilitiesChangeHistoryItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesItemInput)(nil)).Elem(), GetDevicesAvailabilitiesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesItemArrayInput)(nil)).Elem(), GetDevicesAvailabilitiesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesAvailabilitiesItemNetworkInput)(nil)).Elem(), GetDevicesAvailabilitiesItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesBootsHistoryItemInput)(nil)).Elem(), GetDevicesBootsHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesBootsHistoryItemArrayInput)(nil)).Elem(), GetDevicesBootsHistoryItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesBootsHistoryItemNetworkInput)(nil)).Elem(), GetDevicesBootsHistoryItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesBootsHistoryItemStartInput)(nil)).Elem(), GetDevicesBootsHistoryItemStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesItemInput)(nil)).Elem(), GetDevicesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesItemArrayInput)(nil)).Elem(), GetDevicesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesItemDetailInput)(nil)).Elem(), GetDevicesItemDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesItemDetailArrayInput)(nil)).Elem(), GetDevicesItemDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemInput)(nil)).Elem(), GetDevicesPowerModulesStatusesByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemArrayInput)(nil)).Elem(), GetDevicesPowerModulesStatusesByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemNetworkInput)(nil)).Elem(), GetDevicesPowerModulesStatusesByDeviceItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemSlotInput)(nil)).Elem(), GetDevicesPowerModulesStatusesByDeviceItemSlotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesPowerModulesStatusesByDeviceItemSlotArrayInput)(nil)).Elem(), GetDevicesPowerModulesStatusesByDeviceItemSlotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesProvisioningStatusesItemInput)(nil)).Elem(), GetDevicesProvisioningStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesProvisioningStatusesItemArrayInput)(nil)).Elem(), GetDevicesProvisioningStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesProvisioningStatusesItemNetworkInput)(nil)).Elem(), GetDevicesProvisioningStatusesItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemInput)(nil)).Elem(), GetDevicesStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemArrayInput)(nil)).Elem(), GetDevicesStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemComponentsInput)(nil)).Elem(), GetDevicesStatusesItemComponentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupplyInput)(nil)).Elem(), GetDevicesStatusesItemComponentsPowerSupplyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupplyArrayInput)(nil)).Elem(), GetDevicesStatusesItemComponentsPowerSupplyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesItemComponentsPowerSupplyPoeInput)(nil)).Elem(), GetDevicesStatusesItemComponentsPowerSupplyPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesOverviewItemInput)(nil)).Elem(), GetDevicesStatusesOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesOverviewItemCountsInput)(nil)).Elem(), GetDevicesStatusesOverviewItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesStatusesOverviewItemCountsByStatusInput)(nil)).Elem(), GetDevicesStatusesOverviewItemCountsByStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemArrayInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemNetworkInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemUplinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkArrayInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemUplinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddressInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemUplinkAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemUplinkAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicInput)(nil)).Elem(), GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemInput)(nil)).Elem(), GetDevicesUplinksLossAndLatencyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemArrayInput)(nil)).Elem(), GetDevicesUplinksLossAndLatencyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemTimeSeriesInput)(nil)).Elem(), GetDevicesUplinksLossAndLatencyItemTimeSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayInput)(nil)).Elem(), GetDevicesUplinksLossAndLatencyItemTimeSeriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesItemInput)(nil)).Elem(), GetEarlyAccessFeaturesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesItemArrayInput)(nil)).Elem(), GetEarlyAccessFeaturesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesItemDescriptionsInput)(nil)).Elem(), GetEarlyAccessFeaturesItemDescriptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItemInput)(nil)).Elem(), GetEarlyAccessFeaturesOptInsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkInput)(nil)).Elem(), GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayInput)(nil)).Elem(), GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemArrayInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeFromVersionInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemUpgradeFromVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStagedInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemUpgradeStagedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesByDeviceItemUpgradeToVersionInput)(nil)).Elem(), GetFirmwareUpgradesByDeviceItemUpgradeToVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesItemInput)(nil)).Elem(), GetFirmwareUpgradesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesItemArrayInput)(nil)).Elem(), GetFirmwareUpgradesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesItemFromVersionInput)(nil)).Elem(), GetFirmwareUpgradesItemFromVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesItemNetworkInput)(nil)).Elem(), GetFirmwareUpgradesItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirmwareUpgradesItemToVersionInput)(nil)).Elem(), GetFirmwareUpgradesItemToVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightApplicationsItemInput)(nil)).Elem(), GetInsightApplicationsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightApplicationsItemArrayInput)(nil)).Elem(), GetInsightApplicationsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightApplicationsItemThresholdsInput)(nil)).Elem(), GetInsightApplicationsItemThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightApplicationsItemThresholdsByNetworkInput)(nil)).Elem(), GetInsightApplicationsItemThresholdsByNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightApplicationsItemThresholdsByNetworkArrayInput)(nil)).Elem(), GetInsightApplicationsItemThresholdsByNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightMonitoredMediaServersItemInput)(nil)).Elem(), GetInsightMonitoredMediaServersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsightMonitoredMediaServersItemArrayInput)(nil)).Elem(), GetInsightMonitoredMediaServersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryDevicesItemInput)(nil)).Elem(), GetInventoryDevicesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryDevicesItemArrayInput)(nil)).Elem(), GetInventoryDevicesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryDevicesItemDetailInput)(nil)).Elem(), GetInventoryDevicesItemDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryDevicesItemDetailArrayInput)(nil)).Elem(), GetInventoryDevicesItemDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItemInput)(nil)).Elem(), GetInventoryOnboardingCloudMonitoringImportsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItemArrayInput)(nil)).Elem(), GetInventoryOnboardingCloudMonitoringImportsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringImportsItemDeviceInput)(nil)).Elem(), GetInventoryOnboardingCloudMonitoringImportsItemDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringNetworksItemInput)(nil)).Elem(), GetInventoryOnboardingCloudMonitoringNetworksItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInventoryOnboardingCloudMonitoringNetworksItemArrayInput)(nil)).Elem(), GetInventoryOnboardingCloudMonitoringNetworksItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesItemInput)(nil)).Elem(), GetLicensesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesItemPermanentlyQueuedLicenseInput)(nil)).Elem(), GetLicensesItemPermanentlyQueuedLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesItemPermanentlyQueuedLicenseArrayInput)(nil)).Elem(), GetLicensesItemPermanentlyQueuedLicenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemInput)(nil)).Elem(), GetLicensesOverviewItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemLicenseTypeInput)(nil)).Elem(), GetLicensesOverviewItemLicenseTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemLicenseTypeArrayInput)(nil)).Elem(), GetLicensesOverviewItemLicenseTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemLicenseTypeCountsInput)(nil)).Elem(), GetLicensesOverviewItemLicenseTypeCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesInput)(nil)).Elem(), GetLicensesOverviewItemStatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesActiveInput)(nil)).Elem(), GetLicensesOverviewItemStatesActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesExpiredInput)(nil)).Elem(), GetLicensesOverviewItemStatesExpiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringInput)(nil)).Elem(), GetLicensesOverviewItemStatesExpiringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringCriticalInput)(nil)).Elem(), GetLicensesOverviewItemStatesExpiringCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesExpiringWarningInput)(nil)).Elem(), GetLicensesOverviewItemStatesExpiringWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesRecentlyQueuedInput)(nil)).Elem(), GetLicensesOverviewItemStatesRecentlyQueuedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedInput)(nil)).Elem(), GetLicensesOverviewItemStatesUnusedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActiveInput)(nil)).Elem(), GetLicensesOverviewItemStatesUnusedActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedActiveOldestActivationInput)(nil)).Elem(), GetLicensesOverviewItemStatesUnusedActiveOldestActivationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemStatesUnusedSoonestActivationInput)(nil)).Elem(), GetLicensesOverviewItemStatesUnusedSoonestActivationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemSystemsManagerInput)(nil)).Elem(), GetLicensesOverviewItemSystemsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensesOverviewItemSystemsManagerCountsInput)(nil)).Elem(), GetLicensesOverviewItemSystemsManagerCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemInput)(nil)).Elem(), GetLicensingCotermLicensesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemArrayInput)(nil)).Elem(), GetLicensingCotermLicensesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemCountInput)(nil)).Elem(), GetLicensingCotermLicensesItemCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemCountArrayInput)(nil)).Elem(), GetLicensingCotermLicensesItemCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemEditionInput)(nil)).Elem(), GetLicensingCotermLicensesItemEditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingCotermLicensesItemEditionArrayInput)(nil)).Elem(), GetLicensingCotermLicensesItemEditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoginSecurityItemInput)(nil)).Elem(), GetLoginSecurityItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoginSecurityItemApiAuthenticationInput)(nil)).Elem(), GetLoginSecurityItemApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysInput)(nil)).Elem(), GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemInput)(nil)).Elem(), GetOpenapiSpecItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemInfoInput)(nil)).Elem(), GetOpenapiSpecItemInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsInput)(nil)).Elem(), GetOpenapiSpecItemPathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetResponsesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Input)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayInput)(nil)).Elem(), GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyObjectsGroupsItemInput)(nil)).Elem(), GetPolicyObjectsGroupsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyObjectsItemInput)(nil)).Elem(), GetPolicyObjectsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlIdpsItemInput)(nil)).Elem(), GetSamlIdpsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlIdpsItemArrayInput)(nil)).Elem(), GetSamlIdpsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlItemInput)(nil)).Elem(), GetSamlItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemInput)(nil)).Elem(), GetSamlRolesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemArrayInput)(nil)).Elem(), GetSamlRolesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemCameraInput)(nil)).Elem(), GetSamlRolesItemCameraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemCameraArrayInput)(nil)).Elem(), GetSamlRolesItemCameraArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemNetworkInput)(nil)).Elem(), GetSamlRolesItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemNetworkArrayInput)(nil)).Elem(), GetSamlRolesItemNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemTagInput)(nil)).Elem(), GetSamlRolesItemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlRolesItemTagArrayInput)(nil)).Elem(), GetSamlRolesItemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemInput)(nil)).Elem(), GetSensorReadingsHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemArrayInput)(nil)).Elem(), GetSensorReadingsHistoryItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemApparentPowerInput)(nil)).Elem(), GetSensorReadingsHistoryItemApparentPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemBatteryInput)(nil)).Elem(), GetSensorReadingsHistoryItemBatteryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemButtonInput)(nil)).Elem(), GetSensorReadingsHistoryItemButtonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemCo2Input)(nil)).Elem(), GetSensorReadingsHistoryItemCo2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemCurrentInput)(nil)).Elem(), GetSensorReadingsHistoryItemCurrentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemDoorInput)(nil)).Elem(), GetSensorReadingsHistoryItemDoorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemDownstreamPowerInput)(nil)).Elem(), GetSensorReadingsHistoryItemDownstreamPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemFrequencyInput)(nil)).Elem(), GetSensorReadingsHistoryItemFrequencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemHumidityInput)(nil)).Elem(), GetSensorReadingsHistoryItemHumidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemIndoorAirQualityInput)(nil)).Elem(), GetSensorReadingsHistoryItemIndoorAirQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemNetworkInput)(nil)).Elem(), GetSensorReadingsHistoryItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemNoiseInput)(nil)).Elem(), GetSensorReadingsHistoryItemNoiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemNoiseAmbientInput)(nil)).Elem(), GetSensorReadingsHistoryItemNoiseAmbientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemPm25Input)(nil)).Elem(), GetSensorReadingsHistoryItemPm25Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemPowerFactorInput)(nil)).Elem(), GetSensorReadingsHistoryItemPowerFactorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemRealPowerInput)(nil)).Elem(), GetSensorReadingsHistoryItemRealPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemRemoteLockoutSwitchInput)(nil)).Elem(), GetSensorReadingsHistoryItemRemoteLockoutSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemTemperatureInput)(nil)).Elem(), GetSensorReadingsHistoryItemTemperatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemTvocInput)(nil)).Elem(), GetSensorReadingsHistoryItemTvocArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemVoltageInput)(nil)).Elem(), GetSensorReadingsHistoryItemVoltageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsHistoryItemWaterInput)(nil)).Elem(), GetSensorReadingsHistoryItemWaterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemInput)(nil)).Elem(), GetSensorReadingsLatestItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemArrayInput)(nil)).Elem(), GetSensorReadingsLatestItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemNetworkInput)(nil)).Elem(), GetSensorReadingsLatestItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingArrayInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingApparentPowerInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingApparentPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingBatteryInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingBatteryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingButtonInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingButtonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingCo2Input)(nil)).Elem(), GetSensorReadingsLatestItemReadingCo2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingCurrentInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingCurrentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingDoorInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingDoorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingDownstreamPowerInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingDownstreamPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingFrequencyInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingFrequencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingHumidityInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingHumidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingIndoorAirQualityInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingIndoorAirQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoiseInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingNoiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingNoiseAmbientInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingNoiseAmbientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingPm25Input)(nil)).Elem(), GetSensorReadingsLatestItemReadingPm25Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingPowerFactorInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingPowerFactorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingRealPowerInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingRealPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingRemoteLockoutSwitchInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingRemoteLockoutSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingTemperatureInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingTemperatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingTvocInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingTvocArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingVoltageInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingVoltageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorReadingsLatestItemReadingWaterInput)(nil)).Elem(), GetSensorReadingsLatestItemReadingWaterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmAdminsRolesItemInput)(nil)).Elem(), GetSmAdminsRolesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmApnsCertItemInput)(nil)).Elem(), GetSmApnsCertItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemArrayInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsInput)(nil)).Elem(), GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmVppAccountsItemInput)(nil)).Elem(), GetSmVppAccountsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmVppAccountsItemArrayInput)(nil)).Elem(), GetSmVppAccountsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSmVppAccountsItemParsedTokenInput)(nil)).Elem(), GetSmVppAccountsItemParsedTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnmpItemInput)(nil)).Elem(), GetSnmpItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemInput)(nil)).Elem(), GetSummaryTopAppliancesByUtilizationItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemArrayInput)(nil)).Elem(), GetSummaryTopAppliancesByUtilizationItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemNetworkInput)(nil)).Elem(), GetSummaryTopAppliancesByUtilizationItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilizationInput)(nil)).Elem(), GetSummaryTopAppliancesByUtilizationItemUtilizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopAppliancesByUtilizationItemUtilizationAverageInput)(nil)).Elem(), GetSummaryTopAppliancesByUtilizationItemUtilizationAverageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsByUsageItemInput)(nil)).Elem(), GetSummaryTopClientsByUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsByUsageItemArrayInput)(nil)).Elem(), GetSummaryTopClientsByUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsByUsageItemNetworkInput)(nil)).Elem(), GetSummaryTopClientsByUsageItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsByUsageItemUsageInput)(nil)).Elem(), GetSummaryTopClientsByUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemInput)(nil)).Elem(), GetSummaryTopClientsManufacturersByUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemArrayInput)(nil)).Elem(), GetSummaryTopClientsManufacturersByUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClientsInput)(nil)).Elem(), GetSummaryTopClientsManufacturersByUsageItemClientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemClientsCountsInput)(nil)).Elem(), GetSummaryTopClientsManufacturersByUsageItemClientsCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopClientsManufacturersByUsageItemUsageInput)(nil)).Elem(), GetSummaryTopClientsManufacturersByUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemArrayInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClientsInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemClientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemClientsCountsInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemClientsCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemNetworkInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesByUsageItemUsageInput)(nil)).Elem(), GetSummaryTopDevicesByUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItemInput)(nil)).Elem(), GetSummaryTopDevicesModelsByUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItemArrayInput)(nil)).Elem(), GetSummaryTopDevicesModelsByUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopDevicesModelsByUsageItemUsageInput)(nil)).Elem(), GetSummaryTopDevicesModelsByUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemArrayInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemClientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsCountsInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemClientsCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemClientsUsageInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemClientsUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevicesInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevicesByProductTypeInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemDevicesByProductTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemDevicesByProductTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemStatusesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductTypeInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemStatusesByProductTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemStatusesByProductTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsInput)(nil)).Elem(), GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSsidsByUsageItemInput)(nil)).Elem(), GetSummaryTopSsidsByUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSsidsByUsageItemArrayInput)(nil)).Elem(), GetSummaryTopSsidsByUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClientsInput)(nil)).Elem(), GetSummaryTopSsidsByUsageItemClientsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSsidsByUsageItemClientsCountsInput)(nil)).Elem(), GetSummaryTopSsidsByUsageItemClientsCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSsidsByUsageItemUsageInput)(nil)).Elem(), GetSummaryTopSsidsByUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemInput)(nil)).Elem(), GetSummaryTopSwitchesByEnergyUsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemArrayInput)(nil)).Elem(), GetSummaryTopSwitchesByEnergyUsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemNetworkInput)(nil)).Elem(), GetSummaryTopSwitchesByEnergyUsageItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSummaryTopSwitchesByEnergyUsageItemUsageInput)(nil)).Elem(), GetSummaryTopSwitchesByEnergyUsageItemUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsBySwitchItemInput)(nil)).Elem(), GetSwitchPortsBySwitchItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsBySwitchItemArrayInput)(nil)).Elem(), GetSwitchPortsBySwitchItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsBySwitchItemNetworkInput)(nil)).Elem(), GetSwitchPortsBySwitchItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsBySwitchItemPortInput)(nil)).Elem(), GetSwitchPortsBySwitchItemPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsBySwitchItemPortArrayInput)(nil)).Elem(), GetSwitchPortsBySwitchItemPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemInput)(nil)).Elem(), GetUplinksStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemArrayInput)(nil)).Elem(), GetUplinksStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemHighAvailabilityInput)(nil)).Elem(), GetUplinksStatusesItemHighAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemUplinkInput)(nil)).Elem(), GetUplinksStatusesItemUplinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemUplinkArrayInput)(nil)).Elem(), GetUplinksStatusesItemUplinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUplinksStatusesItemUplinkSignalStatInput)(nil)).Elem(), GetUplinksStatusesItemUplinkSignalStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksCallbacksStatusesItemInput)(nil)).Elem(), GetWebhooksCallbacksStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksCallbacksStatusesItemCreatedByInput)(nil)).Elem(), GetWebhooksCallbacksStatusesItemCreatedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookInput)(nil)).Elem(), GetWebhooksCallbacksStatusesItemWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookHttpServerInput)(nil)).Elem(), GetWebhooksCallbacksStatusesItemWebhookHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateInput)(nil)).Elem(), GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksLogsItemInput)(nil)).Elem(), GetWebhooksLogsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhooksLogsItemArrayInput)(nil)).Elem(), GetWebhooksLogsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemByBandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemByBandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByDeviceItemNetworkInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByDeviceItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemByBandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemByBandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationByNetworkItemNetworkInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationByNetworkItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkInput)(nil)).Elem(), GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemArrayInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemAggregationInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemNetworkInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortArrayInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPortPoeInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPortPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerAcInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPowerAcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesEthernetStatusesItemPowerPoeInput)(nil)).Elem(), GetWirelessDevicesEthernetStatusesItemPowerPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemArrayInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemClientInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemDownstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemNetworkInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByClientItemUpstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByClientItemUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemArrayInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDeviceInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemDownstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemNetworkInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByDeviceItemUpstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByDeviceItemUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemInput)(nil)).Elem(), GetWirelessDevicesPacketLossByNetworkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemArrayInput)(nil)).Elem(), GetWirelessDevicesPacketLossByNetworkItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemDownstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByNetworkItemDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemNetworkInput)(nil)).Elem(), GetWirelessDevicesPacketLossByNetworkItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessDevicesPacketLossByNetworkItemUpstreamInput)(nil)).Elem(), GetWirelessDevicesPacketLossByNetworkItemUpstreamArgs{})
	pulumi.RegisterOutputType(ActionBatchesActionOutput{})
	pulumi.RegisterOutputType(ActionBatchesActionArrayOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackPtrOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(ActionBatchesCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(ActionBatchesStatusOutput{})
	pulumi.RegisterOutputType(ActionBatchesStatusPtrOutput{})
	pulumi.RegisterOutputType(ActionBatchesStatusCreatedResourceOutput{})
	pulumi.RegisterOutputType(ActionBatchesStatusCreatedResourceArrayOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyAclsRuleOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyAclsRuleArrayOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyGroupsPolicyObjectOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyGroupsPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesAclOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesAclArrayOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesDestinationGroupOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesDestinationGroupPtrOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesSourceGroupOutput{})
	pulumi.RegisterOutputType(AdaptivePolicyPoliciesSourceGroupPtrOutput{})
	pulumi.RegisterOutputType(AdminsNetworkOutput{})
	pulumi.RegisterOutputType(AdminsNetworkArrayOutput{})
	pulumi.RegisterOutputType(AdminsTagOutput{})
	pulumi.RegisterOutputType(AdminsTagArrayOutput{})
	pulumi.RegisterOutputType(AlertsProfilesAlertConditionOutput{})
	pulumi.RegisterOutputType(AlertsProfilesAlertConditionPtrOutput{})
	pulumi.RegisterOutputType(AlertsProfilesRecipientsOutput{})
	pulumi.RegisterOutputType(AlertsProfilesRecipientsPtrOutput{})
	pulumi.RegisterOutputType(ApplianceSecurityIntrusionAllowedRuleOutput{})
	pulumi.RegisterOutputType(ApplianceSecurityIntrusionAllowedRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeerOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeerArrayOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeerIpsecPoliciesPtrOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeersResponseOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeersResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesOutput{})
	pulumi.RegisterOutputType(ApplianceVpnThirdPartyVpnpeersPeersResponseIpsecPoliciesPtrOutput{})
	pulumi.RegisterOutputType(ApplianceVpnVpnFirewallRulesRuleOutput{})
	pulumi.RegisterOutputType(ApplianceVpnVpnFirewallRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesAdminSettingsOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesAdminSettingsPtrOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoPtrOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoImageOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoImagePtrOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoImagePreviewOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesCustomLogoImagePreviewPtrOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesHelpSettingsOutput{})
	pulumi.RegisterOutputType(BrandingPoliciesHelpSettingsPtrOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsArtifactsStatusOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsArtifactsStatusPtrOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOnDeviceOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOnDeviceArrayOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOnNetworkOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOnNetworkArrayOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOrgWideOutput{})
	pulumi.RegisterOutputType(CameraRolesAppliedOrgWideArrayOutput{})
	pulumi.RegisterOutputType(ClaimItemOutput{})
	pulumi.RegisterOutputType(ClaimItemPtrOutput{})
	pulumi.RegisterOutputType(ClaimItemLicenseOutput{})
	pulumi.RegisterOutputType(ClaimItemLicenseArrayOutput{})
	pulumi.RegisterOutputType(ClaimParametersOutput{})
	pulumi.RegisterOutputType(ClaimParametersPtrOutput{})
	pulumi.RegisterOutputType(ClaimParametersLicenseOutput{})
	pulumi.RegisterOutputType(ClaimParametersLicenseArrayOutput{})
	pulumi.RegisterOutputType(CloneItemOutput{})
	pulumi.RegisterOutputType(CloneItemPtrOutput{})
	pulumi.RegisterOutputType(CloneItemApiOutput{})
	pulumi.RegisterOutputType(CloneItemApiPtrOutput{})
	pulumi.RegisterOutputType(CloneItemCloudOutput{})
	pulumi.RegisterOutputType(CloneItemCloudPtrOutput{})
	pulumi.RegisterOutputType(CloneItemCloudRegionOutput{})
	pulumi.RegisterOutputType(CloneItemCloudRegionPtrOutput{})
	pulumi.RegisterOutputType(CloneItemLicensingOutput{})
	pulumi.RegisterOutputType(CloneItemLicensingPtrOutput{})
	pulumi.RegisterOutputType(CloneItemManagementOutput{})
	pulumi.RegisterOutputType(CloneItemManagementPtrOutput{})
	pulumi.RegisterOutputType(CloneItemManagementDetailOutput{})
	pulumi.RegisterOutputType(CloneItemManagementDetailArrayOutput{})
	pulumi.RegisterOutputType(CloneParametersOutput{})
	pulumi.RegisterOutputType(CloneParametersPtrOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsMirrorOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsMirrorPtrOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsModuleOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsModulePtrOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsProfileOutput{})
	pulumi.RegisterOutputType(ConfigTemplatesSwitchProfilesPortsProfilePtrOutput{})
	pulumi.RegisterOutputType(InventoryClaimItemOutput{})
	pulumi.RegisterOutputType(InventoryClaimItemPtrOutput{})
	pulumi.RegisterOutputType(InventoryClaimItemLicenseOutput{})
	pulumi.RegisterOutputType(InventoryClaimItemLicenseArrayOutput{})
	pulumi.RegisterOutputType(InventoryClaimParametersOutput{})
	pulumi.RegisterOutputType(InventoryClaimParametersPtrOutput{})
	pulumi.RegisterOutputType(InventoryClaimParametersLicenseOutput{})
	pulumi.RegisterOutputType(InventoryClaimParametersLicenseArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringExportEventsParametersOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringExportEventsParametersPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersDeviceOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersDeviceArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersItemOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersItemArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersItemItemOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringImportsParametersItemItemArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificateOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsTunnelRootCertificatePtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareItemConfigParamsUserSecretPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceArrayOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceTunnelPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceUserPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyInPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAccessListVtyOutPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthenticationGroupPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupOutput{})
	pulumi.RegisterOutputType(InventoryOnboardingCloudMonitoringPrepareParametersDeviceVtyAuthorizationGroupPtrOutput{})
	pulumi.RegisterOutputType(InventoryReleaseItemOutput{})
	pulumi.RegisterOutputType(InventoryReleaseItemPtrOutput{})
	pulumi.RegisterOutputType(InventoryReleaseParametersOutput{})
	pulumi.RegisterOutputType(InventoryReleaseParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemPtrOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemResultingLicenseOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemResultingLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsParametersOutput{})
	pulumi.RegisterOutputType(LicensesAssignSeatsParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensesMoveItemOutput{})
	pulumi.RegisterOutputType(LicensesMoveItemPtrOutput{})
	pulumi.RegisterOutputType(LicensesMoveParametersOutput{})
	pulumi.RegisterOutputType(LicensesMoveParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensesMoveSeatsItemOutput{})
	pulumi.RegisterOutputType(LicensesMoveSeatsItemPtrOutput{})
	pulumi.RegisterOutputType(LicensesMoveSeatsParametersOutput{})
	pulumi.RegisterOutputType(LicensesMoveSeatsParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensesPermanentlyQueuedLicenseOutput{})
	pulumi.RegisterOutputType(LicensesPermanentlyQueuedLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemPtrOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemResultingLicenseOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemResultingLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsItemResultingLicensePermanentlyQueuedLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsParametersOutput{})
	pulumi.RegisterOutputType(LicensesRenewSeatsParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemPtrOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseCountOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseCountArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseEditionOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemMovedLicenseEditionArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseCountOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseCountArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseEditionOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveItemRemainderLicenseEditionArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersDestinationOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersDestinationPtrOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersLicenseOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersLicenseArrayOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersLicenseCountOutput{})
	pulumi.RegisterOutputType(LicensingCotermLicensesMoveParametersLicenseCountArrayOutput{})
	pulumi.RegisterOutputType(LoginSecurityApiAuthenticationOutput{})
	pulumi.RegisterOutputType(LoginSecurityApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(LoginSecurityApiAuthenticationIpRestrictionsForKeysOutput{})
	pulumi.RegisterOutputType(LoginSecurityApiAuthenticationIpRestrictionsForKeysPtrOutput{})
	pulumi.RegisterOutputType(NetworksCombineItemOutput{})
	pulumi.RegisterOutputType(NetworksCombineItemPtrOutput{})
	pulumi.RegisterOutputType(NetworksCombineItemResultingNetworkOutput{})
	pulumi.RegisterOutputType(NetworksCombineItemResultingNetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworksCombineParametersOutput{})
	pulumi.RegisterOutputType(NetworksCombineParametersPtrOutput{})
	pulumi.RegisterOutputType(SamlRolesCameraOutput{})
	pulumi.RegisterOutputType(SamlRolesCameraArrayOutput{})
	pulumi.RegisterOutputType(SamlRolesNetworkOutput{})
	pulumi.RegisterOutputType(SamlRolesNetworkArrayOutput{})
	pulumi.RegisterOutputType(SamlRolesTagOutput{})
	pulumi.RegisterOutputType(SamlRolesTagArrayOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemPtrOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemItemOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemItemArrayOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemItemPolicyOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsItemItemPolicyArrayOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersPtrOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersItemOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersItemArrayOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersItemPolicyOutput{})
	pulumi.RegisterOutputType(SmSentryPoliciesAssignmentsParametersItemPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchDevicesCloneParametersOutput{})
	pulumi.RegisterOutputType(SwitchDevicesCloneParametersPtrOutput{})
	pulumi.RegisterOutputType(BaseApiOutput{})
	pulumi.RegisterOutputType(BaseApiPtrOutput{})
	pulumi.RegisterOutputType(BaseCloudOutput{})
	pulumi.RegisterOutputType(BaseCloudPtrOutput{})
	pulumi.RegisterOutputType(BaseCloudRegionOutput{})
	pulumi.RegisterOutputType(BaseCloudRegionPtrOutput{})
	pulumi.RegisterOutputType(BaseLicensingOutput{})
	pulumi.RegisterOutputType(BaseLicensingPtrOutput{})
	pulumi.RegisterOutputType(BaseManagementOutput{})
	pulumi.RegisterOutputType(BaseManagementPtrOutput{})
	pulumi.RegisterOutputType(BaseManagementDetailOutput{})
	pulumi.RegisterOutputType(BaseManagementDetailArrayOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemArrayOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemActionOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemActionArrayOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemCallbackOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemStatusOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemStatusCreatedResourceOutput{})
	pulumi.RegisterOutputType(GetActionBatchesItemStatusCreatedResourceArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyAclsItemOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyAclsItemArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyAclsItemRuleOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyAclsItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyGroupsItemOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyGroupsItemArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyGroupsItemPolicyObjectOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyGroupsItemPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyOverviewItemOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyOverviewItemCountsOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyOverviewItemLimitsOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemAclOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemAclArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemDestinationGroupOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicyPoliciesItemSourceGroupOutput{})
	pulumi.RegisterOutputType(GetAdaptivePolicySettingsItemOutput{})
	pulumi.RegisterOutputType(GetAdminsItemOutput{})
	pulumi.RegisterOutputType(GetAdminsItemArrayOutput{})
	pulumi.RegisterOutputType(GetAdminsItemNetworkOutput{})
	pulumi.RegisterOutputType(GetAdminsItemNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetAdminsItemTagOutput{})
	pulumi.RegisterOutputType(GetAdminsItemTagArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsProfilesItemOutput{})
	pulumi.RegisterOutputType(GetAlertsProfilesItemArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsProfilesItemAlertConditionOutput{})
	pulumi.RegisterOutputType(GetAlertsProfilesItemRecipientsOutput{})
	pulumi.RegisterOutputType(GetApiRequestsItemOutput{})
	pulumi.RegisterOutputType(GetApiRequestsItemArrayOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewItemOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewItemResponseCodeCountsOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewResponseCodesByIntervalItemOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewResponseCodesByIntervalItemArrayOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewResponseCodesByIntervalItemCountOutput{})
	pulumi.RegisterOutputType(GetApiRequestsOverviewResponseCodesByIntervalItemCountArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceSecurityIntrusionItemOutput{})
	pulumi.RegisterOutputType(GetApplianceSecurityIntrusionItemAllowedRuleOutput{})
	pulumi.RegisterOutputType(GetApplianceSecurityIntrusionItemAllowedRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemCustomArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationOutput{})
	pulumi.RegisterOutputType(GetApplianceTrafficShapingVpnExclusionsByNetworkItemItemMajorApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksStatusesOverviewItemOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksStatusesOverviewItemCountsOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksStatusesOverviewItemCountsByStatusOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksUsageByNetworkItemOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksUsageByNetworkItemArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksUsageByNetworkItemByUplinkOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksUsageByNetworkItemByUplinkArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnThirdPartyVpnpeersItemOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnThirdPartyVpnpeersItemPeerOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnThirdPartyVpnpeersItemPeerArrayOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnThirdPartyVpnpeersItemPeerIpsecPoliciesOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnVpnFirewallRulesItemOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnVpnFirewallRulesItemRuleOutput{})
	pulumi.RegisterOutputType(GetApplianceVpnVpnFirewallRulesItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemAdminSettingsOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemCustomLogoOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemCustomLogoImageOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemCustomLogoImagePreviewOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesItemHelpSettingsOutput{})
	pulumi.RegisterOutputType(GetBrandingPoliciesPrioritiesItemOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesAreasByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesAreasByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesAreasByDeviceItemBoundariesOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesAreasByDeviceItemBoundariesVertexOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesAreasByDeviceItemBoundariesVertexArrayOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemBoundariesOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemBoundariesDirectionVertexOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemBoundariesVertexOutput{})
	pulumi.RegisterOutputType(GetCameraBoundariesLinesByDeviceItemBoundariesVertexArrayOutput{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsArtifactsItemOutput{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsArtifactsItemArrayOutput{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsArtifactsItemStatusOutput{})
	pulumi.RegisterOutputType(GetCameraDetectionsHistoryByBoundaryByIntervalItemOutput{})
	pulumi.RegisterOutputType(GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput{})
	pulumi.RegisterOutputType(GetCameraDetectionsHistoryByBoundaryByIntervalItemResultsOutput{})
	pulumi.RegisterOutputType(GetCameraPermissionsItemOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemArrayOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOnDeviceOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOnDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOnNetworkOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOnNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOrgWideOutput{})
	pulumi.RegisterOutputType(GetCameraRolesItemAppliedOrgWideArrayOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayUplinkStatusesItemOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayUplinkStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayUplinkStatusesItemUplinkOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayUplinkStatusesItemUplinkArrayOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayUplinkStatusesItemUplinkSignalStatOutput{})
	pulumi.RegisterOutputType(GetClientsBandwidthUsageHistoryItemOutput{})
	pulumi.RegisterOutputType(GetClientsBandwidthUsageHistoryItemArrayOutput{})
	pulumi.RegisterOutputType(GetClientsOverviewItemOutput{})
	pulumi.RegisterOutputType(GetClientsOverviewItemCountsOutput{})
	pulumi.RegisterOutputType(GetClientsOverviewItemUsageOutput{})
	pulumi.RegisterOutputType(GetClientsOverviewItemUsageOverallOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemRecordOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemRecordArrayOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemRecordClientVpnConnectionOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemRecordClientVpnConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetClientsSearchItemRecordNetworkOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesItemOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesItemArrayOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesItemOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesItemArrayOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesPortsItemOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesPortsItemArrayOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesPortsItemMirrorOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesPortsItemModuleOutput{})
	pulumi.RegisterOutputType(GetConfigTemplatesSwitchProfilesPortsItemProfileOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDetailsOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDetailsNewsArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDetailsOldArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemDeviceOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesChangeHistoryItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesItemOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesAvailabilitiesItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesBootsHistoryItemOutput{})
	pulumi.RegisterOutputType(GetDevicesBootsHistoryItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesBootsHistoryItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesBootsHistoryItemStartOutput{})
	pulumi.RegisterOutputType(GetDevicesItemOutput{})
	pulumi.RegisterOutputType(GetDevicesItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesItemDetailOutput{})
	pulumi.RegisterOutputType(GetDevicesItemDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesPowerModulesStatusesByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetDevicesPowerModulesStatusesByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesPowerModulesStatusesByDeviceItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesPowerModulesStatusesByDeviceItemSlotOutput{})
	pulumi.RegisterOutputType(GetDevicesPowerModulesStatusesByDeviceItemSlotArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesProvisioningStatusesItemOutput{})
	pulumi.RegisterOutputType(GetDevicesProvisioningStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesProvisioningStatusesItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemComponentsOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemComponentsPowerSupplyOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemComponentsPowerSupplyArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesItemComponentsPowerSupplyPoeOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesOverviewItemOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesOverviewItemCountsOutput{})
	pulumi.RegisterOutputType(GetDevicesStatusesOverviewItemCountsByStatusOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemNetworkOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemUplinkOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemUplinkArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemUplinkAddressOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemUplinkAddressArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksAddressesByDeviceItemUplinkAddressPublicOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksLossAndLatencyItemOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksLossAndLatencyItemArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksLossAndLatencyItemTimeSeriesOutput{})
	pulumi.RegisterOutputType(GetDevicesUplinksLossAndLatencyItemTimeSeriesArrayOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesItemOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesItemArrayOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesItemDescriptionsOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesOptInsItemOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkOutput{})
	pulumi.RegisterOutputType(GetEarlyAccessFeaturesOptInsItemLimitScopeToNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemUpgradeOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemUpgradeFromVersionOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemUpgradeStagedOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemUpgradeStagedGroupOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesByDeviceItemUpgradeToVersionOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesItemOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesItemArrayOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesItemFromVersionOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesItemNetworkOutput{})
	pulumi.RegisterOutputType(GetFirmwareUpgradesItemToVersionOutput{})
	pulumi.RegisterOutputType(GetInsightApplicationsItemOutput{})
	pulumi.RegisterOutputType(GetInsightApplicationsItemArrayOutput{})
	pulumi.RegisterOutputType(GetInsightApplicationsItemThresholdsOutput{})
	pulumi.RegisterOutputType(GetInsightApplicationsItemThresholdsByNetworkOutput{})
	pulumi.RegisterOutputType(GetInsightApplicationsItemThresholdsByNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetInsightMonitoredMediaServersItemOutput{})
	pulumi.RegisterOutputType(GetInsightMonitoredMediaServersItemArrayOutput{})
	pulumi.RegisterOutputType(GetInventoryDevicesItemOutput{})
	pulumi.RegisterOutputType(GetInventoryDevicesItemArrayOutput{})
	pulumi.RegisterOutputType(GetInventoryDevicesItemDetailOutput{})
	pulumi.RegisterOutputType(GetInventoryDevicesItemDetailArrayOutput{})
	pulumi.RegisterOutputType(GetInventoryOnboardingCloudMonitoringImportsItemOutput{})
	pulumi.RegisterOutputType(GetInventoryOnboardingCloudMonitoringImportsItemArrayOutput{})
	pulumi.RegisterOutputType(GetInventoryOnboardingCloudMonitoringImportsItemDeviceOutput{})
	pulumi.RegisterOutputType(GetInventoryOnboardingCloudMonitoringNetworksItemOutput{})
	pulumi.RegisterOutputType(GetInventoryOnboardingCloudMonitoringNetworksItemArrayOutput{})
	pulumi.RegisterOutputType(GetLicensesItemOutput{})
	pulumi.RegisterOutputType(GetLicensesItemPermanentlyQueuedLicenseOutput{})
	pulumi.RegisterOutputType(GetLicensesItemPermanentlyQueuedLicenseArrayOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemLicenseTypeOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemLicenseTypeArrayOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemLicenseTypeCountsOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesActiveOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesExpiredOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesExpiringOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesExpiringCriticalOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesExpiringWarningOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesRecentlyQueuedOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesUnusedOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesUnusedActiveOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesUnusedActiveOldestActivationOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemStatesUnusedSoonestActivationOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemSystemsManagerOutput{})
	pulumi.RegisterOutputType(GetLicensesOverviewItemSystemsManagerCountsOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemCountOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemCountArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemEditionOutput{})
	pulumi.RegisterOutputType(GetLicensingCotermLicensesItemEditionArrayOutput{})
	pulumi.RegisterOutputType(GetLoginSecurityItemOutput{})
	pulumi.RegisterOutputType(GetLoginSecurityItemApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetLoginSecurityItemApiAuthenticationIpRestrictionsForKeysOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemInfoOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetResponsesOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200Output{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonOutput{})
	pulumi.RegisterOutputType(GetOpenapiSpecItemPathsOrganizationsGetResponsesStatus200ExamplesApplicationJsonArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyObjectsGroupsItemOutput{})
	pulumi.RegisterOutputType(GetPolicyObjectsItemOutput{})
	pulumi.RegisterOutputType(GetSamlIdpsItemOutput{})
	pulumi.RegisterOutputType(GetSamlIdpsItemArrayOutput{})
	pulumi.RegisterOutputType(GetSamlItemOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemArrayOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemCameraOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemCameraArrayOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemTagOutput{})
	pulumi.RegisterOutputType(GetSamlRolesItemTagArrayOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemArrayOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemApparentPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemBatteryOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemButtonOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemCo2Output{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemCurrentOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemDoorOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemDownstreamPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemFrequencyOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemHumidityOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemIndoorAirQualityOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemNoiseOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemNoiseAmbientOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemPm25Output{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemPowerFactorOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemRealPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemRemoteLockoutSwitchOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemTemperatureOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemTvocOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemVoltageOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsHistoryItemWaterOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemArrayOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingArrayOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingApparentPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingBatteryOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingButtonOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingCo2Output{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingCurrentOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingDoorOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingDownstreamPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingFrequencyOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingHumidityOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingIndoorAirQualityOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingNoiseOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingNoiseAmbientOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingPm25Output{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingPowerFactorOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingRealPowerOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingRemoteLockoutSwitchOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingTemperatureOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingTvocOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingVoltageOutput{})
	pulumi.RegisterOutputType(GetSensorReadingsLatestItemReadingWaterOutput{})
	pulumi.RegisterOutputType(GetSmAdminsRolesItemOutput{})
	pulumi.RegisterOutputType(GetSmApnsCertItemOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemArrayOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemItemOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemItemArrayOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemItemPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemMetaOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsOutput{})
	pulumi.RegisterOutputType(GetSmSentryPoliciesAssignmentsByNetworkItemMetaCountsItemsOutput{})
	pulumi.RegisterOutputType(GetSmVppAccountsItemOutput{})
	pulumi.RegisterOutputType(GetSmVppAccountsItemArrayOutput{})
	pulumi.RegisterOutputType(GetSmVppAccountsItemParsedTokenOutput{})
	pulumi.RegisterOutputType(GetSnmpItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopAppliancesByUtilizationItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopAppliancesByUtilizationItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopAppliancesByUtilizationItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSummaryTopAppliancesByUtilizationItemUtilizationOutput{})
	pulumi.RegisterOutputType(GetSummaryTopAppliancesByUtilizationItemUtilizationAverageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsByUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsByUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsByUsageItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsByUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsManufacturersByUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsManufacturersByUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsManufacturersByUsageItemClientsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsManufacturersByUsageItemClientsCountsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopClientsManufacturersByUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemClientsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemClientsCountsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesByUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesModelsByUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesModelsByUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopDevicesModelsByUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemClientsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemClientsCountsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemClientsUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemDevicesOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemDevicesByProductTypeOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemDevicesByProductTypeArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemStatusesOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemStatusesByProductTypeOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemStatusesByProductTypeArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopNetworksByStatusItemStatusesByProductTypeCountsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSsidsByUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSsidsByUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSsidsByUsageItemClientsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSsidsByUsageItemClientsCountsOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSsidsByUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSwitchesByEnergyUsageItemOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSwitchesByEnergyUsageItemArrayOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSwitchesByEnergyUsageItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSummaryTopSwitchesByEnergyUsageItemUsageOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsBySwitchItemOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsBySwitchItemArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsBySwitchItemNetworkOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsBySwitchItemPortOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsBySwitchItemPortArrayOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemHighAvailabilityOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemUplinkOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemUplinkArrayOutput{})
	pulumi.RegisterOutputType(GetUplinksStatusesItemUplinkSignalStatOutput{})
	pulumi.RegisterOutputType(GetWebhooksCallbacksStatusesItemOutput{})
	pulumi.RegisterOutputType(GetWebhooksCallbacksStatusesItemCreatedByOutput{})
	pulumi.RegisterOutputType(GetWebhooksCallbacksStatusesItemWebhookOutput{})
	pulumi.RegisterOutputType(GetWebhooksCallbacksStatusesItemWebhookHttpServerOutput{})
	pulumi.RegisterOutputType(GetWebhooksCallbacksStatusesItemWebhookPayloadTemplateOutput{})
	pulumi.RegisterOutputType(GetWebhooksLogsItemOutput{})
	pulumi.RegisterOutputType(GetWebhooksLogsItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemByBandOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemByBandArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemByBandNonWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemByBandTotalOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemByBandWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByDeviceItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemByBandOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemByBandArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemByBandNonWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemByBandTotalOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemByBandWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationByNetworkItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandNonWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandTotalOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemByBandWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandNonWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandTotalOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemByBandWifiOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemAggregationOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPortOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPortArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPortLinkNegotiationOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPortPoeOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPowerOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPowerAcOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesEthernetStatusesItemPowerPoeOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemClientOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemDownstreamOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByClientItemUpstreamOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemDeviceOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemDownstreamOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByDeviceItemUpstreamOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByNetworkItemOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByNetworkItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByNetworkItemDownstreamOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByNetworkItemNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessDevicesPacketLossByNetworkItemUpstreamOutput{})
}
