// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewPolicyObjectsGroups(ctx, "example", &organizations.PolicyObjectsGroupsArgs{
//				Category: pulumi.String("NetworkObjectGroup"),
//				Name:     pulumi.String("Web Servers - Datacenter 10"),
//				ObjectIds: pulumi.StringArray{
//					pulumi.String("100"),
//				},
//				OrganizationId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsPolicyObjectsGroupsExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/policyObjectsGroups:PolicyObjectsGroups example "organization_id,policy_object_group_id"
// ```
type PolicyObjectsGroups struct {
	pulumi.CustomResourceState

	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category  pulumi.StringOutput `pulumi:"category"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       pulumi.StringOutput      `pulumi:"name"`
	NetworkIds pulumi.StringArrayOutput `pulumi:"networkIds"`
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds pulumi.StringArrayOutput `pulumi:"objectIds"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// policyObjectGroupId path parameter. Policy object group ID
	PolicyObjectGroupId pulumi.StringOutput `pulumi:"policyObjectGroupId"`
	UpdatedAt           pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewPolicyObjectsGroups registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectsGroups(ctx *pulumi.Context,
	name string, args *PolicyObjectsGroupsArgs, opts ...pulumi.ResourceOption) (*PolicyObjectsGroups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectsGroups
	err := ctx.RegisterResource("meraki:organizations/policyObjectsGroups:PolicyObjectsGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectsGroups gets an existing PolicyObjectsGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectsGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectsGroupsState, opts ...pulumi.ResourceOption) (*PolicyObjectsGroups, error) {
	var resource PolicyObjectsGroups
	err := ctx.ReadResource("meraki:organizations/policyObjectsGroups:PolicyObjectsGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectsGroups resources.
type policyObjectsGroupsState struct {
	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category  *string `pulumi:"category"`
	CreatedAt *string `pulumi:"createdAt"`
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       *string  `pulumi:"name"`
	NetworkIds []string `pulumi:"networkIds"`
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds []string `pulumi:"objectIds"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// policyObjectGroupId path parameter. Policy object group ID
	PolicyObjectGroupId *string `pulumi:"policyObjectGroupId"`
	UpdatedAt           *string `pulumi:"updatedAt"`
}

type PolicyObjectsGroupsState struct {
	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category  pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name       pulumi.StringPtrInput
	NetworkIds pulumi.StringArrayInput
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	// policyObjectGroupId path parameter. Policy object group ID
	PolicyObjectGroupId pulumi.StringPtrInput
	UpdatedAt           pulumi.StringPtrInput
}

func (PolicyObjectsGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectsGroupsState)(nil)).Elem()
}

type policyObjectsGroupsArgs struct {
	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category *string `pulumi:"category"`
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name *string `pulumi:"name"`
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds []string `pulumi:"objectIds"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// policyObjectGroupId path parameter. Policy object group ID
	PolicyObjectGroupId *string `pulumi:"policyObjectGroupId"`
}

// The set of arguments for constructing a PolicyObjectsGroups resource.
type PolicyObjectsGroupsArgs struct {
	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category pulumi.StringPtrInput
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name pulumi.StringPtrInput
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds pulumi.StringArrayInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	// policyObjectGroupId path parameter. Policy object group ID
	PolicyObjectGroupId pulumi.StringPtrInput
}

func (PolicyObjectsGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectsGroupsArgs)(nil)).Elem()
}

type PolicyObjectsGroupsInput interface {
	pulumi.Input

	ToPolicyObjectsGroupsOutput() PolicyObjectsGroupsOutput
	ToPolicyObjectsGroupsOutputWithContext(ctx context.Context) PolicyObjectsGroupsOutput
}

func (*PolicyObjectsGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectsGroups)(nil)).Elem()
}

func (i *PolicyObjectsGroups) ToPolicyObjectsGroupsOutput() PolicyObjectsGroupsOutput {
	return i.ToPolicyObjectsGroupsOutputWithContext(context.Background())
}

func (i *PolicyObjectsGroups) ToPolicyObjectsGroupsOutputWithContext(ctx context.Context) PolicyObjectsGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsGroupsOutput)
}

// PolicyObjectsGroupsArrayInput is an input type that accepts PolicyObjectsGroupsArray and PolicyObjectsGroupsArrayOutput values.
// You can construct a concrete instance of `PolicyObjectsGroupsArrayInput` via:
//
//	PolicyObjectsGroupsArray{ PolicyObjectsGroupsArgs{...} }
type PolicyObjectsGroupsArrayInput interface {
	pulumi.Input

	ToPolicyObjectsGroupsArrayOutput() PolicyObjectsGroupsArrayOutput
	ToPolicyObjectsGroupsArrayOutputWithContext(context.Context) PolicyObjectsGroupsArrayOutput
}

type PolicyObjectsGroupsArray []PolicyObjectsGroupsInput

func (PolicyObjectsGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectsGroups)(nil)).Elem()
}

func (i PolicyObjectsGroupsArray) ToPolicyObjectsGroupsArrayOutput() PolicyObjectsGroupsArrayOutput {
	return i.ToPolicyObjectsGroupsArrayOutputWithContext(context.Background())
}

func (i PolicyObjectsGroupsArray) ToPolicyObjectsGroupsArrayOutputWithContext(ctx context.Context) PolicyObjectsGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsGroupsArrayOutput)
}

// PolicyObjectsGroupsMapInput is an input type that accepts PolicyObjectsGroupsMap and PolicyObjectsGroupsMapOutput values.
// You can construct a concrete instance of `PolicyObjectsGroupsMapInput` via:
//
//	PolicyObjectsGroupsMap{ "key": PolicyObjectsGroupsArgs{...} }
type PolicyObjectsGroupsMapInput interface {
	pulumi.Input

	ToPolicyObjectsGroupsMapOutput() PolicyObjectsGroupsMapOutput
	ToPolicyObjectsGroupsMapOutputWithContext(context.Context) PolicyObjectsGroupsMapOutput
}

type PolicyObjectsGroupsMap map[string]PolicyObjectsGroupsInput

func (PolicyObjectsGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectsGroups)(nil)).Elem()
}

func (i PolicyObjectsGroupsMap) ToPolicyObjectsGroupsMapOutput() PolicyObjectsGroupsMapOutput {
	return i.ToPolicyObjectsGroupsMapOutputWithContext(context.Background())
}

func (i PolicyObjectsGroupsMap) ToPolicyObjectsGroupsMapOutputWithContext(ctx context.Context) PolicyObjectsGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectsGroupsMapOutput)
}

type PolicyObjectsGroupsOutput struct{ *pulumi.OutputState }

func (PolicyObjectsGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectsGroups)(nil)).Elem()
}

func (o PolicyObjectsGroupsOutput) ToPolicyObjectsGroupsOutput() PolicyObjectsGroupsOutput {
	return o
}

func (o PolicyObjectsGroupsOutput) ToPolicyObjectsGroupsOutputWithContext(ctx context.Context) PolicyObjectsGroupsOutput {
	return o
}

// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
func (o PolicyObjectsGroupsOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

func (o PolicyObjectsGroupsOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
func (o PolicyObjectsGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyObjectsGroupsOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringArrayOutput { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
func (o PolicyObjectsGroupsOutput) ObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringArrayOutput { return v.ObjectIds }).(pulumi.StringArrayOutput)
}

// organizationId path parameter. Organization ID
func (o PolicyObjectsGroupsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// policyObjectGroupId path parameter. Policy object group ID
func (o PolicyObjectsGroupsOutput) PolicyObjectGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.PolicyObjectGroupId }).(pulumi.StringOutput)
}

func (o PolicyObjectsGroupsOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectsGroups) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type PolicyObjectsGroupsArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectsGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectsGroups)(nil)).Elem()
}

func (o PolicyObjectsGroupsArrayOutput) ToPolicyObjectsGroupsArrayOutput() PolicyObjectsGroupsArrayOutput {
	return o
}

func (o PolicyObjectsGroupsArrayOutput) ToPolicyObjectsGroupsArrayOutputWithContext(ctx context.Context) PolicyObjectsGroupsArrayOutput {
	return o
}

func (o PolicyObjectsGroupsArrayOutput) Index(i pulumi.IntInput) PolicyObjectsGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectsGroups {
		return vs[0].([]*PolicyObjectsGroups)[vs[1].(int)]
	}).(PolicyObjectsGroupsOutput)
}

type PolicyObjectsGroupsMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectsGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectsGroups)(nil)).Elem()
}

func (o PolicyObjectsGroupsMapOutput) ToPolicyObjectsGroupsMapOutput() PolicyObjectsGroupsMapOutput {
	return o
}

func (o PolicyObjectsGroupsMapOutput) ToPolicyObjectsGroupsMapOutputWithContext(ctx context.Context) PolicyObjectsGroupsMapOutput {
	return o
}

func (o PolicyObjectsGroupsMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectsGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectsGroups {
		return vs[0].(map[string]*PolicyObjectsGroups)[vs[1].(string)]
	}).(PolicyObjectsGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsGroupsInput)(nil)).Elem(), &PolicyObjectsGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsGroupsArrayInput)(nil)).Elem(), PolicyObjectsGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectsGroupsMapInput)(nil)).Elem(), PolicyObjectsGroupsMap{})
	pulumi.RegisterOutputType(PolicyObjectsGroupsOutput{})
	pulumi.RegisterOutputType(PolicyObjectsGroupsArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectsGroupsMapOutput{})
}
