// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.NewSamlRoles(ctx, "example", &organizations.SamlRolesArgs{
//				Networks: organizations.SamlRolesNetworkArray{
//					&organizations.SamlRolesNetworkArgs{
//						Access: pulumi.String("full"),
//						Id:     pulumi.String("N_24329156"),
//					},
//				},
//				OrgAccess:      pulumi.String("none"),
//				OrganizationId: pulumi.String("string"),
//				Role:           pulumi.String("myrole"),
//				Tags: organizations.SamlRolesTagArray{
//					&organizations.SamlRolesTagArgs{
//						Access: pulumi.String("read-only"),
//						Tag:    pulumi.String("west"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsSamlRolesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:organizations/samlRoles:SamlRoles example "organization_id,saml_role_id"
// ```
type SamlRoles struct {
	pulumi.CustomResourceState

	// The list of camera access privileges for SAML administrator
	Cameras SamlRolesCameraArrayOutput `pulumi:"cameras"`
	// The list of networks that the SAML administrator has privileges on
	Networks SamlRolesNetworkArrayOutput `pulumi:"networks"`
	// The privilege of the SAML administrator on the organization
	OrgAccess pulumi.StringOutput `pulumi:"orgAccess"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The role of the SAML administrator
	Role pulumi.StringOutput `pulumi:"role"`
	// samlRoleId path parameter. Saml role ID
	SamlRoleId pulumi.StringPtrOutput `pulumi:"samlRoleId"`
	// The list of tags that the SAML administrator has privleges on
	Tags SamlRolesTagArrayOutput `pulumi:"tags"`
}

// NewSamlRoles registers a new resource with the given unique name, arguments, and options.
func NewSamlRoles(ctx *pulumi.Context,
	name string, args *SamlRolesArgs, opts ...pulumi.ResourceOption) (*SamlRoles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SamlRoles
	err := ctx.RegisterResource("meraki:organizations/samlRoles:SamlRoles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSamlRoles gets an existing SamlRoles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSamlRoles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SamlRolesState, opts ...pulumi.ResourceOption) (*SamlRoles, error) {
	var resource SamlRoles
	err := ctx.ReadResource("meraki:organizations/samlRoles:SamlRoles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SamlRoles resources.
type samlRolesState struct {
	// The list of camera access privileges for SAML administrator
	Cameras []SamlRolesCamera `pulumi:"cameras"`
	// The list of networks that the SAML administrator has privileges on
	Networks []SamlRolesNetwork `pulumi:"networks"`
	// The privilege of the SAML administrator on the organization
	OrgAccess *string `pulumi:"orgAccess"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// The role of the SAML administrator
	Role *string `pulumi:"role"`
	// samlRoleId path parameter. Saml role ID
	SamlRoleId *string `pulumi:"samlRoleId"`
	// The list of tags that the SAML administrator has privleges on
	Tags []SamlRolesTag `pulumi:"tags"`
}

type SamlRolesState struct {
	// The list of camera access privileges for SAML administrator
	Cameras SamlRolesCameraArrayInput
	// The list of networks that the SAML administrator has privileges on
	Networks SamlRolesNetworkArrayInput
	// The privilege of the SAML administrator on the organization
	OrgAccess pulumi.StringPtrInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput
	// The role of the SAML administrator
	Role pulumi.StringPtrInput
	// samlRoleId path parameter. Saml role ID
	SamlRoleId pulumi.StringPtrInput
	// The list of tags that the SAML administrator has privleges on
	Tags SamlRolesTagArrayInput
}

func (SamlRolesState) ElementType() reflect.Type {
	return reflect.TypeOf((*samlRolesState)(nil)).Elem()
}

type samlRolesArgs struct {
	// The list of networks that the SAML administrator has privileges on
	Networks []SamlRolesNetwork `pulumi:"networks"`
	// The privilege of the SAML administrator on the organization
	OrgAccess *string `pulumi:"orgAccess"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// The role of the SAML administrator
	Role *string `pulumi:"role"`
	// samlRoleId path parameter. Saml role ID
	SamlRoleId *string `pulumi:"samlRoleId"`
	// The list of tags that the SAML administrator has privleges on
	Tags []SamlRolesTag `pulumi:"tags"`
}

// The set of arguments for constructing a SamlRoles resource.
type SamlRolesArgs struct {
	// The list of networks that the SAML administrator has privileges on
	Networks SamlRolesNetworkArrayInput
	// The privilege of the SAML administrator on the organization
	OrgAccess pulumi.StringPtrInput
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput
	// The role of the SAML administrator
	Role pulumi.StringPtrInput
	// samlRoleId path parameter. Saml role ID
	SamlRoleId pulumi.StringPtrInput
	// The list of tags that the SAML administrator has privleges on
	Tags SamlRolesTagArrayInput
}

func (SamlRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*samlRolesArgs)(nil)).Elem()
}

type SamlRolesInput interface {
	pulumi.Input

	ToSamlRolesOutput() SamlRolesOutput
	ToSamlRolesOutputWithContext(ctx context.Context) SamlRolesOutput
}

func (*SamlRoles) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlRoles)(nil)).Elem()
}

func (i *SamlRoles) ToSamlRolesOutput() SamlRolesOutput {
	return i.ToSamlRolesOutputWithContext(context.Background())
}

func (i *SamlRoles) ToSamlRolesOutputWithContext(ctx context.Context) SamlRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesOutput)
}

// SamlRolesArrayInput is an input type that accepts SamlRolesArray and SamlRolesArrayOutput values.
// You can construct a concrete instance of `SamlRolesArrayInput` via:
//
//	SamlRolesArray{ SamlRolesArgs{...} }
type SamlRolesArrayInput interface {
	pulumi.Input

	ToSamlRolesArrayOutput() SamlRolesArrayOutput
	ToSamlRolesArrayOutputWithContext(context.Context) SamlRolesArrayOutput
}

type SamlRolesArray []SamlRolesInput

func (SamlRolesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SamlRoles)(nil)).Elem()
}

func (i SamlRolesArray) ToSamlRolesArrayOutput() SamlRolesArrayOutput {
	return i.ToSamlRolesArrayOutputWithContext(context.Background())
}

func (i SamlRolesArray) ToSamlRolesArrayOutputWithContext(ctx context.Context) SamlRolesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesArrayOutput)
}

// SamlRolesMapInput is an input type that accepts SamlRolesMap and SamlRolesMapOutput values.
// You can construct a concrete instance of `SamlRolesMapInput` via:
//
//	SamlRolesMap{ "key": SamlRolesArgs{...} }
type SamlRolesMapInput interface {
	pulumi.Input

	ToSamlRolesMapOutput() SamlRolesMapOutput
	ToSamlRolesMapOutputWithContext(context.Context) SamlRolesMapOutput
}

type SamlRolesMap map[string]SamlRolesInput

func (SamlRolesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SamlRoles)(nil)).Elem()
}

func (i SamlRolesMap) ToSamlRolesMapOutput() SamlRolesMapOutput {
	return i.ToSamlRolesMapOutputWithContext(context.Background())
}

func (i SamlRolesMap) ToSamlRolesMapOutputWithContext(ctx context.Context) SamlRolesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlRolesMapOutput)
}

type SamlRolesOutput struct{ *pulumi.OutputState }

func (SamlRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlRoles)(nil)).Elem()
}

func (o SamlRolesOutput) ToSamlRolesOutput() SamlRolesOutput {
	return o
}

func (o SamlRolesOutput) ToSamlRolesOutputWithContext(ctx context.Context) SamlRolesOutput {
	return o
}

// The list of camera access privileges for SAML administrator
func (o SamlRolesOutput) Cameras() SamlRolesCameraArrayOutput {
	return o.ApplyT(func(v *SamlRoles) SamlRolesCameraArrayOutput { return v.Cameras }).(SamlRolesCameraArrayOutput)
}

// The list of networks that the SAML administrator has privileges on
func (o SamlRolesOutput) Networks() SamlRolesNetworkArrayOutput {
	return o.ApplyT(func(v *SamlRoles) SamlRolesNetworkArrayOutput { return v.Networks }).(SamlRolesNetworkArrayOutput)
}

// The privilege of the SAML administrator on the organization
func (o SamlRolesOutput) OrgAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlRoles) pulumi.StringOutput { return v.OrgAccess }).(pulumi.StringOutput)
}

// organizationId path parameter. Organization ID
func (o SamlRolesOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlRoles) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The role of the SAML administrator
func (o SamlRolesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlRoles) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// samlRoleId path parameter. Saml role ID
func (o SamlRolesOutput) SamlRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlRoles) pulumi.StringPtrOutput { return v.SamlRoleId }).(pulumi.StringPtrOutput)
}

// The list of tags that the SAML administrator has privleges on
func (o SamlRolesOutput) Tags() SamlRolesTagArrayOutput {
	return o.ApplyT(func(v *SamlRoles) SamlRolesTagArrayOutput { return v.Tags }).(SamlRolesTagArrayOutput)
}

type SamlRolesArrayOutput struct{ *pulumi.OutputState }

func (SamlRolesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SamlRoles)(nil)).Elem()
}

func (o SamlRolesArrayOutput) ToSamlRolesArrayOutput() SamlRolesArrayOutput {
	return o
}

func (o SamlRolesArrayOutput) ToSamlRolesArrayOutputWithContext(ctx context.Context) SamlRolesArrayOutput {
	return o
}

func (o SamlRolesArrayOutput) Index(i pulumi.IntInput) SamlRolesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SamlRoles {
		return vs[0].([]*SamlRoles)[vs[1].(int)]
	}).(SamlRolesOutput)
}

type SamlRolesMapOutput struct{ *pulumi.OutputState }

func (SamlRolesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SamlRoles)(nil)).Elem()
}

func (o SamlRolesMapOutput) ToSamlRolesMapOutput() SamlRolesMapOutput {
	return o
}

func (o SamlRolesMapOutput) ToSamlRolesMapOutputWithContext(ctx context.Context) SamlRolesMapOutput {
	return o
}

func (o SamlRolesMapOutput) MapIndex(k pulumi.StringInput) SamlRolesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SamlRoles {
		return vs[0].(map[string]*SamlRoles)[vs[1].(string)]
	}).(SamlRolesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesInput)(nil)).Elem(), &SamlRoles{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesArrayInput)(nil)).Elem(), SamlRolesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlRolesMapInput)(nil)).Elem(), SamlRolesMap{})
	pulumi.RegisterOutputType(SamlRolesOutput{})
	pulumi.RegisterOutputType(SamlRolesArrayOutput{})
	pulumi.RegisterOutputType(SamlRolesMapOutput{})
}
