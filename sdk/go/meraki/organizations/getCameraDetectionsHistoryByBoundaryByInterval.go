// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := organizations.GetCameraDetectionsHistoryByBoundaryByInterval(ctx, &organizations.GetCameraDetectionsHistoryByBoundaryByIntervalArgs{
//				BoundaryIds: []string{
//					"string",
//				},
//				BoundaryTypes: []string{
//					"string",
//				},
//				Duration:       pulumi.IntRef(1),
//				OrganizationId: "string",
//				PerPage:        pulumi.IntRef(1),
//				Ranges: []string{
//					"string",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiOrganizationsCameraDetectionsHistoryByBoundaryByIntervalExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func GetCameraDetectionsHistoryByBoundaryByInterval(ctx *pulumi.Context, args *GetCameraDetectionsHistoryByBoundaryByIntervalArgs, opts ...pulumi.InvokeOption) (*GetCameraDetectionsHistoryByBoundaryByIntervalResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCameraDetectionsHistoryByBoundaryByIntervalResult
	err := ctx.Invoke("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCameraDetectionsHistoryByBoundaryByInterval.
type GetCameraDetectionsHistoryByBoundaryByIntervalArgs struct {
	// boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
	BoundaryIds []string `pulumi:"boundaryIds"`
	// boundaryTypes query parameter. The detection types. Defaults to 'person'.
	BoundaryTypes []string `pulumi:"boundaryTypes"`
	// duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
	Duration *int `pulumi:"duration"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
	PerPage *int `pulumi:"perPage"`
	// ranges query parameter. A list of time ranges with intervals
	Ranges []string `pulumi:"ranges"`
}

// A collection of values returned by getCameraDetectionsHistoryByBoundaryByInterval.
type GetCameraDetectionsHistoryByBoundaryByIntervalResult struct {
	// boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
	BoundaryIds []string `pulumi:"boundaryIds"`
	// boundaryTypes query parameter. The detection types. Defaults to 'person'.
	BoundaryTypes []string `pulumi:"boundaryTypes"`
	// duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
	Duration *int `pulumi:"duration"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseCameraGetOrganizationCameraDetectionsHistoryByBoundaryByInterval
	Items []GetCameraDetectionsHistoryByBoundaryByIntervalItem `pulumi:"items"`
	// organizationId path parameter. Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
	PerPage *int `pulumi:"perPage"`
	// ranges query parameter. A list of time ranges with intervals
	Ranges []string `pulumi:"ranges"`
}

func GetCameraDetectionsHistoryByBoundaryByIntervalOutput(ctx *pulumi.Context, args GetCameraDetectionsHistoryByBoundaryByIntervalOutputArgs, opts ...pulumi.InvokeOption) GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput, error) {
			args := v.(GetCameraDetectionsHistoryByBoundaryByIntervalArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:organizations/getCameraDetectionsHistoryByBoundaryByInterval:getCameraDetectionsHistoryByBoundaryByInterval", args, GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput{}, options).(GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput), nil
		}).(GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput)
}

// A collection of arguments for invoking getCameraDetectionsHistoryByBoundaryByInterval.
type GetCameraDetectionsHistoryByBoundaryByIntervalOutputArgs struct {
	// boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
	BoundaryIds pulumi.StringArrayInput `pulumi:"boundaryIds"`
	// boundaryTypes query parameter. The detection types. Defaults to 'person'.
	BoundaryTypes pulumi.StringArrayInput `pulumi:"boundaryTypes"`
	// duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// ranges query parameter. A list of time ranges with intervals
	Ranges pulumi.StringArrayInput `pulumi:"ranges"`
}

func (GetCameraDetectionsHistoryByBoundaryByIntervalOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalArgs)(nil)).Elem()
}

// A collection of values returned by getCameraDetectionsHistoryByBoundaryByInterval.
type GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput struct{ *pulumi.OutputState }

func (GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraDetectionsHistoryByBoundaryByIntervalResult)(nil)).Elem()
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalResultOutput() GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput {
	return o
}

func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) ToGetCameraDetectionsHistoryByBoundaryByIntervalResultOutputWithContext(ctx context.Context) GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput {
	return o
}

// boundaryIds query parameter. A list of boundary ids. The returned cameras will be filtered to only include these ids.
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) BoundaryIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) []string { return v.BoundaryIds }).(pulumi.StringArrayOutput)
}

// boundaryTypes query parameter. The detection types. Defaults to 'person'.
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) BoundaryTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) []string { return v.BoundaryTypes }).(pulumi.StringArrayOutput)
}

// duration query parameter. The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseCameraGetOrganizationCameraDetectionsHistoryByBoundaryByInterval
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) Items() GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) []GetCameraDetectionsHistoryByBoundaryByIntervalItem {
		return v.Items
	}).(GetCameraDetectionsHistoryByBoundaryByIntervalItemArrayOutput)
}

// organizationId path parameter. Organization ID
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 1 1000. Defaults to 1000.
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// ranges query parameter. A list of time ranges with intervals
func (o GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput) Ranges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCameraDetectionsHistoryByBoundaryByIntervalResult) []string { return v.Ranges }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCameraDetectionsHistoryByBoundaryByIntervalResultOutput{})
}
