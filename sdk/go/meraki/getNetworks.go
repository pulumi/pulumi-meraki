// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package meraki

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func GetNetworks(ctx *pulumi.Context, args *GetNetworksArgs, opts ...pulumi.InvokeOption) (*GetNetworksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetworksResult
	err := ctx.Invoke("meraki:index/getNetworks:getNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworks.
type GetNetworksArgs struct {
	// configTemplateId query parameter. An optional parameter that is the ID of a config template. Will return all networks bound to that template.
	ConfigTemplateId *string `pulumi:"configTemplateId"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// isBoundToConfigTemplate query parameter. An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
	IsBoundToConfigTemplate *bool `pulumi:"isBoundToConfigTemplate"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 100000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// tags query parameter. An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType *string `pulumi:"tagsFilterType"`
}

// A collection of values returned by getNetworks.
type GetNetworksResult struct {
	// configTemplateId query parameter. An optional parameter that is the ID of a config template. Will return all networks bound to that template.
	ConfigTemplateId *string `pulumi:"configTemplateId"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// isBoundToConfigTemplate query parameter. An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
	IsBoundToConfigTemplate *bool           `pulumi:"isBoundToConfigTemplate"`
	Item                    GetNetworksItem `pulumi:"item"`
	// Array of ResponseOrganizationsGetOrganizationNetworks
	Items []GetNetworksItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// organizationId path parameter. Organization ID
	OrganizationId *string `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 100000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// tags query parameter. An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType *string `pulumi:"tagsFilterType"`
}

func GetNetworksOutput(ctx *pulumi.Context, args GetNetworksOutputArgs, opts ...pulumi.InvokeOption) GetNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworksResult, error) {
			args := v.(GetNetworksArgs)
			r, err := GetNetworks(ctx, &args, opts...)
			var s GetNetworksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworksResultOutput)
}

// A collection of arguments for invoking getNetworks.
type GetNetworksOutputArgs struct {
	// configTemplateId query parameter. An optional parameter that is the ID of a config template. Will return all networks bound to that template.
	ConfigTemplateId pulumi.StringPtrInput `pulumi:"configTemplateId"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore pulumi.StringPtrInput `pulumi:"endingBefore"`
	// isBoundToConfigTemplate query parameter. An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
	IsBoundToConfigTemplate pulumi.BoolPtrInput `pulumi:"isBoundToConfigTemplate"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// organizationId path parameter. Organization ID
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 100000. Default is 1000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter pulumi.StringPtrInput `pulumi:"startingAfter"`
	// tags query parameter. An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType pulumi.StringPtrInput `pulumi:"tagsFilterType"`
}

func (GetNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getNetworks.
type GetNetworksResultOutput struct{ *pulumi.OutputState }

func (GetNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksResult)(nil)).Elem()
}

func (o GetNetworksResultOutput) ToGetNetworksResultOutput() GetNetworksResultOutput {
	return o
}

func (o GetNetworksResultOutput) ToGetNetworksResultOutputWithContext(ctx context.Context) GetNetworksResultOutput {
	return o
}

// configTemplateId query parameter. An optional parameter that is the ID of a config template. Will return all networks bound to that template.
func (o GetNetworksResultOutput) ConfigTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.ConfigTemplateId }).(pulumi.StringPtrOutput)
}

// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetNetworksResultOutput) EndingBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.EndingBefore }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// isBoundToConfigTemplate query parameter. An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
func (o GetNetworksResultOutput) IsBoundToConfigTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *bool { return v.IsBoundToConfigTemplate }).(pulumi.BoolPtrOutput)
}

func (o GetNetworksResultOutput) Item() GetNetworksItemOutput {
	return o.ApplyT(func(v GetNetworksResult) GetNetworksItem { return v.Item }).(GetNetworksItemOutput)
}

// Array of ResponseOrganizationsGetOrganizationNetworks
func (o GetNetworksResultOutput) Items() GetNetworksItemArrayOutput {
	return o.ApplyT(func(v GetNetworksResult) []GetNetworksItem { return v.Items }).(GetNetworksItemArrayOutput)
}

// networkId path parameter. Network ID
func (o GetNetworksResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// organizationId path parameter. Organization ID
func (o GetNetworksResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 3 100000. Default is 1000.
func (o GetNetworksResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetNetworksResultOutput) StartingAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.StartingAfter }).(pulumi.StringPtrOutput)
}

// tags query parameter. An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
func (o GetNetworksResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// tagsFilterType query parameter. An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
func (o GetNetworksResultOutput) TagsFilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.TagsFilterType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworksResultOutput{})
}
