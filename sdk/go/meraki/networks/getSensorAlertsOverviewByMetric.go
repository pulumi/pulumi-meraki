// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.GetSensorAlertsOverviewByMetric(ctx, &networks.GetSensorAlertsOverviewByMetricArgs{
//				Interval:  pulumi.IntRef(1),
//				NetworkId: "string",
//				T0:        pulumi.StringRef("string"),
//				T1:        pulumi.StringRef("string"),
//				Timespan:  pulumi.Float64Ref(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSensorAlertsOverviewByMetricExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func GetSensorAlertsOverviewByMetric(ctx *pulumi.Context, args *GetSensorAlertsOverviewByMetricArgs, opts ...pulumi.InvokeOption) (*GetSensorAlertsOverviewByMetricResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSensorAlertsOverviewByMetricResult
	err := ctx.Invoke("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSensorAlertsOverviewByMetric.
type GetSensorAlertsOverviewByMetricArgs struct {
	// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
	Interval *int `pulumi:"interval"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
	T0 *string `pulumi:"t0"`
	// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `pulumi:"t1"`
	// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan *float64 `pulumi:"timespan"`
}

// A collection of values returned by getSensorAlertsOverviewByMetric.
type GetSensorAlertsOverviewByMetricResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
	Interval *int `pulumi:"interval"`
	// Array of ResponseSensorGetNetworkSensorAlertsOverviewByMetric
	Items []GetSensorAlertsOverviewByMetricItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
	T0 *string `pulumi:"t0"`
	// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `pulumi:"t1"`
	// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan *float64 `pulumi:"timespan"`
}

func GetSensorAlertsOverviewByMetricOutput(ctx *pulumi.Context, args GetSensorAlertsOverviewByMetricOutputArgs, opts ...pulumi.InvokeOption) GetSensorAlertsOverviewByMetricResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSensorAlertsOverviewByMetricResultOutput, error) {
			args := v.(GetSensorAlertsOverviewByMetricArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetSensorAlertsOverviewByMetricResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSensorAlertsOverviewByMetric:getSensorAlertsOverviewByMetric", args, &rv, "", opts...)
			if err != nil {
				return GetSensorAlertsOverviewByMetricResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSensorAlertsOverviewByMetricResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSensorAlertsOverviewByMetricResultOutput), nil
			}
			return output, nil
		}).(GetSensorAlertsOverviewByMetricResultOutput)
}

// A collection of arguments for invoking getSensorAlertsOverviewByMetric.
type GetSensorAlertsOverviewByMetricOutputArgs struct {
	// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
	T0 pulumi.StringPtrInput `pulumi:"t0"`
	// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 pulumi.StringPtrInput `pulumi:"t1"`
	// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan pulumi.Float64PtrInput `pulumi:"timespan"`
}

func (GetSensorAlertsOverviewByMetricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorAlertsOverviewByMetricArgs)(nil)).Elem()
}

// A collection of values returned by getSensorAlertsOverviewByMetric.
type GetSensorAlertsOverviewByMetricResultOutput struct{ *pulumi.OutputState }

func (GetSensorAlertsOverviewByMetricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorAlertsOverviewByMetricResult)(nil)).Elem()
}

func (o GetSensorAlertsOverviewByMetricResultOutput) ToGetSensorAlertsOverviewByMetricResultOutput() GetSensorAlertsOverviewByMetricResultOutput {
	return o
}

func (o GetSensorAlertsOverviewByMetricResultOutput) ToGetSensorAlertsOverviewByMetricResultOutputWithContext(ctx context.Context) GetSensorAlertsOverviewByMetricResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSensorAlertsOverviewByMetricResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) string { return v.Id }).(pulumi.StringOutput)
}

// interval query parameter. The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
func (o GetSensorAlertsOverviewByMetricResultOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Array of ResponseSensorGetNetworkSensorAlertsOverviewByMetric
func (o GetSensorAlertsOverviewByMetricResultOutput) Items() GetSensorAlertsOverviewByMetricItemArrayOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) []GetSensorAlertsOverviewByMetricItem { return v.Items }).(GetSensorAlertsOverviewByMetricItemArrayOutput)
}

// networkId path parameter. Network ID
func (o GetSensorAlertsOverviewByMetricResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// t0 query parameter. The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
func (o GetSensorAlertsOverviewByMetricResultOutput) T0() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) *string { return v.T0 }).(pulumi.StringPtrOutput)
}

// t1 query parameter. The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
func (o GetSensorAlertsOverviewByMetricResultOutput) T1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) *string { return v.T1 }).(pulumi.StringPtrOutput)
}

// timespan query parameter. The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
func (o GetSensorAlertsOverviewByMetricResultOutput) Timespan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetSensorAlertsOverviewByMetricResult) *float64 { return v.Timespan }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSensorAlertsOverviewByMetricResultOutput{})
}
