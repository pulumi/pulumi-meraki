// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
type VlanProfilesAssignmentsReassign struct {
	pulumi.CustomResourceState

	Item VlanProfilesAssignmentsReassignItemOutput `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringOutput                             `pulumi:"networkId"`
	Parameters VlanProfilesAssignmentsReassignParametersOutput `pulumi:"parameters"`
}

// NewVlanProfilesAssignmentsReassign registers a new resource with the given unique name, arguments, and options.
func NewVlanProfilesAssignmentsReassign(ctx *pulumi.Context,
	name string, args *VlanProfilesAssignmentsReassignArgs, opts ...pulumi.ResourceOption) (*VlanProfilesAssignmentsReassign, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VlanProfilesAssignmentsReassign
	err := ctx.RegisterResource("meraki:networks/vlanProfilesAssignmentsReassign:VlanProfilesAssignmentsReassign", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVlanProfilesAssignmentsReassign gets an existing VlanProfilesAssignmentsReassign resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVlanProfilesAssignmentsReassign(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VlanProfilesAssignmentsReassignState, opts ...pulumi.ResourceOption) (*VlanProfilesAssignmentsReassign, error) {
	var resource VlanProfilesAssignmentsReassign
	err := ctx.ReadResource("meraki:networks/vlanProfilesAssignmentsReassign:VlanProfilesAssignmentsReassign", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VlanProfilesAssignmentsReassign resources.
type vlanProfilesAssignmentsReassignState struct {
	Item *VlanProfilesAssignmentsReassignItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  *string                                    `pulumi:"networkId"`
	Parameters *VlanProfilesAssignmentsReassignParameters `pulumi:"parameters"`
}

type VlanProfilesAssignmentsReassignState struct {
	Item VlanProfilesAssignmentsReassignItemPtrInput
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringPtrInput
	Parameters VlanProfilesAssignmentsReassignParametersPtrInput
}

func (VlanProfilesAssignmentsReassignState) ElementType() reflect.Type {
	return reflect.TypeOf((*vlanProfilesAssignmentsReassignState)(nil)).Elem()
}

type vlanProfilesAssignmentsReassignArgs struct {
	// networkId path parameter. Network ID
	NetworkId  string                                    `pulumi:"networkId"`
	Parameters VlanProfilesAssignmentsReassignParameters `pulumi:"parameters"`
}

// The set of arguments for constructing a VlanProfilesAssignmentsReassign resource.
type VlanProfilesAssignmentsReassignArgs struct {
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringInput
	Parameters VlanProfilesAssignmentsReassignParametersInput
}

func (VlanProfilesAssignmentsReassignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vlanProfilesAssignmentsReassignArgs)(nil)).Elem()
}

type VlanProfilesAssignmentsReassignInput interface {
	pulumi.Input

	ToVlanProfilesAssignmentsReassignOutput() VlanProfilesAssignmentsReassignOutput
	ToVlanProfilesAssignmentsReassignOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignOutput
}

func (*VlanProfilesAssignmentsReassign) ElementType() reflect.Type {
	return reflect.TypeOf((**VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (i *VlanProfilesAssignmentsReassign) ToVlanProfilesAssignmentsReassignOutput() VlanProfilesAssignmentsReassignOutput {
	return i.ToVlanProfilesAssignmentsReassignOutputWithContext(context.Background())
}

func (i *VlanProfilesAssignmentsReassign) ToVlanProfilesAssignmentsReassignOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanProfilesAssignmentsReassignOutput)
}

// VlanProfilesAssignmentsReassignArrayInput is an input type that accepts VlanProfilesAssignmentsReassignArray and VlanProfilesAssignmentsReassignArrayOutput values.
// You can construct a concrete instance of `VlanProfilesAssignmentsReassignArrayInput` via:
//
//	VlanProfilesAssignmentsReassignArray{ VlanProfilesAssignmentsReassignArgs{...} }
type VlanProfilesAssignmentsReassignArrayInput interface {
	pulumi.Input

	ToVlanProfilesAssignmentsReassignArrayOutput() VlanProfilesAssignmentsReassignArrayOutput
	ToVlanProfilesAssignmentsReassignArrayOutputWithContext(context.Context) VlanProfilesAssignmentsReassignArrayOutput
}

type VlanProfilesAssignmentsReassignArray []VlanProfilesAssignmentsReassignInput

func (VlanProfilesAssignmentsReassignArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (i VlanProfilesAssignmentsReassignArray) ToVlanProfilesAssignmentsReassignArrayOutput() VlanProfilesAssignmentsReassignArrayOutput {
	return i.ToVlanProfilesAssignmentsReassignArrayOutputWithContext(context.Background())
}

func (i VlanProfilesAssignmentsReassignArray) ToVlanProfilesAssignmentsReassignArrayOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanProfilesAssignmentsReassignArrayOutput)
}

// VlanProfilesAssignmentsReassignMapInput is an input type that accepts VlanProfilesAssignmentsReassignMap and VlanProfilesAssignmentsReassignMapOutput values.
// You can construct a concrete instance of `VlanProfilesAssignmentsReassignMapInput` via:
//
//	VlanProfilesAssignmentsReassignMap{ "key": VlanProfilesAssignmentsReassignArgs{...} }
type VlanProfilesAssignmentsReassignMapInput interface {
	pulumi.Input

	ToVlanProfilesAssignmentsReassignMapOutput() VlanProfilesAssignmentsReassignMapOutput
	ToVlanProfilesAssignmentsReassignMapOutputWithContext(context.Context) VlanProfilesAssignmentsReassignMapOutput
}

type VlanProfilesAssignmentsReassignMap map[string]VlanProfilesAssignmentsReassignInput

func (VlanProfilesAssignmentsReassignMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (i VlanProfilesAssignmentsReassignMap) ToVlanProfilesAssignmentsReassignMapOutput() VlanProfilesAssignmentsReassignMapOutput {
	return i.ToVlanProfilesAssignmentsReassignMapOutputWithContext(context.Background())
}

func (i VlanProfilesAssignmentsReassignMap) ToVlanProfilesAssignmentsReassignMapOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanProfilesAssignmentsReassignMapOutput)
}

type VlanProfilesAssignmentsReassignOutput struct{ *pulumi.OutputState }

func (VlanProfilesAssignmentsReassignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (o VlanProfilesAssignmentsReassignOutput) ToVlanProfilesAssignmentsReassignOutput() VlanProfilesAssignmentsReassignOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignOutput) ToVlanProfilesAssignmentsReassignOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignOutput) Item() VlanProfilesAssignmentsReassignItemOutput {
	return o.ApplyT(func(v *VlanProfilesAssignmentsReassign) VlanProfilesAssignmentsReassignItemOutput { return v.Item }).(VlanProfilesAssignmentsReassignItemOutput)
}

// networkId path parameter. Network ID
func (o VlanProfilesAssignmentsReassignOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VlanProfilesAssignmentsReassign) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o VlanProfilesAssignmentsReassignOutput) Parameters() VlanProfilesAssignmentsReassignParametersOutput {
	return o.ApplyT(func(v *VlanProfilesAssignmentsReassign) VlanProfilesAssignmentsReassignParametersOutput {
		return v.Parameters
	}).(VlanProfilesAssignmentsReassignParametersOutput)
}

type VlanProfilesAssignmentsReassignArrayOutput struct{ *pulumi.OutputState }

func (VlanProfilesAssignmentsReassignArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (o VlanProfilesAssignmentsReassignArrayOutput) ToVlanProfilesAssignmentsReassignArrayOutput() VlanProfilesAssignmentsReassignArrayOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignArrayOutput) ToVlanProfilesAssignmentsReassignArrayOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignArrayOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignArrayOutput) Index(i pulumi.IntInput) VlanProfilesAssignmentsReassignOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VlanProfilesAssignmentsReassign {
		return vs[0].([]*VlanProfilesAssignmentsReassign)[vs[1].(int)]
	}).(VlanProfilesAssignmentsReassignOutput)
}

type VlanProfilesAssignmentsReassignMapOutput struct{ *pulumi.OutputState }

func (VlanProfilesAssignmentsReassignMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VlanProfilesAssignmentsReassign)(nil)).Elem()
}

func (o VlanProfilesAssignmentsReassignMapOutput) ToVlanProfilesAssignmentsReassignMapOutput() VlanProfilesAssignmentsReassignMapOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignMapOutput) ToVlanProfilesAssignmentsReassignMapOutputWithContext(ctx context.Context) VlanProfilesAssignmentsReassignMapOutput {
	return o
}

func (o VlanProfilesAssignmentsReassignMapOutput) MapIndex(k pulumi.StringInput) VlanProfilesAssignmentsReassignOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VlanProfilesAssignmentsReassign {
		return vs[0].(map[string]*VlanProfilesAssignmentsReassign)[vs[1].(string)]
	}).(VlanProfilesAssignmentsReassignOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VlanProfilesAssignmentsReassignInput)(nil)).Elem(), &VlanProfilesAssignmentsReassign{})
	pulumi.RegisterInputType(reflect.TypeOf((*VlanProfilesAssignmentsReassignArrayInput)(nil)).Elem(), VlanProfilesAssignmentsReassignArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VlanProfilesAssignmentsReassignMapInput)(nil)).Elem(), VlanProfilesAssignmentsReassignMap{})
	pulumi.RegisterOutputType(VlanProfilesAssignmentsReassignOutput{})
	pulumi.RegisterOutputType(VlanProfilesAssignmentsReassignArrayOutput{})
	pulumi.RegisterOutputType(VlanProfilesAssignmentsReassignMapOutput{})
}
