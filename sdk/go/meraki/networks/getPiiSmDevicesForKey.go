// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.GetPiiSmDevicesForKey(ctx, &networks.GetPiiSmDevicesForKeyArgs{
//				BluetoothMac: pulumi.StringRef("string"),
//				Email:        pulumi.StringRef("string"),
//				Imei:         pulumi.StringRef("string"),
//				Mac:          pulumi.StringRef("string"),
//				NetworkId:    "string",
//				Serial:       pulumi.StringRef("string"),
//				Username:     pulumi.StringRef("string"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksPiiSmDevicesForKeyExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func GetPiiSmDevicesForKey(ctx *pulumi.Context, args *GetPiiSmDevicesForKeyArgs, opts ...pulumi.InvokeOption) (*GetPiiSmDevicesForKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPiiSmDevicesForKeyResult
	err := ctx.Invoke("meraki:networks/getPiiSmDevicesForKey:getPiiSmDevicesForKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPiiSmDevicesForKey.
type GetPiiSmDevicesForKeyArgs struct {
	// bluetoothMac query parameter. The MAC of a Bluetooth client
	BluetoothMac *string `pulumi:"bluetoothMac"`
	// email query parameter. The email of a network user account or a Systems Manager device
	Email *string `pulumi:"email"`
	// imei query parameter. The IMEI of a Systems Manager device
	Imei *string `pulumi:"imei"`
	// mac query parameter. The MAC of a network client device or a Systems Manager device
	Mac *string `pulumi:"mac"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// serial query parameter. The serial of a Systems Manager device
	Serial *string `pulumi:"serial"`
	// username query parameter. The username of a Systems Manager user
	Username *string `pulumi:"username"`
}

// A collection of values returned by getPiiSmDevicesForKey.
type GetPiiSmDevicesForKeyResult struct {
	// bluetoothMac query parameter. The MAC of a Bluetooth client
	BluetoothMac *string `pulumi:"bluetoothMac"`
	// email query parameter. The email of a network user account or a Systems Manager device
	Email *string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// imei query parameter. The IMEI of a Systems Manager device
	Imei *string                   `pulumi:"imei"`
	Item GetPiiSmDevicesForKeyItem `pulumi:"item"`
	// mac query parameter. The MAC of a network client device or a Systems Manager device
	Mac *string `pulumi:"mac"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// serial query parameter. The serial of a Systems Manager device
	Serial *string `pulumi:"serial"`
	// username query parameter. The username of a Systems Manager user
	Username *string `pulumi:"username"`
}

func GetPiiSmDevicesForKeyOutput(ctx *pulumi.Context, args GetPiiSmDevicesForKeyOutputArgs, opts ...pulumi.InvokeOption) GetPiiSmDevicesForKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPiiSmDevicesForKeyResultOutput, error) {
			args := v.(GetPiiSmDevicesForKeyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetPiiSmDevicesForKeyResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getPiiSmDevicesForKey:getPiiSmDevicesForKey", args, &rv, "", opts...)
			if err != nil {
				return GetPiiSmDevicesForKeyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetPiiSmDevicesForKeyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetPiiSmDevicesForKeyResultOutput), nil
			}
			return output, nil
		}).(GetPiiSmDevicesForKeyResultOutput)
}

// A collection of arguments for invoking getPiiSmDevicesForKey.
type GetPiiSmDevicesForKeyOutputArgs struct {
	// bluetoothMac query parameter. The MAC of a Bluetooth client
	BluetoothMac pulumi.StringPtrInput `pulumi:"bluetoothMac"`
	// email query parameter. The email of a network user account or a Systems Manager device
	Email pulumi.StringPtrInput `pulumi:"email"`
	// imei query parameter. The IMEI of a Systems Manager device
	Imei pulumi.StringPtrInput `pulumi:"imei"`
	// mac query parameter. The MAC of a network client device or a Systems Manager device
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// serial query parameter. The serial of a Systems Manager device
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// username query parameter. The username of a Systems Manager user
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetPiiSmDevicesForKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPiiSmDevicesForKeyArgs)(nil)).Elem()
}

// A collection of values returned by getPiiSmDevicesForKey.
type GetPiiSmDevicesForKeyResultOutput struct{ *pulumi.OutputState }

func (GetPiiSmDevicesForKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPiiSmDevicesForKeyResult)(nil)).Elem()
}

func (o GetPiiSmDevicesForKeyResultOutput) ToGetPiiSmDevicesForKeyResultOutput() GetPiiSmDevicesForKeyResultOutput {
	return o
}

func (o GetPiiSmDevicesForKeyResultOutput) ToGetPiiSmDevicesForKeyResultOutputWithContext(ctx context.Context) GetPiiSmDevicesForKeyResultOutput {
	return o
}

// bluetoothMac query parameter. The MAC of a Bluetooth client
func (o GetPiiSmDevicesForKeyResultOutput) BluetoothMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.BluetoothMac }).(pulumi.StringPtrOutput)
}

// email query parameter. The email of a network user account or a Systems Manager device
func (o GetPiiSmDevicesForKeyResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPiiSmDevicesForKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// imei query parameter. The IMEI of a Systems Manager device
func (o GetPiiSmDevicesForKeyResultOutput) Imei() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.Imei }).(pulumi.StringPtrOutput)
}

func (o GetPiiSmDevicesForKeyResultOutput) Item() GetPiiSmDevicesForKeyItemOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) GetPiiSmDevicesForKeyItem { return v.Item }).(GetPiiSmDevicesForKeyItemOutput)
}

// mac query parameter. The MAC of a network client device or a Systems Manager device
func (o GetPiiSmDevicesForKeyResultOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// networkId path parameter. Network ID
func (o GetPiiSmDevicesForKeyResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// serial query parameter. The serial of a Systems Manager device
func (o GetPiiSmDevicesForKeyResultOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// username query parameter. The username of a Systems Manager user
func (o GetPiiSmDevicesForKeyResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPiiSmDevicesForKeyResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPiiSmDevicesForKeyResultOutput{})
}
