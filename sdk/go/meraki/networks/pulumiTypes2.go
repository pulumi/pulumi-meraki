// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetWirelessRfProfilesItemPerSsidSettingsStatus1Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus1Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus1Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus1Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus2Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus2Args and GetWirelessRfProfilesItemPerSsidSettingsStatus2Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus2Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus2Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus2Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus2Output() GetWirelessRfProfilesItemPerSsidSettingsStatus2Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus2OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus2Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2Output() GetWirelessRfProfilesItemPerSsidSettingsStatus2Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus2OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus2Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus2Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2Output() GetWirelessRfProfilesItemPerSsidSettingsStatus2Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2) GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus2Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus3Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus3Args and GetWirelessRfProfilesItemPerSsidSettingsStatus3Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus3Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus3Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus3Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus3Output() GetWirelessRfProfilesItemPerSsidSettingsStatus3Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus3OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus3Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3Output() GetWirelessRfProfilesItemPerSsidSettingsStatus3Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus3OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus3Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus3Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3Output() GetWirelessRfProfilesItemPerSsidSettingsStatus3Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3) GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus3Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus4Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus4Args and GetWirelessRfProfilesItemPerSsidSettingsStatus4Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus4Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus4Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus4Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus4Output() GetWirelessRfProfilesItemPerSsidSettingsStatus4Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus4OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus4Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4Output() GetWirelessRfProfilesItemPerSsidSettingsStatus4Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus4OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus4Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus4Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4Output() GetWirelessRfProfilesItemPerSsidSettingsStatus4Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4) GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus4Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus5Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus5Args and GetWirelessRfProfilesItemPerSsidSettingsStatus5Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus5Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus5Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus5Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus5Output() GetWirelessRfProfilesItemPerSsidSettingsStatus5Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus5OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus5Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5Output() GetWirelessRfProfilesItemPerSsidSettingsStatus5Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus5OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus5Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus5Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5Output() GetWirelessRfProfilesItemPerSsidSettingsStatus5Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5) GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus5Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus6Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus6Args and GetWirelessRfProfilesItemPerSsidSettingsStatus6Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus6Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus6Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus6Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus6Output() GetWirelessRfProfilesItemPerSsidSettingsStatus6Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus6OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus6Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6Output() GetWirelessRfProfilesItemPerSsidSettingsStatus6Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus6OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus6Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus6Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6Output() GetWirelessRfProfilesItemPerSsidSettingsStatus6Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6) GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus6Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus7Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus7Args and GetWirelessRfProfilesItemPerSsidSettingsStatus7Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus7Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus7Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus7Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus7Output() GetWirelessRfProfilesItemPerSsidSettingsStatus7Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus7OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus7Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus7Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7Output() GetWirelessRfProfilesItemPerSsidSettingsStatus7Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus7OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus7Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus7Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7Output() GetWirelessRfProfilesItemPerSsidSettingsStatus7Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7) GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus7Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus8Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus8Args and GetWirelessRfProfilesItemPerSsidSettingsStatus8Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus8Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus8Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus8Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus8Output() GetWirelessRfProfilesItemPerSsidSettingsStatus8Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus8OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus8Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus8Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8Output() GetWirelessRfProfilesItemPerSsidSettingsStatus8Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus8OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus8Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus8Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8Output() GetWirelessRfProfilesItemPerSsidSettingsStatus8Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8) GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus8Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9 struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode string `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled bool `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate int `pulumi:"minBitrate"`
	// Name of SSID
	Name string `pulumi:"name"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus9Input is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus9Args and GetWirelessRfProfilesItemPerSsidSettingsStatus9Output values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus9Input` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus9Args{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus9Input interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus9Output() GetWirelessRfProfilesItemPerSsidSettingsStatus9Output
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus9OutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9Output
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9Args struct {
	// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
	BandOperationMode pulumi.StringInput `pulumi:"bandOperationMode"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled pulumi.BoolInput `pulumi:"bandSteeringEnabled"`
	// Settings related to all bands
	Bands GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsInput `pulumi:"bands"`
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Name of SSID
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus9Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus9Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9Output() GetWirelessRfProfilesItemPerSsidSettingsStatus9Output {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus9OutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus9Args) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus9Output)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9Output struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9Output() GetWirelessRfProfilesItemPerSsidSettingsStatus9Output {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9OutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9Output {
	return o
}

// Choice between 'dual', '2.4ghz', '5ghz', '6ghz' or 'multi'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) BandOperationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9) string { return v.BandOperationMode }).(pulumi.StringOutput)
}

// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) BandSteeringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9) bool { return v.BandSteeringEnabled }).(pulumi.BoolOutput)
}

// Settings related to all bands
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) Bands() GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9) GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands {
		return v.Bands
	}).(GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput)
}

// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Name of SSID
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds []string `pulumi:"enableds"`
}

// GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsInput is an input type that accepts GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs and GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsInput` via:
//
//	GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs{...}
type GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput
	ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutputWithContext(context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs struct {
	// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
	Enableds pulumi.StringArrayInput `pulumi:"enableds"`
}

func (GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput {
	return i.ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput)
}

type GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput() GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput {
	return o
}

func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput) ToGetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput {
	return o
}

// List of enabled bands. Can include ["2.4", "5", "6", "disabled"
func (o GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput) Enableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemPerSsidSettingsStatus9Bands) []string { return v.Enableds }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemSixGhzSettings struct {
	// Sets channel width (MHz) for 6Ghz band. Can be one of '0', '20', '40', '80' or '160'. Defaults to auto.
	ChannelWidth string `pulumi:"channelWidth"`
	// Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower int `pulumi:"maxPower"`
	// Sets min bitrate (Mbps) of 6Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
	MinBitrate int `pulumi:"minBitrate"`
	// Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
	MinPower int `pulumi:"minPower"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop int `pulumi:"rxsop"`
	// Sets valid auto channels for 6Ghz band. Can be one of '1', '5', '9', '13', '17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97', '101', '105', '109', '113', '117', '121', '125', '129', '133', '137', '141', '145', '149', '153', '157', '161', '165', '169', '173', '177', '181', '185', '189', '193', '197', '201', '205', '209', '213', '217', '221', '225', '229' or '233'. Defaults to auto.
	ValidAutoChannels []string `pulumi:"validAutoChannels"`
}

// GetWirelessRfProfilesItemSixGhzSettingsInput is an input type that accepts GetWirelessRfProfilesItemSixGhzSettingsArgs and GetWirelessRfProfilesItemSixGhzSettingsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemSixGhzSettingsInput` via:
//
//	GetWirelessRfProfilesItemSixGhzSettingsArgs{...}
type GetWirelessRfProfilesItemSixGhzSettingsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemSixGhzSettingsOutput() GetWirelessRfProfilesItemSixGhzSettingsOutput
	ToGetWirelessRfProfilesItemSixGhzSettingsOutputWithContext(context.Context) GetWirelessRfProfilesItemSixGhzSettingsOutput
}

type GetWirelessRfProfilesItemSixGhzSettingsArgs struct {
	// Sets channel width (MHz) for 6Ghz band. Can be one of '0', '20', '40', '80' or '160'. Defaults to auto.
	ChannelWidth pulumi.StringInput `pulumi:"channelWidth"`
	// Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower pulumi.IntInput `pulumi:"maxPower"`
	// Sets min bitrate (Mbps) of 6Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
	MinPower pulumi.IntInput `pulumi:"minPower"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop pulumi.IntInput `pulumi:"rxsop"`
	// Sets valid auto channels for 6Ghz band. Can be one of '1', '5', '9', '13', '17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97', '101', '105', '109', '113', '117', '121', '125', '129', '133', '137', '141', '145', '149', '153', '157', '161', '165', '169', '173', '177', '181', '185', '189', '193', '197', '201', '205', '209', '213', '217', '221', '225', '229' or '233'. Defaults to auto.
	ValidAutoChannels pulumi.StringArrayInput `pulumi:"validAutoChannels"`
}

func (GetWirelessRfProfilesItemSixGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemSixGhzSettings)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemSixGhzSettingsArgs) ToGetWirelessRfProfilesItemSixGhzSettingsOutput() GetWirelessRfProfilesItemSixGhzSettingsOutput {
	return i.ToGetWirelessRfProfilesItemSixGhzSettingsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemSixGhzSettingsArgs) ToGetWirelessRfProfilesItemSixGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemSixGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemSixGhzSettingsOutput)
}

type GetWirelessRfProfilesItemSixGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemSixGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemSixGhzSettings)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) ToGetWirelessRfProfilesItemSixGhzSettingsOutput() GetWirelessRfProfilesItemSixGhzSettingsOutput {
	return o
}

func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) ToGetWirelessRfProfilesItemSixGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemSixGhzSettingsOutput {
	return o
}

// Sets channel width (MHz) for 6Ghz band. Can be one of '0', '20', '40', '80' or '160'. Defaults to auto.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) ChannelWidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) string { return v.ChannelWidth }).(pulumi.StringOutput)
}

// Sets max power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 30.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) MaxPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) int { return v.MaxPower }).(pulumi.IntOutput)
}

// Sets min bitrate (Mbps) of 6Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// Sets min power (dBm) of 6Ghz band. Can be integer between 2 and 30. Defaults to 8.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) MinPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) int { return v.MinPower }).(pulumi.IntOutput)
}

// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) Rxsop() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) int { return v.Rxsop }).(pulumi.IntOutput)
}

// Sets valid auto channels for 6Ghz band. Can be one of '1', '5', '9', '13', '17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97', '101', '105', '109', '113', '117', '121', '125', '129', '133', '137', '141', '145', '149', '153', '157', '161', '165', '169', '173', '177', '181', '185', '189', '193', '197', '201', '205', '209', '213', '217', '221', '225', '229' or '233'. Defaults to auto.
func (o GetWirelessRfProfilesItemSixGhzSettingsOutput) ValidAutoChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemSixGhzSettings) []string { return v.ValidAutoChannels }).(pulumi.StringArrayOutput)
}

type GetWirelessRfProfilesItemTransmission struct {
	// Toggle for radio transmission. When false, radios will not transmit at all.
	Enabled bool `pulumi:"enabled"`
}

// GetWirelessRfProfilesItemTransmissionInput is an input type that accepts GetWirelessRfProfilesItemTransmissionArgs and GetWirelessRfProfilesItemTransmissionOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemTransmissionInput` via:
//
//	GetWirelessRfProfilesItemTransmissionArgs{...}
type GetWirelessRfProfilesItemTransmissionInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemTransmissionOutput() GetWirelessRfProfilesItemTransmissionOutput
	ToGetWirelessRfProfilesItemTransmissionOutputWithContext(context.Context) GetWirelessRfProfilesItemTransmissionOutput
}

type GetWirelessRfProfilesItemTransmissionArgs struct {
	// Toggle for radio transmission. When false, radios will not transmit at all.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetWirelessRfProfilesItemTransmissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemTransmission)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemTransmissionArgs) ToGetWirelessRfProfilesItemTransmissionOutput() GetWirelessRfProfilesItemTransmissionOutput {
	return i.ToGetWirelessRfProfilesItemTransmissionOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemTransmissionArgs) ToGetWirelessRfProfilesItemTransmissionOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemTransmissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemTransmissionOutput)
}

type GetWirelessRfProfilesItemTransmissionOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemTransmissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemTransmission)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemTransmissionOutput) ToGetWirelessRfProfilesItemTransmissionOutput() GetWirelessRfProfilesItemTransmissionOutput {
	return o
}

func (o GetWirelessRfProfilesItemTransmissionOutput) ToGetWirelessRfProfilesItemTransmissionOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemTransmissionOutput {
	return o
}

// Toggle for radio transmission. When false, radios will not transmit at all.
func (o GetWirelessRfProfilesItemTransmissionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTransmission) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessRfProfilesItemTwoFourGhzSettings struct {
	// Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
	AxEnabled bool `pulumi:"axEnabled"`
	// Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower int `pulumi:"maxPower"`
	// Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
	MinBitrate float64 `pulumi:"minBitrate"`
	// Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
	MinPower int `pulumi:"minPower"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop int `pulumi:"rxsop"`
	// Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
	ValidAutoChannels []string `pulumi:"validAutoChannels"`
}

// GetWirelessRfProfilesItemTwoFourGhzSettingsInput is an input type that accepts GetWirelessRfProfilesItemTwoFourGhzSettingsArgs and GetWirelessRfProfilesItemTwoFourGhzSettingsOutput values.
// You can construct a concrete instance of `GetWirelessRfProfilesItemTwoFourGhzSettingsInput` via:
//
//	GetWirelessRfProfilesItemTwoFourGhzSettingsArgs{...}
type GetWirelessRfProfilesItemTwoFourGhzSettingsInput interface {
	pulumi.Input

	ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutput() GetWirelessRfProfilesItemTwoFourGhzSettingsOutput
	ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutputWithContext(context.Context) GetWirelessRfProfilesItemTwoFourGhzSettingsOutput
}

type GetWirelessRfProfilesItemTwoFourGhzSettingsArgs struct {
	// Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
	AxEnabled pulumi.BoolInput `pulumi:"axEnabled"`
	// Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower pulumi.IntInput `pulumi:"maxPower"`
	// Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
	MinBitrate pulumi.Float64Input `pulumi:"minBitrate"`
	// Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
	MinPower pulumi.IntInput `pulumi:"minPower"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop pulumi.IntInput `pulumi:"rxsop"`
	// Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
	ValidAutoChannels pulumi.StringArrayInput `pulumi:"validAutoChannels"`
}

func (GetWirelessRfProfilesItemTwoFourGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemTwoFourGhzSettings)(nil)).Elem()
}

func (i GetWirelessRfProfilesItemTwoFourGhzSettingsArgs) ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutput() GetWirelessRfProfilesItemTwoFourGhzSettingsOutput {
	return i.ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutputWithContext(context.Background())
}

func (i GetWirelessRfProfilesItemTwoFourGhzSettingsArgs) ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemTwoFourGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRfProfilesItemTwoFourGhzSettingsOutput)
}

type GetWirelessRfProfilesItemTwoFourGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRfProfilesItemTwoFourGhzSettings)(nil)).Elem()
}

func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutput() GetWirelessRfProfilesItemTwoFourGhzSettingsOutput {
	return o
}

func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) ToGetWirelessRfProfilesItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRfProfilesItemTwoFourGhzSettingsOutput {
	return o
}

// Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) AxEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) bool { return v.AxEnabled }).(pulumi.BoolOutput)
}

// Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) MaxPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) int { return v.MaxPower }).(pulumi.IntOutput)
}

// Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) MinBitrate() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) float64 { return v.MinBitrate }).(pulumi.Float64Output)
}

// Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) MinPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) int { return v.MinPower }).(pulumi.IntOutput)
}

// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) Rxsop() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) int { return v.Rxsop }).(pulumi.IntOutput)
}

// Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
func (o GetWirelessRfProfilesItemTwoFourGhzSettingsOutput) ValidAutoChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessRfProfilesItemTwoFourGhzSettings) []string { return v.ValidAutoChannels }).(pulumi.StringArrayOutput)
}

type GetWirelessSettingsItem struct {
	// Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
	Ipv6BridgeEnabled bool `pulumi:"ipv6BridgeEnabled"`
	// Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
	LedLightsOn bool `pulumi:"ledLightsOn"`
	// Toggle for enabling or disabling location analytics for your network
	LocationAnalyticsEnabled bool `pulumi:"locationAnalyticsEnabled"`
	// Toggle for enabling or disabling meshing in a network
	MeshingEnabled bool `pulumi:"meshingEnabled"`
	// Named VLAN settings for wireless networks.
	NamedVlans GetWirelessSettingsItemNamedVlans `pulumi:"namedVlans"`
	// Regulatory domain information for this network.
	RegulatoryDomain GetWirelessSettingsItemRegulatoryDomain `pulumi:"regulatoryDomain"`
	// The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
	Upgradestrategy string `pulumi:"upgradestrategy"`
}

// GetWirelessSettingsItemInput is an input type that accepts GetWirelessSettingsItemArgs and GetWirelessSettingsItemOutput values.
// You can construct a concrete instance of `GetWirelessSettingsItemInput` via:
//
//	GetWirelessSettingsItemArgs{...}
type GetWirelessSettingsItemInput interface {
	pulumi.Input

	ToGetWirelessSettingsItemOutput() GetWirelessSettingsItemOutput
	ToGetWirelessSettingsItemOutputWithContext(context.Context) GetWirelessSettingsItemOutput
}

type GetWirelessSettingsItemArgs struct {
	// Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
	Ipv6BridgeEnabled pulumi.BoolInput `pulumi:"ipv6BridgeEnabled"`
	// Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
	LedLightsOn pulumi.BoolInput `pulumi:"ledLightsOn"`
	// Toggle for enabling or disabling location analytics for your network
	LocationAnalyticsEnabled pulumi.BoolInput `pulumi:"locationAnalyticsEnabled"`
	// Toggle for enabling or disabling meshing in a network
	MeshingEnabled pulumi.BoolInput `pulumi:"meshingEnabled"`
	// Named VLAN settings for wireless networks.
	NamedVlans GetWirelessSettingsItemNamedVlansInput `pulumi:"namedVlans"`
	// Regulatory domain information for this network.
	RegulatoryDomain GetWirelessSettingsItemRegulatoryDomainInput `pulumi:"regulatoryDomain"`
	// The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
	Upgradestrategy pulumi.StringInput `pulumi:"upgradestrategy"`
}

func (GetWirelessSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItem)(nil)).Elem()
}

func (i GetWirelessSettingsItemArgs) ToGetWirelessSettingsItemOutput() GetWirelessSettingsItemOutput {
	return i.ToGetWirelessSettingsItemOutputWithContext(context.Background())
}

func (i GetWirelessSettingsItemArgs) ToGetWirelessSettingsItemOutputWithContext(ctx context.Context) GetWirelessSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSettingsItemOutput)
}

type GetWirelessSettingsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItem)(nil)).Elem()
}

func (o GetWirelessSettingsItemOutput) ToGetWirelessSettingsItemOutput() GetWirelessSettingsItemOutput {
	return o
}

func (o GetWirelessSettingsItemOutput) ToGetWirelessSettingsItemOutputWithContext(ctx context.Context) GetWirelessSettingsItemOutput {
	return o
}

// Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
func (o GetWirelessSettingsItemOutput) Ipv6BridgeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) bool { return v.Ipv6BridgeEnabled }).(pulumi.BoolOutput)
}

// Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
func (o GetWirelessSettingsItemOutput) LedLightsOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) bool { return v.LedLightsOn }).(pulumi.BoolOutput)
}

// Toggle for enabling or disabling location analytics for your network
func (o GetWirelessSettingsItemOutput) LocationAnalyticsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) bool { return v.LocationAnalyticsEnabled }).(pulumi.BoolOutput)
}

// Toggle for enabling or disabling meshing in a network
func (o GetWirelessSettingsItemOutput) MeshingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) bool { return v.MeshingEnabled }).(pulumi.BoolOutput)
}

// Named VLAN settings for wireless networks.
func (o GetWirelessSettingsItemOutput) NamedVlans() GetWirelessSettingsItemNamedVlansOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) GetWirelessSettingsItemNamedVlans { return v.NamedVlans }).(GetWirelessSettingsItemNamedVlansOutput)
}

// Regulatory domain information for this network.
func (o GetWirelessSettingsItemOutput) RegulatoryDomain() GetWirelessSettingsItemRegulatoryDomainOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) GetWirelessSettingsItemRegulatoryDomain { return v.RegulatoryDomain }).(GetWirelessSettingsItemRegulatoryDomainOutput)
}

// The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
func (o GetWirelessSettingsItemOutput) Upgradestrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSettingsItem) string { return v.Upgradestrategy }).(pulumi.StringOutput)
}

type GetWirelessSettingsItemNamedVlans struct {
	// Named VLAN Pool DHCP Monitoring settings.
	PoolDhcpMonitoring GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring `pulumi:"poolDhcpMonitoring"`
}

// GetWirelessSettingsItemNamedVlansInput is an input type that accepts GetWirelessSettingsItemNamedVlansArgs and GetWirelessSettingsItemNamedVlansOutput values.
// You can construct a concrete instance of `GetWirelessSettingsItemNamedVlansInput` via:
//
//	GetWirelessSettingsItemNamedVlansArgs{...}
type GetWirelessSettingsItemNamedVlansInput interface {
	pulumi.Input

	ToGetWirelessSettingsItemNamedVlansOutput() GetWirelessSettingsItemNamedVlansOutput
	ToGetWirelessSettingsItemNamedVlansOutputWithContext(context.Context) GetWirelessSettingsItemNamedVlansOutput
}

type GetWirelessSettingsItemNamedVlansArgs struct {
	// Named VLAN Pool DHCP Monitoring settings.
	PoolDhcpMonitoring GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringInput `pulumi:"poolDhcpMonitoring"`
}

func (GetWirelessSettingsItemNamedVlansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemNamedVlans)(nil)).Elem()
}

func (i GetWirelessSettingsItemNamedVlansArgs) ToGetWirelessSettingsItemNamedVlansOutput() GetWirelessSettingsItemNamedVlansOutput {
	return i.ToGetWirelessSettingsItemNamedVlansOutputWithContext(context.Background())
}

func (i GetWirelessSettingsItemNamedVlansArgs) ToGetWirelessSettingsItemNamedVlansOutputWithContext(ctx context.Context) GetWirelessSettingsItemNamedVlansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSettingsItemNamedVlansOutput)
}

type GetWirelessSettingsItemNamedVlansOutput struct{ *pulumi.OutputState }

func (GetWirelessSettingsItemNamedVlansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemNamedVlans)(nil)).Elem()
}

func (o GetWirelessSettingsItemNamedVlansOutput) ToGetWirelessSettingsItemNamedVlansOutput() GetWirelessSettingsItemNamedVlansOutput {
	return o
}

func (o GetWirelessSettingsItemNamedVlansOutput) ToGetWirelessSettingsItemNamedVlansOutputWithContext(ctx context.Context) GetWirelessSettingsItemNamedVlansOutput {
	return o
}

// Named VLAN Pool DHCP Monitoring settings.
func (o GetWirelessSettingsItemNamedVlansOutput) PoolDhcpMonitoring() GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemNamedVlans) GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring {
		return v.PoolDhcpMonitoring
	}).(GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput)
}

type GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring struct {
	// The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
	Duration int `pulumi:"duration"`
	// Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP
	Enabled bool `pulumi:"enabled"`
}

// GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringInput is an input type that accepts GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs and GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput values.
// You can construct a concrete instance of `GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringInput` via:
//
//	GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs{...}
type GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringInput interface {
	pulumi.Input

	ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput() GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput
	ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutputWithContext(context.Context) GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput
}

type GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs struct {
	// The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring)(nil)).Elem()
}

func (i GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs) ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput() GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput {
	return i.ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutputWithContext(context.Background())
}

func (i GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs) ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutputWithContext(ctx context.Context) GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput)
}

type GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput struct{ *pulumi.OutputState }

func (GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring)(nil)).Elem()
}

func (o GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput) ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput() GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput {
	return o
}

func (o GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput) ToGetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutputWithContext(ctx context.Context) GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput {
	return o
}

// The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
func (o GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring) int { return v.Duration }).(pulumi.IntOutput)
}

// Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP
func (o GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemNamedVlansPoolDhcpMonitoring) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessSettingsItemRegulatoryDomain struct {
	// The country code of the regulatory domain.
	CountryCode string `pulumi:"countryCode"`
	// The name of the regulatory domain for this network.
	Name string `pulumi:"name"`
	// Whether or not the regulatory domain for this network permits Wifi 6E.
	Permits6e bool `pulumi:"permits6e"`
}

// GetWirelessSettingsItemRegulatoryDomainInput is an input type that accepts GetWirelessSettingsItemRegulatoryDomainArgs and GetWirelessSettingsItemRegulatoryDomainOutput values.
// You can construct a concrete instance of `GetWirelessSettingsItemRegulatoryDomainInput` via:
//
//	GetWirelessSettingsItemRegulatoryDomainArgs{...}
type GetWirelessSettingsItemRegulatoryDomainInput interface {
	pulumi.Input

	ToGetWirelessSettingsItemRegulatoryDomainOutput() GetWirelessSettingsItemRegulatoryDomainOutput
	ToGetWirelessSettingsItemRegulatoryDomainOutputWithContext(context.Context) GetWirelessSettingsItemRegulatoryDomainOutput
}

type GetWirelessSettingsItemRegulatoryDomainArgs struct {
	// The country code of the regulatory domain.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The name of the regulatory domain for this network.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether or not the regulatory domain for this network permits Wifi 6E.
	Permits6e pulumi.BoolInput `pulumi:"permits6e"`
}

func (GetWirelessSettingsItemRegulatoryDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemRegulatoryDomain)(nil)).Elem()
}

func (i GetWirelessSettingsItemRegulatoryDomainArgs) ToGetWirelessSettingsItemRegulatoryDomainOutput() GetWirelessSettingsItemRegulatoryDomainOutput {
	return i.ToGetWirelessSettingsItemRegulatoryDomainOutputWithContext(context.Background())
}

func (i GetWirelessSettingsItemRegulatoryDomainArgs) ToGetWirelessSettingsItemRegulatoryDomainOutputWithContext(ctx context.Context) GetWirelessSettingsItemRegulatoryDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSettingsItemRegulatoryDomainOutput)
}

type GetWirelessSettingsItemRegulatoryDomainOutput struct{ *pulumi.OutputState }

func (GetWirelessSettingsItemRegulatoryDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSettingsItemRegulatoryDomain)(nil)).Elem()
}

func (o GetWirelessSettingsItemRegulatoryDomainOutput) ToGetWirelessSettingsItemRegulatoryDomainOutput() GetWirelessSettingsItemRegulatoryDomainOutput {
	return o
}

func (o GetWirelessSettingsItemRegulatoryDomainOutput) ToGetWirelessSettingsItemRegulatoryDomainOutputWithContext(ctx context.Context) GetWirelessSettingsItemRegulatoryDomainOutput {
	return o
}

// The country code of the regulatory domain.
func (o GetWirelessSettingsItemRegulatoryDomainOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemRegulatoryDomain) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The name of the regulatory domain for this network.
func (o GetWirelessSettingsItemRegulatoryDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemRegulatoryDomain) string { return v.Name }).(pulumi.StringOutput)
}

// Whether or not the regulatory domain for this network permits Wifi 6E.
func (o GetWirelessSettingsItemRegulatoryDomainOutput) Permits6e() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSettingsItemRegulatoryDomain) bool { return v.Permits6e }).(pulumi.BoolOutput)
}

type GetWirelessSignalQualityHistoryItem struct {
	// The end time of the query range
	EndTs string `pulumi:"endTs"`
	// Received signal strength indicator
	Rssi int `pulumi:"rssi"`
	// Signal to noise ratio
	Snr int `pulumi:"snr"`
	// The start time of the query range
	StartTs string `pulumi:"startTs"`
}

// GetWirelessSignalQualityHistoryItemInput is an input type that accepts GetWirelessSignalQualityHistoryItemArgs and GetWirelessSignalQualityHistoryItemOutput values.
// You can construct a concrete instance of `GetWirelessSignalQualityHistoryItemInput` via:
//
//	GetWirelessSignalQualityHistoryItemArgs{...}
type GetWirelessSignalQualityHistoryItemInput interface {
	pulumi.Input

	ToGetWirelessSignalQualityHistoryItemOutput() GetWirelessSignalQualityHistoryItemOutput
	ToGetWirelessSignalQualityHistoryItemOutputWithContext(context.Context) GetWirelessSignalQualityHistoryItemOutput
}

type GetWirelessSignalQualityHistoryItemArgs struct {
	// The end time of the query range
	EndTs pulumi.StringInput `pulumi:"endTs"`
	// Received signal strength indicator
	Rssi pulumi.IntInput `pulumi:"rssi"`
	// Signal to noise ratio
	Snr pulumi.IntInput `pulumi:"snr"`
	// The start time of the query range
	StartTs pulumi.StringInput `pulumi:"startTs"`
}

func (GetWirelessSignalQualityHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSignalQualityHistoryItem)(nil)).Elem()
}

func (i GetWirelessSignalQualityHistoryItemArgs) ToGetWirelessSignalQualityHistoryItemOutput() GetWirelessSignalQualityHistoryItemOutput {
	return i.ToGetWirelessSignalQualityHistoryItemOutputWithContext(context.Background())
}

func (i GetWirelessSignalQualityHistoryItemArgs) ToGetWirelessSignalQualityHistoryItemOutputWithContext(ctx context.Context) GetWirelessSignalQualityHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSignalQualityHistoryItemOutput)
}

// GetWirelessSignalQualityHistoryItemArrayInput is an input type that accepts GetWirelessSignalQualityHistoryItemArray and GetWirelessSignalQualityHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessSignalQualityHistoryItemArrayInput` via:
//
//	GetWirelessSignalQualityHistoryItemArray{ GetWirelessSignalQualityHistoryItemArgs{...} }
type GetWirelessSignalQualityHistoryItemArrayInput interface {
	pulumi.Input

	ToGetWirelessSignalQualityHistoryItemArrayOutput() GetWirelessSignalQualityHistoryItemArrayOutput
	ToGetWirelessSignalQualityHistoryItemArrayOutputWithContext(context.Context) GetWirelessSignalQualityHistoryItemArrayOutput
}

type GetWirelessSignalQualityHistoryItemArray []GetWirelessSignalQualityHistoryItemInput

func (GetWirelessSignalQualityHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSignalQualityHistoryItem)(nil)).Elem()
}

func (i GetWirelessSignalQualityHistoryItemArray) ToGetWirelessSignalQualityHistoryItemArrayOutput() GetWirelessSignalQualityHistoryItemArrayOutput {
	return i.ToGetWirelessSignalQualityHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessSignalQualityHistoryItemArray) ToGetWirelessSignalQualityHistoryItemArrayOutputWithContext(ctx context.Context) GetWirelessSignalQualityHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSignalQualityHistoryItemArrayOutput)
}

type GetWirelessSignalQualityHistoryItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSignalQualityHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSignalQualityHistoryItem)(nil)).Elem()
}

func (o GetWirelessSignalQualityHistoryItemOutput) ToGetWirelessSignalQualityHistoryItemOutput() GetWirelessSignalQualityHistoryItemOutput {
	return o
}

func (o GetWirelessSignalQualityHistoryItemOutput) ToGetWirelessSignalQualityHistoryItemOutputWithContext(ctx context.Context) GetWirelessSignalQualityHistoryItemOutput {
	return o
}

// The end time of the query range
func (o GetWirelessSignalQualityHistoryItemOutput) EndTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSignalQualityHistoryItem) string { return v.EndTs }).(pulumi.StringOutput)
}

// Received signal strength indicator
func (o GetWirelessSignalQualityHistoryItemOutput) Rssi() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSignalQualityHistoryItem) int { return v.Rssi }).(pulumi.IntOutput)
}

// Signal to noise ratio
func (o GetWirelessSignalQualityHistoryItemOutput) Snr() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSignalQualityHistoryItem) int { return v.Snr }).(pulumi.IntOutput)
}

// The start time of the query range
func (o GetWirelessSignalQualityHistoryItemOutput) StartTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSignalQualityHistoryItem) string { return v.StartTs }).(pulumi.StringOutput)
}

type GetWirelessSignalQualityHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSignalQualityHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSignalQualityHistoryItem)(nil)).Elem()
}

func (o GetWirelessSignalQualityHistoryItemArrayOutput) ToGetWirelessSignalQualityHistoryItemArrayOutput() GetWirelessSignalQualityHistoryItemArrayOutput {
	return o
}

func (o GetWirelessSignalQualityHistoryItemArrayOutput) ToGetWirelessSignalQualityHistoryItemArrayOutputWithContext(ctx context.Context) GetWirelessSignalQualityHistoryItemArrayOutput {
	return o
}

func (o GetWirelessSignalQualityHistoryItemArrayOutput) Index(i pulumi.IntInput) GetWirelessSignalQualityHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSignalQualityHistoryItem {
		return vs[0].([]GetWirelessSignalQualityHistoryItem)[vs[1].(int)]
	}).(GetWirelessSignalQualityHistoryItemOutput)
}

type GetWirelessSsidsBonjourForwardingItem struct {
	// If true, Bonjour forwarding is enabled on the SSID.
	Enabled bool `pulumi:"enabled"`
	// Bonjour forwarding exception
	Exception GetWirelessSsidsBonjourForwardingItemException `pulumi:"exception"`
	// Bonjour forwarding rules
	Rules []GetWirelessSsidsBonjourForwardingItemRule `pulumi:"rules"`
}

// GetWirelessSsidsBonjourForwardingItemInput is an input type that accepts GetWirelessSsidsBonjourForwardingItemArgs and GetWirelessSsidsBonjourForwardingItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsBonjourForwardingItemInput` via:
//
//	GetWirelessSsidsBonjourForwardingItemArgs{...}
type GetWirelessSsidsBonjourForwardingItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsBonjourForwardingItemOutput() GetWirelessSsidsBonjourForwardingItemOutput
	ToGetWirelessSsidsBonjourForwardingItemOutputWithContext(context.Context) GetWirelessSsidsBonjourForwardingItemOutput
}

type GetWirelessSsidsBonjourForwardingItemArgs struct {
	// If true, Bonjour forwarding is enabled on the SSID.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Bonjour forwarding exception
	Exception GetWirelessSsidsBonjourForwardingItemExceptionInput `pulumi:"exception"`
	// Bonjour forwarding rules
	Rules GetWirelessSsidsBonjourForwardingItemRuleArrayInput `pulumi:"rules"`
}

func (GetWirelessSsidsBonjourForwardingItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItem)(nil)).Elem()
}

func (i GetWirelessSsidsBonjourForwardingItemArgs) ToGetWirelessSsidsBonjourForwardingItemOutput() GetWirelessSsidsBonjourForwardingItemOutput {
	return i.ToGetWirelessSsidsBonjourForwardingItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsBonjourForwardingItemArgs) ToGetWirelessSsidsBonjourForwardingItemOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsBonjourForwardingItemOutput)
}

type GetWirelessSsidsBonjourForwardingItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsBonjourForwardingItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItem)(nil)).Elem()
}

func (o GetWirelessSsidsBonjourForwardingItemOutput) ToGetWirelessSsidsBonjourForwardingItemOutput() GetWirelessSsidsBonjourForwardingItemOutput {
	return o
}

func (o GetWirelessSsidsBonjourForwardingItemOutput) ToGetWirelessSsidsBonjourForwardingItemOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemOutput {
	return o
}

// If true, Bonjour forwarding is enabled on the SSID.
func (o GetWirelessSsidsBonjourForwardingItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Bonjour forwarding exception
func (o GetWirelessSsidsBonjourForwardingItemOutput) Exception() GetWirelessSsidsBonjourForwardingItemExceptionOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItem) GetWirelessSsidsBonjourForwardingItemException {
		return v.Exception
	}).(GetWirelessSsidsBonjourForwardingItemExceptionOutput)
}

// Bonjour forwarding rules
func (o GetWirelessSsidsBonjourForwardingItemOutput) Rules() GetWirelessSsidsBonjourForwardingItemRuleArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItem) []GetWirelessSsidsBonjourForwardingItemRule {
		return v.Rules
	}).(GetWirelessSsidsBonjourForwardingItemRuleArrayOutput)
}

type GetWirelessSsidsBonjourForwardingItemException struct {
	// If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together.
	Enabled bool `pulumi:"enabled"`
}

// GetWirelessSsidsBonjourForwardingItemExceptionInput is an input type that accepts GetWirelessSsidsBonjourForwardingItemExceptionArgs and GetWirelessSsidsBonjourForwardingItemExceptionOutput values.
// You can construct a concrete instance of `GetWirelessSsidsBonjourForwardingItemExceptionInput` via:
//
//	GetWirelessSsidsBonjourForwardingItemExceptionArgs{...}
type GetWirelessSsidsBonjourForwardingItemExceptionInput interface {
	pulumi.Input

	ToGetWirelessSsidsBonjourForwardingItemExceptionOutput() GetWirelessSsidsBonjourForwardingItemExceptionOutput
	ToGetWirelessSsidsBonjourForwardingItemExceptionOutputWithContext(context.Context) GetWirelessSsidsBonjourForwardingItemExceptionOutput
}

type GetWirelessSsidsBonjourForwardingItemExceptionArgs struct {
	// If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetWirelessSsidsBonjourForwardingItemExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemException)(nil)).Elem()
}

func (i GetWirelessSsidsBonjourForwardingItemExceptionArgs) ToGetWirelessSsidsBonjourForwardingItemExceptionOutput() GetWirelessSsidsBonjourForwardingItemExceptionOutput {
	return i.ToGetWirelessSsidsBonjourForwardingItemExceptionOutputWithContext(context.Background())
}

func (i GetWirelessSsidsBonjourForwardingItemExceptionArgs) ToGetWirelessSsidsBonjourForwardingItemExceptionOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsBonjourForwardingItemExceptionOutput)
}

type GetWirelessSsidsBonjourForwardingItemExceptionOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsBonjourForwardingItemExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemException)(nil)).Elem()
}

func (o GetWirelessSsidsBonjourForwardingItemExceptionOutput) ToGetWirelessSsidsBonjourForwardingItemExceptionOutput() GetWirelessSsidsBonjourForwardingItemExceptionOutput {
	return o
}

func (o GetWirelessSsidsBonjourForwardingItemExceptionOutput) ToGetWirelessSsidsBonjourForwardingItemExceptionOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemExceptionOutput {
	return o
}

// If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together.
func (o GetWirelessSsidsBonjourForwardingItemExceptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItemException) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessSsidsBonjourForwardingItemRule struct {
	// Desctiption of the bonjour forwarding rule
	Description string `pulumi:"description"`
	// A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
	Services []string `pulumi:"services"`
	// The ID of the service VLAN. Required
	VlanId string `pulumi:"vlanId"`
}

// GetWirelessSsidsBonjourForwardingItemRuleInput is an input type that accepts GetWirelessSsidsBonjourForwardingItemRuleArgs and GetWirelessSsidsBonjourForwardingItemRuleOutput values.
// You can construct a concrete instance of `GetWirelessSsidsBonjourForwardingItemRuleInput` via:
//
//	GetWirelessSsidsBonjourForwardingItemRuleArgs{...}
type GetWirelessSsidsBonjourForwardingItemRuleInput interface {
	pulumi.Input

	ToGetWirelessSsidsBonjourForwardingItemRuleOutput() GetWirelessSsidsBonjourForwardingItemRuleOutput
	ToGetWirelessSsidsBonjourForwardingItemRuleOutputWithContext(context.Context) GetWirelessSsidsBonjourForwardingItemRuleOutput
}

type GetWirelessSsidsBonjourForwardingItemRuleArgs struct {
	// Desctiption of the bonjour forwarding rule
	Description pulumi.StringInput `pulumi:"description"`
	// A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
	Services pulumi.StringArrayInput `pulumi:"services"`
	// The ID of the service VLAN. Required
	VlanId pulumi.StringInput `pulumi:"vlanId"`
}

func (GetWirelessSsidsBonjourForwardingItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsBonjourForwardingItemRuleArgs) ToGetWirelessSsidsBonjourForwardingItemRuleOutput() GetWirelessSsidsBonjourForwardingItemRuleOutput {
	return i.ToGetWirelessSsidsBonjourForwardingItemRuleOutputWithContext(context.Background())
}

func (i GetWirelessSsidsBonjourForwardingItemRuleArgs) ToGetWirelessSsidsBonjourForwardingItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsBonjourForwardingItemRuleOutput)
}

// GetWirelessSsidsBonjourForwardingItemRuleArrayInput is an input type that accepts GetWirelessSsidsBonjourForwardingItemRuleArray and GetWirelessSsidsBonjourForwardingItemRuleArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsBonjourForwardingItemRuleArrayInput` via:
//
//	GetWirelessSsidsBonjourForwardingItemRuleArray{ GetWirelessSsidsBonjourForwardingItemRuleArgs{...} }
type GetWirelessSsidsBonjourForwardingItemRuleArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutput() GetWirelessSsidsBonjourForwardingItemRuleArrayOutput
	ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutputWithContext(context.Context) GetWirelessSsidsBonjourForwardingItemRuleArrayOutput
}

type GetWirelessSsidsBonjourForwardingItemRuleArray []GetWirelessSsidsBonjourForwardingItemRuleInput

func (GetWirelessSsidsBonjourForwardingItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsBonjourForwardingItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsBonjourForwardingItemRuleArray) ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutput() GetWirelessSsidsBonjourForwardingItemRuleArrayOutput {
	return i.ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsBonjourForwardingItemRuleArray) ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsBonjourForwardingItemRuleArrayOutput)
}

type GetWirelessSsidsBonjourForwardingItemRuleOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsBonjourForwardingItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsBonjourForwardingItemRuleOutput) ToGetWirelessSsidsBonjourForwardingItemRuleOutput() GetWirelessSsidsBonjourForwardingItemRuleOutput {
	return o
}

func (o GetWirelessSsidsBonjourForwardingItemRuleOutput) ToGetWirelessSsidsBonjourForwardingItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemRuleOutput {
	return o
}

// Desctiption of the bonjour forwarding rule
func (o GetWirelessSsidsBonjourForwardingItemRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItemRule) string { return v.Description }).(pulumi.StringOutput)
}

// A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
func (o GetWirelessSsidsBonjourForwardingItemRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItemRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The ID of the service VLAN. Required
func (o GetWirelessSsidsBonjourForwardingItemRuleOutput) VlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsBonjourForwardingItemRule) string { return v.VlanId }).(pulumi.StringOutput)
}

type GetWirelessSsidsBonjourForwardingItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsBonjourForwardingItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsBonjourForwardingItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsBonjourForwardingItemRuleArrayOutput) ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutput() GetWirelessSsidsBonjourForwardingItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsBonjourForwardingItemRuleArrayOutput) ToGetWirelessSsidsBonjourForwardingItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsBonjourForwardingItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsBonjourForwardingItemRuleArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsBonjourForwardingItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsBonjourForwardingItemRule {
		return vs[0].([]GetWirelessSsidsBonjourForwardingItemRule)[vs[1].(int)]
	}).(GetWirelessSsidsBonjourForwardingItemRuleOutput)
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItem struct {
	DeviceTypePolicies []GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy `pulumi:"deviceTypePolicies"`
	Enabled            bool                                                          `pulumi:"enabled"`
}

// GetWirelessSsidsDeviceTypeGroupPoliciesItemInput is an input type that accepts GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs and GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsDeviceTypeGroupPoliciesItemInput` via:
//
//	GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs{...}
type GetWirelessSsidsDeviceTypeGroupPoliciesItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput
	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutputWithContext(context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs struct {
	DeviceTypePolicies GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayInput `pulumi:"deviceTypePolicies"`
	Enabled            pulumi.BoolInput                                                      `pulumi:"enabled"`
}

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItem)(nil)).Elem()
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput {
	return i.ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput)
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItem)(nil)).Elem()
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput) DeviceTypePolicies() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsDeviceTypeGroupPoliciesItem) []GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy {
		return v.DeviceTypePolicies
	}).(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput)
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsDeviceTypeGroupPoliciesItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy struct {
	DevicePolicy string `pulumi:"devicePolicy"`
	DeviceType   string `pulumi:"deviceType"`
}

// GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyInput is an input type that accepts GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs and GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput values.
// You can construct a concrete instance of `GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyInput` via:
//
//	GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs{...}
type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyInput interface {
	pulumi.Input

	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput
	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutputWithContext(context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs struct {
	DevicePolicy pulumi.StringInput `pulumi:"devicePolicy"`
	DeviceType   pulumi.StringInput `pulumi:"deviceType"`
}

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy)(nil)).Elem()
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput {
	return i.ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutputWithContext(context.Background())
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput)
}

// GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayInput is an input type that accepts GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray and GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayInput` via:
//
//	GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray{ GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs{...} }
type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput
	ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutputWithContext(context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray []GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyInput

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy)(nil)).Elem()
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput {
	return i.ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput)
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy)(nil)).Elem()
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput) DevicePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy) string { return v.DevicePolicy }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy) string { return v.DeviceType }).(pulumi.StringOutput)
}

type GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy)(nil)).Elem()
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput() GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput) ToGetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutputWithContext(ctx context.Context) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput {
	return o
}

func (o GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy {
		return vs[0].([]GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicy)[vs[1].(int)]
	}).(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput)
}

type GetWirelessSsidsEapOverrideItem struct {
	// EAPOL Key settings.
	EapolKey GetWirelessSsidsEapOverrideItemEapolKey `pulumi:"eapolKey"`
	// EAP settings for identity requests.
	Identity GetWirelessSsidsEapOverrideItemIdentity `pulumi:"identity"`
	// Maximum number of general EAP retries.
	MaxRetries int `pulumi:"maxRetries"`
	// General EAP timeout in seconds.
	Timeout int `pulumi:"timeout"`
}

// GetWirelessSsidsEapOverrideItemInput is an input type that accepts GetWirelessSsidsEapOverrideItemArgs and GetWirelessSsidsEapOverrideItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsEapOverrideItemInput` via:
//
//	GetWirelessSsidsEapOverrideItemArgs{...}
type GetWirelessSsidsEapOverrideItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsEapOverrideItemOutput() GetWirelessSsidsEapOverrideItemOutput
	ToGetWirelessSsidsEapOverrideItemOutputWithContext(context.Context) GetWirelessSsidsEapOverrideItemOutput
}

type GetWirelessSsidsEapOverrideItemArgs struct {
	// EAPOL Key settings.
	EapolKey GetWirelessSsidsEapOverrideItemEapolKeyInput `pulumi:"eapolKey"`
	// EAP settings for identity requests.
	Identity GetWirelessSsidsEapOverrideItemIdentityInput `pulumi:"identity"`
	// Maximum number of general EAP retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// General EAP timeout in seconds.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (GetWirelessSsidsEapOverrideItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItem)(nil)).Elem()
}

func (i GetWirelessSsidsEapOverrideItemArgs) ToGetWirelessSsidsEapOverrideItemOutput() GetWirelessSsidsEapOverrideItemOutput {
	return i.ToGetWirelessSsidsEapOverrideItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsEapOverrideItemArgs) ToGetWirelessSsidsEapOverrideItemOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsEapOverrideItemOutput)
}

type GetWirelessSsidsEapOverrideItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsEapOverrideItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItem)(nil)).Elem()
}

func (o GetWirelessSsidsEapOverrideItemOutput) ToGetWirelessSsidsEapOverrideItemOutput() GetWirelessSsidsEapOverrideItemOutput {
	return o
}

func (o GetWirelessSsidsEapOverrideItemOutput) ToGetWirelessSsidsEapOverrideItemOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemOutput {
	return o
}

// EAPOL Key settings.
func (o GetWirelessSsidsEapOverrideItemOutput) EapolKey() GetWirelessSsidsEapOverrideItemEapolKeyOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItem) GetWirelessSsidsEapOverrideItemEapolKey { return v.EapolKey }).(GetWirelessSsidsEapOverrideItemEapolKeyOutput)
}

// EAP settings for identity requests.
func (o GetWirelessSsidsEapOverrideItemOutput) Identity() GetWirelessSsidsEapOverrideItemIdentityOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItem) GetWirelessSsidsEapOverrideItemIdentity { return v.Identity }).(GetWirelessSsidsEapOverrideItemIdentityOutput)
}

// Maximum number of general EAP retries.
func (o GetWirelessSsidsEapOverrideItemOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItem) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// General EAP timeout in seconds.
func (o GetWirelessSsidsEapOverrideItemOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItem) int { return v.Timeout }).(pulumi.IntOutput)
}

type GetWirelessSsidsEapOverrideItemEapolKey struct {
	// Maximum number of EAPOL key retries.
	Retries int `pulumi:"retries"`
	// EAPOL Key timeout in milliseconds.
	TimeoutInMs int `pulumi:"timeoutInMs"`
}

// GetWirelessSsidsEapOverrideItemEapolKeyInput is an input type that accepts GetWirelessSsidsEapOverrideItemEapolKeyArgs and GetWirelessSsidsEapOverrideItemEapolKeyOutput values.
// You can construct a concrete instance of `GetWirelessSsidsEapOverrideItemEapolKeyInput` via:
//
//	GetWirelessSsidsEapOverrideItemEapolKeyArgs{...}
type GetWirelessSsidsEapOverrideItemEapolKeyInput interface {
	pulumi.Input

	ToGetWirelessSsidsEapOverrideItemEapolKeyOutput() GetWirelessSsidsEapOverrideItemEapolKeyOutput
	ToGetWirelessSsidsEapOverrideItemEapolKeyOutputWithContext(context.Context) GetWirelessSsidsEapOverrideItemEapolKeyOutput
}

type GetWirelessSsidsEapOverrideItemEapolKeyArgs struct {
	// Maximum number of EAPOL key retries.
	Retries pulumi.IntInput `pulumi:"retries"`
	// EAPOL Key timeout in milliseconds.
	TimeoutInMs pulumi.IntInput `pulumi:"timeoutInMs"`
}

func (GetWirelessSsidsEapOverrideItemEapolKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItemEapolKey)(nil)).Elem()
}

func (i GetWirelessSsidsEapOverrideItemEapolKeyArgs) ToGetWirelessSsidsEapOverrideItemEapolKeyOutput() GetWirelessSsidsEapOverrideItemEapolKeyOutput {
	return i.ToGetWirelessSsidsEapOverrideItemEapolKeyOutputWithContext(context.Background())
}

func (i GetWirelessSsidsEapOverrideItemEapolKeyArgs) ToGetWirelessSsidsEapOverrideItemEapolKeyOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemEapolKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsEapOverrideItemEapolKeyOutput)
}

type GetWirelessSsidsEapOverrideItemEapolKeyOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsEapOverrideItemEapolKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItemEapolKey)(nil)).Elem()
}

func (o GetWirelessSsidsEapOverrideItemEapolKeyOutput) ToGetWirelessSsidsEapOverrideItemEapolKeyOutput() GetWirelessSsidsEapOverrideItemEapolKeyOutput {
	return o
}

func (o GetWirelessSsidsEapOverrideItemEapolKeyOutput) ToGetWirelessSsidsEapOverrideItemEapolKeyOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemEapolKeyOutput {
	return o
}

// Maximum number of EAPOL key retries.
func (o GetWirelessSsidsEapOverrideItemEapolKeyOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItemEapolKey) int { return v.Retries }).(pulumi.IntOutput)
}

// EAPOL Key timeout in milliseconds.
func (o GetWirelessSsidsEapOverrideItemEapolKeyOutput) TimeoutInMs() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItemEapolKey) int { return v.TimeoutInMs }).(pulumi.IntOutput)
}

type GetWirelessSsidsEapOverrideItemIdentity struct {
	// Maximum number of EAP retries.
	Retries int `pulumi:"retries"`
	// EAP timeout in seconds.
	Timeout int `pulumi:"timeout"`
}

// GetWirelessSsidsEapOverrideItemIdentityInput is an input type that accepts GetWirelessSsidsEapOverrideItemIdentityArgs and GetWirelessSsidsEapOverrideItemIdentityOutput values.
// You can construct a concrete instance of `GetWirelessSsidsEapOverrideItemIdentityInput` via:
//
//	GetWirelessSsidsEapOverrideItemIdentityArgs{...}
type GetWirelessSsidsEapOverrideItemIdentityInput interface {
	pulumi.Input

	ToGetWirelessSsidsEapOverrideItemIdentityOutput() GetWirelessSsidsEapOverrideItemIdentityOutput
	ToGetWirelessSsidsEapOverrideItemIdentityOutputWithContext(context.Context) GetWirelessSsidsEapOverrideItemIdentityOutput
}

type GetWirelessSsidsEapOverrideItemIdentityArgs struct {
	// Maximum number of EAP retries.
	Retries pulumi.IntInput `pulumi:"retries"`
	// EAP timeout in seconds.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (GetWirelessSsidsEapOverrideItemIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItemIdentity)(nil)).Elem()
}

func (i GetWirelessSsidsEapOverrideItemIdentityArgs) ToGetWirelessSsidsEapOverrideItemIdentityOutput() GetWirelessSsidsEapOverrideItemIdentityOutput {
	return i.ToGetWirelessSsidsEapOverrideItemIdentityOutputWithContext(context.Background())
}

func (i GetWirelessSsidsEapOverrideItemIdentityArgs) ToGetWirelessSsidsEapOverrideItemIdentityOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsEapOverrideItemIdentityOutput)
}

type GetWirelessSsidsEapOverrideItemIdentityOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsEapOverrideItemIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsEapOverrideItemIdentity)(nil)).Elem()
}

func (o GetWirelessSsidsEapOverrideItemIdentityOutput) ToGetWirelessSsidsEapOverrideItemIdentityOutput() GetWirelessSsidsEapOverrideItemIdentityOutput {
	return o
}

func (o GetWirelessSsidsEapOverrideItemIdentityOutput) ToGetWirelessSsidsEapOverrideItemIdentityOutputWithContext(ctx context.Context) GetWirelessSsidsEapOverrideItemIdentityOutput {
	return o
}

// Maximum number of EAP retries.
func (o GetWirelessSsidsEapOverrideItemIdentityOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItemIdentity) int { return v.Retries }).(pulumi.IntOutput)
}

// EAP timeout in seconds.
func (o GetWirelessSsidsEapOverrideItemIdentityOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsEapOverrideItemIdentity) int { return v.Timeout }).(pulumi.IntOutput)
}

type GetWirelessSsidsFirewallL3FirewallRulesItem struct {
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []GetWirelessSsidsFirewallL3FirewallRulesItemRule `pulumi:"rules"`
}

// GetWirelessSsidsFirewallL3FirewallRulesItemInput is an input type that accepts GetWirelessSsidsFirewallL3FirewallRulesItemArgs and GetWirelessSsidsFirewallL3FirewallRulesItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL3FirewallRulesItemInput` via:
//
//	GetWirelessSsidsFirewallL3FirewallRulesItemArgs{...}
type GetWirelessSsidsFirewallL3FirewallRulesItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL3FirewallRulesItemOutput() GetWirelessSsidsFirewallL3FirewallRulesItemOutput
	ToGetWirelessSsidsFirewallL3FirewallRulesItemOutputWithContext(context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemOutput
}

type GetWirelessSsidsFirewallL3FirewallRulesItemArgs struct {
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayInput `pulumi:"rules"`
}

func (GetWirelessSsidsFirewallL3FirewallRulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItem)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemArgs) ToGetWirelessSsidsFirewallL3FirewallRulesItemOutput() GetWirelessSsidsFirewallL3FirewallRulesItemOutput {
	return i.ToGetWirelessSsidsFirewallL3FirewallRulesItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemArgs) ToGetWirelessSsidsFirewallL3FirewallRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL3FirewallRulesItemOutput)
}

type GetWirelessSsidsFirewallL3FirewallRulesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL3FirewallRulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItem)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemOutput() GetWirelessSsidsFirewallL3FirewallRulesItemOutput {
	return o
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemOutput {
	return o
}

// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
func (o GetWirelessSsidsFirewallL3FirewallRulesItemOutput) Rules() GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItem) []GetWirelessSsidsFirewallL3FirewallRulesItemRule {
		return v.Rules
	}).(GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput)
}

type GetWirelessSsidsFirewallL3FirewallRulesItemRule struct {
	// Description of the rule (optional)
	Comment string `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr string `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort string `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy string `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol string `pulumi:"protocol"`
}

// GetWirelessSsidsFirewallL3FirewallRulesItemRuleInput is an input type that accepts GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs and GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL3FirewallRulesItemRuleInput` via:
//
//	GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs{...}
type GetWirelessSsidsFirewallL3FirewallRulesItemRuleInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput
	ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutputWithContext(context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput
}

type GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs struct {
	// Description of the rule (optional)
	Comment pulumi.StringInput `pulumi:"comment"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr pulumi.StringInput `pulumi:"destCidr"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy pulumi.StringInput `pulumi:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput {
	return i.ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput)
}

// GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayInput is an input type that accepts GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray and GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayInput` via:
//
//	GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray{ GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs{...} }
type GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput
	ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutputWithContext(context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput
}

type GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray []GetWirelessSsidsFirewallL3FirewallRulesItemRuleInput

func (GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsFirewallL3FirewallRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput {
	return i.ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput)
}

type GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput {
	return o
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput {
	return o
}

// Description of the rule (optional)
func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItemRule) string { return v.Comment }).(pulumi.StringOutput)
}

// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) DestCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItemRule) string { return v.DestCidr }).(pulumi.StringOutput)
}

// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItemRule) string { return v.DestPort }).(pulumi.StringOutput)
}

// 'allow' or 'deny' traffic specified by this rule
func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItemRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL3FirewallRulesItemRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsFirewallL3FirewallRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput) ToGetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsFirewallL3FirewallRulesItemRule {
		return vs[0].([]GetWirelessSsidsFirewallL3FirewallRulesItemRule)[vs[1].(int)]
	}).(GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput)
}

type GetWirelessSsidsFirewallL7FirewallRulesItem struct {
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []GetWirelessSsidsFirewallL7FirewallRulesItemRule `pulumi:"rules"`
}

// GetWirelessSsidsFirewallL7FirewallRulesItemInput is an input type that accepts GetWirelessSsidsFirewallL7FirewallRulesItemArgs and GetWirelessSsidsFirewallL7FirewallRulesItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL7FirewallRulesItemInput` via:
//
//	GetWirelessSsidsFirewallL7FirewallRulesItemArgs{...}
type GetWirelessSsidsFirewallL7FirewallRulesItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL7FirewallRulesItemOutput() GetWirelessSsidsFirewallL7FirewallRulesItemOutput
	ToGetWirelessSsidsFirewallL7FirewallRulesItemOutputWithContext(context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemOutput
}

type GetWirelessSsidsFirewallL7FirewallRulesItemArgs struct {
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayInput `pulumi:"rules"`
}

func (GetWirelessSsidsFirewallL7FirewallRulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItem)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemArgs) ToGetWirelessSsidsFirewallL7FirewallRulesItemOutput() GetWirelessSsidsFirewallL7FirewallRulesItemOutput {
	return i.ToGetWirelessSsidsFirewallL7FirewallRulesItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemArgs) ToGetWirelessSsidsFirewallL7FirewallRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL7FirewallRulesItemOutput)
}

type GetWirelessSsidsFirewallL7FirewallRulesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL7FirewallRulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItem)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemOutput() GetWirelessSsidsFirewallL7FirewallRulesItemOutput {
	return o
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemOutput {
	return o
}

// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
func (o GetWirelessSsidsFirewallL7FirewallRulesItemOutput) Rules() GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL7FirewallRulesItem) []GetWirelessSsidsFirewallL7FirewallRulesItemRule {
		return v.Rules
	}).(GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput)
}

type GetWirelessSsidsFirewallL7FirewallRulesItemRule struct {
	// 'Deny' traffic specified by this rule
	Policy string `pulumi:"policy"`
	// Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
	Type string `pulumi:"type"`
	// The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
	Value string `pulumi:"value"`
}

// GetWirelessSsidsFirewallL7FirewallRulesItemRuleInput is an input type that accepts GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs and GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL7FirewallRulesItemRuleInput` via:
//
//	GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs{...}
type GetWirelessSsidsFirewallL7FirewallRulesItemRuleInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput
	ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutputWithContext(context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput
}

type GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs struct {
	// 'Deny' traffic specified by this rule
	Policy pulumi.StringInput `pulumi:"policy"`
	// Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
	Type pulumi.StringInput `pulumi:"type"`
	// The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput {
	return i.ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput)
}

// GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayInput is an input type that accepts GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray and GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayInput` via:
//
//	GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray{ GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs{...} }
type GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput
	ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutputWithContext(context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput
}

type GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray []GetWirelessSsidsFirewallL7FirewallRulesItemRuleInput

func (GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsFirewallL7FirewallRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput {
	return i.ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput)
}

type GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput {
	return o
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput {
	return o
}

// 'Deny' traffic specified by this rule
func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL7FirewallRulesItemRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL7FirewallRulesItemRule) string { return v.Type }).(pulumi.StringOutput)
}

// The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsFirewallL7FirewallRulesItemRule) string { return v.Value }).(pulumi.StringOutput)
}

type GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsFirewallL7FirewallRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput() GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput) ToGetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsFirewallL7FirewallRulesItemRule {
		return vs[0].([]GetWirelessSsidsFirewallL7FirewallRulesItemRule)[vs[1].(int)]
	}).(GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput)
}

type GetWirelessSsidsHotspot20Item struct {
	Domains           []string                                `pulumi:"domains"`
	Enabled           bool                                    `pulumi:"enabled"`
	MccMncs           []GetWirelessSsidsHotspot20ItemMccMnc   `pulumi:"mccMncs"`
	NaiRealms         []GetWirelessSsidsHotspot20ItemNaiRealm `pulumi:"naiRealms"`
	NetworkAccessType string                                  `pulumi:"networkAccessType"`
	Operator          GetWirelessSsidsHotspot20ItemOperator   `pulumi:"operator"`
	RoamConsortOis    []string                                `pulumi:"roamConsortOis"`
	Venue             GetWirelessSsidsHotspot20ItemVenue      `pulumi:"venue"`
}

// GetWirelessSsidsHotspot20ItemInput is an input type that accepts GetWirelessSsidsHotspot20ItemArgs and GetWirelessSsidsHotspot20ItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemInput` via:
//
//	GetWirelessSsidsHotspot20ItemArgs{...}
type GetWirelessSsidsHotspot20ItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemOutput() GetWirelessSsidsHotspot20ItemOutput
	ToGetWirelessSsidsHotspot20ItemOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemOutput
}

type GetWirelessSsidsHotspot20ItemArgs struct {
	Domains           pulumi.StringArrayInput                         `pulumi:"domains"`
	Enabled           pulumi.BoolInput                                `pulumi:"enabled"`
	MccMncs           GetWirelessSsidsHotspot20ItemMccMncArrayInput   `pulumi:"mccMncs"`
	NaiRealms         GetWirelessSsidsHotspot20ItemNaiRealmArrayInput `pulumi:"naiRealms"`
	NetworkAccessType pulumi.StringInput                              `pulumi:"networkAccessType"`
	Operator          GetWirelessSsidsHotspot20ItemOperatorInput      `pulumi:"operator"`
	RoamConsortOis    pulumi.StringArrayInput                         `pulumi:"roamConsortOis"`
	Venue             GetWirelessSsidsHotspot20ItemVenueInput         `pulumi:"venue"`
}

func (GetWirelessSsidsHotspot20ItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20Item)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemArgs) ToGetWirelessSsidsHotspot20ItemOutput() GetWirelessSsidsHotspot20ItemOutput {
	return i.ToGetWirelessSsidsHotspot20ItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemArgs) ToGetWirelessSsidsHotspot20ItemOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemOutput)
}

type GetWirelessSsidsHotspot20ItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20Item)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemOutput) ToGetWirelessSsidsHotspot20ItemOutput() GetWirelessSsidsHotspot20ItemOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemOutput) ToGetWirelessSsidsHotspot20ItemOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) MccMncs() GetWirelessSsidsHotspot20ItemMccMncArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) []GetWirelessSsidsHotspot20ItemMccMnc { return v.MccMncs }).(GetWirelessSsidsHotspot20ItemMccMncArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) NaiRealms() GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) []GetWirelessSsidsHotspot20ItemNaiRealm { return v.NaiRealms }).(GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) NetworkAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) string { return v.NetworkAccessType }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) Operator() GetWirelessSsidsHotspot20ItemOperatorOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) GetWirelessSsidsHotspot20ItemOperator { return v.Operator }).(GetWirelessSsidsHotspot20ItemOperatorOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) RoamConsortOis() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) []string { return v.RoamConsortOis }).(pulumi.StringArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemOutput) Venue() GetWirelessSsidsHotspot20ItemVenueOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20Item) GetWirelessSsidsHotspot20ItemVenue { return v.Venue }).(GetWirelessSsidsHotspot20ItemVenueOutput)
}

type GetWirelessSsidsHotspot20ItemMccMnc struct {
	Mcc string `pulumi:"mcc"`
	Mnc string `pulumi:"mnc"`
}

// GetWirelessSsidsHotspot20ItemMccMncInput is an input type that accepts GetWirelessSsidsHotspot20ItemMccMncArgs and GetWirelessSsidsHotspot20ItemMccMncOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemMccMncInput` via:
//
//	GetWirelessSsidsHotspot20ItemMccMncArgs{...}
type GetWirelessSsidsHotspot20ItemMccMncInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemMccMncOutput() GetWirelessSsidsHotspot20ItemMccMncOutput
	ToGetWirelessSsidsHotspot20ItemMccMncOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemMccMncOutput
}

type GetWirelessSsidsHotspot20ItemMccMncArgs struct {
	Mcc pulumi.StringInput `pulumi:"mcc"`
	Mnc pulumi.StringInput `pulumi:"mnc"`
}

func (GetWirelessSsidsHotspot20ItemMccMncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemMccMnc)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemMccMncArgs) ToGetWirelessSsidsHotspot20ItemMccMncOutput() GetWirelessSsidsHotspot20ItemMccMncOutput {
	return i.ToGetWirelessSsidsHotspot20ItemMccMncOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemMccMncArgs) ToGetWirelessSsidsHotspot20ItemMccMncOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemMccMncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemMccMncOutput)
}

// GetWirelessSsidsHotspot20ItemMccMncArrayInput is an input type that accepts GetWirelessSsidsHotspot20ItemMccMncArray and GetWirelessSsidsHotspot20ItemMccMncArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemMccMncArrayInput` via:
//
//	GetWirelessSsidsHotspot20ItemMccMncArray{ GetWirelessSsidsHotspot20ItemMccMncArgs{...} }
type GetWirelessSsidsHotspot20ItemMccMncArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemMccMncArrayOutput() GetWirelessSsidsHotspot20ItemMccMncArrayOutput
	ToGetWirelessSsidsHotspot20ItemMccMncArrayOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemMccMncArrayOutput
}

type GetWirelessSsidsHotspot20ItemMccMncArray []GetWirelessSsidsHotspot20ItemMccMncInput

func (GetWirelessSsidsHotspot20ItemMccMncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemMccMnc)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemMccMncArray) ToGetWirelessSsidsHotspot20ItemMccMncArrayOutput() GetWirelessSsidsHotspot20ItemMccMncArrayOutput {
	return i.ToGetWirelessSsidsHotspot20ItemMccMncArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemMccMncArray) ToGetWirelessSsidsHotspot20ItemMccMncArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemMccMncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemMccMncArrayOutput)
}

type GetWirelessSsidsHotspot20ItemMccMncOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemMccMncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemMccMnc)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemMccMncOutput) ToGetWirelessSsidsHotspot20ItemMccMncOutput() GetWirelessSsidsHotspot20ItemMccMncOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemMccMncOutput) ToGetWirelessSsidsHotspot20ItemMccMncOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemMccMncOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemMccMncOutput) Mcc() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemMccMnc) string { return v.Mcc }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsHotspot20ItemMccMncOutput) Mnc() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemMccMnc) string { return v.Mnc }).(pulumi.StringOutput)
}

type GetWirelessSsidsHotspot20ItemMccMncArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemMccMncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemMccMnc)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemMccMncArrayOutput) ToGetWirelessSsidsHotspot20ItemMccMncArrayOutput() GetWirelessSsidsHotspot20ItemMccMncArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemMccMncArrayOutput) ToGetWirelessSsidsHotspot20ItemMccMncArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemMccMncArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemMccMncArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsHotspot20ItemMccMncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsHotspot20ItemMccMnc {
		return vs[0].([]GetWirelessSsidsHotspot20ItemMccMnc)[vs[1].(int)]
	}).(GetWirelessSsidsHotspot20ItemMccMncOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealm struct {
	Format  string                                        `pulumi:"format"`
	Methods []GetWirelessSsidsHotspot20ItemNaiRealmMethod `pulumi:"methods"`
	Name    string                                        `pulumi:"name"`
}

// GetWirelessSsidsHotspot20ItemNaiRealmInput is an input type that accepts GetWirelessSsidsHotspot20ItemNaiRealmArgs and GetWirelessSsidsHotspot20ItemNaiRealmOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemNaiRealmInput` via:
//
//	GetWirelessSsidsHotspot20ItemNaiRealmArgs{...}
type GetWirelessSsidsHotspot20ItemNaiRealmInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemNaiRealmOutput() GetWirelessSsidsHotspot20ItemNaiRealmOutput
	ToGetWirelessSsidsHotspot20ItemNaiRealmOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemNaiRealmOutput
}

type GetWirelessSsidsHotspot20ItemNaiRealmArgs struct {
	Format  pulumi.StringInput                                    `pulumi:"format"`
	Methods GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayInput `pulumi:"methods"`
	Name    pulumi.StringInput                                    `pulumi:"name"`
}

func (GetWirelessSsidsHotspot20ItemNaiRealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealm)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmOutput() GetWirelessSsidsHotspot20ItemNaiRealmOutput {
	return i.ToGetWirelessSsidsHotspot20ItemNaiRealmOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemNaiRealmOutput)
}

// GetWirelessSsidsHotspot20ItemNaiRealmArrayInput is an input type that accepts GetWirelessSsidsHotspot20ItemNaiRealmArray and GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemNaiRealmArrayInput` via:
//
//	GetWirelessSsidsHotspot20ItemNaiRealmArray{ GetWirelessSsidsHotspot20ItemNaiRealmArgs{...} }
type GetWirelessSsidsHotspot20ItemNaiRealmArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput
	ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput
}

type GetWirelessSsidsHotspot20ItemNaiRealmArray []GetWirelessSsidsHotspot20ItemNaiRealmInput

func (GetWirelessSsidsHotspot20ItemNaiRealmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemNaiRealm)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmArray) ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput {
	return i.ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmArray) ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemNaiRealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealm)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmOutput() GetWirelessSsidsHotspot20ItemNaiRealmOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealm) string { return v.Format }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmOutput) Methods() GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealm) []GetWirelessSsidsHotspot20ItemNaiRealmMethod {
		return v.Methods
	}).(GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealm) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemNaiRealm)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsHotspot20ItemNaiRealmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsHotspot20ItemNaiRealm {
		return vs[0].([]GetWirelessSsidsHotspot20ItemNaiRealm)[vs[1].(int)]
	}).(GetWirelessSsidsHotspot20ItemNaiRealmOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethod struct {
	AuthenticationTypes GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes `pulumi:"authenticationTypes"`
	Id                  string                                                         `pulumi:"id"`
}

// GetWirelessSsidsHotspot20ItemNaiRealmMethodInput is an input type that accepts GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs and GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemNaiRealmMethodInput` via:
//
//	GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs{...}
type GetWirelessSsidsHotspot20ItemNaiRealmMethodInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput
	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs struct {
	AuthenticationTypes GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesInput `pulumi:"authenticationTypes"`
	Id                  pulumi.StringInput                                                  `pulumi:"id"`
}

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethod)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput {
	return i.ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput)
}

// GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayInput is an input type that accepts GetWirelessSsidsHotspot20ItemNaiRealmMethodArray and GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayInput` via:
//
//	GetWirelessSsidsHotspot20ItemNaiRealmMethodArray{ GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs{...} }
type GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput
	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodArray []GetWirelessSsidsHotspot20ItemNaiRealmMethodInput

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemNaiRealmMethod)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodArray) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput {
	return i.ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodArray) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethod)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput) AuthenticationTypes() GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethod) GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes {
		return v.AuthenticationTypes
	}).(GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethod) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsHotspot20ItemNaiRealmMethod)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsHotspot20ItemNaiRealmMethod {
		return vs[0].([]GetWirelessSsidsHotspot20ItemNaiRealmMethod)[vs[1].(int)]
	}).(GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes struct {
	Credentials                  []string `pulumi:"credentials"`
	EapinnerAuthentications      []string `pulumi:"eapinnerAuthentications"`
	NonEapinnerAuthentications   []string `pulumi:"nonEapinnerAuthentications"`
	TunneledEapMethodCredentials []string `pulumi:"tunneledEapMethodCredentials"`
}

// GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesInput is an input type that accepts GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs and GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesInput` via:
//
//	GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs{...}
type GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput
	ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs struct {
	Credentials                  pulumi.StringArrayInput `pulumi:"credentials"`
	EapinnerAuthentications      pulumi.StringArrayInput `pulumi:"eapinnerAuthentications"`
	NonEapinnerAuthentications   pulumi.StringArrayInput `pulumi:"nonEapinnerAuthentications"`
	TunneledEapMethodCredentials pulumi.StringArrayInput `pulumi:"tunneledEapMethodCredentials"`
}

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput {
	return i.ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput)
}

type GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput() GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) ToGetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) Credentials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes) []string { return v.Credentials }).(pulumi.StringArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) EapinnerAuthentications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes) []string {
		return v.EapinnerAuthentications
	}).(pulumi.StringArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) NonEapinnerAuthentications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes) []string {
		return v.NonEapinnerAuthentications
	}).(pulumi.StringArrayOutput)
}

func (o GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput) TunneledEapMethodCredentials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypes) []string {
		return v.TunneledEapMethodCredentials
	}).(pulumi.StringArrayOutput)
}

type GetWirelessSsidsHotspot20ItemOperator struct {
	Name string `pulumi:"name"`
}

// GetWirelessSsidsHotspot20ItemOperatorInput is an input type that accepts GetWirelessSsidsHotspot20ItemOperatorArgs and GetWirelessSsidsHotspot20ItemOperatorOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemOperatorInput` via:
//
//	GetWirelessSsidsHotspot20ItemOperatorArgs{...}
type GetWirelessSsidsHotspot20ItemOperatorInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemOperatorOutput() GetWirelessSsidsHotspot20ItemOperatorOutput
	ToGetWirelessSsidsHotspot20ItemOperatorOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemOperatorOutput
}

type GetWirelessSsidsHotspot20ItemOperatorArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWirelessSsidsHotspot20ItemOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemOperator)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemOperatorArgs) ToGetWirelessSsidsHotspot20ItemOperatorOutput() GetWirelessSsidsHotspot20ItemOperatorOutput {
	return i.ToGetWirelessSsidsHotspot20ItemOperatorOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemOperatorArgs) ToGetWirelessSsidsHotspot20ItemOperatorOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemOperatorOutput)
}

type GetWirelessSsidsHotspot20ItemOperatorOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemOperator)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemOperatorOutput) ToGetWirelessSsidsHotspot20ItemOperatorOutput() GetWirelessSsidsHotspot20ItemOperatorOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemOperatorOutput) ToGetWirelessSsidsHotspot20ItemOperatorOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemOperatorOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemOperatorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemOperator) string { return v.Name }).(pulumi.StringOutput)
}

type GetWirelessSsidsHotspot20ItemVenue struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// GetWirelessSsidsHotspot20ItemVenueInput is an input type that accepts GetWirelessSsidsHotspot20ItemVenueArgs and GetWirelessSsidsHotspot20ItemVenueOutput values.
// You can construct a concrete instance of `GetWirelessSsidsHotspot20ItemVenueInput` via:
//
//	GetWirelessSsidsHotspot20ItemVenueArgs{...}
type GetWirelessSsidsHotspot20ItemVenueInput interface {
	pulumi.Input

	ToGetWirelessSsidsHotspot20ItemVenueOutput() GetWirelessSsidsHotspot20ItemVenueOutput
	ToGetWirelessSsidsHotspot20ItemVenueOutputWithContext(context.Context) GetWirelessSsidsHotspot20ItemVenueOutput
}

type GetWirelessSsidsHotspot20ItemVenueArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetWirelessSsidsHotspot20ItemVenueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemVenue)(nil)).Elem()
}

func (i GetWirelessSsidsHotspot20ItemVenueArgs) ToGetWirelessSsidsHotspot20ItemVenueOutput() GetWirelessSsidsHotspot20ItemVenueOutput {
	return i.ToGetWirelessSsidsHotspot20ItemVenueOutputWithContext(context.Background())
}

func (i GetWirelessSsidsHotspot20ItemVenueArgs) ToGetWirelessSsidsHotspot20ItemVenueOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemVenueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsHotspot20ItemVenueOutput)
}

type GetWirelessSsidsHotspot20ItemVenueOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsHotspot20ItemVenueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsHotspot20ItemVenue)(nil)).Elem()
}

func (o GetWirelessSsidsHotspot20ItemVenueOutput) ToGetWirelessSsidsHotspot20ItemVenueOutput() GetWirelessSsidsHotspot20ItemVenueOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemVenueOutput) ToGetWirelessSsidsHotspot20ItemVenueOutputWithContext(ctx context.Context) GetWirelessSsidsHotspot20ItemVenueOutput {
	return o
}

func (o GetWirelessSsidsHotspot20ItemVenueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemVenue) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsHotspot20ItemVenueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsHotspot20ItemVenue) string { return v.Type }).(pulumi.StringOutput)
}

type GetWirelessSsidsIdentityPsksItem struct {
	// The email associated with the System's Manager User
	Email string `pulumi:"email"`
	// Timestamp for when the Identity PSK expires, or 'null' to never expire
	ExpiresAt string `pulumi:"expiresAt"`
	// The group policy to be applied to clients
	GroupPolicyId string `pulumi:"groupPolicyId"`
	// The unique identifier of the Identity PSK
	Id string `pulumi:"id"`
	// The name of the Identity PSK
	Name string `pulumi:"name"`
	// The passphrase for client authentication
	Passphrase string `pulumi:"passphrase"`
	// The WiFi Personal Network unique identifier
	WifiPersonalNetworkId string `pulumi:"wifiPersonalNetworkId"`
}

// GetWirelessSsidsIdentityPsksItemInput is an input type that accepts GetWirelessSsidsIdentityPsksItemArgs and GetWirelessSsidsIdentityPsksItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsIdentityPsksItemInput` via:
//
//	GetWirelessSsidsIdentityPsksItemArgs{...}
type GetWirelessSsidsIdentityPsksItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsIdentityPsksItemOutput() GetWirelessSsidsIdentityPsksItemOutput
	ToGetWirelessSsidsIdentityPsksItemOutputWithContext(context.Context) GetWirelessSsidsIdentityPsksItemOutput
}

type GetWirelessSsidsIdentityPsksItemArgs struct {
	// The email associated with the System's Manager User
	Email pulumi.StringInput `pulumi:"email"`
	// Timestamp for when the Identity PSK expires, or 'null' to never expire
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// The group policy to be applied to clients
	GroupPolicyId pulumi.StringInput `pulumi:"groupPolicyId"`
	// The unique identifier of the Identity PSK
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Identity PSK
	Name pulumi.StringInput `pulumi:"name"`
	// The passphrase for client authentication
	Passphrase pulumi.StringInput `pulumi:"passphrase"`
	// The WiFi Personal Network unique identifier
	WifiPersonalNetworkId pulumi.StringInput `pulumi:"wifiPersonalNetworkId"`
}

func (GetWirelessSsidsIdentityPsksItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsIdentityPsksItem)(nil)).Elem()
}

func (i GetWirelessSsidsIdentityPsksItemArgs) ToGetWirelessSsidsIdentityPsksItemOutput() GetWirelessSsidsIdentityPsksItemOutput {
	return i.ToGetWirelessSsidsIdentityPsksItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsIdentityPsksItemArgs) ToGetWirelessSsidsIdentityPsksItemOutputWithContext(ctx context.Context) GetWirelessSsidsIdentityPsksItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsIdentityPsksItemOutput)
}

// GetWirelessSsidsIdentityPsksItemArrayInput is an input type that accepts GetWirelessSsidsIdentityPsksItemArray and GetWirelessSsidsIdentityPsksItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsIdentityPsksItemArrayInput` via:
//
//	GetWirelessSsidsIdentityPsksItemArray{ GetWirelessSsidsIdentityPsksItemArgs{...} }
type GetWirelessSsidsIdentityPsksItemArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsIdentityPsksItemArrayOutput() GetWirelessSsidsIdentityPsksItemArrayOutput
	ToGetWirelessSsidsIdentityPsksItemArrayOutputWithContext(context.Context) GetWirelessSsidsIdentityPsksItemArrayOutput
}

type GetWirelessSsidsIdentityPsksItemArray []GetWirelessSsidsIdentityPsksItemInput

func (GetWirelessSsidsIdentityPsksItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsIdentityPsksItem)(nil)).Elem()
}

func (i GetWirelessSsidsIdentityPsksItemArray) ToGetWirelessSsidsIdentityPsksItemArrayOutput() GetWirelessSsidsIdentityPsksItemArrayOutput {
	return i.ToGetWirelessSsidsIdentityPsksItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsIdentityPsksItemArray) ToGetWirelessSsidsIdentityPsksItemArrayOutputWithContext(ctx context.Context) GetWirelessSsidsIdentityPsksItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsIdentityPsksItemArrayOutput)
}

type GetWirelessSsidsIdentityPsksItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsIdentityPsksItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsIdentityPsksItem)(nil)).Elem()
}

func (o GetWirelessSsidsIdentityPsksItemOutput) ToGetWirelessSsidsIdentityPsksItemOutput() GetWirelessSsidsIdentityPsksItemOutput {
	return o
}

func (o GetWirelessSsidsIdentityPsksItemOutput) ToGetWirelessSsidsIdentityPsksItemOutputWithContext(ctx context.Context) GetWirelessSsidsIdentityPsksItemOutput {
	return o
}

// The email associated with the System's Manager User
func (o GetWirelessSsidsIdentityPsksItemOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.Email }).(pulumi.StringOutput)
}

// Timestamp for when the Identity PSK expires, or 'null' to never expire
func (o GetWirelessSsidsIdentityPsksItemOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The group policy to be applied to clients
func (o GetWirelessSsidsIdentityPsksItemOutput) GroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.GroupPolicyId }).(pulumi.StringOutput)
}

// The unique identifier of the Identity PSK
func (o GetWirelessSsidsIdentityPsksItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Identity PSK
func (o GetWirelessSsidsIdentityPsksItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.Name }).(pulumi.StringOutput)
}

// The passphrase for client authentication
func (o GetWirelessSsidsIdentityPsksItemOutput) Passphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.Passphrase }).(pulumi.StringOutput)
}

// The WiFi Personal Network unique identifier
func (o GetWirelessSsidsIdentityPsksItemOutput) WifiPersonalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsIdentityPsksItem) string { return v.WifiPersonalNetworkId }).(pulumi.StringOutput)
}

type GetWirelessSsidsIdentityPsksItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsIdentityPsksItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsIdentityPsksItem)(nil)).Elem()
}

func (o GetWirelessSsidsIdentityPsksItemArrayOutput) ToGetWirelessSsidsIdentityPsksItemArrayOutput() GetWirelessSsidsIdentityPsksItemArrayOutput {
	return o
}

func (o GetWirelessSsidsIdentityPsksItemArrayOutput) ToGetWirelessSsidsIdentityPsksItemArrayOutputWithContext(ctx context.Context) GetWirelessSsidsIdentityPsksItemArrayOutput {
	return o
}

func (o GetWirelessSsidsIdentityPsksItemArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsIdentityPsksItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsIdentityPsksItem {
		return vs[0].([]GetWirelessSsidsIdentityPsksItem)[vs[1].(int)]
	}).(GetWirelessSsidsIdentityPsksItemOutput)
}

type GetWirelessSsidsItem struct {
	// URL for the admin splash page
	AdminSplashUrl string `pulumi:"adminSplashUrl"`
	// The association control method for the SSID
	AuthMode string `pulumi:"authMode"`
	// List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list
	AvailabilityTags []string `pulumi:"availabilityTags"`
	// Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags
	AvailableOnAllAps bool `pulumi:"availableOnAllAps"`
	// The client-serving radio frequencies of this SSID in the default indoor RF profile
	BandSelection string `pulumi:"bandSelection"`
	// Whether or not the SSID is enabled
	Enabled bool `pulumi:"enabled"`
	// The psk encryption mode for the SSID
	EncryptionMode string `pulumi:"encryptionMode"`
	// The client IP assignment mode
	IpAssignmentMode string `pulumi:"ipAssignmentMode"`
	// Extended local auth flag for Enterprise NAC
	LocalAuth bool `pulumi:"localAuth"`
	// Whether clients connecting to this SSID must use the IP address assigned by the DHCP server
	MandatoryDhcpEnabled bool `pulumi:"mandatoryDhcpEnabled"`
	// The minimum bitrate in Mbps of this SSID in the default indoor RF profile
	MinBitrate int `pulumi:"minBitrate"`
	// The name of the SSID
	Name string `pulumi:"name"`
	// Unique identifier of the SSID
	Number int `pulumi:"number"`
	// The download bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitDown int `pulumi:"perClientBandwidthLimitDown"`
	// The upload bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitUp int `pulumi:"perClientBandwidthLimitUp"`
	// The total download bandwidth limit in Kbps (0 represents no limit)
	PerSsidBandwidthLimitDown int `pulumi:"perSsidBandwidthLimitDown"`
	// The total upload bandwidth limit in Kbps (0 represents no limit)
	PerSsidBandwidthLimitUp int `pulumi:"perSsidBandwidthLimitUp"`
	// Whether or not RADIUS accounting is enabled
	RadiusAccountingEnabled bool `pulumi:"radiusAccountingEnabled"`
	// List of RADIUS accounting 802.1X servers to be used for authentication
	RadiusAccountingServers []GetWirelessSsidsItemRadiusAccountingServer `pulumi:"radiusAccountingServers"`
	// RADIUS attribute used to look up group policies
	RadiusAttributeForGroupPolicies string `pulumi:"radiusAttributeForGroupPolicies"`
	// Whether RADIUS authentication is enabled
	RadiusEnabled bool `pulumi:"radiusEnabled"`
	// Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable
	RadiusFailoverPolicy string `pulumi:"radiusFailoverPolicy"`
	// Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts
	RadiusLoadBalancingPolicy string `pulumi:"radiusLoadBalancingPolicy"`
	// List of RADIUS 802.1X servers to be used for authentication
	RadiusServers []GetWirelessSsidsItemRadiusServer `pulumi:"radiusServers"`
	// The type of splash page for the SSID
	SplashPage string `pulumi:"splashPage"`
	// Splash page timeout
	SplashTimeout string `pulumi:"splashTimeout"`
	// SSID Administrator access status
	SsidAdminAccessible bool `pulumi:"ssidAdminAccessible"`
	// Whether the SSID is advertised or hidden by the AP
	Visible bool `pulumi:"visible"`
	// Allow users to access a configurable list of IP ranges prior to sign-on
	WalledGardenEnabled bool `pulumi:"walledGardenEnabled"`
	// Domain names and IP address ranges available in Walled Garden mode
	WalledGardenRanges []string `pulumi:"walledGardenRanges"`
	// The types of WPA encryption
	WpaEncryptionMode string `pulumi:"wpaEncryptionMode"`
}

// GetWirelessSsidsItemInput is an input type that accepts GetWirelessSsidsItemArgs and GetWirelessSsidsItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemInput` via:
//
//	GetWirelessSsidsItemArgs{...}
type GetWirelessSsidsItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemOutput() GetWirelessSsidsItemOutput
	ToGetWirelessSsidsItemOutputWithContext(context.Context) GetWirelessSsidsItemOutput
}

type GetWirelessSsidsItemArgs struct {
	// URL for the admin splash page
	AdminSplashUrl pulumi.StringInput `pulumi:"adminSplashUrl"`
	// The association control method for the SSID
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list
	AvailabilityTags pulumi.StringArrayInput `pulumi:"availabilityTags"`
	// Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags
	AvailableOnAllAps pulumi.BoolInput `pulumi:"availableOnAllAps"`
	// The client-serving radio frequencies of this SSID in the default indoor RF profile
	BandSelection pulumi.StringInput `pulumi:"bandSelection"`
	// Whether or not the SSID is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The psk encryption mode for the SSID
	EncryptionMode pulumi.StringInput `pulumi:"encryptionMode"`
	// The client IP assignment mode
	IpAssignmentMode pulumi.StringInput `pulumi:"ipAssignmentMode"`
	// Extended local auth flag for Enterprise NAC
	LocalAuth pulumi.BoolInput `pulumi:"localAuth"`
	// Whether clients connecting to this SSID must use the IP address assigned by the DHCP server
	MandatoryDhcpEnabled pulumi.BoolInput `pulumi:"mandatoryDhcpEnabled"`
	// The minimum bitrate in Mbps of this SSID in the default indoor RF profile
	MinBitrate pulumi.IntInput `pulumi:"minBitrate"`
	// The name of the SSID
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier of the SSID
	Number pulumi.IntInput `pulumi:"number"`
	// The download bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitDown pulumi.IntInput `pulumi:"perClientBandwidthLimitDown"`
	// The upload bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitUp pulumi.IntInput `pulumi:"perClientBandwidthLimitUp"`
	// The total download bandwidth limit in Kbps (0 represents no limit)
	PerSsidBandwidthLimitDown pulumi.IntInput `pulumi:"perSsidBandwidthLimitDown"`
	// The total upload bandwidth limit in Kbps (0 represents no limit)
	PerSsidBandwidthLimitUp pulumi.IntInput `pulumi:"perSsidBandwidthLimitUp"`
	// Whether or not RADIUS accounting is enabled
	RadiusAccountingEnabled pulumi.BoolInput `pulumi:"radiusAccountingEnabled"`
	// List of RADIUS accounting 802.1X servers to be used for authentication
	RadiusAccountingServers GetWirelessSsidsItemRadiusAccountingServerArrayInput `pulumi:"radiusAccountingServers"`
	// RADIUS attribute used to look up group policies
	RadiusAttributeForGroupPolicies pulumi.StringInput `pulumi:"radiusAttributeForGroupPolicies"`
	// Whether RADIUS authentication is enabled
	RadiusEnabled pulumi.BoolInput `pulumi:"radiusEnabled"`
	// Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable
	RadiusFailoverPolicy pulumi.StringInput `pulumi:"radiusFailoverPolicy"`
	// Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts
	RadiusLoadBalancingPolicy pulumi.StringInput `pulumi:"radiusLoadBalancingPolicy"`
	// List of RADIUS 802.1X servers to be used for authentication
	RadiusServers GetWirelessSsidsItemRadiusServerArrayInput `pulumi:"radiusServers"`
	// The type of splash page for the SSID
	SplashPage pulumi.StringInput `pulumi:"splashPage"`
	// Splash page timeout
	SplashTimeout pulumi.StringInput `pulumi:"splashTimeout"`
	// SSID Administrator access status
	SsidAdminAccessible pulumi.BoolInput `pulumi:"ssidAdminAccessible"`
	// Whether the SSID is advertised or hidden by the AP
	Visible pulumi.BoolInput `pulumi:"visible"`
	// Allow users to access a configurable list of IP ranges prior to sign-on
	WalledGardenEnabled pulumi.BoolInput `pulumi:"walledGardenEnabled"`
	// Domain names and IP address ranges available in Walled Garden mode
	WalledGardenRanges pulumi.StringArrayInput `pulumi:"walledGardenRanges"`
	// The types of WPA encryption
	WpaEncryptionMode pulumi.StringInput `pulumi:"wpaEncryptionMode"`
}

func (GetWirelessSsidsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItem)(nil)).Elem()
}

func (i GetWirelessSsidsItemArgs) ToGetWirelessSsidsItemOutput() GetWirelessSsidsItemOutput {
	return i.ToGetWirelessSsidsItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemArgs) ToGetWirelessSsidsItemOutputWithContext(ctx context.Context) GetWirelessSsidsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemOutput)
}

// GetWirelessSsidsItemArrayInput is an input type that accepts GetWirelessSsidsItemArray and GetWirelessSsidsItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemArrayInput` via:
//
//	GetWirelessSsidsItemArray{ GetWirelessSsidsItemArgs{...} }
type GetWirelessSsidsItemArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemArrayOutput() GetWirelessSsidsItemArrayOutput
	ToGetWirelessSsidsItemArrayOutputWithContext(context.Context) GetWirelessSsidsItemArrayOutput
}

type GetWirelessSsidsItemArray []GetWirelessSsidsItemInput

func (GetWirelessSsidsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItem)(nil)).Elem()
}

func (i GetWirelessSsidsItemArray) ToGetWirelessSsidsItemArrayOutput() GetWirelessSsidsItemArrayOutput {
	return i.ToGetWirelessSsidsItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemArray) ToGetWirelessSsidsItemArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemArrayOutput)
}

type GetWirelessSsidsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItem)(nil)).Elem()
}

func (o GetWirelessSsidsItemOutput) ToGetWirelessSsidsItemOutput() GetWirelessSsidsItemOutput {
	return o
}

func (o GetWirelessSsidsItemOutput) ToGetWirelessSsidsItemOutputWithContext(ctx context.Context) GetWirelessSsidsItemOutput {
	return o
}

// URL for the admin splash page
func (o GetWirelessSsidsItemOutput) AdminSplashUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.AdminSplashUrl }).(pulumi.StringOutput)
}

// The association control method for the SSID
func (o GetWirelessSsidsItemOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.AuthMode }).(pulumi.StringOutput)
}

// List of tags for this SSID. If availableOnAllAps is false, then the SSID is only broadcast by APs with tags matching any of the tags in this list
func (o GetWirelessSsidsItemOutput) AvailabilityTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) []string { return v.AvailabilityTags }).(pulumi.StringArrayOutput)
}

// Whether all APs broadcast the SSID or if it's restricted to APs matching any availability tags
func (o GetWirelessSsidsItemOutput) AvailableOnAllAps() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.AvailableOnAllAps }).(pulumi.BoolOutput)
}

// The client-serving radio frequencies of this SSID in the default indoor RF profile
func (o GetWirelessSsidsItemOutput) BandSelection() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.BandSelection }).(pulumi.StringOutput)
}

// Whether or not the SSID is enabled
func (o GetWirelessSsidsItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The psk encryption mode for the SSID
func (o GetWirelessSsidsItemOutput) EncryptionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.EncryptionMode }).(pulumi.StringOutput)
}

// The client IP assignment mode
func (o GetWirelessSsidsItemOutput) IpAssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.IpAssignmentMode }).(pulumi.StringOutput)
}

// Extended local auth flag for Enterprise NAC
func (o GetWirelessSsidsItemOutput) LocalAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.LocalAuth }).(pulumi.BoolOutput)
}

// Whether clients connecting to this SSID must use the IP address assigned by the DHCP server
func (o GetWirelessSsidsItemOutput) MandatoryDhcpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.MandatoryDhcpEnabled }).(pulumi.BoolOutput)
}

// The minimum bitrate in Mbps of this SSID in the default indoor RF profile
func (o GetWirelessSsidsItemOutput) MinBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.MinBitrate }).(pulumi.IntOutput)
}

// The name of the SSID
func (o GetWirelessSsidsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the SSID
func (o GetWirelessSsidsItemOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.Number }).(pulumi.IntOutput)
}

// The download bandwidth limit in Kbps. (0 represents no limit.)
func (o GetWirelessSsidsItemOutput) PerClientBandwidthLimitDown() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.PerClientBandwidthLimitDown }).(pulumi.IntOutput)
}

// The upload bandwidth limit in Kbps. (0 represents no limit.)
func (o GetWirelessSsidsItemOutput) PerClientBandwidthLimitUp() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.PerClientBandwidthLimitUp }).(pulumi.IntOutput)
}

// The total download bandwidth limit in Kbps (0 represents no limit)
func (o GetWirelessSsidsItemOutput) PerSsidBandwidthLimitDown() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.PerSsidBandwidthLimitDown }).(pulumi.IntOutput)
}

// The total upload bandwidth limit in Kbps (0 represents no limit)
func (o GetWirelessSsidsItemOutput) PerSsidBandwidthLimitUp() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) int { return v.PerSsidBandwidthLimitUp }).(pulumi.IntOutput)
}

// Whether or not RADIUS accounting is enabled
func (o GetWirelessSsidsItemOutput) RadiusAccountingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.RadiusAccountingEnabled }).(pulumi.BoolOutput)
}

// List of RADIUS accounting 802.1X servers to be used for authentication
func (o GetWirelessSsidsItemOutput) RadiusAccountingServers() GetWirelessSsidsItemRadiusAccountingServerArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) []GetWirelessSsidsItemRadiusAccountingServer {
		return v.RadiusAccountingServers
	}).(GetWirelessSsidsItemRadiusAccountingServerArrayOutput)
}

// RADIUS attribute used to look up group policies
func (o GetWirelessSsidsItemOutput) RadiusAttributeForGroupPolicies() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.RadiusAttributeForGroupPolicies }).(pulumi.StringOutput)
}

// Whether RADIUS authentication is enabled
func (o GetWirelessSsidsItemOutput) RadiusEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.RadiusEnabled }).(pulumi.BoolOutput)
}

// Policy which determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable
func (o GetWirelessSsidsItemOutput) RadiusFailoverPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.RadiusFailoverPolicy }).(pulumi.StringOutput)
}

// Policy which determines which RADIUS server will be contacted first in an authentication attempt, and the ordering of any necessary retry attempts
func (o GetWirelessSsidsItemOutput) RadiusLoadBalancingPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.RadiusLoadBalancingPolicy }).(pulumi.StringOutput)
}

// List of RADIUS 802.1X servers to be used for authentication
func (o GetWirelessSsidsItemOutput) RadiusServers() GetWirelessSsidsItemRadiusServerArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) []GetWirelessSsidsItemRadiusServer { return v.RadiusServers }).(GetWirelessSsidsItemRadiusServerArrayOutput)
}

// The type of splash page for the SSID
func (o GetWirelessSsidsItemOutput) SplashPage() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.SplashPage }).(pulumi.StringOutput)
}

// Splash page timeout
func (o GetWirelessSsidsItemOutput) SplashTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.SplashTimeout }).(pulumi.StringOutput)
}

// SSID Administrator access status
func (o GetWirelessSsidsItemOutput) SsidAdminAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.SsidAdminAccessible }).(pulumi.BoolOutput)
}

// Whether the SSID is advertised or hidden by the AP
func (o GetWirelessSsidsItemOutput) Visible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.Visible }).(pulumi.BoolOutput)
}

// Allow users to access a configurable list of IP ranges prior to sign-on
func (o GetWirelessSsidsItemOutput) WalledGardenEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) bool { return v.WalledGardenEnabled }).(pulumi.BoolOutput)
}

// Domain names and IP address ranges available in Walled Garden mode
func (o GetWirelessSsidsItemOutput) WalledGardenRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) []string { return v.WalledGardenRanges }).(pulumi.StringArrayOutput)
}

// The types of WPA encryption
func (o GetWirelessSsidsItemOutput) WpaEncryptionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItem) string { return v.WpaEncryptionMode }).(pulumi.StringOutput)
}

type GetWirelessSsidsItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItem)(nil)).Elem()
}

func (o GetWirelessSsidsItemArrayOutput) ToGetWirelessSsidsItemArrayOutput() GetWirelessSsidsItemArrayOutput {
	return o
}

func (o GetWirelessSsidsItemArrayOutput) ToGetWirelessSsidsItemArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemArrayOutput {
	return o
}

func (o GetWirelessSsidsItemArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsItem {
		return vs[0].([]GetWirelessSsidsItem)[vs[1].(int)]
	}).(GetWirelessSsidsItemOutput)
}

type GetWirelessSsidsItemRadiusAccountingServer struct {
	// Certificate used for authorization for the RADSEC Server
	CaCertificate string `pulumi:"caCertificate"`
	// IP address (or FQDN) to which the APs will send RADIUS accounting messages
	Host string `pulumi:"host"`
	// The ID of the Openroaming Certificate attached to radius server
	OpenRoamingCertificateId int `pulumi:"openRoamingCertificateId"`
	// Port on the RADIUS server that is listening for accounting messages
	Port int `pulumi:"port"`
}

// GetWirelessSsidsItemRadiusAccountingServerInput is an input type that accepts GetWirelessSsidsItemRadiusAccountingServerArgs and GetWirelessSsidsItemRadiusAccountingServerOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemRadiusAccountingServerInput` via:
//
//	GetWirelessSsidsItemRadiusAccountingServerArgs{...}
type GetWirelessSsidsItemRadiusAccountingServerInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemRadiusAccountingServerOutput() GetWirelessSsidsItemRadiusAccountingServerOutput
	ToGetWirelessSsidsItemRadiusAccountingServerOutputWithContext(context.Context) GetWirelessSsidsItemRadiusAccountingServerOutput
}

type GetWirelessSsidsItemRadiusAccountingServerArgs struct {
	// Certificate used for authorization for the RADSEC Server
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// IP address (or FQDN) to which the APs will send RADIUS accounting messages
	Host pulumi.StringInput `pulumi:"host"`
	// The ID of the Openroaming Certificate attached to radius server
	OpenRoamingCertificateId pulumi.IntInput `pulumi:"openRoamingCertificateId"`
	// Port on the RADIUS server that is listening for accounting messages
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetWirelessSsidsItemRadiusAccountingServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItemRadiusAccountingServer)(nil)).Elem()
}

func (i GetWirelessSsidsItemRadiusAccountingServerArgs) ToGetWirelessSsidsItemRadiusAccountingServerOutput() GetWirelessSsidsItemRadiusAccountingServerOutput {
	return i.ToGetWirelessSsidsItemRadiusAccountingServerOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemRadiusAccountingServerArgs) ToGetWirelessSsidsItemRadiusAccountingServerOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusAccountingServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemRadiusAccountingServerOutput)
}

// GetWirelessSsidsItemRadiusAccountingServerArrayInput is an input type that accepts GetWirelessSsidsItemRadiusAccountingServerArray and GetWirelessSsidsItemRadiusAccountingServerArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemRadiusAccountingServerArrayInput` via:
//
//	GetWirelessSsidsItemRadiusAccountingServerArray{ GetWirelessSsidsItemRadiusAccountingServerArgs{...} }
type GetWirelessSsidsItemRadiusAccountingServerArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemRadiusAccountingServerArrayOutput() GetWirelessSsidsItemRadiusAccountingServerArrayOutput
	ToGetWirelessSsidsItemRadiusAccountingServerArrayOutputWithContext(context.Context) GetWirelessSsidsItemRadiusAccountingServerArrayOutput
}

type GetWirelessSsidsItemRadiusAccountingServerArray []GetWirelessSsidsItemRadiusAccountingServerInput

func (GetWirelessSsidsItemRadiusAccountingServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItemRadiusAccountingServer)(nil)).Elem()
}

func (i GetWirelessSsidsItemRadiusAccountingServerArray) ToGetWirelessSsidsItemRadiusAccountingServerArrayOutput() GetWirelessSsidsItemRadiusAccountingServerArrayOutput {
	return i.ToGetWirelessSsidsItemRadiusAccountingServerArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemRadiusAccountingServerArray) ToGetWirelessSsidsItemRadiusAccountingServerArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusAccountingServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemRadiusAccountingServerArrayOutput)
}

type GetWirelessSsidsItemRadiusAccountingServerOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemRadiusAccountingServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItemRadiusAccountingServer)(nil)).Elem()
}

func (o GetWirelessSsidsItemRadiusAccountingServerOutput) ToGetWirelessSsidsItemRadiusAccountingServerOutput() GetWirelessSsidsItemRadiusAccountingServerOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusAccountingServerOutput) ToGetWirelessSsidsItemRadiusAccountingServerOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusAccountingServerOutput {
	return o
}

// Certificate used for authorization for the RADSEC Server
func (o GetWirelessSsidsItemRadiusAccountingServerOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusAccountingServer) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// IP address (or FQDN) to which the APs will send RADIUS accounting messages
func (o GetWirelessSsidsItemRadiusAccountingServerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusAccountingServer) string { return v.Host }).(pulumi.StringOutput)
}

// The ID of the Openroaming Certificate attached to radius server
func (o GetWirelessSsidsItemRadiusAccountingServerOutput) OpenRoamingCertificateId() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusAccountingServer) int { return v.OpenRoamingCertificateId }).(pulumi.IntOutput)
}

// Port on the RADIUS server that is listening for accounting messages
func (o GetWirelessSsidsItemRadiusAccountingServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusAccountingServer) int { return v.Port }).(pulumi.IntOutput)
}

type GetWirelessSsidsItemRadiusAccountingServerArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemRadiusAccountingServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItemRadiusAccountingServer)(nil)).Elem()
}

func (o GetWirelessSsidsItemRadiusAccountingServerArrayOutput) ToGetWirelessSsidsItemRadiusAccountingServerArrayOutput() GetWirelessSsidsItemRadiusAccountingServerArrayOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusAccountingServerArrayOutput) ToGetWirelessSsidsItemRadiusAccountingServerArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusAccountingServerArrayOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusAccountingServerArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsItemRadiusAccountingServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsItemRadiusAccountingServer {
		return vs[0].([]GetWirelessSsidsItemRadiusAccountingServer)[vs[1].(int)]
	}).(GetWirelessSsidsItemRadiusAccountingServerOutput)
}

type GetWirelessSsidsItemRadiusServer struct {
	// Certificate used for authorization for the RADSEC Server
	CaCertificate string `pulumi:"caCertificate"`
	// IP address (or FQDN) of your RADIUS server
	Host string `pulumi:"host"`
	// The ID of the Openroaming Certificate attached to radius server
	OpenRoamingCertificateId int `pulumi:"openRoamingCertificateId"`
	// UDP port the RADIUS server listens on for Access-requests
	Port int `pulumi:"port"`
}

// GetWirelessSsidsItemRadiusServerInput is an input type that accepts GetWirelessSsidsItemRadiusServerArgs and GetWirelessSsidsItemRadiusServerOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemRadiusServerInput` via:
//
//	GetWirelessSsidsItemRadiusServerArgs{...}
type GetWirelessSsidsItemRadiusServerInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemRadiusServerOutput() GetWirelessSsidsItemRadiusServerOutput
	ToGetWirelessSsidsItemRadiusServerOutputWithContext(context.Context) GetWirelessSsidsItemRadiusServerOutput
}

type GetWirelessSsidsItemRadiusServerArgs struct {
	// Certificate used for authorization for the RADSEC Server
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// IP address (or FQDN) of your RADIUS server
	Host pulumi.StringInput `pulumi:"host"`
	// The ID of the Openroaming Certificate attached to radius server
	OpenRoamingCertificateId pulumi.IntInput `pulumi:"openRoamingCertificateId"`
	// UDP port the RADIUS server listens on for Access-requests
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetWirelessSsidsItemRadiusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItemRadiusServer)(nil)).Elem()
}

func (i GetWirelessSsidsItemRadiusServerArgs) ToGetWirelessSsidsItemRadiusServerOutput() GetWirelessSsidsItemRadiusServerOutput {
	return i.ToGetWirelessSsidsItemRadiusServerOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemRadiusServerArgs) ToGetWirelessSsidsItemRadiusServerOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemRadiusServerOutput)
}

// GetWirelessSsidsItemRadiusServerArrayInput is an input type that accepts GetWirelessSsidsItemRadiusServerArray and GetWirelessSsidsItemRadiusServerArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsItemRadiusServerArrayInput` via:
//
//	GetWirelessSsidsItemRadiusServerArray{ GetWirelessSsidsItemRadiusServerArgs{...} }
type GetWirelessSsidsItemRadiusServerArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsItemRadiusServerArrayOutput() GetWirelessSsidsItemRadiusServerArrayOutput
	ToGetWirelessSsidsItemRadiusServerArrayOutputWithContext(context.Context) GetWirelessSsidsItemRadiusServerArrayOutput
}

type GetWirelessSsidsItemRadiusServerArray []GetWirelessSsidsItemRadiusServerInput

func (GetWirelessSsidsItemRadiusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItemRadiusServer)(nil)).Elem()
}

func (i GetWirelessSsidsItemRadiusServerArray) ToGetWirelessSsidsItemRadiusServerArrayOutput() GetWirelessSsidsItemRadiusServerArrayOutput {
	return i.ToGetWirelessSsidsItemRadiusServerArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsItemRadiusServerArray) ToGetWirelessSsidsItemRadiusServerArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsItemRadiusServerArrayOutput)
}

type GetWirelessSsidsItemRadiusServerOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemRadiusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsItemRadiusServer)(nil)).Elem()
}

func (o GetWirelessSsidsItemRadiusServerOutput) ToGetWirelessSsidsItemRadiusServerOutput() GetWirelessSsidsItemRadiusServerOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusServerOutput) ToGetWirelessSsidsItemRadiusServerOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusServerOutput {
	return o
}

// Certificate used for authorization for the RADSEC Server
func (o GetWirelessSsidsItemRadiusServerOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusServer) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// IP address (or FQDN) of your RADIUS server
func (o GetWirelessSsidsItemRadiusServerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusServer) string { return v.Host }).(pulumi.StringOutput)
}

// The ID of the Openroaming Certificate attached to radius server
func (o GetWirelessSsidsItemRadiusServerOutput) OpenRoamingCertificateId() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusServer) int { return v.OpenRoamingCertificateId }).(pulumi.IntOutput)
}

// UDP port the RADIUS server listens on for Access-requests
func (o GetWirelessSsidsItemRadiusServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsItemRadiusServer) int { return v.Port }).(pulumi.IntOutput)
}

type GetWirelessSsidsItemRadiusServerArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsItemRadiusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsItemRadiusServer)(nil)).Elem()
}

func (o GetWirelessSsidsItemRadiusServerArrayOutput) ToGetWirelessSsidsItemRadiusServerArrayOutput() GetWirelessSsidsItemRadiusServerArrayOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusServerArrayOutput) ToGetWirelessSsidsItemRadiusServerArrayOutputWithContext(ctx context.Context) GetWirelessSsidsItemRadiusServerArrayOutput {
	return o
}

func (o GetWirelessSsidsItemRadiusServerArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsItemRadiusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsItemRadiusServer {
		return vs[0].([]GetWirelessSsidsItemRadiusServer)[vs[1].(int)]
	}).(GetWirelessSsidsItemRadiusServerOutput)
}

type GetWirelessSsidsSchedulesItem struct {
	Enabled bool                                 `pulumi:"enabled"`
	Ranges  []GetWirelessSsidsSchedulesItemRange `pulumi:"ranges"`
}

// GetWirelessSsidsSchedulesItemInput is an input type that accepts GetWirelessSsidsSchedulesItemArgs and GetWirelessSsidsSchedulesItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSchedulesItemInput` via:
//
//	GetWirelessSsidsSchedulesItemArgs{...}
type GetWirelessSsidsSchedulesItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsSchedulesItemOutput() GetWirelessSsidsSchedulesItemOutput
	ToGetWirelessSsidsSchedulesItemOutputWithContext(context.Context) GetWirelessSsidsSchedulesItemOutput
}

type GetWirelessSsidsSchedulesItemArgs struct {
	Enabled pulumi.BoolInput                             `pulumi:"enabled"`
	Ranges  GetWirelessSsidsSchedulesItemRangeArrayInput `pulumi:"ranges"`
}

func (GetWirelessSsidsSchedulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSchedulesItem)(nil)).Elem()
}

func (i GetWirelessSsidsSchedulesItemArgs) ToGetWirelessSsidsSchedulesItemOutput() GetWirelessSsidsSchedulesItemOutput {
	return i.ToGetWirelessSsidsSchedulesItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSchedulesItemArgs) ToGetWirelessSsidsSchedulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSchedulesItemOutput)
}

type GetWirelessSsidsSchedulesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSchedulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSchedulesItem)(nil)).Elem()
}

func (o GetWirelessSsidsSchedulesItemOutput) ToGetWirelessSsidsSchedulesItemOutput() GetWirelessSsidsSchedulesItemOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemOutput) ToGetWirelessSsidsSchedulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetWirelessSsidsSchedulesItemOutput) Ranges() GetWirelessSsidsSchedulesItemRangeArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItem) []GetWirelessSsidsSchedulesItemRange { return v.Ranges }).(GetWirelessSsidsSchedulesItemRangeArrayOutput)
}

type GetWirelessSsidsSchedulesItemRange struct {
	EndDay    string `pulumi:"endDay"`
	EndTime   string `pulumi:"endTime"`
	StartDay  string `pulumi:"startDay"`
	StartTime string `pulumi:"startTime"`
}

// GetWirelessSsidsSchedulesItemRangeInput is an input type that accepts GetWirelessSsidsSchedulesItemRangeArgs and GetWirelessSsidsSchedulesItemRangeOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSchedulesItemRangeInput` via:
//
//	GetWirelessSsidsSchedulesItemRangeArgs{...}
type GetWirelessSsidsSchedulesItemRangeInput interface {
	pulumi.Input

	ToGetWirelessSsidsSchedulesItemRangeOutput() GetWirelessSsidsSchedulesItemRangeOutput
	ToGetWirelessSsidsSchedulesItemRangeOutputWithContext(context.Context) GetWirelessSsidsSchedulesItemRangeOutput
}

type GetWirelessSsidsSchedulesItemRangeArgs struct {
	EndDay    pulumi.StringInput `pulumi:"endDay"`
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	StartDay  pulumi.StringInput `pulumi:"startDay"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetWirelessSsidsSchedulesItemRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSchedulesItemRange)(nil)).Elem()
}

func (i GetWirelessSsidsSchedulesItemRangeArgs) ToGetWirelessSsidsSchedulesItemRangeOutput() GetWirelessSsidsSchedulesItemRangeOutput {
	return i.ToGetWirelessSsidsSchedulesItemRangeOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSchedulesItemRangeArgs) ToGetWirelessSsidsSchedulesItemRangeOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSchedulesItemRangeOutput)
}

// GetWirelessSsidsSchedulesItemRangeArrayInput is an input type that accepts GetWirelessSsidsSchedulesItemRangeArray and GetWirelessSsidsSchedulesItemRangeArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSchedulesItemRangeArrayInput` via:
//
//	GetWirelessSsidsSchedulesItemRangeArray{ GetWirelessSsidsSchedulesItemRangeArgs{...} }
type GetWirelessSsidsSchedulesItemRangeArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsSchedulesItemRangeArrayOutput() GetWirelessSsidsSchedulesItemRangeArrayOutput
	ToGetWirelessSsidsSchedulesItemRangeArrayOutputWithContext(context.Context) GetWirelessSsidsSchedulesItemRangeArrayOutput
}

type GetWirelessSsidsSchedulesItemRangeArray []GetWirelessSsidsSchedulesItemRangeInput

func (GetWirelessSsidsSchedulesItemRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsSchedulesItemRange)(nil)).Elem()
}

func (i GetWirelessSsidsSchedulesItemRangeArray) ToGetWirelessSsidsSchedulesItemRangeArrayOutput() GetWirelessSsidsSchedulesItemRangeArrayOutput {
	return i.ToGetWirelessSsidsSchedulesItemRangeArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSchedulesItemRangeArray) ToGetWirelessSsidsSchedulesItemRangeArrayOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSchedulesItemRangeArrayOutput)
}

type GetWirelessSsidsSchedulesItemRangeOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSchedulesItemRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSchedulesItemRange)(nil)).Elem()
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) ToGetWirelessSsidsSchedulesItemRangeOutput() GetWirelessSsidsSchedulesItemRangeOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) ToGetWirelessSsidsSchedulesItemRangeOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemRangeOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) EndDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItemRange) string { return v.EndDay }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItemRange) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) StartDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItemRange) string { return v.StartDay }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsSchedulesItemRangeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSchedulesItemRange) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetWirelessSsidsSchedulesItemRangeArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSchedulesItemRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsSchedulesItemRange)(nil)).Elem()
}

func (o GetWirelessSsidsSchedulesItemRangeArrayOutput) ToGetWirelessSsidsSchedulesItemRangeArrayOutput() GetWirelessSsidsSchedulesItemRangeArrayOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemRangeArrayOutput) ToGetWirelessSsidsSchedulesItemRangeArrayOutputWithContext(ctx context.Context) GetWirelessSsidsSchedulesItemRangeArrayOutput {
	return o
}

func (o GetWirelessSsidsSchedulesItemRangeArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsSchedulesItemRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsSchedulesItemRange {
		return vs[0].([]GetWirelessSsidsSchedulesItemRange)[vs[1].(int)]
	}).(GetWirelessSsidsSchedulesItemRangeOutput)
}

type GetWirelessSsidsSplashSettingsItem struct {
	// Whether or not to allow simultaneous logins from different devices.
	AllowSimultaneousLogins bool `pulumi:"allowSimultaneousLogins"`
	// Details associated with billing splash
	Billing GetWirelessSsidsSplashSettingsItemBilling `pulumi:"billing"`
	// How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
	BlockAllTrafficBeforeSignOn bool `pulumi:"blockAllTrafficBeforeSignOn"`
	// How login attempts should be handled when the controller is unreachable.
	ControllerDisconnectionBehavior string `pulumi:"controllerDisconnectionBehavior"`
	// Details associated with guest sponsored splash
	GuestSponsorship GetWirelessSsidsSplashSettingsItemGuestSponsorship `pulumi:"guestSponsorship"`
	// The custom redirect URL where the users will go after the splash page.
	RedirectUrl string `pulumi:"redirectUrl"`
	// Self-registration for splash with Meraki authentication.
	SelfRegistration GetWirelessSsidsSplashSettingsItemSelfRegistration `pulumi:"selfRegistration"`
	// Systems Manager sentry enrollment splash settings.
	SentryEnrollment GetWirelessSsidsSplashSettingsItemSentryEnrollment `pulumi:"sentryEnrollment"`
	// The image used in the splash page.
	SplashImage GetWirelessSsidsSplashSettingsItemSplashImage `pulumi:"splashImage"`
	// The logo used in the splash page.
	SplashLogo GetWirelessSsidsSplashSettingsItemSplashLogo `pulumi:"splashLogo"`
	// The type of splash page for this SSID
	SplashPage string `pulumi:"splashPage"`
	// The prepaid front image used in the splash page.
	SplashPrepaidFront GetWirelessSsidsSplashSettingsItemSplashPrepaidFront `pulumi:"splashPrepaidFront"`
	// Splash timeout in minutes.
	SplashTimeout int `pulumi:"splashTimeout"`
	// The custom splash URL of the click-through splash page.
	SplashUrl string `pulumi:"splashUrl"`
	// SSID number
	SsidNumber int `pulumi:"ssidNumber"`
	// The id of the selected splash theme.
	ThemeId string `pulumi:"themeId"`
	// The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
	UseRedirectUrl bool `pulumi:"useRedirectUrl"`
	// Boolean indicating whether the users will be redirected to the custom splash url
	UseSplashUrl bool `pulumi:"useSplashUrl"`
	// The welcome message for the users on the splash page.
	WelcomeMessage string `pulumi:"welcomeMessage"`
}

// GetWirelessSsidsSplashSettingsItemInput is an input type that accepts GetWirelessSsidsSplashSettingsItemArgs and GetWirelessSsidsSplashSettingsItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemInput` via:
//
//	GetWirelessSsidsSplashSettingsItemArgs{...}
type GetWirelessSsidsSplashSettingsItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemOutput() GetWirelessSsidsSplashSettingsItemOutput
	ToGetWirelessSsidsSplashSettingsItemOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemOutput
}

type GetWirelessSsidsSplashSettingsItemArgs struct {
	// Whether or not to allow simultaneous logins from different devices.
	AllowSimultaneousLogins pulumi.BoolInput `pulumi:"allowSimultaneousLogins"`
	// Details associated with billing splash
	Billing GetWirelessSsidsSplashSettingsItemBillingInput `pulumi:"billing"`
	// How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
	BlockAllTrafficBeforeSignOn pulumi.BoolInput `pulumi:"blockAllTrafficBeforeSignOn"`
	// How login attempts should be handled when the controller is unreachable.
	ControllerDisconnectionBehavior pulumi.StringInput `pulumi:"controllerDisconnectionBehavior"`
	// Details associated with guest sponsored splash
	GuestSponsorship GetWirelessSsidsSplashSettingsItemGuestSponsorshipInput `pulumi:"guestSponsorship"`
	// The custom redirect URL where the users will go after the splash page.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// Self-registration for splash with Meraki authentication.
	SelfRegistration GetWirelessSsidsSplashSettingsItemSelfRegistrationInput `pulumi:"selfRegistration"`
	// Systems Manager sentry enrollment splash settings.
	SentryEnrollment GetWirelessSsidsSplashSettingsItemSentryEnrollmentInput `pulumi:"sentryEnrollment"`
	// The image used in the splash page.
	SplashImage GetWirelessSsidsSplashSettingsItemSplashImageInput `pulumi:"splashImage"`
	// The logo used in the splash page.
	SplashLogo GetWirelessSsidsSplashSettingsItemSplashLogoInput `pulumi:"splashLogo"`
	// The type of splash page for this SSID
	SplashPage pulumi.StringInput `pulumi:"splashPage"`
	// The prepaid front image used in the splash page.
	SplashPrepaidFront GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontInput `pulumi:"splashPrepaidFront"`
	// Splash timeout in minutes.
	SplashTimeout pulumi.IntInput `pulumi:"splashTimeout"`
	// The custom splash URL of the click-through splash page.
	SplashUrl pulumi.StringInput `pulumi:"splashUrl"`
	// SSID number
	SsidNumber pulumi.IntInput `pulumi:"ssidNumber"`
	// The id of the selected splash theme.
	ThemeId pulumi.StringInput `pulumi:"themeId"`
	// The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
	UseRedirectUrl pulumi.BoolInput `pulumi:"useRedirectUrl"`
	// Boolean indicating whether the users will be redirected to the custom splash url
	UseSplashUrl pulumi.BoolInput `pulumi:"useSplashUrl"`
	// The welcome message for the users on the splash page.
	WelcomeMessage pulumi.StringInput `pulumi:"welcomeMessage"`
}

func (GetWirelessSsidsSplashSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItem)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemArgs) ToGetWirelessSsidsSplashSettingsItemOutput() GetWirelessSsidsSplashSettingsItemOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemArgs) ToGetWirelessSsidsSplashSettingsItemOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemOutput)
}

type GetWirelessSsidsSplashSettingsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItem)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemOutput) ToGetWirelessSsidsSplashSettingsItemOutput() GetWirelessSsidsSplashSettingsItemOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemOutput) ToGetWirelessSsidsSplashSettingsItemOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemOutput {
	return o
}

// Whether or not to allow simultaneous logins from different devices.
func (o GetWirelessSsidsSplashSettingsItemOutput) AllowSimultaneousLogins() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) bool { return v.AllowSimultaneousLogins }).(pulumi.BoolOutput)
}

// Details associated with billing splash
func (o GetWirelessSsidsSplashSettingsItemOutput) Billing() GetWirelessSsidsSplashSettingsItemBillingOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemBilling { return v.Billing }).(GetWirelessSsidsSplashSettingsItemBillingOutput)
}

// How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
func (o GetWirelessSsidsSplashSettingsItemOutput) BlockAllTrafficBeforeSignOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) bool { return v.BlockAllTrafficBeforeSignOn }).(pulumi.BoolOutput)
}

// How login attempts should be handled when the controller is unreachable.
func (o GetWirelessSsidsSplashSettingsItemOutput) ControllerDisconnectionBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.ControllerDisconnectionBehavior }).(pulumi.StringOutput)
}

// Details associated with guest sponsored splash
func (o GetWirelessSsidsSplashSettingsItemOutput) GuestSponsorship() GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemGuestSponsorship {
		return v.GuestSponsorship
	}).(GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput)
}

// The custom redirect URL where the users will go after the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// Self-registration for splash with Meraki authentication.
func (o GetWirelessSsidsSplashSettingsItemOutput) SelfRegistration() GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemSelfRegistration {
		return v.SelfRegistration
	}).(GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput)
}

// Systems Manager sentry enrollment splash settings.
func (o GetWirelessSsidsSplashSettingsItemOutput) SentryEnrollment() GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemSentryEnrollment {
		return v.SentryEnrollment
	}).(GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput)
}

// The image used in the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashImage() GetWirelessSsidsSplashSettingsItemSplashImageOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemSplashImage {
		return v.SplashImage
	}).(GetWirelessSsidsSplashSettingsItemSplashImageOutput)
}

// The logo used in the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashLogo() GetWirelessSsidsSplashSettingsItemSplashLogoOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemSplashLogo {
		return v.SplashLogo
	}).(GetWirelessSsidsSplashSettingsItemSplashLogoOutput)
}

// The type of splash page for this SSID
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashPage() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.SplashPage }).(pulumi.StringOutput)
}

// The prepaid front image used in the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashPrepaidFront() GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) GetWirelessSsidsSplashSettingsItemSplashPrepaidFront {
		return v.SplashPrepaidFront
	}).(GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput)
}

// Splash timeout in minutes.
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) int { return v.SplashTimeout }).(pulumi.IntOutput)
}

// The custom splash URL of the click-through splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) SplashUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.SplashUrl }).(pulumi.StringOutput)
}

// SSID number
func (o GetWirelessSsidsSplashSettingsItemOutput) SsidNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) int { return v.SsidNumber }).(pulumi.IntOutput)
}

// The id of the selected splash theme.
func (o GetWirelessSsidsSplashSettingsItemOutput) ThemeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.ThemeId }).(pulumi.StringOutput)
}

// The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) UseRedirectUrl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) bool { return v.UseRedirectUrl }).(pulumi.BoolOutput)
}

// Boolean indicating whether the users will be redirected to the custom splash url
func (o GetWirelessSsidsSplashSettingsItemOutput) UseSplashUrl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) bool { return v.UseSplashUrl }).(pulumi.BoolOutput)
}

// The welcome message for the users on the splash page.
func (o GetWirelessSsidsSplashSettingsItemOutput) WelcomeMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItem) string { return v.WelcomeMessage }).(pulumi.StringOutput)
}

type GetWirelessSsidsSplashSettingsItemBilling struct {
	// Details associated with a free access plan with limits
	FreeAccess GetWirelessSsidsSplashSettingsItemBillingFreeAccess `pulumi:"freeAccess"`
	// Whether or not billing uses the fast login prepaid access option.
	PrepaidAccessFastLoginEnabled bool `pulumi:"prepaidAccessFastLoginEnabled"`
	// The email address that reeceives replies from clients
	ReplyToEmailAddress string `pulumi:"replyToEmailAddress"`
}

// GetWirelessSsidsSplashSettingsItemBillingInput is an input type that accepts GetWirelessSsidsSplashSettingsItemBillingArgs and GetWirelessSsidsSplashSettingsItemBillingOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemBillingInput` via:
//
//	GetWirelessSsidsSplashSettingsItemBillingArgs{...}
type GetWirelessSsidsSplashSettingsItemBillingInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemBillingOutput() GetWirelessSsidsSplashSettingsItemBillingOutput
	ToGetWirelessSsidsSplashSettingsItemBillingOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemBillingOutput
}

type GetWirelessSsidsSplashSettingsItemBillingArgs struct {
	// Details associated with a free access plan with limits
	FreeAccess GetWirelessSsidsSplashSettingsItemBillingFreeAccessInput `pulumi:"freeAccess"`
	// Whether or not billing uses the fast login prepaid access option.
	PrepaidAccessFastLoginEnabled pulumi.BoolInput `pulumi:"prepaidAccessFastLoginEnabled"`
	// The email address that reeceives replies from clients
	ReplyToEmailAddress pulumi.StringInput `pulumi:"replyToEmailAddress"`
}

func (GetWirelessSsidsSplashSettingsItemBillingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBilling)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemBillingArgs) ToGetWirelessSsidsSplashSettingsItemBillingOutput() GetWirelessSsidsSplashSettingsItemBillingOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemBillingOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemBillingArgs) ToGetWirelessSsidsSplashSettingsItemBillingOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemBillingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemBillingOutput)
}

type GetWirelessSsidsSplashSettingsItemBillingOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemBillingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBilling)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemBillingOutput) ToGetWirelessSsidsSplashSettingsItemBillingOutput() GetWirelessSsidsSplashSettingsItemBillingOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemBillingOutput) ToGetWirelessSsidsSplashSettingsItemBillingOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemBillingOutput {
	return o
}

// Details associated with a free access plan with limits
func (o GetWirelessSsidsSplashSettingsItemBillingOutput) FreeAccess() GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemBilling) GetWirelessSsidsSplashSettingsItemBillingFreeAccess {
		return v.FreeAccess
	}).(GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput)
}

// Whether or not billing uses the fast login prepaid access option.
func (o GetWirelessSsidsSplashSettingsItemBillingOutput) PrepaidAccessFastLoginEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemBilling) bool { return v.PrepaidAccessFastLoginEnabled }).(pulumi.BoolOutput)
}

// The email address that reeceives replies from clients
func (o GetWirelessSsidsSplashSettingsItemBillingOutput) ReplyToEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemBilling) string { return v.ReplyToEmailAddress }).(pulumi.StringOutput)
}

type GetWirelessSsidsSplashSettingsItemBillingFreeAccess struct {
	// How long a device can use a network for free.
	DurationInMinutes int `pulumi:"durationInMinutes"`
	// Whether or not free access is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetWirelessSsidsSplashSettingsItemBillingFreeAccessInput is an input type that accepts GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs and GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemBillingFreeAccessInput` via:
//
//	GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs{...}
type GetWirelessSsidsSplashSettingsItemBillingFreeAccessInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput() GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput
	ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput
}

type GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs struct {
	// How long a device can use a network for free.
	DurationInMinutes pulumi.IntInput `pulumi:"durationInMinutes"`
	// Whether or not free access is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBillingFreeAccess)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs) ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput() GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs) ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput)
}

type GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBillingFreeAccess)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput) ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput() GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput) ToGetWirelessSsidsSplashSettingsItemBillingFreeAccessOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput {
	return o
}

// How long a device can use a network for free.
func (o GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput) DurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemBillingFreeAccess) int { return v.DurationInMinutes }).(pulumi.IntOutput)
}

// Whether or not free access is enabled.
func (o GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemBillingFreeAccess) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessSsidsSplashSettingsItemGuestSponsorship struct {
	// Duration in minutes of sponsored guest authorization.
	DurationInMinutes int `pulumi:"durationInMinutes"`
	// Whether or not guests can specify how much time they are requesting.
	GuestCanRequestTimeframe bool `pulumi:"guestCanRequestTimeframe"`
}

// GetWirelessSsidsSplashSettingsItemGuestSponsorshipInput is an input type that accepts GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs and GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemGuestSponsorshipInput` via:
//
//	GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs{...}
type GetWirelessSsidsSplashSettingsItemGuestSponsorshipInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput() GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput
	ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput
}

type GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs struct {
	// Duration in minutes of sponsored guest authorization.
	DurationInMinutes pulumi.IntInput `pulumi:"durationInMinutes"`
	// Whether or not guests can specify how much time they are requesting.
	GuestCanRequestTimeframe pulumi.BoolInput `pulumi:"guestCanRequestTimeframe"`
}

func (GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemGuestSponsorship)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs) ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput() GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs) ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput)
}

type GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemGuestSponsorship)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput) ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput() GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput) ToGetWirelessSsidsSplashSettingsItemGuestSponsorshipOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput {
	return o
}

// Duration in minutes of sponsored guest authorization.
func (o GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput) DurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemGuestSponsorship) int { return v.DurationInMinutes }).(pulumi.IntOutput)
}

// Whether or not guests can specify how much time they are requesting.
func (o GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput) GuestCanRequestTimeframe() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemGuestSponsorship) bool { return v.GuestCanRequestTimeframe }).(pulumi.BoolOutput)
}

type GetWirelessSsidsSplashSettingsItemSelfRegistration struct {
	// How created user accounts should be authorized.
	AuthorizationType string `pulumi:"authorizationType"`
	// Whether or not to allow users to create their own account on the network.
	Enabled bool `pulumi:"enabled"`
}

// GetWirelessSsidsSplashSettingsItemSelfRegistrationInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs and GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSelfRegistrationInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs{...}
type GetWirelessSsidsSplashSettingsItemSelfRegistrationInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutput() GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput
	ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput
}

type GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs struct {
	// How created user accounts should be authorized.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// Whether or not to allow users to create their own account on the network.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSelfRegistration)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs) ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutput() GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs) ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput)
}

type GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSelfRegistration)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput) ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutput() GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput) ToGetWirelessSsidsSplashSettingsItemSelfRegistrationOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput {
	return o
}

// How created user accounts should be authorized.
func (o GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSelfRegistration) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// Whether or not to allow users to create their own account on the network.
func (o GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSelfRegistration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollment struct {
	// The system types that the Sentry enforces.
	EnforcedSystems []string `pulumi:"enforcedSystems"`
	// The strength of the enforcement of selected system types.
	Strength string `pulumi:"strength"`
	// Systems Manager network targeted for sentry enrollment.
	SystemsManagerNetwork GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork `pulumi:"systemsManagerNetwork"`
}

// GetWirelessSsidsSplashSettingsItemSentryEnrollmentInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs and GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSentryEnrollmentInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs{...}
type GetWirelessSsidsSplashSettingsItemSentryEnrollmentInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput
	ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs struct {
	// The system types that the Sentry enforces.
	EnforcedSystems pulumi.StringArrayInput `pulumi:"enforcedSystems"`
	// The strength of the enforcement of selected system types.
	Strength pulumi.StringInput `pulumi:"strength"`
	// Systems Manager network targeted for sentry enrollment.
	SystemsManagerNetwork GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkInput `pulumi:"systemsManagerNetwork"`
}

func (GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollment)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput)
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollment)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput {
	return o
}

// The system types that the Sentry enforces.
func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) EnforcedSystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSentryEnrollment) []string { return v.EnforcedSystems }).(pulumi.StringArrayOutput)
}

// The strength of the enforcement of selected system types.
func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) Strength() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSentryEnrollment) string { return v.Strength }).(pulumi.StringOutput)
}

// Systems Manager network targeted for sentry enrollment.
func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput) SystemsManagerNetwork() GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSentryEnrollment) GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork {
		return v.SystemsManagerNetwork
	}).(GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput)
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork struct {
	// The network ID of the Systems Manager network.
	Id string `pulumi:"id"`
}

// GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs and GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs{...}
type GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput
	ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs struct {
	// The network ID of the Systems Manager network.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput)
}

type GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput() GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput) ToGetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput {
	return o
}

// The network ID of the Systems Manager network.
func (o GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashImage struct {
	// The extension of the image file.
	Extension string `pulumi:"extension"`
	// The MD5 value of the image file.
	Md5 string `pulumi:"md5"`
}

// GetWirelessSsidsSplashSettingsItemSplashImageInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSplashImageArgs and GetWirelessSsidsSplashSettingsItemSplashImageOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSplashImageInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSplashImageArgs{...}
type GetWirelessSsidsSplashSettingsItemSplashImageInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSplashImageOutput() GetWirelessSsidsSplashSettingsItemSplashImageOutput
	ToGetWirelessSsidsSplashSettingsItemSplashImageOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSplashImageOutput
}

type GetWirelessSsidsSplashSettingsItemSplashImageArgs struct {
	// The extension of the image file.
	Extension pulumi.StringInput `pulumi:"extension"`
	// The MD5 value of the image file.
	Md5 pulumi.StringInput `pulumi:"md5"`
}

func (GetWirelessSsidsSplashSettingsItemSplashImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashImage)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSplashImageArgs) ToGetWirelessSsidsSplashSettingsItemSplashImageOutput() GetWirelessSsidsSplashSettingsItemSplashImageOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSplashImageOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSplashImageArgs) ToGetWirelessSsidsSplashSettingsItemSplashImageOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSplashImageOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashImageOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSplashImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashImage)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSplashImageOutput) ToGetWirelessSsidsSplashSettingsItemSplashImageOutput() GetWirelessSsidsSplashSettingsItemSplashImageOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSplashImageOutput) ToGetWirelessSsidsSplashSettingsItemSplashImageOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashImageOutput {
	return o
}

// The extension of the image file.
func (o GetWirelessSsidsSplashSettingsItemSplashImageOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashImage) string { return v.Extension }).(pulumi.StringOutput)
}

// The MD5 value of the image file.
func (o GetWirelessSsidsSplashSettingsItemSplashImageOutput) Md5() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashImage) string { return v.Md5 }).(pulumi.StringOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashLogo struct {
	// The extension of the logo file.
	Extension string `pulumi:"extension"`
	// The MD5 value of the logo file.
	Md5 string `pulumi:"md5"`
}

// GetWirelessSsidsSplashSettingsItemSplashLogoInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSplashLogoArgs and GetWirelessSsidsSplashSettingsItemSplashLogoOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSplashLogoInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSplashLogoArgs{...}
type GetWirelessSsidsSplashSettingsItemSplashLogoInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSplashLogoOutput() GetWirelessSsidsSplashSettingsItemSplashLogoOutput
	ToGetWirelessSsidsSplashSettingsItemSplashLogoOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSplashLogoOutput
}

type GetWirelessSsidsSplashSettingsItemSplashLogoArgs struct {
	// The extension of the logo file.
	Extension pulumi.StringInput `pulumi:"extension"`
	// The MD5 value of the logo file.
	Md5 pulumi.StringInput `pulumi:"md5"`
}

func (GetWirelessSsidsSplashSettingsItemSplashLogoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashLogo)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSplashLogoArgs) ToGetWirelessSsidsSplashSettingsItemSplashLogoOutput() GetWirelessSsidsSplashSettingsItemSplashLogoOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSplashLogoOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSplashLogoArgs) ToGetWirelessSsidsSplashSettingsItemSplashLogoOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashLogoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSplashLogoOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashLogoOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSplashLogoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashLogo)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSplashLogoOutput) ToGetWirelessSsidsSplashSettingsItemSplashLogoOutput() GetWirelessSsidsSplashSettingsItemSplashLogoOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSplashLogoOutput) ToGetWirelessSsidsSplashSettingsItemSplashLogoOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashLogoOutput {
	return o
}

// The extension of the logo file.
func (o GetWirelessSsidsSplashSettingsItemSplashLogoOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashLogo) string { return v.Extension }).(pulumi.StringOutput)
}

// The MD5 value of the logo file.
func (o GetWirelessSsidsSplashSettingsItemSplashLogoOutput) Md5() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashLogo) string { return v.Md5 }).(pulumi.StringOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashPrepaidFront struct {
	// The extension of the prepaid front image file.
	Extension string `pulumi:"extension"`
	// The MD5 value of the prepaid front image file.
	Md5 string `pulumi:"md5"`
}

// GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontInput is an input type that accepts GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs and GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput values.
// You can construct a concrete instance of `GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontInput` via:
//
//	GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs{...}
type GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontInput interface {
	pulumi.Input

	ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput() GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput
	ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutputWithContext(context.Context) GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput
}

type GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs struct {
	// The extension of the prepaid front image file.
	Extension pulumi.StringInput `pulumi:"extension"`
	// The MD5 value of the prepaid front image file.
	Md5 pulumi.StringInput `pulumi:"md5"`
}

func (GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashPrepaidFront)(nil)).Elem()
}

func (i GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs) ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput() GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput {
	return i.ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutputWithContext(context.Background())
}

func (i GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs) ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput)
}

type GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashPrepaidFront)(nil)).Elem()
}

func (o GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput) ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput() GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput {
	return o
}

func (o GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput) ToGetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutputWithContext(ctx context.Context) GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput {
	return o
}

// The extension of the prepaid front image file.
func (o GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashPrepaidFront) string { return v.Extension }).(pulumi.StringOutput)
}

// The MD5 value of the prepaid front image file.
func (o GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput) Md5() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsSplashSettingsItemSplashPrepaidFront) string { return v.Md5 }).(pulumi.StringOutput)
}

type GetWirelessSsidsTrafficShapingRulesItem struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled bool `pulumi:"defaultRulesEnabled"`
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules []GetWirelessSsidsTrafficShapingRulesItemRule `pulumi:"rules"`
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled bool `pulumi:"trafficShapingEnabled"`
}

// GetWirelessSsidsTrafficShapingRulesItemInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemArgs and GetWirelessSsidsTrafficShapingRulesItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemArgs{...}
type GetWirelessSsidsTrafficShapingRulesItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemOutput() GetWirelessSsidsTrafficShapingRulesItemOutput
	ToGetWirelessSsidsTrafficShapingRulesItemOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemOutput
}

type GetWirelessSsidsTrafficShapingRulesItemArgs struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled pulumi.BoolInput `pulumi:"defaultRulesEnabled"`
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules GetWirelessSsidsTrafficShapingRulesItemRuleArrayInput `pulumi:"rules"`
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled pulumi.BoolInput `pulumi:"trafficShapingEnabled"`
}

func (GetWirelessSsidsTrafficShapingRulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItem)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemArgs) ToGetWirelessSsidsTrafficShapingRulesItemOutput() GetWirelessSsidsTrafficShapingRulesItemOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemArgs) ToGetWirelessSsidsTrafficShapingRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItem)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemOutput) ToGetWirelessSsidsTrafficShapingRulesItemOutput() GetWirelessSsidsTrafficShapingRulesItemOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemOutput) ToGetWirelessSsidsTrafficShapingRulesItemOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemOutput {
	return o
}

// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
func (o GetWirelessSsidsTrafficShapingRulesItemOutput) DefaultRulesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItem) bool { return v.DefaultRulesEnabled }).(pulumi.BoolOutput)
}

// An array of traffic shaping rules. Rules are applied in the order that
// they are specified in. An empty list (or null) means no rules. Note that
// you are allowed a maximum of 8 rules.
func (o GetWirelessSsidsTrafficShapingRulesItemOutput) Rules() GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItem) []GetWirelessSsidsTrafficShapingRulesItemRule {
		return v.Rules
	}).(GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput)
}

// Whether traffic shaping rules are applied to clients on your SSID.
func (o GetWirelessSsidsTrafficShapingRulesItemOutput) TrafficShapingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItem) bool { return v.TrafficShapingEnabled }).(pulumi.BoolOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRule struct {
	// A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
	Definitions []GetWirelessSsidsTrafficShapingRulesItemRuleDefinition `pulumi:"definitions"`
	// The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
	// For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
	DscpTagValue int `pulumi:"dscpTagValue"`
	// The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
	// null means 'Do not set PCP tag'.
	PcpTagValue int `pulumi:"pcpTagValue"`
	// An object describing the bandwidth settings for your rule.
	PerClientBandwidthLimits GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits `pulumi:"perClientBandwidthLimits"`
}

// GetWirelessSsidsTrafficShapingRulesItemRuleInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRuleArgs and GetWirelessSsidsTrafficShapingRulesItemRuleOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRuleInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRuleArgs{...}
type GetWirelessSsidsTrafficShapingRulesItemRuleInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRuleOutput() GetWirelessSsidsTrafficShapingRulesItemRuleOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRuleOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRuleArgs struct {
	// A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
	Definitions GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayInput `pulumi:"definitions"`
	// The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
	// For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
	DscpTagValue pulumi.IntInput `pulumi:"dscpTagValue"`
	// The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
	// null means 'Do not set PCP tag'.
	PcpTagValue pulumi.IntInput `pulumi:"pcpTagValue"`
	// An object describing the bandwidth settings for your rule.
	PerClientBandwidthLimits GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsInput `pulumi:"perClientBandwidthLimits"`
}

func (GetWirelessSsidsTrafficShapingRulesItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleArgs) ToGetWirelessSsidsTrafficShapingRulesItemRuleOutput() GetWirelessSsidsTrafficShapingRulesItemRuleOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRuleOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleArgs) ToGetWirelessSsidsTrafficShapingRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRuleOutput)
}

// GetWirelessSsidsTrafficShapingRulesItemRuleArrayInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRuleArray and GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRuleArrayInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRuleArray{ GetWirelessSsidsTrafficShapingRulesItemRuleArgs{...} }
type GetWirelessSsidsTrafficShapingRulesItemRuleArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRuleArray []GetWirelessSsidsTrafficShapingRulesItemRuleInput

func (GetWirelessSsidsTrafficShapingRulesItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsTrafficShapingRulesItemRule)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleArray) ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleArray) ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRuleOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleOutput() GetWirelessSsidsTrafficShapingRulesItemRuleOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleOutput {
	return o
}

// A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) Definitions() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRule) []GetWirelessSsidsTrafficShapingRulesItemRuleDefinition {
		return v.Definitions
	}).(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput)
}

// The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
// For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) DscpTagValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRule) int { return v.DscpTagValue }).(pulumi.IntOutput)
}

// The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
// null means 'Do not set PCP tag'.
func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) PcpTagValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRule) int { return v.PcpTagValue }).(pulumi.IntOutput)
}

// An object describing the bandwidth settings for your rule.
func (o GetWirelessSsidsTrafficShapingRulesItemRuleOutput) PerClientBandwidthLimits() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRule) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits {
		return v.PerClientBandwidthLimits
	}).(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsTrafficShapingRulesItemRule)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsTrafficShapingRulesItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsTrafficShapingRulesItemRule {
		return vs[0].([]GetWirelessSsidsTrafficShapingRulesItemRule)[vs[1].(int)]
	}).(GetWirelessSsidsTrafficShapingRulesItemRuleOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRuleDefinition struct {
	// The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
	Type string `pulumi:"type"`
	// If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
	// a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
	// "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
	// custom ports.
	//  If "type" is 'application' or 'applicationCategory', then "value" must be an object
	// with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
	// application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
	// endpoint).
	Value string `pulumi:"value"`
}

// GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs and GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs{...}
type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs struct {
	// The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
	Type pulumi.StringInput `pulumi:"type"`
	// If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
	// a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
	// "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
	// custom ports.
	//  If "type" is 'application' or 'applicationCategory', then "value" must be an object
	// with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
	// application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
	// endpoint).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleDefinition)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput)
}

// GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray and GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray{ GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs{...} }
type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray []GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionInput

func (GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsTrafficShapingRulesItemRuleDefinition)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleDefinition)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput {
	return o
}

// The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRuleDefinition) string { return v.Type }).(pulumi.StringOutput)
}

// If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
// a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
// "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
// custom ports.
//
//	If "type" is 'application' or 'applicationCategory', then "value" must be an object
//
// with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
// application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
// endpoint).
func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRuleDefinition) string { return v.Value }).(pulumi.StringOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsTrafficShapingRulesItemRuleDefinition)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput() GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput) ToGetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsTrafficShapingRulesItemRuleDefinition {
		return vs[0].([]GetWirelessSsidsTrafficShapingRulesItemRuleDefinition)[vs[1].(int)]
	}).(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits struct {
	// The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
	BandwidthLimits GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits `pulumi:"bandwidthLimits"`
	// How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
	Settings string `pulumi:"settings"`
}

// GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs and GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs{...}
type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs struct {
	// The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
	BandwidthLimits GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsInput `pulumi:"bandwidthLimits"`
	// How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
	Settings pulumi.StringInput `pulumi:"settings"`
}

func (GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput {
	return o
}

// The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput) BandwidthLimits() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits {
		return v.BandwidthLimits
	}).(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput)
}

// How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput) Settings() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimits) string { return v.Settings }).(pulumi.StringOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits struct {
	// The maximum download limit (integer, in Kbps).
	LimitDown int `pulumi:"limitDown"`
	// The maximum upload limit (integer, in Kbps).
	LimitUp int `pulumi:"limitUp"`
}

// GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsInput is an input type that accepts GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs and GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput values.
// You can construct a concrete instance of `GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsInput` via:
//
//	GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs{...}
type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsInput interface {
	pulumi.Input

	ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput
	ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutputWithContext(context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs struct {
	// The maximum download limit (integer, in Kbps).
	LimitDown pulumi.IntInput `pulumi:"limitDown"`
	// The maximum upload limit (integer, in Kbps).
	LimitUp pulumi.IntInput `pulumi:"limitUp"`
}

func (GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits)(nil)).Elem()
}

func (i GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput {
	return i.ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutputWithContext(context.Background())
}

func (i GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput)
}

type GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits)(nil)).Elem()
}

func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput() GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput {
	return o
}

func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput) ToGetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutputWithContext(ctx context.Context) GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput {
	return o
}

// The maximum download limit (integer, in Kbps).
func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput) LimitDown() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits) int {
		return v.LimitDown
	}).(pulumi.IntOutput)
}

// The maximum upload limit (integer, in Kbps).
func (o GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput) LimitUp() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimits) int {
		return v.LimitUp
	}).(pulumi.IntOutput)
}

type GetWirelessSsidsVpnItem struct {
	Concentrator GetWirelessSsidsVpnItemConcentrator `pulumi:"concentrator"`
	Failover     GetWirelessSsidsVpnItemFailover     `pulumi:"failover"`
	SplitTunnel  GetWirelessSsidsVpnItemSplitTunnel  `pulumi:"splitTunnel"`
}

// GetWirelessSsidsVpnItemInput is an input type that accepts GetWirelessSsidsVpnItemArgs and GetWirelessSsidsVpnItemOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemInput` via:
//
//	GetWirelessSsidsVpnItemArgs{...}
type GetWirelessSsidsVpnItemInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemOutput() GetWirelessSsidsVpnItemOutput
	ToGetWirelessSsidsVpnItemOutputWithContext(context.Context) GetWirelessSsidsVpnItemOutput
}

type GetWirelessSsidsVpnItemArgs struct {
	Concentrator GetWirelessSsidsVpnItemConcentratorInput `pulumi:"concentrator"`
	Failover     GetWirelessSsidsVpnItemFailoverInput     `pulumi:"failover"`
	SplitTunnel  GetWirelessSsidsVpnItemSplitTunnelInput  `pulumi:"splitTunnel"`
}

func (GetWirelessSsidsVpnItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItem)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemArgs) ToGetWirelessSsidsVpnItemOutput() GetWirelessSsidsVpnItemOutput {
	return i.ToGetWirelessSsidsVpnItemOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemArgs) ToGetWirelessSsidsVpnItemOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemOutput)
}

type GetWirelessSsidsVpnItemOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItem)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemOutput) ToGetWirelessSsidsVpnItemOutput() GetWirelessSsidsVpnItemOutput {
	return o
}

func (o GetWirelessSsidsVpnItemOutput) ToGetWirelessSsidsVpnItemOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemOutput {
	return o
}

func (o GetWirelessSsidsVpnItemOutput) Concentrator() GetWirelessSsidsVpnItemConcentratorOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItem) GetWirelessSsidsVpnItemConcentrator { return v.Concentrator }).(GetWirelessSsidsVpnItemConcentratorOutput)
}

func (o GetWirelessSsidsVpnItemOutput) Failover() GetWirelessSsidsVpnItemFailoverOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItem) GetWirelessSsidsVpnItemFailover { return v.Failover }).(GetWirelessSsidsVpnItemFailoverOutput)
}

func (o GetWirelessSsidsVpnItemOutput) SplitTunnel() GetWirelessSsidsVpnItemSplitTunnelOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItem) GetWirelessSsidsVpnItemSplitTunnel { return v.SplitTunnel }).(GetWirelessSsidsVpnItemSplitTunnelOutput)
}

type GetWirelessSsidsVpnItemConcentrator struct {
	Name      string `pulumi:"name"`
	NetworkId string `pulumi:"networkId"`
	VlanId    int    `pulumi:"vlanId"`
}

// GetWirelessSsidsVpnItemConcentratorInput is an input type that accepts GetWirelessSsidsVpnItemConcentratorArgs and GetWirelessSsidsVpnItemConcentratorOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemConcentratorInput` via:
//
//	GetWirelessSsidsVpnItemConcentratorArgs{...}
type GetWirelessSsidsVpnItemConcentratorInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemConcentratorOutput() GetWirelessSsidsVpnItemConcentratorOutput
	ToGetWirelessSsidsVpnItemConcentratorOutputWithContext(context.Context) GetWirelessSsidsVpnItemConcentratorOutput
}

type GetWirelessSsidsVpnItemConcentratorArgs struct {
	Name      pulumi.StringInput `pulumi:"name"`
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	VlanId    pulumi.IntInput    `pulumi:"vlanId"`
}

func (GetWirelessSsidsVpnItemConcentratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemConcentrator)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemConcentratorArgs) ToGetWirelessSsidsVpnItemConcentratorOutput() GetWirelessSsidsVpnItemConcentratorOutput {
	return i.ToGetWirelessSsidsVpnItemConcentratorOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemConcentratorArgs) ToGetWirelessSsidsVpnItemConcentratorOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemConcentratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemConcentratorOutput)
}

type GetWirelessSsidsVpnItemConcentratorOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemConcentratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemConcentrator)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemConcentratorOutput) ToGetWirelessSsidsVpnItemConcentratorOutput() GetWirelessSsidsVpnItemConcentratorOutput {
	return o
}

func (o GetWirelessSsidsVpnItemConcentratorOutput) ToGetWirelessSsidsVpnItemConcentratorOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemConcentratorOutput {
	return o
}

func (o GetWirelessSsidsVpnItemConcentratorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemConcentrator) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemConcentratorOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemConcentrator) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemConcentratorOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemConcentrator) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetWirelessSsidsVpnItemFailover struct {
	HeartbeatInterval int    `pulumi:"heartbeatInterval"`
	IdleTimeout       int    `pulumi:"idleTimeout"`
	RequestIp         string `pulumi:"requestIp"`
}

// GetWirelessSsidsVpnItemFailoverInput is an input type that accepts GetWirelessSsidsVpnItemFailoverArgs and GetWirelessSsidsVpnItemFailoverOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemFailoverInput` via:
//
//	GetWirelessSsidsVpnItemFailoverArgs{...}
type GetWirelessSsidsVpnItemFailoverInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemFailoverOutput() GetWirelessSsidsVpnItemFailoverOutput
	ToGetWirelessSsidsVpnItemFailoverOutputWithContext(context.Context) GetWirelessSsidsVpnItemFailoverOutput
}

type GetWirelessSsidsVpnItemFailoverArgs struct {
	HeartbeatInterval pulumi.IntInput    `pulumi:"heartbeatInterval"`
	IdleTimeout       pulumi.IntInput    `pulumi:"idleTimeout"`
	RequestIp         pulumi.StringInput `pulumi:"requestIp"`
}

func (GetWirelessSsidsVpnItemFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemFailover)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemFailoverArgs) ToGetWirelessSsidsVpnItemFailoverOutput() GetWirelessSsidsVpnItemFailoverOutput {
	return i.ToGetWirelessSsidsVpnItemFailoverOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemFailoverArgs) ToGetWirelessSsidsVpnItemFailoverOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemFailoverOutput)
}

type GetWirelessSsidsVpnItemFailoverOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemFailover)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemFailoverOutput) ToGetWirelessSsidsVpnItemFailoverOutput() GetWirelessSsidsVpnItemFailoverOutput {
	return o
}

func (o GetWirelessSsidsVpnItemFailoverOutput) ToGetWirelessSsidsVpnItemFailoverOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemFailoverOutput {
	return o
}

func (o GetWirelessSsidsVpnItemFailoverOutput) HeartbeatInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemFailover) int { return v.HeartbeatInterval }).(pulumi.IntOutput)
}

func (o GetWirelessSsidsVpnItemFailoverOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemFailover) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

func (o GetWirelessSsidsVpnItemFailoverOutput) RequestIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemFailover) string { return v.RequestIp }).(pulumi.StringOutput)
}

type GetWirelessSsidsVpnItemSplitTunnel struct {
	Enabled bool                                     `pulumi:"enabled"`
	Rules   []GetWirelessSsidsVpnItemSplitTunnelRule `pulumi:"rules"`
}

// GetWirelessSsidsVpnItemSplitTunnelInput is an input type that accepts GetWirelessSsidsVpnItemSplitTunnelArgs and GetWirelessSsidsVpnItemSplitTunnelOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemSplitTunnelInput` via:
//
//	GetWirelessSsidsVpnItemSplitTunnelArgs{...}
type GetWirelessSsidsVpnItemSplitTunnelInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemSplitTunnelOutput() GetWirelessSsidsVpnItemSplitTunnelOutput
	ToGetWirelessSsidsVpnItemSplitTunnelOutputWithContext(context.Context) GetWirelessSsidsVpnItemSplitTunnelOutput
}

type GetWirelessSsidsVpnItemSplitTunnelArgs struct {
	Enabled pulumi.BoolInput                                 `pulumi:"enabled"`
	Rules   GetWirelessSsidsVpnItemSplitTunnelRuleArrayInput `pulumi:"rules"`
}

func (GetWirelessSsidsVpnItemSplitTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnel)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemSplitTunnelArgs) ToGetWirelessSsidsVpnItemSplitTunnelOutput() GetWirelessSsidsVpnItemSplitTunnelOutput {
	return i.ToGetWirelessSsidsVpnItemSplitTunnelOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemSplitTunnelArgs) ToGetWirelessSsidsVpnItemSplitTunnelOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemSplitTunnelOutput)
}

type GetWirelessSsidsVpnItemSplitTunnelOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemSplitTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnel)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemSplitTunnelOutput) ToGetWirelessSsidsVpnItemSplitTunnelOutput() GetWirelessSsidsVpnItemSplitTunnelOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelOutput) ToGetWirelessSsidsVpnItemSplitTunnelOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnel) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetWirelessSsidsVpnItemSplitTunnelOutput) Rules() GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnel) []GetWirelessSsidsVpnItemSplitTunnelRule { return v.Rules }).(GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput)
}

type GetWirelessSsidsVpnItemSplitTunnelRule struct {
	Comment  string `pulumi:"comment"`
	DestCidr string `pulumi:"destCidr"`
	DestPort string `pulumi:"destPort"`
	Policy   string `pulumi:"policy"`
	Protocol string `pulumi:"protocol"`
}

// GetWirelessSsidsVpnItemSplitTunnelRuleInput is an input type that accepts GetWirelessSsidsVpnItemSplitTunnelRuleArgs and GetWirelessSsidsVpnItemSplitTunnelRuleOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemSplitTunnelRuleInput` via:
//
//	GetWirelessSsidsVpnItemSplitTunnelRuleArgs{...}
type GetWirelessSsidsVpnItemSplitTunnelRuleInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemSplitTunnelRuleOutput() GetWirelessSsidsVpnItemSplitTunnelRuleOutput
	ToGetWirelessSsidsVpnItemSplitTunnelRuleOutputWithContext(context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleOutput
}

type GetWirelessSsidsVpnItemSplitTunnelRuleArgs struct {
	Comment  pulumi.StringInput `pulumi:"comment"`
	DestCidr pulumi.StringInput `pulumi:"destCidr"`
	DestPort pulumi.StringInput `pulumi:"destPort"`
	Policy   pulumi.StringInput `pulumi:"policy"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetWirelessSsidsVpnItemSplitTunnelRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnelRule)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemSplitTunnelRuleArgs) ToGetWirelessSsidsVpnItemSplitTunnelRuleOutput() GetWirelessSsidsVpnItemSplitTunnelRuleOutput {
	return i.ToGetWirelessSsidsVpnItemSplitTunnelRuleOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemSplitTunnelRuleArgs) ToGetWirelessSsidsVpnItemSplitTunnelRuleOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemSplitTunnelRuleOutput)
}

// GetWirelessSsidsVpnItemSplitTunnelRuleArrayInput is an input type that accepts GetWirelessSsidsVpnItemSplitTunnelRuleArray and GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput values.
// You can construct a concrete instance of `GetWirelessSsidsVpnItemSplitTunnelRuleArrayInput` via:
//
//	GetWirelessSsidsVpnItemSplitTunnelRuleArray{ GetWirelessSsidsVpnItemSplitTunnelRuleArgs{...} }
type GetWirelessSsidsVpnItemSplitTunnelRuleArrayInput interface {
	pulumi.Input

	ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput() GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput
	ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutputWithContext(context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput
}

type GetWirelessSsidsVpnItemSplitTunnelRuleArray []GetWirelessSsidsVpnItemSplitTunnelRuleInput

func (GetWirelessSsidsVpnItemSplitTunnelRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsVpnItemSplitTunnelRule)(nil)).Elem()
}

func (i GetWirelessSsidsVpnItemSplitTunnelRuleArray) ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput() GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput {
	return i.ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutputWithContext(context.Background())
}

func (i GetWirelessSsidsVpnItemSplitTunnelRuleArray) ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput)
}

type GetWirelessSsidsVpnItemSplitTunnelRuleOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemSplitTunnelRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnelRule)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) ToGetWirelessSsidsVpnItemSplitTunnelRuleOutput() GetWirelessSsidsVpnItemSplitTunnelRuleOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) ToGetWirelessSsidsVpnItemSplitTunnelRuleOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnelRule) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) DestCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnelRule) string { return v.DestCidr }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnelRule) string { return v.DestPort }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnelRule) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessSsidsVpnItemSplitTunnelRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessSsidsVpnItemSplitTunnelRule)(nil)).Elem()
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput) ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput() GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput) ToGetWirelessSsidsVpnItemSplitTunnelRuleArrayOutputWithContext(ctx context.Context) GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput {
	return o
}

func (o GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput) Index(i pulumi.IntInput) GetWirelessSsidsVpnItemSplitTunnelRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessSsidsVpnItemSplitTunnelRule {
		return vs[0].([]GetWirelessSsidsVpnItemSplitTunnelRule)[vs[1].(int)]
	}).(GetWirelessSsidsVpnItemSplitTunnelRuleOutput)
}

type GetWirelessUsageHistoryItem struct {
	// The end time of the query range
	EndTs string `pulumi:"endTs"`
	// Received kilobytes-per-second
	ReceivedKbps int `pulumi:"receivedKbps"`
	// Sent kilobytes-per-second
	SentKbps int `pulumi:"sentKbps"`
	// The start time of the query range
	StartTs string `pulumi:"startTs"`
	// Total usage in kilobytes-per-second
	TotalKbps int `pulumi:"totalKbps"`
}

// GetWirelessUsageHistoryItemInput is an input type that accepts GetWirelessUsageHistoryItemArgs and GetWirelessUsageHistoryItemOutput values.
// You can construct a concrete instance of `GetWirelessUsageHistoryItemInput` via:
//
//	GetWirelessUsageHistoryItemArgs{...}
type GetWirelessUsageHistoryItemInput interface {
	pulumi.Input

	ToGetWirelessUsageHistoryItemOutput() GetWirelessUsageHistoryItemOutput
	ToGetWirelessUsageHistoryItemOutputWithContext(context.Context) GetWirelessUsageHistoryItemOutput
}

type GetWirelessUsageHistoryItemArgs struct {
	// The end time of the query range
	EndTs pulumi.StringInput `pulumi:"endTs"`
	// Received kilobytes-per-second
	ReceivedKbps pulumi.IntInput `pulumi:"receivedKbps"`
	// Sent kilobytes-per-second
	SentKbps pulumi.IntInput `pulumi:"sentKbps"`
	// The start time of the query range
	StartTs pulumi.StringInput `pulumi:"startTs"`
	// Total usage in kilobytes-per-second
	TotalKbps pulumi.IntInput `pulumi:"totalKbps"`
}

func (GetWirelessUsageHistoryItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessUsageHistoryItem)(nil)).Elem()
}

func (i GetWirelessUsageHistoryItemArgs) ToGetWirelessUsageHistoryItemOutput() GetWirelessUsageHistoryItemOutput {
	return i.ToGetWirelessUsageHistoryItemOutputWithContext(context.Background())
}

func (i GetWirelessUsageHistoryItemArgs) ToGetWirelessUsageHistoryItemOutputWithContext(ctx context.Context) GetWirelessUsageHistoryItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessUsageHistoryItemOutput)
}

// GetWirelessUsageHistoryItemArrayInput is an input type that accepts GetWirelessUsageHistoryItemArray and GetWirelessUsageHistoryItemArrayOutput values.
// You can construct a concrete instance of `GetWirelessUsageHistoryItemArrayInput` via:
//
//	GetWirelessUsageHistoryItemArray{ GetWirelessUsageHistoryItemArgs{...} }
type GetWirelessUsageHistoryItemArrayInput interface {
	pulumi.Input

	ToGetWirelessUsageHistoryItemArrayOutput() GetWirelessUsageHistoryItemArrayOutput
	ToGetWirelessUsageHistoryItemArrayOutputWithContext(context.Context) GetWirelessUsageHistoryItemArrayOutput
}

type GetWirelessUsageHistoryItemArray []GetWirelessUsageHistoryItemInput

func (GetWirelessUsageHistoryItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessUsageHistoryItem)(nil)).Elem()
}

func (i GetWirelessUsageHistoryItemArray) ToGetWirelessUsageHistoryItemArrayOutput() GetWirelessUsageHistoryItemArrayOutput {
	return i.ToGetWirelessUsageHistoryItemArrayOutputWithContext(context.Background())
}

func (i GetWirelessUsageHistoryItemArray) ToGetWirelessUsageHistoryItemArrayOutputWithContext(ctx context.Context) GetWirelessUsageHistoryItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessUsageHistoryItemArrayOutput)
}

type GetWirelessUsageHistoryItemOutput struct{ *pulumi.OutputState }

func (GetWirelessUsageHistoryItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessUsageHistoryItem)(nil)).Elem()
}

func (o GetWirelessUsageHistoryItemOutput) ToGetWirelessUsageHistoryItemOutput() GetWirelessUsageHistoryItemOutput {
	return o
}

func (o GetWirelessUsageHistoryItemOutput) ToGetWirelessUsageHistoryItemOutputWithContext(ctx context.Context) GetWirelessUsageHistoryItemOutput {
	return o
}

// The end time of the query range
func (o GetWirelessUsageHistoryItemOutput) EndTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessUsageHistoryItem) string { return v.EndTs }).(pulumi.StringOutput)
}

// Received kilobytes-per-second
func (o GetWirelessUsageHistoryItemOutput) ReceivedKbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessUsageHistoryItem) int { return v.ReceivedKbps }).(pulumi.IntOutput)
}

// Sent kilobytes-per-second
func (o GetWirelessUsageHistoryItemOutput) SentKbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessUsageHistoryItem) int { return v.SentKbps }).(pulumi.IntOutput)
}

// The start time of the query range
func (o GetWirelessUsageHistoryItemOutput) StartTs() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessUsageHistoryItem) string { return v.StartTs }).(pulumi.StringOutput)
}

// Total usage in kilobytes-per-second
func (o GetWirelessUsageHistoryItemOutput) TotalKbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessUsageHistoryItem) int { return v.TotalKbps }).(pulumi.IntOutput)
}

type GetWirelessUsageHistoryItemArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessUsageHistoryItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessUsageHistoryItem)(nil)).Elem()
}

func (o GetWirelessUsageHistoryItemArrayOutput) ToGetWirelessUsageHistoryItemArrayOutput() GetWirelessUsageHistoryItemArrayOutput {
	return o
}

func (o GetWirelessUsageHistoryItemArrayOutput) ToGetWirelessUsageHistoryItemArrayOutputWithContext(ctx context.Context) GetWirelessUsageHistoryItemArrayOutput {
	return o
}

func (o GetWirelessUsageHistoryItemArrayOutput) Index(i pulumi.IntInput) GetWirelessUsageHistoryItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessUsageHistoryItem {
		return vs[0].([]GetWirelessUsageHistoryItem)[vs[1].(int)]
	}).(GetWirelessUsageHistoryItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus7Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus8Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9Input)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus9Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsInput)(nil)).Elem(), GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemSixGhzSettingsInput)(nil)).Elem(), GetWirelessRfProfilesItemSixGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemTransmissionInput)(nil)).Elem(), GetWirelessRfProfilesItemTransmissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRfProfilesItemTwoFourGhzSettingsInput)(nil)).Elem(), GetWirelessRfProfilesItemTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSettingsItemInput)(nil)).Elem(), GetWirelessSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSettingsItemNamedVlansInput)(nil)).Elem(), GetWirelessSettingsItemNamedVlansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringInput)(nil)).Elem(), GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSettingsItemRegulatoryDomainInput)(nil)).Elem(), GetWirelessSettingsItemRegulatoryDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSignalQualityHistoryItemInput)(nil)).Elem(), GetWirelessSignalQualityHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSignalQualityHistoryItemArrayInput)(nil)).Elem(), GetWirelessSignalQualityHistoryItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemInput)(nil)).Elem(), GetWirelessSsidsBonjourForwardingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemExceptionInput)(nil)).Elem(), GetWirelessSsidsBonjourForwardingItemExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemRuleInput)(nil)).Elem(), GetWirelessSsidsBonjourForwardingItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsBonjourForwardingItemRuleArrayInput)(nil)).Elem(), GetWirelessSsidsBonjourForwardingItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItemInput)(nil)).Elem(), GetWirelessSsidsDeviceTypeGroupPoliciesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyInput)(nil)).Elem(), GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayInput)(nil)).Elem(), GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsEapOverrideItemInput)(nil)).Elem(), GetWirelessSsidsEapOverrideItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsEapOverrideItemEapolKeyInput)(nil)).Elem(), GetWirelessSsidsEapOverrideItemEapolKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsEapOverrideItemIdentityInput)(nil)).Elem(), GetWirelessSsidsEapOverrideItemIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItemInput)(nil)).Elem(), GetWirelessSsidsFirewallL3FirewallRulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItemRuleInput)(nil)).Elem(), GetWirelessSsidsFirewallL3FirewallRulesItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayInput)(nil)).Elem(), GetWirelessSsidsFirewallL3FirewallRulesItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItemInput)(nil)).Elem(), GetWirelessSsidsFirewallL7FirewallRulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItemRuleInput)(nil)).Elem(), GetWirelessSsidsFirewallL7FirewallRulesItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayInput)(nil)).Elem(), GetWirelessSsidsFirewallL7FirewallRulesItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemMccMncInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemMccMncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemMccMncArrayInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemMccMncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemNaiRealmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmArrayInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemNaiRealmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethodInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemNaiRealmMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemNaiRealmMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemOperatorInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemOperatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsHotspot20ItemVenueInput)(nil)).Elem(), GetWirelessSsidsHotspot20ItemVenueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsIdentityPsksItemInput)(nil)).Elem(), GetWirelessSsidsIdentityPsksItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsIdentityPsksItemArrayInput)(nil)).Elem(), GetWirelessSsidsIdentityPsksItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemInput)(nil)).Elem(), GetWirelessSsidsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemArrayInput)(nil)).Elem(), GetWirelessSsidsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemRadiusAccountingServerInput)(nil)).Elem(), GetWirelessSsidsItemRadiusAccountingServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemRadiusAccountingServerArrayInput)(nil)).Elem(), GetWirelessSsidsItemRadiusAccountingServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemRadiusServerInput)(nil)).Elem(), GetWirelessSsidsItemRadiusServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsItemRadiusServerArrayInput)(nil)).Elem(), GetWirelessSsidsItemRadiusServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSchedulesItemInput)(nil)).Elem(), GetWirelessSsidsSchedulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSchedulesItemRangeInput)(nil)).Elem(), GetWirelessSsidsSchedulesItemRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSchedulesItemRangeArrayInput)(nil)).Elem(), GetWirelessSsidsSchedulesItemRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBillingInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemBillingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemBillingFreeAccessInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemBillingFreeAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemGuestSponsorshipInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemGuestSponsorshipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSelfRegistrationInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSelfRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollmentInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSentryEnrollmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashImageInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSplashImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashLogoInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSplashLogoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontInput)(nil)).Elem(), GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleArrayInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsInput)(nil)).Elem(), GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemInput)(nil)).Elem(), GetWirelessSsidsVpnItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemConcentratorInput)(nil)).Elem(), GetWirelessSsidsVpnItemConcentratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemFailoverInput)(nil)).Elem(), GetWirelessSsidsVpnItemFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnelInput)(nil)).Elem(), GetWirelessSsidsVpnItemSplitTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnelRuleInput)(nil)).Elem(), GetWirelessSsidsVpnItemSplitTunnelRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessSsidsVpnItemSplitTunnelRuleArrayInput)(nil)).Elem(), GetWirelessSsidsVpnItemSplitTunnelRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessUsageHistoryItemInput)(nil)).Elem(), GetWirelessUsageHistoryItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessUsageHistoryItemArrayInput)(nil)).Elem(), GetWirelessUsageHistoryItemArray{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus1BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus2Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus2BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus3Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus3BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus4Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus4BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus5Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus5BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus6Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus6BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus7Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus7BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus8Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus8BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus9Output{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemPerSsidSettingsStatus9BandsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemSixGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemTransmissionOutput{})
	pulumi.RegisterOutputType(GetWirelessRfProfilesItemTwoFourGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetWirelessSettingsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSettingsItemNamedVlansOutput{})
	pulumi.RegisterOutputType(GetWirelessSettingsItemNamedVlansPoolDhcpMonitoringOutput{})
	pulumi.RegisterOutputType(GetWirelessSettingsItemRegulatoryDomainOutput{})
	pulumi.RegisterOutputType(GetWirelessSignalQualityHistoryItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSignalQualityHistoryItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsBonjourForwardingItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsBonjourForwardingItemExceptionOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsBonjourForwardingItemRuleOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsBonjourForwardingItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsDeviceTypeGroupPoliciesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsDeviceTypeGroupPoliciesItemDeviceTypePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsEapOverrideItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsEapOverrideItemEapolKeyOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsEapOverrideItemIdentityOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL3FirewallRulesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL3FirewallRulesItemRuleOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL3FirewallRulesItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL7FirewallRulesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL7FirewallRulesItemRuleOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsFirewallL7FirewallRulesItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemMccMncOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemMccMncArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemNaiRealmOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemNaiRealmArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemNaiRealmMethodOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemNaiRealmMethodArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemNaiRealmMethodAuthenticationTypesOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemOperatorOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsHotspot20ItemVenueOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsIdentityPsksItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsIdentityPsksItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemRadiusAccountingServerOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemRadiusAccountingServerArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemRadiusServerOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsItemRadiusServerArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSchedulesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSchedulesItemRangeOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSchedulesItemRangeArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemBillingOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemBillingFreeAccessOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemGuestSponsorshipOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSelfRegistrationOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSentryEnrollmentOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSentryEnrollmentSystemsManagerNetworkOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSplashImageOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSplashLogoOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsSplashSettingsItemSplashPrepaidFrontOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRuleOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRuleDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsTrafficShapingRulesItemRulePerClientBandwidthLimitsBandwidthLimitsOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemConcentratorOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemFailoverOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemSplitTunnelOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemSplitTunnelRuleOutput{})
	pulumi.RegisterOutputType(GetWirelessSsidsVpnItemSplitTunnelRuleArrayOutput{})
	pulumi.RegisterOutputType(GetWirelessUsageHistoryItemOutput{})
	pulumi.RegisterOutputType(GetWirelessUsageHistoryItemArrayOutput{})
}
