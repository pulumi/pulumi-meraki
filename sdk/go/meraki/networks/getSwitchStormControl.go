// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupSwitchStormControl(ctx, &networks.LookupSwitchStormControlArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchStormControlExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchStormControl(ctx *pulumi.Context, args *LookupSwitchStormControlArgs, opts ...pulumi.InvokeOption) (*LookupSwitchStormControlResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchStormControlResult
	err := ctx.Invoke("meraki:networks/getSwitchStormControl:getSwitchStormControl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchStormControl.
type LookupSwitchStormControlArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getSwitchStormControl.
type LookupSwitchStormControlResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                    `pulumi:"id"`
	Item GetSwitchStormControlItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupSwitchStormControlOutput(ctx *pulumi.Context, args LookupSwitchStormControlOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchStormControlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchStormControlResult, error) {
			args := v.(LookupSwitchStormControlArgs)
			r, err := LookupSwitchStormControl(ctx, &args, opts...)
			var s LookupSwitchStormControlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSwitchStormControlResultOutput)
}

// A collection of arguments for invoking getSwitchStormControl.
type LookupSwitchStormControlOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupSwitchStormControlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStormControlArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchStormControl.
type LookupSwitchStormControlResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchStormControlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStormControlResult)(nil)).Elem()
}

func (o LookupSwitchStormControlResultOutput) ToLookupSwitchStormControlResultOutput() LookupSwitchStormControlResultOutput {
	return o
}

func (o LookupSwitchStormControlResultOutput) ToLookupSwitchStormControlResultOutputWithContext(ctx context.Context) LookupSwitchStormControlResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchStormControlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStormControlResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchStormControlResultOutput) Item() GetSwitchStormControlItemOutput {
	return o.ApplyT(func(v LookupSwitchStormControlResult) GetSwitchStormControlItem { return v.Item }).(GetSwitchStormControlItemOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchStormControlResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStormControlResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchStormControlResultOutput{})
}
