// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewApplianceConnectivityMonitoringDestinations(ctx, "example", &networks.ApplianceConnectivityMonitoringDestinationsArgs{
//				Destinations: networks.ApplianceConnectivityMonitoringDestinationsDestinationArray{
//					&networks.ApplianceConnectivityMonitoringDestinationsDestinationArgs{
//						Default:     pulumi.Bool(false),
//						Description: pulumi.String("Google"),
//						Ip:          pulumi.String("8.8.8.8"),
//					},
//				},
//				NetworkId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksApplianceConnectivityMonitoringDestinationsExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/applianceConnectivityMonitoringDestinations:ApplianceConnectivityMonitoringDestinations example "network_id"
// ```
type ApplianceConnectivityMonitoringDestinations struct {
	pulumi.CustomResourceState

	// The list of connectivity monitoring destinations
	Destinations ApplianceConnectivityMonitoringDestinationsDestinationArrayOutput `pulumi:"destinations"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewApplianceConnectivityMonitoringDestinations registers a new resource with the given unique name, arguments, and options.
func NewApplianceConnectivityMonitoringDestinations(ctx *pulumi.Context,
	name string, args *ApplianceConnectivityMonitoringDestinationsArgs, opts ...pulumi.ResourceOption) (*ApplianceConnectivityMonitoringDestinations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceConnectivityMonitoringDestinations
	err := ctx.RegisterResource("meraki:networks/applianceConnectivityMonitoringDestinations:ApplianceConnectivityMonitoringDestinations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceConnectivityMonitoringDestinations gets an existing ApplianceConnectivityMonitoringDestinations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceConnectivityMonitoringDestinations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceConnectivityMonitoringDestinationsState, opts ...pulumi.ResourceOption) (*ApplianceConnectivityMonitoringDestinations, error) {
	var resource ApplianceConnectivityMonitoringDestinations
	err := ctx.ReadResource("meraki:networks/applianceConnectivityMonitoringDestinations:ApplianceConnectivityMonitoringDestinations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceConnectivityMonitoringDestinations resources.
type applianceConnectivityMonitoringDestinationsState struct {
	// The list of connectivity monitoring destinations
	Destinations []ApplianceConnectivityMonitoringDestinationsDestination `pulumi:"destinations"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type ApplianceConnectivityMonitoringDestinationsState struct {
	// The list of connectivity monitoring destinations
	Destinations ApplianceConnectivityMonitoringDestinationsDestinationArrayInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (ApplianceConnectivityMonitoringDestinationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceConnectivityMonitoringDestinationsState)(nil)).Elem()
}

type applianceConnectivityMonitoringDestinationsArgs struct {
	// The list of connectivity monitoring destinations
	Destinations []ApplianceConnectivityMonitoringDestinationsDestination `pulumi:"destinations"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a ApplianceConnectivityMonitoringDestinations resource.
type ApplianceConnectivityMonitoringDestinationsArgs struct {
	// The list of connectivity monitoring destinations
	Destinations ApplianceConnectivityMonitoringDestinationsDestinationArrayInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (ApplianceConnectivityMonitoringDestinationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceConnectivityMonitoringDestinationsArgs)(nil)).Elem()
}

type ApplianceConnectivityMonitoringDestinationsInput interface {
	pulumi.Input

	ToApplianceConnectivityMonitoringDestinationsOutput() ApplianceConnectivityMonitoringDestinationsOutput
	ToApplianceConnectivityMonitoringDestinationsOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsOutput
}

func (*ApplianceConnectivityMonitoringDestinations) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (i *ApplianceConnectivityMonitoringDestinations) ToApplianceConnectivityMonitoringDestinationsOutput() ApplianceConnectivityMonitoringDestinationsOutput {
	return i.ToApplianceConnectivityMonitoringDestinationsOutputWithContext(context.Background())
}

func (i *ApplianceConnectivityMonitoringDestinations) ToApplianceConnectivityMonitoringDestinationsOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceConnectivityMonitoringDestinationsOutput)
}

// ApplianceConnectivityMonitoringDestinationsArrayInput is an input type that accepts ApplianceConnectivityMonitoringDestinationsArray and ApplianceConnectivityMonitoringDestinationsArrayOutput values.
// You can construct a concrete instance of `ApplianceConnectivityMonitoringDestinationsArrayInput` via:
//
//	ApplianceConnectivityMonitoringDestinationsArray{ ApplianceConnectivityMonitoringDestinationsArgs{...} }
type ApplianceConnectivityMonitoringDestinationsArrayInput interface {
	pulumi.Input

	ToApplianceConnectivityMonitoringDestinationsArrayOutput() ApplianceConnectivityMonitoringDestinationsArrayOutput
	ToApplianceConnectivityMonitoringDestinationsArrayOutputWithContext(context.Context) ApplianceConnectivityMonitoringDestinationsArrayOutput
}

type ApplianceConnectivityMonitoringDestinationsArray []ApplianceConnectivityMonitoringDestinationsInput

func (ApplianceConnectivityMonitoringDestinationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (i ApplianceConnectivityMonitoringDestinationsArray) ToApplianceConnectivityMonitoringDestinationsArrayOutput() ApplianceConnectivityMonitoringDestinationsArrayOutput {
	return i.ToApplianceConnectivityMonitoringDestinationsArrayOutputWithContext(context.Background())
}

func (i ApplianceConnectivityMonitoringDestinationsArray) ToApplianceConnectivityMonitoringDestinationsArrayOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceConnectivityMonitoringDestinationsArrayOutput)
}

// ApplianceConnectivityMonitoringDestinationsMapInput is an input type that accepts ApplianceConnectivityMonitoringDestinationsMap and ApplianceConnectivityMonitoringDestinationsMapOutput values.
// You can construct a concrete instance of `ApplianceConnectivityMonitoringDestinationsMapInput` via:
//
//	ApplianceConnectivityMonitoringDestinationsMap{ "key": ApplianceConnectivityMonitoringDestinationsArgs{...} }
type ApplianceConnectivityMonitoringDestinationsMapInput interface {
	pulumi.Input

	ToApplianceConnectivityMonitoringDestinationsMapOutput() ApplianceConnectivityMonitoringDestinationsMapOutput
	ToApplianceConnectivityMonitoringDestinationsMapOutputWithContext(context.Context) ApplianceConnectivityMonitoringDestinationsMapOutput
}

type ApplianceConnectivityMonitoringDestinationsMap map[string]ApplianceConnectivityMonitoringDestinationsInput

func (ApplianceConnectivityMonitoringDestinationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (i ApplianceConnectivityMonitoringDestinationsMap) ToApplianceConnectivityMonitoringDestinationsMapOutput() ApplianceConnectivityMonitoringDestinationsMapOutput {
	return i.ToApplianceConnectivityMonitoringDestinationsMapOutputWithContext(context.Background())
}

func (i ApplianceConnectivityMonitoringDestinationsMap) ToApplianceConnectivityMonitoringDestinationsMapOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceConnectivityMonitoringDestinationsMapOutput)
}

type ApplianceConnectivityMonitoringDestinationsOutput struct{ *pulumi.OutputState }

func (ApplianceConnectivityMonitoringDestinationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (o ApplianceConnectivityMonitoringDestinationsOutput) ToApplianceConnectivityMonitoringDestinationsOutput() ApplianceConnectivityMonitoringDestinationsOutput {
	return o
}

func (o ApplianceConnectivityMonitoringDestinationsOutput) ToApplianceConnectivityMonitoringDestinationsOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsOutput {
	return o
}

// The list of connectivity monitoring destinations
func (o ApplianceConnectivityMonitoringDestinationsOutput) Destinations() ApplianceConnectivityMonitoringDestinationsDestinationArrayOutput {
	return o.ApplyT(func(v *ApplianceConnectivityMonitoringDestinations) ApplianceConnectivityMonitoringDestinationsDestinationArrayOutput {
		return v.Destinations
	}).(ApplianceConnectivityMonitoringDestinationsDestinationArrayOutput)
}

// networkId path parameter. Network ID
func (o ApplianceConnectivityMonitoringDestinationsOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceConnectivityMonitoringDestinations) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type ApplianceConnectivityMonitoringDestinationsArrayOutput struct{ *pulumi.OutputState }

func (ApplianceConnectivityMonitoringDestinationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (o ApplianceConnectivityMonitoringDestinationsArrayOutput) ToApplianceConnectivityMonitoringDestinationsArrayOutput() ApplianceConnectivityMonitoringDestinationsArrayOutput {
	return o
}

func (o ApplianceConnectivityMonitoringDestinationsArrayOutput) ToApplianceConnectivityMonitoringDestinationsArrayOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsArrayOutput {
	return o
}

func (o ApplianceConnectivityMonitoringDestinationsArrayOutput) Index(i pulumi.IntInput) ApplianceConnectivityMonitoringDestinationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceConnectivityMonitoringDestinations {
		return vs[0].([]*ApplianceConnectivityMonitoringDestinations)[vs[1].(int)]
	}).(ApplianceConnectivityMonitoringDestinationsOutput)
}

type ApplianceConnectivityMonitoringDestinationsMapOutput struct{ *pulumi.OutputState }

func (ApplianceConnectivityMonitoringDestinationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceConnectivityMonitoringDestinations)(nil)).Elem()
}

func (o ApplianceConnectivityMonitoringDestinationsMapOutput) ToApplianceConnectivityMonitoringDestinationsMapOutput() ApplianceConnectivityMonitoringDestinationsMapOutput {
	return o
}

func (o ApplianceConnectivityMonitoringDestinationsMapOutput) ToApplianceConnectivityMonitoringDestinationsMapOutputWithContext(ctx context.Context) ApplianceConnectivityMonitoringDestinationsMapOutput {
	return o
}

func (o ApplianceConnectivityMonitoringDestinationsMapOutput) MapIndex(k pulumi.StringInput) ApplianceConnectivityMonitoringDestinationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceConnectivityMonitoringDestinations {
		return vs[0].(map[string]*ApplianceConnectivityMonitoringDestinations)[vs[1].(string)]
	}).(ApplianceConnectivityMonitoringDestinationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceConnectivityMonitoringDestinationsInput)(nil)).Elem(), &ApplianceConnectivityMonitoringDestinations{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceConnectivityMonitoringDestinationsArrayInput)(nil)).Elem(), ApplianceConnectivityMonitoringDestinationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceConnectivityMonitoringDestinationsMapInput)(nil)).Elem(), ApplianceConnectivityMonitoringDestinationsMap{})
	pulumi.RegisterOutputType(ApplianceConnectivityMonitoringDestinationsOutput{})
	pulumi.RegisterOutputType(ApplianceConnectivityMonitoringDestinationsArrayOutput{})
	pulumi.RegisterOutputType(ApplianceConnectivityMonitoringDestinationsMapOutput{})
}
