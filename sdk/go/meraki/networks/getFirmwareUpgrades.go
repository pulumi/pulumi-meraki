// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupFirmwareUpgrades(ctx, &networks.LookupFirmwareUpgradesArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksFirmwareUpgradesExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupFirmwareUpgrades(ctx *pulumi.Context, args *LookupFirmwareUpgradesArgs, opts ...pulumi.InvokeOption) (*LookupFirmwareUpgradesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirmwareUpgradesResult
	err := ctx.Invoke("meraki:networks/getFirmwareUpgrades:getFirmwareUpgrades", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirmwareUpgrades.
type LookupFirmwareUpgradesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getFirmwareUpgrades.
type LookupFirmwareUpgradesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                  `pulumi:"id"`
	Item GetFirmwareUpgradesItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupFirmwareUpgradesOutput(ctx *pulumi.Context, args LookupFirmwareUpgradesOutputArgs, opts ...pulumi.InvokeOption) LookupFirmwareUpgradesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirmwareUpgradesResult, error) {
			args := v.(LookupFirmwareUpgradesArgs)
			r, err := LookupFirmwareUpgrades(ctx, &args, opts...)
			var s LookupFirmwareUpgradesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFirmwareUpgradesResultOutput)
}

// A collection of arguments for invoking getFirmwareUpgrades.
type LookupFirmwareUpgradesOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupFirmwareUpgradesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirmwareUpgradesArgs)(nil)).Elem()
}

// A collection of values returned by getFirmwareUpgrades.
type LookupFirmwareUpgradesResultOutput struct{ *pulumi.OutputState }

func (LookupFirmwareUpgradesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirmwareUpgradesResult)(nil)).Elem()
}

func (o LookupFirmwareUpgradesResultOutput) ToLookupFirmwareUpgradesResultOutput() LookupFirmwareUpgradesResultOutput {
	return o
}

func (o LookupFirmwareUpgradesResultOutput) ToLookupFirmwareUpgradesResultOutputWithContext(ctx context.Context) LookupFirmwareUpgradesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFirmwareUpgradesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirmwareUpgradesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFirmwareUpgradesResultOutput) Item() GetFirmwareUpgradesItemOutput {
	return o.ApplyT(func(v LookupFirmwareUpgradesResult) GetFirmwareUpgradesItem { return v.Item }).(GetFirmwareUpgradesItemOutput)
}

// networkId path parameter. Network ID
func (o LookupFirmwareUpgradesResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirmwareUpgradesResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirmwareUpgradesResultOutput{})
}
