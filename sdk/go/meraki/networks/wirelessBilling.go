// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/wirelessBilling:WirelessBilling example "network_id"
// ```
type WirelessBilling struct {
	pulumi.CustomResourceState

	// The currency code of this node group's billing plans
	Currency pulumi.StringOutput `pulumi:"currency"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans WirelessBillingPlanArrayOutput `pulumi:"plans"`
}

// NewWirelessBilling registers a new resource with the given unique name, arguments, and options.
func NewWirelessBilling(ctx *pulumi.Context,
	name string, args *WirelessBillingArgs, opts ...pulumi.ResourceOption) (*WirelessBilling, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessBilling
	err := ctx.RegisterResource("meraki:networks/wirelessBilling:WirelessBilling", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessBilling gets an existing WirelessBilling resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessBilling(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessBillingState, opts ...pulumi.ResourceOption) (*WirelessBilling, error) {
	var resource WirelessBilling
	err := ctx.ReadResource("meraki:networks/wirelessBilling:WirelessBilling", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessBilling resources.
type wirelessBillingState struct {
	// The currency code of this node group's billing plans
	Currency *string `pulumi:"currency"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans []WirelessBillingPlan `pulumi:"plans"`
}

type WirelessBillingState struct {
	// The currency code of this node group's billing plans
	Currency pulumi.StringPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans WirelessBillingPlanArrayInput
}

func (WirelessBillingState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessBillingState)(nil)).Elem()
}

type wirelessBillingArgs struct {
	// The currency code of this node group's billing plans
	Currency *string `pulumi:"currency"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans []WirelessBillingPlan `pulumi:"plans"`
}

// The set of arguments for constructing a WirelessBilling resource.
type WirelessBillingArgs struct {
	// The currency code of this node group's billing plans
	Currency pulumi.StringPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans WirelessBillingPlanArrayInput
}

func (WirelessBillingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessBillingArgs)(nil)).Elem()
}

type WirelessBillingInput interface {
	pulumi.Input

	ToWirelessBillingOutput() WirelessBillingOutput
	ToWirelessBillingOutputWithContext(ctx context.Context) WirelessBillingOutput
}

func (*WirelessBilling) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessBilling)(nil)).Elem()
}

func (i *WirelessBilling) ToWirelessBillingOutput() WirelessBillingOutput {
	return i.ToWirelessBillingOutputWithContext(context.Background())
}

func (i *WirelessBilling) ToWirelessBillingOutputWithContext(ctx context.Context) WirelessBillingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessBillingOutput)
}

// WirelessBillingArrayInput is an input type that accepts WirelessBillingArray and WirelessBillingArrayOutput values.
// You can construct a concrete instance of `WirelessBillingArrayInput` via:
//
//	WirelessBillingArray{ WirelessBillingArgs{...} }
type WirelessBillingArrayInput interface {
	pulumi.Input

	ToWirelessBillingArrayOutput() WirelessBillingArrayOutput
	ToWirelessBillingArrayOutputWithContext(context.Context) WirelessBillingArrayOutput
}

type WirelessBillingArray []WirelessBillingInput

func (WirelessBillingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessBilling)(nil)).Elem()
}

func (i WirelessBillingArray) ToWirelessBillingArrayOutput() WirelessBillingArrayOutput {
	return i.ToWirelessBillingArrayOutputWithContext(context.Background())
}

func (i WirelessBillingArray) ToWirelessBillingArrayOutputWithContext(ctx context.Context) WirelessBillingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessBillingArrayOutput)
}

// WirelessBillingMapInput is an input type that accepts WirelessBillingMap and WirelessBillingMapOutput values.
// You can construct a concrete instance of `WirelessBillingMapInput` via:
//
//	WirelessBillingMap{ "key": WirelessBillingArgs{...} }
type WirelessBillingMapInput interface {
	pulumi.Input

	ToWirelessBillingMapOutput() WirelessBillingMapOutput
	ToWirelessBillingMapOutputWithContext(context.Context) WirelessBillingMapOutput
}

type WirelessBillingMap map[string]WirelessBillingInput

func (WirelessBillingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessBilling)(nil)).Elem()
}

func (i WirelessBillingMap) ToWirelessBillingMapOutput() WirelessBillingMapOutput {
	return i.ToWirelessBillingMapOutputWithContext(context.Background())
}

func (i WirelessBillingMap) ToWirelessBillingMapOutputWithContext(ctx context.Context) WirelessBillingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessBillingMapOutput)
}

type WirelessBillingOutput struct{ *pulumi.OutputState }

func (WirelessBillingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessBilling)(nil)).Elem()
}

func (o WirelessBillingOutput) ToWirelessBillingOutput() WirelessBillingOutput {
	return o
}

func (o WirelessBillingOutput) ToWirelessBillingOutputWithContext(ctx context.Context) WirelessBillingOutput {
	return o
}

// The currency code of this node group's billing plans
func (o WirelessBillingOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessBilling) pulumi.StringOutput { return v.Currency }).(pulumi.StringOutput)
}

// networkId path parameter. Network ID
func (o WirelessBillingOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessBilling) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Array of billing plans in the node group. (Can configure a maximum of 5)
func (o WirelessBillingOutput) Plans() WirelessBillingPlanArrayOutput {
	return o.ApplyT(func(v *WirelessBilling) WirelessBillingPlanArrayOutput { return v.Plans }).(WirelessBillingPlanArrayOutput)
}

type WirelessBillingArrayOutput struct{ *pulumi.OutputState }

func (WirelessBillingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessBilling)(nil)).Elem()
}

func (o WirelessBillingArrayOutput) ToWirelessBillingArrayOutput() WirelessBillingArrayOutput {
	return o
}

func (o WirelessBillingArrayOutput) ToWirelessBillingArrayOutputWithContext(ctx context.Context) WirelessBillingArrayOutput {
	return o
}

func (o WirelessBillingArrayOutput) Index(i pulumi.IntInput) WirelessBillingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessBilling {
		return vs[0].([]*WirelessBilling)[vs[1].(int)]
	}).(WirelessBillingOutput)
}

type WirelessBillingMapOutput struct{ *pulumi.OutputState }

func (WirelessBillingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessBilling)(nil)).Elem()
}

func (o WirelessBillingMapOutput) ToWirelessBillingMapOutput() WirelessBillingMapOutput {
	return o
}

func (o WirelessBillingMapOutput) ToWirelessBillingMapOutputWithContext(ctx context.Context) WirelessBillingMapOutput {
	return o
}

func (o WirelessBillingMapOutput) MapIndex(k pulumi.StringInput) WirelessBillingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessBilling {
		return vs[0].(map[string]*WirelessBilling)[vs[1].(string)]
	}).(WirelessBillingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessBillingInput)(nil)).Elem(), &WirelessBilling{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessBillingArrayInput)(nil)).Elem(), WirelessBillingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessBillingMapInput)(nil)).Elem(), WirelessBillingMap{})
	pulumi.RegisterOutputType(WirelessBillingOutput{})
	pulumi.RegisterOutputType(WirelessBillingArrayOutput{})
	pulumi.RegisterOutputType(WirelessBillingMapOutput{})
}
