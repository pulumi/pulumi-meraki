// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules example "network_id,number"
// ```
type WirelessSsidsFirewallL3FirewallRules struct {
	pulumi.CustomResourceState

	// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
	AllowLanAccess pulumi.BoolPtrOutput `pulumi:"allowLanAccess"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// number path parameter.
	Number pulumi.StringOutput `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL3FirewallRulesRuleArrayOutput `pulumi:"rules"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	RulesResponses WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayOutput `pulumi:"rulesResponses"`
}

// NewWirelessSsidsFirewallL3FirewallRules registers a new resource with the given unique name, arguments, and options.
func NewWirelessSsidsFirewallL3FirewallRules(ctx *pulumi.Context,
	name string, args *WirelessSsidsFirewallL3FirewallRulesArgs, opts ...pulumi.ResourceOption) (*WirelessSsidsFirewallL3FirewallRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Number == nil {
		return nil, errors.New("invalid value for required argument 'Number'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessSsidsFirewallL3FirewallRules
	err := ctx.RegisterResource("meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessSsidsFirewallL3FirewallRules gets an existing WirelessSsidsFirewallL3FirewallRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessSsidsFirewallL3FirewallRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessSsidsFirewallL3FirewallRulesState, opts ...pulumi.ResourceOption) (*WirelessSsidsFirewallL3FirewallRules, error) {
	var resource WirelessSsidsFirewallL3FirewallRules
	err := ctx.ReadResource("meraki:networks/wirelessSsidsFirewallL3FirewallRules:WirelessSsidsFirewallL3FirewallRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessSsidsFirewallL3FirewallRules resources.
type wirelessSsidsFirewallL3FirewallRulesState struct {
	// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
	AllowLanAccess *bool `pulumi:"allowLanAccess"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// number path parameter.
	Number *string `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []WirelessSsidsFirewallL3FirewallRulesRule `pulumi:"rules"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	RulesResponses []WirelessSsidsFirewallL3FirewallRulesRulesResponse `pulumi:"rulesResponses"`
}

type WirelessSsidsFirewallL3FirewallRulesState struct {
	// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
	AllowLanAccess pulumi.BoolPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// number path parameter.
	Number pulumi.StringPtrInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL3FirewallRulesRuleArrayInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	RulesResponses WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayInput
}

func (WirelessSsidsFirewallL3FirewallRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsFirewallL3FirewallRulesState)(nil)).Elem()
}

type wirelessSsidsFirewallL3FirewallRulesArgs struct {
	// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
	AllowLanAccess *bool `pulumi:"allowLanAccess"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// number path parameter.
	Number string `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []WirelessSsidsFirewallL3FirewallRulesRule `pulumi:"rules"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	RulesResponses []WirelessSsidsFirewallL3FirewallRulesRulesResponse `pulumi:"rulesResponses"`
}

// The set of arguments for constructing a WirelessSsidsFirewallL3FirewallRules resource.
type WirelessSsidsFirewallL3FirewallRulesArgs struct {
	// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
	AllowLanAccess pulumi.BoolPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// number path parameter.
	Number pulumi.StringInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL3FirewallRulesRuleArrayInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	RulesResponses WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayInput
}

func (WirelessSsidsFirewallL3FirewallRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsFirewallL3FirewallRulesArgs)(nil)).Elem()
}

type WirelessSsidsFirewallL3FirewallRulesInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL3FirewallRulesOutput() WirelessSsidsFirewallL3FirewallRulesOutput
	ToWirelessSsidsFirewallL3FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesOutput
}

func (*WirelessSsidsFirewallL3FirewallRules) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (i *WirelessSsidsFirewallL3FirewallRules) ToWirelessSsidsFirewallL3FirewallRulesOutput() WirelessSsidsFirewallL3FirewallRulesOutput {
	return i.ToWirelessSsidsFirewallL3FirewallRulesOutputWithContext(context.Background())
}

func (i *WirelessSsidsFirewallL3FirewallRules) ToWirelessSsidsFirewallL3FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL3FirewallRulesOutput)
}

// WirelessSsidsFirewallL3FirewallRulesArrayInput is an input type that accepts WirelessSsidsFirewallL3FirewallRulesArray and WirelessSsidsFirewallL3FirewallRulesArrayOutput values.
// You can construct a concrete instance of `WirelessSsidsFirewallL3FirewallRulesArrayInput` via:
//
//	WirelessSsidsFirewallL3FirewallRulesArray{ WirelessSsidsFirewallL3FirewallRulesArgs{...} }
type WirelessSsidsFirewallL3FirewallRulesArrayInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL3FirewallRulesArrayOutput() WirelessSsidsFirewallL3FirewallRulesArrayOutput
	ToWirelessSsidsFirewallL3FirewallRulesArrayOutputWithContext(context.Context) WirelessSsidsFirewallL3FirewallRulesArrayOutput
}

type WirelessSsidsFirewallL3FirewallRulesArray []WirelessSsidsFirewallL3FirewallRulesInput

func (WirelessSsidsFirewallL3FirewallRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (i WirelessSsidsFirewallL3FirewallRulesArray) ToWirelessSsidsFirewallL3FirewallRulesArrayOutput() WirelessSsidsFirewallL3FirewallRulesArrayOutput {
	return i.ToWirelessSsidsFirewallL3FirewallRulesArrayOutputWithContext(context.Background())
}

func (i WirelessSsidsFirewallL3FirewallRulesArray) ToWirelessSsidsFirewallL3FirewallRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL3FirewallRulesArrayOutput)
}

// WirelessSsidsFirewallL3FirewallRulesMapInput is an input type that accepts WirelessSsidsFirewallL3FirewallRulesMap and WirelessSsidsFirewallL3FirewallRulesMapOutput values.
// You can construct a concrete instance of `WirelessSsidsFirewallL3FirewallRulesMapInput` via:
//
//	WirelessSsidsFirewallL3FirewallRulesMap{ "key": WirelessSsidsFirewallL3FirewallRulesArgs{...} }
type WirelessSsidsFirewallL3FirewallRulesMapInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL3FirewallRulesMapOutput() WirelessSsidsFirewallL3FirewallRulesMapOutput
	ToWirelessSsidsFirewallL3FirewallRulesMapOutputWithContext(context.Context) WirelessSsidsFirewallL3FirewallRulesMapOutput
}

type WirelessSsidsFirewallL3FirewallRulesMap map[string]WirelessSsidsFirewallL3FirewallRulesInput

func (WirelessSsidsFirewallL3FirewallRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (i WirelessSsidsFirewallL3FirewallRulesMap) ToWirelessSsidsFirewallL3FirewallRulesMapOutput() WirelessSsidsFirewallL3FirewallRulesMapOutput {
	return i.ToWirelessSsidsFirewallL3FirewallRulesMapOutputWithContext(context.Background())
}

func (i WirelessSsidsFirewallL3FirewallRulesMap) ToWirelessSsidsFirewallL3FirewallRulesMapOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL3FirewallRulesMapOutput)
}

type WirelessSsidsFirewallL3FirewallRulesOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL3FirewallRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL3FirewallRulesOutput) ToWirelessSsidsFirewallL3FirewallRulesOutput() WirelessSsidsFirewallL3FirewallRulesOutput {
	return o
}

func (o WirelessSsidsFirewallL3FirewallRulesOutput) ToWirelessSsidsFirewallL3FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesOutput {
	return o
}

// Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
func (o WirelessSsidsFirewallL3FirewallRulesOutput) AllowLanAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL3FirewallRules) pulumi.BoolPtrOutput { return v.AllowLanAccess }).(pulumi.BoolPtrOutput)
}

// networkId path parameter. Network ID
func (o WirelessSsidsFirewallL3FirewallRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL3FirewallRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// number path parameter.
func (o WirelessSsidsFirewallL3FirewallRulesOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL3FirewallRules) pulumi.StringOutput { return v.Number }).(pulumi.StringOutput)
}

// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
func (o WirelessSsidsFirewallL3FirewallRulesOutput) Rules() WirelessSsidsFirewallL3FirewallRulesRuleArrayOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL3FirewallRules) WirelessSsidsFirewallL3FirewallRulesRuleArrayOutput {
		return v.Rules
	}).(WirelessSsidsFirewallL3FirewallRulesRuleArrayOutput)
}

// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
func (o WirelessSsidsFirewallL3FirewallRulesOutput) RulesResponses() WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL3FirewallRules) WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayOutput {
		return v.RulesResponses
	}).(WirelessSsidsFirewallL3FirewallRulesRulesResponseArrayOutput)
}

type WirelessSsidsFirewallL3FirewallRulesArrayOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL3FirewallRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL3FirewallRulesArrayOutput) ToWirelessSsidsFirewallL3FirewallRulesArrayOutput() WirelessSsidsFirewallL3FirewallRulesArrayOutput {
	return o
}

func (o WirelessSsidsFirewallL3FirewallRulesArrayOutput) ToWirelessSsidsFirewallL3FirewallRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesArrayOutput {
	return o
}

func (o WirelessSsidsFirewallL3FirewallRulesArrayOutput) Index(i pulumi.IntInput) WirelessSsidsFirewallL3FirewallRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessSsidsFirewallL3FirewallRules {
		return vs[0].([]*WirelessSsidsFirewallL3FirewallRules)[vs[1].(int)]
	}).(WirelessSsidsFirewallL3FirewallRulesOutput)
}

type WirelessSsidsFirewallL3FirewallRulesMapOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL3FirewallRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsFirewallL3FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL3FirewallRulesMapOutput) ToWirelessSsidsFirewallL3FirewallRulesMapOutput() WirelessSsidsFirewallL3FirewallRulesMapOutput {
	return o
}

func (o WirelessSsidsFirewallL3FirewallRulesMapOutput) ToWirelessSsidsFirewallL3FirewallRulesMapOutputWithContext(ctx context.Context) WirelessSsidsFirewallL3FirewallRulesMapOutput {
	return o
}

func (o WirelessSsidsFirewallL3FirewallRulesMapOutput) MapIndex(k pulumi.StringInput) WirelessSsidsFirewallL3FirewallRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessSsidsFirewallL3FirewallRules {
		return vs[0].(map[string]*WirelessSsidsFirewallL3FirewallRules)[vs[1].(string)]
	}).(WirelessSsidsFirewallL3FirewallRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL3FirewallRulesInput)(nil)).Elem(), &WirelessSsidsFirewallL3FirewallRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL3FirewallRulesArrayInput)(nil)).Elem(), WirelessSsidsFirewallL3FirewallRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL3FirewallRulesMapInput)(nil)).Elem(), WirelessSsidsFirewallL3FirewallRulesMap{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL3FirewallRulesOutput{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL3FirewallRulesArrayOutput{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL3FirewallRulesMapOutput{})
}
