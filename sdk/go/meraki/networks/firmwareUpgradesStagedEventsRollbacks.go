// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewFirmwareUpgradesStagedEventsRollbacks(ctx, "example", &networks.FirmwareUpgradesStagedEventsRollbacksArgs{
//				NetworkId: pulumi.String("string"),
//				Parameters: &networks.FirmwareUpgradesStagedEventsRollbacksParametersArgs{
//					Reasons: networks.FirmwareUpgradesStagedEventsRollbacksParametersReasonArray{
//						&networks.FirmwareUpgradesStagedEventsRollbacksParametersReasonArgs{
//							Category: pulumi.String("performance"),
//							Comment:  pulumi.String("Network was slower with the upgrade"),
//						},
//					},
//					Stages: networks.FirmwareUpgradesStagedEventsRollbacksParametersStageArray{
//						&networks.FirmwareUpgradesStagedEventsRollbacksParametersStageArgs{
//							Group: &networks.FirmwareUpgradesStagedEventsRollbacksParametersStageGroupArgs{
//								Id: pulumi.String("1234"),
//							},
//							Milestones: &networks.FirmwareUpgradesStagedEventsRollbacksParametersStageMilestonesArgs{
//								ScheduledFor: pulumi.String("2018-02-11T00:00:00Z"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksFirmwareUpgradesStagedEventsRollbacksExample", example)
//			return nil
//		})
//	}
//
// ```
type FirmwareUpgradesStagedEventsRollbacks struct {
	pulumi.CustomResourceState

	Item FirmwareUpgradesStagedEventsRollbacksItemOutput `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringOutput                                   `pulumi:"networkId"`
	Parameters FirmwareUpgradesStagedEventsRollbacksParametersOutput `pulumi:"parameters"`
}

// NewFirmwareUpgradesStagedEventsRollbacks registers a new resource with the given unique name, arguments, and options.
func NewFirmwareUpgradesStagedEventsRollbacks(ctx *pulumi.Context,
	name string, args *FirmwareUpgradesStagedEventsRollbacksArgs, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedEventsRollbacks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirmwareUpgradesStagedEventsRollbacks
	err := ctx.RegisterResource("meraki:networks/firmwareUpgradesStagedEventsRollbacks:FirmwareUpgradesStagedEventsRollbacks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirmwareUpgradesStagedEventsRollbacks gets an existing FirmwareUpgradesStagedEventsRollbacks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirmwareUpgradesStagedEventsRollbacks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirmwareUpgradesStagedEventsRollbacksState, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedEventsRollbacks, error) {
	var resource FirmwareUpgradesStagedEventsRollbacks
	err := ctx.ReadResource("meraki:networks/firmwareUpgradesStagedEventsRollbacks:FirmwareUpgradesStagedEventsRollbacks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirmwareUpgradesStagedEventsRollbacks resources.
type firmwareUpgradesStagedEventsRollbacksState struct {
	Item *FirmwareUpgradesStagedEventsRollbacksItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  *string                                          `pulumi:"networkId"`
	Parameters *FirmwareUpgradesStagedEventsRollbacksParameters `pulumi:"parameters"`
}

type FirmwareUpgradesStagedEventsRollbacksState struct {
	Item FirmwareUpgradesStagedEventsRollbacksItemPtrInput
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringPtrInput
	Parameters FirmwareUpgradesStagedEventsRollbacksParametersPtrInput
}

func (FirmwareUpgradesStagedEventsRollbacksState) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedEventsRollbacksState)(nil)).Elem()
}

type firmwareUpgradesStagedEventsRollbacksArgs struct {
	// networkId path parameter. Network ID
	NetworkId  string                                          `pulumi:"networkId"`
	Parameters FirmwareUpgradesStagedEventsRollbacksParameters `pulumi:"parameters"`
}

// The set of arguments for constructing a FirmwareUpgradesStagedEventsRollbacks resource.
type FirmwareUpgradesStagedEventsRollbacksArgs struct {
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringInput
	Parameters FirmwareUpgradesStagedEventsRollbacksParametersInput
}

func (FirmwareUpgradesStagedEventsRollbacksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedEventsRollbacksArgs)(nil)).Elem()
}

type FirmwareUpgradesStagedEventsRollbacksInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsRollbacksOutput() FirmwareUpgradesStagedEventsRollbacksOutput
	ToFirmwareUpgradesStagedEventsRollbacksOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksOutput
}

func (*FirmwareUpgradesStagedEventsRollbacks) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (i *FirmwareUpgradesStagedEventsRollbacks) ToFirmwareUpgradesStagedEventsRollbacksOutput() FirmwareUpgradesStagedEventsRollbacksOutput {
	return i.ToFirmwareUpgradesStagedEventsRollbacksOutputWithContext(context.Background())
}

func (i *FirmwareUpgradesStagedEventsRollbacks) ToFirmwareUpgradesStagedEventsRollbacksOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsRollbacksOutput)
}

// FirmwareUpgradesStagedEventsRollbacksArrayInput is an input type that accepts FirmwareUpgradesStagedEventsRollbacksArray and FirmwareUpgradesStagedEventsRollbacksArrayOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedEventsRollbacksArrayInput` via:
//
//	FirmwareUpgradesStagedEventsRollbacksArray{ FirmwareUpgradesStagedEventsRollbacksArgs{...} }
type FirmwareUpgradesStagedEventsRollbacksArrayInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsRollbacksArrayOutput() FirmwareUpgradesStagedEventsRollbacksArrayOutput
	ToFirmwareUpgradesStagedEventsRollbacksArrayOutputWithContext(context.Context) FirmwareUpgradesStagedEventsRollbacksArrayOutput
}

type FirmwareUpgradesStagedEventsRollbacksArray []FirmwareUpgradesStagedEventsRollbacksInput

func (FirmwareUpgradesStagedEventsRollbacksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (i FirmwareUpgradesStagedEventsRollbacksArray) ToFirmwareUpgradesStagedEventsRollbacksArrayOutput() FirmwareUpgradesStagedEventsRollbacksArrayOutput {
	return i.ToFirmwareUpgradesStagedEventsRollbacksArrayOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedEventsRollbacksArray) ToFirmwareUpgradesStagedEventsRollbacksArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsRollbacksArrayOutput)
}

// FirmwareUpgradesStagedEventsRollbacksMapInput is an input type that accepts FirmwareUpgradesStagedEventsRollbacksMap and FirmwareUpgradesStagedEventsRollbacksMapOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedEventsRollbacksMapInput` via:
//
//	FirmwareUpgradesStagedEventsRollbacksMap{ "key": FirmwareUpgradesStagedEventsRollbacksArgs{...} }
type FirmwareUpgradesStagedEventsRollbacksMapInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsRollbacksMapOutput() FirmwareUpgradesStagedEventsRollbacksMapOutput
	ToFirmwareUpgradesStagedEventsRollbacksMapOutputWithContext(context.Context) FirmwareUpgradesStagedEventsRollbacksMapOutput
}

type FirmwareUpgradesStagedEventsRollbacksMap map[string]FirmwareUpgradesStagedEventsRollbacksInput

func (FirmwareUpgradesStagedEventsRollbacksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (i FirmwareUpgradesStagedEventsRollbacksMap) ToFirmwareUpgradesStagedEventsRollbacksMapOutput() FirmwareUpgradesStagedEventsRollbacksMapOutput {
	return i.ToFirmwareUpgradesStagedEventsRollbacksMapOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedEventsRollbacksMap) ToFirmwareUpgradesStagedEventsRollbacksMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsRollbacksMapOutput)
}

type FirmwareUpgradesStagedEventsRollbacksOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsRollbacksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsRollbacksOutput) ToFirmwareUpgradesStagedEventsRollbacksOutput() FirmwareUpgradesStagedEventsRollbacksOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksOutput) ToFirmwareUpgradesStagedEventsRollbacksOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksOutput) Item() FirmwareUpgradesStagedEventsRollbacksItemOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedEventsRollbacks) FirmwareUpgradesStagedEventsRollbacksItemOutput {
		return v.Item
	}).(FirmwareUpgradesStagedEventsRollbacksItemOutput)
}

// networkId path parameter. Network ID
func (o FirmwareUpgradesStagedEventsRollbacksOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedEventsRollbacks) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o FirmwareUpgradesStagedEventsRollbacksOutput) Parameters() FirmwareUpgradesStagedEventsRollbacksParametersOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedEventsRollbacks) FirmwareUpgradesStagedEventsRollbacksParametersOutput {
		return v.Parameters
	}).(FirmwareUpgradesStagedEventsRollbacksParametersOutput)
}

type FirmwareUpgradesStagedEventsRollbacksArrayOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsRollbacksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsRollbacksArrayOutput) ToFirmwareUpgradesStagedEventsRollbacksArrayOutput() FirmwareUpgradesStagedEventsRollbacksArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksArrayOutput) ToFirmwareUpgradesStagedEventsRollbacksArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksArrayOutput) Index(i pulumi.IntInput) FirmwareUpgradesStagedEventsRollbacksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedEventsRollbacks {
		return vs[0].([]*FirmwareUpgradesStagedEventsRollbacks)[vs[1].(int)]
	}).(FirmwareUpgradesStagedEventsRollbacksOutput)
}

type FirmwareUpgradesStagedEventsRollbacksMapOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsRollbacksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedEventsRollbacks)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsRollbacksMapOutput) ToFirmwareUpgradesStagedEventsRollbacksMapOutput() FirmwareUpgradesStagedEventsRollbacksMapOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksMapOutput) ToFirmwareUpgradesStagedEventsRollbacksMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsRollbacksMapOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsRollbacksMapOutput) MapIndex(k pulumi.StringInput) FirmwareUpgradesStagedEventsRollbacksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedEventsRollbacks {
		return vs[0].(map[string]*FirmwareUpgradesStagedEventsRollbacks)[vs[1].(string)]
	}).(FirmwareUpgradesStagedEventsRollbacksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsRollbacksInput)(nil)).Elem(), &FirmwareUpgradesStagedEventsRollbacks{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsRollbacksArrayInput)(nil)).Elem(), FirmwareUpgradesStagedEventsRollbacksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsRollbacksMapInput)(nil)).Elem(), FirmwareUpgradesStagedEventsRollbacksMap{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsRollbacksOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsRollbacksArrayOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsRollbacksMapOutput{})
}
