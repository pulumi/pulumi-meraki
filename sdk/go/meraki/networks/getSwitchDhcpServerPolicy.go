// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupSwitchDhcpServerPolicy(ctx, &networks.LookupSwitchDhcpServerPolicyArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchDhcpServerPolicyExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchDhcpServerPolicy(ctx *pulumi.Context, args *LookupSwitchDhcpServerPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSwitchDhcpServerPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchDhcpServerPolicyResult
	err := ctx.Invoke("meraki:networks/getSwitchDhcpServerPolicy:getSwitchDhcpServerPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchDhcpServerPolicy.
type LookupSwitchDhcpServerPolicyArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getSwitchDhcpServerPolicy.
type LookupSwitchDhcpServerPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                        `pulumi:"id"`
	Item GetSwitchDhcpServerPolicyItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupSwitchDhcpServerPolicyOutput(ctx *pulumi.Context, args LookupSwitchDhcpServerPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchDhcpServerPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchDhcpServerPolicyResultOutput, error) {
			args := v.(LookupSwitchDhcpServerPolicyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSwitchDhcpServerPolicyResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSwitchDhcpServerPolicy:getSwitchDhcpServerPolicy", args, &rv, "", opts...)
			if err != nil {
				return LookupSwitchDhcpServerPolicyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSwitchDhcpServerPolicyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSwitchDhcpServerPolicyResultOutput), nil
			}
			return output, nil
		}).(LookupSwitchDhcpServerPolicyResultOutput)
}

// A collection of arguments for invoking getSwitchDhcpServerPolicy.
type LookupSwitchDhcpServerPolicyOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupSwitchDhcpServerPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchDhcpServerPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchDhcpServerPolicy.
type LookupSwitchDhcpServerPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchDhcpServerPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchDhcpServerPolicyResult)(nil)).Elem()
}

func (o LookupSwitchDhcpServerPolicyResultOutput) ToLookupSwitchDhcpServerPolicyResultOutput() LookupSwitchDhcpServerPolicyResultOutput {
	return o
}

func (o LookupSwitchDhcpServerPolicyResultOutput) ToLookupSwitchDhcpServerPolicyResultOutputWithContext(ctx context.Context) LookupSwitchDhcpServerPolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchDhcpServerPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchDhcpServerPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchDhcpServerPolicyResultOutput) Item() GetSwitchDhcpServerPolicyItemOutput {
	return o.ApplyT(func(v LookupSwitchDhcpServerPolicyResult) GetSwitchDhcpServerPolicyItem { return v.Item }).(GetSwitchDhcpServerPolicyItemOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchDhcpServerPolicyResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchDhcpServerPolicyResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchDhcpServerPolicyResultOutput{})
}
