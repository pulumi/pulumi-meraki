// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewWirelessSsidsTrafficShapingRules(ctx, "example", &networks.WirelessSsidsTrafficShapingRulesArgs{
//				DefaultRulesEnabled: pulumi.Bool(true),
//				NetworkId:           pulumi.String("string"),
//				Number:              pulumi.String("string"),
//				Rules: networks.WirelessSsidsTrafficShapingRulesRuleArray{
//					&networks.WirelessSsidsTrafficShapingRulesRuleArgs{
//						Definitions: networks.WirelessSsidsTrafficShapingRulesRuleDefinitionArray{
//							&networks.WirelessSsidsTrafficShapingRulesRuleDefinitionArgs{
//								Type:  pulumi.String("host"),
//								Value: pulumi.String("google.com"),
//							},
//						},
//						Dscp_tag_value: 1,
//						Pcp_tag_value:  1,
//						Per_client_bandwidth_limits: map[string]interface{}{
//							"bandwidthLimits": map[string]interface{}{
//								"limitDown": 1000000,
//								"limitUp":   1000000,
//							},
//							"settings": "custom",
//						},
//					},
//				},
//				TrafficShapingEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksWirelessSsidsTrafficShapingRulesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/wirelessSsidsTrafficShapingRules:WirelessSsidsTrafficShapingRules example "network_id,number"
// ```
type WirelessSsidsTrafficShapingRules struct {
	pulumi.CustomResourceState

	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled pulumi.BoolOutput `pulumi:"defaultRulesEnabled"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// number path parameter.
	Number pulumi.StringOutput `pulumi:"number"`
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules WirelessSsidsTrafficShapingRulesRuleArrayOutput `pulumi:"rules"`
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled pulumi.BoolOutput `pulumi:"trafficShapingEnabled"`
}

// NewWirelessSsidsTrafficShapingRules registers a new resource with the given unique name, arguments, and options.
func NewWirelessSsidsTrafficShapingRules(ctx *pulumi.Context,
	name string, args *WirelessSsidsTrafficShapingRulesArgs, opts ...pulumi.ResourceOption) (*WirelessSsidsTrafficShapingRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Number == nil {
		return nil, errors.New("invalid value for required argument 'Number'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessSsidsTrafficShapingRules
	err := ctx.RegisterResource("meraki:networks/wirelessSsidsTrafficShapingRules:WirelessSsidsTrafficShapingRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessSsidsTrafficShapingRules gets an existing WirelessSsidsTrafficShapingRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessSsidsTrafficShapingRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessSsidsTrafficShapingRulesState, opts ...pulumi.ResourceOption) (*WirelessSsidsTrafficShapingRules, error) {
	var resource WirelessSsidsTrafficShapingRules
	err := ctx.ReadResource("meraki:networks/wirelessSsidsTrafficShapingRules:WirelessSsidsTrafficShapingRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessSsidsTrafficShapingRules resources.
type wirelessSsidsTrafficShapingRulesState struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled *bool `pulumi:"defaultRulesEnabled"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// number path parameter.
	Number *string `pulumi:"number"`
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules []WirelessSsidsTrafficShapingRulesRule `pulumi:"rules"`
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled *bool `pulumi:"trafficShapingEnabled"`
}

type WirelessSsidsTrafficShapingRulesState struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled pulumi.BoolPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// number path parameter.
	Number pulumi.StringPtrInput
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules WirelessSsidsTrafficShapingRulesRuleArrayInput
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled pulumi.BoolPtrInput
}

func (WirelessSsidsTrafficShapingRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsTrafficShapingRulesState)(nil)).Elem()
}

type wirelessSsidsTrafficShapingRulesArgs struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled *bool `pulumi:"defaultRulesEnabled"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// number path parameter.
	Number string `pulumi:"number"`
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules []WirelessSsidsTrafficShapingRulesRule `pulumi:"rules"`
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled *bool `pulumi:"trafficShapingEnabled"`
}

// The set of arguments for constructing a WirelessSsidsTrafficShapingRules resource.
type WirelessSsidsTrafficShapingRulesArgs struct {
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled pulumi.BoolPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// number path parameter.
	Number pulumi.StringInput
	// An array of traffic shaping rules. Rules are applied in the order that
	// they are specified in. An empty list (or null) means no rules. Note that
	// you are allowed a maximum of 8 rules.
	Rules WirelessSsidsTrafficShapingRulesRuleArrayInput
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled pulumi.BoolPtrInput
}

func (WirelessSsidsTrafficShapingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsTrafficShapingRulesArgs)(nil)).Elem()
}

type WirelessSsidsTrafficShapingRulesInput interface {
	pulumi.Input

	ToWirelessSsidsTrafficShapingRulesOutput() WirelessSsidsTrafficShapingRulesOutput
	ToWirelessSsidsTrafficShapingRulesOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesOutput
}

func (*WirelessSsidsTrafficShapingRules) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (i *WirelessSsidsTrafficShapingRules) ToWirelessSsidsTrafficShapingRulesOutput() WirelessSsidsTrafficShapingRulesOutput {
	return i.ToWirelessSsidsTrafficShapingRulesOutputWithContext(context.Background())
}

func (i *WirelessSsidsTrafficShapingRules) ToWirelessSsidsTrafficShapingRulesOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsTrafficShapingRulesOutput)
}

// WirelessSsidsTrafficShapingRulesArrayInput is an input type that accepts WirelessSsidsTrafficShapingRulesArray and WirelessSsidsTrafficShapingRulesArrayOutput values.
// You can construct a concrete instance of `WirelessSsidsTrafficShapingRulesArrayInput` via:
//
//	WirelessSsidsTrafficShapingRulesArray{ WirelessSsidsTrafficShapingRulesArgs{...} }
type WirelessSsidsTrafficShapingRulesArrayInput interface {
	pulumi.Input

	ToWirelessSsidsTrafficShapingRulesArrayOutput() WirelessSsidsTrafficShapingRulesArrayOutput
	ToWirelessSsidsTrafficShapingRulesArrayOutputWithContext(context.Context) WirelessSsidsTrafficShapingRulesArrayOutput
}

type WirelessSsidsTrafficShapingRulesArray []WirelessSsidsTrafficShapingRulesInput

func (WirelessSsidsTrafficShapingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (i WirelessSsidsTrafficShapingRulesArray) ToWirelessSsidsTrafficShapingRulesArrayOutput() WirelessSsidsTrafficShapingRulesArrayOutput {
	return i.ToWirelessSsidsTrafficShapingRulesArrayOutputWithContext(context.Background())
}

func (i WirelessSsidsTrafficShapingRulesArray) ToWirelessSsidsTrafficShapingRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsTrafficShapingRulesArrayOutput)
}

// WirelessSsidsTrafficShapingRulesMapInput is an input type that accepts WirelessSsidsTrafficShapingRulesMap and WirelessSsidsTrafficShapingRulesMapOutput values.
// You can construct a concrete instance of `WirelessSsidsTrafficShapingRulesMapInput` via:
//
//	WirelessSsidsTrafficShapingRulesMap{ "key": WirelessSsidsTrafficShapingRulesArgs{...} }
type WirelessSsidsTrafficShapingRulesMapInput interface {
	pulumi.Input

	ToWirelessSsidsTrafficShapingRulesMapOutput() WirelessSsidsTrafficShapingRulesMapOutput
	ToWirelessSsidsTrafficShapingRulesMapOutputWithContext(context.Context) WirelessSsidsTrafficShapingRulesMapOutput
}

type WirelessSsidsTrafficShapingRulesMap map[string]WirelessSsidsTrafficShapingRulesInput

func (WirelessSsidsTrafficShapingRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (i WirelessSsidsTrafficShapingRulesMap) ToWirelessSsidsTrafficShapingRulesMapOutput() WirelessSsidsTrafficShapingRulesMapOutput {
	return i.ToWirelessSsidsTrafficShapingRulesMapOutputWithContext(context.Background())
}

func (i WirelessSsidsTrafficShapingRulesMap) ToWirelessSsidsTrafficShapingRulesMapOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsTrafficShapingRulesMapOutput)
}

type WirelessSsidsTrafficShapingRulesOutput struct{ *pulumi.OutputState }

func (WirelessSsidsTrafficShapingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (o WirelessSsidsTrafficShapingRulesOutput) ToWirelessSsidsTrafficShapingRulesOutput() WirelessSsidsTrafficShapingRulesOutput {
	return o
}

func (o WirelessSsidsTrafficShapingRulesOutput) ToWirelessSsidsTrafficShapingRulesOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesOutput {
	return o
}

// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
func (o WirelessSsidsTrafficShapingRulesOutput) DefaultRulesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WirelessSsidsTrafficShapingRules) pulumi.BoolOutput { return v.DefaultRulesEnabled }).(pulumi.BoolOutput)
}

// networkId path parameter. Network ID
func (o WirelessSsidsTrafficShapingRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsTrafficShapingRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// number path parameter.
func (o WirelessSsidsTrafficShapingRulesOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsTrafficShapingRules) pulumi.StringOutput { return v.Number }).(pulumi.StringOutput)
}

// An array of traffic shaping rules. Rules are applied in the order that
// they are specified in. An empty list (or null) means no rules. Note that
// you are allowed a maximum of 8 rules.
func (o WirelessSsidsTrafficShapingRulesOutput) Rules() WirelessSsidsTrafficShapingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WirelessSsidsTrafficShapingRules) WirelessSsidsTrafficShapingRulesRuleArrayOutput {
		return v.Rules
	}).(WirelessSsidsTrafficShapingRulesRuleArrayOutput)
}

// Whether traffic shaping rules are applied to clients on your SSID.
func (o WirelessSsidsTrafficShapingRulesOutput) TrafficShapingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WirelessSsidsTrafficShapingRules) pulumi.BoolOutput { return v.TrafficShapingEnabled }).(pulumi.BoolOutput)
}

type WirelessSsidsTrafficShapingRulesArrayOutput struct{ *pulumi.OutputState }

func (WirelessSsidsTrafficShapingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (o WirelessSsidsTrafficShapingRulesArrayOutput) ToWirelessSsidsTrafficShapingRulesArrayOutput() WirelessSsidsTrafficShapingRulesArrayOutput {
	return o
}

func (o WirelessSsidsTrafficShapingRulesArrayOutput) ToWirelessSsidsTrafficShapingRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesArrayOutput {
	return o
}

func (o WirelessSsidsTrafficShapingRulesArrayOutput) Index(i pulumi.IntInput) WirelessSsidsTrafficShapingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessSsidsTrafficShapingRules {
		return vs[0].([]*WirelessSsidsTrafficShapingRules)[vs[1].(int)]
	}).(WirelessSsidsTrafficShapingRulesOutput)
}

type WirelessSsidsTrafficShapingRulesMapOutput struct{ *pulumi.OutputState }

func (WirelessSsidsTrafficShapingRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsTrafficShapingRules)(nil)).Elem()
}

func (o WirelessSsidsTrafficShapingRulesMapOutput) ToWirelessSsidsTrafficShapingRulesMapOutput() WirelessSsidsTrafficShapingRulesMapOutput {
	return o
}

func (o WirelessSsidsTrafficShapingRulesMapOutput) ToWirelessSsidsTrafficShapingRulesMapOutputWithContext(ctx context.Context) WirelessSsidsTrafficShapingRulesMapOutput {
	return o
}

func (o WirelessSsidsTrafficShapingRulesMapOutput) MapIndex(k pulumi.StringInput) WirelessSsidsTrafficShapingRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessSsidsTrafficShapingRules {
		return vs[0].(map[string]*WirelessSsidsTrafficShapingRules)[vs[1].(string)]
	}).(WirelessSsidsTrafficShapingRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsTrafficShapingRulesInput)(nil)).Elem(), &WirelessSsidsTrafficShapingRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsTrafficShapingRulesArrayInput)(nil)).Elem(), WirelessSsidsTrafficShapingRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsTrafficShapingRulesMapInput)(nil)).Elem(), WirelessSsidsTrafficShapingRulesMap{})
	pulumi.RegisterOutputType(WirelessSsidsTrafficShapingRulesOutput{})
	pulumi.RegisterOutputType(WirelessSsidsTrafficShapingRulesArrayOutput{})
	pulumi.RegisterOutputType(WirelessSsidsTrafficShapingRulesMapOutput{})
}
