// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/applianceFirewallPortForwardingRules:ApplianceFirewallPortForwardingRules example "network_id"
// ```
type ApplianceFirewallPortForwardingRules struct {
	pulumi.CustomResourceState

	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// An array of port forwarding params
	Rules ApplianceFirewallPortForwardingRulesRuleArrayOutput `pulumi:"rules"`
}

// NewApplianceFirewallPortForwardingRules registers a new resource with the given unique name, arguments, and options.
func NewApplianceFirewallPortForwardingRules(ctx *pulumi.Context,
	name string, args *ApplianceFirewallPortForwardingRulesArgs, opts ...pulumi.ResourceOption) (*ApplianceFirewallPortForwardingRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceFirewallPortForwardingRules
	err := ctx.RegisterResource("meraki:networks/applianceFirewallPortForwardingRules:ApplianceFirewallPortForwardingRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceFirewallPortForwardingRules gets an existing ApplianceFirewallPortForwardingRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceFirewallPortForwardingRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceFirewallPortForwardingRulesState, opts ...pulumi.ResourceOption) (*ApplianceFirewallPortForwardingRules, error) {
	var resource ApplianceFirewallPortForwardingRules
	err := ctx.ReadResource("meraki:networks/applianceFirewallPortForwardingRules:ApplianceFirewallPortForwardingRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceFirewallPortForwardingRules resources.
type applianceFirewallPortForwardingRulesState struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// An array of port forwarding params
	Rules []ApplianceFirewallPortForwardingRulesRule `pulumi:"rules"`
}

type ApplianceFirewallPortForwardingRulesState struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// An array of port forwarding params
	Rules ApplianceFirewallPortForwardingRulesRuleArrayInput
}

func (ApplianceFirewallPortForwardingRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallPortForwardingRulesState)(nil)).Elem()
}

type applianceFirewallPortForwardingRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// An array of port forwarding params
	Rules []ApplianceFirewallPortForwardingRulesRule `pulumi:"rules"`
}

// The set of arguments for constructing a ApplianceFirewallPortForwardingRules resource.
type ApplianceFirewallPortForwardingRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// An array of port forwarding params
	Rules ApplianceFirewallPortForwardingRulesRuleArrayInput
}

func (ApplianceFirewallPortForwardingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallPortForwardingRulesArgs)(nil)).Elem()
}

type ApplianceFirewallPortForwardingRulesInput interface {
	pulumi.Input

	ToApplianceFirewallPortForwardingRulesOutput() ApplianceFirewallPortForwardingRulesOutput
	ToApplianceFirewallPortForwardingRulesOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesOutput
}

func (*ApplianceFirewallPortForwardingRules) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (i *ApplianceFirewallPortForwardingRules) ToApplianceFirewallPortForwardingRulesOutput() ApplianceFirewallPortForwardingRulesOutput {
	return i.ToApplianceFirewallPortForwardingRulesOutputWithContext(context.Background())
}

func (i *ApplianceFirewallPortForwardingRules) ToApplianceFirewallPortForwardingRulesOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallPortForwardingRulesOutput)
}

// ApplianceFirewallPortForwardingRulesArrayInput is an input type that accepts ApplianceFirewallPortForwardingRulesArray and ApplianceFirewallPortForwardingRulesArrayOutput values.
// You can construct a concrete instance of `ApplianceFirewallPortForwardingRulesArrayInput` via:
//
//	ApplianceFirewallPortForwardingRulesArray{ ApplianceFirewallPortForwardingRulesArgs{...} }
type ApplianceFirewallPortForwardingRulesArrayInput interface {
	pulumi.Input

	ToApplianceFirewallPortForwardingRulesArrayOutput() ApplianceFirewallPortForwardingRulesArrayOutput
	ToApplianceFirewallPortForwardingRulesArrayOutputWithContext(context.Context) ApplianceFirewallPortForwardingRulesArrayOutput
}

type ApplianceFirewallPortForwardingRulesArray []ApplianceFirewallPortForwardingRulesInput

func (ApplianceFirewallPortForwardingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (i ApplianceFirewallPortForwardingRulesArray) ToApplianceFirewallPortForwardingRulesArrayOutput() ApplianceFirewallPortForwardingRulesArrayOutput {
	return i.ToApplianceFirewallPortForwardingRulesArrayOutputWithContext(context.Background())
}

func (i ApplianceFirewallPortForwardingRulesArray) ToApplianceFirewallPortForwardingRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallPortForwardingRulesArrayOutput)
}

// ApplianceFirewallPortForwardingRulesMapInput is an input type that accepts ApplianceFirewallPortForwardingRulesMap and ApplianceFirewallPortForwardingRulesMapOutput values.
// You can construct a concrete instance of `ApplianceFirewallPortForwardingRulesMapInput` via:
//
//	ApplianceFirewallPortForwardingRulesMap{ "key": ApplianceFirewallPortForwardingRulesArgs{...} }
type ApplianceFirewallPortForwardingRulesMapInput interface {
	pulumi.Input

	ToApplianceFirewallPortForwardingRulesMapOutput() ApplianceFirewallPortForwardingRulesMapOutput
	ToApplianceFirewallPortForwardingRulesMapOutputWithContext(context.Context) ApplianceFirewallPortForwardingRulesMapOutput
}

type ApplianceFirewallPortForwardingRulesMap map[string]ApplianceFirewallPortForwardingRulesInput

func (ApplianceFirewallPortForwardingRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (i ApplianceFirewallPortForwardingRulesMap) ToApplianceFirewallPortForwardingRulesMapOutput() ApplianceFirewallPortForwardingRulesMapOutput {
	return i.ToApplianceFirewallPortForwardingRulesMapOutputWithContext(context.Background())
}

func (i ApplianceFirewallPortForwardingRulesMap) ToApplianceFirewallPortForwardingRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallPortForwardingRulesMapOutput)
}

type ApplianceFirewallPortForwardingRulesOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallPortForwardingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (o ApplianceFirewallPortForwardingRulesOutput) ToApplianceFirewallPortForwardingRulesOutput() ApplianceFirewallPortForwardingRulesOutput {
	return o
}

func (o ApplianceFirewallPortForwardingRulesOutput) ToApplianceFirewallPortForwardingRulesOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesOutput {
	return o
}

// networkId path parameter. Network ID
func (o ApplianceFirewallPortForwardingRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceFirewallPortForwardingRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// An array of port forwarding params
func (o ApplianceFirewallPortForwardingRulesOutput) Rules() ApplianceFirewallPortForwardingRulesRuleArrayOutput {
	return o.ApplyT(func(v *ApplianceFirewallPortForwardingRules) ApplianceFirewallPortForwardingRulesRuleArrayOutput {
		return v.Rules
	}).(ApplianceFirewallPortForwardingRulesRuleArrayOutput)
}

type ApplianceFirewallPortForwardingRulesArrayOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallPortForwardingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (o ApplianceFirewallPortForwardingRulesArrayOutput) ToApplianceFirewallPortForwardingRulesArrayOutput() ApplianceFirewallPortForwardingRulesArrayOutput {
	return o
}

func (o ApplianceFirewallPortForwardingRulesArrayOutput) ToApplianceFirewallPortForwardingRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesArrayOutput {
	return o
}

func (o ApplianceFirewallPortForwardingRulesArrayOutput) Index(i pulumi.IntInput) ApplianceFirewallPortForwardingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceFirewallPortForwardingRules {
		return vs[0].([]*ApplianceFirewallPortForwardingRules)[vs[1].(int)]
	}).(ApplianceFirewallPortForwardingRulesOutput)
}

type ApplianceFirewallPortForwardingRulesMapOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallPortForwardingRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallPortForwardingRules)(nil)).Elem()
}

func (o ApplianceFirewallPortForwardingRulesMapOutput) ToApplianceFirewallPortForwardingRulesMapOutput() ApplianceFirewallPortForwardingRulesMapOutput {
	return o
}

func (o ApplianceFirewallPortForwardingRulesMapOutput) ToApplianceFirewallPortForwardingRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallPortForwardingRulesMapOutput {
	return o
}

func (o ApplianceFirewallPortForwardingRulesMapOutput) MapIndex(k pulumi.StringInput) ApplianceFirewallPortForwardingRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceFirewallPortForwardingRules {
		return vs[0].(map[string]*ApplianceFirewallPortForwardingRules)[vs[1].(string)]
	}).(ApplianceFirewallPortForwardingRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallPortForwardingRulesInput)(nil)).Elem(), &ApplianceFirewallPortForwardingRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallPortForwardingRulesArrayInput)(nil)).Elem(), ApplianceFirewallPortForwardingRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallPortForwardingRulesMapInput)(nil)).Elem(), ApplianceFirewallPortForwardingRulesMap{})
	pulumi.RegisterOutputType(ApplianceFirewallPortForwardingRulesOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallPortForwardingRulesArrayOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallPortForwardingRulesMapOutput{})
}
