// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupSwitchStacksRoutingStaticRoutes(ctx *pulumi.Context, args *LookupSwitchStacksRoutingStaticRoutesArgs, opts ...pulumi.InvokeOption) (*LookupSwitchStacksRoutingStaticRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchStacksRoutingStaticRoutesResult
	err := ctx.Invoke("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchStacksRoutingStaticRoutes.
type LookupSwitchStacksRoutingStaticRoutesArgs struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// staticRouteId path parameter. Static route ID
	StaticRouteId *string `pulumi:"staticRouteId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId *string `pulumi:"switchStackId"`
}

// A collection of values returned by getSwitchStacksRoutingStaticRoutes.
type LookupSwitchStacksRoutingStaticRoutesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                                 `pulumi:"id"`
	Item GetSwitchStacksRoutingStaticRoutesItem `pulumi:"item"`
	// Array of ResponseSwitchGetNetworkSwitchStackRoutingStaticRoutes
	Items []GetSwitchStacksRoutingStaticRoutesItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// staticRouteId path parameter. Static route ID
	StaticRouteId *string `pulumi:"staticRouteId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId *string `pulumi:"switchStackId"`
}

func LookupSwitchStacksRoutingStaticRoutesOutput(ctx *pulumi.Context, args LookupSwitchStacksRoutingStaticRoutesOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchStacksRoutingStaticRoutesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchStacksRoutingStaticRoutesResultOutput, error) {
			args := v.(LookupSwitchStacksRoutingStaticRoutesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSwitchStacksRoutingStaticRoutesResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSwitchStacksRoutingStaticRoutes:getSwitchStacksRoutingStaticRoutes", args, &rv, "", opts...)
			if err != nil {
				return LookupSwitchStacksRoutingStaticRoutesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSwitchStacksRoutingStaticRoutesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSwitchStacksRoutingStaticRoutesResultOutput), nil
			}
			return output, nil
		}).(LookupSwitchStacksRoutingStaticRoutesResultOutput)
}

// A collection of arguments for invoking getSwitchStacksRoutingStaticRoutes.
type LookupSwitchStacksRoutingStaticRoutesOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// staticRouteId path parameter. Static route ID
	StaticRouteId pulumi.StringPtrInput `pulumi:"staticRouteId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId pulumi.StringPtrInput `pulumi:"switchStackId"`
}

func (LookupSwitchStacksRoutingStaticRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksRoutingStaticRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchStacksRoutingStaticRoutes.
type LookupSwitchStacksRoutingStaticRoutesResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchStacksRoutingStaticRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksRoutingStaticRoutesResult)(nil)).Elem()
}

func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) ToLookupSwitchStacksRoutingStaticRoutesResultOutput() LookupSwitchStacksRoutingStaticRoutesResultOutput {
	return o
}

func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) ToLookupSwitchStacksRoutingStaticRoutesResultOutputWithContext(ctx context.Context) LookupSwitchStacksRoutingStaticRoutesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) Item() GetSwitchStacksRoutingStaticRoutesItemOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) GetSwitchStacksRoutingStaticRoutesItem {
		return v.Item
	}).(GetSwitchStacksRoutingStaticRoutesItemOutput)
}

// Array of ResponseSwitchGetNetworkSwitchStackRoutingStaticRoutes
func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) Items() GetSwitchStacksRoutingStaticRoutesItemArrayOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) []GetSwitchStacksRoutingStaticRoutesItem {
		return v.Items
	}).(GetSwitchStacksRoutingStaticRoutesItemArrayOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// staticRouteId path parameter. Static route ID
func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) StaticRouteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) *string { return v.StaticRouteId }).(pulumi.StringPtrOutput)
}

// switchStackId path parameter. Switch stack ID
func (o LookupSwitchStacksRoutingStaticRoutesResultOutput) SwitchStackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingStaticRoutesResult) *string { return v.SwitchStackId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchStacksRoutingStaticRoutesResultOutput{})
}
