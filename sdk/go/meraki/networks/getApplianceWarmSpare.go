// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupApplianceWarmSpare(ctx, &networks.LookupApplianceWarmSpareArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksApplianceWarmSpareExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupApplianceWarmSpare(ctx *pulumi.Context, args *LookupApplianceWarmSpareArgs, opts ...pulumi.InvokeOption) (*LookupApplianceWarmSpareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplianceWarmSpareResult
	err := ctx.Invoke("meraki:networks/getApplianceWarmSpare:getApplianceWarmSpare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplianceWarmSpare.
type LookupApplianceWarmSpareArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getApplianceWarmSpare.
type LookupApplianceWarmSpareResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                    `pulumi:"id"`
	Item GetApplianceWarmSpareItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupApplianceWarmSpareOutput(ctx *pulumi.Context, args LookupApplianceWarmSpareOutputArgs, opts ...pulumi.InvokeOption) LookupApplianceWarmSpareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplianceWarmSpareResultOutput, error) {
			args := v.(LookupApplianceWarmSpareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:networks/getApplianceWarmSpare:getApplianceWarmSpare", args, LookupApplianceWarmSpareResultOutput{}, options).(LookupApplianceWarmSpareResultOutput), nil
		}).(LookupApplianceWarmSpareResultOutput)
}

// A collection of arguments for invoking getApplianceWarmSpare.
type LookupApplianceWarmSpareOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupApplianceWarmSpareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplianceWarmSpareArgs)(nil)).Elem()
}

// A collection of values returned by getApplianceWarmSpare.
type LookupApplianceWarmSpareResultOutput struct{ *pulumi.OutputState }

func (LookupApplianceWarmSpareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplianceWarmSpareResult)(nil)).Elem()
}

func (o LookupApplianceWarmSpareResultOutput) ToLookupApplianceWarmSpareResultOutput() LookupApplianceWarmSpareResultOutput {
	return o
}

func (o LookupApplianceWarmSpareResultOutput) ToLookupApplianceWarmSpareResultOutputWithContext(ctx context.Context) LookupApplianceWarmSpareResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApplianceWarmSpareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplianceWarmSpareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupApplianceWarmSpareResultOutput) Item() GetApplianceWarmSpareItemOutput {
	return o.ApplyT(func(v LookupApplianceWarmSpareResult) GetApplianceWarmSpareItem { return v.Item }).(GetApplianceWarmSpareItemOutput)
}

// networkId path parameter. Network ID
func (o LookupApplianceWarmSpareResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplianceWarmSpareResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplianceWarmSpareResultOutput{})
}
