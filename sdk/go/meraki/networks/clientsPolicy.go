// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewClientsPolicy(ctx, "example", &networks.ClientsPolicyArgs{
//				ClientId:      pulumi.String("string"),
//				DevicePolicy:  pulumi.String("Group policy"),
//				GroupPolicyId: pulumi.String("101"),
//				NetworkId:     pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksClientsPolicyExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/clientsPolicy:ClientsPolicy example "client_id,network_id"
// ```
type ClientsPolicy struct {
	pulumi.CustomResourceState

	// clientId path parameter. Client ID
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The name of the client's policy
	DevicePolicy pulumi.StringOutput `pulumi:"devicePolicy"`
	// The group policy identifier of the client
	GroupPolicyId pulumi.StringOutput `pulumi:"groupPolicyId"`
	// The MAC address of the client
	Mac pulumi.StringOutput `pulumi:"mac"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewClientsPolicy registers a new resource with the given unique name, arguments, and options.
func NewClientsPolicy(ctx *pulumi.Context,
	name string, args *ClientsPolicyArgs, opts ...pulumi.ResourceOption) (*ClientsPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClientsPolicy
	err := ctx.RegisterResource("meraki:networks/clientsPolicy:ClientsPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientsPolicy gets an existing ClientsPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientsPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientsPolicyState, opts ...pulumi.ResourceOption) (*ClientsPolicy, error) {
	var resource ClientsPolicy
	err := ctx.ReadResource("meraki:networks/clientsPolicy:ClientsPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientsPolicy resources.
type clientsPolicyState struct {
	// clientId path parameter. Client ID
	ClientId *string `pulumi:"clientId"`
	// The name of the client's policy
	DevicePolicy *string `pulumi:"devicePolicy"`
	// The group policy identifier of the client
	GroupPolicyId *string `pulumi:"groupPolicyId"`
	// The MAC address of the client
	Mac *string `pulumi:"mac"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type ClientsPolicyState struct {
	// clientId path parameter. Client ID
	ClientId pulumi.StringPtrInput
	// The name of the client's policy
	DevicePolicy pulumi.StringPtrInput
	// The group policy identifier of the client
	GroupPolicyId pulumi.StringPtrInput
	// The MAC address of the client
	Mac pulumi.StringPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (ClientsPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientsPolicyState)(nil)).Elem()
}

type clientsPolicyArgs struct {
	// clientId path parameter. Client ID
	ClientId string `pulumi:"clientId"`
	// The name of the client's policy
	DevicePolicy *string `pulumi:"devicePolicy"`
	// The group policy identifier of the client
	GroupPolicyId *string `pulumi:"groupPolicyId"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a ClientsPolicy resource.
type ClientsPolicyArgs struct {
	// clientId path parameter. Client ID
	ClientId pulumi.StringInput
	// The name of the client's policy
	DevicePolicy pulumi.StringPtrInput
	// The group policy identifier of the client
	GroupPolicyId pulumi.StringPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (ClientsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientsPolicyArgs)(nil)).Elem()
}

type ClientsPolicyInput interface {
	pulumi.Input

	ToClientsPolicyOutput() ClientsPolicyOutput
	ToClientsPolicyOutputWithContext(ctx context.Context) ClientsPolicyOutput
}

func (*ClientsPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientsPolicy)(nil)).Elem()
}

func (i *ClientsPolicy) ToClientsPolicyOutput() ClientsPolicyOutput {
	return i.ToClientsPolicyOutputWithContext(context.Background())
}

func (i *ClientsPolicy) ToClientsPolicyOutputWithContext(ctx context.Context) ClientsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsPolicyOutput)
}

// ClientsPolicyArrayInput is an input type that accepts ClientsPolicyArray and ClientsPolicyArrayOutput values.
// You can construct a concrete instance of `ClientsPolicyArrayInput` via:
//
//	ClientsPolicyArray{ ClientsPolicyArgs{...} }
type ClientsPolicyArrayInput interface {
	pulumi.Input

	ToClientsPolicyArrayOutput() ClientsPolicyArrayOutput
	ToClientsPolicyArrayOutputWithContext(context.Context) ClientsPolicyArrayOutput
}

type ClientsPolicyArray []ClientsPolicyInput

func (ClientsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientsPolicy)(nil)).Elem()
}

func (i ClientsPolicyArray) ToClientsPolicyArrayOutput() ClientsPolicyArrayOutput {
	return i.ToClientsPolicyArrayOutputWithContext(context.Background())
}

func (i ClientsPolicyArray) ToClientsPolicyArrayOutputWithContext(ctx context.Context) ClientsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsPolicyArrayOutput)
}

// ClientsPolicyMapInput is an input type that accepts ClientsPolicyMap and ClientsPolicyMapOutput values.
// You can construct a concrete instance of `ClientsPolicyMapInput` via:
//
//	ClientsPolicyMap{ "key": ClientsPolicyArgs{...} }
type ClientsPolicyMapInput interface {
	pulumi.Input

	ToClientsPolicyMapOutput() ClientsPolicyMapOutput
	ToClientsPolicyMapOutputWithContext(context.Context) ClientsPolicyMapOutput
}

type ClientsPolicyMap map[string]ClientsPolicyInput

func (ClientsPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientsPolicy)(nil)).Elem()
}

func (i ClientsPolicyMap) ToClientsPolicyMapOutput() ClientsPolicyMapOutput {
	return i.ToClientsPolicyMapOutputWithContext(context.Background())
}

func (i ClientsPolicyMap) ToClientsPolicyMapOutputWithContext(ctx context.Context) ClientsPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsPolicyMapOutput)
}

type ClientsPolicyOutput struct{ *pulumi.OutputState }

func (ClientsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientsPolicy)(nil)).Elem()
}

func (o ClientsPolicyOutput) ToClientsPolicyOutput() ClientsPolicyOutput {
	return o
}

func (o ClientsPolicyOutput) ToClientsPolicyOutputWithContext(ctx context.Context) ClientsPolicyOutput {
	return o
}

// clientId path parameter. Client ID
func (o ClientsPolicyOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsPolicy) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The name of the client's policy
func (o ClientsPolicyOutput) DevicePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsPolicy) pulumi.StringOutput { return v.DevicePolicy }).(pulumi.StringOutput)
}

// The group policy identifier of the client
func (o ClientsPolicyOutput) GroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsPolicy) pulumi.StringOutput { return v.GroupPolicyId }).(pulumi.StringOutput)
}

// The MAC address of the client
func (o ClientsPolicyOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsPolicy) pulumi.StringOutput { return v.Mac }).(pulumi.StringOutput)
}

// networkId path parameter. Network ID
func (o ClientsPolicyOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsPolicy) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type ClientsPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClientsPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientsPolicy)(nil)).Elem()
}

func (o ClientsPolicyArrayOutput) ToClientsPolicyArrayOutput() ClientsPolicyArrayOutput {
	return o
}

func (o ClientsPolicyArrayOutput) ToClientsPolicyArrayOutputWithContext(ctx context.Context) ClientsPolicyArrayOutput {
	return o
}

func (o ClientsPolicyArrayOutput) Index(i pulumi.IntInput) ClientsPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClientsPolicy {
		return vs[0].([]*ClientsPolicy)[vs[1].(int)]
	}).(ClientsPolicyOutput)
}

type ClientsPolicyMapOutput struct{ *pulumi.OutputState }

func (ClientsPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientsPolicy)(nil)).Elem()
}

func (o ClientsPolicyMapOutput) ToClientsPolicyMapOutput() ClientsPolicyMapOutput {
	return o
}

func (o ClientsPolicyMapOutput) ToClientsPolicyMapOutputWithContext(ctx context.Context) ClientsPolicyMapOutput {
	return o
}

func (o ClientsPolicyMapOutput) MapIndex(k pulumi.StringInput) ClientsPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClientsPolicy {
		return vs[0].(map[string]*ClientsPolicy)[vs[1].(string)]
	}).(ClientsPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsPolicyInput)(nil)).Elem(), &ClientsPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsPolicyArrayInput)(nil)).Elem(), ClientsPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsPolicyMapInput)(nil)).Elem(), ClientsPolicyMap{})
	pulumi.RegisterOutputType(ClientsPolicyOutput{})
	pulumi.RegisterOutputType(ClientsPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClientsPolicyMapOutput{})
}
