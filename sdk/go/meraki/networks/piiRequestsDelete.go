// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewPiiRequestsDelete(ctx, "example", &networks.PiiRequestsDeleteArgs{
//				NetworkId: pulumi.String("string"),
//				RequestId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksPiiRequestsDeleteExample", example)
//			return nil
//		})
//	}
//
// ```
type PiiRequestsDelete struct {
	pulumi.CustomResourceState

	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// requestId path parameter. Request ID
	RequestId pulumi.StringOutput `pulumi:"requestId"`
}

// NewPiiRequestsDelete registers a new resource with the given unique name, arguments, and options.
func NewPiiRequestsDelete(ctx *pulumi.Context,
	name string, args *PiiRequestsDeleteArgs, opts ...pulumi.ResourceOption) (*PiiRequestsDelete, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.RequestId == nil {
		return nil, errors.New("invalid value for required argument 'RequestId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PiiRequestsDelete
	err := ctx.RegisterResource("meraki:networks/piiRequestsDelete:PiiRequestsDelete", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPiiRequestsDelete gets an existing PiiRequestsDelete resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPiiRequestsDelete(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PiiRequestsDeleteState, opts ...pulumi.ResourceOption) (*PiiRequestsDelete, error) {
	var resource PiiRequestsDelete
	err := ctx.ReadResource("meraki:networks/piiRequestsDelete:PiiRequestsDelete", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PiiRequestsDelete resources.
type piiRequestsDeleteState struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// requestId path parameter. Request ID
	RequestId *string `pulumi:"requestId"`
}

type PiiRequestsDeleteState struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// requestId path parameter. Request ID
	RequestId pulumi.StringPtrInput
}

func (PiiRequestsDeleteState) ElementType() reflect.Type {
	return reflect.TypeOf((*piiRequestsDeleteState)(nil)).Elem()
}

type piiRequestsDeleteArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// requestId path parameter. Request ID
	RequestId string `pulumi:"requestId"`
}

// The set of arguments for constructing a PiiRequestsDelete resource.
type PiiRequestsDeleteArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// requestId path parameter. Request ID
	RequestId pulumi.StringInput
}

func (PiiRequestsDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*piiRequestsDeleteArgs)(nil)).Elem()
}

type PiiRequestsDeleteInput interface {
	pulumi.Input

	ToPiiRequestsDeleteOutput() PiiRequestsDeleteOutput
	ToPiiRequestsDeleteOutputWithContext(ctx context.Context) PiiRequestsDeleteOutput
}

func (*PiiRequestsDelete) ElementType() reflect.Type {
	return reflect.TypeOf((**PiiRequestsDelete)(nil)).Elem()
}

func (i *PiiRequestsDelete) ToPiiRequestsDeleteOutput() PiiRequestsDeleteOutput {
	return i.ToPiiRequestsDeleteOutputWithContext(context.Background())
}

func (i *PiiRequestsDelete) ToPiiRequestsDeleteOutputWithContext(ctx context.Context) PiiRequestsDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PiiRequestsDeleteOutput)
}

// PiiRequestsDeleteArrayInput is an input type that accepts PiiRequestsDeleteArray and PiiRequestsDeleteArrayOutput values.
// You can construct a concrete instance of `PiiRequestsDeleteArrayInput` via:
//
//	PiiRequestsDeleteArray{ PiiRequestsDeleteArgs{...} }
type PiiRequestsDeleteArrayInput interface {
	pulumi.Input

	ToPiiRequestsDeleteArrayOutput() PiiRequestsDeleteArrayOutput
	ToPiiRequestsDeleteArrayOutputWithContext(context.Context) PiiRequestsDeleteArrayOutput
}

type PiiRequestsDeleteArray []PiiRequestsDeleteInput

func (PiiRequestsDeleteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PiiRequestsDelete)(nil)).Elem()
}

func (i PiiRequestsDeleteArray) ToPiiRequestsDeleteArrayOutput() PiiRequestsDeleteArrayOutput {
	return i.ToPiiRequestsDeleteArrayOutputWithContext(context.Background())
}

func (i PiiRequestsDeleteArray) ToPiiRequestsDeleteArrayOutputWithContext(ctx context.Context) PiiRequestsDeleteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PiiRequestsDeleteArrayOutput)
}

// PiiRequestsDeleteMapInput is an input type that accepts PiiRequestsDeleteMap and PiiRequestsDeleteMapOutput values.
// You can construct a concrete instance of `PiiRequestsDeleteMapInput` via:
//
//	PiiRequestsDeleteMap{ "key": PiiRequestsDeleteArgs{...} }
type PiiRequestsDeleteMapInput interface {
	pulumi.Input

	ToPiiRequestsDeleteMapOutput() PiiRequestsDeleteMapOutput
	ToPiiRequestsDeleteMapOutputWithContext(context.Context) PiiRequestsDeleteMapOutput
}

type PiiRequestsDeleteMap map[string]PiiRequestsDeleteInput

func (PiiRequestsDeleteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PiiRequestsDelete)(nil)).Elem()
}

func (i PiiRequestsDeleteMap) ToPiiRequestsDeleteMapOutput() PiiRequestsDeleteMapOutput {
	return i.ToPiiRequestsDeleteMapOutputWithContext(context.Background())
}

func (i PiiRequestsDeleteMap) ToPiiRequestsDeleteMapOutputWithContext(ctx context.Context) PiiRequestsDeleteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PiiRequestsDeleteMapOutput)
}

type PiiRequestsDeleteOutput struct{ *pulumi.OutputState }

func (PiiRequestsDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PiiRequestsDelete)(nil)).Elem()
}

func (o PiiRequestsDeleteOutput) ToPiiRequestsDeleteOutput() PiiRequestsDeleteOutput {
	return o
}

func (o PiiRequestsDeleteOutput) ToPiiRequestsDeleteOutputWithContext(ctx context.Context) PiiRequestsDeleteOutput {
	return o
}

// networkId path parameter. Network ID
func (o PiiRequestsDeleteOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *PiiRequestsDelete) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// requestId path parameter. Request ID
func (o PiiRequestsDeleteOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *PiiRequestsDelete) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

type PiiRequestsDeleteArrayOutput struct{ *pulumi.OutputState }

func (PiiRequestsDeleteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PiiRequestsDelete)(nil)).Elem()
}

func (o PiiRequestsDeleteArrayOutput) ToPiiRequestsDeleteArrayOutput() PiiRequestsDeleteArrayOutput {
	return o
}

func (o PiiRequestsDeleteArrayOutput) ToPiiRequestsDeleteArrayOutputWithContext(ctx context.Context) PiiRequestsDeleteArrayOutput {
	return o
}

func (o PiiRequestsDeleteArrayOutput) Index(i pulumi.IntInput) PiiRequestsDeleteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PiiRequestsDelete {
		return vs[0].([]*PiiRequestsDelete)[vs[1].(int)]
	}).(PiiRequestsDeleteOutput)
}

type PiiRequestsDeleteMapOutput struct{ *pulumi.OutputState }

func (PiiRequestsDeleteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PiiRequestsDelete)(nil)).Elem()
}

func (o PiiRequestsDeleteMapOutput) ToPiiRequestsDeleteMapOutput() PiiRequestsDeleteMapOutput {
	return o
}

func (o PiiRequestsDeleteMapOutput) ToPiiRequestsDeleteMapOutputWithContext(ctx context.Context) PiiRequestsDeleteMapOutput {
	return o
}

func (o PiiRequestsDeleteMapOutput) MapIndex(k pulumi.StringInput) PiiRequestsDeleteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PiiRequestsDelete {
		return vs[0].(map[string]*PiiRequestsDelete)[vs[1].(string)]
	}).(PiiRequestsDeleteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PiiRequestsDeleteInput)(nil)).Elem(), &PiiRequestsDelete{})
	pulumi.RegisterInputType(reflect.TypeOf((*PiiRequestsDeleteArrayInput)(nil)).Elem(), PiiRequestsDeleteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PiiRequestsDeleteMapInput)(nil)).Elem(), PiiRequestsDeleteMap{})
	pulumi.RegisterOutputType(PiiRequestsDeleteOutput{})
	pulumi.RegisterOutputType(PiiRequestsDeleteArrayOutput{})
	pulumi.RegisterOutputType(PiiRequestsDeleteMapOutput{})
}
