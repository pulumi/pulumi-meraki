// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewFirmwareUpgradesStagedEventsDefer(ctx, "example", &networks.FirmwareUpgradesStagedEventsDeferArgs{
//				NetworkId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksFirmwareUpgradesStagedEventsDeferExample", example)
//			return nil
//		})
//	}
//
// ```
type FirmwareUpgradesStagedEventsDefer struct {
	pulumi.CustomResourceState

	Item FirmwareUpgradesStagedEventsDeferItemOutput `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewFirmwareUpgradesStagedEventsDefer registers a new resource with the given unique name, arguments, and options.
func NewFirmwareUpgradesStagedEventsDefer(ctx *pulumi.Context,
	name string, args *FirmwareUpgradesStagedEventsDeferArgs, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedEventsDefer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirmwareUpgradesStagedEventsDefer
	err := ctx.RegisterResource("meraki:networks/firmwareUpgradesStagedEventsDefer:FirmwareUpgradesStagedEventsDefer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirmwareUpgradesStagedEventsDefer gets an existing FirmwareUpgradesStagedEventsDefer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirmwareUpgradesStagedEventsDefer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirmwareUpgradesStagedEventsDeferState, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedEventsDefer, error) {
	var resource FirmwareUpgradesStagedEventsDefer
	err := ctx.ReadResource("meraki:networks/firmwareUpgradesStagedEventsDefer:FirmwareUpgradesStagedEventsDefer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirmwareUpgradesStagedEventsDefer resources.
type firmwareUpgradesStagedEventsDeferState struct {
	Item *FirmwareUpgradesStagedEventsDeferItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type FirmwareUpgradesStagedEventsDeferState struct {
	Item FirmwareUpgradesStagedEventsDeferItemPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (FirmwareUpgradesStagedEventsDeferState) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedEventsDeferState)(nil)).Elem()
}

type firmwareUpgradesStagedEventsDeferArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a FirmwareUpgradesStagedEventsDefer resource.
type FirmwareUpgradesStagedEventsDeferArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (FirmwareUpgradesStagedEventsDeferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedEventsDeferArgs)(nil)).Elem()
}

type FirmwareUpgradesStagedEventsDeferInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsDeferOutput() FirmwareUpgradesStagedEventsDeferOutput
	ToFirmwareUpgradesStagedEventsDeferOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferOutput
}

func (*FirmwareUpgradesStagedEventsDefer) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (i *FirmwareUpgradesStagedEventsDefer) ToFirmwareUpgradesStagedEventsDeferOutput() FirmwareUpgradesStagedEventsDeferOutput {
	return i.ToFirmwareUpgradesStagedEventsDeferOutputWithContext(context.Background())
}

func (i *FirmwareUpgradesStagedEventsDefer) ToFirmwareUpgradesStagedEventsDeferOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsDeferOutput)
}

// FirmwareUpgradesStagedEventsDeferArrayInput is an input type that accepts FirmwareUpgradesStagedEventsDeferArray and FirmwareUpgradesStagedEventsDeferArrayOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedEventsDeferArrayInput` via:
//
//	FirmwareUpgradesStagedEventsDeferArray{ FirmwareUpgradesStagedEventsDeferArgs{...} }
type FirmwareUpgradesStagedEventsDeferArrayInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsDeferArrayOutput() FirmwareUpgradesStagedEventsDeferArrayOutput
	ToFirmwareUpgradesStagedEventsDeferArrayOutputWithContext(context.Context) FirmwareUpgradesStagedEventsDeferArrayOutput
}

type FirmwareUpgradesStagedEventsDeferArray []FirmwareUpgradesStagedEventsDeferInput

func (FirmwareUpgradesStagedEventsDeferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (i FirmwareUpgradesStagedEventsDeferArray) ToFirmwareUpgradesStagedEventsDeferArrayOutput() FirmwareUpgradesStagedEventsDeferArrayOutput {
	return i.ToFirmwareUpgradesStagedEventsDeferArrayOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedEventsDeferArray) ToFirmwareUpgradesStagedEventsDeferArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsDeferArrayOutput)
}

// FirmwareUpgradesStagedEventsDeferMapInput is an input type that accepts FirmwareUpgradesStagedEventsDeferMap and FirmwareUpgradesStagedEventsDeferMapOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedEventsDeferMapInput` via:
//
//	FirmwareUpgradesStagedEventsDeferMap{ "key": FirmwareUpgradesStagedEventsDeferArgs{...} }
type FirmwareUpgradesStagedEventsDeferMapInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedEventsDeferMapOutput() FirmwareUpgradesStagedEventsDeferMapOutput
	ToFirmwareUpgradesStagedEventsDeferMapOutputWithContext(context.Context) FirmwareUpgradesStagedEventsDeferMapOutput
}

type FirmwareUpgradesStagedEventsDeferMap map[string]FirmwareUpgradesStagedEventsDeferInput

func (FirmwareUpgradesStagedEventsDeferMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (i FirmwareUpgradesStagedEventsDeferMap) ToFirmwareUpgradesStagedEventsDeferMapOutput() FirmwareUpgradesStagedEventsDeferMapOutput {
	return i.ToFirmwareUpgradesStagedEventsDeferMapOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedEventsDeferMap) ToFirmwareUpgradesStagedEventsDeferMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedEventsDeferMapOutput)
}

type FirmwareUpgradesStagedEventsDeferOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsDeferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsDeferOutput) ToFirmwareUpgradesStagedEventsDeferOutput() FirmwareUpgradesStagedEventsDeferOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferOutput) ToFirmwareUpgradesStagedEventsDeferOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferOutput) Item() FirmwareUpgradesStagedEventsDeferItemOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedEventsDefer) FirmwareUpgradesStagedEventsDeferItemOutput { return v.Item }).(FirmwareUpgradesStagedEventsDeferItemOutput)
}

// networkId path parameter. Network ID
func (o FirmwareUpgradesStagedEventsDeferOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedEventsDefer) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type FirmwareUpgradesStagedEventsDeferArrayOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsDeferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsDeferArrayOutput) ToFirmwareUpgradesStagedEventsDeferArrayOutput() FirmwareUpgradesStagedEventsDeferArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferArrayOutput) ToFirmwareUpgradesStagedEventsDeferArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferArrayOutput) Index(i pulumi.IntInput) FirmwareUpgradesStagedEventsDeferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedEventsDefer {
		return vs[0].([]*FirmwareUpgradesStagedEventsDefer)[vs[1].(int)]
	}).(FirmwareUpgradesStagedEventsDeferOutput)
}

type FirmwareUpgradesStagedEventsDeferMapOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedEventsDeferMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedEventsDefer)(nil)).Elem()
}

func (o FirmwareUpgradesStagedEventsDeferMapOutput) ToFirmwareUpgradesStagedEventsDeferMapOutput() FirmwareUpgradesStagedEventsDeferMapOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferMapOutput) ToFirmwareUpgradesStagedEventsDeferMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedEventsDeferMapOutput {
	return o
}

func (o FirmwareUpgradesStagedEventsDeferMapOutput) MapIndex(k pulumi.StringInput) FirmwareUpgradesStagedEventsDeferOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedEventsDefer {
		return vs[0].(map[string]*FirmwareUpgradesStagedEventsDefer)[vs[1].(string)]
	}).(FirmwareUpgradesStagedEventsDeferOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsDeferInput)(nil)).Elem(), &FirmwareUpgradesStagedEventsDefer{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsDeferArrayInput)(nil)).Elem(), FirmwareUpgradesStagedEventsDeferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedEventsDeferMapInput)(nil)).Elem(), FirmwareUpgradesStagedEventsDeferMap{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsDeferOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsDeferArrayOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedEventsDeferMapOutput{})
}
