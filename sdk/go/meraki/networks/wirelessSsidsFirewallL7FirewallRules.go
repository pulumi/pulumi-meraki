// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewWirelessSsidsFirewallL7FirewallRules(ctx, "example", &networks.WirelessSsidsFirewallL7FirewallRulesArgs{
//				NetworkId: pulumi.String("string"),
//				Number:    pulumi.String("string"),
//				Rules: networks.WirelessSsidsFirewallL7FirewallRulesRuleArray{
//					&networks.WirelessSsidsFirewallL7FirewallRulesRuleArgs{
//						Policy: pulumi.String("deny"),
//						Type:   pulumi.String("host"),
//						Value:  pulumi.String("google.com"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksWirelessSsidsFirewallL7FirewallRulesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/wirelessSsidsFirewallL7FirewallRules:WirelessSsidsFirewallL7FirewallRules example "network_id,number"
// ```
type WirelessSsidsFirewallL7FirewallRules struct {
	pulumi.CustomResourceState

	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// number path parameter.
	Number pulumi.StringOutput `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL7FirewallRulesRuleArrayOutput `pulumi:"rules"`
}

// NewWirelessSsidsFirewallL7FirewallRules registers a new resource with the given unique name, arguments, and options.
func NewWirelessSsidsFirewallL7FirewallRules(ctx *pulumi.Context,
	name string, args *WirelessSsidsFirewallL7FirewallRulesArgs, opts ...pulumi.ResourceOption) (*WirelessSsidsFirewallL7FirewallRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Number == nil {
		return nil, errors.New("invalid value for required argument 'Number'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessSsidsFirewallL7FirewallRules
	err := ctx.RegisterResource("meraki:networks/wirelessSsidsFirewallL7FirewallRules:WirelessSsidsFirewallL7FirewallRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessSsidsFirewallL7FirewallRules gets an existing WirelessSsidsFirewallL7FirewallRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessSsidsFirewallL7FirewallRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessSsidsFirewallL7FirewallRulesState, opts ...pulumi.ResourceOption) (*WirelessSsidsFirewallL7FirewallRules, error) {
	var resource WirelessSsidsFirewallL7FirewallRules
	err := ctx.ReadResource("meraki:networks/wirelessSsidsFirewallL7FirewallRules:WirelessSsidsFirewallL7FirewallRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessSsidsFirewallL7FirewallRules resources.
type wirelessSsidsFirewallL7FirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// number path parameter.
	Number *string `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []WirelessSsidsFirewallL7FirewallRulesRule `pulumi:"rules"`
}

type WirelessSsidsFirewallL7FirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// number path parameter.
	Number pulumi.StringPtrInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL7FirewallRulesRuleArrayInput
}

func (WirelessSsidsFirewallL7FirewallRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsFirewallL7FirewallRulesState)(nil)).Elem()
}

type wirelessSsidsFirewallL7FirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// number path parameter.
	Number string `pulumi:"number"`
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules []WirelessSsidsFirewallL7FirewallRulesRule `pulumi:"rules"`
}

// The set of arguments for constructing a WirelessSsidsFirewallL7FirewallRules resource.
type WirelessSsidsFirewallL7FirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// number path parameter.
	Number pulumi.StringInput
	// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
	Rules WirelessSsidsFirewallL7FirewallRulesRuleArrayInput
}

func (WirelessSsidsFirewallL7FirewallRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsFirewallL7FirewallRulesArgs)(nil)).Elem()
}

type WirelessSsidsFirewallL7FirewallRulesInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL7FirewallRulesOutput() WirelessSsidsFirewallL7FirewallRulesOutput
	ToWirelessSsidsFirewallL7FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesOutput
}

func (*WirelessSsidsFirewallL7FirewallRules) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (i *WirelessSsidsFirewallL7FirewallRules) ToWirelessSsidsFirewallL7FirewallRulesOutput() WirelessSsidsFirewallL7FirewallRulesOutput {
	return i.ToWirelessSsidsFirewallL7FirewallRulesOutputWithContext(context.Background())
}

func (i *WirelessSsidsFirewallL7FirewallRules) ToWirelessSsidsFirewallL7FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL7FirewallRulesOutput)
}

// WirelessSsidsFirewallL7FirewallRulesArrayInput is an input type that accepts WirelessSsidsFirewallL7FirewallRulesArray and WirelessSsidsFirewallL7FirewallRulesArrayOutput values.
// You can construct a concrete instance of `WirelessSsidsFirewallL7FirewallRulesArrayInput` via:
//
//	WirelessSsidsFirewallL7FirewallRulesArray{ WirelessSsidsFirewallL7FirewallRulesArgs{...} }
type WirelessSsidsFirewallL7FirewallRulesArrayInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL7FirewallRulesArrayOutput() WirelessSsidsFirewallL7FirewallRulesArrayOutput
	ToWirelessSsidsFirewallL7FirewallRulesArrayOutputWithContext(context.Context) WirelessSsidsFirewallL7FirewallRulesArrayOutput
}

type WirelessSsidsFirewallL7FirewallRulesArray []WirelessSsidsFirewallL7FirewallRulesInput

func (WirelessSsidsFirewallL7FirewallRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (i WirelessSsidsFirewallL7FirewallRulesArray) ToWirelessSsidsFirewallL7FirewallRulesArrayOutput() WirelessSsidsFirewallL7FirewallRulesArrayOutput {
	return i.ToWirelessSsidsFirewallL7FirewallRulesArrayOutputWithContext(context.Background())
}

func (i WirelessSsidsFirewallL7FirewallRulesArray) ToWirelessSsidsFirewallL7FirewallRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL7FirewallRulesArrayOutput)
}

// WirelessSsidsFirewallL7FirewallRulesMapInput is an input type that accepts WirelessSsidsFirewallL7FirewallRulesMap and WirelessSsidsFirewallL7FirewallRulesMapOutput values.
// You can construct a concrete instance of `WirelessSsidsFirewallL7FirewallRulesMapInput` via:
//
//	WirelessSsidsFirewallL7FirewallRulesMap{ "key": WirelessSsidsFirewallL7FirewallRulesArgs{...} }
type WirelessSsidsFirewallL7FirewallRulesMapInput interface {
	pulumi.Input

	ToWirelessSsidsFirewallL7FirewallRulesMapOutput() WirelessSsidsFirewallL7FirewallRulesMapOutput
	ToWirelessSsidsFirewallL7FirewallRulesMapOutputWithContext(context.Context) WirelessSsidsFirewallL7FirewallRulesMapOutput
}

type WirelessSsidsFirewallL7FirewallRulesMap map[string]WirelessSsidsFirewallL7FirewallRulesInput

func (WirelessSsidsFirewallL7FirewallRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (i WirelessSsidsFirewallL7FirewallRulesMap) ToWirelessSsidsFirewallL7FirewallRulesMapOutput() WirelessSsidsFirewallL7FirewallRulesMapOutput {
	return i.ToWirelessSsidsFirewallL7FirewallRulesMapOutputWithContext(context.Background())
}

func (i WirelessSsidsFirewallL7FirewallRulesMap) ToWirelessSsidsFirewallL7FirewallRulesMapOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsFirewallL7FirewallRulesMapOutput)
}

type WirelessSsidsFirewallL7FirewallRulesOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL7FirewallRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL7FirewallRulesOutput) ToWirelessSsidsFirewallL7FirewallRulesOutput() WirelessSsidsFirewallL7FirewallRulesOutput {
	return o
}

func (o WirelessSsidsFirewallL7FirewallRulesOutput) ToWirelessSsidsFirewallL7FirewallRulesOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesOutput {
	return o
}

// networkId path parameter. Network ID
func (o WirelessSsidsFirewallL7FirewallRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL7FirewallRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// number path parameter.
func (o WirelessSsidsFirewallL7FirewallRulesOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL7FirewallRules) pulumi.StringOutput { return v.Number }).(pulumi.StringOutput)
}

// An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule).
func (o WirelessSsidsFirewallL7FirewallRulesOutput) Rules() WirelessSsidsFirewallL7FirewallRulesRuleArrayOutput {
	return o.ApplyT(func(v *WirelessSsidsFirewallL7FirewallRules) WirelessSsidsFirewallL7FirewallRulesRuleArrayOutput {
		return v.Rules
	}).(WirelessSsidsFirewallL7FirewallRulesRuleArrayOutput)
}

type WirelessSsidsFirewallL7FirewallRulesArrayOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL7FirewallRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL7FirewallRulesArrayOutput) ToWirelessSsidsFirewallL7FirewallRulesArrayOutput() WirelessSsidsFirewallL7FirewallRulesArrayOutput {
	return o
}

func (o WirelessSsidsFirewallL7FirewallRulesArrayOutput) ToWirelessSsidsFirewallL7FirewallRulesArrayOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesArrayOutput {
	return o
}

func (o WirelessSsidsFirewallL7FirewallRulesArrayOutput) Index(i pulumi.IntInput) WirelessSsidsFirewallL7FirewallRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessSsidsFirewallL7FirewallRules {
		return vs[0].([]*WirelessSsidsFirewallL7FirewallRules)[vs[1].(int)]
	}).(WirelessSsidsFirewallL7FirewallRulesOutput)
}

type WirelessSsidsFirewallL7FirewallRulesMapOutput struct{ *pulumi.OutputState }

func (WirelessSsidsFirewallL7FirewallRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsFirewallL7FirewallRules)(nil)).Elem()
}

func (o WirelessSsidsFirewallL7FirewallRulesMapOutput) ToWirelessSsidsFirewallL7FirewallRulesMapOutput() WirelessSsidsFirewallL7FirewallRulesMapOutput {
	return o
}

func (o WirelessSsidsFirewallL7FirewallRulesMapOutput) ToWirelessSsidsFirewallL7FirewallRulesMapOutputWithContext(ctx context.Context) WirelessSsidsFirewallL7FirewallRulesMapOutput {
	return o
}

func (o WirelessSsidsFirewallL7FirewallRulesMapOutput) MapIndex(k pulumi.StringInput) WirelessSsidsFirewallL7FirewallRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessSsidsFirewallL7FirewallRules {
		return vs[0].(map[string]*WirelessSsidsFirewallL7FirewallRules)[vs[1].(string)]
	}).(WirelessSsidsFirewallL7FirewallRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL7FirewallRulesInput)(nil)).Elem(), &WirelessSsidsFirewallL7FirewallRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL7FirewallRulesArrayInput)(nil)).Elem(), WirelessSsidsFirewallL7FirewallRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsFirewallL7FirewallRulesMapInput)(nil)).Elem(), WirelessSsidsFirewallL7FirewallRulesMap{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL7FirewallRulesOutput{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL7FirewallRulesArrayOutput{})
	pulumi.RegisterOutputType(WirelessSsidsFirewallL7FirewallRulesMapOutput{})
}
