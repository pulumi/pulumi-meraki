// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/wirelessSsidsEapOverride:WirelessSsidsEapOverride example "network_id,number"
// ```
type WirelessSsidsEapOverride struct {
	pulumi.CustomResourceState

	// EAPOL Key settings.
	EapolKey WirelessSsidsEapOverrideEapolKeyOutput `pulumi:"eapolKey"`
	// EAP settings for identity requests.
	Identity WirelessSsidsEapOverrideIdentityOutput `pulumi:"identity"`
	// Maximum number of general EAP retries.
	MaxRetries pulumi.IntOutput `pulumi:"maxRetries"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// number path parameter.
	Number pulumi.StringOutput `pulumi:"number"`
	// General EAP timeout in seconds.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
}

// NewWirelessSsidsEapOverride registers a new resource with the given unique name, arguments, and options.
func NewWirelessSsidsEapOverride(ctx *pulumi.Context,
	name string, args *WirelessSsidsEapOverrideArgs, opts ...pulumi.ResourceOption) (*WirelessSsidsEapOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Number == nil {
		return nil, errors.New("invalid value for required argument 'Number'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessSsidsEapOverride
	err := ctx.RegisterResource("meraki:networks/wirelessSsidsEapOverride:WirelessSsidsEapOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessSsidsEapOverride gets an existing WirelessSsidsEapOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessSsidsEapOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessSsidsEapOverrideState, opts ...pulumi.ResourceOption) (*WirelessSsidsEapOverride, error) {
	var resource WirelessSsidsEapOverride
	err := ctx.ReadResource("meraki:networks/wirelessSsidsEapOverride:WirelessSsidsEapOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessSsidsEapOverride resources.
type wirelessSsidsEapOverrideState struct {
	// EAPOL Key settings.
	EapolKey *WirelessSsidsEapOverrideEapolKey `pulumi:"eapolKey"`
	// EAP settings for identity requests.
	Identity *WirelessSsidsEapOverrideIdentity `pulumi:"identity"`
	// Maximum number of general EAP retries.
	MaxRetries *int `pulumi:"maxRetries"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// number path parameter.
	Number *string `pulumi:"number"`
	// General EAP timeout in seconds.
	Timeout *int `pulumi:"timeout"`
}

type WirelessSsidsEapOverrideState struct {
	// EAPOL Key settings.
	EapolKey WirelessSsidsEapOverrideEapolKeyPtrInput
	// EAP settings for identity requests.
	Identity WirelessSsidsEapOverrideIdentityPtrInput
	// Maximum number of general EAP retries.
	MaxRetries pulumi.IntPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// number path parameter.
	Number pulumi.StringPtrInput
	// General EAP timeout in seconds.
	Timeout pulumi.IntPtrInput
}

func (WirelessSsidsEapOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsEapOverrideState)(nil)).Elem()
}

type wirelessSsidsEapOverrideArgs struct {
	// EAPOL Key settings.
	EapolKey *WirelessSsidsEapOverrideEapolKey `pulumi:"eapolKey"`
	// EAP settings for identity requests.
	Identity *WirelessSsidsEapOverrideIdentity `pulumi:"identity"`
	// Maximum number of general EAP retries.
	MaxRetries *int `pulumi:"maxRetries"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// number path parameter.
	Number string `pulumi:"number"`
	// General EAP timeout in seconds.
	Timeout *int `pulumi:"timeout"`
}

// The set of arguments for constructing a WirelessSsidsEapOverride resource.
type WirelessSsidsEapOverrideArgs struct {
	// EAPOL Key settings.
	EapolKey WirelessSsidsEapOverrideEapolKeyPtrInput
	// EAP settings for identity requests.
	Identity WirelessSsidsEapOverrideIdentityPtrInput
	// Maximum number of general EAP retries.
	MaxRetries pulumi.IntPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// number path parameter.
	Number pulumi.StringInput
	// General EAP timeout in seconds.
	Timeout pulumi.IntPtrInput
}

func (WirelessSsidsEapOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessSsidsEapOverrideArgs)(nil)).Elem()
}

type WirelessSsidsEapOverrideInput interface {
	pulumi.Input

	ToWirelessSsidsEapOverrideOutput() WirelessSsidsEapOverrideOutput
	ToWirelessSsidsEapOverrideOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideOutput
}

func (*WirelessSsidsEapOverride) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsEapOverride)(nil)).Elem()
}

func (i *WirelessSsidsEapOverride) ToWirelessSsidsEapOverrideOutput() WirelessSsidsEapOverrideOutput {
	return i.ToWirelessSsidsEapOverrideOutputWithContext(context.Background())
}

func (i *WirelessSsidsEapOverride) ToWirelessSsidsEapOverrideOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsEapOverrideOutput)
}

// WirelessSsidsEapOverrideArrayInput is an input type that accepts WirelessSsidsEapOverrideArray and WirelessSsidsEapOverrideArrayOutput values.
// You can construct a concrete instance of `WirelessSsidsEapOverrideArrayInput` via:
//
//	WirelessSsidsEapOverrideArray{ WirelessSsidsEapOverrideArgs{...} }
type WirelessSsidsEapOverrideArrayInput interface {
	pulumi.Input

	ToWirelessSsidsEapOverrideArrayOutput() WirelessSsidsEapOverrideArrayOutput
	ToWirelessSsidsEapOverrideArrayOutputWithContext(context.Context) WirelessSsidsEapOverrideArrayOutput
}

type WirelessSsidsEapOverrideArray []WirelessSsidsEapOverrideInput

func (WirelessSsidsEapOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsEapOverride)(nil)).Elem()
}

func (i WirelessSsidsEapOverrideArray) ToWirelessSsidsEapOverrideArrayOutput() WirelessSsidsEapOverrideArrayOutput {
	return i.ToWirelessSsidsEapOverrideArrayOutputWithContext(context.Background())
}

func (i WirelessSsidsEapOverrideArray) ToWirelessSsidsEapOverrideArrayOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsEapOverrideArrayOutput)
}

// WirelessSsidsEapOverrideMapInput is an input type that accepts WirelessSsidsEapOverrideMap and WirelessSsidsEapOverrideMapOutput values.
// You can construct a concrete instance of `WirelessSsidsEapOverrideMapInput` via:
//
//	WirelessSsidsEapOverrideMap{ "key": WirelessSsidsEapOverrideArgs{...} }
type WirelessSsidsEapOverrideMapInput interface {
	pulumi.Input

	ToWirelessSsidsEapOverrideMapOutput() WirelessSsidsEapOverrideMapOutput
	ToWirelessSsidsEapOverrideMapOutputWithContext(context.Context) WirelessSsidsEapOverrideMapOutput
}

type WirelessSsidsEapOverrideMap map[string]WirelessSsidsEapOverrideInput

func (WirelessSsidsEapOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsEapOverride)(nil)).Elem()
}

func (i WirelessSsidsEapOverrideMap) ToWirelessSsidsEapOverrideMapOutput() WirelessSsidsEapOverrideMapOutput {
	return i.ToWirelessSsidsEapOverrideMapOutputWithContext(context.Background())
}

func (i WirelessSsidsEapOverrideMap) ToWirelessSsidsEapOverrideMapOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessSsidsEapOverrideMapOutput)
}

type WirelessSsidsEapOverrideOutput struct{ *pulumi.OutputState }

func (WirelessSsidsEapOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessSsidsEapOverride)(nil)).Elem()
}

func (o WirelessSsidsEapOverrideOutput) ToWirelessSsidsEapOverrideOutput() WirelessSsidsEapOverrideOutput {
	return o
}

func (o WirelessSsidsEapOverrideOutput) ToWirelessSsidsEapOverrideOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideOutput {
	return o
}

// EAPOL Key settings.
func (o WirelessSsidsEapOverrideOutput) EapolKey() WirelessSsidsEapOverrideEapolKeyOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) WirelessSsidsEapOverrideEapolKeyOutput { return v.EapolKey }).(WirelessSsidsEapOverrideEapolKeyOutput)
}

// EAP settings for identity requests.
func (o WirelessSsidsEapOverrideOutput) Identity() WirelessSsidsEapOverrideIdentityOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) WirelessSsidsEapOverrideIdentityOutput { return v.Identity }).(WirelessSsidsEapOverrideIdentityOutput)
}

// Maximum number of general EAP retries.
func (o WirelessSsidsEapOverrideOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) pulumi.IntOutput { return v.MaxRetries }).(pulumi.IntOutput)
}

// networkId path parameter. Network ID
func (o WirelessSsidsEapOverrideOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// number path parameter.
func (o WirelessSsidsEapOverrideOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) pulumi.StringOutput { return v.Number }).(pulumi.StringOutput)
}

// General EAP timeout in seconds.
func (o WirelessSsidsEapOverrideOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessSsidsEapOverride) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

type WirelessSsidsEapOverrideArrayOutput struct{ *pulumi.OutputState }

func (WirelessSsidsEapOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessSsidsEapOverride)(nil)).Elem()
}

func (o WirelessSsidsEapOverrideArrayOutput) ToWirelessSsidsEapOverrideArrayOutput() WirelessSsidsEapOverrideArrayOutput {
	return o
}

func (o WirelessSsidsEapOverrideArrayOutput) ToWirelessSsidsEapOverrideArrayOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideArrayOutput {
	return o
}

func (o WirelessSsidsEapOverrideArrayOutput) Index(i pulumi.IntInput) WirelessSsidsEapOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessSsidsEapOverride {
		return vs[0].([]*WirelessSsidsEapOverride)[vs[1].(int)]
	}).(WirelessSsidsEapOverrideOutput)
}

type WirelessSsidsEapOverrideMapOutput struct{ *pulumi.OutputState }

func (WirelessSsidsEapOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessSsidsEapOverride)(nil)).Elem()
}

func (o WirelessSsidsEapOverrideMapOutput) ToWirelessSsidsEapOverrideMapOutput() WirelessSsidsEapOverrideMapOutput {
	return o
}

func (o WirelessSsidsEapOverrideMapOutput) ToWirelessSsidsEapOverrideMapOutputWithContext(ctx context.Context) WirelessSsidsEapOverrideMapOutput {
	return o
}

func (o WirelessSsidsEapOverrideMapOutput) MapIndex(k pulumi.StringInput) WirelessSsidsEapOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessSsidsEapOverride {
		return vs[0].(map[string]*WirelessSsidsEapOverride)[vs[1].(string)]
	}).(WirelessSsidsEapOverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsEapOverrideInput)(nil)).Elem(), &WirelessSsidsEapOverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsEapOverrideArrayInput)(nil)).Elem(), WirelessSsidsEapOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessSsidsEapOverrideMapInput)(nil)).Elem(), WirelessSsidsEapOverrideMap{})
	pulumi.RegisterOutputType(WirelessSsidsEapOverrideOutput{})
	pulumi.RegisterOutputType(WirelessSsidsEapOverrideArrayOutput{})
	pulumi.RegisterOutputType(WirelessSsidsEapOverrideMapOutput{})
}
