// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/applianceFirewallCellularFirewallRules:ApplianceFirewallCellularFirewallRules example "network_id"
// ```
type ApplianceFirewallCellularFirewallRules struct {
	pulumi.CustomResourceState

	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallCellularFirewallRulesRuleArrayOutput `pulumi:"rules"`
}

// NewApplianceFirewallCellularFirewallRules registers a new resource with the given unique name, arguments, and options.
func NewApplianceFirewallCellularFirewallRules(ctx *pulumi.Context,
	name string, args *ApplianceFirewallCellularFirewallRulesArgs, opts ...pulumi.ResourceOption) (*ApplianceFirewallCellularFirewallRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceFirewallCellularFirewallRules
	err := ctx.RegisterResource("meraki:networks/applianceFirewallCellularFirewallRules:ApplianceFirewallCellularFirewallRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceFirewallCellularFirewallRules gets an existing ApplianceFirewallCellularFirewallRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceFirewallCellularFirewallRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceFirewallCellularFirewallRulesState, opts ...pulumi.ResourceOption) (*ApplianceFirewallCellularFirewallRules, error) {
	var resource ApplianceFirewallCellularFirewallRules
	err := ctx.ReadResource("meraki:networks/applianceFirewallCellularFirewallRules:ApplianceFirewallCellularFirewallRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceFirewallCellularFirewallRules resources.
type applianceFirewallCellularFirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceFirewallCellularFirewallRulesRule `pulumi:"rules"`
}

type ApplianceFirewallCellularFirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallCellularFirewallRulesRuleArrayInput
}

func (ApplianceFirewallCellularFirewallRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallCellularFirewallRulesState)(nil)).Elem()
}

type applianceFirewallCellularFirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceFirewallCellularFirewallRulesRule `pulumi:"rules"`
}

// The set of arguments for constructing a ApplianceFirewallCellularFirewallRules resource.
type ApplianceFirewallCellularFirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallCellularFirewallRulesRuleArrayInput
}

func (ApplianceFirewallCellularFirewallRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallCellularFirewallRulesArgs)(nil)).Elem()
}

type ApplianceFirewallCellularFirewallRulesInput interface {
	pulumi.Input

	ToApplianceFirewallCellularFirewallRulesOutput() ApplianceFirewallCellularFirewallRulesOutput
	ToApplianceFirewallCellularFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesOutput
}

func (*ApplianceFirewallCellularFirewallRules) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (i *ApplianceFirewallCellularFirewallRules) ToApplianceFirewallCellularFirewallRulesOutput() ApplianceFirewallCellularFirewallRulesOutput {
	return i.ToApplianceFirewallCellularFirewallRulesOutputWithContext(context.Background())
}

func (i *ApplianceFirewallCellularFirewallRules) ToApplianceFirewallCellularFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallCellularFirewallRulesOutput)
}

// ApplianceFirewallCellularFirewallRulesArrayInput is an input type that accepts ApplianceFirewallCellularFirewallRulesArray and ApplianceFirewallCellularFirewallRulesArrayOutput values.
// You can construct a concrete instance of `ApplianceFirewallCellularFirewallRulesArrayInput` via:
//
//	ApplianceFirewallCellularFirewallRulesArray{ ApplianceFirewallCellularFirewallRulesArgs{...} }
type ApplianceFirewallCellularFirewallRulesArrayInput interface {
	pulumi.Input

	ToApplianceFirewallCellularFirewallRulesArrayOutput() ApplianceFirewallCellularFirewallRulesArrayOutput
	ToApplianceFirewallCellularFirewallRulesArrayOutputWithContext(context.Context) ApplianceFirewallCellularFirewallRulesArrayOutput
}

type ApplianceFirewallCellularFirewallRulesArray []ApplianceFirewallCellularFirewallRulesInput

func (ApplianceFirewallCellularFirewallRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (i ApplianceFirewallCellularFirewallRulesArray) ToApplianceFirewallCellularFirewallRulesArrayOutput() ApplianceFirewallCellularFirewallRulesArrayOutput {
	return i.ToApplianceFirewallCellularFirewallRulesArrayOutputWithContext(context.Background())
}

func (i ApplianceFirewallCellularFirewallRulesArray) ToApplianceFirewallCellularFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallCellularFirewallRulesArrayOutput)
}

// ApplianceFirewallCellularFirewallRulesMapInput is an input type that accepts ApplianceFirewallCellularFirewallRulesMap and ApplianceFirewallCellularFirewallRulesMapOutput values.
// You can construct a concrete instance of `ApplianceFirewallCellularFirewallRulesMapInput` via:
//
//	ApplianceFirewallCellularFirewallRulesMap{ "key": ApplianceFirewallCellularFirewallRulesArgs{...} }
type ApplianceFirewallCellularFirewallRulesMapInput interface {
	pulumi.Input

	ToApplianceFirewallCellularFirewallRulesMapOutput() ApplianceFirewallCellularFirewallRulesMapOutput
	ToApplianceFirewallCellularFirewallRulesMapOutputWithContext(context.Context) ApplianceFirewallCellularFirewallRulesMapOutput
}

type ApplianceFirewallCellularFirewallRulesMap map[string]ApplianceFirewallCellularFirewallRulesInput

func (ApplianceFirewallCellularFirewallRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (i ApplianceFirewallCellularFirewallRulesMap) ToApplianceFirewallCellularFirewallRulesMapOutput() ApplianceFirewallCellularFirewallRulesMapOutput {
	return i.ToApplianceFirewallCellularFirewallRulesMapOutputWithContext(context.Background())
}

func (i ApplianceFirewallCellularFirewallRulesMap) ToApplianceFirewallCellularFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallCellularFirewallRulesMapOutput)
}

type ApplianceFirewallCellularFirewallRulesOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallCellularFirewallRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallCellularFirewallRulesOutput) ToApplianceFirewallCellularFirewallRulesOutput() ApplianceFirewallCellularFirewallRulesOutput {
	return o
}

func (o ApplianceFirewallCellularFirewallRulesOutput) ToApplianceFirewallCellularFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesOutput {
	return o
}

// networkId path parameter. Network ID
func (o ApplianceFirewallCellularFirewallRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceFirewallCellularFirewallRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// An ordered array of the firewall rules (not including the default rule)
func (o ApplianceFirewallCellularFirewallRulesOutput) Rules() ApplianceFirewallCellularFirewallRulesRuleArrayOutput {
	return o.ApplyT(func(v *ApplianceFirewallCellularFirewallRules) ApplianceFirewallCellularFirewallRulesRuleArrayOutput {
		return v.Rules
	}).(ApplianceFirewallCellularFirewallRulesRuleArrayOutput)
}

type ApplianceFirewallCellularFirewallRulesArrayOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallCellularFirewallRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallCellularFirewallRulesArrayOutput) ToApplianceFirewallCellularFirewallRulesArrayOutput() ApplianceFirewallCellularFirewallRulesArrayOutput {
	return o
}

func (o ApplianceFirewallCellularFirewallRulesArrayOutput) ToApplianceFirewallCellularFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesArrayOutput {
	return o
}

func (o ApplianceFirewallCellularFirewallRulesArrayOutput) Index(i pulumi.IntInput) ApplianceFirewallCellularFirewallRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceFirewallCellularFirewallRules {
		return vs[0].([]*ApplianceFirewallCellularFirewallRules)[vs[1].(int)]
	}).(ApplianceFirewallCellularFirewallRulesOutput)
}

type ApplianceFirewallCellularFirewallRulesMapOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallCellularFirewallRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallCellularFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallCellularFirewallRulesMapOutput) ToApplianceFirewallCellularFirewallRulesMapOutput() ApplianceFirewallCellularFirewallRulesMapOutput {
	return o
}

func (o ApplianceFirewallCellularFirewallRulesMapOutput) ToApplianceFirewallCellularFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallCellularFirewallRulesMapOutput {
	return o
}

func (o ApplianceFirewallCellularFirewallRulesMapOutput) MapIndex(k pulumi.StringInput) ApplianceFirewallCellularFirewallRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceFirewallCellularFirewallRules {
		return vs[0].(map[string]*ApplianceFirewallCellularFirewallRules)[vs[1].(string)]
	}).(ApplianceFirewallCellularFirewallRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallCellularFirewallRulesInput)(nil)).Elem(), &ApplianceFirewallCellularFirewallRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallCellularFirewallRulesArrayInput)(nil)).Elem(), ApplianceFirewallCellularFirewallRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallCellularFirewallRulesMapInput)(nil)).Elem(), ApplianceFirewallCellularFirewallRulesMap{})
	pulumi.RegisterOutputType(ApplianceFirewallCellularFirewallRulesOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallCellularFirewallRulesArrayOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallCellularFirewallRulesMapOutput{})
}
