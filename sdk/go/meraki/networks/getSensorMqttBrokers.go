// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupSensorMqttBrokers(ctx *pulumi.Context, args *LookupSensorMqttBrokersArgs, opts ...pulumi.InvokeOption) (*LookupSensorMqttBrokersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSensorMqttBrokersResult
	err := ctx.Invoke("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSensorMqttBrokers.
type LookupSensorMqttBrokersArgs struct {
	// mqttBrokerId path parameter. Mqtt broker ID
	MqttBrokerId *string `pulumi:"mqttBrokerId"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

// A collection of values returned by getSensorMqttBrokers.
type LookupSensorMqttBrokersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                   `pulumi:"id"`
	Item GetSensorMqttBrokersItem `pulumi:"item"`
	// Array of ResponseSensorGetNetworkSensorMqttBrokers
	Items []GetSensorMqttBrokersItem `pulumi:"items"`
	// mqttBrokerId path parameter. Mqtt broker ID
	MqttBrokerId *string `pulumi:"mqttBrokerId"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

func LookupSensorMqttBrokersOutput(ctx *pulumi.Context, args LookupSensorMqttBrokersOutputArgs, opts ...pulumi.InvokeOption) LookupSensorMqttBrokersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSensorMqttBrokersResultOutput, error) {
			args := v.(LookupSensorMqttBrokersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:networks/getSensorMqttBrokers:getSensorMqttBrokers", args, LookupSensorMqttBrokersResultOutput{}, options).(LookupSensorMqttBrokersResultOutput), nil
		}).(LookupSensorMqttBrokersResultOutput)
}

// A collection of arguments for invoking getSensorMqttBrokers.
type LookupSensorMqttBrokersOutputArgs struct {
	// mqttBrokerId path parameter. Mqtt broker ID
	MqttBrokerId pulumi.StringPtrInput `pulumi:"mqttBrokerId"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
}

func (LookupSensorMqttBrokersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSensorMqttBrokersArgs)(nil)).Elem()
}

// A collection of values returned by getSensorMqttBrokers.
type LookupSensorMqttBrokersResultOutput struct{ *pulumi.OutputState }

func (LookupSensorMqttBrokersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSensorMqttBrokersResult)(nil)).Elem()
}

func (o LookupSensorMqttBrokersResultOutput) ToLookupSensorMqttBrokersResultOutput() LookupSensorMqttBrokersResultOutput {
	return o
}

func (o LookupSensorMqttBrokersResultOutput) ToLookupSensorMqttBrokersResultOutputWithContext(ctx context.Context) LookupSensorMqttBrokersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSensorMqttBrokersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensorMqttBrokersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSensorMqttBrokersResultOutput) Item() GetSensorMqttBrokersItemOutput {
	return o.ApplyT(func(v LookupSensorMqttBrokersResult) GetSensorMqttBrokersItem { return v.Item }).(GetSensorMqttBrokersItemOutput)
}

// Array of ResponseSensorGetNetworkSensorMqttBrokers
func (o LookupSensorMqttBrokersResultOutput) Items() GetSensorMqttBrokersItemArrayOutput {
	return o.ApplyT(func(v LookupSensorMqttBrokersResult) []GetSensorMqttBrokersItem { return v.Items }).(GetSensorMqttBrokersItemArrayOutput)
}

// mqttBrokerId path parameter. Mqtt broker ID
func (o LookupSensorMqttBrokersResultOutput) MqttBrokerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSensorMqttBrokersResult) *string { return v.MqttBrokerId }).(pulumi.StringPtrOutput)
}

// networkId path parameter. Network ID
func (o LookupSensorMqttBrokersResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSensorMqttBrokersResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSensorMqttBrokersResultOutput{})
}
