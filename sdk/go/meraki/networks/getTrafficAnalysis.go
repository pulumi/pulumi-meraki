// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupTrafficAnalysis(ctx, &networks.LookupTrafficAnalysisArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksTrafficAnalysisExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupTrafficAnalysis(ctx *pulumi.Context, args *LookupTrafficAnalysisArgs, opts ...pulumi.InvokeOption) (*LookupTrafficAnalysisResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTrafficAnalysisResult
	err := ctx.Invoke("meraki:networks/getTrafficAnalysis:getTrafficAnalysis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficAnalysis.
type LookupTrafficAnalysisArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getTrafficAnalysis.
type LookupTrafficAnalysisResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                 `pulumi:"id"`
	Item GetTrafficAnalysisItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupTrafficAnalysisOutput(ctx *pulumi.Context, args LookupTrafficAnalysisOutputArgs, opts ...pulumi.InvokeOption) LookupTrafficAnalysisResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrafficAnalysisResult, error) {
			args := v.(LookupTrafficAnalysisArgs)
			r, err := LookupTrafficAnalysis(ctx, &args, opts...)
			var s LookupTrafficAnalysisResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrafficAnalysisResultOutput)
}

// A collection of arguments for invoking getTrafficAnalysis.
type LookupTrafficAnalysisOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupTrafficAnalysisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrafficAnalysisArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficAnalysis.
type LookupTrafficAnalysisResultOutput struct{ *pulumi.OutputState }

func (LookupTrafficAnalysisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrafficAnalysisResult)(nil)).Elem()
}

func (o LookupTrafficAnalysisResultOutput) ToLookupTrafficAnalysisResultOutput() LookupTrafficAnalysisResultOutput {
	return o
}

func (o LookupTrafficAnalysisResultOutput) ToLookupTrafficAnalysisResultOutputWithContext(ctx context.Context) LookupTrafficAnalysisResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTrafficAnalysisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrafficAnalysisResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTrafficAnalysisResultOutput) Item() GetTrafficAnalysisItemOutput {
	return o.ApplyT(func(v LookupTrafficAnalysisResult) GetTrafficAnalysisItem { return v.Item }).(GetTrafficAnalysisItemOutput)
}

// networkId path parameter. Network ID
func (o LookupTrafficAnalysisResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrafficAnalysisResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrafficAnalysisResultOutput{})
}
