// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewWebhooksHttpServers(ctx, "example", &networks.WebhooksHttpServersArgs{
//				Name:      pulumi.String("Example Webhook Server"),
//				NetworkId: pulumi.String("string"),
//				PayloadTemplate: &networks.WebhooksHttpServersPayloadTemplateArgs{
//					Name:                pulumi.String("Meraki (included)"),
//					Payload_template_id: "wpt_00001",
//				},
//				SharedSecret: pulumi.String("shhh"),
//				Url:          pulumi.String("https://example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksWebhooksHttpServersExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/webhooksHttpServers:WebhooksHttpServers example "http_server_id,network_id"
// ```
type WebhooksHttpServers struct {
	pulumi.CustomResourceState

	// httpServerId path parameter. Http server ID
	HttpServerId pulumi.StringOutput `pulumi:"httpServerId"`
	// A name for easy reference to the HTTP server
	Name pulumi.StringOutput `pulumi:"name"`
	// A Meraki network ID.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// The payload template to use when posting data to the HTTP server.
	PayloadTemplate WebhooksHttpServersPayloadTemplateOutput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
	SharedSecret pulumi.StringOutput `pulumi:"sharedSecret"`
	// The URL of the HTTP server.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewWebhooksHttpServers registers a new resource with the given unique name, arguments, and options.
func NewWebhooksHttpServers(ctx *pulumi.Context,
	name string, args *WebhooksHttpServersArgs, opts ...pulumi.ResourceOption) (*WebhooksHttpServers, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhooksHttpServers
	err := ctx.RegisterResource("meraki:networks/webhooksHttpServers:WebhooksHttpServers", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhooksHttpServers gets an existing WebhooksHttpServers resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhooksHttpServers(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhooksHttpServersState, opts ...pulumi.ResourceOption) (*WebhooksHttpServers, error) {
	var resource WebhooksHttpServers
	err := ctx.ReadResource("meraki:networks/webhooksHttpServers:WebhooksHttpServers", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhooksHttpServers resources.
type webhooksHttpServersState struct {
	// httpServerId path parameter. Http server ID
	HttpServerId *string `pulumi:"httpServerId"`
	// A name for easy reference to the HTTP server
	Name *string `pulumi:"name"`
	// A Meraki network ID.
	NetworkId *string `pulumi:"networkId"`
	// The payload template to use when posting data to the HTTP server.
	PayloadTemplate *WebhooksHttpServersPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The URL of the HTTP server.
	Url *string `pulumi:"url"`
}

type WebhooksHttpServersState struct {
	// httpServerId path parameter. Http server ID
	HttpServerId pulumi.StringPtrInput
	// A name for easy reference to the HTTP server
	Name pulumi.StringPtrInput
	// A Meraki network ID.
	NetworkId pulumi.StringPtrInput
	// The payload template to use when posting data to the HTTP server.
	PayloadTemplate WebhooksHttpServersPayloadTemplatePtrInput
	// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
	SharedSecret pulumi.StringPtrInput
	// The URL of the HTTP server.
	Url pulumi.StringPtrInput
}

func (WebhooksHttpServersState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksHttpServersState)(nil)).Elem()
}

type webhooksHttpServersArgs struct {
	// httpServerId path parameter. Http server ID
	HttpServerId *string `pulumi:"httpServerId"`
	// A name for easy reference to the HTTP server
	Name *string `pulumi:"name"`
	// A Meraki network ID.
	NetworkId string `pulumi:"networkId"`
	// The payload template to use when posting data to the HTTP server.
	PayloadTemplate *WebhooksHttpServersPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The URL of the HTTP server.
	Url *string `pulumi:"url"`
}

// The set of arguments for constructing a WebhooksHttpServers resource.
type WebhooksHttpServersArgs struct {
	// httpServerId path parameter. Http server ID
	HttpServerId pulumi.StringPtrInput
	// A name for easy reference to the HTTP server
	Name pulumi.StringPtrInput
	// A Meraki network ID.
	NetworkId pulumi.StringInput
	// The payload template to use when posting data to the HTTP server.
	PayloadTemplate WebhooksHttpServersPayloadTemplatePtrInput
	// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
	SharedSecret pulumi.StringPtrInput
	// The URL of the HTTP server.
	Url pulumi.StringPtrInput
}

func (WebhooksHttpServersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksHttpServersArgs)(nil)).Elem()
}

type WebhooksHttpServersInput interface {
	pulumi.Input

	ToWebhooksHttpServersOutput() WebhooksHttpServersOutput
	ToWebhooksHttpServersOutputWithContext(ctx context.Context) WebhooksHttpServersOutput
}

func (*WebhooksHttpServers) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksHttpServers)(nil)).Elem()
}

func (i *WebhooksHttpServers) ToWebhooksHttpServersOutput() WebhooksHttpServersOutput {
	return i.ToWebhooksHttpServersOutputWithContext(context.Background())
}

func (i *WebhooksHttpServers) ToWebhooksHttpServersOutputWithContext(ctx context.Context) WebhooksHttpServersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksHttpServersOutput)
}

// WebhooksHttpServersArrayInput is an input type that accepts WebhooksHttpServersArray and WebhooksHttpServersArrayOutput values.
// You can construct a concrete instance of `WebhooksHttpServersArrayInput` via:
//
//	WebhooksHttpServersArray{ WebhooksHttpServersArgs{...} }
type WebhooksHttpServersArrayInput interface {
	pulumi.Input

	ToWebhooksHttpServersArrayOutput() WebhooksHttpServersArrayOutput
	ToWebhooksHttpServersArrayOutputWithContext(context.Context) WebhooksHttpServersArrayOutput
}

type WebhooksHttpServersArray []WebhooksHttpServersInput

func (WebhooksHttpServersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhooksHttpServers)(nil)).Elem()
}

func (i WebhooksHttpServersArray) ToWebhooksHttpServersArrayOutput() WebhooksHttpServersArrayOutput {
	return i.ToWebhooksHttpServersArrayOutputWithContext(context.Background())
}

func (i WebhooksHttpServersArray) ToWebhooksHttpServersArrayOutputWithContext(ctx context.Context) WebhooksHttpServersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksHttpServersArrayOutput)
}

// WebhooksHttpServersMapInput is an input type that accepts WebhooksHttpServersMap and WebhooksHttpServersMapOutput values.
// You can construct a concrete instance of `WebhooksHttpServersMapInput` via:
//
//	WebhooksHttpServersMap{ "key": WebhooksHttpServersArgs{...} }
type WebhooksHttpServersMapInput interface {
	pulumi.Input

	ToWebhooksHttpServersMapOutput() WebhooksHttpServersMapOutput
	ToWebhooksHttpServersMapOutputWithContext(context.Context) WebhooksHttpServersMapOutput
}

type WebhooksHttpServersMap map[string]WebhooksHttpServersInput

func (WebhooksHttpServersMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhooksHttpServers)(nil)).Elem()
}

func (i WebhooksHttpServersMap) ToWebhooksHttpServersMapOutput() WebhooksHttpServersMapOutput {
	return i.ToWebhooksHttpServersMapOutputWithContext(context.Background())
}

func (i WebhooksHttpServersMap) ToWebhooksHttpServersMapOutputWithContext(ctx context.Context) WebhooksHttpServersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksHttpServersMapOutput)
}

type WebhooksHttpServersOutput struct{ *pulumi.OutputState }

func (WebhooksHttpServersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksHttpServers)(nil)).Elem()
}

func (o WebhooksHttpServersOutput) ToWebhooksHttpServersOutput() WebhooksHttpServersOutput {
	return o
}

func (o WebhooksHttpServersOutput) ToWebhooksHttpServersOutputWithContext(ctx context.Context) WebhooksHttpServersOutput {
	return o
}

// httpServerId path parameter. Http server ID
func (o WebhooksHttpServersOutput) HttpServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) pulumi.StringOutput { return v.HttpServerId }).(pulumi.StringOutput)
}

// A name for easy reference to the HTTP server
func (o WebhooksHttpServersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A Meraki network ID.
func (o WebhooksHttpServersOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// The payload template to use when posting data to the HTTP server.
func (o WebhooksHttpServersOutput) PayloadTemplate() WebhooksHttpServersPayloadTemplateOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) WebhooksHttpServersPayloadTemplateOutput { return v.PayloadTemplate }).(WebhooksHttpServersPayloadTemplateOutput)
}

// A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
func (o WebhooksHttpServersOutput) SharedSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) pulumi.StringOutput { return v.SharedSecret }).(pulumi.StringOutput)
}

// The URL of the HTTP server.
func (o WebhooksHttpServersOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksHttpServers) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type WebhooksHttpServersArrayOutput struct{ *pulumi.OutputState }

func (WebhooksHttpServersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhooksHttpServers)(nil)).Elem()
}

func (o WebhooksHttpServersArrayOutput) ToWebhooksHttpServersArrayOutput() WebhooksHttpServersArrayOutput {
	return o
}

func (o WebhooksHttpServersArrayOutput) ToWebhooksHttpServersArrayOutputWithContext(ctx context.Context) WebhooksHttpServersArrayOutput {
	return o
}

func (o WebhooksHttpServersArrayOutput) Index(i pulumi.IntInput) WebhooksHttpServersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebhooksHttpServers {
		return vs[0].([]*WebhooksHttpServers)[vs[1].(int)]
	}).(WebhooksHttpServersOutput)
}

type WebhooksHttpServersMapOutput struct{ *pulumi.OutputState }

func (WebhooksHttpServersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhooksHttpServers)(nil)).Elem()
}

func (o WebhooksHttpServersMapOutput) ToWebhooksHttpServersMapOutput() WebhooksHttpServersMapOutput {
	return o
}

func (o WebhooksHttpServersMapOutput) ToWebhooksHttpServersMapOutputWithContext(ctx context.Context) WebhooksHttpServersMapOutput {
	return o
}

func (o WebhooksHttpServersMapOutput) MapIndex(k pulumi.StringInput) WebhooksHttpServersOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebhooksHttpServers {
		return vs[0].(map[string]*WebhooksHttpServers)[vs[1].(string)]
	}).(WebhooksHttpServersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksHttpServersInput)(nil)).Elem(), &WebhooksHttpServers{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksHttpServersArrayInput)(nil)).Elem(), WebhooksHttpServersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksHttpServersMapInput)(nil)).Elem(), WebhooksHttpServersMap{})
	pulumi.RegisterOutputType(WebhooksHttpServersOutput{})
	pulumi.RegisterOutputType(WebhooksHttpServersArrayOutput{})
	pulumi.RegisterOutputType(WebhooksHttpServersMapOutput{})
}
