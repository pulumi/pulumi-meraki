// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupSwitchRoutingMulticast(ctx, &networks.LookupSwitchRoutingMulticastArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchRoutingMulticastExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchRoutingMulticast(ctx *pulumi.Context, args *LookupSwitchRoutingMulticastArgs, opts ...pulumi.InvokeOption) (*LookupSwitchRoutingMulticastResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchRoutingMulticastResult
	err := ctx.Invoke("meraki:networks/getSwitchRoutingMulticast:getSwitchRoutingMulticast", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchRoutingMulticast.
type LookupSwitchRoutingMulticastArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getSwitchRoutingMulticast.
type LookupSwitchRoutingMulticastResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                        `pulumi:"id"`
	Item GetSwitchRoutingMulticastItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupSwitchRoutingMulticastOutput(ctx *pulumi.Context, args LookupSwitchRoutingMulticastOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchRoutingMulticastResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSwitchRoutingMulticastResultOutput, error) {
			args := v.(LookupSwitchRoutingMulticastArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:networks/getSwitchRoutingMulticast:getSwitchRoutingMulticast", args, LookupSwitchRoutingMulticastResultOutput{}, options).(LookupSwitchRoutingMulticastResultOutput), nil
		}).(LookupSwitchRoutingMulticastResultOutput)
}

// A collection of arguments for invoking getSwitchRoutingMulticast.
type LookupSwitchRoutingMulticastOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupSwitchRoutingMulticastOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchRoutingMulticastArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchRoutingMulticast.
type LookupSwitchRoutingMulticastResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchRoutingMulticastResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchRoutingMulticastResult)(nil)).Elem()
}

func (o LookupSwitchRoutingMulticastResultOutput) ToLookupSwitchRoutingMulticastResultOutput() LookupSwitchRoutingMulticastResultOutput {
	return o
}

func (o LookupSwitchRoutingMulticastResultOutput) ToLookupSwitchRoutingMulticastResultOutputWithContext(ctx context.Context) LookupSwitchRoutingMulticastResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchRoutingMulticastResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchRoutingMulticastResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchRoutingMulticastResultOutput) Item() GetSwitchRoutingMulticastItemOutput {
	return o.ApplyT(func(v LookupSwitchRoutingMulticastResult) GetSwitchRoutingMulticastItem { return v.Item }).(GetSwitchRoutingMulticastItemOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchRoutingMulticastResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchRoutingMulticastResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchRoutingMulticastResultOutput{})
}
