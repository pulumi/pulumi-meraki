// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupSwitchStacksRoutingInterfacesDhcp(ctx, &networks.LookupSwitchStacksRoutingInterfacesDhcpArgs{
//				InterfaceId:   "string",
//				NetworkId:     "string",
//				SwitchStackId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchStacksRoutingInterfacesDhcpExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchStacksRoutingInterfacesDhcp(ctx *pulumi.Context, args *LookupSwitchStacksRoutingInterfacesDhcpArgs, opts ...pulumi.InvokeOption) (*LookupSwitchStacksRoutingInterfacesDhcpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchStacksRoutingInterfacesDhcpResult
	err := ctx.Invoke("meraki:networks/getSwitchStacksRoutingInterfacesDhcp:getSwitchStacksRoutingInterfacesDhcp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchStacksRoutingInterfacesDhcp.
type LookupSwitchStacksRoutingInterfacesDhcpArgs struct {
	// interfaceId path parameter. Interface ID
	InterfaceId string `pulumi:"interfaceId"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId string `pulumi:"switchStackId"`
}

// A collection of values returned by getSwitchStacksRoutingInterfacesDhcp.
type LookupSwitchStacksRoutingInterfacesDhcpResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// interfaceId path parameter. Interface ID
	InterfaceId string                                   `pulumi:"interfaceId"`
	Item        GetSwitchStacksRoutingInterfacesDhcpItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId string `pulumi:"switchStackId"`
}

func LookupSwitchStacksRoutingInterfacesDhcpOutput(ctx *pulumi.Context, args LookupSwitchStacksRoutingInterfacesDhcpOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchStacksRoutingInterfacesDhcpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchStacksRoutingInterfacesDhcpResultOutput, error) {
			args := v.(LookupSwitchStacksRoutingInterfacesDhcpArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSwitchStacksRoutingInterfacesDhcpResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSwitchStacksRoutingInterfacesDhcp:getSwitchStacksRoutingInterfacesDhcp", args, &rv, "", opts...)
			if err != nil {
				return LookupSwitchStacksRoutingInterfacesDhcpResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSwitchStacksRoutingInterfacesDhcpResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSwitchStacksRoutingInterfacesDhcpResultOutput), nil
			}
			return output, nil
		}).(LookupSwitchStacksRoutingInterfacesDhcpResultOutput)
}

// A collection of arguments for invoking getSwitchStacksRoutingInterfacesDhcp.
type LookupSwitchStacksRoutingInterfacesDhcpOutputArgs struct {
	// interfaceId path parameter. Interface ID
	InterfaceId pulumi.StringInput `pulumi:"interfaceId"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId pulumi.StringInput `pulumi:"switchStackId"`
}

func (LookupSwitchStacksRoutingInterfacesDhcpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksRoutingInterfacesDhcpArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchStacksRoutingInterfacesDhcp.
type LookupSwitchStacksRoutingInterfacesDhcpResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchStacksRoutingInterfacesDhcpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksRoutingInterfacesDhcpResult)(nil)).Elem()
}

func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) ToLookupSwitchStacksRoutingInterfacesDhcpResultOutput() LookupSwitchStacksRoutingInterfacesDhcpResultOutput {
	return o
}

func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) ToLookupSwitchStacksRoutingInterfacesDhcpResultOutputWithContext(ctx context.Context) LookupSwitchStacksRoutingInterfacesDhcpResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingInterfacesDhcpResult) string { return v.Id }).(pulumi.StringOutput)
}

// interfaceId path parameter. Interface ID
func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingInterfacesDhcpResult) string { return v.InterfaceId }).(pulumi.StringOutput)
}

func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) Item() GetSwitchStacksRoutingInterfacesDhcpItemOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingInterfacesDhcpResult) GetSwitchStacksRoutingInterfacesDhcpItem {
		return v.Item
	}).(GetSwitchStacksRoutingInterfacesDhcpItemOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingInterfacesDhcpResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// switchStackId path parameter. Switch stack ID
func (o LookupSwitchStacksRoutingInterfacesDhcpResultOutput) SwitchStackId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksRoutingInterfacesDhcpResult) string { return v.SwitchStackId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchStacksRoutingInterfacesDhcpResultOutput{})
}
