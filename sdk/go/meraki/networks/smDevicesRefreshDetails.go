// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewSmDevicesRefreshDetails(ctx, "example", &networks.SmDevicesRefreshDetailsArgs{
//				DeviceId:  pulumi.String("string"),
//				NetworkId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSmDevicesRefreshDetailsExample", example)
//			return nil
//		})
//	}
//
// ```
type SmDevicesRefreshDetails struct {
	pulumi.CustomResourceState

	// deviceId path parameter. Device ID
	DeviceId pulumi.StringOutput `pulumi:"deviceId"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewSmDevicesRefreshDetails registers a new resource with the given unique name, arguments, and options.
func NewSmDevicesRefreshDetails(ctx *pulumi.Context,
	name string, args *SmDevicesRefreshDetailsArgs, opts ...pulumi.ResourceOption) (*SmDevicesRefreshDetails, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeviceId == nil {
		return nil, errors.New("invalid value for required argument 'DeviceId'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmDevicesRefreshDetails
	err := ctx.RegisterResource("meraki:networks/smDevicesRefreshDetails:SmDevicesRefreshDetails", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmDevicesRefreshDetails gets an existing SmDevicesRefreshDetails resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmDevicesRefreshDetails(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmDevicesRefreshDetailsState, opts ...pulumi.ResourceOption) (*SmDevicesRefreshDetails, error) {
	var resource SmDevicesRefreshDetails
	err := ctx.ReadResource("meraki:networks/smDevicesRefreshDetails:SmDevicesRefreshDetails", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmDevicesRefreshDetails resources.
type smDevicesRefreshDetailsState struct {
	// deviceId path parameter. Device ID
	DeviceId *string `pulumi:"deviceId"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type SmDevicesRefreshDetailsState struct {
	// deviceId path parameter. Device ID
	DeviceId pulumi.StringPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (SmDevicesRefreshDetailsState) ElementType() reflect.Type {
	return reflect.TypeOf((*smDevicesRefreshDetailsState)(nil)).Elem()
}

type smDevicesRefreshDetailsArgs struct {
	// deviceId path parameter. Device ID
	DeviceId string `pulumi:"deviceId"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a SmDevicesRefreshDetails resource.
type SmDevicesRefreshDetailsArgs struct {
	// deviceId path parameter. Device ID
	DeviceId pulumi.StringInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (SmDevicesRefreshDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smDevicesRefreshDetailsArgs)(nil)).Elem()
}

type SmDevicesRefreshDetailsInput interface {
	pulumi.Input

	ToSmDevicesRefreshDetailsOutput() SmDevicesRefreshDetailsOutput
	ToSmDevicesRefreshDetailsOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsOutput
}

func (*SmDevicesRefreshDetails) ElementType() reflect.Type {
	return reflect.TypeOf((**SmDevicesRefreshDetails)(nil)).Elem()
}

func (i *SmDevicesRefreshDetails) ToSmDevicesRefreshDetailsOutput() SmDevicesRefreshDetailsOutput {
	return i.ToSmDevicesRefreshDetailsOutputWithContext(context.Background())
}

func (i *SmDevicesRefreshDetails) ToSmDevicesRefreshDetailsOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesRefreshDetailsOutput)
}

// SmDevicesRefreshDetailsArrayInput is an input type that accepts SmDevicesRefreshDetailsArray and SmDevicesRefreshDetailsArrayOutput values.
// You can construct a concrete instance of `SmDevicesRefreshDetailsArrayInput` via:
//
//	SmDevicesRefreshDetailsArray{ SmDevicesRefreshDetailsArgs{...} }
type SmDevicesRefreshDetailsArrayInput interface {
	pulumi.Input

	ToSmDevicesRefreshDetailsArrayOutput() SmDevicesRefreshDetailsArrayOutput
	ToSmDevicesRefreshDetailsArrayOutputWithContext(context.Context) SmDevicesRefreshDetailsArrayOutput
}

type SmDevicesRefreshDetailsArray []SmDevicesRefreshDetailsInput

func (SmDevicesRefreshDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmDevicesRefreshDetails)(nil)).Elem()
}

func (i SmDevicesRefreshDetailsArray) ToSmDevicesRefreshDetailsArrayOutput() SmDevicesRefreshDetailsArrayOutput {
	return i.ToSmDevicesRefreshDetailsArrayOutputWithContext(context.Background())
}

func (i SmDevicesRefreshDetailsArray) ToSmDevicesRefreshDetailsArrayOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesRefreshDetailsArrayOutput)
}

// SmDevicesRefreshDetailsMapInput is an input type that accepts SmDevicesRefreshDetailsMap and SmDevicesRefreshDetailsMapOutput values.
// You can construct a concrete instance of `SmDevicesRefreshDetailsMapInput` via:
//
//	SmDevicesRefreshDetailsMap{ "key": SmDevicesRefreshDetailsArgs{...} }
type SmDevicesRefreshDetailsMapInput interface {
	pulumi.Input

	ToSmDevicesRefreshDetailsMapOutput() SmDevicesRefreshDetailsMapOutput
	ToSmDevicesRefreshDetailsMapOutputWithContext(context.Context) SmDevicesRefreshDetailsMapOutput
}

type SmDevicesRefreshDetailsMap map[string]SmDevicesRefreshDetailsInput

func (SmDevicesRefreshDetailsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmDevicesRefreshDetails)(nil)).Elem()
}

func (i SmDevicesRefreshDetailsMap) ToSmDevicesRefreshDetailsMapOutput() SmDevicesRefreshDetailsMapOutput {
	return i.ToSmDevicesRefreshDetailsMapOutputWithContext(context.Background())
}

func (i SmDevicesRefreshDetailsMap) ToSmDevicesRefreshDetailsMapOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesRefreshDetailsMapOutput)
}

type SmDevicesRefreshDetailsOutput struct{ *pulumi.OutputState }

func (SmDevicesRefreshDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmDevicesRefreshDetails)(nil)).Elem()
}

func (o SmDevicesRefreshDetailsOutput) ToSmDevicesRefreshDetailsOutput() SmDevicesRefreshDetailsOutput {
	return o
}

func (o SmDevicesRefreshDetailsOutput) ToSmDevicesRefreshDetailsOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsOutput {
	return o
}

// deviceId path parameter. Device ID
func (o SmDevicesRefreshDetailsOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SmDevicesRefreshDetails) pulumi.StringOutput { return v.DeviceId }).(pulumi.StringOutput)
}

// networkId path parameter. Network ID
func (o SmDevicesRefreshDetailsOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *SmDevicesRefreshDetails) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type SmDevicesRefreshDetailsArrayOutput struct{ *pulumi.OutputState }

func (SmDevicesRefreshDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmDevicesRefreshDetails)(nil)).Elem()
}

func (o SmDevicesRefreshDetailsArrayOutput) ToSmDevicesRefreshDetailsArrayOutput() SmDevicesRefreshDetailsArrayOutput {
	return o
}

func (o SmDevicesRefreshDetailsArrayOutput) ToSmDevicesRefreshDetailsArrayOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsArrayOutput {
	return o
}

func (o SmDevicesRefreshDetailsArrayOutput) Index(i pulumi.IntInput) SmDevicesRefreshDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SmDevicesRefreshDetails {
		return vs[0].([]*SmDevicesRefreshDetails)[vs[1].(int)]
	}).(SmDevicesRefreshDetailsOutput)
}

type SmDevicesRefreshDetailsMapOutput struct{ *pulumi.OutputState }

func (SmDevicesRefreshDetailsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmDevicesRefreshDetails)(nil)).Elem()
}

func (o SmDevicesRefreshDetailsMapOutput) ToSmDevicesRefreshDetailsMapOutput() SmDevicesRefreshDetailsMapOutput {
	return o
}

func (o SmDevicesRefreshDetailsMapOutput) ToSmDevicesRefreshDetailsMapOutputWithContext(ctx context.Context) SmDevicesRefreshDetailsMapOutput {
	return o
}

func (o SmDevicesRefreshDetailsMapOutput) MapIndex(k pulumi.StringInput) SmDevicesRefreshDetailsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SmDevicesRefreshDetails {
		return vs[0].(map[string]*SmDevicesRefreshDetails)[vs[1].(string)]
	}).(SmDevicesRefreshDetailsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesRefreshDetailsInput)(nil)).Elem(), &SmDevicesRefreshDetails{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesRefreshDetailsArrayInput)(nil)).Elem(), SmDevicesRefreshDetailsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesRefreshDetailsMapInput)(nil)).Elem(), SmDevicesRefreshDetailsMap{})
	pulumi.RegisterOutputType(SmDevicesRefreshDetailsOutput{})
	pulumi.RegisterOutputType(SmDevicesRefreshDetailsArrayOutput{})
	pulumi.RegisterOutputType(SmDevicesRefreshDetailsMapOutput{})
}
