// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupWirelessRfProfiles(ctx, &networks.LookupWirelessRfProfilesArgs{
//				IncludeTemplateProfiles: pulumi.BoolRef(false),
//				NetworkId:               pulumi.StringRef("string"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksWirelessRfProfilesExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupWirelessRfProfiles(ctx *pulumi.Context, args *LookupWirelessRfProfilesArgs, opts ...pulumi.InvokeOption) (*LookupWirelessRfProfilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWirelessRfProfilesResult
	err := ctx.Invoke("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWirelessRfProfiles.
type LookupWirelessRfProfilesArgs struct {
	// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
	IncludeTemplateProfiles *bool `pulumi:"includeTemplateProfiles"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// rfProfileId path parameter. Rf profile ID
	RfProfileId *string `pulumi:"rfProfileId"`
}

// A collection of values returned by getWirelessRfProfiles.
type LookupWirelessRfProfilesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
	IncludeTemplateProfiles *bool                     `pulumi:"includeTemplateProfiles"`
	Item                    GetWirelessRfProfilesItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// rfProfileId path parameter. Rf profile ID
	RfProfileId *string `pulumi:"rfProfileId"`
}

func LookupWirelessRfProfilesOutput(ctx *pulumi.Context, args LookupWirelessRfProfilesOutputArgs, opts ...pulumi.InvokeOption) LookupWirelessRfProfilesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWirelessRfProfilesResultOutput, error) {
			args := v.(LookupWirelessRfProfilesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:networks/getWirelessRfProfiles:getWirelessRfProfiles", args, LookupWirelessRfProfilesResultOutput{}, options).(LookupWirelessRfProfilesResultOutput), nil
		}).(LookupWirelessRfProfilesResultOutput)
}

// A collection of arguments for invoking getWirelessRfProfiles.
type LookupWirelessRfProfilesOutputArgs struct {
	// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
	IncludeTemplateProfiles pulumi.BoolPtrInput `pulumi:"includeTemplateProfiles"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// rfProfileId path parameter. Rf profile ID
	RfProfileId pulumi.StringPtrInput `pulumi:"rfProfileId"`
}

func (LookupWirelessRfProfilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWirelessRfProfilesArgs)(nil)).Elem()
}

// A collection of values returned by getWirelessRfProfiles.
type LookupWirelessRfProfilesResultOutput struct{ *pulumi.OutputState }

func (LookupWirelessRfProfilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWirelessRfProfilesResult)(nil)).Elem()
}

func (o LookupWirelessRfProfilesResultOutput) ToLookupWirelessRfProfilesResultOutput() LookupWirelessRfProfilesResultOutput {
	return o
}

func (o LookupWirelessRfProfilesResultOutput) ToLookupWirelessRfProfilesResultOutputWithContext(ctx context.Context) LookupWirelessRfProfilesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWirelessRfProfilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWirelessRfProfilesResult) string { return v.Id }).(pulumi.StringOutput)
}

// includeTemplateProfiles query parameter. If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
func (o LookupWirelessRfProfilesResultOutput) IncludeTemplateProfiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupWirelessRfProfilesResult) *bool { return v.IncludeTemplateProfiles }).(pulumi.BoolPtrOutput)
}

func (o LookupWirelessRfProfilesResultOutput) Item() GetWirelessRfProfilesItemOutput {
	return o.ApplyT(func(v LookupWirelessRfProfilesResult) GetWirelessRfProfilesItem { return v.Item }).(GetWirelessRfProfilesItemOutput)
}

// networkId path parameter. Network ID
func (o LookupWirelessRfProfilesResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWirelessRfProfilesResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// rfProfileId path parameter. Rf profile ID
func (o LookupWirelessRfProfilesResultOutput) RfProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWirelessRfProfilesResult) *string { return v.RfProfileId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWirelessRfProfilesResultOutput{})
}
