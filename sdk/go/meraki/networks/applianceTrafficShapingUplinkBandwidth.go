// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewApplianceTrafficShapingUplinkBandwidth(ctx, "example", &networks.ApplianceTrafficShapingUplinkBandwidthArgs{
//				BandwidthLimits: &networks.ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsArgs{
//					Cellular: &networks.ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsCellularArgs{
//						LimitDown: pulumi.Int(1000000),
//						LimitUp:   pulumi.Int(1000000),
//					},
//					Wan1: &networks.ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsWan1Args{
//						LimitDown: pulumi.Int(1000000),
//						LimitUp:   pulumi.Int(1000000),
//					},
//					Wan2: &networks.ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsWan2Args{
//						LimitDown: pulumi.Int(1000000),
//						LimitUp:   pulumi.Int(1000000),
//					},
//				},
//				NetworkId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksApplianceTrafficShapingUplinkBandwidthExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/applianceTrafficShapingUplinkBandwidth:ApplianceTrafficShapingUplinkBandwidth example "network_id"
// ```
type ApplianceTrafficShapingUplinkBandwidth struct {
	pulumi.CustomResourceState

	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsOutput `pulumi:"bandwidthLimits"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewApplianceTrafficShapingUplinkBandwidth registers a new resource with the given unique name, arguments, and options.
func NewApplianceTrafficShapingUplinkBandwidth(ctx *pulumi.Context,
	name string, args *ApplianceTrafficShapingUplinkBandwidthArgs, opts ...pulumi.ResourceOption) (*ApplianceTrafficShapingUplinkBandwidth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceTrafficShapingUplinkBandwidth
	err := ctx.RegisterResource("meraki:networks/applianceTrafficShapingUplinkBandwidth:ApplianceTrafficShapingUplinkBandwidth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceTrafficShapingUplinkBandwidth gets an existing ApplianceTrafficShapingUplinkBandwidth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceTrafficShapingUplinkBandwidth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceTrafficShapingUplinkBandwidthState, opts ...pulumi.ResourceOption) (*ApplianceTrafficShapingUplinkBandwidth, error) {
	var resource ApplianceTrafficShapingUplinkBandwidth
	err := ctx.ReadResource("meraki:networks/applianceTrafficShapingUplinkBandwidth:ApplianceTrafficShapingUplinkBandwidth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceTrafficShapingUplinkBandwidth resources.
type applianceTrafficShapingUplinkBandwidthState struct {
	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits *ApplianceTrafficShapingUplinkBandwidthBandwidthLimits `pulumi:"bandwidthLimits"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type ApplianceTrafficShapingUplinkBandwidthState struct {
	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (ApplianceTrafficShapingUplinkBandwidthState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceTrafficShapingUplinkBandwidthState)(nil)).Elem()
}

type applianceTrafficShapingUplinkBandwidthArgs struct {
	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits *ApplianceTrafficShapingUplinkBandwidthBandwidthLimits `pulumi:"bandwidthLimits"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a ApplianceTrafficShapingUplinkBandwidth resource.
type ApplianceTrafficShapingUplinkBandwidthArgs struct {
	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (ApplianceTrafficShapingUplinkBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceTrafficShapingUplinkBandwidthArgs)(nil)).Elem()
}

type ApplianceTrafficShapingUplinkBandwidthInput interface {
	pulumi.Input

	ToApplianceTrafficShapingUplinkBandwidthOutput() ApplianceTrafficShapingUplinkBandwidthOutput
	ToApplianceTrafficShapingUplinkBandwidthOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthOutput
}

func (*ApplianceTrafficShapingUplinkBandwidth) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (i *ApplianceTrafficShapingUplinkBandwidth) ToApplianceTrafficShapingUplinkBandwidthOutput() ApplianceTrafficShapingUplinkBandwidthOutput {
	return i.ToApplianceTrafficShapingUplinkBandwidthOutputWithContext(context.Background())
}

func (i *ApplianceTrafficShapingUplinkBandwidth) ToApplianceTrafficShapingUplinkBandwidthOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceTrafficShapingUplinkBandwidthOutput)
}

// ApplianceTrafficShapingUplinkBandwidthArrayInput is an input type that accepts ApplianceTrafficShapingUplinkBandwidthArray and ApplianceTrafficShapingUplinkBandwidthArrayOutput values.
// You can construct a concrete instance of `ApplianceTrafficShapingUplinkBandwidthArrayInput` via:
//
//	ApplianceTrafficShapingUplinkBandwidthArray{ ApplianceTrafficShapingUplinkBandwidthArgs{...} }
type ApplianceTrafficShapingUplinkBandwidthArrayInput interface {
	pulumi.Input

	ToApplianceTrafficShapingUplinkBandwidthArrayOutput() ApplianceTrafficShapingUplinkBandwidthArrayOutput
	ToApplianceTrafficShapingUplinkBandwidthArrayOutputWithContext(context.Context) ApplianceTrafficShapingUplinkBandwidthArrayOutput
}

type ApplianceTrafficShapingUplinkBandwidthArray []ApplianceTrafficShapingUplinkBandwidthInput

func (ApplianceTrafficShapingUplinkBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (i ApplianceTrafficShapingUplinkBandwidthArray) ToApplianceTrafficShapingUplinkBandwidthArrayOutput() ApplianceTrafficShapingUplinkBandwidthArrayOutput {
	return i.ToApplianceTrafficShapingUplinkBandwidthArrayOutputWithContext(context.Background())
}

func (i ApplianceTrafficShapingUplinkBandwidthArray) ToApplianceTrafficShapingUplinkBandwidthArrayOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceTrafficShapingUplinkBandwidthArrayOutput)
}

// ApplianceTrafficShapingUplinkBandwidthMapInput is an input type that accepts ApplianceTrafficShapingUplinkBandwidthMap and ApplianceTrafficShapingUplinkBandwidthMapOutput values.
// You can construct a concrete instance of `ApplianceTrafficShapingUplinkBandwidthMapInput` via:
//
//	ApplianceTrafficShapingUplinkBandwidthMap{ "key": ApplianceTrafficShapingUplinkBandwidthArgs{...} }
type ApplianceTrafficShapingUplinkBandwidthMapInput interface {
	pulumi.Input

	ToApplianceTrafficShapingUplinkBandwidthMapOutput() ApplianceTrafficShapingUplinkBandwidthMapOutput
	ToApplianceTrafficShapingUplinkBandwidthMapOutputWithContext(context.Context) ApplianceTrafficShapingUplinkBandwidthMapOutput
}

type ApplianceTrafficShapingUplinkBandwidthMap map[string]ApplianceTrafficShapingUplinkBandwidthInput

func (ApplianceTrafficShapingUplinkBandwidthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (i ApplianceTrafficShapingUplinkBandwidthMap) ToApplianceTrafficShapingUplinkBandwidthMapOutput() ApplianceTrafficShapingUplinkBandwidthMapOutput {
	return i.ToApplianceTrafficShapingUplinkBandwidthMapOutputWithContext(context.Background())
}

func (i ApplianceTrafficShapingUplinkBandwidthMap) ToApplianceTrafficShapingUplinkBandwidthMapOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceTrafficShapingUplinkBandwidthMapOutput)
}

type ApplianceTrafficShapingUplinkBandwidthOutput struct{ *pulumi.OutputState }

func (ApplianceTrafficShapingUplinkBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (o ApplianceTrafficShapingUplinkBandwidthOutput) ToApplianceTrafficShapingUplinkBandwidthOutput() ApplianceTrafficShapingUplinkBandwidthOutput {
	return o
}

func (o ApplianceTrafficShapingUplinkBandwidthOutput) ToApplianceTrafficShapingUplinkBandwidthOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthOutput {
	return o
}

// A hash uplink keys and their configured settings for the Appliance
func (o ApplianceTrafficShapingUplinkBandwidthOutput) BandwidthLimits() ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsOutput {
	return o.ApplyT(func(v *ApplianceTrafficShapingUplinkBandwidth) ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsOutput {
		return v.BandwidthLimits
	}).(ApplianceTrafficShapingUplinkBandwidthBandwidthLimitsOutput)
}

// networkId path parameter. Network ID
func (o ApplianceTrafficShapingUplinkBandwidthOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceTrafficShapingUplinkBandwidth) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type ApplianceTrafficShapingUplinkBandwidthArrayOutput struct{ *pulumi.OutputState }

func (ApplianceTrafficShapingUplinkBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (o ApplianceTrafficShapingUplinkBandwidthArrayOutput) ToApplianceTrafficShapingUplinkBandwidthArrayOutput() ApplianceTrafficShapingUplinkBandwidthArrayOutput {
	return o
}

func (o ApplianceTrafficShapingUplinkBandwidthArrayOutput) ToApplianceTrafficShapingUplinkBandwidthArrayOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthArrayOutput {
	return o
}

func (o ApplianceTrafficShapingUplinkBandwidthArrayOutput) Index(i pulumi.IntInput) ApplianceTrafficShapingUplinkBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceTrafficShapingUplinkBandwidth {
		return vs[0].([]*ApplianceTrafficShapingUplinkBandwidth)[vs[1].(int)]
	}).(ApplianceTrafficShapingUplinkBandwidthOutput)
}

type ApplianceTrafficShapingUplinkBandwidthMapOutput struct{ *pulumi.OutputState }

func (ApplianceTrafficShapingUplinkBandwidthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceTrafficShapingUplinkBandwidth)(nil)).Elem()
}

func (o ApplianceTrafficShapingUplinkBandwidthMapOutput) ToApplianceTrafficShapingUplinkBandwidthMapOutput() ApplianceTrafficShapingUplinkBandwidthMapOutput {
	return o
}

func (o ApplianceTrafficShapingUplinkBandwidthMapOutput) ToApplianceTrafficShapingUplinkBandwidthMapOutputWithContext(ctx context.Context) ApplianceTrafficShapingUplinkBandwidthMapOutput {
	return o
}

func (o ApplianceTrafficShapingUplinkBandwidthMapOutput) MapIndex(k pulumi.StringInput) ApplianceTrafficShapingUplinkBandwidthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceTrafficShapingUplinkBandwidth {
		return vs[0].(map[string]*ApplianceTrafficShapingUplinkBandwidth)[vs[1].(string)]
	}).(ApplianceTrafficShapingUplinkBandwidthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceTrafficShapingUplinkBandwidthInput)(nil)).Elem(), &ApplianceTrafficShapingUplinkBandwidth{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceTrafficShapingUplinkBandwidthArrayInput)(nil)).Elem(), ApplianceTrafficShapingUplinkBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceTrafficShapingUplinkBandwidthMapInput)(nil)).Elem(), ApplianceTrafficShapingUplinkBandwidthMap{})
	pulumi.RegisterOutputType(ApplianceTrafficShapingUplinkBandwidthOutput{})
	pulumi.RegisterOutputType(ApplianceTrafficShapingUplinkBandwidthArrayOutput{})
	pulumi.RegisterOutputType(ApplianceTrafficShapingUplinkBandwidthMapOutput{})
}
