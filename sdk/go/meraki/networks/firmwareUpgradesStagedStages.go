// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewFirmwareUpgradesStagedStages(ctx, "example", &networks.FirmwareUpgradesStagedStagesArgs{
//				Jsons: networks.FirmwareUpgradesStagedStagesJsonArray{
//					&networks.FirmwareUpgradesStagedStagesJsonArgs{
//						Group: &networks.FirmwareUpgradesStagedStagesJsonGroupArgs{
//							Id: pulumi.String("1234"),
//						},
//					},
//				},
//				NetworkId: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksFirmwareUpgradesStagedStagesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/firmwareUpgradesStagedStages:FirmwareUpgradesStagedStages example "network_id"
// ```
type FirmwareUpgradesStagedStages struct {
	pulumi.CustomResourceState

	// The Staged Upgrade Group
	Group FirmwareUpgradesStagedStagesGroupOutput `pulumi:"group"`
	// Array of Staged Upgrade Groups
	Jsons FirmwareUpgradesStagedStagesJsonArrayOutput `pulumi:"jsons"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewFirmwareUpgradesStagedStages registers a new resource with the given unique name, arguments, and options.
func NewFirmwareUpgradesStagedStages(ctx *pulumi.Context,
	name string, args *FirmwareUpgradesStagedStagesArgs, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedStages, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirmwareUpgradesStagedStages
	err := ctx.RegisterResource("meraki:networks/firmwareUpgradesStagedStages:FirmwareUpgradesStagedStages", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirmwareUpgradesStagedStages gets an existing FirmwareUpgradesStagedStages resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirmwareUpgradesStagedStages(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirmwareUpgradesStagedStagesState, opts ...pulumi.ResourceOption) (*FirmwareUpgradesStagedStages, error) {
	var resource FirmwareUpgradesStagedStages
	err := ctx.ReadResource("meraki:networks/firmwareUpgradesStagedStages:FirmwareUpgradesStagedStages", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirmwareUpgradesStagedStages resources.
type firmwareUpgradesStagedStagesState struct {
	// The Staged Upgrade Group
	Group *FirmwareUpgradesStagedStagesGroup `pulumi:"group"`
	// Array of Staged Upgrade Groups
	Jsons []FirmwareUpgradesStagedStagesJson `pulumi:"jsons"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
}

type FirmwareUpgradesStagedStagesState struct {
	// The Staged Upgrade Group
	Group FirmwareUpgradesStagedStagesGroupPtrInput
	// Array of Staged Upgrade Groups
	Jsons FirmwareUpgradesStagedStagesJsonArrayInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
}

func (FirmwareUpgradesStagedStagesState) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedStagesState)(nil)).Elem()
}

type firmwareUpgradesStagedStagesArgs struct {
	// Array of Staged Upgrade Groups
	Jsons []FirmwareUpgradesStagedStagesJson `pulumi:"jsons"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a FirmwareUpgradesStagedStages resource.
type FirmwareUpgradesStagedStagesArgs struct {
	// Array of Staged Upgrade Groups
	Jsons FirmwareUpgradesStagedStagesJsonArrayInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
}

func (FirmwareUpgradesStagedStagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firmwareUpgradesStagedStagesArgs)(nil)).Elem()
}

type FirmwareUpgradesStagedStagesInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedStagesOutput() FirmwareUpgradesStagedStagesOutput
	ToFirmwareUpgradesStagedStagesOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesOutput
}

func (*FirmwareUpgradesStagedStages) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (i *FirmwareUpgradesStagedStages) ToFirmwareUpgradesStagedStagesOutput() FirmwareUpgradesStagedStagesOutput {
	return i.ToFirmwareUpgradesStagedStagesOutputWithContext(context.Background())
}

func (i *FirmwareUpgradesStagedStages) ToFirmwareUpgradesStagedStagesOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedStagesOutput)
}

// FirmwareUpgradesStagedStagesArrayInput is an input type that accepts FirmwareUpgradesStagedStagesArray and FirmwareUpgradesStagedStagesArrayOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedStagesArrayInput` via:
//
//	FirmwareUpgradesStagedStagesArray{ FirmwareUpgradesStagedStagesArgs{...} }
type FirmwareUpgradesStagedStagesArrayInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedStagesArrayOutput() FirmwareUpgradesStagedStagesArrayOutput
	ToFirmwareUpgradesStagedStagesArrayOutputWithContext(context.Context) FirmwareUpgradesStagedStagesArrayOutput
}

type FirmwareUpgradesStagedStagesArray []FirmwareUpgradesStagedStagesInput

func (FirmwareUpgradesStagedStagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (i FirmwareUpgradesStagedStagesArray) ToFirmwareUpgradesStagedStagesArrayOutput() FirmwareUpgradesStagedStagesArrayOutput {
	return i.ToFirmwareUpgradesStagedStagesArrayOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedStagesArray) ToFirmwareUpgradesStagedStagesArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedStagesArrayOutput)
}

// FirmwareUpgradesStagedStagesMapInput is an input type that accepts FirmwareUpgradesStagedStagesMap and FirmwareUpgradesStagedStagesMapOutput values.
// You can construct a concrete instance of `FirmwareUpgradesStagedStagesMapInput` via:
//
//	FirmwareUpgradesStagedStagesMap{ "key": FirmwareUpgradesStagedStagesArgs{...} }
type FirmwareUpgradesStagedStagesMapInput interface {
	pulumi.Input

	ToFirmwareUpgradesStagedStagesMapOutput() FirmwareUpgradesStagedStagesMapOutput
	ToFirmwareUpgradesStagedStagesMapOutputWithContext(context.Context) FirmwareUpgradesStagedStagesMapOutput
}

type FirmwareUpgradesStagedStagesMap map[string]FirmwareUpgradesStagedStagesInput

func (FirmwareUpgradesStagedStagesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (i FirmwareUpgradesStagedStagesMap) ToFirmwareUpgradesStagedStagesMapOutput() FirmwareUpgradesStagedStagesMapOutput {
	return i.ToFirmwareUpgradesStagedStagesMapOutputWithContext(context.Background())
}

func (i FirmwareUpgradesStagedStagesMap) ToFirmwareUpgradesStagedStagesMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirmwareUpgradesStagedStagesMapOutput)
}

type FirmwareUpgradesStagedStagesOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedStagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (o FirmwareUpgradesStagedStagesOutput) ToFirmwareUpgradesStagedStagesOutput() FirmwareUpgradesStagedStagesOutput {
	return o
}

func (o FirmwareUpgradesStagedStagesOutput) ToFirmwareUpgradesStagedStagesOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesOutput {
	return o
}

// The Staged Upgrade Group
func (o FirmwareUpgradesStagedStagesOutput) Group() FirmwareUpgradesStagedStagesGroupOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedStages) FirmwareUpgradesStagedStagesGroupOutput { return v.Group }).(FirmwareUpgradesStagedStagesGroupOutput)
}

// Array of Staged Upgrade Groups
func (o FirmwareUpgradesStagedStagesOutput) Jsons() FirmwareUpgradesStagedStagesJsonArrayOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedStages) FirmwareUpgradesStagedStagesJsonArrayOutput { return v.Jsons }).(FirmwareUpgradesStagedStagesJsonArrayOutput)
}

// networkId path parameter. Network ID
func (o FirmwareUpgradesStagedStagesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirmwareUpgradesStagedStages) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type FirmwareUpgradesStagedStagesArrayOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedStagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (o FirmwareUpgradesStagedStagesArrayOutput) ToFirmwareUpgradesStagedStagesArrayOutput() FirmwareUpgradesStagedStagesArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedStagesArrayOutput) ToFirmwareUpgradesStagedStagesArrayOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesArrayOutput {
	return o
}

func (o FirmwareUpgradesStagedStagesArrayOutput) Index(i pulumi.IntInput) FirmwareUpgradesStagedStagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedStages {
		return vs[0].([]*FirmwareUpgradesStagedStages)[vs[1].(int)]
	}).(FirmwareUpgradesStagedStagesOutput)
}

type FirmwareUpgradesStagedStagesMapOutput struct{ *pulumi.OutputState }

func (FirmwareUpgradesStagedStagesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirmwareUpgradesStagedStages)(nil)).Elem()
}

func (o FirmwareUpgradesStagedStagesMapOutput) ToFirmwareUpgradesStagedStagesMapOutput() FirmwareUpgradesStagedStagesMapOutput {
	return o
}

func (o FirmwareUpgradesStagedStagesMapOutput) ToFirmwareUpgradesStagedStagesMapOutputWithContext(ctx context.Context) FirmwareUpgradesStagedStagesMapOutput {
	return o
}

func (o FirmwareUpgradesStagedStagesMapOutput) MapIndex(k pulumi.StringInput) FirmwareUpgradesStagedStagesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirmwareUpgradesStagedStages {
		return vs[0].(map[string]*FirmwareUpgradesStagedStages)[vs[1].(string)]
	}).(FirmwareUpgradesStagedStagesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedStagesInput)(nil)).Elem(), &FirmwareUpgradesStagedStages{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedStagesArrayInput)(nil)).Elem(), FirmwareUpgradesStagedStagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirmwareUpgradesStagedStagesMapInput)(nil)).Elem(), FirmwareUpgradesStagedStagesMap{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedStagesOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedStagesArrayOutput{})
	pulumi.RegisterOutputType(FirmwareUpgradesStagedStagesMapOutput{})
}
