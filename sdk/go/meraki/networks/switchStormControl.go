// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewSwitchStormControl(ctx, "example", &networks.SwitchStormControlArgs{
//				BroadcastThreshold:      pulumi.Int(30),
//				MulticastThreshold:      pulumi.Int(30),
//				NetworkId:               pulumi.String("string"),
//				UnknownUnicastThreshold: pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchStormControlExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/switchStormControl:SwitchStormControl example "network_id"
// ```
type SwitchStormControl struct {
	pulumi.CustomResourceState

	// Broadcast threshold.
	BroadcastThreshold pulumi.IntOutput `pulumi:"broadcastThreshold"`
	// Multicast threshold.
	MulticastThreshold pulumi.IntOutput `pulumi:"multicastThreshold"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Unknown Unicast threshold.
	UnknownUnicastThreshold pulumi.IntOutput `pulumi:"unknownUnicastThreshold"`
}

// NewSwitchStormControl registers a new resource with the given unique name, arguments, and options.
func NewSwitchStormControl(ctx *pulumi.Context,
	name string, args *SwitchStormControlArgs, opts ...pulumi.ResourceOption) (*SwitchStormControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchStormControl
	err := ctx.RegisterResource("meraki:networks/switchStormControl:SwitchStormControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchStormControl gets an existing SwitchStormControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchStormControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchStormControlState, opts ...pulumi.ResourceOption) (*SwitchStormControl, error) {
	var resource SwitchStormControl
	err := ctx.ReadResource("meraki:networks/switchStormControl:SwitchStormControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchStormControl resources.
type switchStormControlState struct {
	// Broadcast threshold.
	BroadcastThreshold *int `pulumi:"broadcastThreshold"`
	// Multicast threshold.
	MulticastThreshold *int `pulumi:"multicastThreshold"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// Unknown Unicast threshold.
	UnknownUnicastThreshold *int `pulumi:"unknownUnicastThreshold"`
}

type SwitchStormControlState struct {
	// Broadcast threshold.
	BroadcastThreshold pulumi.IntPtrInput
	// Multicast threshold.
	MulticastThreshold pulumi.IntPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// Unknown Unicast threshold.
	UnknownUnicastThreshold pulumi.IntPtrInput
}

func (SwitchStormControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchStormControlState)(nil)).Elem()
}

type switchStormControlArgs struct {
	// Broadcast threshold.
	BroadcastThreshold *int `pulumi:"broadcastThreshold"`
	// Multicast threshold.
	MulticastThreshold *int `pulumi:"multicastThreshold"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// Unknown Unicast threshold.
	UnknownUnicastThreshold *int `pulumi:"unknownUnicastThreshold"`
}

// The set of arguments for constructing a SwitchStormControl resource.
type SwitchStormControlArgs struct {
	// Broadcast threshold.
	BroadcastThreshold pulumi.IntPtrInput
	// Multicast threshold.
	MulticastThreshold pulumi.IntPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// Unknown Unicast threshold.
	UnknownUnicastThreshold pulumi.IntPtrInput
}

func (SwitchStormControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchStormControlArgs)(nil)).Elem()
}

type SwitchStormControlInput interface {
	pulumi.Input

	ToSwitchStormControlOutput() SwitchStormControlOutput
	ToSwitchStormControlOutputWithContext(ctx context.Context) SwitchStormControlOutput
}

func (*SwitchStormControl) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchStormControl)(nil)).Elem()
}

func (i *SwitchStormControl) ToSwitchStormControlOutput() SwitchStormControlOutput {
	return i.ToSwitchStormControlOutputWithContext(context.Background())
}

func (i *SwitchStormControl) ToSwitchStormControlOutputWithContext(ctx context.Context) SwitchStormControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStormControlOutput)
}

// SwitchStormControlArrayInput is an input type that accepts SwitchStormControlArray and SwitchStormControlArrayOutput values.
// You can construct a concrete instance of `SwitchStormControlArrayInput` via:
//
//	SwitchStormControlArray{ SwitchStormControlArgs{...} }
type SwitchStormControlArrayInput interface {
	pulumi.Input

	ToSwitchStormControlArrayOutput() SwitchStormControlArrayOutput
	ToSwitchStormControlArrayOutputWithContext(context.Context) SwitchStormControlArrayOutput
}

type SwitchStormControlArray []SwitchStormControlInput

func (SwitchStormControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchStormControl)(nil)).Elem()
}

func (i SwitchStormControlArray) ToSwitchStormControlArrayOutput() SwitchStormControlArrayOutput {
	return i.ToSwitchStormControlArrayOutputWithContext(context.Background())
}

func (i SwitchStormControlArray) ToSwitchStormControlArrayOutputWithContext(ctx context.Context) SwitchStormControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStormControlArrayOutput)
}

// SwitchStormControlMapInput is an input type that accepts SwitchStormControlMap and SwitchStormControlMapOutput values.
// You can construct a concrete instance of `SwitchStormControlMapInput` via:
//
//	SwitchStormControlMap{ "key": SwitchStormControlArgs{...} }
type SwitchStormControlMapInput interface {
	pulumi.Input

	ToSwitchStormControlMapOutput() SwitchStormControlMapOutput
	ToSwitchStormControlMapOutputWithContext(context.Context) SwitchStormControlMapOutput
}

type SwitchStormControlMap map[string]SwitchStormControlInput

func (SwitchStormControlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchStormControl)(nil)).Elem()
}

func (i SwitchStormControlMap) ToSwitchStormControlMapOutput() SwitchStormControlMapOutput {
	return i.ToSwitchStormControlMapOutputWithContext(context.Background())
}

func (i SwitchStormControlMap) ToSwitchStormControlMapOutputWithContext(ctx context.Context) SwitchStormControlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStormControlMapOutput)
}

type SwitchStormControlOutput struct{ *pulumi.OutputState }

func (SwitchStormControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchStormControl)(nil)).Elem()
}

func (o SwitchStormControlOutput) ToSwitchStormControlOutput() SwitchStormControlOutput {
	return o
}

func (o SwitchStormControlOutput) ToSwitchStormControlOutputWithContext(ctx context.Context) SwitchStormControlOutput {
	return o
}

// Broadcast threshold.
func (o SwitchStormControlOutput) BroadcastThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchStormControl) pulumi.IntOutput { return v.BroadcastThreshold }).(pulumi.IntOutput)
}

// Multicast threshold.
func (o SwitchStormControlOutput) MulticastThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchStormControl) pulumi.IntOutput { return v.MulticastThreshold }).(pulumi.IntOutput)
}

// networkId path parameter. Network ID
func (o SwitchStormControlOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchStormControl) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Unknown Unicast threshold.
func (o SwitchStormControlOutput) UnknownUnicastThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchStormControl) pulumi.IntOutput { return v.UnknownUnicastThreshold }).(pulumi.IntOutput)
}

type SwitchStormControlArrayOutput struct{ *pulumi.OutputState }

func (SwitchStormControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchStormControl)(nil)).Elem()
}

func (o SwitchStormControlArrayOutput) ToSwitchStormControlArrayOutput() SwitchStormControlArrayOutput {
	return o
}

func (o SwitchStormControlArrayOutput) ToSwitchStormControlArrayOutputWithContext(ctx context.Context) SwitchStormControlArrayOutput {
	return o
}

func (o SwitchStormControlArrayOutput) Index(i pulumi.IntInput) SwitchStormControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchStormControl {
		return vs[0].([]*SwitchStormControl)[vs[1].(int)]
	}).(SwitchStormControlOutput)
}

type SwitchStormControlMapOutput struct{ *pulumi.OutputState }

func (SwitchStormControlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchStormControl)(nil)).Elem()
}

func (o SwitchStormControlMapOutput) ToSwitchStormControlMapOutput() SwitchStormControlMapOutput {
	return o
}

func (o SwitchStormControlMapOutput) ToSwitchStormControlMapOutputWithContext(ctx context.Context) SwitchStormControlMapOutput {
	return o
}

func (o SwitchStormControlMapOutput) MapIndex(k pulumi.StringInput) SwitchStormControlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchStormControl {
		return vs[0].(map[string]*SwitchStormControl)[vs[1].(string)]
	}).(SwitchStormControlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchStormControlInput)(nil)).Elem(), &SwitchStormControl{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchStormControlArrayInput)(nil)).Elem(), SwitchStormControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchStormControlMapInput)(nil)).Elem(), SwitchStormControlMap{})
	pulumi.RegisterOutputType(SwitchStormControlOutput{})
	pulumi.RegisterOutputType(SwitchStormControlArrayOutput{})
	pulumi.RegisterOutputType(SwitchStormControlMapOutput{})
}
