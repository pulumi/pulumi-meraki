// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupSmTargetGroups(ctx *pulumi.Context, args *LookupSmTargetGroupsArgs, opts ...pulumi.InvokeOption) (*LookupSmTargetGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSmTargetGroupsResult
	err := ctx.Invoke("meraki:networks/getSmTargetGroups:getSmTargetGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSmTargetGroups.
type LookupSmTargetGroupsArgs struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// targetGroupId path parameter. Target group ID
	TargetGroupId *string `pulumi:"targetGroupId"`
	// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
	WithDetails *bool `pulumi:"withDetails"`
}

// A collection of values returned by getSmTargetGroups.
type LookupSmTargetGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                `pulumi:"id"`
	Item GetSmTargetGroupsItem `pulumi:"item"`
	// Array of ResponseSmGetNetworkSmTargetGroups
	Items []GetSmTargetGroupsItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// targetGroupId path parameter. Target group ID
	TargetGroupId *string `pulumi:"targetGroupId"`
	// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
	WithDetails *bool `pulumi:"withDetails"`
}

func LookupSmTargetGroupsOutput(ctx *pulumi.Context, args LookupSmTargetGroupsOutputArgs, opts ...pulumi.InvokeOption) LookupSmTargetGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSmTargetGroupsResultOutput, error) {
			args := v.(LookupSmTargetGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:networks/getSmTargetGroups:getSmTargetGroups", args, LookupSmTargetGroupsResultOutput{}, options).(LookupSmTargetGroupsResultOutput), nil
		}).(LookupSmTargetGroupsResultOutput)
}

// A collection of arguments for invoking getSmTargetGroups.
type LookupSmTargetGroupsOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// targetGroupId path parameter. Target group ID
	TargetGroupId pulumi.StringPtrInput `pulumi:"targetGroupId"`
	// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
	WithDetails pulumi.BoolPtrInput `pulumi:"withDetails"`
}

func (LookupSmTargetGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmTargetGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getSmTargetGroups.
type LookupSmTargetGroupsResultOutput struct{ *pulumi.OutputState }

func (LookupSmTargetGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmTargetGroupsResult)(nil)).Elem()
}

func (o LookupSmTargetGroupsResultOutput) ToLookupSmTargetGroupsResultOutput() LookupSmTargetGroupsResultOutput {
	return o
}

func (o LookupSmTargetGroupsResultOutput) ToLookupSmTargetGroupsResultOutputWithContext(ctx context.Context) LookupSmTargetGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSmTargetGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSmTargetGroupsResultOutput) Item() GetSmTargetGroupsItemOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) GetSmTargetGroupsItem { return v.Item }).(GetSmTargetGroupsItemOutput)
}

// Array of ResponseSmGetNetworkSmTargetGroups
func (o LookupSmTargetGroupsResultOutput) Items() GetSmTargetGroupsItemArrayOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) []GetSmTargetGroupsItem { return v.Items }).(GetSmTargetGroupsItemArrayOutput)
}

// networkId path parameter. Network ID
func (o LookupSmTargetGroupsResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// targetGroupId path parameter. Target group ID
func (o LookupSmTargetGroupsResultOutput) TargetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) *string { return v.TargetGroupId }).(pulumi.StringPtrOutput)
}

// withDetails query parameter. Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
func (o LookupSmTargetGroupsResultOutput) WithDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSmTargetGroupsResult) *bool { return v.WithDetails }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSmTargetGroupsResultOutput{})
}
