// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.LookupSwitchPortSchedules(ctx, &networks.LookupSwitchPortSchedulesArgs{
//				NetworkId: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchPortSchedulesExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchPortSchedules(ctx *pulumi.Context, args *LookupSwitchPortSchedulesArgs, opts ...pulumi.InvokeOption) (*LookupSwitchPortSchedulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchPortSchedulesResult
	err := ctx.Invoke("meraki:networks/getSwitchPortSchedules:getSwitchPortSchedules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchPortSchedules.
type LookupSwitchPortSchedulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

// A collection of values returned by getSwitchPortSchedules.
type LookupSwitchPortSchedulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseSwitchGetNetworkSwitchPortSchedules
	Items []GetSwitchPortSchedulesItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
}

func LookupSwitchPortSchedulesOutput(ctx *pulumi.Context, args LookupSwitchPortSchedulesOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchPortSchedulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchPortSchedulesResultOutput, error) {
			args := v.(LookupSwitchPortSchedulesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSwitchPortSchedulesResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSwitchPortSchedules:getSwitchPortSchedules", args, &rv, "", opts...)
			if err != nil {
				return LookupSwitchPortSchedulesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSwitchPortSchedulesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSwitchPortSchedulesResultOutput), nil
			}
			return output, nil
		}).(LookupSwitchPortSchedulesResultOutput)
}

// A collection of arguments for invoking getSwitchPortSchedules.
type LookupSwitchPortSchedulesOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (LookupSwitchPortSchedulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchPortSchedulesArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchPortSchedules.
type LookupSwitchPortSchedulesResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchPortSchedulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchPortSchedulesResult)(nil)).Elem()
}

func (o LookupSwitchPortSchedulesResultOutput) ToLookupSwitchPortSchedulesResultOutput() LookupSwitchPortSchedulesResultOutput {
	return o
}

func (o LookupSwitchPortSchedulesResultOutput) ToLookupSwitchPortSchedulesResultOutputWithContext(ctx context.Context) LookupSwitchPortSchedulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchPortSchedulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchPortSchedulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseSwitchGetNetworkSwitchPortSchedules
func (o LookupSwitchPortSchedulesResultOutput) Items() GetSwitchPortSchedulesItemArrayOutput {
	return o.ApplyT(func(v LookupSwitchPortSchedulesResult) []GetSwitchPortSchedulesItem { return v.Items }).(GetSwitchPortSchedulesItemArrayOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchPortSchedulesResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchPortSchedulesResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchPortSchedulesResultOutput{})
}
