// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
type SmDevicesModifyTags struct {
	pulumi.CustomResourceState

	// Array of ResponseSmModifyNetworkSmDevicesTags
	Items SmDevicesModifyTagsItemArrayOutput `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringOutput                 `pulumi:"networkId"`
	Parameters SmDevicesModifyTagsParametersOutput `pulumi:"parameters"`
}

// NewSmDevicesModifyTags registers a new resource with the given unique name, arguments, and options.
func NewSmDevicesModifyTags(ctx *pulumi.Context,
	name string, args *SmDevicesModifyTagsArgs, opts ...pulumi.ResourceOption) (*SmDevicesModifyTags, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmDevicesModifyTags
	err := ctx.RegisterResource("meraki:networks/smDevicesModifyTags:SmDevicesModifyTags", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmDevicesModifyTags gets an existing SmDevicesModifyTags resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmDevicesModifyTags(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmDevicesModifyTagsState, opts ...pulumi.ResourceOption) (*SmDevicesModifyTags, error) {
	var resource SmDevicesModifyTags
	err := ctx.ReadResource("meraki:networks/smDevicesModifyTags:SmDevicesModifyTags", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmDevicesModifyTags resources.
type smDevicesModifyTagsState struct {
	// Array of ResponseSmModifyNetworkSmDevicesTags
	Items []SmDevicesModifyTagsItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId  *string                        `pulumi:"networkId"`
	Parameters *SmDevicesModifyTagsParameters `pulumi:"parameters"`
}

type SmDevicesModifyTagsState struct {
	// Array of ResponseSmModifyNetworkSmDevicesTags
	Items SmDevicesModifyTagsItemArrayInput
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringPtrInput
	Parameters SmDevicesModifyTagsParametersPtrInput
}

func (SmDevicesModifyTagsState) ElementType() reflect.Type {
	return reflect.TypeOf((*smDevicesModifyTagsState)(nil)).Elem()
}

type smDevicesModifyTagsArgs struct {
	// networkId path parameter. Network ID
	NetworkId  string                        `pulumi:"networkId"`
	Parameters SmDevicesModifyTagsParameters `pulumi:"parameters"`
}

// The set of arguments for constructing a SmDevicesModifyTags resource.
type SmDevicesModifyTagsArgs struct {
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringInput
	Parameters SmDevicesModifyTagsParametersInput
}

func (SmDevicesModifyTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smDevicesModifyTagsArgs)(nil)).Elem()
}

type SmDevicesModifyTagsInput interface {
	pulumi.Input

	ToSmDevicesModifyTagsOutput() SmDevicesModifyTagsOutput
	ToSmDevicesModifyTagsOutputWithContext(ctx context.Context) SmDevicesModifyTagsOutput
}

func (*SmDevicesModifyTags) ElementType() reflect.Type {
	return reflect.TypeOf((**SmDevicesModifyTags)(nil)).Elem()
}

func (i *SmDevicesModifyTags) ToSmDevicesModifyTagsOutput() SmDevicesModifyTagsOutput {
	return i.ToSmDevicesModifyTagsOutputWithContext(context.Background())
}

func (i *SmDevicesModifyTags) ToSmDevicesModifyTagsOutputWithContext(ctx context.Context) SmDevicesModifyTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesModifyTagsOutput)
}

// SmDevicesModifyTagsArrayInput is an input type that accepts SmDevicesModifyTagsArray and SmDevicesModifyTagsArrayOutput values.
// You can construct a concrete instance of `SmDevicesModifyTagsArrayInput` via:
//
//	SmDevicesModifyTagsArray{ SmDevicesModifyTagsArgs{...} }
type SmDevicesModifyTagsArrayInput interface {
	pulumi.Input

	ToSmDevicesModifyTagsArrayOutput() SmDevicesModifyTagsArrayOutput
	ToSmDevicesModifyTagsArrayOutputWithContext(context.Context) SmDevicesModifyTagsArrayOutput
}

type SmDevicesModifyTagsArray []SmDevicesModifyTagsInput

func (SmDevicesModifyTagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmDevicesModifyTags)(nil)).Elem()
}

func (i SmDevicesModifyTagsArray) ToSmDevicesModifyTagsArrayOutput() SmDevicesModifyTagsArrayOutput {
	return i.ToSmDevicesModifyTagsArrayOutputWithContext(context.Background())
}

func (i SmDevicesModifyTagsArray) ToSmDevicesModifyTagsArrayOutputWithContext(ctx context.Context) SmDevicesModifyTagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesModifyTagsArrayOutput)
}

// SmDevicesModifyTagsMapInput is an input type that accepts SmDevicesModifyTagsMap and SmDevicesModifyTagsMapOutput values.
// You can construct a concrete instance of `SmDevicesModifyTagsMapInput` via:
//
//	SmDevicesModifyTagsMap{ "key": SmDevicesModifyTagsArgs{...} }
type SmDevicesModifyTagsMapInput interface {
	pulumi.Input

	ToSmDevicesModifyTagsMapOutput() SmDevicesModifyTagsMapOutput
	ToSmDevicesModifyTagsMapOutputWithContext(context.Context) SmDevicesModifyTagsMapOutput
}

type SmDevicesModifyTagsMap map[string]SmDevicesModifyTagsInput

func (SmDevicesModifyTagsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmDevicesModifyTags)(nil)).Elem()
}

func (i SmDevicesModifyTagsMap) ToSmDevicesModifyTagsMapOutput() SmDevicesModifyTagsMapOutput {
	return i.ToSmDevicesModifyTagsMapOutputWithContext(context.Background())
}

func (i SmDevicesModifyTagsMap) ToSmDevicesModifyTagsMapOutputWithContext(ctx context.Context) SmDevicesModifyTagsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmDevicesModifyTagsMapOutput)
}

type SmDevicesModifyTagsOutput struct{ *pulumi.OutputState }

func (SmDevicesModifyTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmDevicesModifyTags)(nil)).Elem()
}

func (o SmDevicesModifyTagsOutput) ToSmDevicesModifyTagsOutput() SmDevicesModifyTagsOutput {
	return o
}

func (o SmDevicesModifyTagsOutput) ToSmDevicesModifyTagsOutputWithContext(ctx context.Context) SmDevicesModifyTagsOutput {
	return o
}

// Array of ResponseSmModifyNetworkSmDevicesTags
func (o SmDevicesModifyTagsOutput) Items() SmDevicesModifyTagsItemArrayOutput {
	return o.ApplyT(func(v *SmDevicesModifyTags) SmDevicesModifyTagsItemArrayOutput { return v.Items }).(SmDevicesModifyTagsItemArrayOutput)
}

// networkId path parameter. Network ID
func (o SmDevicesModifyTagsOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *SmDevicesModifyTags) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o SmDevicesModifyTagsOutput) Parameters() SmDevicesModifyTagsParametersOutput {
	return o.ApplyT(func(v *SmDevicesModifyTags) SmDevicesModifyTagsParametersOutput { return v.Parameters }).(SmDevicesModifyTagsParametersOutput)
}

type SmDevicesModifyTagsArrayOutput struct{ *pulumi.OutputState }

func (SmDevicesModifyTagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmDevicesModifyTags)(nil)).Elem()
}

func (o SmDevicesModifyTagsArrayOutput) ToSmDevicesModifyTagsArrayOutput() SmDevicesModifyTagsArrayOutput {
	return o
}

func (o SmDevicesModifyTagsArrayOutput) ToSmDevicesModifyTagsArrayOutputWithContext(ctx context.Context) SmDevicesModifyTagsArrayOutput {
	return o
}

func (o SmDevicesModifyTagsArrayOutput) Index(i pulumi.IntInput) SmDevicesModifyTagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SmDevicesModifyTags {
		return vs[0].([]*SmDevicesModifyTags)[vs[1].(int)]
	}).(SmDevicesModifyTagsOutput)
}

type SmDevicesModifyTagsMapOutput struct{ *pulumi.OutputState }

func (SmDevicesModifyTagsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmDevicesModifyTags)(nil)).Elem()
}

func (o SmDevicesModifyTagsMapOutput) ToSmDevicesModifyTagsMapOutput() SmDevicesModifyTagsMapOutput {
	return o
}

func (o SmDevicesModifyTagsMapOutput) ToSmDevicesModifyTagsMapOutputWithContext(ctx context.Context) SmDevicesModifyTagsMapOutput {
	return o
}

func (o SmDevicesModifyTagsMapOutput) MapIndex(k pulumi.StringInput) SmDevicesModifyTagsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SmDevicesModifyTags {
		return vs[0].(map[string]*SmDevicesModifyTags)[vs[1].(string)]
	}).(SmDevicesModifyTagsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesModifyTagsInput)(nil)).Elem(), &SmDevicesModifyTags{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesModifyTagsArrayInput)(nil)).Elem(), SmDevicesModifyTagsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmDevicesModifyTagsMapInput)(nil)).Elem(), SmDevicesModifyTagsMap{})
	pulumi.RegisterOutputType(SmDevicesModifyTagsOutput{})
	pulumi.RegisterOutputType(SmDevicesModifyTagsArrayOutput{})
	pulumi.RegisterOutputType(SmDevicesModifyTagsMapOutput{})
}
