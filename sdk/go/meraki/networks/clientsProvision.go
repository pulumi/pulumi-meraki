// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
type ClientsProvision struct {
	pulumi.CustomResourceState

	Item ClientsProvisionItemOutput `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringOutput              `pulumi:"networkId"`
	Parameters ClientsProvisionParametersOutput `pulumi:"parameters"`
}

// NewClientsProvision registers a new resource with the given unique name, arguments, and options.
func NewClientsProvision(ctx *pulumi.Context,
	name string, args *ClientsProvisionArgs, opts ...pulumi.ResourceOption) (*ClientsProvision, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClientsProvision
	err := ctx.RegisterResource("meraki:networks/clientsProvision:ClientsProvision", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientsProvision gets an existing ClientsProvision resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientsProvision(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientsProvisionState, opts ...pulumi.ResourceOption) (*ClientsProvision, error) {
	var resource ClientsProvision
	err := ctx.ReadResource("meraki:networks/clientsProvision:ClientsProvision", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientsProvision resources.
type clientsProvisionState struct {
	Item *ClientsProvisionItem `pulumi:"item"`
	// networkId path parameter. Network ID
	NetworkId  *string                     `pulumi:"networkId"`
	Parameters *ClientsProvisionParameters `pulumi:"parameters"`
}

type ClientsProvisionState struct {
	Item ClientsProvisionItemPtrInput
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringPtrInput
	Parameters ClientsProvisionParametersPtrInput
}

func (ClientsProvisionState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientsProvisionState)(nil)).Elem()
}

type clientsProvisionArgs struct {
	// networkId path parameter. Network ID
	NetworkId  string                     `pulumi:"networkId"`
	Parameters ClientsProvisionParameters `pulumi:"parameters"`
}

// The set of arguments for constructing a ClientsProvision resource.
type ClientsProvisionArgs struct {
	// networkId path parameter. Network ID
	NetworkId  pulumi.StringInput
	Parameters ClientsProvisionParametersInput
}

func (ClientsProvisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientsProvisionArgs)(nil)).Elem()
}

type ClientsProvisionInput interface {
	pulumi.Input

	ToClientsProvisionOutput() ClientsProvisionOutput
	ToClientsProvisionOutputWithContext(ctx context.Context) ClientsProvisionOutput
}

func (*ClientsProvision) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientsProvision)(nil)).Elem()
}

func (i *ClientsProvision) ToClientsProvisionOutput() ClientsProvisionOutput {
	return i.ToClientsProvisionOutputWithContext(context.Background())
}

func (i *ClientsProvision) ToClientsProvisionOutputWithContext(ctx context.Context) ClientsProvisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsProvisionOutput)
}

// ClientsProvisionArrayInput is an input type that accepts ClientsProvisionArray and ClientsProvisionArrayOutput values.
// You can construct a concrete instance of `ClientsProvisionArrayInput` via:
//
//	ClientsProvisionArray{ ClientsProvisionArgs{...} }
type ClientsProvisionArrayInput interface {
	pulumi.Input

	ToClientsProvisionArrayOutput() ClientsProvisionArrayOutput
	ToClientsProvisionArrayOutputWithContext(context.Context) ClientsProvisionArrayOutput
}

type ClientsProvisionArray []ClientsProvisionInput

func (ClientsProvisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientsProvision)(nil)).Elem()
}

func (i ClientsProvisionArray) ToClientsProvisionArrayOutput() ClientsProvisionArrayOutput {
	return i.ToClientsProvisionArrayOutputWithContext(context.Background())
}

func (i ClientsProvisionArray) ToClientsProvisionArrayOutputWithContext(ctx context.Context) ClientsProvisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsProvisionArrayOutput)
}

// ClientsProvisionMapInput is an input type that accepts ClientsProvisionMap and ClientsProvisionMapOutput values.
// You can construct a concrete instance of `ClientsProvisionMapInput` via:
//
//	ClientsProvisionMap{ "key": ClientsProvisionArgs{...} }
type ClientsProvisionMapInput interface {
	pulumi.Input

	ToClientsProvisionMapOutput() ClientsProvisionMapOutput
	ToClientsProvisionMapOutputWithContext(context.Context) ClientsProvisionMapOutput
}

type ClientsProvisionMap map[string]ClientsProvisionInput

func (ClientsProvisionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientsProvision)(nil)).Elem()
}

func (i ClientsProvisionMap) ToClientsProvisionMapOutput() ClientsProvisionMapOutput {
	return i.ToClientsProvisionMapOutputWithContext(context.Background())
}

func (i ClientsProvisionMap) ToClientsProvisionMapOutputWithContext(ctx context.Context) ClientsProvisionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientsProvisionMapOutput)
}

type ClientsProvisionOutput struct{ *pulumi.OutputState }

func (ClientsProvisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientsProvision)(nil)).Elem()
}

func (o ClientsProvisionOutput) ToClientsProvisionOutput() ClientsProvisionOutput {
	return o
}

func (o ClientsProvisionOutput) ToClientsProvisionOutputWithContext(ctx context.Context) ClientsProvisionOutput {
	return o
}

func (o ClientsProvisionOutput) Item() ClientsProvisionItemOutput {
	return o.ApplyT(func(v *ClientsProvision) ClientsProvisionItemOutput { return v.Item }).(ClientsProvisionItemOutput)
}

// networkId path parameter. Network ID
func (o ClientsProvisionOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientsProvision) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o ClientsProvisionOutput) Parameters() ClientsProvisionParametersOutput {
	return o.ApplyT(func(v *ClientsProvision) ClientsProvisionParametersOutput { return v.Parameters }).(ClientsProvisionParametersOutput)
}

type ClientsProvisionArrayOutput struct{ *pulumi.OutputState }

func (ClientsProvisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientsProvision)(nil)).Elem()
}

func (o ClientsProvisionArrayOutput) ToClientsProvisionArrayOutput() ClientsProvisionArrayOutput {
	return o
}

func (o ClientsProvisionArrayOutput) ToClientsProvisionArrayOutputWithContext(ctx context.Context) ClientsProvisionArrayOutput {
	return o
}

func (o ClientsProvisionArrayOutput) Index(i pulumi.IntInput) ClientsProvisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClientsProvision {
		return vs[0].([]*ClientsProvision)[vs[1].(int)]
	}).(ClientsProvisionOutput)
}

type ClientsProvisionMapOutput struct{ *pulumi.OutputState }

func (ClientsProvisionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientsProvision)(nil)).Elem()
}

func (o ClientsProvisionMapOutput) ToClientsProvisionMapOutput() ClientsProvisionMapOutput {
	return o
}

func (o ClientsProvisionMapOutput) ToClientsProvisionMapOutputWithContext(ctx context.Context) ClientsProvisionMapOutput {
	return o
}

func (o ClientsProvisionMapOutput) MapIndex(k pulumi.StringInput) ClientsProvisionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClientsProvision {
		return vs[0].(map[string]*ClientsProvision)[vs[1].(string)]
	}).(ClientsProvisionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsProvisionInput)(nil)).Elem(), &ClientsProvision{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsProvisionArrayInput)(nil)).Elem(), ClientsProvisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientsProvisionMapInput)(nil)).Elem(), ClientsProvisionMap{})
	pulumi.RegisterOutputType(ClientsProvisionOutput{})
	pulumi.RegisterOutputType(ClientsProvisionArrayOutput{})
	pulumi.RegisterOutputType(ClientsProvisionMapOutput{})
}
