// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/applianceFirewallInboundFirewallRules:ApplianceFirewallInboundFirewallRules example "network_id"
// ```
type ApplianceFirewallInboundFirewallRules struct {
	pulumi.CustomResourceState

	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallInboundFirewallRulesRuleArrayOutput `pulumi:"rules"`
	// An ordered array of the firewall rules (not including the default rule)
	RulesResponses ApplianceFirewallInboundFirewallRulesRulesResponseArrayOutput `pulumi:"rulesResponses"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolOutput `pulumi:"syslogDefaultRule"`
}

// NewApplianceFirewallInboundFirewallRules registers a new resource with the given unique name, arguments, and options.
func NewApplianceFirewallInboundFirewallRules(ctx *pulumi.Context,
	name string, args *ApplianceFirewallInboundFirewallRulesArgs, opts ...pulumi.ResourceOption) (*ApplianceFirewallInboundFirewallRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceFirewallInboundFirewallRules
	err := ctx.RegisterResource("meraki:networks/applianceFirewallInboundFirewallRules:ApplianceFirewallInboundFirewallRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceFirewallInboundFirewallRules gets an existing ApplianceFirewallInboundFirewallRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceFirewallInboundFirewallRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceFirewallInboundFirewallRulesState, opts ...pulumi.ResourceOption) (*ApplianceFirewallInboundFirewallRules, error) {
	var resource ApplianceFirewallInboundFirewallRules
	err := ctx.ReadResource("meraki:networks/applianceFirewallInboundFirewallRules:ApplianceFirewallInboundFirewallRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceFirewallInboundFirewallRules resources.
type applianceFirewallInboundFirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceFirewallInboundFirewallRulesRule `pulumi:"rules"`
	// An ordered array of the firewall rules (not including the default rule)
	RulesResponses []ApplianceFirewallInboundFirewallRulesRulesResponse `pulumi:"rulesResponses"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule *bool `pulumi:"syslogDefaultRule"`
}

type ApplianceFirewallInboundFirewallRulesState struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallInboundFirewallRulesRuleArrayInput
	// An ordered array of the firewall rules (not including the default rule)
	RulesResponses ApplianceFirewallInboundFirewallRulesRulesResponseArrayInput
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolPtrInput
}

func (ApplianceFirewallInboundFirewallRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallInboundFirewallRulesState)(nil)).Elem()
}

type applianceFirewallInboundFirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// An ordered array of the firewall rules (not including the default rule)
	Rules []ApplianceFirewallInboundFirewallRulesRule `pulumi:"rules"`
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule *bool `pulumi:"syslogDefaultRule"`
}

// The set of arguments for constructing a ApplianceFirewallInboundFirewallRules resource.
type ApplianceFirewallInboundFirewallRulesArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// An ordered array of the firewall rules (not including the default rule)
	Rules ApplianceFirewallInboundFirewallRulesRuleArrayInput
	// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
	SyslogDefaultRule pulumi.BoolPtrInput
}

func (ApplianceFirewallInboundFirewallRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceFirewallInboundFirewallRulesArgs)(nil)).Elem()
}

type ApplianceFirewallInboundFirewallRulesInput interface {
	pulumi.Input

	ToApplianceFirewallInboundFirewallRulesOutput() ApplianceFirewallInboundFirewallRulesOutput
	ToApplianceFirewallInboundFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesOutput
}

func (*ApplianceFirewallInboundFirewallRules) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (i *ApplianceFirewallInboundFirewallRules) ToApplianceFirewallInboundFirewallRulesOutput() ApplianceFirewallInboundFirewallRulesOutput {
	return i.ToApplianceFirewallInboundFirewallRulesOutputWithContext(context.Background())
}

func (i *ApplianceFirewallInboundFirewallRules) ToApplianceFirewallInboundFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallInboundFirewallRulesOutput)
}

// ApplianceFirewallInboundFirewallRulesArrayInput is an input type that accepts ApplianceFirewallInboundFirewallRulesArray and ApplianceFirewallInboundFirewallRulesArrayOutput values.
// You can construct a concrete instance of `ApplianceFirewallInboundFirewallRulesArrayInput` via:
//
//	ApplianceFirewallInboundFirewallRulesArray{ ApplianceFirewallInboundFirewallRulesArgs{...} }
type ApplianceFirewallInboundFirewallRulesArrayInput interface {
	pulumi.Input

	ToApplianceFirewallInboundFirewallRulesArrayOutput() ApplianceFirewallInboundFirewallRulesArrayOutput
	ToApplianceFirewallInboundFirewallRulesArrayOutputWithContext(context.Context) ApplianceFirewallInboundFirewallRulesArrayOutput
}

type ApplianceFirewallInboundFirewallRulesArray []ApplianceFirewallInboundFirewallRulesInput

func (ApplianceFirewallInboundFirewallRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (i ApplianceFirewallInboundFirewallRulesArray) ToApplianceFirewallInboundFirewallRulesArrayOutput() ApplianceFirewallInboundFirewallRulesArrayOutput {
	return i.ToApplianceFirewallInboundFirewallRulesArrayOutputWithContext(context.Background())
}

func (i ApplianceFirewallInboundFirewallRulesArray) ToApplianceFirewallInboundFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallInboundFirewallRulesArrayOutput)
}

// ApplianceFirewallInboundFirewallRulesMapInput is an input type that accepts ApplianceFirewallInboundFirewallRulesMap and ApplianceFirewallInboundFirewallRulesMapOutput values.
// You can construct a concrete instance of `ApplianceFirewallInboundFirewallRulesMapInput` via:
//
//	ApplianceFirewallInboundFirewallRulesMap{ "key": ApplianceFirewallInboundFirewallRulesArgs{...} }
type ApplianceFirewallInboundFirewallRulesMapInput interface {
	pulumi.Input

	ToApplianceFirewallInboundFirewallRulesMapOutput() ApplianceFirewallInboundFirewallRulesMapOutput
	ToApplianceFirewallInboundFirewallRulesMapOutputWithContext(context.Context) ApplianceFirewallInboundFirewallRulesMapOutput
}

type ApplianceFirewallInboundFirewallRulesMap map[string]ApplianceFirewallInboundFirewallRulesInput

func (ApplianceFirewallInboundFirewallRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (i ApplianceFirewallInboundFirewallRulesMap) ToApplianceFirewallInboundFirewallRulesMapOutput() ApplianceFirewallInboundFirewallRulesMapOutput {
	return i.ToApplianceFirewallInboundFirewallRulesMapOutputWithContext(context.Background())
}

func (i ApplianceFirewallInboundFirewallRulesMap) ToApplianceFirewallInboundFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceFirewallInboundFirewallRulesMapOutput)
}

type ApplianceFirewallInboundFirewallRulesOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallInboundFirewallRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallInboundFirewallRulesOutput) ToApplianceFirewallInboundFirewallRulesOutput() ApplianceFirewallInboundFirewallRulesOutput {
	return o
}

func (o ApplianceFirewallInboundFirewallRulesOutput) ToApplianceFirewallInboundFirewallRulesOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesOutput {
	return o
}

// networkId path parameter. Network ID
func (o ApplianceFirewallInboundFirewallRulesOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceFirewallInboundFirewallRules) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// An ordered array of the firewall rules (not including the default rule)
func (o ApplianceFirewallInboundFirewallRulesOutput) Rules() ApplianceFirewallInboundFirewallRulesRuleArrayOutput {
	return o.ApplyT(func(v *ApplianceFirewallInboundFirewallRules) ApplianceFirewallInboundFirewallRulesRuleArrayOutput {
		return v.Rules
	}).(ApplianceFirewallInboundFirewallRulesRuleArrayOutput)
}

// An ordered array of the firewall rules (not including the default rule)
func (o ApplianceFirewallInboundFirewallRulesOutput) RulesResponses() ApplianceFirewallInboundFirewallRulesRulesResponseArrayOutput {
	return o.ApplyT(func(v *ApplianceFirewallInboundFirewallRules) ApplianceFirewallInboundFirewallRulesRulesResponseArrayOutput {
		return v.RulesResponses
	}).(ApplianceFirewallInboundFirewallRulesRulesResponseArrayOutput)
}

// Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
func (o ApplianceFirewallInboundFirewallRulesOutput) SyslogDefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApplianceFirewallInboundFirewallRules) pulumi.BoolOutput { return v.SyslogDefaultRule }).(pulumi.BoolOutput)
}

type ApplianceFirewallInboundFirewallRulesArrayOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallInboundFirewallRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallInboundFirewallRulesArrayOutput) ToApplianceFirewallInboundFirewallRulesArrayOutput() ApplianceFirewallInboundFirewallRulesArrayOutput {
	return o
}

func (o ApplianceFirewallInboundFirewallRulesArrayOutput) ToApplianceFirewallInboundFirewallRulesArrayOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesArrayOutput {
	return o
}

func (o ApplianceFirewallInboundFirewallRulesArrayOutput) Index(i pulumi.IntInput) ApplianceFirewallInboundFirewallRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceFirewallInboundFirewallRules {
		return vs[0].([]*ApplianceFirewallInboundFirewallRules)[vs[1].(int)]
	}).(ApplianceFirewallInboundFirewallRulesOutput)
}

type ApplianceFirewallInboundFirewallRulesMapOutput struct{ *pulumi.OutputState }

func (ApplianceFirewallInboundFirewallRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceFirewallInboundFirewallRules)(nil)).Elem()
}

func (o ApplianceFirewallInboundFirewallRulesMapOutput) ToApplianceFirewallInboundFirewallRulesMapOutput() ApplianceFirewallInboundFirewallRulesMapOutput {
	return o
}

func (o ApplianceFirewallInboundFirewallRulesMapOutput) ToApplianceFirewallInboundFirewallRulesMapOutputWithContext(ctx context.Context) ApplianceFirewallInboundFirewallRulesMapOutput {
	return o
}

func (o ApplianceFirewallInboundFirewallRulesMapOutput) MapIndex(k pulumi.StringInput) ApplianceFirewallInboundFirewallRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceFirewallInboundFirewallRules {
		return vs[0].(map[string]*ApplianceFirewallInboundFirewallRules)[vs[1].(string)]
	}).(ApplianceFirewallInboundFirewallRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallInboundFirewallRulesInput)(nil)).Elem(), &ApplianceFirewallInboundFirewallRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallInboundFirewallRulesArrayInput)(nil)).Elem(), ApplianceFirewallInboundFirewallRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceFirewallInboundFirewallRulesMapInput)(nil)).Elem(), ApplianceFirewallInboundFirewallRulesMap{})
	pulumi.RegisterOutputType(ApplianceFirewallInboundFirewallRulesOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallInboundFirewallRulesArrayOutput{})
	pulumi.RegisterOutputType(ApplianceFirewallInboundFirewallRulesMapOutput{})
}
