// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupSwitchStacks(ctx *pulumi.Context, args *LookupSwitchStacksArgs, opts ...pulumi.InvokeOption) (*LookupSwitchStacksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchStacksResult
	err := ctx.Invoke("meraki:networks/getSwitchStacks:getSwitchStacks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchStacks.
type LookupSwitchStacksArgs struct {
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId *string `pulumi:"switchStackId"`
}

// A collection of values returned by getSwitchStacks.
type LookupSwitchStacksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string              `pulumi:"id"`
	Item GetSwitchStacksItem `pulumi:"item"`
	// Array of ResponseSwitchGetNetworkSwitchStacks
	Items []GetSwitchStacksItem `pulumi:"items"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId *string `pulumi:"switchStackId"`
}

func LookupSwitchStacksOutput(ctx *pulumi.Context, args LookupSwitchStacksOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchStacksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSwitchStacksResultOutput, error) {
			args := v.(LookupSwitchStacksArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSwitchStacksResult
			secret, err := ctx.InvokePackageRaw("meraki:networks/getSwitchStacks:getSwitchStacks", args, &rv, "", opts...)
			if err != nil {
				return LookupSwitchStacksResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSwitchStacksResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSwitchStacksResultOutput), nil
			}
			return output, nil
		}).(LookupSwitchStacksResultOutput)
}

// A collection of arguments for invoking getSwitchStacks.
type LookupSwitchStacksOutputArgs struct {
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// switchStackId path parameter. Switch stack ID
	SwitchStackId pulumi.StringPtrInput `pulumi:"switchStackId"`
}

func (LookupSwitchStacksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchStacks.
type LookupSwitchStacksResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchStacksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchStacksResult)(nil)).Elem()
}

func (o LookupSwitchStacksResultOutput) ToLookupSwitchStacksResultOutput() LookupSwitchStacksResultOutput {
	return o
}

func (o LookupSwitchStacksResultOutput) ToLookupSwitchStacksResultOutputWithContext(ctx context.Context) LookupSwitchStacksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchStacksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchStacksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchStacksResultOutput) Item() GetSwitchStacksItemOutput {
	return o.ApplyT(func(v LookupSwitchStacksResult) GetSwitchStacksItem { return v.Item }).(GetSwitchStacksItemOutput)
}

// Array of ResponseSwitchGetNetworkSwitchStacks
func (o LookupSwitchStacksResultOutput) Items() GetSwitchStacksItemArrayOutput {
	return o.ApplyT(func(v LookupSwitchStacksResult) []GetSwitchStacksItem { return v.Items }).(GetSwitchStacksItemArrayOutput)
}

// networkId path parameter. Network ID
func (o LookupSwitchStacksResultOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSwitchStacksResult) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// switchStackId path parameter. Switch stack ID
func (o LookupSwitchStacksResultOutput) SwitchStackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSwitchStacksResult) *string { return v.SwitchStackId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchStacksResultOutput{})
}
