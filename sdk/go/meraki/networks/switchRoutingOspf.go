// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/networks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := networks.NewSwitchRoutingOspf(ctx, "example", &networks.SwitchRoutingOspfArgs{
//				Areas: networks.SwitchRoutingOspfAreaArray{
//					&networks.SwitchRoutingOspfAreaArgs{
//						Area_id:   "1284392014819",
//						Area_name: "Backbone",
//						Area_type: "normal",
//					},
//				},
//				DeadTimerInSeconds:       pulumi.Int(40),
//				Enabled:                  pulumi.Bool(true),
//				HelloTimerInSeconds:      pulumi.Int(10),
//				Md5AuthenticationEnabled: pulumi.Bool(true),
//				Md5AuthenticationKey: &networks.SwitchRoutingOspfMd5AuthenticationKeyArgs{
//					Id:         pulumi.Int(1234),
//					Passphrase: pulumi.String("abc1234"),
//				},
//				NetworkId: pulumi.String("string"),
//				V3: &networks.SwitchRoutingOspfV3Args{
//					Areas: networks.SwitchRoutingOspfV3AreaArray{
//						&networks.SwitchRoutingOspfV3AreaArgs{
//							AreaId:   pulumi.Int(1284392014819),
//							AreaName: pulumi.String("V3 Backbone"),
//							AreaType: pulumi.String("normal"),
//						},
//					},
//					Dead_timer_in_seconds:  40,
//					Enabled:                pulumi.Bool(true),
//					Hello_timer_in_seconds: 10,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiNetworksSwitchRoutingOspfExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:networks/switchRoutingOspf:SwitchRoutingOspf example "network_id"
// ```
type SwitchRoutingOspf struct {
	pulumi.CustomResourceState

	// OSPF areas
	Areas SwitchRoutingOspfAreaArrayOutput `pulumi:"areas"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds pulumi.IntOutput `pulumi:"deadTimerInSeconds"`
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds pulumi.IntOutput `pulumi:"helloTimerInSeconds"`
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled pulumi.BoolOutput `pulumi:"md5AuthenticationEnabled"`
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey SwitchRoutingOspfMd5AuthenticationKeyOutput `pulumi:"md5AuthenticationKey"`
	// networkId path parameter. Network ID
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// OSPF v3 configuration
	V3 SwitchRoutingOspfV3Output `pulumi:"v3"`
}

// NewSwitchRoutingOspf registers a new resource with the given unique name, arguments, and options.
func NewSwitchRoutingOspf(ctx *pulumi.Context,
	name string, args *SwitchRoutingOspfArgs, opts ...pulumi.ResourceOption) (*SwitchRoutingOspf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchRoutingOspf
	err := ctx.RegisterResource("meraki:networks/switchRoutingOspf:SwitchRoutingOspf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchRoutingOspf gets an existing SwitchRoutingOspf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchRoutingOspf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchRoutingOspfState, opts ...pulumi.ResourceOption) (*SwitchRoutingOspf, error) {
	var resource SwitchRoutingOspf
	err := ctx.ReadResource("meraki:networks/switchRoutingOspf:SwitchRoutingOspf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchRoutingOspf resources.
type switchRoutingOspfState struct {
	// OSPF areas
	Areas []SwitchRoutingOspfArea `pulumi:"areas"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds *int `pulumi:"deadTimerInSeconds"`
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled *bool `pulumi:"enabled"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds *int `pulumi:"helloTimerInSeconds"`
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled *bool `pulumi:"md5AuthenticationEnabled"`
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey *SwitchRoutingOspfMd5AuthenticationKey `pulumi:"md5AuthenticationKey"`
	// networkId path parameter. Network ID
	NetworkId *string `pulumi:"networkId"`
	// OSPF v3 configuration
	V3 *SwitchRoutingOspfV3 `pulumi:"v3"`
}

type SwitchRoutingOspfState struct {
	// OSPF areas
	Areas SwitchRoutingOspfAreaArrayInput
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds pulumi.IntPtrInput
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled pulumi.BoolPtrInput
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds pulumi.IntPtrInput
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled pulumi.BoolPtrInput
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey SwitchRoutingOspfMd5AuthenticationKeyPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringPtrInput
	// OSPF v3 configuration
	V3 SwitchRoutingOspfV3PtrInput
}

func (SwitchRoutingOspfState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchRoutingOspfState)(nil)).Elem()
}

type switchRoutingOspfArgs struct {
	// OSPF areas
	Areas []SwitchRoutingOspfArea `pulumi:"areas"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds *int `pulumi:"deadTimerInSeconds"`
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled *bool `pulumi:"enabled"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds *int `pulumi:"helloTimerInSeconds"`
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled *bool `pulumi:"md5AuthenticationEnabled"`
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey *SwitchRoutingOspfMd5AuthenticationKey `pulumi:"md5AuthenticationKey"`
	// networkId path parameter. Network ID
	NetworkId string `pulumi:"networkId"`
	// OSPF v3 configuration
	V3 *SwitchRoutingOspfV3 `pulumi:"v3"`
}

// The set of arguments for constructing a SwitchRoutingOspf resource.
type SwitchRoutingOspfArgs struct {
	// OSPF areas
	Areas SwitchRoutingOspfAreaArrayInput
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds pulumi.IntPtrInput
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled pulumi.BoolPtrInput
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds pulumi.IntPtrInput
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled pulumi.BoolPtrInput
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey SwitchRoutingOspfMd5AuthenticationKeyPtrInput
	// networkId path parameter. Network ID
	NetworkId pulumi.StringInput
	// OSPF v3 configuration
	V3 SwitchRoutingOspfV3PtrInput
}

func (SwitchRoutingOspfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchRoutingOspfArgs)(nil)).Elem()
}

type SwitchRoutingOspfInput interface {
	pulumi.Input

	ToSwitchRoutingOspfOutput() SwitchRoutingOspfOutput
	ToSwitchRoutingOspfOutputWithContext(ctx context.Context) SwitchRoutingOspfOutput
}

func (*SwitchRoutingOspf) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingOspf)(nil)).Elem()
}

func (i *SwitchRoutingOspf) ToSwitchRoutingOspfOutput() SwitchRoutingOspfOutput {
	return i.ToSwitchRoutingOspfOutputWithContext(context.Background())
}

func (i *SwitchRoutingOspf) ToSwitchRoutingOspfOutputWithContext(ctx context.Context) SwitchRoutingOspfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingOspfOutput)
}

// SwitchRoutingOspfArrayInput is an input type that accepts SwitchRoutingOspfArray and SwitchRoutingOspfArrayOutput values.
// You can construct a concrete instance of `SwitchRoutingOspfArrayInput` via:
//
//	SwitchRoutingOspfArray{ SwitchRoutingOspfArgs{...} }
type SwitchRoutingOspfArrayInput interface {
	pulumi.Input

	ToSwitchRoutingOspfArrayOutput() SwitchRoutingOspfArrayOutput
	ToSwitchRoutingOspfArrayOutputWithContext(context.Context) SwitchRoutingOspfArrayOutput
}

type SwitchRoutingOspfArray []SwitchRoutingOspfInput

func (SwitchRoutingOspfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchRoutingOspf)(nil)).Elem()
}

func (i SwitchRoutingOspfArray) ToSwitchRoutingOspfArrayOutput() SwitchRoutingOspfArrayOutput {
	return i.ToSwitchRoutingOspfArrayOutputWithContext(context.Background())
}

func (i SwitchRoutingOspfArray) ToSwitchRoutingOspfArrayOutputWithContext(ctx context.Context) SwitchRoutingOspfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingOspfArrayOutput)
}

// SwitchRoutingOspfMapInput is an input type that accepts SwitchRoutingOspfMap and SwitchRoutingOspfMapOutput values.
// You can construct a concrete instance of `SwitchRoutingOspfMapInput` via:
//
//	SwitchRoutingOspfMap{ "key": SwitchRoutingOspfArgs{...} }
type SwitchRoutingOspfMapInput interface {
	pulumi.Input

	ToSwitchRoutingOspfMapOutput() SwitchRoutingOspfMapOutput
	ToSwitchRoutingOspfMapOutputWithContext(context.Context) SwitchRoutingOspfMapOutput
}

type SwitchRoutingOspfMap map[string]SwitchRoutingOspfInput

func (SwitchRoutingOspfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchRoutingOspf)(nil)).Elem()
}

func (i SwitchRoutingOspfMap) ToSwitchRoutingOspfMapOutput() SwitchRoutingOspfMapOutput {
	return i.ToSwitchRoutingOspfMapOutputWithContext(context.Background())
}

func (i SwitchRoutingOspfMap) ToSwitchRoutingOspfMapOutputWithContext(ctx context.Context) SwitchRoutingOspfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingOspfMapOutput)
}

type SwitchRoutingOspfOutput struct{ *pulumi.OutputState }

func (SwitchRoutingOspfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingOspf)(nil)).Elem()
}

func (o SwitchRoutingOspfOutput) ToSwitchRoutingOspfOutput() SwitchRoutingOspfOutput {
	return o
}

func (o SwitchRoutingOspfOutput) ToSwitchRoutingOspfOutputWithContext(ctx context.Context) SwitchRoutingOspfOutput {
	return o
}

// OSPF areas
func (o SwitchRoutingOspfOutput) Areas() SwitchRoutingOspfAreaArrayOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) SwitchRoutingOspfAreaArrayOutput { return v.Areas }).(SwitchRoutingOspfAreaArrayOutput)
}

// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
func (o SwitchRoutingOspfOutput) DeadTimerInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) pulumi.IntOutput { return v.DeadTimerInSeconds }).(pulumi.IntOutput)
}

// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
func (o SwitchRoutingOspfOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
func (o SwitchRoutingOspfOutput) HelloTimerInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) pulumi.IntOutput { return v.HelloTimerInSeconds }).(pulumi.IntOutput)
}

// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
func (o SwitchRoutingOspfOutput) Md5AuthenticationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) pulumi.BoolOutput { return v.Md5AuthenticationEnabled }).(pulumi.BoolOutput)
}

// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
func (o SwitchRoutingOspfOutput) Md5AuthenticationKey() SwitchRoutingOspfMd5AuthenticationKeyOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) SwitchRoutingOspfMd5AuthenticationKeyOutput { return v.Md5AuthenticationKey }).(SwitchRoutingOspfMd5AuthenticationKeyOutput)
}

// networkId path parameter. Network ID
func (o SwitchRoutingOspfOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchRoutingOspf) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// OSPF v3 configuration
func (o SwitchRoutingOspfOutput) V3() SwitchRoutingOspfV3Output {
	return o.ApplyT(func(v *SwitchRoutingOspf) SwitchRoutingOspfV3Output { return v.V3 }).(SwitchRoutingOspfV3Output)
}

type SwitchRoutingOspfArrayOutput struct{ *pulumi.OutputState }

func (SwitchRoutingOspfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchRoutingOspf)(nil)).Elem()
}

func (o SwitchRoutingOspfArrayOutput) ToSwitchRoutingOspfArrayOutput() SwitchRoutingOspfArrayOutput {
	return o
}

func (o SwitchRoutingOspfArrayOutput) ToSwitchRoutingOspfArrayOutputWithContext(ctx context.Context) SwitchRoutingOspfArrayOutput {
	return o
}

func (o SwitchRoutingOspfArrayOutput) Index(i pulumi.IntInput) SwitchRoutingOspfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchRoutingOspf {
		return vs[0].([]*SwitchRoutingOspf)[vs[1].(int)]
	}).(SwitchRoutingOspfOutput)
}

type SwitchRoutingOspfMapOutput struct{ *pulumi.OutputState }

func (SwitchRoutingOspfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchRoutingOspf)(nil)).Elem()
}

func (o SwitchRoutingOspfMapOutput) ToSwitchRoutingOspfMapOutput() SwitchRoutingOspfMapOutput {
	return o
}

func (o SwitchRoutingOspfMapOutput) ToSwitchRoutingOspfMapOutputWithContext(ctx context.Context) SwitchRoutingOspfMapOutput {
	return o
}

func (o SwitchRoutingOspfMapOutput) MapIndex(k pulumi.StringInput) SwitchRoutingOspfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchRoutingOspf {
		return vs[0].(map[string]*SwitchRoutingOspf)[vs[1].(string)]
	}).(SwitchRoutingOspfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingOspfInput)(nil)).Elem(), &SwitchRoutingOspf{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingOspfArrayInput)(nil)).Elem(), SwitchRoutingOspfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingOspfMapInput)(nil)).Elem(), SwitchRoutingOspfMap{})
	pulumi.RegisterOutputType(SwitchRoutingOspfOutput{})
	pulumi.RegisterOutputType(SwitchRoutingOspfArrayOutput{})
	pulumi.RegisterOutputType(SwitchRoutingOspfMapOutput{})
}
