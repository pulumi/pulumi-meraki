// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.NewCameraQualityAndRetention(ctx, "example", &devices.CameraQualityAndRetentionArgs{
//				AudioRecordingEnabled:          pulumi.Bool(false),
//				MotionBasedRetentionEnabled:    pulumi.Bool(false),
//				MotionDetectorVersion:          pulumi.Int(2),
//				ProfileId:                      pulumi.String("1234"),
//				Quality:                        pulumi.String("Standard"),
//				Resolution:                     pulumi.String("1280x720"),
//				RestrictedBandwidthModeEnabled: pulumi.Bool(false),
//				Serial:                         pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesCameraQualityAndRetentionExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:devices/cameraQualityAndRetention:CameraQualityAndRetention example "serial"
// ```
type CameraQualityAndRetention struct {
	pulumi.CustomResourceState

	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled pulumi.BoolOutput `pulumi:"audioRecordingEnabled"`
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled pulumi.BoolOutput `pulumi:"motionBasedRetentionEnabled"`
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion pulumi.IntOutput `pulumi:"motionDetectorVersion"`
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality pulumi.StringOutput `pulumi:"quality"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution pulumi.StringOutput `pulumi:"resolution"`
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled pulumi.BoolOutput `pulumi:"restrictedBandwidthModeEnabled"`
	// serial path parameter.
	Serial pulumi.StringOutput `pulumi:"serial"`
}

// NewCameraQualityAndRetention registers a new resource with the given unique name, arguments, and options.
func NewCameraQualityAndRetention(ctx *pulumi.Context,
	name string, args *CameraQualityAndRetentionArgs, opts ...pulumi.ResourceOption) (*CameraQualityAndRetention, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Serial == nil {
		return nil, errors.New("invalid value for required argument 'Serial'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CameraQualityAndRetention
	err := ctx.RegisterResource("meraki:devices/cameraQualityAndRetention:CameraQualityAndRetention", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCameraQualityAndRetention gets an existing CameraQualityAndRetention resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCameraQualityAndRetention(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CameraQualityAndRetentionState, opts ...pulumi.ResourceOption) (*CameraQualityAndRetention, error) {
	var resource CameraQualityAndRetention
	err := ctx.ReadResource("meraki:devices/cameraQualityAndRetention:CameraQualityAndRetention", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CameraQualityAndRetention resources.
type cameraQualityAndRetentionState struct {
	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled *bool `pulumi:"audioRecordingEnabled"`
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled *bool `pulumi:"motionBasedRetentionEnabled"`
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion *int `pulumi:"motionDetectorVersion"`
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId *string `pulumi:"profileId"`
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality *string `pulumi:"quality"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution *string `pulumi:"resolution"`
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled *bool `pulumi:"restrictedBandwidthModeEnabled"`
	// serial path parameter.
	Serial *string `pulumi:"serial"`
}

type CameraQualityAndRetentionState struct {
	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled pulumi.BoolPtrInput
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled pulumi.BoolPtrInput
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion pulumi.IntPtrInput
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId pulumi.StringPtrInput
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality pulumi.StringPtrInput
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution pulumi.StringPtrInput
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled pulumi.BoolPtrInput
	// serial path parameter.
	Serial pulumi.StringPtrInput
}

func (CameraQualityAndRetentionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cameraQualityAndRetentionState)(nil)).Elem()
}

type cameraQualityAndRetentionArgs struct {
	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled *bool `pulumi:"audioRecordingEnabled"`
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled *bool `pulumi:"motionBasedRetentionEnabled"`
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion *int `pulumi:"motionDetectorVersion"`
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId *string `pulumi:"profileId"`
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality *string `pulumi:"quality"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution *string `pulumi:"resolution"`
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled *bool `pulumi:"restrictedBandwidthModeEnabled"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// The set of arguments for constructing a CameraQualityAndRetention resource.
type CameraQualityAndRetentionArgs struct {
	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled pulumi.BoolPtrInput
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled pulumi.BoolPtrInput
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion pulumi.IntPtrInput
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId pulumi.StringPtrInput
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality pulumi.StringPtrInput
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution pulumi.StringPtrInput
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled pulumi.BoolPtrInput
	// serial path parameter.
	Serial pulumi.StringInput
}

func (CameraQualityAndRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cameraQualityAndRetentionArgs)(nil)).Elem()
}

type CameraQualityAndRetentionInput interface {
	pulumi.Input

	ToCameraQualityAndRetentionOutput() CameraQualityAndRetentionOutput
	ToCameraQualityAndRetentionOutputWithContext(ctx context.Context) CameraQualityAndRetentionOutput
}

func (*CameraQualityAndRetention) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraQualityAndRetention)(nil)).Elem()
}

func (i *CameraQualityAndRetention) ToCameraQualityAndRetentionOutput() CameraQualityAndRetentionOutput {
	return i.ToCameraQualityAndRetentionOutputWithContext(context.Background())
}

func (i *CameraQualityAndRetention) ToCameraQualityAndRetentionOutputWithContext(ctx context.Context) CameraQualityAndRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraQualityAndRetentionOutput)
}

// CameraQualityAndRetentionArrayInput is an input type that accepts CameraQualityAndRetentionArray and CameraQualityAndRetentionArrayOutput values.
// You can construct a concrete instance of `CameraQualityAndRetentionArrayInput` via:
//
//	CameraQualityAndRetentionArray{ CameraQualityAndRetentionArgs{...} }
type CameraQualityAndRetentionArrayInput interface {
	pulumi.Input

	ToCameraQualityAndRetentionArrayOutput() CameraQualityAndRetentionArrayOutput
	ToCameraQualityAndRetentionArrayOutputWithContext(context.Context) CameraQualityAndRetentionArrayOutput
}

type CameraQualityAndRetentionArray []CameraQualityAndRetentionInput

func (CameraQualityAndRetentionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CameraQualityAndRetention)(nil)).Elem()
}

func (i CameraQualityAndRetentionArray) ToCameraQualityAndRetentionArrayOutput() CameraQualityAndRetentionArrayOutput {
	return i.ToCameraQualityAndRetentionArrayOutputWithContext(context.Background())
}

func (i CameraQualityAndRetentionArray) ToCameraQualityAndRetentionArrayOutputWithContext(ctx context.Context) CameraQualityAndRetentionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraQualityAndRetentionArrayOutput)
}

// CameraQualityAndRetentionMapInput is an input type that accepts CameraQualityAndRetentionMap and CameraQualityAndRetentionMapOutput values.
// You can construct a concrete instance of `CameraQualityAndRetentionMapInput` via:
//
//	CameraQualityAndRetentionMap{ "key": CameraQualityAndRetentionArgs{...} }
type CameraQualityAndRetentionMapInput interface {
	pulumi.Input

	ToCameraQualityAndRetentionMapOutput() CameraQualityAndRetentionMapOutput
	ToCameraQualityAndRetentionMapOutputWithContext(context.Context) CameraQualityAndRetentionMapOutput
}

type CameraQualityAndRetentionMap map[string]CameraQualityAndRetentionInput

func (CameraQualityAndRetentionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CameraQualityAndRetention)(nil)).Elem()
}

func (i CameraQualityAndRetentionMap) ToCameraQualityAndRetentionMapOutput() CameraQualityAndRetentionMapOutput {
	return i.ToCameraQualityAndRetentionMapOutputWithContext(context.Background())
}

func (i CameraQualityAndRetentionMap) ToCameraQualityAndRetentionMapOutputWithContext(ctx context.Context) CameraQualityAndRetentionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraQualityAndRetentionMapOutput)
}

type CameraQualityAndRetentionOutput struct{ *pulumi.OutputState }

func (CameraQualityAndRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraQualityAndRetention)(nil)).Elem()
}

func (o CameraQualityAndRetentionOutput) ToCameraQualityAndRetentionOutput() CameraQualityAndRetentionOutput {
	return o
}

func (o CameraQualityAndRetentionOutput) ToCameraQualityAndRetentionOutputWithContext(ctx context.Context) CameraQualityAndRetentionOutput {
	return o
}

// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
func (o CameraQualityAndRetentionOutput) AudioRecordingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.BoolOutput { return v.AudioRecordingEnabled }).(pulumi.BoolOutput)
}

// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
func (o CameraQualityAndRetentionOutput) MotionBasedRetentionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.BoolOutput { return v.MotionBasedRetentionEnabled }).(pulumi.BoolOutput)
}

// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
func (o CameraQualityAndRetentionOutput) MotionDetectorVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.IntOutput { return v.MotionDetectorVersion }).(pulumi.IntOutput)
}

// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
func (o CameraQualityAndRetentionOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
func (o CameraQualityAndRetentionOutput) Quality() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.StringOutput { return v.Quality }).(pulumi.StringOutput)
}

// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
func (o CameraQualityAndRetentionOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.StringOutput { return v.Resolution }).(pulumi.StringOutput)
}

// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
func (o CameraQualityAndRetentionOutput) RestrictedBandwidthModeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.BoolOutput { return v.RestrictedBandwidthModeEnabled }).(pulumi.BoolOutput)
}

// serial path parameter.
func (o CameraQualityAndRetentionOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v *CameraQualityAndRetention) pulumi.StringOutput { return v.Serial }).(pulumi.StringOutput)
}

type CameraQualityAndRetentionArrayOutput struct{ *pulumi.OutputState }

func (CameraQualityAndRetentionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CameraQualityAndRetention)(nil)).Elem()
}

func (o CameraQualityAndRetentionArrayOutput) ToCameraQualityAndRetentionArrayOutput() CameraQualityAndRetentionArrayOutput {
	return o
}

func (o CameraQualityAndRetentionArrayOutput) ToCameraQualityAndRetentionArrayOutputWithContext(ctx context.Context) CameraQualityAndRetentionArrayOutput {
	return o
}

func (o CameraQualityAndRetentionArrayOutput) Index(i pulumi.IntInput) CameraQualityAndRetentionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CameraQualityAndRetention {
		return vs[0].([]*CameraQualityAndRetention)[vs[1].(int)]
	}).(CameraQualityAndRetentionOutput)
}

type CameraQualityAndRetentionMapOutput struct{ *pulumi.OutputState }

func (CameraQualityAndRetentionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CameraQualityAndRetention)(nil)).Elem()
}

func (o CameraQualityAndRetentionMapOutput) ToCameraQualityAndRetentionMapOutput() CameraQualityAndRetentionMapOutput {
	return o
}

func (o CameraQualityAndRetentionMapOutput) ToCameraQualityAndRetentionMapOutputWithContext(ctx context.Context) CameraQualityAndRetentionMapOutput {
	return o
}

func (o CameraQualityAndRetentionMapOutput) MapIndex(k pulumi.StringInput) CameraQualityAndRetentionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CameraQualityAndRetention {
		return vs[0].(map[string]*CameraQualityAndRetention)[vs[1].(string)]
	}).(CameraQualityAndRetentionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CameraQualityAndRetentionInput)(nil)).Elem(), &CameraQualityAndRetention{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraQualityAndRetentionArrayInput)(nil)).Elem(), CameraQualityAndRetentionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraQualityAndRetentionMapInput)(nil)).Elem(), CameraQualityAndRetentionMap{})
	pulumi.RegisterOutputType(CameraQualityAndRetentionOutput{})
	pulumi.RegisterOutputType(CameraQualityAndRetentionArrayOutput{})
	pulumi.RegisterOutputType(CameraQualityAndRetentionMapOutput{})
}
