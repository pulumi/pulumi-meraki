// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplianceRadioSettingsFiveGhzSettings struct {
	// Manual channel for 5 GHz
	Channel *int `pulumi:"channel"`
	// Manual channel width for 5 GHz
	ChannelWidth *int `pulumi:"channelWidth"`
	// Manual target power for 5 GHz
	TargetPower *int `pulumi:"targetPower"`
}

// ApplianceRadioSettingsFiveGhzSettingsInput is an input type that accepts ApplianceRadioSettingsFiveGhzSettingsArgs and ApplianceRadioSettingsFiveGhzSettingsOutput values.
// You can construct a concrete instance of `ApplianceRadioSettingsFiveGhzSettingsInput` via:
//
//	ApplianceRadioSettingsFiveGhzSettingsArgs{...}
type ApplianceRadioSettingsFiveGhzSettingsInput interface {
	pulumi.Input

	ToApplianceRadioSettingsFiveGhzSettingsOutput() ApplianceRadioSettingsFiveGhzSettingsOutput
	ToApplianceRadioSettingsFiveGhzSettingsOutputWithContext(context.Context) ApplianceRadioSettingsFiveGhzSettingsOutput
}

type ApplianceRadioSettingsFiveGhzSettingsArgs struct {
	// Manual channel for 5 GHz
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// Manual channel width for 5 GHz
	ChannelWidth pulumi.IntPtrInput `pulumi:"channelWidth"`
	// Manual target power for 5 GHz
	TargetPower pulumi.IntPtrInput `pulumi:"targetPower"`
}

func (ApplianceRadioSettingsFiveGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (i ApplianceRadioSettingsFiveGhzSettingsArgs) ToApplianceRadioSettingsFiveGhzSettingsOutput() ApplianceRadioSettingsFiveGhzSettingsOutput {
	return i.ToApplianceRadioSettingsFiveGhzSettingsOutputWithContext(context.Background())
}

func (i ApplianceRadioSettingsFiveGhzSettingsArgs) ToApplianceRadioSettingsFiveGhzSettingsOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsFiveGhzSettingsOutput)
}

func (i ApplianceRadioSettingsFiveGhzSettingsArgs) ToApplianceRadioSettingsFiveGhzSettingsPtrOutput() ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return i.ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (i ApplianceRadioSettingsFiveGhzSettingsArgs) ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsFiveGhzSettingsOutput).ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx)
}

// ApplianceRadioSettingsFiveGhzSettingsPtrInput is an input type that accepts ApplianceRadioSettingsFiveGhzSettingsArgs, ApplianceRadioSettingsFiveGhzSettingsPtr and ApplianceRadioSettingsFiveGhzSettingsPtrOutput values.
// You can construct a concrete instance of `ApplianceRadioSettingsFiveGhzSettingsPtrInput` via:
//
//	        ApplianceRadioSettingsFiveGhzSettingsArgs{...}
//
//	or:
//
//	        nil
type ApplianceRadioSettingsFiveGhzSettingsPtrInput interface {
	pulumi.Input

	ToApplianceRadioSettingsFiveGhzSettingsPtrOutput() ApplianceRadioSettingsFiveGhzSettingsPtrOutput
	ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Context) ApplianceRadioSettingsFiveGhzSettingsPtrOutput
}

type applianceRadioSettingsFiveGhzSettingsPtrType ApplianceRadioSettingsFiveGhzSettingsArgs

func ApplianceRadioSettingsFiveGhzSettingsPtr(v *ApplianceRadioSettingsFiveGhzSettingsArgs) ApplianceRadioSettingsFiveGhzSettingsPtrInput {
	return (*applianceRadioSettingsFiveGhzSettingsPtrType)(v)
}

func (*applianceRadioSettingsFiveGhzSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (i *applianceRadioSettingsFiveGhzSettingsPtrType) ToApplianceRadioSettingsFiveGhzSettingsPtrOutput() ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return i.ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (i *applianceRadioSettingsFiveGhzSettingsPtrType) ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsFiveGhzSettingsPtrOutput)
}

type ApplianceRadioSettingsFiveGhzSettingsOutput struct{ *pulumi.OutputState }

func (ApplianceRadioSettingsFiveGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (o ApplianceRadioSettingsFiveGhzSettingsOutput) ToApplianceRadioSettingsFiveGhzSettingsOutput() ApplianceRadioSettingsFiveGhzSettingsOutput {
	return o
}

func (o ApplianceRadioSettingsFiveGhzSettingsOutput) ToApplianceRadioSettingsFiveGhzSettingsOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsOutput {
	return o
}

func (o ApplianceRadioSettingsFiveGhzSettingsOutput) ToApplianceRadioSettingsFiveGhzSettingsPtrOutput() ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return o.ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (o ApplianceRadioSettingsFiveGhzSettingsOutput) ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceRadioSettingsFiveGhzSettings) *ApplianceRadioSettingsFiveGhzSettings {
		return &v
	}).(ApplianceRadioSettingsFiveGhzSettingsPtrOutput)
}

// Manual channel for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceRadioSettingsFiveGhzSettings) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// Manual channel width for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsOutput) ChannelWidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceRadioSettingsFiveGhzSettings) *int { return v.ChannelWidth }).(pulumi.IntPtrOutput)
}

// Manual target power for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceRadioSettingsFiveGhzSettings) *int { return v.TargetPower }).(pulumi.IntPtrOutput)
}

type ApplianceRadioSettingsFiveGhzSettingsPtrOutput struct{ *pulumi.OutputState }

func (ApplianceRadioSettingsFiveGhzSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) ToApplianceRadioSettingsFiveGhzSettingsPtrOutput() ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return o
}

func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) ToApplianceRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsFiveGhzSettingsPtrOutput {
	return o
}

func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) Elem() ApplianceRadioSettingsFiveGhzSettingsOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsFiveGhzSettings) ApplianceRadioSettingsFiveGhzSettings {
		if v != nil {
			return *v
		}
		var ret ApplianceRadioSettingsFiveGhzSettings
		return ret
	}).(ApplianceRadioSettingsFiveGhzSettingsOutput)
}

// Manual channel for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsFiveGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// Manual channel width for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) ChannelWidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsFiveGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.ChannelWidth
	}).(pulumi.IntPtrOutput)
}

// Manual target power for 5 GHz
func (o ApplianceRadioSettingsFiveGhzSettingsPtrOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsFiveGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetPower
	}).(pulumi.IntPtrOutput)
}

type ApplianceRadioSettingsTwoFourGhzSettings struct {
	// Manual channel for 2.4 GHz
	Channel *int `pulumi:"channel"`
	// Manual target power for 2.4 GHz
	TargetPower *int `pulumi:"targetPower"`
}

// ApplianceRadioSettingsTwoFourGhzSettingsInput is an input type that accepts ApplianceRadioSettingsTwoFourGhzSettingsArgs and ApplianceRadioSettingsTwoFourGhzSettingsOutput values.
// You can construct a concrete instance of `ApplianceRadioSettingsTwoFourGhzSettingsInput` via:
//
//	ApplianceRadioSettingsTwoFourGhzSettingsArgs{...}
type ApplianceRadioSettingsTwoFourGhzSettingsInput interface {
	pulumi.Input

	ToApplianceRadioSettingsTwoFourGhzSettingsOutput() ApplianceRadioSettingsTwoFourGhzSettingsOutput
	ToApplianceRadioSettingsTwoFourGhzSettingsOutputWithContext(context.Context) ApplianceRadioSettingsTwoFourGhzSettingsOutput
}

type ApplianceRadioSettingsTwoFourGhzSettingsArgs struct {
	// Manual channel for 2.4 GHz
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// Manual target power for 2.4 GHz
	TargetPower pulumi.IntPtrInput `pulumi:"targetPower"`
}

func (ApplianceRadioSettingsTwoFourGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (i ApplianceRadioSettingsTwoFourGhzSettingsArgs) ToApplianceRadioSettingsTwoFourGhzSettingsOutput() ApplianceRadioSettingsTwoFourGhzSettingsOutput {
	return i.ToApplianceRadioSettingsTwoFourGhzSettingsOutputWithContext(context.Background())
}

func (i ApplianceRadioSettingsTwoFourGhzSettingsArgs) ToApplianceRadioSettingsTwoFourGhzSettingsOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsTwoFourGhzSettingsOutput)
}

func (i ApplianceRadioSettingsTwoFourGhzSettingsArgs) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutput() ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return i.ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (i ApplianceRadioSettingsTwoFourGhzSettingsArgs) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsTwoFourGhzSettingsOutput).ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx)
}

// ApplianceRadioSettingsTwoFourGhzSettingsPtrInput is an input type that accepts ApplianceRadioSettingsTwoFourGhzSettingsArgs, ApplianceRadioSettingsTwoFourGhzSettingsPtr and ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput values.
// You can construct a concrete instance of `ApplianceRadioSettingsTwoFourGhzSettingsPtrInput` via:
//
//	        ApplianceRadioSettingsTwoFourGhzSettingsArgs{...}
//
//	or:
//
//	        nil
type ApplianceRadioSettingsTwoFourGhzSettingsPtrInput interface {
	pulumi.Input

	ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutput() ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput
	ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Context) ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput
}

type applianceRadioSettingsTwoFourGhzSettingsPtrType ApplianceRadioSettingsTwoFourGhzSettingsArgs

func ApplianceRadioSettingsTwoFourGhzSettingsPtr(v *ApplianceRadioSettingsTwoFourGhzSettingsArgs) ApplianceRadioSettingsTwoFourGhzSettingsPtrInput {
	return (*applianceRadioSettingsTwoFourGhzSettingsPtrType)(v)
}

func (*applianceRadioSettingsTwoFourGhzSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (i *applianceRadioSettingsTwoFourGhzSettingsPtrType) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutput() ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return i.ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (i *applianceRadioSettingsTwoFourGhzSettingsPtrType) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput)
}

type ApplianceRadioSettingsTwoFourGhzSettingsOutput struct{ *pulumi.OutputState }

func (ApplianceRadioSettingsTwoFourGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) ToApplianceRadioSettingsTwoFourGhzSettingsOutput() ApplianceRadioSettingsTwoFourGhzSettingsOutput {
	return o
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) ToApplianceRadioSettingsTwoFourGhzSettingsOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsOutput {
	return o
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutput() ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o.ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceRadioSettingsTwoFourGhzSettings) *ApplianceRadioSettingsTwoFourGhzSettings {
		return &v
	}).(ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput)
}

// Manual channel for 2.4 GHz
func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceRadioSettingsTwoFourGhzSettings) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// Manual target power for 2.4 GHz
func (o ApplianceRadioSettingsTwoFourGhzSettingsOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceRadioSettingsTwoFourGhzSettings) *int { return v.TargetPower }).(pulumi.IntPtrOutput)
}

type ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput struct{ *pulumi.OutputState }

func (ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutput() ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) ToApplianceRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o
}

func (o ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) Elem() ApplianceRadioSettingsTwoFourGhzSettingsOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsTwoFourGhzSettings) ApplianceRadioSettingsTwoFourGhzSettings {
		if v != nil {
			return *v
		}
		var ret ApplianceRadioSettingsTwoFourGhzSettings
		return ret
	}).(ApplianceRadioSettingsTwoFourGhzSettingsOutput)
}

// Manual channel for 2.4 GHz
func (o ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsTwoFourGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// Manual target power for 2.4 GHz
func (o ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceRadioSettingsTwoFourGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetPower
	}).(pulumi.IntPtrOutput)
}

type ApplianceUplinksSettingsInterfaces struct {
	// WAN 1 settings.
	Wan1 *ApplianceUplinksSettingsInterfacesWan1 `pulumi:"wan1"`
	// WAN 2 settings.
	Wan2 *ApplianceUplinksSettingsInterfacesWan2 `pulumi:"wan2"`
}

// ApplianceUplinksSettingsInterfacesInput is an input type that accepts ApplianceUplinksSettingsInterfacesArgs and ApplianceUplinksSettingsInterfacesOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesInput` via:
//
//	ApplianceUplinksSettingsInterfacesArgs{...}
type ApplianceUplinksSettingsInterfacesInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesOutput() ApplianceUplinksSettingsInterfacesOutput
	ToApplianceUplinksSettingsInterfacesOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesOutput
}

type ApplianceUplinksSettingsInterfacesArgs struct {
	// WAN 1 settings.
	Wan1 ApplianceUplinksSettingsInterfacesWan1PtrInput `pulumi:"wan1"`
	// WAN 2 settings.
	Wan2 ApplianceUplinksSettingsInterfacesWan2PtrInput `pulumi:"wan2"`
}

func (ApplianceUplinksSettingsInterfacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfaces)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesArgs) ToApplianceUplinksSettingsInterfacesOutput() ApplianceUplinksSettingsInterfacesOutput {
	return i.ToApplianceUplinksSettingsInterfacesOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesArgs) ToApplianceUplinksSettingsInterfacesOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesOutput)
}

func (i ApplianceUplinksSettingsInterfacesArgs) ToApplianceUplinksSettingsInterfacesPtrOutput() ApplianceUplinksSettingsInterfacesPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesArgs) ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesOutput).ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesArgs, ApplianceUplinksSettingsInterfacesPtr and ApplianceUplinksSettingsInterfacesPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesPtrOutput() ApplianceUplinksSettingsInterfacesPtrOutput
	ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesPtrOutput
}

type applianceUplinksSettingsInterfacesPtrType ApplianceUplinksSettingsInterfacesArgs

func ApplianceUplinksSettingsInterfacesPtr(v *ApplianceUplinksSettingsInterfacesArgs) ApplianceUplinksSettingsInterfacesPtrInput {
	return (*applianceUplinksSettingsInterfacesPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfaces)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesPtrType) ToApplianceUplinksSettingsInterfacesPtrOutput() ApplianceUplinksSettingsInterfacesPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesPtrType) ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesPtrOutput)
}

type ApplianceUplinksSettingsInterfacesOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfaces)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesOutput) ToApplianceUplinksSettingsInterfacesOutput() ApplianceUplinksSettingsInterfacesOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesOutput) ToApplianceUplinksSettingsInterfacesOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesOutput) ToApplianceUplinksSettingsInterfacesPtrOutput() ApplianceUplinksSettingsInterfacesPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesOutput) ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfaces) *ApplianceUplinksSettingsInterfaces {
		return &v
	}).(ApplianceUplinksSettingsInterfacesPtrOutput)
}

// WAN 1 settings.
func (o ApplianceUplinksSettingsInterfacesOutput) Wan1() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfaces) *ApplianceUplinksSettingsInterfacesWan1 { return v.Wan1 }).(ApplianceUplinksSettingsInterfacesWan1PtrOutput)
}

// WAN 2 settings.
func (o ApplianceUplinksSettingsInterfacesOutput) Wan2() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfaces) *ApplianceUplinksSettingsInterfacesWan2 { return v.Wan2 }).(ApplianceUplinksSettingsInterfacesWan2PtrOutput)
}

type ApplianceUplinksSettingsInterfacesPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfaces)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesPtrOutput) ToApplianceUplinksSettingsInterfacesPtrOutput() ApplianceUplinksSettingsInterfacesPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesPtrOutput) ToApplianceUplinksSettingsInterfacesPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesPtrOutput) Elem() ApplianceUplinksSettingsInterfacesOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfaces) ApplianceUplinksSettingsInterfaces {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfaces
		return ret
	}).(ApplianceUplinksSettingsInterfacesOutput)
}

// WAN 1 settings.
func (o ApplianceUplinksSettingsInterfacesPtrOutput) Wan1() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfaces) *ApplianceUplinksSettingsInterfacesWan1 {
		if v == nil {
			return nil
		}
		return v.Wan1
	}).(ApplianceUplinksSettingsInterfacesWan1PtrOutput)
}

// WAN 2 settings.
func (o ApplianceUplinksSettingsInterfacesPtrOutput) Wan2() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfaces) *ApplianceUplinksSettingsInterfacesWan2 {
		if v == nil {
			return nil
		}
		return v.Wan2
	}).(ApplianceUplinksSettingsInterfacesWan2PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1 struct {
	// Enable or disable the interface.
	Enabled *bool `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe *ApplianceUplinksSettingsInterfacesWan1Pppoe `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis *ApplianceUplinksSettingsInterfacesWan1Svis `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging *ApplianceUplinksSettingsInterfacesWan1VlanTagging `pulumi:"vlanTagging"`
}

// ApplianceUplinksSettingsInterfacesWan1Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan1Args and ApplianceUplinksSettingsInterfacesWan1Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan1Args{...}
type ApplianceUplinksSettingsInterfacesWan1Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1Output() ApplianceUplinksSettingsInterfacesWan1Output
	ToApplianceUplinksSettingsInterfacesWan1OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1Output
}

type ApplianceUplinksSettingsInterfacesWan1Args struct {
	// Enable or disable the interface.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe ApplianceUplinksSettingsInterfacesWan1PppoePtrInput `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis ApplianceUplinksSettingsInterfacesWan1SvisPtrInput `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput `pulumi:"vlanTagging"`
}

func (ApplianceUplinksSettingsInterfacesWan1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1Args) ToApplianceUplinksSettingsInterfacesWan1Output() ApplianceUplinksSettingsInterfacesWan1Output {
	return i.ToApplianceUplinksSettingsInterfacesWan1OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1Args) ToApplianceUplinksSettingsInterfacesWan1OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1Output)
}

func (i ApplianceUplinksSettingsInterfacesWan1Args) ToApplianceUplinksSettingsInterfacesWan1PtrOutput() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1Args) ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1Output).ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1Args, ApplianceUplinksSettingsInterfacesWan1Ptr and ApplianceUplinksSettingsInterfacesWan1PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1PtrOutput() ApplianceUplinksSettingsInterfacesWan1PtrOutput
	ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1PtrOutput
}

type applianceUplinksSettingsInterfacesWan1PtrType ApplianceUplinksSettingsInterfacesWan1Args

func ApplianceUplinksSettingsInterfacesWan1Ptr(v *ApplianceUplinksSettingsInterfacesWan1Args) ApplianceUplinksSettingsInterfacesWan1PtrInput {
	return (*applianceUplinksSettingsInterfacesWan1PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1PtrType) ToApplianceUplinksSettingsInterfacesWan1PtrOutput() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1PtrType) ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1Output) ToApplianceUplinksSettingsInterfacesWan1Output() ApplianceUplinksSettingsInterfacesWan1Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1Output) ToApplianceUplinksSettingsInterfacesWan1OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1Output) ToApplianceUplinksSettingsInterfacesWan1PtrOutput() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1Output) ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1PtrOutput)
}

// Enable or disable the interface.
func (o ApplianceUplinksSettingsInterfacesWan1Output) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Configuration options for PPPoE.
func (o ApplianceUplinksSettingsInterfacesWan1Output) Pppoe() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1Pppoe {
		return v.Pppoe
	}).(ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput)
}

// SVI settings by protocol.
func (o ApplianceUplinksSettingsInterfacesWan1Output) Svis() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1Svis {
		return v.Svis
	}).(ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput)
}

// VLAN tagging settings.
func (o ApplianceUplinksSettingsInterfacesWan1Output) VlanTagging() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1VlanTagging {
		return v.VlanTagging
	}).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) ToApplianceUplinksSettingsInterfacesWan1PtrOutput() ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) ToApplianceUplinksSettingsInterfacesWan1PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1) ApplianceUplinksSettingsInterfacesWan1 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1Output)
}

// Enable or disable the interface.
func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration options for PPPoE.
func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) Pppoe() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1Pppoe {
		if v == nil {
			return nil
		}
		return v.Pppoe
	}).(ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput)
}

// SVI settings by protocol.
func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) Svis() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1Svis {
		if v == nil {
			return nil
		}
		return v.Svis
	}).(ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput)
}

// VLAN tagging settings.
func (o ApplianceUplinksSettingsInterfacesWan1PtrOutput) VlanTagging() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1) *ApplianceUplinksSettingsInterfacesWan1VlanTagging {
		if v == nil {
			return nil
		}
		return v.VlanTagging
	}).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1Pppoe struct {
	// Settings for PPPoE Authentication.
	Authentication *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// ApplianceUplinksSettingsInterfacesWan1PppoeInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1PppoeArgs and ApplianceUplinksSettingsInterfacesWan1PppoeOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1PppoeInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1PppoeArgs{...}
type ApplianceUplinksSettingsInterfacesWan1PppoeInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1PppoeOutput() ApplianceUplinksSettingsInterfacesWan1PppoeOutput
	ToApplianceUplinksSettingsInterfacesWan1PppoeOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeOutput
}

type ApplianceUplinksSettingsInterfacesWan1PppoeArgs struct {
	// Settings for PPPoE Authentication.
	Authentication ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1Pppoe)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeOutput() ApplianceUplinksSettingsInterfacesWan1PppoeOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoeOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoeOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoeOutput).ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1PppoePtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1PppoeArgs, ApplianceUplinksSettingsInterfacesWan1PppoePtr and ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1PppoePtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1PppoeArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1PppoePtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput
	ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput
}

type applianceUplinksSettingsInterfacesWan1PppoePtrType ApplianceUplinksSettingsInterfacesWan1PppoeArgs

func ApplianceUplinksSettingsInterfacesWan1PppoePtr(v *ApplianceUplinksSettingsInterfacesWan1PppoeArgs) ApplianceUplinksSettingsInterfacesWan1PppoePtrInput {
	return (*applianceUplinksSettingsInterfacesWan1PppoePtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1PppoePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1Pppoe)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1PppoePtrType) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1PppoePtrType) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PppoeOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1PppoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1Pppoe)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeOutput() ApplianceUplinksSettingsInterfacesWan1PppoeOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1Pppoe) *ApplianceUplinksSettingsInterfacesWan1Pppoe {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput)
}

// Settings for PPPoE Authentication.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) Authentication() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1Pppoe) *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication {
		return v.Authentication
	}).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput)
}

// Whether PPPoE is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1Pppoe) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1Pppoe)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) ToApplianceUplinksSettingsInterfacesWan1PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1PppoeOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Pppoe) ApplianceUplinksSettingsInterfacesWan1Pppoe {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1Pppoe
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1PppoeOutput)
}

// Settings for PPPoE Authentication.
func (o ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) Authentication() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Pppoe) *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput)
}

// Whether PPPoE is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Pppoe) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication struct {
	// Whether PPPoE authentication is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Password for PPPoE authentication. This parameter is not returned.
	Password *string `pulumi:"password"`
	// Username for PPPoE authentication.
	Username *string `pulumi:"username"`
}

// ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs and ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs{...}
type ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput
	ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput
}

type ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs struct {
	// Whether PPPoE authentication is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Password for PPPoE authentication. This parameter is not returned.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for PPPoE authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput).ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs, ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtr and ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput
	ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput
}

type applianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrType ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs

func ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtr(v *ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput {
	return (*applianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrType) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrType) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput)
}

// Whether PPPoE authentication is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Password for PPPoE authentication. This parameter is not returned.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for PPPoE authentication.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) ToApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput)
}

// Whether PPPoE authentication is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Password for PPPoE authentication. This parameter is not returned.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Username for PPPoE authentication.
func (o ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1PppoeAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1Svis struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 *ApplianceUplinksSettingsInterfacesWan1SvisIpv4 `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 *ApplianceUplinksSettingsInterfacesWan1SvisIpv6 `pulumi:"ipv6"`
}

// ApplianceUplinksSettingsInterfacesWan1SvisInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisArgs and ApplianceUplinksSettingsInterfacesWan1SvisOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1SvisArgs{...}
type ApplianceUplinksSettingsInterfacesWan1SvisInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisOutput() ApplianceUplinksSettingsInterfacesWan1SvisOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisOutput
}

type ApplianceUplinksSettingsInterfacesWan1SvisArgs struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput `pulumi:"ipv6"`
}

func (ApplianceUplinksSettingsInterfacesWan1SvisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1Svis)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisArgs) ToApplianceUplinksSettingsInterfacesWan1SvisOutput() ApplianceUplinksSettingsInterfacesWan1SvisOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisArgs) ToApplianceUplinksSettingsInterfacesWan1SvisOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisArgs) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisArgs) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisOutput).ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1SvisPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisArgs, ApplianceUplinksSettingsInterfacesWan1SvisPtr and ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1SvisArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1SvisPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput
}

type applianceUplinksSettingsInterfacesWan1SvisPtrType ApplianceUplinksSettingsInterfacesWan1SvisArgs

func ApplianceUplinksSettingsInterfacesWan1SvisPtr(v *ApplianceUplinksSettingsInterfacesWan1SvisArgs) ApplianceUplinksSettingsInterfacesWan1SvisPtrInput {
	return (*applianceUplinksSettingsInterfacesWan1SvisPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1SvisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1Svis)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1SvisPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1SvisPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1Svis)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) ToApplianceUplinksSettingsInterfacesWan1SvisOutput() ApplianceUplinksSettingsInterfacesWan1SvisOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) ToApplianceUplinksSettingsInterfacesWan1SvisOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1Svis) *ApplianceUplinksSettingsInterfacesWan1Svis {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput)
}

// IPv4 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) Ipv4() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1Svis) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4 {
		return v.Ipv4
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput)
}

// IPv6 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisOutput) Ipv6() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1Svis) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6 {
		return v.Ipv6
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1Svis)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1SvisOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Svis) ApplianceUplinksSettingsInterfacesWan1Svis {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1Svis
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1SvisOutput)
}

// IPv4 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) Ipv4() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Svis) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4 {
		if v == nil {
			return nil
		}
		return v.Ipv4
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput)
}

// IPv6 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput) Ipv6() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1Svis) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6 {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4 struct {
	// IP address and subnet mask when in static mode.
	Address *string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway *string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers `pulumi:"nameservers"`
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv4Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args and ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv4Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args{...}
type ApplianceUplinksSettingsInterfacesWan1SvisIpv4Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args struct {
	// IP address and subnet mask when in static mode.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput `pulumi:"nameservers"`
}

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output)
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output).ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args, ApplianceUplinksSettingsInterfacesWan1SvisIpv4Ptr and ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput
}

type applianceUplinksSettingsInterfacesWan1SvisIpv4PtrType ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args

func ApplianceUplinksSettingsInterfacesWan1SvisIpv4Ptr(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput {
	return (*applianceUplinksSettingsInterfacesWan1SvisIpv4PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1SvisIpv4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv4PtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv4PtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput)
}

// IP address and subnet mask when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// Gateway IP address when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output) Nameservers() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers {
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4) ApplianceUplinksSettingsInterfacesWan1SvisIpv4 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1SvisIpv4
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output)
}

// IP address and subnet mask when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentMode
	}).(pulumi.StringPtrOutput)
}

// Gateway IP address when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput) Nameservers() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs and ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs{...}
type ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput).ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs, ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtr and ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput
}

type applianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrType ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs

func ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtr(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput {
	return (*applianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers) *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers) ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv4Nameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6 struct {
	// Static address that will override the one(s) received by SLAAC.
	Address *string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway *string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers `pulumi:"nameservers"`
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv6Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args and ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv6Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args{...}
type ApplianceUplinksSettingsInterfacesWan1SvisIpv6Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args struct {
	// Static address that will override the one(s) received by SLAAC.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput `pulumi:"nameservers"`
}

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output)
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output).ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args, ApplianceUplinksSettingsInterfacesWan1SvisIpv6Ptr and ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput
}

type applianceUplinksSettingsInterfacesWan1SvisIpv6PtrType ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args

func ApplianceUplinksSettingsInterfacesWan1SvisIpv6Ptr(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput {
	return (*applianceUplinksSettingsInterfacesWan1SvisIpv6PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1SvisIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv6PtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv6PtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput)
}

// Static address that will override the one(s) received by SLAAC.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// Static gateway that will override the one received by autoconf.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output) Nameservers() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers {
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6) ApplianceUplinksSettingsInterfacesWan1SvisIpv6 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1SvisIpv6
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output)
}

// Static address that will override the one(s) received by SLAAC.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentMode
	}).(pulumi.StringPtrOutput)
}

// Static gateway that will override the one received by autoconf.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput) Nameservers() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs and ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs{...}
type ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput).ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs, ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtr and ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput
	ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput
}

type applianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrType ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs

func ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtr(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput {
	return (*applianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers) *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers) ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1SvisIpv6Nameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan1VlanTagging struct {
	// Whether VLAN tagging is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId *int `pulumi:"vlanId"`
}

// ApplianceUplinksSettingsInterfacesWan1VlanTaggingInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs and ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1VlanTaggingInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs{...}
type ApplianceUplinksSettingsInterfacesWan1VlanTaggingInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput
	ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput
}

type ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs struct {
	// Whether VLAN tagging is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1VlanTagging)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput).ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs, ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtr and ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput
	ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput
}

type applianceUplinksSettingsInterfacesWan1VlanTaggingPtrType ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs

func ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtr(v *ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput {
	return (*applianceUplinksSettingsInterfacesWan1VlanTaggingPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan1VlanTaggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1VlanTagging)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan1VlanTaggingPtrType) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan1VlanTaggingPtrType) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1VlanTagging)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan1VlanTagging) *ApplianceUplinksSettingsInterfacesWan1VlanTagging {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput)
}

// Whether VLAN tagging is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1VlanTagging) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan1VlanTagging) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan1VlanTagging)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) ToApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1VlanTagging) ApplianceUplinksSettingsInterfacesWan1VlanTagging {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan1VlanTagging
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput)
}

// Whether VLAN tagging is enabled.
func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1VlanTagging) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan1VlanTagging) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2 struct {
	// Enable or disable the interface.
	Enabled *bool `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe *ApplianceUplinksSettingsInterfacesWan2Pppoe `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis *ApplianceUplinksSettingsInterfacesWan2Svis `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging *ApplianceUplinksSettingsInterfacesWan2VlanTagging `pulumi:"vlanTagging"`
}

// ApplianceUplinksSettingsInterfacesWan2Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan2Args and ApplianceUplinksSettingsInterfacesWan2Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan2Args{...}
type ApplianceUplinksSettingsInterfacesWan2Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2Output() ApplianceUplinksSettingsInterfacesWan2Output
	ToApplianceUplinksSettingsInterfacesWan2OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2Output
}

type ApplianceUplinksSettingsInterfacesWan2Args struct {
	// Enable or disable the interface.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe ApplianceUplinksSettingsInterfacesWan2PppoePtrInput `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis ApplianceUplinksSettingsInterfacesWan2SvisPtrInput `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput `pulumi:"vlanTagging"`
}

func (ApplianceUplinksSettingsInterfacesWan2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2Args) ToApplianceUplinksSettingsInterfacesWan2Output() ApplianceUplinksSettingsInterfacesWan2Output {
	return i.ToApplianceUplinksSettingsInterfacesWan2OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2Args) ToApplianceUplinksSettingsInterfacesWan2OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2Output)
}

func (i ApplianceUplinksSettingsInterfacesWan2Args) ToApplianceUplinksSettingsInterfacesWan2PtrOutput() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2Args) ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2Output).ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2Args, ApplianceUplinksSettingsInterfacesWan2Ptr and ApplianceUplinksSettingsInterfacesWan2PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2PtrOutput() ApplianceUplinksSettingsInterfacesWan2PtrOutput
	ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2PtrOutput
}

type applianceUplinksSettingsInterfacesWan2PtrType ApplianceUplinksSettingsInterfacesWan2Args

func ApplianceUplinksSettingsInterfacesWan2Ptr(v *ApplianceUplinksSettingsInterfacesWan2Args) ApplianceUplinksSettingsInterfacesWan2PtrInput {
	return (*applianceUplinksSettingsInterfacesWan2PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2PtrType) ToApplianceUplinksSettingsInterfacesWan2PtrOutput() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2PtrType) ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2Output) ToApplianceUplinksSettingsInterfacesWan2Output() ApplianceUplinksSettingsInterfacesWan2Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2Output) ToApplianceUplinksSettingsInterfacesWan2OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2Output) ToApplianceUplinksSettingsInterfacesWan2PtrOutput() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2Output) ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2PtrOutput)
}

// Enable or disable the interface.
func (o ApplianceUplinksSettingsInterfacesWan2Output) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Configuration options for PPPoE.
func (o ApplianceUplinksSettingsInterfacesWan2Output) Pppoe() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2Pppoe {
		return v.Pppoe
	}).(ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput)
}

// SVI settings by protocol.
func (o ApplianceUplinksSettingsInterfacesWan2Output) Svis() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2Svis {
		return v.Svis
	}).(ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput)
}

// VLAN tagging settings.
func (o ApplianceUplinksSettingsInterfacesWan2Output) VlanTagging() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2VlanTagging {
		return v.VlanTagging
	}).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) ToApplianceUplinksSettingsInterfacesWan2PtrOutput() ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) ToApplianceUplinksSettingsInterfacesWan2PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2) ApplianceUplinksSettingsInterfacesWan2 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2Output)
}

// Enable or disable the interface.
func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration options for PPPoE.
func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) Pppoe() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2Pppoe {
		if v == nil {
			return nil
		}
		return v.Pppoe
	}).(ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput)
}

// SVI settings by protocol.
func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) Svis() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2Svis {
		if v == nil {
			return nil
		}
		return v.Svis
	}).(ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput)
}

// VLAN tagging settings.
func (o ApplianceUplinksSettingsInterfacesWan2PtrOutput) VlanTagging() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2) *ApplianceUplinksSettingsInterfacesWan2VlanTagging {
		if v == nil {
			return nil
		}
		return v.VlanTagging
	}).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2Pppoe struct {
	// Settings for PPPoE Authentication.
	Authentication *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// ApplianceUplinksSettingsInterfacesWan2PppoeInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2PppoeArgs and ApplianceUplinksSettingsInterfacesWan2PppoeOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2PppoeInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2PppoeArgs{...}
type ApplianceUplinksSettingsInterfacesWan2PppoeInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2PppoeOutput() ApplianceUplinksSettingsInterfacesWan2PppoeOutput
	ToApplianceUplinksSettingsInterfacesWan2PppoeOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeOutput
}

type ApplianceUplinksSettingsInterfacesWan2PppoeArgs struct {
	// Settings for PPPoE Authentication.
	Authentication ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2Pppoe)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeOutput() ApplianceUplinksSettingsInterfacesWan2PppoeOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoeOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoeOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoeOutput).ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2PppoePtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2PppoeArgs, ApplianceUplinksSettingsInterfacesWan2PppoePtr and ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2PppoePtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2PppoeArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2PppoePtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput
	ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput
}

type applianceUplinksSettingsInterfacesWan2PppoePtrType ApplianceUplinksSettingsInterfacesWan2PppoeArgs

func ApplianceUplinksSettingsInterfacesWan2PppoePtr(v *ApplianceUplinksSettingsInterfacesWan2PppoeArgs) ApplianceUplinksSettingsInterfacesWan2PppoePtrInput {
	return (*applianceUplinksSettingsInterfacesWan2PppoePtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2PppoePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2Pppoe)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2PppoePtrType) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2PppoePtrType) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PppoeOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2PppoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2Pppoe)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeOutput() ApplianceUplinksSettingsInterfacesWan2PppoeOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2Pppoe) *ApplianceUplinksSettingsInterfacesWan2Pppoe {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput)
}

// Settings for PPPoE Authentication.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) Authentication() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2Pppoe) *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication {
		return v.Authentication
	}).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput)
}

// Whether PPPoE is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2Pppoe) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2Pppoe)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) ToApplianceUplinksSettingsInterfacesWan2PppoePtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2PppoeOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Pppoe) ApplianceUplinksSettingsInterfacesWan2Pppoe {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2Pppoe
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2PppoeOutput)
}

// Settings for PPPoE Authentication.
func (o ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) Authentication() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Pppoe) *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput)
}

// Whether PPPoE is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Pppoe) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication struct {
	// Whether PPPoE authentication is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Password for PPPoE authentication. This parameter is not returned.
	Password *string `pulumi:"password"`
	// Username for PPPoE authentication.
	Username *string `pulumi:"username"`
}

// ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs and ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs{...}
type ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput
	ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput
}

type ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs struct {
	// Whether PPPoE authentication is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Password for PPPoE authentication. This parameter is not returned.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for PPPoE authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput).ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs, ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtr and ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput
	ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput
}

type applianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrType ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs

func ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtr(v *ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput {
	return (*applianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrType) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrType) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput)
}

// Whether PPPoE authentication is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Password for PPPoE authentication. This parameter is not returned.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for PPPoE authentication.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) ToApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput)
}

// Whether PPPoE authentication is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Password for PPPoE authentication. This parameter is not returned.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Username for PPPoE authentication.
func (o ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2PppoeAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2Svis struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 *ApplianceUplinksSettingsInterfacesWan2SvisIpv4 `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 *ApplianceUplinksSettingsInterfacesWan2SvisIpv6 `pulumi:"ipv6"`
}

// ApplianceUplinksSettingsInterfacesWan2SvisInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisArgs and ApplianceUplinksSettingsInterfacesWan2SvisOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2SvisArgs{...}
type ApplianceUplinksSettingsInterfacesWan2SvisInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisOutput() ApplianceUplinksSettingsInterfacesWan2SvisOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisOutput
}

type ApplianceUplinksSettingsInterfacesWan2SvisArgs struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput `pulumi:"ipv6"`
}

func (ApplianceUplinksSettingsInterfacesWan2SvisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2Svis)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisArgs) ToApplianceUplinksSettingsInterfacesWan2SvisOutput() ApplianceUplinksSettingsInterfacesWan2SvisOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisArgs) ToApplianceUplinksSettingsInterfacesWan2SvisOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisArgs) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisArgs) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisOutput).ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2SvisPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisArgs, ApplianceUplinksSettingsInterfacesWan2SvisPtr and ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2SvisArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2SvisPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput
}

type applianceUplinksSettingsInterfacesWan2SvisPtrType ApplianceUplinksSettingsInterfacesWan2SvisArgs

func ApplianceUplinksSettingsInterfacesWan2SvisPtr(v *ApplianceUplinksSettingsInterfacesWan2SvisArgs) ApplianceUplinksSettingsInterfacesWan2SvisPtrInput {
	return (*applianceUplinksSettingsInterfacesWan2SvisPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2SvisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2Svis)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2SvisPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2SvisPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2Svis)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) ToApplianceUplinksSettingsInterfacesWan2SvisOutput() ApplianceUplinksSettingsInterfacesWan2SvisOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) ToApplianceUplinksSettingsInterfacesWan2SvisOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2Svis) *ApplianceUplinksSettingsInterfacesWan2Svis {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput)
}

// IPv4 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) Ipv4() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2Svis) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4 {
		return v.Ipv4
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput)
}

// IPv6 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisOutput) Ipv6() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2Svis) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6 {
		return v.Ipv6
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2Svis)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2SvisOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Svis) ApplianceUplinksSettingsInterfacesWan2Svis {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2Svis
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2SvisOutput)
}

// IPv4 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) Ipv4() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Svis) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4 {
		if v == nil {
			return nil
		}
		return v.Ipv4
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput)
}

// IPv6 settings for static/dynamic mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput) Ipv6() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2Svis) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6 {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4 struct {
	// IP address and subnet mask when in static mode.
	Address *string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway *string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers `pulumi:"nameservers"`
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv4Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args and ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv4Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args{...}
type ApplianceUplinksSettingsInterfacesWan2SvisIpv4Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args struct {
	// IP address and subnet mask when in static mode.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput `pulumi:"nameservers"`
}

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output)
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output).ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args, ApplianceUplinksSettingsInterfacesWan2SvisIpv4Ptr and ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput
}

type applianceUplinksSettingsInterfacesWan2SvisIpv4PtrType ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args

func ApplianceUplinksSettingsInterfacesWan2SvisIpv4Ptr(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput {
	return (*applianceUplinksSettingsInterfacesWan2SvisIpv4PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2SvisIpv4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv4PtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv4PtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput)
}

// IP address and subnet mask when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// Gateway IP address when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output) Nameservers() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers {
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4) ApplianceUplinksSettingsInterfacesWan2SvisIpv4 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2SvisIpv4
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output)
}

// IP address and subnet mask when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentMode
	}).(pulumi.StringPtrOutput)
}

// Gateway IP address when in static mode.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput) Nameservers() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs and ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs{...}
type ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput).ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs, ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtr and ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput
}

type applianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrType ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs

func ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtr(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput {
	return (*applianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers) *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers) ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv4Nameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6 struct {
	// Static address that will override the one(s) received by SLAAC.
	Address *string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway *string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers `pulumi:"nameservers"`
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv6Input is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args and ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv6Input` via:
//
//	ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args{...}
type ApplianceUplinksSettingsInterfacesWan2SvisIpv6Input interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6OutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args struct {
	// Static address that will override the one(s) received by SLAAC.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput `pulumi:"nameservers"`
}

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6OutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output)
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output).ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args, ApplianceUplinksSettingsInterfacesWan2SvisIpv6Ptr and ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput
}

type applianceUplinksSettingsInterfacesWan2SvisIpv6PtrType ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args

func ApplianceUplinksSettingsInterfacesWan2SvisIpv6Ptr(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput {
	return (*applianceUplinksSettingsInterfacesWan2SvisIpv6PtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2SvisIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv6PtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv6PtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6Output() ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6OutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6 {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput)
}

// Static address that will override the one(s) received by SLAAC.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// Static gateway that will override the one received by autoconf.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output) Nameservers() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers {
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6) ApplianceUplinksSettingsInterfacesWan2SvisIpv6 {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2SvisIpv6
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output)
}

// Static address that will override the one(s) received by SLAAC.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentMode
	}).(pulumi.StringPtrOutput)
}

// Static gateway that will override the one received by autoconf.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The nameserver settings for this SVI.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput) Nameservers() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs and ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs{...}
type ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput).ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs, ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtr and ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput
	ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput
}

type applianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrType ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs

func ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtr(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput {
	return (*applianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrType) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers) *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput) ToApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers) ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2SvisIpv6Nameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type ApplianceUplinksSettingsInterfacesWan2VlanTagging struct {
	// Whether VLAN tagging is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId *int `pulumi:"vlanId"`
}

// ApplianceUplinksSettingsInterfacesWan2VlanTaggingInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs and ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2VlanTaggingInput` via:
//
//	ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs{...}
type ApplianceUplinksSettingsInterfacesWan2VlanTaggingInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput
	ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput
}

type ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs struct {
	// Whether VLAN tagging is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2VlanTagging)(nil)).Elem()
}

func (i ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput)
}

func (i ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(context.Background())
}

func (i ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput).ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(ctx)
}

// ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput is an input type that accepts ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs, ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtr and ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput values.
// You can construct a concrete instance of `ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput` via:
//
//	        ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs{...}
//
//	or:
//
//	        nil
type ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput interface {
	pulumi.Input

	ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput
	ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput
}

type applianceUplinksSettingsInterfacesWan2VlanTaggingPtrType ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs

func ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtr(v *ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput {
	return (*applianceUplinksSettingsInterfacesWan2VlanTaggingPtrType)(v)
}

func (*applianceUplinksSettingsInterfacesWan2VlanTaggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2VlanTagging)(nil)).Elem()
}

func (i *applianceUplinksSettingsInterfacesWan2VlanTaggingPtrType) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return i.ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(context.Background())
}

func (i *applianceUplinksSettingsInterfacesWan2VlanTaggingPtrType) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2VlanTagging)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o.ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(context.Background())
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceUplinksSettingsInterfacesWan2VlanTagging) *ApplianceUplinksSettingsInterfacesWan2VlanTagging {
		return &v
	}).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput)
}

// Whether VLAN tagging is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2VlanTagging) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplianceUplinksSettingsInterfacesWan2VlanTagging) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput struct{ *pulumi.OutputState }

func (ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceUplinksSettingsInterfacesWan2VlanTagging)(nil)).Elem()
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput() ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) ToApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutputWithContext(ctx context.Context) ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput {
	return o
}

func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) Elem() ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2VlanTagging) ApplianceUplinksSettingsInterfacesWan2VlanTagging {
		if v != nil {
			return *v
		}
		var ret ApplianceUplinksSettingsInterfacesWan2VlanTagging
		return ret
	}).(ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput)
}

// Whether VLAN tagging is enabled.
func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2VlanTagging) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplianceUplinksSettingsInterfacesWan2VlanTagging) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ApplianceVmxAuthenticationTokenItem struct {
	// The expiration time for the token, in ISO 8601 format
	ExpiresAt *string `pulumi:"expiresAt"`
	// The newly generated authentication token for the vMX instance
	Token *string `pulumi:"token"`
}

// ApplianceVmxAuthenticationTokenItemInput is an input type that accepts ApplianceVmxAuthenticationTokenItemArgs and ApplianceVmxAuthenticationTokenItemOutput values.
// You can construct a concrete instance of `ApplianceVmxAuthenticationTokenItemInput` via:
//
//	ApplianceVmxAuthenticationTokenItemArgs{...}
type ApplianceVmxAuthenticationTokenItemInput interface {
	pulumi.Input

	ToApplianceVmxAuthenticationTokenItemOutput() ApplianceVmxAuthenticationTokenItemOutput
	ToApplianceVmxAuthenticationTokenItemOutputWithContext(context.Context) ApplianceVmxAuthenticationTokenItemOutput
}

type ApplianceVmxAuthenticationTokenItemArgs struct {
	// The expiration time for the token, in ISO 8601 format
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The newly generated authentication token for the vMX instance
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (ApplianceVmxAuthenticationTokenItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVmxAuthenticationTokenItem)(nil)).Elem()
}

func (i ApplianceVmxAuthenticationTokenItemArgs) ToApplianceVmxAuthenticationTokenItemOutput() ApplianceVmxAuthenticationTokenItemOutput {
	return i.ToApplianceVmxAuthenticationTokenItemOutputWithContext(context.Background())
}

func (i ApplianceVmxAuthenticationTokenItemArgs) ToApplianceVmxAuthenticationTokenItemOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenItemOutput)
}

func (i ApplianceVmxAuthenticationTokenItemArgs) ToApplianceVmxAuthenticationTokenItemPtrOutput() ApplianceVmxAuthenticationTokenItemPtrOutput {
	return i.ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(context.Background())
}

func (i ApplianceVmxAuthenticationTokenItemArgs) ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenItemOutput).ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(ctx)
}

// ApplianceVmxAuthenticationTokenItemPtrInput is an input type that accepts ApplianceVmxAuthenticationTokenItemArgs, ApplianceVmxAuthenticationTokenItemPtr and ApplianceVmxAuthenticationTokenItemPtrOutput values.
// You can construct a concrete instance of `ApplianceVmxAuthenticationTokenItemPtrInput` via:
//
//	        ApplianceVmxAuthenticationTokenItemArgs{...}
//
//	or:
//
//	        nil
type ApplianceVmxAuthenticationTokenItemPtrInput interface {
	pulumi.Input

	ToApplianceVmxAuthenticationTokenItemPtrOutput() ApplianceVmxAuthenticationTokenItemPtrOutput
	ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(context.Context) ApplianceVmxAuthenticationTokenItemPtrOutput
}

type applianceVmxAuthenticationTokenItemPtrType ApplianceVmxAuthenticationTokenItemArgs

func ApplianceVmxAuthenticationTokenItemPtr(v *ApplianceVmxAuthenticationTokenItemArgs) ApplianceVmxAuthenticationTokenItemPtrInput {
	return (*applianceVmxAuthenticationTokenItemPtrType)(v)
}

func (*applianceVmxAuthenticationTokenItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVmxAuthenticationTokenItem)(nil)).Elem()
}

func (i *applianceVmxAuthenticationTokenItemPtrType) ToApplianceVmxAuthenticationTokenItemPtrOutput() ApplianceVmxAuthenticationTokenItemPtrOutput {
	return i.ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(context.Background())
}

func (i *applianceVmxAuthenticationTokenItemPtrType) ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenItemPtrOutput)
}

type ApplianceVmxAuthenticationTokenItemOutput struct{ *pulumi.OutputState }

func (ApplianceVmxAuthenticationTokenItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceVmxAuthenticationTokenItem)(nil)).Elem()
}

func (o ApplianceVmxAuthenticationTokenItemOutput) ToApplianceVmxAuthenticationTokenItemOutput() ApplianceVmxAuthenticationTokenItemOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenItemOutput) ToApplianceVmxAuthenticationTokenItemOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenItemOutput) ToApplianceVmxAuthenticationTokenItemPtrOutput() ApplianceVmxAuthenticationTokenItemPtrOutput {
	return o.ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(context.Background())
}

func (o ApplianceVmxAuthenticationTokenItemOutput) ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceVmxAuthenticationTokenItem) *ApplianceVmxAuthenticationTokenItem {
		return &v
	}).(ApplianceVmxAuthenticationTokenItemPtrOutput)
}

// The expiration time for the token, in ISO 8601 format
func (o ApplianceVmxAuthenticationTokenItemOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVmxAuthenticationTokenItem) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The newly generated authentication token for the vMX instance
func (o ApplianceVmxAuthenticationTokenItemOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceVmxAuthenticationTokenItem) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type ApplianceVmxAuthenticationTokenItemPtrOutput struct{ *pulumi.OutputState }

func (ApplianceVmxAuthenticationTokenItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVmxAuthenticationTokenItem)(nil)).Elem()
}

func (o ApplianceVmxAuthenticationTokenItemPtrOutput) ToApplianceVmxAuthenticationTokenItemPtrOutput() ApplianceVmxAuthenticationTokenItemPtrOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenItemPtrOutput) ToApplianceVmxAuthenticationTokenItemPtrOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenItemPtrOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenItemPtrOutput) Elem() ApplianceVmxAuthenticationTokenItemOutput {
	return o.ApplyT(func(v *ApplianceVmxAuthenticationTokenItem) ApplianceVmxAuthenticationTokenItem {
		if v != nil {
			return *v
		}
		var ret ApplianceVmxAuthenticationTokenItem
		return ret
	}).(ApplianceVmxAuthenticationTokenItemOutput)
}

// The expiration time for the token, in ISO 8601 format
func (o ApplianceVmxAuthenticationTokenItemPtrOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceVmxAuthenticationTokenItem) *string {
		if v == nil {
			return nil
		}
		return v.ExpiresAt
	}).(pulumi.StringPtrOutput)
}

// The newly generated authentication token for the vMX instance
func (o ApplianceVmxAuthenticationTokenItemPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceVmxAuthenticationTokenItem) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type BlinkLedsItem struct {
	// The duration in seconds. Will be between 5 and 120. Default is 20 seconds
	Duration *int `pulumi:"duration"`
	// The duty cycle as the percent active. Will be between 10 and 90. Default is 50
	Duty *int `pulumi:"duty"`
	// The period in milliseconds. Will be between 100 and 1000. Default is 160 milliseconds
	Period *int `pulumi:"period"`
}

// BlinkLedsItemInput is an input type that accepts BlinkLedsItemArgs and BlinkLedsItemOutput values.
// You can construct a concrete instance of `BlinkLedsItemInput` via:
//
//	BlinkLedsItemArgs{...}
type BlinkLedsItemInput interface {
	pulumi.Input

	ToBlinkLedsItemOutput() BlinkLedsItemOutput
	ToBlinkLedsItemOutputWithContext(context.Context) BlinkLedsItemOutput
}

type BlinkLedsItemArgs struct {
	// The duration in seconds. Will be between 5 and 120. Default is 20 seconds
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// The duty cycle as the percent active. Will be between 10 and 90. Default is 50
	Duty pulumi.IntPtrInput `pulumi:"duty"`
	// The period in milliseconds. Will be between 100 and 1000. Default is 160 milliseconds
	Period pulumi.IntPtrInput `pulumi:"period"`
}

func (BlinkLedsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlinkLedsItem)(nil)).Elem()
}

func (i BlinkLedsItemArgs) ToBlinkLedsItemOutput() BlinkLedsItemOutput {
	return i.ToBlinkLedsItemOutputWithContext(context.Background())
}

func (i BlinkLedsItemArgs) ToBlinkLedsItemOutputWithContext(ctx context.Context) BlinkLedsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsItemOutput)
}

func (i BlinkLedsItemArgs) ToBlinkLedsItemPtrOutput() BlinkLedsItemPtrOutput {
	return i.ToBlinkLedsItemPtrOutputWithContext(context.Background())
}

func (i BlinkLedsItemArgs) ToBlinkLedsItemPtrOutputWithContext(ctx context.Context) BlinkLedsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsItemOutput).ToBlinkLedsItemPtrOutputWithContext(ctx)
}

// BlinkLedsItemPtrInput is an input type that accepts BlinkLedsItemArgs, BlinkLedsItemPtr and BlinkLedsItemPtrOutput values.
// You can construct a concrete instance of `BlinkLedsItemPtrInput` via:
//
//	        BlinkLedsItemArgs{...}
//
//	or:
//
//	        nil
type BlinkLedsItemPtrInput interface {
	pulumi.Input

	ToBlinkLedsItemPtrOutput() BlinkLedsItemPtrOutput
	ToBlinkLedsItemPtrOutputWithContext(context.Context) BlinkLedsItemPtrOutput
}

type blinkLedsItemPtrType BlinkLedsItemArgs

func BlinkLedsItemPtr(v *BlinkLedsItemArgs) BlinkLedsItemPtrInput {
	return (*blinkLedsItemPtrType)(v)
}

func (*blinkLedsItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlinkLedsItem)(nil)).Elem()
}

func (i *blinkLedsItemPtrType) ToBlinkLedsItemPtrOutput() BlinkLedsItemPtrOutput {
	return i.ToBlinkLedsItemPtrOutputWithContext(context.Background())
}

func (i *blinkLedsItemPtrType) ToBlinkLedsItemPtrOutputWithContext(ctx context.Context) BlinkLedsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsItemPtrOutput)
}

type BlinkLedsItemOutput struct{ *pulumi.OutputState }

func (BlinkLedsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlinkLedsItem)(nil)).Elem()
}

func (o BlinkLedsItemOutput) ToBlinkLedsItemOutput() BlinkLedsItemOutput {
	return o
}

func (o BlinkLedsItemOutput) ToBlinkLedsItemOutputWithContext(ctx context.Context) BlinkLedsItemOutput {
	return o
}

func (o BlinkLedsItemOutput) ToBlinkLedsItemPtrOutput() BlinkLedsItemPtrOutput {
	return o.ToBlinkLedsItemPtrOutputWithContext(context.Background())
}

func (o BlinkLedsItemOutput) ToBlinkLedsItemPtrOutputWithContext(ctx context.Context) BlinkLedsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlinkLedsItem) *BlinkLedsItem {
		return &v
	}).(BlinkLedsItemPtrOutput)
}

// The duration in seconds. Will be between 5 and 120. Default is 20 seconds
func (o BlinkLedsItemOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsItem) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The duty cycle as the percent active. Will be between 10 and 90. Default is 50
func (o BlinkLedsItemOutput) Duty() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsItem) *int { return v.Duty }).(pulumi.IntPtrOutput)
}

// The period in milliseconds. Will be between 100 and 1000. Default is 160 milliseconds
func (o BlinkLedsItemOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsItem) *int { return v.Period }).(pulumi.IntPtrOutput)
}

type BlinkLedsItemPtrOutput struct{ *pulumi.OutputState }

func (BlinkLedsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlinkLedsItem)(nil)).Elem()
}

func (o BlinkLedsItemPtrOutput) ToBlinkLedsItemPtrOutput() BlinkLedsItemPtrOutput {
	return o
}

func (o BlinkLedsItemPtrOutput) ToBlinkLedsItemPtrOutputWithContext(ctx context.Context) BlinkLedsItemPtrOutput {
	return o
}

func (o BlinkLedsItemPtrOutput) Elem() BlinkLedsItemOutput {
	return o.ApplyT(func(v *BlinkLedsItem) BlinkLedsItem {
		if v != nil {
			return *v
		}
		var ret BlinkLedsItem
		return ret
	}).(BlinkLedsItemOutput)
}

// The duration in seconds. Will be between 5 and 120. Default is 20 seconds
func (o BlinkLedsItemPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsItem) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// The duty cycle as the percent active. Will be between 10 and 90. Default is 50
func (o BlinkLedsItemPtrOutput) Duty() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsItem) *int {
		if v == nil {
			return nil
		}
		return v.Duty
	}).(pulumi.IntPtrOutput)
}

// The period in milliseconds. Will be between 100 and 1000. Default is 160 milliseconds
func (o BlinkLedsItemPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsItem) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

type BlinkLedsParameters struct {
	// The duration in seconds. Must be between 5 and 120. Default is 20 seconds
	Duration *int `pulumi:"duration"`
	// The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
	Duty *int `pulumi:"duty"`
	// The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
	Period *int `pulumi:"period"`
}

// BlinkLedsParametersInput is an input type that accepts BlinkLedsParametersArgs and BlinkLedsParametersOutput values.
// You can construct a concrete instance of `BlinkLedsParametersInput` via:
//
//	BlinkLedsParametersArgs{...}
type BlinkLedsParametersInput interface {
	pulumi.Input

	ToBlinkLedsParametersOutput() BlinkLedsParametersOutput
	ToBlinkLedsParametersOutputWithContext(context.Context) BlinkLedsParametersOutput
}

type BlinkLedsParametersArgs struct {
	// The duration in seconds. Must be between 5 and 120. Default is 20 seconds
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
	Duty pulumi.IntPtrInput `pulumi:"duty"`
	// The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
	Period pulumi.IntPtrInput `pulumi:"period"`
}

func (BlinkLedsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlinkLedsParameters)(nil)).Elem()
}

func (i BlinkLedsParametersArgs) ToBlinkLedsParametersOutput() BlinkLedsParametersOutput {
	return i.ToBlinkLedsParametersOutputWithContext(context.Background())
}

func (i BlinkLedsParametersArgs) ToBlinkLedsParametersOutputWithContext(ctx context.Context) BlinkLedsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsParametersOutput)
}

func (i BlinkLedsParametersArgs) ToBlinkLedsParametersPtrOutput() BlinkLedsParametersPtrOutput {
	return i.ToBlinkLedsParametersPtrOutputWithContext(context.Background())
}

func (i BlinkLedsParametersArgs) ToBlinkLedsParametersPtrOutputWithContext(ctx context.Context) BlinkLedsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsParametersOutput).ToBlinkLedsParametersPtrOutputWithContext(ctx)
}

// BlinkLedsParametersPtrInput is an input type that accepts BlinkLedsParametersArgs, BlinkLedsParametersPtr and BlinkLedsParametersPtrOutput values.
// You can construct a concrete instance of `BlinkLedsParametersPtrInput` via:
//
//	        BlinkLedsParametersArgs{...}
//
//	or:
//
//	        nil
type BlinkLedsParametersPtrInput interface {
	pulumi.Input

	ToBlinkLedsParametersPtrOutput() BlinkLedsParametersPtrOutput
	ToBlinkLedsParametersPtrOutputWithContext(context.Context) BlinkLedsParametersPtrOutput
}

type blinkLedsParametersPtrType BlinkLedsParametersArgs

func BlinkLedsParametersPtr(v *BlinkLedsParametersArgs) BlinkLedsParametersPtrInput {
	return (*blinkLedsParametersPtrType)(v)
}

func (*blinkLedsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlinkLedsParameters)(nil)).Elem()
}

func (i *blinkLedsParametersPtrType) ToBlinkLedsParametersPtrOutput() BlinkLedsParametersPtrOutput {
	return i.ToBlinkLedsParametersPtrOutputWithContext(context.Background())
}

func (i *blinkLedsParametersPtrType) ToBlinkLedsParametersPtrOutputWithContext(ctx context.Context) BlinkLedsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlinkLedsParametersPtrOutput)
}

type BlinkLedsParametersOutput struct{ *pulumi.OutputState }

func (BlinkLedsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlinkLedsParameters)(nil)).Elem()
}

func (o BlinkLedsParametersOutput) ToBlinkLedsParametersOutput() BlinkLedsParametersOutput {
	return o
}

func (o BlinkLedsParametersOutput) ToBlinkLedsParametersOutputWithContext(ctx context.Context) BlinkLedsParametersOutput {
	return o
}

func (o BlinkLedsParametersOutput) ToBlinkLedsParametersPtrOutput() BlinkLedsParametersPtrOutput {
	return o.ToBlinkLedsParametersPtrOutputWithContext(context.Background())
}

func (o BlinkLedsParametersOutput) ToBlinkLedsParametersPtrOutputWithContext(ctx context.Context) BlinkLedsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlinkLedsParameters) *BlinkLedsParameters {
		return &v
	}).(BlinkLedsParametersPtrOutput)
}

// The duration in seconds. Must be between 5 and 120. Default is 20 seconds
func (o BlinkLedsParametersOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsParameters) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
func (o BlinkLedsParametersOutput) Duty() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsParameters) *int { return v.Duty }).(pulumi.IntPtrOutput)
}

// The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
func (o BlinkLedsParametersOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlinkLedsParameters) *int { return v.Period }).(pulumi.IntPtrOutput)
}

type BlinkLedsParametersPtrOutput struct{ *pulumi.OutputState }

func (BlinkLedsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlinkLedsParameters)(nil)).Elem()
}

func (o BlinkLedsParametersPtrOutput) ToBlinkLedsParametersPtrOutput() BlinkLedsParametersPtrOutput {
	return o
}

func (o BlinkLedsParametersPtrOutput) ToBlinkLedsParametersPtrOutputWithContext(ctx context.Context) BlinkLedsParametersPtrOutput {
	return o
}

func (o BlinkLedsParametersPtrOutput) Elem() BlinkLedsParametersOutput {
	return o.ApplyT(func(v *BlinkLedsParameters) BlinkLedsParameters {
		if v != nil {
			return *v
		}
		var ret BlinkLedsParameters
		return ret
	}).(BlinkLedsParametersOutput)
}

// The duration in seconds. Must be between 5 and 120. Default is 20 seconds
func (o BlinkLedsParametersPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsParameters) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
func (o BlinkLedsParametersPtrOutput) Duty() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsParameters) *int {
		if v == nil {
			return nil
		}
		return v.Duty
	}).(pulumi.IntPtrOutput)
}

// The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
func (o BlinkLedsParametersPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlinkLedsParameters) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

type CameraCustomAnalyticsParameter struct {
	// Name of the parameter
	Name *string `pulumi:"name"`
	// Value of the parameter
	Value *float64 `pulumi:"value"`
}

// CameraCustomAnalyticsParameterInput is an input type that accepts CameraCustomAnalyticsParameterArgs and CameraCustomAnalyticsParameterOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsParameterInput` via:
//
//	CameraCustomAnalyticsParameterArgs{...}
type CameraCustomAnalyticsParameterInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsParameterOutput() CameraCustomAnalyticsParameterOutput
	ToCameraCustomAnalyticsParameterOutputWithContext(context.Context) CameraCustomAnalyticsParameterOutput
}

type CameraCustomAnalyticsParameterArgs struct {
	// Name of the parameter
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the parameter
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (CameraCustomAnalyticsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraCustomAnalyticsParameter)(nil)).Elem()
}

func (i CameraCustomAnalyticsParameterArgs) ToCameraCustomAnalyticsParameterOutput() CameraCustomAnalyticsParameterOutput {
	return i.ToCameraCustomAnalyticsParameterOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsParameterArgs) ToCameraCustomAnalyticsParameterOutputWithContext(ctx context.Context) CameraCustomAnalyticsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsParameterOutput)
}

// CameraCustomAnalyticsParameterArrayInput is an input type that accepts CameraCustomAnalyticsParameterArray and CameraCustomAnalyticsParameterArrayOutput values.
// You can construct a concrete instance of `CameraCustomAnalyticsParameterArrayInput` via:
//
//	CameraCustomAnalyticsParameterArray{ CameraCustomAnalyticsParameterArgs{...} }
type CameraCustomAnalyticsParameterArrayInput interface {
	pulumi.Input

	ToCameraCustomAnalyticsParameterArrayOutput() CameraCustomAnalyticsParameterArrayOutput
	ToCameraCustomAnalyticsParameterArrayOutputWithContext(context.Context) CameraCustomAnalyticsParameterArrayOutput
}

type CameraCustomAnalyticsParameterArray []CameraCustomAnalyticsParameterInput

func (CameraCustomAnalyticsParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraCustomAnalyticsParameter)(nil)).Elem()
}

func (i CameraCustomAnalyticsParameterArray) ToCameraCustomAnalyticsParameterArrayOutput() CameraCustomAnalyticsParameterArrayOutput {
	return i.ToCameraCustomAnalyticsParameterArrayOutputWithContext(context.Background())
}

func (i CameraCustomAnalyticsParameterArray) ToCameraCustomAnalyticsParameterArrayOutputWithContext(ctx context.Context) CameraCustomAnalyticsParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraCustomAnalyticsParameterArrayOutput)
}

type CameraCustomAnalyticsParameterOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraCustomAnalyticsParameter)(nil)).Elem()
}

func (o CameraCustomAnalyticsParameterOutput) ToCameraCustomAnalyticsParameterOutput() CameraCustomAnalyticsParameterOutput {
	return o
}

func (o CameraCustomAnalyticsParameterOutput) ToCameraCustomAnalyticsParameterOutputWithContext(ctx context.Context) CameraCustomAnalyticsParameterOutput {
	return o
}

// Name of the parameter
func (o CameraCustomAnalyticsParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraCustomAnalyticsParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the parameter
func (o CameraCustomAnalyticsParameterOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CameraCustomAnalyticsParameter) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type CameraCustomAnalyticsParameterArrayOutput struct{ *pulumi.OutputState }

func (CameraCustomAnalyticsParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CameraCustomAnalyticsParameter)(nil)).Elem()
}

func (o CameraCustomAnalyticsParameterArrayOutput) ToCameraCustomAnalyticsParameterArrayOutput() CameraCustomAnalyticsParameterArrayOutput {
	return o
}

func (o CameraCustomAnalyticsParameterArrayOutput) ToCameraCustomAnalyticsParameterArrayOutputWithContext(ctx context.Context) CameraCustomAnalyticsParameterArrayOutput {
	return o
}

func (o CameraCustomAnalyticsParameterArrayOutput) Index(i pulumi.IntInput) CameraCustomAnalyticsParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CameraCustomAnalyticsParameter {
		return vs[0].([]CameraCustomAnalyticsParameter)[vs[1].(int)]
	}).(CameraCustomAnalyticsParameterOutput)
}

type CameraGenerateSnapshotParameters struct {
	// [optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
	Fullframe *bool `pulumi:"fullframe"`
	// [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
	Timestamp *string `pulumi:"timestamp"`
}

// CameraGenerateSnapshotParametersInput is an input type that accepts CameraGenerateSnapshotParametersArgs and CameraGenerateSnapshotParametersOutput values.
// You can construct a concrete instance of `CameraGenerateSnapshotParametersInput` via:
//
//	CameraGenerateSnapshotParametersArgs{...}
type CameraGenerateSnapshotParametersInput interface {
	pulumi.Input

	ToCameraGenerateSnapshotParametersOutput() CameraGenerateSnapshotParametersOutput
	ToCameraGenerateSnapshotParametersOutputWithContext(context.Context) CameraGenerateSnapshotParametersOutput
}

type CameraGenerateSnapshotParametersArgs struct {
	// [optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
	Fullframe pulumi.BoolPtrInput `pulumi:"fullframe"`
	// [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
	Timestamp pulumi.StringPtrInput `pulumi:"timestamp"`
}

func (CameraGenerateSnapshotParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraGenerateSnapshotParameters)(nil)).Elem()
}

func (i CameraGenerateSnapshotParametersArgs) ToCameraGenerateSnapshotParametersOutput() CameraGenerateSnapshotParametersOutput {
	return i.ToCameraGenerateSnapshotParametersOutputWithContext(context.Background())
}

func (i CameraGenerateSnapshotParametersArgs) ToCameraGenerateSnapshotParametersOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraGenerateSnapshotParametersOutput)
}

func (i CameraGenerateSnapshotParametersArgs) ToCameraGenerateSnapshotParametersPtrOutput() CameraGenerateSnapshotParametersPtrOutput {
	return i.ToCameraGenerateSnapshotParametersPtrOutputWithContext(context.Background())
}

func (i CameraGenerateSnapshotParametersArgs) ToCameraGenerateSnapshotParametersPtrOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraGenerateSnapshotParametersOutput).ToCameraGenerateSnapshotParametersPtrOutputWithContext(ctx)
}

// CameraGenerateSnapshotParametersPtrInput is an input type that accepts CameraGenerateSnapshotParametersArgs, CameraGenerateSnapshotParametersPtr and CameraGenerateSnapshotParametersPtrOutput values.
// You can construct a concrete instance of `CameraGenerateSnapshotParametersPtrInput` via:
//
//	        CameraGenerateSnapshotParametersArgs{...}
//
//	or:
//
//	        nil
type CameraGenerateSnapshotParametersPtrInput interface {
	pulumi.Input

	ToCameraGenerateSnapshotParametersPtrOutput() CameraGenerateSnapshotParametersPtrOutput
	ToCameraGenerateSnapshotParametersPtrOutputWithContext(context.Context) CameraGenerateSnapshotParametersPtrOutput
}

type cameraGenerateSnapshotParametersPtrType CameraGenerateSnapshotParametersArgs

func CameraGenerateSnapshotParametersPtr(v *CameraGenerateSnapshotParametersArgs) CameraGenerateSnapshotParametersPtrInput {
	return (*cameraGenerateSnapshotParametersPtrType)(v)
}

func (*cameraGenerateSnapshotParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraGenerateSnapshotParameters)(nil)).Elem()
}

func (i *cameraGenerateSnapshotParametersPtrType) ToCameraGenerateSnapshotParametersPtrOutput() CameraGenerateSnapshotParametersPtrOutput {
	return i.ToCameraGenerateSnapshotParametersPtrOutputWithContext(context.Background())
}

func (i *cameraGenerateSnapshotParametersPtrType) ToCameraGenerateSnapshotParametersPtrOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraGenerateSnapshotParametersPtrOutput)
}

type CameraGenerateSnapshotParametersOutput struct{ *pulumi.OutputState }

func (CameraGenerateSnapshotParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraGenerateSnapshotParameters)(nil)).Elem()
}

func (o CameraGenerateSnapshotParametersOutput) ToCameraGenerateSnapshotParametersOutput() CameraGenerateSnapshotParametersOutput {
	return o
}

func (o CameraGenerateSnapshotParametersOutput) ToCameraGenerateSnapshotParametersOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersOutput {
	return o
}

func (o CameraGenerateSnapshotParametersOutput) ToCameraGenerateSnapshotParametersPtrOutput() CameraGenerateSnapshotParametersPtrOutput {
	return o.ToCameraGenerateSnapshotParametersPtrOutputWithContext(context.Background())
}

func (o CameraGenerateSnapshotParametersOutput) ToCameraGenerateSnapshotParametersPtrOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CameraGenerateSnapshotParameters) *CameraGenerateSnapshotParameters {
		return &v
	}).(CameraGenerateSnapshotParametersPtrOutput)
}

// [optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
func (o CameraGenerateSnapshotParametersOutput) Fullframe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CameraGenerateSnapshotParameters) *bool { return v.Fullframe }).(pulumi.BoolPtrOutput)
}

// [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
func (o CameraGenerateSnapshotParametersOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraGenerateSnapshotParameters) *string { return v.Timestamp }).(pulumi.StringPtrOutput)
}

type CameraGenerateSnapshotParametersPtrOutput struct{ *pulumi.OutputState }

func (CameraGenerateSnapshotParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraGenerateSnapshotParameters)(nil)).Elem()
}

func (o CameraGenerateSnapshotParametersPtrOutput) ToCameraGenerateSnapshotParametersPtrOutput() CameraGenerateSnapshotParametersPtrOutput {
	return o
}

func (o CameraGenerateSnapshotParametersPtrOutput) ToCameraGenerateSnapshotParametersPtrOutputWithContext(ctx context.Context) CameraGenerateSnapshotParametersPtrOutput {
	return o
}

func (o CameraGenerateSnapshotParametersPtrOutput) Elem() CameraGenerateSnapshotParametersOutput {
	return o.ApplyT(func(v *CameraGenerateSnapshotParameters) CameraGenerateSnapshotParameters {
		if v != nil {
			return *v
		}
		var ret CameraGenerateSnapshotParameters
		return ret
	}).(CameraGenerateSnapshotParametersOutput)
}

// [optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
func (o CameraGenerateSnapshotParametersPtrOutput) Fullframe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CameraGenerateSnapshotParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Fullframe
	}).(pulumi.BoolPtrOutput)
}

// [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
func (o CameraGenerateSnapshotParametersPtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraGenerateSnapshotParameters) *string {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.StringPtrOutput)
}

type CameraSenseAudioDetection struct {
	// Boolean indicating if audio detection is enabled(true) or disabled(false) on the camera
	Enabled *bool `pulumi:"enabled"`
}

// CameraSenseAudioDetectionInput is an input type that accepts CameraSenseAudioDetectionArgs and CameraSenseAudioDetectionOutput values.
// You can construct a concrete instance of `CameraSenseAudioDetectionInput` via:
//
//	CameraSenseAudioDetectionArgs{...}
type CameraSenseAudioDetectionInput interface {
	pulumi.Input

	ToCameraSenseAudioDetectionOutput() CameraSenseAudioDetectionOutput
	ToCameraSenseAudioDetectionOutputWithContext(context.Context) CameraSenseAudioDetectionOutput
}

type CameraSenseAudioDetectionArgs struct {
	// Boolean indicating if audio detection is enabled(true) or disabled(false) on the camera
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (CameraSenseAudioDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraSenseAudioDetection)(nil)).Elem()
}

func (i CameraSenseAudioDetectionArgs) ToCameraSenseAudioDetectionOutput() CameraSenseAudioDetectionOutput {
	return i.ToCameraSenseAudioDetectionOutputWithContext(context.Background())
}

func (i CameraSenseAudioDetectionArgs) ToCameraSenseAudioDetectionOutputWithContext(ctx context.Context) CameraSenseAudioDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraSenseAudioDetectionOutput)
}

func (i CameraSenseAudioDetectionArgs) ToCameraSenseAudioDetectionPtrOutput() CameraSenseAudioDetectionPtrOutput {
	return i.ToCameraSenseAudioDetectionPtrOutputWithContext(context.Background())
}

func (i CameraSenseAudioDetectionArgs) ToCameraSenseAudioDetectionPtrOutputWithContext(ctx context.Context) CameraSenseAudioDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraSenseAudioDetectionOutput).ToCameraSenseAudioDetectionPtrOutputWithContext(ctx)
}

// CameraSenseAudioDetectionPtrInput is an input type that accepts CameraSenseAudioDetectionArgs, CameraSenseAudioDetectionPtr and CameraSenseAudioDetectionPtrOutput values.
// You can construct a concrete instance of `CameraSenseAudioDetectionPtrInput` via:
//
//	        CameraSenseAudioDetectionArgs{...}
//
//	or:
//
//	        nil
type CameraSenseAudioDetectionPtrInput interface {
	pulumi.Input

	ToCameraSenseAudioDetectionPtrOutput() CameraSenseAudioDetectionPtrOutput
	ToCameraSenseAudioDetectionPtrOutputWithContext(context.Context) CameraSenseAudioDetectionPtrOutput
}

type cameraSenseAudioDetectionPtrType CameraSenseAudioDetectionArgs

func CameraSenseAudioDetectionPtr(v *CameraSenseAudioDetectionArgs) CameraSenseAudioDetectionPtrInput {
	return (*cameraSenseAudioDetectionPtrType)(v)
}

func (*cameraSenseAudioDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraSenseAudioDetection)(nil)).Elem()
}

func (i *cameraSenseAudioDetectionPtrType) ToCameraSenseAudioDetectionPtrOutput() CameraSenseAudioDetectionPtrOutput {
	return i.ToCameraSenseAudioDetectionPtrOutputWithContext(context.Background())
}

func (i *cameraSenseAudioDetectionPtrType) ToCameraSenseAudioDetectionPtrOutputWithContext(ctx context.Context) CameraSenseAudioDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraSenseAudioDetectionPtrOutput)
}

type CameraSenseAudioDetectionOutput struct{ *pulumi.OutputState }

func (CameraSenseAudioDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraSenseAudioDetection)(nil)).Elem()
}

func (o CameraSenseAudioDetectionOutput) ToCameraSenseAudioDetectionOutput() CameraSenseAudioDetectionOutput {
	return o
}

func (o CameraSenseAudioDetectionOutput) ToCameraSenseAudioDetectionOutputWithContext(ctx context.Context) CameraSenseAudioDetectionOutput {
	return o
}

func (o CameraSenseAudioDetectionOutput) ToCameraSenseAudioDetectionPtrOutput() CameraSenseAudioDetectionPtrOutput {
	return o.ToCameraSenseAudioDetectionPtrOutputWithContext(context.Background())
}

func (o CameraSenseAudioDetectionOutput) ToCameraSenseAudioDetectionPtrOutputWithContext(ctx context.Context) CameraSenseAudioDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CameraSenseAudioDetection) *CameraSenseAudioDetection {
		return &v
	}).(CameraSenseAudioDetectionPtrOutput)
}

// Boolean indicating if audio detection is enabled(true) or disabled(false) on the camera
func (o CameraSenseAudioDetectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CameraSenseAudioDetection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type CameraSenseAudioDetectionPtrOutput struct{ *pulumi.OutputState }

func (CameraSenseAudioDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraSenseAudioDetection)(nil)).Elem()
}

func (o CameraSenseAudioDetectionPtrOutput) ToCameraSenseAudioDetectionPtrOutput() CameraSenseAudioDetectionPtrOutput {
	return o
}

func (o CameraSenseAudioDetectionPtrOutput) ToCameraSenseAudioDetectionPtrOutputWithContext(ctx context.Context) CameraSenseAudioDetectionPtrOutput {
	return o
}

func (o CameraSenseAudioDetectionPtrOutput) Elem() CameraSenseAudioDetectionOutput {
	return o.ApplyT(func(v *CameraSenseAudioDetection) CameraSenseAudioDetection {
		if v != nil {
			return *v
		}
		var ret CameraSenseAudioDetection
		return ret
	}).(CameraSenseAudioDetectionOutput)
}

// Boolean indicating if audio detection is enabled(true) or disabled(false) on the camera
func (o CameraSenseAudioDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CameraSenseAudioDetection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type CameraWirelessProfilesIds struct {
	// The id of the backup wireless profile
	Backup *string `pulumi:"backup"`
	// The id of the primary wireless profile
	Primary *string `pulumi:"primary"`
	// The id of the secondary wireless profile
	Secondary *string `pulumi:"secondary"`
}

// CameraWirelessProfilesIdsInput is an input type that accepts CameraWirelessProfilesIdsArgs and CameraWirelessProfilesIdsOutput values.
// You can construct a concrete instance of `CameraWirelessProfilesIdsInput` via:
//
//	CameraWirelessProfilesIdsArgs{...}
type CameraWirelessProfilesIdsInput interface {
	pulumi.Input

	ToCameraWirelessProfilesIdsOutput() CameraWirelessProfilesIdsOutput
	ToCameraWirelessProfilesIdsOutputWithContext(context.Context) CameraWirelessProfilesIdsOutput
}

type CameraWirelessProfilesIdsArgs struct {
	// The id of the backup wireless profile
	Backup pulumi.StringPtrInput `pulumi:"backup"`
	// The id of the primary wireless profile
	Primary pulumi.StringPtrInput `pulumi:"primary"`
	// The id of the secondary wireless profile
	Secondary pulumi.StringPtrInput `pulumi:"secondary"`
}

func (CameraWirelessProfilesIdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraWirelessProfilesIds)(nil)).Elem()
}

func (i CameraWirelessProfilesIdsArgs) ToCameraWirelessProfilesIdsOutput() CameraWirelessProfilesIdsOutput {
	return i.ToCameraWirelessProfilesIdsOutputWithContext(context.Background())
}

func (i CameraWirelessProfilesIdsArgs) ToCameraWirelessProfilesIdsOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraWirelessProfilesIdsOutput)
}

func (i CameraWirelessProfilesIdsArgs) ToCameraWirelessProfilesIdsPtrOutput() CameraWirelessProfilesIdsPtrOutput {
	return i.ToCameraWirelessProfilesIdsPtrOutputWithContext(context.Background())
}

func (i CameraWirelessProfilesIdsArgs) ToCameraWirelessProfilesIdsPtrOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraWirelessProfilesIdsOutput).ToCameraWirelessProfilesIdsPtrOutputWithContext(ctx)
}

// CameraWirelessProfilesIdsPtrInput is an input type that accepts CameraWirelessProfilesIdsArgs, CameraWirelessProfilesIdsPtr and CameraWirelessProfilesIdsPtrOutput values.
// You can construct a concrete instance of `CameraWirelessProfilesIdsPtrInput` via:
//
//	        CameraWirelessProfilesIdsArgs{...}
//
//	or:
//
//	        nil
type CameraWirelessProfilesIdsPtrInput interface {
	pulumi.Input

	ToCameraWirelessProfilesIdsPtrOutput() CameraWirelessProfilesIdsPtrOutput
	ToCameraWirelessProfilesIdsPtrOutputWithContext(context.Context) CameraWirelessProfilesIdsPtrOutput
}

type cameraWirelessProfilesIdsPtrType CameraWirelessProfilesIdsArgs

func CameraWirelessProfilesIdsPtr(v *CameraWirelessProfilesIdsArgs) CameraWirelessProfilesIdsPtrInput {
	return (*cameraWirelessProfilesIdsPtrType)(v)
}

func (*cameraWirelessProfilesIdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraWirelessProfilesIds)(nil)).Elem()
}

func (i *cameraWirelessProfilesIdsPtrType) ToCameraWirelessProfilesIdsPtrOutput() CameraWirelessProfilesIdsPtrOutput {
	return i.ToCameraWirelessProfilesIdsPtrOutputWithContext(context.Background())
}

func (i *cameraWirelessProfilesIdsPtrType) ToCameraWirelessProfilesIdsPtrOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CameraWirelessProfilesIdsPtrOutput)
}

type CameraWirelessProfilesIdsOutput struct{ *pulumi.OutputState }

func (CameraWirelessProfilesIdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CameraWirelessProfilesIds)(nil)).Elem()
}

func (o CameraWirelessProfilesIdsOutput) ToCameraWirelessProfilesIdsOutput() CameraWirelessProfilesIdsOutput {
	return o
}

func (o CameraWirelessProfilesIdsOutput) ToCameraWirelessProfilesIdsOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsOutput {
	return o
}

func (o CameraWirelessProfilesIdsOutput) ToCameraWirelessProfilesIdsPtrOutput() CameraWirelessProfilesIdsPtrOutput {
	return o.ToCameraWirelessProfilesIdsPtrOutputWithContext(context.Background())
}

func (o CameraWirelessProfilesIdsOutput) ToCameraWirelessProfilesIdsPtrOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CameraWirelessProfilesIds) *CameraWirelessProfilesIds {
		return &v
	}).(CameraWirelessProfilesIdsPtrOutput)
}

// The id of the backup wireless profile
func (o CameraWirelessProfilesIdsOutput) Backup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraWirelessProfilesIds) *string { return v.Backup }).(pulumi.StringPtrOutput)
}

// The id of the primary wireless profile
func (o CameraWirelessProfilesIdsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraWirelessProfilesIds) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

// The id of the secondary wireless profile
func (o CameraWirelessProfilesIdsOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CameraWirelessProfilesIds) *string { return v.Secondary }).(pulumi.StringPtrOutput)
}

type CameraWirelessProfilesIdsPtrOutput struct{ *pulumi.OutputState }

func (CameraWirelessProfilesIdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CameraWirelessProfilesIds)(nil)).Elem()
}

func (o CameraWirelessProfilesIdsPtrOutput) ToCameraWirelessProfilesIdsPtrOutput() CameraWirelessProfilesIdsPtrOutput {
	return o
}

func (o CameraWirelessProfilesIdsPtrOutput) ToCameraWirelessProfilesIdsPtrOutputWithContext(ctx context.Context) CameraWirelessProfilesIdsPtrOutput {
	return o
}

func (o CameraWirelessProfilesIdsPtrOutput) Elem() CameraWirelessProfilesIdsOutput {
	return o.ApplyT(func(v *CameraWirelessProfilesIds) CameraWirelessProfilesIds {
		if v != nil {
			return *v
		}
		var ret CameraWirelessProfilesIds
		return ret
	}).(CameraWirelessProfilesIdsOutput)
}

// The id of the backup wireless profile
func (o CameraWirelessProfilesIdsPtrOutput) Backup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraWirelessProfilesIds) *string {
		if v == nil {
			return nil
		}
		return v.Backup
	}).(pulumi.StringPtrOutput)
}

// The id of the primary wireless profile
func (o CameraWirelessProfilesIdsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraWirelessProfilesIds) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

// The id of the secondary wireless profile
func (o CameraWirelessProfilesIdsPtrOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CameraWirelessProfilesIds) *string {
		if v == nil {
			return nil
		}
		return v.Secondary
	}).(pulumi.StringPtrOutput)
}

type CellularGatewayLanFixedIpAssignment struct {
	// The IP address you want to assign to a specific server or device
	Ip *string `pulumi:"ip"`
	// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
	Mac *string `pulumi:"mac"`
	// A descriptive name of the assignment
	Name *string `pulumi:"name"`
}

// CellularGatewayLanFixedIpAssignmentInput is an input type that accepts CellularGatewayLanFixedIpAssignmentArgs and CellularGatewayLanFixedIpAssignmentOutput values.
// You can construct a concrete instance of `CellularGatewayLanFixedIpAssignmentInput` via:
//
//	CellularGatewayLanFixedIpAssignmentArgs{...}
type CellularGatewayLanFixedIpAssignmentInput interface {
	pulumi.Input

	ToCellularGatewayLanFixedIpAssignmentOutput() CellularGatewayLanFixedIpAssignmentOutput
	ToCellularGatewayLanFixedIpAssignmentOutputWithContext(context.Context) CellularGatewayLanFixedIpAssignmentOutput
}

type CellularGatewayLanFixedIpAssignmentArgs struct {
	// The IP address you want to assign to a specific server or device
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// A descriptive name of the assignment
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CellularGatewayLanFixedIpAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayLanFixedIpAssignment)(nil)).Elem()
}

func (i CellularGatewayLanFixedIpAssignmentArgs) ToCellularGatewayLanFixedIpAssignmentOutput() CellularGatewayLanFixedIpAssignmentOutput {
	return i.ToCellularGatewayLanFixedIpAssignmentOutputWithContext(context.Background())
}

func (i CellularGatewayLanFixedIpAssignmentArgs) ToCellularGatewayLanFixedIpAssignmentOutputWithContext(ctx context.Context) CellularGatewayLanFixedIpAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayLanFixedIpAssignmentOutput)
}

// CellularGatewayLanFixedIpAssignmentArrayInput is an input type that accepts CellularGatewayLanFixedIpAssignmentArray and CellularGatewayLanFixedIpAssignmentArrayOutput values.
// You can construct a concrete instance of `CellularGatewayLanFixedIpAssignmentArrayInput` via:
//
//	CellularGatewayLanFixedIpAssignmentArray{ CellularGatewayLanFixedIpAssignmentArgs{...} }
type CellularGatewayLanFixedIpAssignmentArrayInput interface {
	pulumi.Input

	ToCellularGatewayLanFixedIpAssignmentArrayOutput() CellularGatewayLanFixedIpAssignmentArrayOutput
	ToCellularGatewayLanFixedIpAssignmentArrayOutputWithContext(context.Context) CellularGatewayLanFixedIpAssignmentArrayOutput
}

type CellularGatewayLanFixedIpAssignmentArray []CellularGatewayLanFixedIpAssignmentInput

func (CellularGatewayLanFixedIpAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayLanFixedIpAssignment)(nil)).Elem()
}

func (i CellularGatewayLanFixedIpAssignmentArray) ToCellularGatewayLanFixedIpAssignmentArrayOutput() CellularGatewayLanFixedIpAssignmentArrayOutput {
	return i.ToCellularGatewayLanFixedIpAssignmentArrayOutputWithContext(context.Background())
}

func (i CellularGatewayLanFixedIpAssignmentArray) ToCellularGatewayLanFixedIpAssignmentArrayOutputWithContext(ctx context.Context) CellularGatewayLanFixedIpAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayLanFixedIpAssignmentArrayOutput)
}

type CellularGatewayLanFixedIpAssignmentOutput struct{ *pulumi.OutputState }

func (CellularGatewayLanFixedIpAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayLanFixedIpAssignment)(nil)).Elem()
}

func (o CellularGatewayLanFixedIpAssignmentOutput) ToCellularGatewayLanFixedIpAssignmentOutput() CellularGatewayLanFixedIpAssignmentOutput {
	return o
}

func (o CellularGatewayLanFixedIpAssignmentOutput) ToCellularGatewayLanFixedIpAssignmentOutputWithContext(ctx context.Context) CellularGatewayLanFixedIpAssignmentOutput {
	return o
}

// The IP address you want to assign to a specific server or device
func (o CellularGatewayLanFixedIpAssignmentOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanFixedIpAssignment) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
func (o CellularGatewayLanFixedIpAssignmentOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanFixedIpAssignment) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// A descriptive name of the assignment
func (o CellularGatewayLanFixedIpAssignmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanFixedIpAssignment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CellularGatewayLanFixedIpAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CellularGatewayLanFixedIpAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayLanFixedIpAssignment)(nil)).Elem()
}

func (o CellularGatewayLanFixedIpAssignmentArrayOutput) ToCellularGatewayLanFixedIpAssignmentArrayOutput() CellularGatewayLanFixedIpAssignmentArrayOutput {
	return o
}

func (o CellularGatewayLanFixedIpAssignmentArrayOutput) ToCellularGatewayLanFixedIpAssignmentArrayOutputWithContext(ctx context.Context) CellularGatewayLanFixedIpAssignmentArrayOutput {
	return o
}

func (o CellularGatewayLanFixedIpAssignmentArrayOutput) Index(i pulumi.IntInput) CellularGatewayLanFixedIpAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CellularGatewayLanFixedIpAssignment {
		return vs[0].([]CellularGatewayLanFixedIpAssignment)[vs[1].(int)]
	}).(CellularGatewayLanFixedIpAssignmentOutput)
}

type CellularGatewayLanReservedIpRange struct {
	// Comment explaining the reserved IP range
	Comment *string `pulumi:"comment"`
	// Ending IP included in the reserved range of IPs
	End *string `pulumi:"end"`
	// Starting IP included in the reserved range of IPs
	Start *string `pulumi:"start"`
}

// CellularGatewayLanReservedIpRangeInput is an input type that accepts CellularGatewayLanReservedIpRangeArgs and CellularGatewayLanReservedIpRangeOutput values.
// You can construct a concrete instance of `CellularGatewayLanReservedIpRangeInput` via:
//
//	CellularGatewayLanReservedIpRangeArgs{...}
type CellularGatewayLanReservedIpRangeInput interface {
	pulumi.Input

	ToCellularGatewayLanReservedIpRangeOutput() CellularGatewayLanReservedIpRangeOutput
	ToCellularGatewayLanReservedIpRangeOutputWithContext(context.Context) CellularGatewayLanReservedIpRangeOutput
}

type CellularGatewayLanReservedIpRangeArgs struct {
	// Comment explaining the reserved IP range
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Ending IP included in the reserved range of IPs
	End pulumi.StringPtrInput `pulumi:"end"`
	// Starting IP included in the reserved range of IPs
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (CellularGatewayLanReservedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayLanReservedIpRange)(nil)).Elem()
}

func (i CellularGatewayLanReservedIpRangeArgs) ToCellularGatewayLanReservedIpRangeOutput() CellularGatewayLanReservedIpRangeOutput {
	return i.ToCellularGatewayLanReservedIpRangeOutputWithContext(context.Background())
}

func (i CellularGatewayLanReservedIpRangeArgs) ToCellularGatewayLanReservedIpRangeOutputWithContext(ctx context.Context) CellularGatewayLanReservedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayLanReservedIpRangeOutput)
}

// CellularGatewayLanReservedIpRangeArrayInput is an input type that accepts CellularGatewayLanReservedIpRangeArray and CellularGatewayLanReservedIpRangeArrayOutput values.
// You can construct a concrete instance of `CellularGatewayLanReservedIpRangeArrayInput` via:
//
//	CellularGatewayLanReservedIpRangeArray{ CellularGatewayLanReservedIpRangeArgs{...} }
type CellularGatewayLanReservedIpRangeArrayInput interface {
	pulumi.Input

	ToCellularGatewayLanReservedIpRangeArrayOutput() CellularGatewayLanReservedIpRangeArrayOutput
	ToCellularGatewayLanReservedIpRangeArrayOutputWithContext(context.Context) CellularGatewayLanReservedIpRangeArrayOutput
}

type CellularGatewayLanReservedIpRangeArray []CellularGatewayLanReservedIpRangeInput

func (CellularGatewayLanReservedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayLanReservedIpRange)(nil)).Elem()
}

func (i CellularGatewayLanReservedIpRangeArray) ToCellularGatewayLanReservedIpRangeArrayOutput() CellularGatewayLanReservedIpRangeArrayOutput {
	return i.ToCellularGatewayLanReservedIpRangeArrayOutputWithContext(context.Background())
}

func (i CellularGatewayLanReservedIpRangeArray) ToCellularGatewayLanReservedIpRangeArrayOutputWithContext(ctx context.Context) CellularGatewayLanReservedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayLanReservedIpRangeArrayOutput)
}

type CellularGatewayLanReservedIpRangeOutput struct{ *pulumi.OutputState }

func (CellularGatewayLanReservedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayLanReservedIpRange)(nil)).Elem()
}

func (o CellularGatewayLanReservedIpRangeOutput) ToCellularGatewayLanReservedIpRangeOutput() CellularGatewayLanReservedIpRangeOutput {
	return o
}

func (o CellularGatewayLanReservedIpRangeOutput) ToCellularGatewayLanReservedIpRangeOutputWithContext(ctx context.Context) CellularGatewayLanReservedIpRangeOutput {
	return o
}

// Comment explaining the reserved IP range
func (o CellularGatewayLanReservedIpRangeOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanReservedIpRange) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Ending IP included in the reserved range of IPs
func (o CellularGatewayLanReservedIpRangeOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanReservedIpRange) *string { return v.End }).(pulumi.StringPtrOutput)
}

// Starting IP included in the reserved range of IPs
func (o CellularGatewayLanReservedIpRangeOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayLanReservedIpRange) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type CellularGatewayLanReservedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (CellularGatewayLanReservedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayLanReservedIpRange)(nil)).Elem()
}

func (o CellularGatewayLanReservedIpRangeArrayOutput) ToCellularGatewayLanReservedIpRangeArrayOutput() CellularGatewayLanReservedIpRangeArrayOutput {
	return o
}

func (o CellularGatewayLanReservedIpRangeArrayOutput) ToCellularGatewayLanReservedIpRangeArrayOutputWithContext(ctx context.Context) CellularGatewayLanReservedIpRangeArrayOutput {
	return o
}

func (o CellularGatewayLanReservedIpRangeArrayOutput) Index(i pulumi.IntInput) CellularGatewayLanReservedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CellularGatewayLanReservedIpRange {
		return vs[0].([]CellularGatewayLanReservedIpRange)[vs[1].(int)]
	}).(CellularGatewayLanReservedIpRangeOutput)
}

type CellularGatewayPortForwardingRulesRule struct {
	// *any* or *restricted*. Specify the right to make inbound connections on the specified ports or port ranges. If *restricted*, a list of allowed IPs is mandatory.
	Access *string `pulumi:"access"`
	// An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
	AllowedIps []string `pulumi:"allowedIps"`
	// The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
	LanIp *string `pulumi:"lanIp"`
	// A port or port ranges that will receive the forwarded traffic from the WAN
	LocalPort *string `pulumi:"localPort"`
	// A descriptive name for the rule
	Name *string `pulumi:"name"`
	// TCP or UDP
	Protocol *string `pulumi:"protocol"`
	// A port or port ranges that will be forwarded to the host on the LAN
	PublicPort *string `pulumi:"publicPort"`
	Uplink     *string `pulumi:"uplink"`
}

// CellularGatewayPortForwardingRulesRuleInput is an input type that accepts CellularGatewayPortForwardingRulesRuleArgs and CellularGatewayPortForwardingRulesRuleOutput values.
// You can construct a concrete instance of `CellularGatewayPortForwardingRulesRuleInput` via:
//
//	CellularGatewayPortForwardingRulesRuleArgs{...}
type CellularGatewayPortForwardingRulesRuleInput interface {
	pulumi.Input

	ToCellularGatewayPortForwardingRulesRuleOutput() CellularGatewayPortForwardingRulesRuleOutput
	ToCellularGatewayPortForwardingRulesRuleOutputWithContext(context.Context) CellularGatewayPortForwardingRulesRuleOutput
}

type CellularGatewayPortForwardingRulesRuleArgs struct {
	// *any* or *restricted*. Specify the right to make inbound connections on the specified ports or port ranges. If *restricted*, a list of allowed IPs is mandatory.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
	AllowedIps pulumi.StringArrayInput `pulumi:"allowedIps"`
	// The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
	LanIp pulumi.StringPtrInput `pulumi:"lanIp"`
	// A port or port ranges that will receive the forwarded traffic from the WAN
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// A descriptive name for the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// TCP or UDP
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// A port or port ranges that will be forwarded to the host on the LAN
	PublicPort pulumi.StringPtrInput `pulumi:"publicPort"`
	Uplink     pulumi.StringPtrInput `pulumi:"uplink"`
}

func (CellularGatewayPortForwardingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayPortForwardingRulesRule)(nil)).Elem()
}

func (i CellularGatewayPortForwardingRulesRuleArgs) ToCellularGatewayPortForwardingRulesRuleOutput() CellularGatewayPortForwardingRulesRuleOutput {
	return i.ToCellularGatewayPortForwardingRulesRuleOutputWithContext(context.Background())
}

func (i CellularGatewayPortForwardingRulesRuleArgs) ToCellularGatewayPortForwardingRulesRuleOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayPortForwardingRulesRuleOutput)
}

// CellularGatewayPortForwardingRulesRuleArrayInput is an input type that accepts CellularGatewayPortForwardingRulesRuleArray and CellularGatewayPortForwardingRulesRuleArrayOutput values.
// You can construct a concrete instance of `CellularGatewayPortForwardingRulesRuleArrayInput` via:
//
//	CellularGatewayPortForwardingRulesRuleArray{ CellularGatewayPortForwardingRulesRuleArgs{...} }
type CellularGatewayPortForwardingRulesRuleArrayInput interface {
	pulumi.Input

	ToCellularGatewayPortForwardingRulesRuleArrayOutput() CellularGatewayPortForwardingRulesRuleArrayOutput
	ToCellularGatewayPortForwardingRulesRuleArrayOutputWithContext(context.Context) CellularGatewayPortForwardingRulesRuleArrayOutput
}

type CellularGatewayPortForwardingRulesRuleArray []CellularGatewayPortForwardingRulesRuleInput

func (CellularGatewayPortForwardingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayPortForwardingRulesRule)(nil)).Elem()
}

func (i CellularGatewayPortForwardingRulesRuleArray) ToCellularGatewayPortForwardingRulesRuleArrayOutput() CellularGatewayPortForwardingRulesRuleArrayOutput {
	return i.ToCellularGatewayPortForwardingRulesRuleArrayOutputWithContext(context.Background())
}

func (i CellularGatewayPortForwardingRulesRuleArray) ToCellularGatewayPortForwardingRulesRuleArrayOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayPortForwardingRulesRuleArrayOutput)
}

type CellularGatewayPortForwardingRulesRuleOutput struct{ *pulumi.OutputState }

func (CellularGatewayPortForwardingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularGatewayPortForwardingRulesRule)(nil)).Elem()
}

func (o CellularGatewayPortForwardingRulesRuleOutput) ToCellularGatewayPortForwardingRulesRuleOutput() CellularGatewayPortForwardingRulesRuleOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesRuleOutput) ToCellularGatewayPortForwardingRulesRuleOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesRuleOutput {
	return o
}

// *any* or *restricted*. Specify the right to make inbound connections on the specified ports or port ranges. If *restricted*, a list of allowed IPs is mandatory.
func (o CellularGatewayPortForwardingRulesRuleOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
func (o CellularGatewayPortForwardingRulesRuleOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) []string { return v.AllowedIps }).(pulumi.StringArrayOutput)
}

// The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
func (o CellularGatewayPortForwardingRulesRuleOutput) LanIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.LanIp }).(pulumi.StringPtrOutput)
}

// A port or port ranges that will receive the forwarded traffic from the WAN
func (o CellularGatewayPortForwardingRulesRuleOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// A descriptive name for the rule
func (o CellularGatewayPortForwardingRulesRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// TCP or UDP
func (o CellularGatewayPortForwardingRulesRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// A port or port ranges that will be forwarded to the host on the LAN
func (o CellularGatewayPortForwardingRulesRuleOutput) PublicPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.PublicPort }).(pulumi.StringPtrOutput)
}

func (o CellularGatewayPortForwardingRulesRuleOutput) Uplink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularGatewayPortForwardingRulesRule) *string { return v.Uplink }).(pulumi.StringPtrOutput)
}

type CellularGatewayPortForwardingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (CellularGatewayPortForwardingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularGatewayPortForwardingRulesRule)(nil)).Elem()
}

func (o CellularGatewayPortForwardingRulesRuleArrayOutput) ToCellularGatewayPortForwardingRulesRuleArrayOutput() CellularGatewayPortForwardingRulesRuleArrayOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesRuleArrayOutput) ToCellularGatewayPortForwardingRulesRuleArrayOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesRuleArrayOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesRuleArrayOutput) Index(i pulumi.IntInput) CellularGatewayPortForwardingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CellularGatewayPortForwardingRulesRule {
		return vs[0].([]CellularGatewayPortForwardingRulesRule)[vs[1].(int)]
	}).(CellularGatewayPortForwardingRulesRuleOutput)
}

type CellularSimsSim struct {
	// APN configurations. If empty, the default APN will be used.
	Apns []CellularSimsSimApn `pulumi:"apns"`
	// If true, this SIM is used for boot. Must be true on single-sim devices.
	IsPrimary *bool `pulumi:"isPrimary"`
	// SIM slot being configured. Must be 'sim1' on single-sim devices.
	Slot *string `pulumi:"slot"`
}

// CellularSimsSimInput is an input type that accepts CellularSimsSimArgs and CellularSimsSimOutput values.
// You can construct a concrete instance of `CellularSimsSimInput` via:
//
//	CellularSimsSimArgs{...}
type CellularSimsSimInput interface {
	pulumi.Input

	ToCellularSimsSimOutput() CellularSimsSimOutput
	ToCellularSimsSimOutputWithContext(context.Context) CellularSimsSimOutput
}

type CellularSimsSimArgs struct {
	// APN configurations. If empty, the default APN will be used.
	Apns CellularSimsSimApnArrayInput `pulumi:"apns"`
	// If true, this SIM is used for boot. Must be true on single-sim devices.
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// SIM slot being configured. Must be 'sim1' on single-sim devices.
	Slot pulumi.StringPtrInput `pulumi:"slot"`
}

func (CellularSimsSimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSim)(nil)).Elem()
}

func (i CellularSimsSimArgs) ToCellularSimsSimOutput() CellularSimsSimOutput {
	return i.ToCellularSimsSimOutputWithContext(context.Background())
}

func (i CellularSimsSimArgs) ToCellularSimsSimOutputWithContext(ctx context.Context) CellularSimsSimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimOutput)
}

// CellularSimsSimArrayInput is an input type that accepts CellularSimsSimArray and CellularSimsSimArrayOutput values.
// You can construct a concrete instance of `CellularSimsSimArrayInput` via:
//
//	CellularSimsSimArray{ CellularSimsSimArgs{...} }
type CellularSimsSimArrayInput interface {
	pulumi.Input

	ToCellularSimsSimArrayOutput() CellularSimsSimArrayOutput
	ToCellularSimsSimArrayOutputWithContext(context.Context) CellularSimsSimArrayOutput
}

type CellularSimsSimArray []CellularSimsSimInput

func (CellularSimsSimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularSimsSim)(nil)).Elem()
}

func (i CellularSimsSimArray) ToCellularSimsSimArrayOutput() CellularSimsSimArrayOutput {
	return i.ToCellularSimsSimArrayOutputWithContext(context.Background())
}

func (i CellularSimsSimArray) ToCellularSimsSimArrayOutputWithContext(ctx context.Context) CellularSimsSimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimArrayOutput)
}

type CellularSimsSimOutput struct{ *pulumi.OutputState }

func (CellularSimsSimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSim)(nil)).Elem()
}

func (o CellularSimsSimOutput) ToCellularSimsSimOutput() CellularSimsSimOutput {
	return o
}

func (o CellularSimsSimOutput) ToCellularSimsSimOutputWithContext(ctx context.Context) CellularSimsSimOutput {
	return o
}

// APN configurations. If empty, the default APN will be used.
func (o CellularSimsSimOutput) Apns() CellularSimsSimApnArrayOutput {
	return o.ApplyT(func(v CellularSimsSim) []CellularSimsSimApn { return v.Apns }).(CellularSimsSimApnArrayOutput)
}

// If true, this SIM is used for boot. Must be true on single-sim devices.
func (o CellularSimsSimOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CellularSimsSim) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// SIM slot being configured. Must be 'sim1' on single-sim devices.
func (o CellularSimsSimOutput) Slot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularSimsSim) *string { return v.Slot }).(pulumi.StringPtrOutput)
}

type CellularSimsSimArrayOutput struct{ *pulumi.OutputState }

func (CellularSimsSimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularSimsSim)(nil)).Elem()
}

func (o CellularSimsSimArrayOutput) ToCellularSimsSimArrayOutput() CellularSimsSimArrayOutput {
	return o
}

func (o CellularSimsSimArrayOutput) ToCellularSimsSimArrayOutputWithContext(ctx context.Context) CellularSimsSimArrayOutput {
	return o
}

func (o CellularSimsSimArrayOutput) Index(i pulumi.IntInput) CellularSimsSimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CellularSimsSim {
		return vs[0].([]CellularSimsSim)[vs[1].(int)]
	}).(CellularSimsSimOutput)
}

type CellularSimsSimApn struct {
	// IP versions to support (permitted values include 'ipv4', 'ipv6').
	AllowedIpTypes []string `pulumi:"allowedIpTypes"`
	// APN authentication configurations.
	Authentication *CellularSimsSimApnAuthentication `pulumi:"authentication"`
	// APN name.
	Name *string `pulumi:"name"`
}

// CellularSimsSimApnInput is an input type that accepts CellularSimsSimApnArgs and CellularSimsSimApnOutput values.
// You can construct a concrete instance of `CellularSimsSimApnInput` via:
//
//	CellularSimsSimApnArgs{...}
type CellularSimsSimApnInput interface {
	pulumi.Input

	ToCellularSimsSimApnOutput() CellularSimsSimApnOutput
	ToCellularSimsSimApnOutputWithContext(context.Context) CellularSimsSimApnOutput
}

type CellularSimsSimApnArgs struct {
	// IP versions to support (permitted values include 'ipv4', 'ipv6').
	AllowedIpTypes pulumi.StringArrayInput `pulumi:"allowedIpTypes"`
	// APN authentication configurations.
	Authentication CellularSimsSimApnAuthenticationPtrInput `pulumi:"authentication"`
	// APN name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CellularSimsSimApnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimApn)(nil)).Elem()
}

func (i CellularSimsSimApnArgs) ToCellularSimsSimApnOutput() CellularSimsSimApnOutput {
	return i.ToCellularSimsSimApnOutputWithContext(context.Background())
}

func (i CellularSimsSimApnArgs) ToCellularSimsSimApnOutputWithContext(ctx context.Context) CellularSimsSimApnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimApnOutput)
}

// CellularSimsSimApnArrayInput is an input type that accepts CellularSimsSimApnArray and CellularSimsSimApnArrayOutput values.
// You can construct a concrete instance of `CellularSimsSimApnArrayInput` via:
//
//	CellularSimsSimApnArray{ CellularSimsSimApnArgs{...} }
type CellularSimsSimApnArrayInput interface {
	pulumi.Input

	ToCellularSimsSimApnArrayOutput() CellularSimsSimApnArrayOutput
	ToCellularSimsSimApnArrayOutputWithContext(context.Context) CellularSimsSimApnArrayOutput
}

type CellularSimsSimApnArray []CellularSimsSimApnInput

func (CellularSimsSimApnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularSimsSimApn)(nil)).Elem()
}

func (i CellularSimsSimApnArray) ToCellularSimsSimApnArrayOutput() CellularSimsSimApnArrayOutput {
	return i.ToCellularSimsSimApnArrayOutputWithContext(context.Background())
}

func (i CellularSimsSimApnArray) ToCellularSimsSimApnArrayOutputWithContext(ctx context.Context) CellularSimsSimApnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimApnArrayOutput)
}

type CellularSimsSimApnOutput struct{ *pulumi.OutputState }

func (CellularSimsSimApnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimApn)(nil)).Elem()
}

func (o CellularSimsSimApnOutput) ToCellularSimsSimApnOutput() CellularSimsSimApnOutput {
	return o
}

func (o CellularSimsSimApnOutput) ToCellularSimsSimApnOutputWithContext(ctx context.Context) CellularSimsSimApnOutput {
	return o
}

// IP versions to support (permitted values include 'ipv4', 'ipv6').
func (o CellularSimsSimApnOutput) AllowedIpTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CellularSimsSimApn) []string { return v.AllowedIpTypes }).(pulumi.StringArrayOutput)
}

// APN authentication configurations.
func (o CellularSimsSimApnOutput) Authentication() CellularSimsSimApnAuthenticationPtrOutput {
	return o.ApplyT(func(v CellularSimsSimApn) *CellularSimsSimApnAuthentication { return v.Authentication }).(CellularSimsSimApnAuthenticationPtrOutput)
}

// APN name.
func (o CellularSimsSimApnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularSimsSimApn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CellularSimsSimApnArrayOutput struct{ *pulumi.OutputState }

func (CellularSimsSimApnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CellularSimsSimApn)(nil)).Elem()
}

func (o CellularSimsSimApnArrayOutput) ToCellularSimsSimApnArrayOutput() CellularSimsSimApnArrayOutput {
	return o
}

func (o CellularSimsSimApnArrayOutput) ToCellularSimsSimApnArrayOutputWithContext(ctx context.Context) CellularSimsSimApnArrayOutput {
	return o
}

func (o CellularSimsSimApnArrayOutput) Index(i pulumi.IntInput) CellularSimsSimApnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CellularSimsSimApn {
		return vs[0].([]CellularSimsSimApn)[vs[1].(int)]
	}).(CellularSimsSimApnOutput)
}

type CellularSimsSimApnAuthentication struct {
	// APN password, if type is set (if APN password is not supplied, the password is left unchanged).
	Password *string `pulumi:"password"`
	// APN auth type.
	Type *string `pulumi:"type"`
	// APN username, if type is set.
	Username *string `pulumi:"username"`
}

// CellularSimsSimApnAuthenticationInput is an input type that accepts CellularSimsSimApnAuthenticationArgs and CellularSimsSimApnAuthenticationOutput values.
// You can construct a concrete instance of `CellularSimsSimApnAuthenticationInput` via:
//
//	CellularSimsSimApnAuthenticationArgs{...}
type CellularSimsSimApnAuthenticationInput interface {
	pulumi.Input

	ToCellularSimsSimApnAuthenticationOutput() CellularSimsSimApnAuthenticationOutput
	ToCellularSimsSimApnAuthenticationOutputWithContext(context.Context) CellularSimsSimApnAuthenticationOutput
}

type CellularSimsSimApnAuthenticationArgs struct {
	// APN password, if type is set (if APN password is not supplied, the password is left unchanged).
	Password pulumi.StringPtrInput `pulumi:"password"`
	// APN auth type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// APN username, if type is set.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (CellularSimsSimApnAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimApnAuthentication)(nil)).Elem()
}

func (i CellularSimsSimApnAuthenticationArgs) ToCellularSimsSimApnAuthenticationOutput() CellularSimsSimApnAuthenticationOutput {
	return i.ToCellularSimsSimApnAuthenticationOutputWithContext(context.Background())
}

func (i CellularSimsSimApnAuthenticationArgs) ToCellularSimsSimApnAuthenticationOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimApnAuthenticationOutput)
}

func (i CellularSimsSimApnAuthenticationArgs) ToCellularSimsSimApnAuthenticationPtrOutput() CellularSimsSimApnAuthenticationPtrOutput {
	return i.ToCellularSimsSimApnAuthenticationPtrOutputWithContext(context.Background())
}

func (i CellularSimsSimApnAuthenticationArgs) ToCellularSimsSimApnAuthenticationPtrOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimApnAuthenticationOutput).ToCellularSimsSimApnAuthenticationPtrOutputWithContext(ctx)
}

// CellularSimsSimApnAuthenticationPtrInput is an input type that accepts CellularSimsSimApnAuthenticationArgs, CellularSimsSimApnAuthenticationPtr and CellularSimsSimApnAuthenticationPtrOutput values.
// You can construct a concrete instance of `CellularSimsSimApnAuthenticationPtrInput` via:
//
//	        CellularSimsSimApnAuthenticationArgs{...}
//
//	or:
//
//	        nil
type CellularSimsSimApnAuthenticationPtrInput interface {
	pulumi.Input

	ToCellularSimsSimApnAuthenticationPtrOutput() CellularSimsSimApnAuthenticationPtrOutput
	ToCellularSimsSimApnAuthenticationPtrOutputWithContext(context.Context) CellularSimsSimApnAuthenticationPtrOutput
}

type cellularSimsSimApnAuthenticationPtrType CellularSimsSimApnAuthenticationArgs

func CellularSimsSimApnAuthenticationPtr(v *CellularSimsSimApnAuthenticationArgs) CellularSimsSimApnAuthenticationPtrInput {
	return (*cellularSimsSimApnAuthenticationPtrType)(v)
}

func (*cellularSimsSimApnAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularSimsSimApnAuthentication)(nil)).Elem()
}

func (i *cellularSimsSimApnAuthenticationPtrType) ToCellularSimsSimApnAuthenticationPtrOutput() CellularSimsSimApnAuthenticationPtrOutput {
	return i.ToCellularSimsSimApnAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cellularSimsSimApnAuthenticationPtrType) ToCellularSimsSimApnAuthenticationPtrOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimApnAuthenticationPtrOutput)
}

type CellularSimsSimApnAuthenticationOutput struct{ *pulumi.OutputState }

func (CellularSimsSimApnAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimApnAuthentication)(nil)).Elem()
}

func (o CellularSimsSimApnAuthenticationOutput) ToCellularSimsSimApnAuthenticationOutput() CellularSimsSimApnAuthenticationOutput {
	return o
}

func (o CellularSimsSimApnAuthenticationOutput) ToCellularSimsSimApnAuthenticationOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationOutput {
	return o
}

func (o CellularSimsSimApnAuthenticationOutput) ToCellularSimsSimApnAuthenticationPtrOutput() CellularSimsSimApnAuthenticationPtrOutput {
	return o.ToCellularSimsSimApnAuthenticationPtrOutputWithContext(context.Background())
}

func (o CellularSimsSimApnAuthenticationOutput) ToCellularSimsSimApnAuthenticationPtrOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CellularSimsSimApnAuthentication) *CellularSimsSimApnAuthentication {
		return &v
	}).(CellularSimsSimApnAuthenticationPtrOutput)
}

// APN password, if type is set (if APN password is not supplied, the password is left unchanged).
func (o CellularSimsSimApnAuthenticationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularSimsSimApnAuthentication) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// APN auth type.
func (o CellularSimsSimApnAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularSimsSimApnAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// APN username, if type is set.
func (o CellularSimsSimApnAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CellularSimsSimApnAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type CellularSimsSimApnAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CellularSimsSimApnAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularSimsSimApnAuthentication)(nil)).Elem()
}

func (o CellularSimsSimApnAuthenticationPtrOutput) ToCellularSimsSimApnAuthenticationPtrOutput() CellularSimsSimApnAuthenticationPtrOutput {
	return o
}

func (o CellularSimsSimApnAuthenticationPtrOutput) ToCellularSimsSimApnAuthenticationPtrOutputWithContext(ctx context.Context) CellularSimsSimApnAuthenticationPtrOutput {
	return o
}

func (o CellularSimsSimApnAuthenticationPtrOutput) Elem() CellularSimsSimApnAuthenticationOutput {
	return o.ApplyT(func(v *CellularSimsSimApnAuthentication) CellularSimsSimApnAuthentication {
		if v != nil {
			return *v
		}
		var ret CellularSimsSimApnAuthentication
		return ret
	}).(CellularSimsSimApnAuthenticationOutput)
}

// APN password, if type is set (if APN password is not supplied, the password is left unchanged).
func (o CellularSimsSimApnAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularSimsSimApnAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// APN auth type.
func (o CellularSimsSimApnAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularSimsSimApnAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// APN username, if type is set.
func (o CellularSimsSimApnAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularSimsSimApnAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type CellularSimsSimFailover struct {
	// Failover to secondary SIM (optional)
	Enabled *bool `pulumi:"enabled"`
	// Failover timeout in seconds (optional)
	Timeout *int `pulumi:"timeout"`
}

// CellularSimsSimFailoverInput is an input type that accepts CellularSimsSimFailoverArgs and CellularSimsSimFailoverOutput values.
// You can construct a concrete instance of `CellularSimsSimFailoverInput` via:
//
//	CellularSimsSimFailoverArgs{...}
type CellularSimsSimFailoverInput interface {
	pulumi.Input

	ToCellularSimsSimFailoverOutput() CellularSimsSimFailoverOutput
	ToCellularSimsSimFailoverOutputWithContext(context.Context) CellularSimsSimFailoverOutput
}

type CellularSimsSimFailoverArgs struct {
	// Failover to secondary SIM (optional)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Failover timeout in seconds (optional)
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (CellularSimsSimFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimFailover)(nil)).Elem()
}

func (i CellularSimsSimFailoverArgs) ToCellularSimsSimFailoverOutput() CellularSimsSimFailoverOutput {
	return i.ToCellularSimsSimFailoverOutputWithContext(context.Background())
}

func (i CellularSimsSimFailoverArgs) ToCellularSimsSimFailoverOutputWithContext(ctx context.Context) CellularSimsSimFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimFailoverOutput)
}

func (i CellularSimsSimFailoverArgs) ToCellularSimsSimFailoverPtrOutput() CellularSimsSimFailoverPtrOutput {
	return i.ToCellularSimsSimFailoverPtrOutputWithContext(context.Background())
}

func (i CellularSimsSimFailoverArgs) ToCellularSimsSimFailoverPtrOutputWithContext(ctx context.Context) CellularSimsSimFailoverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimFailoverOutput).ToCellularSimsSimFailoverPtrOutputWithContext(ctx)
}

// CellularSimsSimFailoverPtrInput is an input type that accepts CellularSimsSimFailoverArgs, CellularSimsSimFailoverPtr and CellularSimsSimFailoverPtrOutput values.
// You can construct a concrete instance of `CellularSimsSimFailoverPtrInput` via:
//
//	        CellularSimsSimFailoverArgs{...}
//
//	or:
//
//	        nil
type CellularSimsSimFailoverPtrInput interface {
	pulumi.Input

	ToCellularSimsSimFailoverPtrOutput() CellularSimsSimFailoverPtrOutput
	ToCellularSimsSimFailoverPtrOutputWithContext(context.Context) CellularSimsSimFailoverPtrOutput
}

type cellularSimsSimFailoverPtrType CellularSimsSimFailoverArgs

func CellularSimsSimFailoverPtr(v *CellularSimsSimFailoverArgs) CellularSimsSimFailoverPtrInput {
	return (*cellularSimsSimFailoverPtrType)(v)
}

func (*cellularSimsSimFailoverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularSimsSimFailover)(nil)).Elem()
}

func (i *cellularSimsSimFailoverPtrType) ToCellularSimsSimFailoverPtrOutput() CellularSimsSimFailoverPtrOutput {
	return i.ToCellularSimsSimFailoverPtrOutputWithContext(context.Background())
}

func (i *cellularSimsSimFailoverPtrType) ToCellularSimsSimFailoverPtrOutputWithContext(ctx context.Context) CellularSimsSimFailoverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularSimsSimFailoverPtrOutput)
}

type CellularSimsSimFailoverOutput struct{ *pulumi.OutputState }

func (CellularSimsSimFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CellularSimsSimFailover)(nil)).Elem()
}

func (o CellularSimsSimFailoverOutput) ToCellularSimsSimFailoverOutput() CellularSimsSimFailoverOutput {
	return o
}

func (o CellularSimsSimFailoverOutput) ToCellularSimsSimFailoverOutputWithContext(ctx context.Context) CellularSimsSimFailoverOutput {
	return o
}

func (o CellularSimsSimFailoverOutput) ToCellularSimsSimFailoverPtrOutput() CellularSimsSimFailoverPtrOutput {
	return o.ToCellularSimsSimFailoverPtrOutputWithContext(context.Background())
}

func (o CellularSimsSimFailoverOutput) ToCellularSimsSimFailoverPtrOutputWithContext(ctx context.Context) CellularSimsSimFailoverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CellularSimsSimFailover) *CellularSimsSimFailover {
		return &v
	}).(CellularSimsSimFailoverPtrOutput)
}

// Failover to secondary SIM (optional)
func (o CellularSimsSimFailoverOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CellularSimsSimFailover) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Failover timeout in seconds (optional)
func (o CellularSimsSimFailoverOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CellularSimsSimFailover) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type CellularSimsSimFailoverPtrOutput struct{ *pulumi.OutputState }

func (CellularSimsSimFailoverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularSimsSimFailover)(nil)).Elem()
}

func (o CellularSimsSimFailoverPtrOutput) ToCellularSimsSimFailoverPtrOutput() CellularSimsSimFailoverPtrOutput {
	return o
}

func (o CellularSimsSimFailoverPtrOutput) ToCellularSimsSimFailoverPtrOutputWithContext(ctx context.Context) CellularSimsSimFailoverPtrOutput {
	return o
}

func (o CellularSimsSimFailoverPtrOutput) Elem() CellularSimsSimFailoverOutput {
	return o.ApplyT(func(v *CellularSimsSimFailover) CellularSimsSimFailover {
		if v != nil {
			return *v
		}
		var ret CellularSimsSimFailover
		return ret
	}).(CellularSimsSimFailoverOutput)
}

// Failover to secondary SIM (optional)
func (o CellularSimsSimFailoverPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CellularSimsSimFailover) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Failover timeout in seconds (optional)
func (o CellularSimsSimFailoverPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CellularSimsSimFailover) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type LiveToolsArpTableCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsArpTableCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsArpTableCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsArpTableCallbackInput is an input type that accepts LiveToolsArpTableCallbackArgs and LiveToolsArpTableCallbackOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackInput` via:
//
//	LiveToolsArpTableCallbackArgs{...}
type LiveToolsArpTableCallbackInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackOutput() LiveToolsArpTableCallbackOutput
	ToLiveToolsArpTableCallbackOutputWithContext(context.Context) LiveToolsArpTableCallbackOutput
}

type LiveToolsArpTableCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsArpTableCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsArpTableCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsArpTableCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallback)(nil)).Elem()
}

func (i LiveToolsArpTableCallbackArgs) ToLiveToolsArpTableCallbackOutput() LiveToolsArpTableCallbackOutput {
	return i.ToLiveToolsArpTableCallbackOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackArgs) ToLiveToolsArpTableCallbackOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackOutput)
}

func (i LiveToolsArpTableCallbackArgs) ToLiveToolsArpTableCallbackPtrOutput() LiveToolsArpTableCallbackPtrOutput {
	return i.ToLiveToolsArpTableCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackArgs) ToLiveToolsArpTableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackOutput).ToLiveToolsArpTableCallbackPtrOutputWithContext(ctx)
}

// LiveToolsArpTableCallbackPtrInput is an input type that accepts LiveToolsArpTableCallbackArgs, LiveToolsArpTableCallbackPtr and LiveToolsArpTableCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackPtrInput` via:
//
//	        LiveToolsArpTableCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsArpTableCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackPtrOutput() LiveToolsArpTableCallbackPtrOutput
	ToLiveToolsArpTableCallbackPtrOutputWithContext(context.Context) LiveToolsArpTableCallbackPtrOutput
}

type liveToolsArpTableCallbackPtrType LiveToolsArpTableCallbackArgs

func LiveToolsArpTableCallbackPtr(v *LiveToolsArpTableCallbackArgs) LiveToolsArpTableCallbackPtrInput {
	return (*liveToolsArpTableCallbackPtrType)(v)
}

func (*liveToolsArpTableCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallback)(nil)).Elem()
}

func (i *liveToolsArpTableCallbackPtrType) ToLiveToolsArpTableCallbackPtrOutput() LiveToolsArpTableCallbackPtrOutput {
	return i.ToLiveToolsArpTableCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsArpTableCallbackPtrType) ToLiveToolsArpTableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackPtrOutput)
}

type LiveToolsArpTableCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallback)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackOutput) ToLiveToolsArpTableCallbackOutput() LiveToolsArpTableCallbackOutput {
	return o
}

func (o LiveToolsArpTableCallbackOutput) ToLiveToolsArpTableCallbackOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackOutput {
	return o
}

func (o LiveToolsArpTableCallbackOutput) ToLiveToolsArpTableCallbackPtrOutput() LiveToolsArpTableCallbackPtrOutput {
	return o.ToLiveToolsArpTableCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsArpTableCallbackOutput) ToLiveToolsArpTableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsArpTableCallback) *LiveToolsArpTableCallback {
		return &v
	}).(LiveToolsArpTableCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsArpTableCallbackOutput) HttpServer() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallback) *LiveToolsArpTableCallbackHttpServer { return v.HttpServer }).(LiveToolsArpTableCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsArpTableCallbackOutput) PayloadTemplate() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallback) *LiveToolsArpTableCallbackPayloadTemplate { return v.PayloadTemplate }).(LiveToolsArpTableCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsArpTableCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsArpTableCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallback)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackPtrOutput) ToLiveToolsArpTableCallbackPtrOutput() LiveToolsArpTableCallbackPtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackPtrOutput) ToLiveToolsArpTableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackPtrOutput) Elem() LiveToolsArpTableCallbackOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallback) LiveToolsArpTableCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsArpTableCallback
		return ret
	}).(LiveToolsArpTableCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsArpTableCallbackPtrOutput) HttpServer() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallback) *LiveToolsArpTableCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsArpTableCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsArpTableCallbackPtrOutput) PayloadTemplate() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallback) *LiveToolsArpTableCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsArpTableCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsArpTableCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsArpTableCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsArpTableCallbackHttpServerInput is an input type that accepts LiveToolsArpTableCallbackHttpServerArgs and LiveToolsArpTableCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackHttpServerInput` via:
//
//	LiveToolsArpTableCallbackHttpServerArgs{...}
type LiveToolsArpTableCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackHttpServerOutput() LiveToolsArpTableCallbackHttpServerOutput
	ToLiveToolsArpTableCallbackHttpServerOutputWithContext(context.Context) LiveToolsArpTableCallbackHttpServerOutput
}

type LiveToolsArpTableCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsArpTableCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsArpTableCallbackHttpServerArgs) ToLiveToolsArpTableCallbackHttpServerOutput() LiveToolsArpTableCallbackHttpServerOutput {
	return i.ToLiveToolsArpTableCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackHttpServerArgs) ToLiveToolsArpTableCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackHttpServerOutput)
}

func (i LiveToolsArpTableCallbackHttpServerArgs) ToLiveToolsArpTableCallbackHttpServerPtrOutput() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return i.ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackHttpServerArgs) ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackHttpServerOutput).ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsArpTableCallbackHttpServerPtrInput is an input type that accepts LiveToolsArpTableCallbackHttpServerArgs, LiveToolsArpTableCallbackHttpServerPtr and LiveToolsArpTableCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackHttpServerPtrInput` via:
//
//	        LiveToolsArpTableCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsArpTableCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackHttpServerPtrOutput() LiveToolsArpTableCallbackHttpServerPtrOutput
	ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsArpTableCallbackHttpServerPtrOutput
}

type liveToolsArpTableCallbackHttpServerPtrType LiveToolsArpTableCallbackHttpServerArgs

func LiveToolsArpTableCallbackHttpServerPtr(v *LiveToolsArpTableCallbackHttpServerArgs) LiveToolsArpTableCallbackHttpServerPtrInput {
	return (*liveToolsArpTableCallbackHttpServerPtrType)(v)
}

func (*liveToolsArpTableCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsArpTableCallbackHttpServerPtrType) ToLiveToolsArpTableCallbackHttpServerPtrOutput() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return i.ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsArpTableCallbackHttpServerPtrType) ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackHttpServerPtrOutput)
}

type LiveToolsArpTableCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackHttpServerOutput) ToLiveToolsArpTableCallbackHttpServerOutput() LiveToolsArpTableCallbackHttpServerOutput {
	return o
}

func (o LiveToolsArpTableCallbackHttpServerOutput) ToLiveToolsArpTableCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerOutput {
	return o
}

func (o LiveToolsArpTableCallbackHttpServerOutput) ToLiveToolsArpTableCallbackHttpServerPtrOutput() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o.ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsArpTableCallbackHttpServerOutput) ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsArpTableCallbackHttpServer) *LiveToolsArpTableCallbackHttpServer {
		return &v
	}).(LiveToolsArpTableCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsArpTableCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackHttpServerPtrOutput) ToLiveToolsArpTableCallbackHttpServerPtrOutput() LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackHttpServerPtrOutput) ToLiveToolsArpTableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackHttpServerPtrOutput) Elem() LiveToolsArpTableCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallbackHttpServer) LiveToolsArpTableCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsArpTableCallbackHttpServer
		return ret
	}).(LiveToolsArpTableCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsArpTableCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsArpTableCallbackPayloadTemplateInput is an input type that accepts LiveToolsArpTableCallbackPayloadTemplateArgs and LiveToolsArpTableCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackPayloadTemplateInput` via:
//
//	LiveToolsArpTableCallbackPayloadTemplateArgs{...}
type LiveToolsArpTableCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackPayloadTemplateOutput() LiveToolsArpTableCallbackPayloadTemplateOutput
	ToLiveToolsArpTableCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsArpTableCallbackPayloadTemplateOutput
}

type LiveToolsArpTableCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsArpTableCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsArpTableCallbackPayloadTemplateArgs) ToLiveToolsArpTableCallbackPayloadTemplateOutput() LiveToolsArpTableCallbackPayloadTemplateOutput {
	return i.ToLiveToolsArpTableCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackPayloadTemplateArgs) ToLiveToolsArpTableCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackPayloadTemplateOutput)
}

func (i LiveToolsArpTableCallbackPayloadTemplateArgs) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutput() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsArpTableCallbackPayloadTemplateArgs) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackPayloadTemplateOutput).ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsArpTableCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsArpTableCallbackPayloadTemplateArgs, LiveToolsArpTableCallbackPayloadTemplatePtr and LiveToolsArpTableCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsArpTableCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsArpTableCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsArpTableCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsArpTableCallbackPayloadTemplatePtrOutput() LiveToolsArpTableCallbackPayloadTemplatePtrOutput
	ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsArpTableCallbackPayloadTemplatePtrOutput
}

type liveToolsArpTableCallbackPayloadTemplatePtrType LiveToolsArpTableCallbackPayloadTemplateArgs

func LiveToolsArpTableCallbackPayloadTemplatePtr(v *LiveToolsArpTableCallbackPayloadTemplateArgs) LiveToolsArpTableCallbackPayloadTemplatePtrInput {
	return (*liveToolsArpTableCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsArpTableCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsArpTableCallbackPayloadTemplatePtrType) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutput() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsArpTableCallbackPayloadTemplatePtrType) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableCallbackPayloadTemplatePtrOutput)
}

type LiveToolsArpTableCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackPayloadTemplateOutput) ToLiveToolsArpTableCallbackPayloadTemplateOutput() LiveToolsArpTableCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsArpTableCallbackPayloadTemplateOutput) ToLiveToolsArpTableCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsArpTableCallbackPayloadTemplateOutput) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutput() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsArpTableCallbackPayloadTemplateOutput) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsArpTableCallbackPayloadTemplate) *LiveToolsArpTableCallbackPayloadTemplate {
		return &v
	}).(LiveToolsArpTableCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsArpTableCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsArpTableCallbackPayloadTemplatePtrOutput) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutput() LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackPayloadTemplatePtrOutput) ToLiveToolsArpTableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsArpTableCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsArpTableCallbackPayloadTemplatePtrOutput) Elem() LiveToolsArpTableCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallbackPayloadTemplate) LiveToolsArpTableCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsArpTableCallbackPayloadTemplate
		return ret
	}).(LiveToolsArpTableCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsArpTableCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableEntry struct {
	// The IP address of the ARP table entry
	Ip *string `pulumi:"ip"`
	// Time of the last update of the ARP table entry
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The MAC address of the ARP table entry
	Mac *string `pulumi:"mac"`
	// The VLAN ID of the ARP table entry
	VlanId *int `pulumi:"vlanId"`
}

// LiveToolsArpTableEntryInput is an input type that accepts LiveToolsArpTableEntryArgs and LiveToolsArpTableEntryOutput values.
// You can construct a concrete instance of `LiveToolsArpTableEntryInput` via:
//
//	LiveToolsArpTableEntryArgs{...}
type LiveToolsArpTableEntryInput interface {
	pulumi.Input

	ToLiveToolsArpTableEntryOutput() LiveToolsArpTableEntryOutput
	ToLiveToolsArpTableEntryOutputWithContext(context.Context) LiveToolsArpTableEntryOutput
}

type LiveToolsArpTableEntryArgs struct {
	// The IP address of the ARP table entry
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Time of the last update of the ARP table entry
	LastUpdatedAt pulumi.StringPtrInput `pulumi:"lastUpdatedAt"`
	// The MAC address of the ARP table entry
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// The VLAN ID of the ARP table entry
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (LiveToolsArpTableEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableEntry)(nil)).Elem()
}

func (i LiveToolsArpTableEntryArgs) ToLiveToolsArpTableEntryOutput() LiveToolsArpTableEntryOutput {
	return i.ToLiveToolsArpTableEntryOutputWithContext(context.Background())
}

func (i LiveToolsArpTableEntryArgs) ToLiveToolsArpTableEntryOutputWithContext(ctx context.Context) LiveToolsArpTableEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableEntryOutput)
}

// LiveToolsArpTableEntryArrayInput is an input type that accepts LiveToolsArpTableEntryArray and LiveToolsArpTableEntryArrayOutput values.
// You can construct a concrete instance of `LiveToolsArpTableEntryArrayInput` via:
//
//	LiveToolsArpTableEntryArray{ LiveToolsArpTableEntryArgs{...} }
type LiveToolsArpTableEntryArrayInput interface {
	pulumi.Input

	ToLiveToolsArpTableEntryArrayOutput() LiveToolsArpTableEntryArrayOutput
	ToLiveToolsArpTableEntryArrayOutputWithContext(context.Context) LiveToolsArpTableEntryArrayOutput
}

type LiveToolsArpTableEntryArray []LiveToolsArpTableEntryInput

func (LiveToolsArpTableEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsArpTableEntry)(nil)).Elem()
}

func (i LiveToolsArpTableEntryArray) ToLiveToolsArpTableEntryArrayOutput() LiveToolsArpTableEntryArrayOutput {
	return i.ToLiveToolsArpTableEntryArrayOutputWithContext(context.Background())
}

func (i LiveToolsArpTableEntryArray) ToLiveToolsArpTableEntryArrayOutputWithContext(ctx context.Context) LiveToolsArpTableEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableEntryArrayOutput)
}

type LiveToolsArpTableEntryOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableEntry)(nil)).Elem()
}

func (o LiveToolsArpTableEntryOutput) ToLiveToolsArpTableEntryOutput() LiveToolsArpTableEntryOutput {
	return o
}

func (o LiveToolsArpTableEntryOutput) ToLiveToolsArpTableEntryOutputWithContext(ctx context.Context) LiveToolsArpTableEntryOutput {
	return o
}

// The IP address of the ARP table entry
func (o LiveToolsArpTableEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Time of the last update of the ARP table entry
func (o LiveToolsArpTableEntryOutput) LastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableEntry) *string { return v.LastUpdatedAt }).(pulumi.StringPtrOutput)
}

// The MAC address of the ARP table entry
func (o LiveToolsArpTableEntryOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableEntry) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// The VLAN ID of the ARP table entry
func (o LiveToolsArpTableEntryOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableEntry) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type LiveToolsArpTableEntryArrayOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsArpTableEntry)(nil)).Elem()
}

func (o LiveToolsArpTableEntryArrayOutput) ToLiveToolsArpTableEntryArrayOutput() LiveToolsArpTableEntryArrayOutput {
	return o
}

func (o LiveToolsArpTableEntryArrayOutput) ToLiveToolsArpTableEntryArrayOutputWithContext(ctx context.Context) LiveToolsArpTableEntryArrayOutput {
	return o
}

func (o LiveToolsArpTableEntryArrayOutput) Index(i pulumi.IntInput) LiveToolsArpTableEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LiveToolsArpTableEntry {
		return vs[0].([]LiveToolsArpTableEntry)[vs[1].(int)]
	}).(LiveToolsArpTableEntryOutput)
}

type LiveToolsArpTableRequest struct {
	// Device serial number
	Serial *string `pulumi:"serial"`
}

// LiveToolsArpTableRequestInput is an input type that accepts LiveToolsArpTableRequestArgs and LiveToolsArpTableRequestOutput values.
// You can construct a concrete instance of `LiveToolsArpTableRequestInput` via:
//
//	LiveToolsArpTableRequestArgs{...}
type LiveToolsArpTableRequestInput interface {
	pulumi.Input

	ToLiveToolsArpTableRequestOutput() LiveToolsArpTableRequestOutput
	ToLiveToolsArpTableRequestOutputWithContext(context.Context) LiveToolsArpTableRequestOutput
}

type LiveToolsArpTableRequestArgs struct {
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (LiveToolsArpTableRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableRequest)(nil)).Elem()
}

func (i LiveToolsArpTableRequestArgs) ToLiveToolsArpTableRequestOutput() LiveToolsArpTableRequestOutput {
	return i.ToLiveToolsArpTableRequestOutputWithContext(context.Background())
}

func (i LiveToolsArpTableRequestArgs) ToLiveToolsArpTableRequestOutputWithContext(ctx context.Context) LiveToolsArpTableRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableRequestOutput)
}

func (i LiveToolsArpTableRequestArgs) ToLiveToolsArpTableRequestPtrOutput() LiveToolsArpTableRequestPtrOutput {
	return i.ToLiveToolsArpTableRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsArpTableRequestArgs) ToLiveToolsArpTableRequestPtrOutputWithContext(ctx context.Context) LiveToolsArpTableRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableRequestOutput).ToLiveToolsArpTableRequestPtrOutputWithContext(ctx)
}

// LiveToolsArpTableRequestPtrInput is an input type that accepts LiveToolsArpTableRequestArgs, LiveToolsArpTableRequestPtr and LiveToolsArpTableRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsArpTableRequestPtrInput` via:
//
//	        LiveToolsArpTableRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsArpTableRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsArpTableRequestPtrOutput() LiveToolsArpTableRequestPtrOutput
	ToLiveToolsArpTableRequestPtrOutputWithContext(context.Context) LiveToolsArpTableRequestPtrOutput
}

type liveToolsArpTableRequestPtrType LiveToolsArpTableRequestArgs

func LiveToolsArpTableRequestPtr(v *LiveToolsArpTableRequestArgs) LiveToolsArpTableRequestPtrInput {
	return (*liveToolsArpTableRequestPtrType)(v)
}

func (*liveToolsArpTableRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableRequest)(nil)).Elem()
}

func (i *liveToolsArpTableRequestPtrType) ToLiveToolsArpTableRequestPtrOutput() LiveToolsArpTableRequestPtrOutput {
	return i.ToLiveToolsArpTableRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsArpTableRequestPtrType) ToLiveToolsArpTableRequestPtrOutputWithContext(ctx context.Context) LiveToolsArpTableRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsArpTableRequestPtrOutput)
}

type LiveToolsArpTableRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsArpTableRequest)(nil)).Elem()
}

func (o LiveToolsArpTableRequestOutput) ToLiveToolsArpTableRequestOutput() LiveToolsArpTableRequestOutput {
	return o
}

func (o LiveToolsArpTableRequestOutput) ToLiveToolsArpTableRequestOutputWithContext(ctx context.Context) LiveToolsArpTableRequestOutput {
	return o
}

func (o LiveToolsArpTableRequestOutput) ToLiveToolsArpTableRequestPtrOutput() LiveToolsArpTableRequestPtrOutput {
	return o.ToLiveToolsArpTableRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsArpTableRequestOutput) ToLiveToolsArpTableRequestPtrOutputWithContext(ctx context.Context) LiveToolsArpTableRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsArpTableRequest) *LiveToolsArpTableRequest {
		return &v
	}).(LiveToolsArpTableRequestPtrOutput)
}

// Device serial number
func (o LiveToolsArpTableRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsArpTableRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type LiveToolsArpTableRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsArpTableRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsArpTableRequest)(nil)).Elem()
}

func (o LiveToolsArpTableRequestPtrOutput) ToLiveToolsArpTableRequestPtrOutput() LiveToolsArpTableRequestPtrOutput {
	return o
}

func (o LiveToolsArpTableRequestPtrOutput) ToLiveToolsArpTableRequestPtrOutputWithContext(ctx context.Context) LiveToolsArpTableRequestPtrOutput {
	return o
}

func (o LiveToolsArpTableRequestPtrOutput) Elem() LiveToolsArpTableRequestOutput {
	return o.ApplyT(func(v *LiveToolsArpTableRequest) LiveToolsArpTableRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsArpTableRequest
		return ret
	}).(LiveToolsArpTableRequestOutput)
}

// Device serial number
func (o LiveToolsArpTableRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsArpTableRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsCableCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsCableCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsCableCallbackInput is an input type that accepts LiveToolsCableCallbackArgs and LiveToolsCableCallbackOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackInput` via:
//
//	LiveToolsCableCallbackArgs{...}
type LiveToolsCableCallbackInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackOutput() LiveToolsCableCallbackOutput
	ToLiveToolsCableCallbackOutputWithContext(context.Context) LiveToolsCableCallbackOutput
}

type LiveToolsCableCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsCableCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsCableCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsCableCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallback)(nil)).Elem()
}

func (i LiveToolsCableCallbackArgs) ToLiveToolsCableCallbackOutput() LiveToolsCableCallbackOutput {
	return i.ToLiveToolsCableCallbackOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackArgs) ToLiveToolsCableCallbackOutputWithContext(ctx context.Context) LiveToolsCableCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackOutput)
}

func (i LiveToolsCableCallbackArgs) ToLiveToolsCableCallbackPtrOutput() LiveToolsCableCallbackPtrOutput {
	return i.ToLiveToolsCableCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackArgs) ToLiveToolsCableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackOutput).ToLiveToolsCableCallbackPtrOutputWithContext(ctx)
}

// LiveToolsCableCallbackPtrInput is an input type that accepts LiveToolsCableCallbackArgs, LiveToolsCableCallbackPtr and LiveToolsCableCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackPtrInput` via:
//
//	        LiveToolsCableCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsCableCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackPtrOutput() LiveToolsCableCallbackPtrOutput
	ToLiveToolsCableCallbackPtrOutputWithContext(context.Context) LiveToolsCableCallbackPtrOutput
}

type liveToolsCableCallbackPtrType LiveToolsCableCallbackArgs

func LiveToolsCableCallbackPtr(v *LiveToolsCableCallbackArgs) LiveToolsCableCallbackPtrInput {
	return (*liveToolsCableCallbackPtrType)(v)
}

func (*liveToolsCableCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallback)(nil)).Elem()
}

func (i *liveToolsCableCallbackPtrType) ToLiveToolsCableCallbackPtrOutput() LiveToolsCableCallbackPtrOutput {
	return i.ToLiveToolsCableCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsCableCallbackPtrType) ToLiveToolsCableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackPtrOutput)
}

type LiveToolsCableCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallback)(nil)).Elem()
}

func (o LiveToolsCableCallbackOutput) ToLiveToolsCableCallbackOutput() LiveToolsCableCallbackOutput {
	return o
}

func (o LiveToolsCableCallbackOutput) ToLiveToolsCableCallbackOutputWithContext(ctx context.Context) LiveToolsCableCallbackOutput {
	return o
}

func (o LiveToolsCableCallbackOutput) ToLiveToolsCableCallbackPtrOutput() LiveToolsCableCallbackPtrOutput {
	return o.ToLiveToolsCableCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsCableCallbackOutput) ToLiveToolsCableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsCableCallback) *LiveToolsCableCallback {
		return &v
	}).(LiveToolsCableCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsCableCallbackOutput) HttpServer() LiveToolsCableCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallback) *LiveToolsCableCallbackHttpServer { return v.HttpServer }).(LiveToolsCableCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsCableCallbackOutput) PayloadTemplate() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallback) *LiveToolsCableCallbackPayloadTemplate { return v.PayloadTemplate }).(LiveToolsCableCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsCableCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsCableCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallback)(nil)).Elem()
}

func (o LiveToolsCableCallbackPtrOutput) ToLiveToolsCableCallbackPtrOutput() LiveToolsCableCallbackPtrOutput {
	return o
}

func (o LiveToolsCableCallbackPtrOutput) ToLiveToolsCableCallbackPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPtrOutput {
	return o
}

func (o LiveToolsCableCallbackPtrOutput) Elem() LiveToolsCableCallbackOutput {
	return o.ApplyT(func(v *LiveToolsCableCallback) LiveToolsCableCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsCableCallback
		return ret
	}).(LiveToolsCableCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsCableCallbackPtrOutput) HttpServer() LiveToolsCableCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallback) *LiveToolsCableCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsCableCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsCableCallbackPtrOutput) PayloadTemplate() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallback) *LiveToolsCableCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsCableCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsCableCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsCableCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsCableCallbackHttpServerInput is an input type that accepts LiveToolsCableCallbackHttpServerArgs and LiveToolsCableCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackHttpServerInput` via:
//
//	LiveToolsCableCallbackHttpServerArgs{...}
type LiveToolsCableCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackHttpServerOutput() LiveToolsCableCallbackHttpServerOutput
	ToLiveToolsCableCallbackHttpServerOutputWithContext(context.Context) LiveToolsCableCallbackHttpServerOutput
}

type LiveToolsCableCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsCableCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsCableCallbackHttpServerArgs) ToLiveToolsCableCallbackHttpServerOutput() LiveToolsCableCallbackHttpServerOutput {
	return i.ToLiveToolsCableCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackHttpServerArgs) ToLiveToolsCableCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackHttpServerOutput)
}

func (i LiveToolsCableCallbackHttpServerArgs) ToLiveToolsCableCallbackHttpServerPtrOutput() LiveToolsCableCallbackHttpServerPtrOutput {
	return i.ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackHttpServerArgs) ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackHttpServerOutput).ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsCableCallbackHttpServerPtrInput is an input type that accepts LiveToolsCableCallbackHttpServerArgs, LiveToolsCableCallbackHttpServerPtr and LiveToolsCableCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackHttpServerPtrInput` via:
//
//	        LiveToolsCableCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsCableCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackHttpServerPtrOutput() LiveToolsCableCallbackHttpServerPtrOutput
	ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsCableCallbackHttpServerPtrOutput
}

type liveToolsCableCallbackHttpServerPtrType LiveToolsCableCallbackHttpServerArgs

func LiveToolsCableCallbackHttpServerPtr(v *LiveToolsCableCallbackHttpServerArgs) LiveToolsCableCallbackHttpServerPtrInput {
	return (*liveToolsCableCallbackHttpServerPtrType)(v)
}

func (*liveToolsCableCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsCableCallbackHttpServerPtrType) ToLiveToolsCableCallbackHttpServerPtrOutput() LiveToolsCableCallbackHttpServerPtrOutput {
	return i.ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsCableCallbackHttpServerPtrType) ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackHttpServerPtrOutput)
}

type LiveToolsCableCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsCableCallbackHttpServerOutput) ToLiveToolsCableCallbackHttpServerOutput() LiveToolsCableCallbackHttpServerOutput {
	return o
}

func (o LiveToolsCableCallbackHttpServerOutput) ToLiveToolsCableCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerOutput {
	return o
}

func (o LiveToolsCableCallbackHttpServerOutput) ToLiveToolsCableCallbackHttpServerPtrOutput() LiveToolsCableCallbackHttpServerPtrOutput {
	return o.ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsCableCallbackHttpServerOutput) ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsCableCallbackHttpServer) *LiveToolsCableCallbackHttpServer {
		return &v
	}).(LiveToolsCableCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsCableCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsCableCallbackHttpServerPtrOutput) ToLiveToolsCableCallbackHttpServerPtrOutput() LiveToolsCableCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsCableCallbackHttpServerPtrOutput) ToLiveToolsCableCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsCableCallbackHttpServerPtrOutput) Elem() LiveToolsCableCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsCableCallbackHttpServer) LiveToolsCableCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsCableCallbackHttpServer
		return ret
	}).(LiveToolsCableCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsCableCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsCableCallbackPayloadTemplateInput is an input type that accepts LiveToolsCableCallbackPayloadTemplateArgs and LiveToolsCableCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackPayloadTemplateInput` via:
//
//	LiveToolsCableCallbackPayloadTemplateArgs{...}
type LiveToolsCableCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackPayloadTemplateOutput() LiveToolsCableCallbackPayloadTemplateOutput
	ToLiveToolsCableCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsCableCallbackPayloadTemplateOutput
}

type LiveToolsCableCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsCableCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsCableCallbackPayloadTemplateArgs) ToLiveToolsCableCallbackPayloadTemplateOutput() LiveToolsCableCallbackPayloadTemplateOutput {
	return i.ToLiveToolsCableCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackPayloadTemplateArgs) ToLiveToolsCableCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackPayloadTemplateOutput)
}

func (i LiveToolsCableCallbackPayloadTemplateArgs) ToLiveToolsCableCallbackPayloadTemplatePtrOutput() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsCableCallbackPayloadTemplateArgs) ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackPayloadTemplateOutput).ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsCableCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsCableCallbackPayloadTemplateArgs, LiveToolsCableCallbackPayloadTemplatePtr and LiveToolsCableCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsCableCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsCableCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsCableCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsCableCallbackPayloadTemplatePtrOutput() LiveToolsCableCallbackPayloadTemplatePtrOutput
	ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsCableCallbackPayloadTemplatePtrOutput
}

type liveToolsCableCallbackPayloadTemplatePtrType LiveToolsCableCallbackPayloadTemplateArgs

func LiveToolsCableCallbackPayloadTemplatePtr(v *LiveToolsCableCallbackPayloadTemplateArgs) LiveToolsCableCallbackPayloadTemplatePtrInput {
	return (*liveToolsCableCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsCableCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsCableCallbackPayloadTemplatePtrType) ToLiveToolsCableCallbackPayloadTemplatePtrOutput() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsCableCallbackPayloadTemplatePtrType) ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableCallbackPayloadTemplatePtrOutput)
}

type LiveToolsCableCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsCableCallbackPayloadTemplateOutput) ToLiveToolsCableCallbackPayloadTemplateOutput() LiveToolsCableCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsCableCallbackPayloadTemplateOutput) ToLiveToolsCableCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsCableCallbackPayloadTemplateOutput) ToLiveToolsCableCallbackPayloadTemplatePtrOutput() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsCableCallbackPayloadTemplateOutput) ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsCableCallbackPayloadTemplate) *LiveToolsCableCallbackPayloadTemplate {
		return &v
	}).(LiveToolsCableCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsCableCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsCableCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsCableCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsCableCallbackPayloadTemplatePtrOutput) ToLiveToolsCableCallbackPayloadTemplatePtrOutput() LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsCableCallbackPayloadTemplatePtrOutput) ToLiveToolsCableCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsCableCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsCableCallbackPayloadTemplatePtrOutput) Elem() LiveToolsCableCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsCableCallbackPayloadTemplate) LiveToolsCableCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsCableCallbackPayloadTemplate
		return ret
	}).(LiveToolsCableCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsCableCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsCableRequest struct {
	// A list of ports for which to perform the cable test.
	Ports []string `pulumi:"ports"`
	// Device serial number
	Serial *string `pulumi:"serial"`
}

// LiveToolsCableRequestInput is an input type that accepts LiveToolsCableRequestArgs and LiveToolsCableRequestOutput values.
// You can construct a concrete instance of `LiveToolsCableRequestInput` via:
//
//	LiveToolsCableRequestArgs{...}
type LiveToolsCableRequestInput interface {
	pulumi.Input

	ToLiveToolsCableRequestOutput() LiveToolsCableRequestOutput
	ToLiveToolsCableRequestOutputWithContext(context.Context) LiveToolsCableRequestOutput
}

type LiveToolsCableRequestArgs struct {
	// A list of ports for which to perform the cable test.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (LiveToolsCableRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableRequest)(nil)).Elem()
}

func (i LiveToolsCableRequestArgs) ToLiveToolsCableRequestOutput() LiveToolsCableRequestOutput {
	return i.ToLiveToolsCableRequestOutputWithContext(context.Background())
}

func (i LiveToolsCableRequestArgs) ToLiveToolsCableRequestOutputWithContext(ctx context.Context) LiveToolsCableRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableRequestOutput)
}

func (i LiveToolsCableRequestArgs) ToLiveToolsCableRequestPtrOutput() LiveToolsCableRequestPtrOutput {
	return i.ToLiveToolsCableRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsCableRequestArgs) ToLiveToolsCableRequestPtrOutputWithContext(ctx context.Context) LiveToolsCableRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableRequestOutput).ToLiveToolsCableRequestPtrOutputWithContext(ctx)
}

// LiveToolsCableRequestPtrInput is an input type that accepts LiveToolsCableRequestArgs, LiveToolsCableRequestPtr and LiveToolsCableRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsCableRequestPtrInput` via:
//
//	        LiveToolsCableRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsCableRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsCableRequestPtrOutput() LiveToolsCableRequestPtrOutput
	ToLiveToolsCableRequestPtrOutputWithContext(context.Context) LiveToolsCableRequestPtrOutput
}

type liveToolsCableRequestPtrType LiveToolsCableRequestArgs

func LiveToolsCableRequestPtr(v *LiveToolsCableRequestArgs) LiveToolsCableRequestPtrInput {
	return (*liveToolsCableRequestPtrType)(v)
}

func (*liveToolsCableRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableRequest)(nil)).Elem()
}

func (i *liveToolsCableRequestPtrType) ToLiveToolsCableRequestPtrOutput() LiveToolsCableRequestPtrOutput {
	return i.ToLiveToolsCableRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsCableRequestPtrType) ToLiveToolsCableRequestPtrOutputWithContext(ctx context.Context) LiveToolsCableRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableRequestPtrOutput)
}

type LiveToolsCableRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsCableRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableRequest)(nil)).Elem()
}

func (o LiveToolsCableRequestOutput) ToLiveToolsCableRequestOutput() LiveToolsCableRequestOutput {
	return o
}

func (o LiveToolsCableRequestOutput) ToLiveToolsCableRequestOutputWithContext(ctx context.Context) LiveToolsCableRequestOutput {
	return o
}

func (o LiveToolsCableRequestOutput) ToLiveToolsCableRequestPtrOutput() LiveToolsCableRequestPtrOutput {
	return o.ToLiveToolsCableRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsCableRequestOutput) ToLiveToolsCableRequestPtrOutputWithContext(ctx context.Context) LiveToolsCableRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsCableRequest) *LiveToolsCableRequest {
		return &v
	}).(LiveToolsCableRequestPtrOutput)
}

// A list of ports for which to perform the cable test.
func (o LiveToolsCableRequestOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LiveToolsCableRequest) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

// Device serial number
func (o LiveToolsCableRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type LiveToolsCableRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsCableRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsCableRequest)(nil)).Elem()
}

func (o LiveToolsCableRequestPtrOutput) ToLiveToolsCableRequestPtrOutput() LiveToolsCableRequestPtrOutput {
	return o
}

func (o LiveToolsCableRequestPtrOutput) ToLiveToolsCableRequestPtrOutputWithContext(ctx context.Context) LiveToolsCableRequestPtrOutput {
	return o
}

func (o LiveToolsCableRequestPtrOutput) Elem() LiveToolsCableRequestOutput {
	return o.ApplyT(func(v *LiveToolsCableRequest) LiveToolsCableRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsCableRequest
		return ret
	}).(LiveToolsCableRequestOutput)
}

// A list of ports for which to perform the cable test.
func (o LiveToolsCableRequestPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LiveToolsCableRequest) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

// Device serial number
func (o LiveToolsCableRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsCableRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

type LiveToolsCableResult struct {
	// If an error occurred during the cable test, the error message will be populated here.
	Error *string `pulumi:"error"`
	// Results for each twisted pair within the cable.
	Pairs []LiveToolsCableResultPair `pulumi:"pairs"`
	// The port for which the test was performed.
	Port *string `pulumi:"port"`
	// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
	SpeedMbps *int `pulumi:"speedMbps"`
	// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
	Status *string `pulumi:"status"`
}

// LiveToolsCableResultInput is an input type that accepts LiveToolsCableResultArgs and LiveToolsCableResultOutput values.
// You can construct a concrete instance of `LiveToolsCableResultInput` via:
//
//	LiveToolsCableResultArgs{...}
type LiveToolsCableResultInput interface {
	pulumi.Input

	ToLiveToolsCableResultOutput() LiveToolsCableResultOutput
	ToLiveToolsCableResultOutputWithContext(context.Context) LiveToolsCableResultOutput
}

type LiveToolsCableResultArgs struct {
	// If an error occurred during the cable test, the error message will be populated here.
	Error pulumi.StringPtrInput `pulumi:"error"`
	// Results for each twisted pair within the cable.
	Pairs LiveToolsCableResultPairArrayInput `pulumi:"pairs"`
	// The port for which the test was performed.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
	SpeedMbps pulumi.IntPtrInput `pulumi:"speedMbps"`
	// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LiveToolsCableResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableResult)(nil)).Elem()
}

func (i LiveToolsCableResultArgs) ToLiveToolsCableResultOutput() LiveToolsCableResultOutput {
	return i.ToLiveToolsCableResultOutputWithContext(context.Background())
}

func (i LiveToolsCableResultArgs) ToLiveToolsCableResultOutputWithContext(ctx context.Context) LiveToolsCableResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableResultOutput)
}

// LiveToolsCableResultArrayInput is an input type that accepts LiveToolsCableResultArray and LiveToolsCableResultArrayOutput values.
// You can construct a concrete instance of `LiveToolsCableResultArrayInput` via:
//
//	LiveToolsCableResultArray{ LiveToolsCableResultArgs{...} }
type LiveToolsCableResultArrayInput interface {
	pulumi.Input

	ToLiveToolsCableResultArrayOutput() LiveToolsCableResultArrayOutput
	ToLiveToolsCableResultArrayOutputWithContext(context.Context) LiveToolsCableResultArrayOutput
}

type LiveToolsCableResultArray []LiveToolsCableResultInput

func (LiveToolsCableResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsCableResult)(nil)).Elem()
}

func (i LiveToolsCableResultArray) ToLiveToolsCableResultArrayOutput() LiveToolsCableResultArrayOutput {
	return i.ToLiveToolsCableResultArrayOutputWithContext(context.Background())
}

func (i LiveToolsCableResultArray) ToLiveToolsCableResultArrayOutputWithContext(ctx context.Context) LiveToolsCableResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableResultArrayOutput)
}

type LiveToolsCableResultOutput struct{ *pulumi.OutputState }

func (LiveToolsCableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableResult)(nil)).Elem()
}

func (o LiveToolsCableResultOutput) ToLiveToolsCableResultOutput() LiveToolsCableResultOutput {
	return o
}

func (o LiveToolsCableResultOutput) ToLiveToolsCableResultOutputWithContext(ctx context.Context) LiveToolsCableResultOutput {
	return o
}

// If an error occurred during the cable test, the error message will be populated here.
func (o LiveToolsCableResultOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResult) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// Results for each twisted pair within the cable.
func (o LiveToolsCableResultOutput) Pairs() LiveToolsCableResultPairArrayOutput {
	return o.ApplyT(func(v LiveToolsCableResult) []LiveToolsCableResultPair { return v.Pairs }).(LiveToolsCableResultPairArrayOutput)
}

// The port for which the test was performed.
func (o LiveToolsCableResultOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResult) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
func (o LiveToolsCableResultOutput) SpeedMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResult) *int { return v.SpeedMbps }).(pulumi.IntPtrOutput)
}

// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
func (o LiveToolsCableResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LiveToolsCableResultArrayOutput struct{ *pulumi.OutputState }

func (LiveToolsCableResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsCableResult)(nil)).Elem()
}

func (o LiveToolsCableResultArrayOutput) ToLiveToolsCableResultArrayOutput() LiveToolsCableResultArrayOutput {
	return o
}

func (o LiveToolsCableResultArrayOutput) ToLiveToolsCableResultArrayOutputWithContext(ctx context.Context) LiveToolsCableResultArrayOutput {
	return o
}

func (o LiveToolsCableResultArrayOutput) Index(i pulumi.IntInput) LiveToolsCableResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LiveToolsCableResult {
		return vs[0].([]LiveToolsCableResult)[vs[1].(int)]
	}).(LiveToolsCableResultOutput)
}

type LiveToolsCableResultPair struct {
	// The index of the twisted pair tested.
	Index *int `pulumi:"index"`
	// The detected length of the twisted pair.
	LengthMeters *int `pulumi:"lengthMeters"`
	// The test result of the twisted pair tested.
	Status *string `pulumi:"status"`
}

// LiveToolsCableResultPairInput is an input type that accepts LiveToolsCableResultPairArgs and LiveToolsCableResultPairOutput values.
// You can construct a concrete instance of `LiveToolsCableResultPairInput` via:
//
//	LiveToolsCableResultPairArgs{...}
type LiveToolsCableResultPairInput interface {
	pulumi.Input

	ToLiveToolsCableResultPairOutput() LiveToolsCableResultPairOutput
	ToLiveToolsCableResultPairOutputWithContext(context.Context) LiveToolsCableResultPairOutput
}

type LiveToolsCableResultPairArgs struct {
	// The index of the twisted pair tested.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// The detected length of the twisted pair.
	LengthMeters pulumi.IntPtrInput `pulumi:"lengthMeters"`
	// The test result of the twisted pair tested.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LiveToolsCableResultPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableResultPair)(nil)).Elem()
}

func (i LiveToolsCableResultPairArgs) ToLiveToolsCableResultPairOutput() LiveToolsCableResultPairOutput {
	return i.ToLiveToolsCableResultPairOutputWithContext(context.Background())
}

func (i LiveToolsCableResultPairArgs) ToLiveToolsCableResultPairOutputWithContext(ctx context.Context) LiveToolsCableResultPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableResultPairOutput)
}

// LiveToolsCableResultPairArrayInput is an input type that accepts LiveToolsCableResultPairArray and LiveToolsCableResultPairArrayOutput values.
// You can construct a concrete instance of `LiveToolsCableResultPairArrayInput` via:
//
//	LiveToolsCableResultPairArray{ LiveToolsCableResultPairArgs{...} }
type LiveToolsCableResultPairArrayInput interface {
	pulumi.Input

	ToLiveToolsCableResultPairArrayOutput() LiveToolsCableResultPairArrayOutput
	ToLiveToolsCableResultPairArrayOutputWithContext(context.Context) LiveToolsCableResultPairArrayOutput
}

type LiveToolsCableResultPairArray []LiveToolsCableResultPairInput

func (LiveToolsCableResultPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsCableResultPair)(nil)).Elem()
}

func (i LiveToolsCableResultPairArray) ToLiveToolsCableResultPairArrayOutput() LiveToolsCableResultPairArrayOutput {
	return i.ToLiveToolsCableResultPairArrayOutputWithContext(context.Background())
}

func (i LiveToolsCableResultPairArray) ToLiveToolsCableResultPairArrayOutputWithContext(ctx context.Context) LiveToolsCableResultPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsCableResultPairArrayOutput)
}

type LiveToolsCableResultPairOutput struct{ *pulumi.OutputState }

func (LiveToolsCableResultPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsCableResultPair)(nil)).Elem()
}

func (o LiveToolsCableResultPairOutput) ToLiveToolsCableResultPairOutput() LiveToolsCableResultPairOutput {
	return o
}

func (o LiveToolsCableResultPairOutput) ToLiveToolsCableResultPairOutputWithContext(ctx context.Context) LiveToolsCableResultPairOutput {
	return o
}

// The index of the twisted pair tested.
func (o LiveToolsCableResultPairOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResultPair) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// The detected length of the twisted pair.
func (o LiveToolsCableResultPairOutput) LengthMeters() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResultPair) *int { return v.LengthMeters }).(pulumi.IntPtrOutput)
}

// The test result of the twisted pair tested.
func (o LiveToolsCableResultPairOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsCableResultPair) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LiveToolsCableResultPairArrayOutput struct{ *pulumi.OutputState }

func (LiveToolsCableResultPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LiveToolsCableResultPair)(nil)).Elem()
}

func (o LiveToolsCableResultPairArrayOutput) ToLiveToolsCableResultPairArrayOutput() LiveToolsCableResultPairArrayOutput {
	return o
}

func (o LiveToolsCableResultPairArrayOutput) ToLiveToolsCableResultPairArrayOutputWithContext(ctx context.Context) LiveToolsCableResultPairArrayOutput {
	return o
}

func (o LiveToolsCableResultPairArrayOutput) Index(i pulumi.IntInput) LiveToolsCableResultPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LiveToolsCableResultPair {
		return vs[0].([]LiveToolsCableResultPair)[vs[1].(int)]
	}).(LiveToolsCableResultPairOutput)
}

type LiveToolsPingDeviceItem struct {
	// Information for callback used to send back results
	Callback *LiveToolsPingDeviceItemCallback `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId *string `pulumi:"pingId"`
	// Ping request parameters
	Request *LiveToolsPingDeviceItemRequest `pulumi:"request"`
	// Status of the ping request.
	Status *string `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url *string `pulumi:"url"`
}

// LiveToolsPingDeviceItemInput is an input type that accepts LiveToolsPingDeviceItemArgs and LiveToolsPingDeviceItemOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemInput` via:
//
//	LiveToolsPingDeviceItemArgs{...}
type LiveToolsPingDeviceItemInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemOutput() LiveToolsPingDeviceItemOutput
	ToLiveToolsPingDeviceItemOutputWithContext(context.Context) LiveToolsPingDeviceItemOutput
}

type LiveToolsPingDeviceItemArgs struct {
	// Information for callback used to send back results
	Callback LiveToolsPingDeviceItemCallbackPtrInput `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId pulumi.StringPtrInput `pulumi:"pingId"`
	// Ping request parameters
	Request LiveToolsPingDeviceItemRequestPtrInput `pulumi:"request"`
	// Status of the ping request.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItem)(nil)).Elem()
}

func (i LiveToolsPingDeviceItemArgs) ToLiveToolsPingDeviceItemOutput() LiveToolsPingDeviceItemOutput {
	return i.ToLiveToolsPingDeviceItemOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemArgs) ToLiveToolsPingDeviceItemOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemOutput)
}

func (i LiveToolsPingDeviceItemArgs) ToLiveToolsPingDeviceItemPtrOutput() LiveToolsPingDeviceItemPtrOutput {
	return i.ToLiveToolsPingDeviceItemPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemArgs) ToLiveToolsPingDeviceItemPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemOutput).ToLiveToolsPingDeviceItemPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceItemPtrInput is an input type that accepts LiveToolsPingDeviceItemArgs, LiveToolsPingDeviceItemPtr and LiveToolsPingDeviceItemPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemPtrInput` via:
//
//	        LiveToolsPingDeviceItemArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceItemPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemPtrOutput() LiveToolsPingDeviceItemPtrOutput
	ToLiveToolsPingDeviceItemPtrOutputWithContext(context.Context) LiveToolsPingDeviceItemPtrOutput
}

type liveToolsPingDeviceItemPtrType LiveToolsPingDeviceItemArgs

func LiveToolsPingDeviceItemPtr(v *LiveToolsPingDeviceItemArgs) LiveToolsPingDeviceItemPtrInput {
	return (*liveToolsPingDeviceItemPtrType)(v)
}

func (*liveToolsPingDeviceItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItem)(nil)).Elem()
}

func (i *liveToolsPingDeviceItemPtrType) ToLiveToolsPingDeviceItemPtrOutput() LiveToolsPingDeviceItemPtrOutput {
	return i.ToLiveToolsPingDeviceItemPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceItemPtrType) ToLiveToolsPingDeviceItemPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemPtrOutput)
}

type LiveToolsPingDeviceItemOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItem)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemOutput) ToLiveToolsPingDeviceItemOutput() LiveToolsPingDeviceItemOutput {
	return o
}

func (o LiveToolsPingDeviceItemOutput) ToLiveToolsPingDeviceItemOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemOutput {
	return o
}

func (o LiveToolsPingDeviceItemOutput) ToLiveToolsPingDeviceItemPtrOutput() LiveToolsPingDeviceItemPtrOutput {
	return o.ToLiveToolsPingDeviceItemPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceItemOutput) ToLiveToolsPingDeviceItemPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceItem) *LiveToolsPingDeviceItem {
		return &v
	}).(LiveToolsPingDeviceItemPtrOutput)
}

// Information for callback used to send back results
func (o LiveToolsPingDeviceItemOutput) Callback() LiveToolsPingDeviceItemCallbackPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItem) *LiveToolsPingDeviceItemCallback { return v.Callback }).(LiveToolsPingDeviceItemCallbackPtrOutput)
}

// Id to check the status of your ping request.
func (o LiveToolsPingDeviceItemOutput) PingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItem) *string { return v.PingId }).(pulumi.StringPtrOutput)
}

// Ping request parameters
func (o LiveToolsPingDeviceItemOutput) Request() LiveToolsPingDeviceItemRequestPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItem) *LiveToolsPingDeviceItemRequest { return v.Request }).(LiveToolsPingDeviceItemRequestPtrOutput)
}

// Status of the ping request.
func (o LiveToolsPingDeviceItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// GET this url to check the status of your ping request.
func (o LiveToolsPingDeviceItemOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItem) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceItemPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItem)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemPtrOutput) ToLiveToolsPingDeviceItemPtrOutput() LiveToolsPingDeviceItemPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemPtrOutput) ToLiveToolsPingDeviceItemPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemPtrOutput) Elem() LiveToolsPingDeviceItemOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) LiveToolsPingDeviceItem {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceItem
		return ret
	}).(LiveToolsPingDeviceItemOutput)
}

// Information for callback used to send back results
func (o LiveToolsPingDeviceItemPtrOutput) Callback() LiveToolsPingDeviceItemCallbackPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) *LiveToolsPingDeviceItemCallback {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(LiveToolsPingDeviceItemCallbackPtrOutput)
}

// Id to check the status of your ping request.
func (o LiveToolsPingDeviceItemPtrOutput) PingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) *string {
		if v == nil {
			return nil
		}
		return v.PingId
	}).(pulumi.StringPtrOutput)
}

// Ping request parameters
func (o LiveToolsPingDeviceItemPtrOutput) Request() LiveToolsPingDeviceItemRequestPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) *LiveToolsPingDeviceItemRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(LiveToolsPingDeviceItemRequestPtrOutput)
}

// Status of the ping request.
func (o LiveToolsPingDeviceItemPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// GET this url to check the status of your ping request.
func (o LiveToolsPingDeviceItemPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItem) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceItemCallback struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id *string `pulumi:"id"`
	// The status of the callback
	Status *string `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url *string `pulumi:"url"`
}

// LiveToolsPingDeviceItemCallbackInput is an input type that accepts LiveToolsPingDeviceItemCallbackArgs and LiveToolsPingDeviceItemCallbackOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemCallbackInput` via:
//
//	LiveToolsPingDeviceItemCallbackArgs{...}
type LiveToolsPingDeviceItemCallbackInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemCallbackOutput() LiveToolsPingDeviceItemCallbackOutput
	ToLiveToolsPingDeviceItemCallbackOutputWithContext(context.Context) LiveToolsPingDeviceItemCallbackOutput
}

type LiveToolsPingDeviceItemCallbackArgs struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The status of the callback
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingDeviceItemCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (i LiveToolsPingDeviceItemCallbackArgs) ToLiveToolsPingDeviceItemCallbackOutput() LiveToolsPingDeviceItemCallbackOutput {
	return i.ToLiveToolsPingDeviceItemCallbackOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemCallbackArgs) ToLiveToolsPingDeviceItemCallbackOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemCallbackOutput)
}

func (i LiveToolsPingDeviceItemCallbackArgs) ToLiveToolsPingDeviceItemCallbackPtrOutput() LiveToolsPingDeviceItemCallbackPtrOutput {
	return i.ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemCallbackArgs) ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemCallbackOutput).ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceItemCallbackPtrInput is an input type that accepts LiveToolsPingDeviceItemCallbackArgs, LiveToolsPingDeviceItemCallbackPtr and LiveToolsPingDeviceItemCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemCallbackPtrInput` via:
//
//	        LiveToolsPingDeviceItemCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceItemCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemCallbackPtrOutput() LiveToolsPingDeviceItemCallbackPtrOutput
	ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(context.Context) LiveToolsPingDeviceItemCallbackPtrOutput
}

type liveToolsPingDeviceItemCallbackPtrType LiveToolsPingDeviceItemCallbackArgs

func LiveToolsPingDeviceItemCallbackPtr(v *LiveToolsPingDeviceItemCallbackArgs) LiveToolsPingDeviceItemCallbackPtrInput {
	return (*liveToolsPingDeviceItemCallbackPtrType)(v)
}

func (*liveToolsPingDeviceItemCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (i *liveToolsPingDeviceItemCallbackPtrType) ToLiveToolsPingDeviceItemCallbackPtrOutput() LiveToolsPingDeviceItemCallbackPtrOutput {
	return i.ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceItemCallbackPtrType) ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemCallbackPtrOutput)
}

type LiveToolsPingDeviceItemCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemCallbackOutput) ToLiveToolsPingDeviceItemCallbackOutput() LiveToolsPingDeviceItemCallbackOutput {
	return o
}

func (o LiveToolsPingDeviceItemCallbackOutput) ToLiveToolsPingDeviceItemCallbackOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackOutput {
	return o
}

func (o LiveToolsPingDeviceItemCallbackOutput) ToLiveToolsPingDeviceItemCallbackPtrOutput() LiveToolsPingDeviceItemCallbackPtrOutput {
	return o.ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceItemCallbackOutput) ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceItemCallback) *LiveToolsPingDeviceItemCallback {
		return &v
	}).(LiveToolsPingDeviceItemCallbackPtrOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o LiveToolsPingDeviceItemCallbackOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemCallback) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o LiveToolsPingDeviceItemCallbackOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemCallback) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o LiveToolsPingDeviceItemCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceItemCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemCallbackPtrOutput) ToLiveToolsPingDeviceItemCallbackPtrOutput() LiveToolsPingDeviceItemCallbackPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemCallbackPtrOutput) ToLiveToolsPingDeviceItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemCallbackPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemCallbackPtrOutput) Elem() LiveToolsPingDeviceItemCallbackOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemCallback) LiveToolsPingDeviceItemCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceItemCallback
		return ret
	}).(LiveToolsPingDeviceItemCallbackOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o LiveToolsPingDeviceItemCallbackPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o LiveToolsPingDeviceItemCallbackPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o LiveToolsPingDeviceItemCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceItemRequest struct {
	// Number of pings to send
	Count *int `pulumi:"count"`
	// Device serial number
	Serial *string `pulumi:"serial"`
	// IP address or FQDN to ping
	Target *string `pulumi:"target"`
}

// LiveToolsPingDeviceItemRequestInput is an input type that accepts LiveToolsPingDeviceItemRequestArgs and LiveToolsPingDeviceItemRequestOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemRequestInput` via:
//
//	LiveToolsPingDeviceItemRequestArgs{...}
type LiveToolsPingDeviceItemRequestInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemRequestOutput() LiveToolsPingDeviceItemRequestOutput
	ToLiveToolsPingDeviceItemRequestOutputWithContext(context.Context) LiveToolsPingDeviceItemRequestOutput
}

type LiveToolsPingDeviceItemRequestArgs struct {
	// Number of pings to send
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// IP address or FQDN to ping
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (LiveToolsPingDeviceItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (i LiveToolsPingDeviceItemRequestArgs) ToLiveToolsPingDeviceItemRequestOutput() LiveToolsPingDeviceItemRequestOutput {
	return i.ToLiveToolsPingDeviceItemRequestOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemRequestArgs) ToLiveToolsPingDeviceItemRequestOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemRequestOutput)
}

func (i LiveToolsPingDeviceItemRequestArgs) ToLiveToolsPingDeviceItemRequestPtrOutput() LiveToolsPingDeviceItemRequestPtrOutput {
	return i.ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceItemRequestArgs) ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemRequestOutput).ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceItemRequestPtrInput is an input type that accepts LiveToolsPingDeviceItemRequestArgs, LiveToolsPingDeviceItemRequestPtr and LiveToolsPingDeviceItemRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceItemRequestPtrInput` via:
//
//	        LiveToolsPingDeviceItemRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceItemRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceItemRequestPtrOutput() LiveToolsPingDeviceItemRequestPtrOutput
	ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(context.Context) LiveToolsPingDeviceItemRequestPtrOutput
}

type liveToolsPingDeviceItemRequestPtrType LiveToolsPingDeviceItemRequestArgs

func LiveToolsPingDeviceItemRequestPtr(v *LiveToolsPingDeviceItemRequestArgs) LiveToolsPingDeviceItemRequestPtrInput {
	return (*liveToolsPingDeviceItemRequestPtrType)(v)
}

func (*liveToolsPingDeviceItemRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (i *liveToolsPingDeviceItemRequestPtrType) ToLiveToolsPingDeviceItemRequestPtrOutput() LiveToolsPingDeviceItemRequestPtrOutput {
	return i.ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceItemRequestPtrType) ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceItemRequestPtrOutput)
}

type LiveToolsPingDeviceItemRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemRequestOutput) ToLiveToolsPingDeviceItemRequestOutput() LiveToolsPingDeviceItemRequestOutput {
	return o
}

func (o LiveToolsPingDeviceItemRequestOutput) ToLiveToolsPingDeviceItemRequestOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestOutput {
	return o
}

func (o LiveToolsPingDeviceItemRequestOutput) ToLiveToolsPingDeviceItemRequestPtrOutput() LiveToolsPingDeviceItemRequestPtrOutput {
	return o.ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceItemRequestOutput) ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceItemRequest) *LiveToolsPingDeviceItemRequest {
		return &v
	}).(LiveToolsPingDeviceItemRequestPtrOutput)
}

// Number of pings to send
func (o LiveToolsPingDeviceItemRequestOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemRequest) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Device serial number
func (o LiveToolsPingDeviceItemRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// IP address or FQDN to ping
func (o LiveToolsPingDeviceItemRequestOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceItemRequest) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceItemRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceItemRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (o LiveToolsPingDeviceItemRequestPtrOutput) ToLiveToolsPingDeviceItemRequestPtrOutput() LiveToolsPingDeviceItemRequestPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemRequestPtrOutput) ToLiveToolsPingDeviceItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceItemRequestPtrOutput {
	return o
}

func (o LiveToolsPingDeviceItemRequestPtrOutput) Elem() LiveToolsPingDeviceItemRequestOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemRequest) LiveToolsPingDeviceItemRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceItemRequest
		return ret
	}).(LiveToolsPingDeviceItemRequestOutput)
}

// Number of pings to send
func (o LiveToolsPingDeviceItemRequestPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemRequest) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Device serial number
func (o LiveToolsPingDeviceItemRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

// IP address or FQDN to ping
func (o LiveToolsPingDeviceItemRequestPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceItemRequest) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParameters struct {
	// Details for the callback. Please include either an httpServerId OR url and sharedSecret
	Callback *LiveToolsPingDeviceParametersCallback `pulumi:"callback"`
	// Count parameter to pass to ping. [1..5], default 5
	Count *int `pulumi:"count"`
}

// LiveToolsPingDeviceParametersInput is an input type that accepts LiveToolsPingDeviceParametersArgs and LiveToolsPingDeviceParametersOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersInput` via:
//
//	LiveToolsPingDeviceParametersArgs{...}
type LiveToolsPingDeviceParametersInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersOutput() LiveToolsPingDeviceParametersOutput
	ToLiveToolsPingDeviceParametersOutputWithContext(context.Context) LiveToolsPingDeviceParametersOutput
}

type LiveToolsPingDeviceParametersArgs struct {
	// Details for the callback. Please include either an httpServerId OR url and sharedSecret
	Callback LiveToolsPingDeviceParametersCallbackPtrInput `pulumi:"callback"`
	// Count parameter to pass to ping. [1..5], default 5
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (LiveToolsPingDeviceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParameters)(nil)).Elem()
}

func (i LiveToolsPingDeviceParametersArgs) ToLiveToolsPingDeviceParametersOutput() LiveToolsPingDeviceParametersOutput {
	return i.ToLiveToolsPingDeviceParametersOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersArgs) ToLiveToolsPingDeviceParametersOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersOutput)
}

func (i LiveToolsPingDeviceParametersArgs) ToLiveToolsPingDeviceParametersPtrOutput() LiveToolsPingDeviceParametersPtrOutput {
	return i.ToLiveToolsPingDeviceParametersPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersArgs) ToLiveToolsPingDeviceParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersOutput).ToLiveToolsPingDeviceParametersPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceParametersPtrInput is an input type that accepts LiveToolsPingDeviceParametersArgs, LiveToolsPingDeviceParametersPtr and LiveToolsPingDeviceParametersPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersPtrInput` via:
//
//	        LiveToolsPingDeviceParametersArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceParametersPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersPtrOutput() LiveToolsPingDeviceParametersPtrOutput
	ToLiveToolsPingDeviceParametersPtrOutputWithContext(context.Context) LiveToolsPingDeviceParametersPtrOutput
}

type liveToolsPingDeviceParametersPtrType LiveToolsPingDeviceParametersArgs

func LiveToolsPingDeviceParametersPtr(v *LiveToolsPingDeviceParametersArgs) LiveToolsPingDeviceParametersPtrInput {
	return (*liveToolsPingDeviceParametersPtrType)(v)
}

func (*liveToolsPingDeviceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParameters)(nil)).Elem()
}

func (i *liveToolsPingDeviceParametersPtrType) ToLiveToolsPingDeviceParametersPtrOutput() LiveToolsPingDeviceParametersPtrOutput {
	return i.ToLiveToolsPingDeviceParametersPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceParametersPtrType) ToLiveToolsPingDeviceParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersPtrOutput)
}

type LiveToolsPingDeviceParametersOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParameters)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersOutput) ToLiveToolsPingDeviceParametersOutput() LiveToolsPingDeviceParametersOutput {
	return o
}

func (o LiveToolsPingDeviceParametersOutput) ToLiveToolsPingDeviceParametersOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersOutput {
	return o
}

func (o LiveToolsPingDeviceParametersOutput) ToLiveToolsPingDeviceParametersPtrOutput() LiveToolsPingDeviceParametersPtrOutput {
	return o.ToLiveToolsPingDeviceParametersPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceParametersOutput) ToLiveToolsPingDeviceParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceParameters) *LiveToolsPingDeviceParameters {
		return &v
	}).(LiveToolsPingDeviceParametersPtrOutput)
}

// Details for the callback. Please include either an httpServerId OR url and sharedSecret
func (o LiveToolsPingDeviceParametersOutput) Callback() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParameters) *LiveToolsPingDeviceParametersCallback { return v.Callback }).(LiveToolsPingDeviceParametersCallbackPtrOutput)
}

// Count parameter to pass to ping. [1..5], default 5
func (o LiveToolsPingDeviceParametersOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParameters) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type LiveToolsPingDeviceParametersPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParameters)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersPtrOutput) ToLiveToolsPingDeviceParametersPtrOutput() LiveToolsPingDeviceParametersPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersPtrOutput) ToLiveToolsPingDeviceParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersPtrOutput) Elem() LiveToolsPingDeviceParametersOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParameters) LiveToolsPingDeviceParameters {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceParameters
		return ret
	}).(LiveToolsPingDeviceParametersOutput)
}

// Details for the callback. Please include either an httpServerId OR url and sharedSecret
func (o LiveToolsPingDeviceParametersPtrOutput) Callback() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParameters) *LiveToolsPingDeviceParametersCallback {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(LiveToolsPingDeviceParametersCallbackPtrOutput)
}

// Count parameter to pass to ping. [1..5], default 5
func (o LiveToolsPingDeviceParametersPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParameters) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type LiveToolsPingDeviceParametersCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsPingDeviceParametersCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsPingDeviceParametersCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsPingDeviceParametersCallbackInput is an input type that accepts LiveToolsPingDeviceParametersCallbackArgs and LiveToolsPingDeviceParametersCallbackOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackInput` via:
//
//	LiveToolsPingDeviceParametersCallbackArgs{...}
type LiveToolsPingDeviceParametersCallbackInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackOutput() LiveToolsPingDeviceParametersCallbackOutput
	ToLiveToolsPingDeviceParametersCallbackOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackOutput
}

type LiveToolsPingDeviceParametersCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsPingDeviceParametersCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingDeviceParametersCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallback)(nil)).Elem()
}

func (i LiveToolsPingDeviceParametersCallbackArgs) ToLiveToolsPingDeviceParametersCallbackOutput() LiveToolsPingDeviceParametersCallbackOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackArgs) ToLiveToolsPingDeviceParametersCallbackOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackOutput)
}

func (i LiveToolsPingDeviceParametersCallbackArgs) ToLiveToolsPingDeviceParametersCallbackPtrOutput() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackArgs) ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackOutput).ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceParametersCallbackPtrInput is an input type that accepts LiveToolsPingDeviceParametersCallbackArgs, LiveToolsPingDeviceParametersCallbackPtr and LiveToolsPingDeviceParametersCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackPtrInput` via:
//
//	        LiveToolsPingDeviceParametersCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceParametersCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackPtrOutput() LiveToolsPingDeviceParametersCallbackPtrOutput
	ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackPtrOutput
}

type liveToolsPingDeviceParametersCallbackPtrType LiveToolsPingDeviceParametersCallbackArgs

func LiveToolsPingDeviceParametersCallbackPtr(v *LiveToolsPingDeviceParametersCallbackArgs) LiveToolsPingDeviceParametersCallbackPtrInput {
	return (*liveToolsPingDeviceParametersCallbackPtrType)(v)
}

func (*liveToolsPingDeviceParametersCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallback)(nil)).Elem()
}

func (i *liveToolsPingDeviceParametersCallbackPtrType) ToLiveToolsPingDeviceParametersCallbackPtrOutput() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceParametersCallbackPtrType) ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallback)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackOutput) ToLiveToolsPingDeviceParametersCallbackOutput() LiveToolsPingDeviceParametersCallbackOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackOutput) ToLiveToolsPingDeviceParametersCallbackOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackOutput) ToLiveToolsPingDeviceParametersCallbackPtrOutput() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o.ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceParametersCallbackOutput) ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceParametersCallback) *LiveToolsPingDeviceParametersCallback {
		return &v
	}).(LiveToolsPingDeviceParametersCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsPingDeviceParametersCallbackOutput) HttpServer() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallback) *LiveToolsPingDeviceParametersCallbackHttpServer {
		return v.HttpServer
	}).(LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsPingDeviceParametersCallbackOutput) PayloadTemplate() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallback) *LiveToolsPingDeviceParametersCallbackPayloadTemplate {
		return v.PayloadTemplate
	}).(LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsPingDeviceParametersCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsPingDeviceParametersCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallback)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackPtrOutput) ToLiveToolsPingDeviceParametersCallbackPtrOutput() LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPtrOutput) ToLiveToolsPingDeviceParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPtrOutput) Elem() LiveToolsPingDeviceParametersCallbackOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallback) LiveToolsPingDeviceParametersCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceParametersCallback
		return ret
	}).(LiveToolsPingDeviceParametersCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsPingDeviceParametersCallbackPtrOutput) HttpServer() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallback) *LiveToolsPingDeviceParametersCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsPingDeviceParametersCallbackPtrOutput) PayloadTemplate() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallback) *LiveToolsPingDeviceParametersCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsPingDeviceParametersCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsPingDeviceParametersCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsPingDeviceParametersCallbackHttpServerInput is an input type that accepts LiveToolsPingDeviceParametersCallbackHttpServerArgs and LiveToolsPingDeviceParametersCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackHttpServerInput` via:
//
//	LiveToolsPingDeviceParametersCallbackHttpServerArgs{...}
type LiveToolsPingDeviceParametersCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackHttpServerOutput() LiveToolsPingDeviceParametersCallbackHttpServerOutput
	ToLiveToolsPingDeviceParametersCallbackHttpServerOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackHttpServerOutput
}

type LiveToolsPingDeviceParametersCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsPingDeviceParametersCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsPingDeviceParametersCallbackHttpServerArgs) ToLiveToolsPingDeviceParametersCallbackHttpServerOutput() LiveToolsPingDeviceParametersCallbackHttpServerOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackHttpServerArgs) ToLiveToolsPingDeviceParametersCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackHttpServerOutput)
}

func (i LiveToolsPingDeviceParametersCallbackHttpServerArgs) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutput() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackHttpServerArgs) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackHttpServerOutput).ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceParametersCallbackHttpServerPtrInput is an input type that accepts LiveToolsPingDeviceParametersCallbackHttpServerArgs, LiveToolsPingDeviceParametersCallbackHttpServerPtr and LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackHttpServerPtrInput` via:
//
//	        LiveToolsPingDeviceParametersCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceParametersCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutput() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput
	ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput
}

type liveToolsPingDeviceParametersCallbackHttpServerPtrType LiveToolsPingDeviceParametersCallbackHttpServerArgs

func LiveToolsPingDeviceParametersCallbackHttpServerPtr(v *LiveToolsPingDeviceParametersCallbackHttpServerArgs) LiveToolsPingDeviceParametersCallbackHttpServerPtrInput {
	return (*liveToolsPingDeviceParametersCallbackHttpServerPtrType)(v)
}

func (*liveToolsPingDeviceParametersCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsPingDeviceParametersCallbackHttpServerPtrType) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutput() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceParametersCallbackHttpServerPtrType) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerOutput() LiveToolsPingDeviceParametersCallbackHttpServerOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutput() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o.ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceParametersCallbackHttpServer) *LiveToolsPingDeviceParametersCallbackHttpServer {
		return &v
	}).(LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsPingDeviceParametersCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutput() LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput) ToLiveToolsPingDeviceParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput) Elem() LiveToolsPingDeviceParametersCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallbackHttpServer) LiveToolsPingDeviceParametersCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceParametersCallbackHttpServer
		return ret
	}).(LiveToolsPingDeviceParametersCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsPingDeviceParametersCallbackPayloadTemplateInput is an input type that accepts LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs and LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackPayloadTemplateInput` via:
//
//	LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs{...}
type LiveToolsPingDeviceParametersCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput
	ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput
}

type LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput)
}

func (i LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput).ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs, LiveToolsPingDeviceParametersCallbackPayloadTemplatePtr and LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput
	ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput
}

type liveToolsPingDeviceParametersCallbackPayloadTemplatePtrType LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs

func LiveToolsPingDeviceParametersCallbackPayloadTemplatePtr(v *LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput {
	return (*liveToolsPingDeviceParametersCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsPingDeviceParametersCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsPingDeviceParametersCallbackPayloadTemplatePtrType) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsPingDeviceParametersCallbackPayloadTemplatePtrType) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput)
}

type LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingDeviceParametersCallbackPayloadTemplate) *LiveToolsPingDeviceParametersCallbackPayloadTemplate {
		return &v
	}).(LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingDeviceParametersCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingDeviceParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput) ToLiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput) Elem() LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallbackPayloadTemplate) LiveToolsPingDeviceParametersCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingDeviceParametersCallbackPayloadTemplate
		return ret
	}).(LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingDeviceParametersCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingItem struct {
	// Information for callback used to send back results
	Callback *LiveToolsPingItemCallback `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId *string `pulumi:"pingId"`
	// Ping request parameters
	Request *LiveToolsPingItemRequest `pulumi:"request"`
	// Status of the ping request.
	Status *string `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url *string `pulumi:"url"`
}

// LiveToolsPingItemInput is an input type that accepts LiveToolsPingItemArgs and LiveToolsPingItemOutput values.
// You can construct a concrete instance of `LiveToolsPingItemInput` via:
//
//	LiveToolsPingItemArgs{...}
type LiveToolsPingItemInput interface {
	pulumi.Input

	ToLiveToolsPingItemOutput() LiveToolsPingItemOutput
	ToLiveToolsPingItemOutputWithContext(context.Context) LiveToolsPingItemOutput
}

type LiveToolsPingItemArgs struct {
	// Information for callback used to send back results
	Callback LiveToolsPingItemCallbackPtrInput `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId pulumi.StringPtrInput `pulumi:"pingId"`
	// Ping request parameters
	Request LiveToolsPingItemRequestPtrInput `pulumi:"request"`
	// Status of the ping request.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItem)(nil)).Elem()
}

func (i LiveToolsPingItemArgs) ToLiveToolsPingItemOutput() LiveToolsPingItemOutput {
	return i.ToLiveToolsPingItemOutputWithContext(context.Background())
}

func (i LiveToolsPingItemArgs) ToLiveToolsPingItemOutputWithContext(ctx context.Context) LiveToolsPingItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemOutput)
}

func (i LiveToolsPingItemArgs) ToLiveToolsPingItemPtrOutput() LiveToolsPingItemPtrOutput {
	return i.ToLiveToolsPingItemPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingItemArgs) ToLiveToolsPingItemPtrOutputWithContext(ctx context.Context) LiveToolsPingItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemOutput).ToLiveToolsPingItemPtrOutputWithContext(ctx)
}

// LiveToolsPingItemPtrInput is an input type that accepts LiveToolsPingItemArgs, LiveToolsPingItemPtr and LiveToolsPingItemPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingItemPtrInput` via:
//
//	        LiveToolsPingItemArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingItemPtrInput interface {
	pulumi.Input

	ToLiveToolsPingItemPtrOutput() LiveToolsPingItemPtrOutput
	ToLiveToolsPingItemPtrOutputWithContext(context.Context) LiveToolsPingItemPtrOutput
}

type liveToolsPingItemPtrType LiveToolsPingItemArgs

func LiveToolsPingItemPtr(v *LiveToolsPingItemArgs) LiveToolsPingItemPtrInput {
	return (*liveToolsPingItemPtrType)(v)
}

func (*liveToolsPingItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItem)(nil)).Elem()
}

func (i *liveToolsPingItemPtrType) ToLiveToolsPingItemPtrOutput() LiveToolsPingItemPtrOutput {
	return i.ToLiveToolsPingItemPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingItemPtrType) ToLiveToolsPingItemPtrOutputWithContext(ctx context.Context) LiveToolsPingItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemPtrOutput)
}

type LiveToolsPingItemOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItem)(nil)).Elem()
}

func (o LiveToolsPingItemOutput) ToLiveToolsPingItemOutput() LiveToolsPingItemOutput {
	return o
}

func (o LiveToolsPingItemOutput) ToLiveToolsPingItemOutputWithContext(ctx context.Context) LiveToolsPingItemOutput {
	return o
}

func (o LiveToolsPingItemOutput) ToLiveToolsPingItemPtrOutput() LiveToolsPingItemPtrOutput {
	return o.ToLiveToolsPingItemPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingItemOutput) ToLiveToolsPingItemPtrOutputWithContext(ctx context.Context) LiveToolsPingItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingItem) *LiveToolsPingItem {
		return &v
	}).(LiveToolsPingItemPtrOutput)
}

// Information for callback used to send back results
func (o LiveToolsPingItemOutput) Callback() LiveToolsPingItemCallbackPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItem) *LiveToolsPingItemCallback { return v.Callback }).(LiveToolsPingItemCallbackPtrOutput)
}

// Id to check the status of your ping request.
func (o LiveToolsPingItemOutput) PingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItem) *string { return v.PingId }).(pulumi.StringPtrOutput)
}

// Ping request parameters
func (o LiveToolsPingItemOutput) Request() LiveToolsPingItemRequestPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItem) *LiveToolsPingItemRequest { return v.Request }).(LiveToolsPingItemRequestPtrOutput)
}

// Status of the ping request.
func (o LiveToolsPingItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// GET this url to check the status of your ping request.
func (o LiveToolsPingItemOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItem) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingItemPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItem)(nil)).Elem()
}

func (o LiveToolsPingItemPtrOutput) ToLiveToolsPingItemPtrOutput() LiveToolsPingItemPtrOutput {
	return o
}

func (o LiveToolsPingItemPtrOutput) ToLiveToolsPingItemPtrOutputWithContext(ctx context.Context) LiveToolsPingItemPtrOutput {
	return o
}

func (o LiveToolsPingItemPtrOutput) Elem() LiveToolsPingItemOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) LiveToolsPingItem {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingItem
		return ret
	}).(LiveToolsPingItemOutput)
}

// Information for callback used to send back results
func (o LiveToolsPingItemPtrOutput) Callback() LiveToolsPingItemCallbackPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) *LiveToolsPingItemCallback {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(LiveToolsPingItemCallbackPtrOutput)
}

// Id to check the status of your ping request.
func (o LiveToolsPingItemPtrOutput) PingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) *string {
		if v == nil {
			return nil
		}
		return v.PingId
	}).(pulumi.StringPtrOutput)
}

// Ping request parameters
func (o LiveToolsPingItemPtrOutput) Request() LiveToolsPingItemRequestPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) *LiveToolsPingItemRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(LiveToolsPingItemRequestPtrOutput)
}

// Status of the ping request.
func (o LiveToolsPingItemPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// GET this url to check the status of your ping request.
func (o LiveToolsPingItemPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItem) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingItemCallback struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id *string `pulumi:"id"`
	// The status of the callback
	Status *string `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url *string `pulumi:"url"`
}

// LiveToolsPingItemCallbackInput is an input type that accepts LiveToolsPingItemCallbackArgs and LiveToolsPingItemCallbackOutput values.
// You can construct a concrete instance of `LiveToolsPingItemCallbackInput` via:
//
//	LiveToolsPingItemCallbackArgs{...}
type LiveToolsPingItemCallbackInput interface {
	pulumi.Input

	ToLiveToolsPingItemCallbackOutput() LiveToolsPingItemCallbackOutput
	ToLiveToolsPingItemCallbackOutputWithContext(context.Context) LiveToolsPingItemCallbackOutput
}

type LiveToolsPingItemCallbackArgs struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The status of the callback
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingItemCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItemCallback)(nil)).Elem()
}

func (i LiveToolsPingItemCallbackArgs) ToLiveToolsPingItemCallbackOutput() LiveToolsPingItemCallbackOutput {
	return i.ToLiveToolsPingItemCallbackOutputWithContext(context.Background())
}

func (i LiveToolsPingItemCallbackArgs) ToLiveToolsPingItemCallbackOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemCallbackOutput)
}

func (i LiveToolsPingItemCallbackArgs) ToLiveToolsPingItemCallbackPtrOutput() LiveToolsPingItemCallbackPtrOutput {
	return i.ToLiveToolsPingItemCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingItemCallbackArgs) ToLiveToolsPingItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemCallbackOutput).ToLiveToolsPingItemCallbackPtrOutputWithContext(ctx)
}

// LiveToolsPingItemCallbackPtrInput is an input type that accepts LiveToolsPingItemCallbackArgs, LiveToolsPingItemCallbackPtr and LiveToolsPingItemCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingItemCallbackPtrInput` via:
//
//	        LiveToolsPingItemCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingItemCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsPingItemCallbackPtrOutput() LiveToolsPingItemCallbackPtrOutput
	ToLiveToolsPingItemCallbackPtrOutputWithContext(context.Context) LiveToolsPingItemCallbackPtrOutput
}

type liveToolsPingItemCallbackPtrType LiveToolsPingItemCallbackArgs

func LiveToolsPingItemCallbackPtr(v *LiveToolsPingItemCallbackArgs) LiveToolsPingItemCallbackPtrInput {
	return (*liveToolsPingItemCallbackPtrType)(v)
}

func (*liveToolsPingItemCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItemCallback)(nil)).Elem()
}

func (i *liveToolsPingItemCallbackPtrType) ToLiveToolsPingItemCallbackPtrOutput() LiveToolsPingItemCallbackPtrOutput {
	return i.ToLiveToolsPingItemCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingItemCallbackPtrType) ToLiveToolsPingItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemCallbackPtrOutput)
}

type LiveToolsPingItemCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItemCallback)(nil)).Elem()
}

func (o LiveToolsPingItemCallbackOutput) ToLiveToolsPingItemCallbackOutput() LiveToolsPingItemCallbackOutput {
	return o
}

func (o LiveToolsPingItemCallbackOutput) ToLiveToolsPingItemCallbackOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackOutput {
	return o
}

func (o LiveToolsPingItemCallbackOutput) ToLiveToolsPingItemCallbackPtrOutput() LiveToolsPingItemCallbackPtrOutput {
	return o.ToLiveToolsPingItemCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingItemCallbackOutput) ToLiveToolsPingItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingItemCallback) *LiveToolsPingItemCallback {
		return &v
	}).(LiveToolsPingItemCallbackPtrOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o LiveToolsPingItemCallbackOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemCallback) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o LiveToolsPingItemCallbackOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemCallback) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o LiveToolsPingItemCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingItemCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItemCallback)(nil)).Elem()
}

func (o LiveToolsPingItemCallbackPtrOutput) ToLiveToolsPingItemCallbackPtrOutput() LiveToolsPingItemCallbackPtrOutput {
	return o
}

func (o LiveToolsPingItemCallbackPtrOutput) ToLiveToolsPingItemCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingItemCallbackPtrOutput {
	return o
}

func (o LiveToolsPingItemCallbackPtrOutput) Elem() LiveToolsPingItemCallbackOutput {
	return o.ApplyT(func(v *LiveToolsPingItemCallback) LiveToolsPingItemCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingItemCallback
		return ret
	}).(LiveToolsPingItemCallbackOutput)
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o LiveToolsPingItemCallbackPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The status of the callback
func (o LiveToolsPingItemCallbackPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o LiveToolsPingItemCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingItemRequest struct {
	// Number of pings to send
	Count *int `pulumi:"count"`
	// Device serial number
	Serial *string `pulumi:"serial"`
	// IP address or FQDN to ping
	Target *string `pulumi:"target"`
}

// LiveToolsPingItemRequestInput is an input type that accepts LiveToolsPingItemRequestArgs and LiveToolsPingItemRequestOutput values.
// You can construct a concrete instance of `LiveToolsPingItemRequestInput` via:
//
//	LiveToolsPingItemRequestArgs{...}
type LiveToolsPingItemRequestInput interface {
	pulumi.Input

	ToLiveToolsPingItemRequestOutput() LiveToolsPingItemRequestOutput
	ToLiveToolsPingItemRequestOutputWithContext(context.Context) LiveToolsPingItemRequestOutput
}

type LiveToolsPingItemRequestArgs struct {
	// Number of pings to send
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// IP address or FQDN to ping
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (LiveToolsPingItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItemRequest)(nil)).Elem()
}

func (i LiveToolsPingItemRequestArgs) ToLiveToolsPingItemRequestOutput() LiveToolsPingItemRequestOutput {
	return i.ToLiveToolsPingItemRequestOutputWithContext(context.Background())
}

func (i LiveToolsPingItemRequestArgs) ToLiveToolsPingItemRequestOutputWithContext(ctx context.Context) LiveToolsPingItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemRequestOutput)
}

func (i LiveToolsPingItemRequestArgs) ToLiveToolsPingItemRequestPtrOutput() LiveToolsPingItemRequestPtrOutput {
	return i.ToLiveToolsPingItemRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingItemRequestArgs) ToLiveToolsPingItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingItemRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemRequestOutput).ToLiveToolsPingItemRequestPtrOutputWithContext(ctx)
}

// LiveToolsPingItemRequestPtrInput is an input type that accepts LiveToolsPingItemRequestArgs, LiveToolsPingItemRequestPtr and LiveToolsPingItemRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingItemRequestPtrInput` via:
//
//	        LiveToolsPingItemRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingItemRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsPingItemRequestPtrOutput() LiveToolsPingItemRequestPtrOutput
	ToLiveToolsPingItemRequestPtrOutputWithContext(context.Context) LiveToolsPingItemRequestPtrOutput
}

type liveToolsPingItemRequestPtrType LiveToolsPingItemRequestArgs

func LiveToolsPingItemRequestPtr(v *LiveToolsPingItemRequestArgs) LiveToolsPingItemRequestPtrInput {
	return (*liveToolsPingItemRequestPtrType)(v)
}

func (*liveToolsPingItemRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItemRequest)(nil)).Elem()
}

func (i *liveToolsPingItemRequestPtrType) ToLiveToolsPingItemRequestPtrOutput() LiveToolsPingItemRequestPtrOutput {
	return i.ToLiveToolsPingItemRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingItemRequestPtrType) ToLiveToolsPingItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingItemRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingItemRequestPtrOutput)
}

type LiveToolsPingItemRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingItemRequest)(nil)).Elem()
}

func (o LiveToolsPingItemRequestOutput) ToLiveToolsPingItemRequestOutput() LiveToolsPingItemRequestOutput {
	return o
}

func (o LiveToolsPingItemRequestOutput) ToLiveToolsPingItemRequestOutputWithContext(ctx context.Context) LiveToolsPingItemRequestOutput {
	return o
}

func (o LiveToolsPingItemRequestOutput) ToLiveToolsPingItemRequestPtrOutput() LiveToolsPingItemRequestPtrOutput {
	return o.ToLiveToolsPingItemRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingItemRequestOutput) ToLiveToolsPingItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingItemRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingItemRequest) *LiveToolsPingItemRequest {
		return &v
	}).(LiveToolsPingItemRequestPtrOutput)
}

// Number of pings to send
func (o LiveToolsPingItemRequestOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemRequest) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Device serial number
func (o LiveToolsPingItemRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// IP address or FQDN to ping
func (o LiveToolsPingItemRequestOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingItemRequest) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type LiveToolsPingItemRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingItemRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingItemRequest)(nil)).Elem()
}

func (o LiveToolsPingItemRequestPtrOutput) ToLiveToolsPingItemRequestPtrOutput() LiveToolsPingItemRequestPtrOutput {
	return o
}

func (o LiveToolsPingItemRequestPtrOutput) ToLiveToolsPingItemRequestPtrOutputWithContext(ctx context.Context) LiveToolsPingItemRequestPtrOutput {
	return o
}

func (o LiveToolsPingItemRequestPtrOutput) Elem() LiveToolsPingItemRequestOutput {
	return o.ApplyT(func(v *LiveToolsPingItemRequest) LiveToolsPingItemRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingItemRequest
		return ret
	}).(LiveToolsPingItemRequestOutput)
}

// Number of pings to send
func (o LiveToolsPingItemRequestPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemRequest) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Device serial number
func (o LiveToolsPingItemRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

// IP address or FQDN to ping
func (o LiveToolsPingItemRequestPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingItemRequest) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingParameters struct {
	// Details for the callback. Please include either an httpServerId OR url and sharedSecret
	Callback *LiveToolsPingParametersCallback `pulumi:"callback"`
	// Count parameter to pass to ping. [1..5], default 5
	Count *int `pulumi:"count"`
	// FQDN, IPv4 or IPv6 address
	Target *string `pulumi:"target"`
}

// LiveToolsPingParametersInput is an input type that accepts LiveToolsPingParametersArgs and LiveToolsPingParametersOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersInput` via:
//
//	LiveToolsPingParametersArgs{...}
type LiveToolsPingParametersInput interface {
	pulumi.Input

	ToLiveToolsPingParametersOutput() LiveToolsPingParametersOutput
	ToLiveToolsPingParametersOutputWithContext(context.Context) LiveToolsPingParametersOutput
}

type LiveToolsPingParametersArgs struct {
	// Details for the callback. Please include either an httpServerId OR url and sharedSecret
	Callback LiveToolsPingParametersCallbackPtrInput `pulumi:"callback"`
	// Count parameter to pass to ping. [1..5], default 5
	Count pulumi.IntPtrInput `pulumi:"count"`
	// FQDN, IPv4 or IPv6 address
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (LiveToolsPingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParameters)(nil)).Elem()
}

func (i LiveToolsPingParametersArgs) ToLiveToolsPingParametersOutput() LiveToolsPingParametersOutput {
	return i.ToLiveToolsPingParametersOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersArgs) ToLiveToolsPingParametersOutputWithContext(ctx context.Context) LiveToolsPingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersOutput)
}

func (i LiveToolsPingParametersArgs) ToLiveToolsPingParametersPtrOutput() LiveToolsPingParametersPtrOutput {
	return i.ToLiveToolsPingParametersPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersArgs) ToLiveToolsPingParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersOutput).ToLiveToolsPingParametersPtrOutputWithContext(ctx)
}

// LiveToolsPingParametersPtrInput is an input type that accepts LiveToolsPingParametersArgs, LiveToolsPingParametersPtr and LiveToolsPingParametersPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersPtrInput` via:
//
//	        LiveToolsPingParametersArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingParametersPtrInput interface {
	pulumi.Input

	ToLiveToolsPingParametersPtrOutput() LiveToolsPingParametersPtrOutput
	ToLiveToolsPingParametersPtrOutputWithContext(context.Context) LiveToolsPingParametersPtrOutput
}

type liveToolsPingParametersPtrType LiveToolsPingParametersArgs

func LiveToolsPingParametersPtr(v *LiveToolsPingParametersArgs) LiveToolsPingParametersPtrInput {
	return (*liveToolsPingParametersPtrType)(v)
}

func (*liveToolsPingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParameters)(nil)).Elem()
}

func (i *liveToolsPingParametersPtrType) ToLiveToolsPingParametersPtrOutput() LiveToolsPingParametersPtrOutput {
	return i.ToLiveToolsPingParametersPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingParametersPtrType) ToLiveToolsPingParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersPtrOutput)
}

type LiveToolsPingParametersOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParameters)(nil)).Elem()
}

func (o LiveToolsPingParametersOutput) ToLiveToolsPingParametersOutput() LiveToolsPingParametersOutput {
	return o
}

func (o LiveToolsPingParametersOutput) ToLiveToolsPingParametersOutputWithContext(ctx context.Context) LiveToolsPingParametersOutput {
	return o
}

func (o LiveToolsPingParametersOutput) ToLiveToolsPingParametersPtrOutput() LiveToolsPingParametersPtrOutput {
	return o.ToLiveToolsPingParametersPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingParametersOutput) ToLiveToolsPingParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingParameters) *LiveToolsPingParameters {
		return &v
	}).(LiveToolsPingParametersPtrOutput)
}

// Details for the callback. Please include either an httpServerId OR url and sharedSecret
func (o LiveToolsPingParametersOutput) Callback() LiveToolsPingParametersCallbackPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParameters) *LiveToolsPingParametersCallback { return v.Callback }).(LiveToolsPingParametersCallbackPtrOutput)
}

// Count parameter to pass to ping. [1..5], default 5
func (o LiveToolsPingParametersOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParameters) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// FQDN, IPv4 or IPv6 address
func (o LiveToolsPingParametersOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParameters) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParameters)(nil)).Elem()
}

func (o LiveToolsPingParametersPtrOutput) ToLiveToolsPingParametersPtrOutput() LiveToolsPingParametersPtrOutput {
	return o
}

func (o LiveToolsPingParametersPtrOutput) ToLiveToolsPingParametersPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersPtrOutput {
	return o
}

func (o LiveToolsPingParametersPtrOutput) Elem() LiveToolsPingParametersOutput {
	return o.ApplyT(func(v *LiveToolsPingParameters) LiveToolsPingParameters {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingParameters
		return ret
	}).(LiveToolsPingParametersOutput)
}

// Details for the callback. Please include either an httpServerId OR url and sharedSecret
func (o LiveToolsPingParametersPtrOutput) Callback() LiveToolsPingParametersCallbackPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParameters) *LiveToolsPingParametersCallback {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(LiveToolsPingParametersCallbackPtrOutput)
}

// Count parameter to pass to ping. [1..5], default 5
func (o LiveToolsPingParametersPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParameters) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// FQDN, IPv4 or IPv6 address
func (o LiveToolsPingParametersPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParameters) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsPingParametersCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsPingParametersCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsPingParametersCallbackInput is an input type that accepts LiveToolsPingParametersCallbackArgs and LiveToolsPingParametersCallbackOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackInput` via:
//
//	LiveToolsPingParametersCallbackArgs{...}
type LiveToolsPingParametersCallbackInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackOutput() LiveToolsPingParametersCallbackOutput
	ToLiveToolsPingParametersCallbackOutputWithContext(context.Context) LiveToolsPingParametersCallbackOutput
}

type LiveToolsPingParametersCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsPingParametersCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsPingParametersCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsPingParametersCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallback)(nil)).Elem()
}

func (i LiveToolsPingParametersCallbackArgs) ToLiveToolsPingParametersCallbackOutput() LiveToolsPingParametersCallbackOutput {
	return i.ToLiveToolsPingParametersCallbackOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackArgs) ToLiveToolsPingParametersCallbackOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackOutput)
}

func (i LiveToolsPingParametersCallbackArgs) ToLiveToolsPingParametersCallbackPtrOutput() LiveToolsPingParametersCallbackPtrOutput {
	return i.ToLiveToolsPingParametersCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackArgs) ToLiveToolsPingParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackOutput).ToLiveToolsPingParametersCallbackPtrOutputWithContext(ctx)
}

// LiveToolsPingParametersCallbackPtrInput is an input type that accepts LiveToolsPingParametersCallbackArgs, LiveToolsPingParametersCallbackPtr and LiveToolsPingParametersCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackPtrInput` via:
//
//	        LiveToolsPingParametersCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingParametersCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackPtrOutput() LiveToolsPingParametersCallbackPtrOutput
	ToLiveToolsPingParametersCallbackPtrOutputWithContext(context.Context) LiveToolsPingParametersCallbackPtrOutput
}

type liveToolsPingParametersCallbackPtrType LiveToolsPingParametersCallbackArgs

func LiveToolsPingParametersCallbackPtr(v *LiveToolsPingParametersCallbackArgs) LiveToolsPingParametersCallbackPtrInput {
	return (*liveToolsPingParametersCallbackPtrType)(v)
}

func (*liveToolsPingParametersCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallback)(nil)).Elem()
}

func (i *liveToolsPingParametersCallbackPtrType) ToLiveToolsPingParametersCallbackPtrOutput() LiveToolsPingParametersCallbackPtrOutput {
	return i.ToLiveToolsPingParametersCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingParametersCallbackPtrType) ToLiveToolsPingParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackPtrOutput)
}

type LiveToolsPingParametersCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallback)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackOutput) ToLiveToolsPingParametersCallbackOutput() LiveToolsPingParametersCallbackOutput {
	return o
}

func (o LiveToolsPingParametersCallbackOutput) ToLiveToolsPingParametersCallbackOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackOutput {
	return o
}

func (o LiveToolsPingParametersCallbackOutput) ToLiveToolsPingParametersCallbackPtrOutput() LiveToolsPingParametersCallbackPtrOutput {
	return o.ToLiveToolsPingParametersCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingParametersCallbackOutput) ToLiveToolsPingParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingParametersCallback) *LiveToolsPingParametersCallback {
		return &v
	}).(LiveToolsPingParametersCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsPingParametersCallbackOutput) HttpServer() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallback) *LiveToolsPingParametersCallbackHttpServer {
		return v.HttpServer
	}).(LiveToolsPingParametersCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsPingParametersCallbackOutput) PayloadTemplate() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallback) *LiveToolsPingParametersCallbackPayloadTemplate {
		return v.PayloadTemplate
	}).(LiveToolsPingParametersCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsPingParametersCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsPingParametersCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallback)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackPtrOutput) ToLiveToolsPingParametersCallbackPtrOutput() LiveToolsPingParametersCallbackPtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPtrOutput) ToLiveToolsPingParametersCallbackPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPtrOutput) Elem() LiveToolsPingParametersCallbackOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallback) LiveToolsPingParametersCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingParametersCallback
		return ret
	}).(LiveToolsPingParametersCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsPingParametersCallbackPtrOutput) HttpServer() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallback) *LiveToolsPingParametersCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsPingParametersCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsPingParametersCallbackPtrOutput) PayloadTemplate() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallback) *LiveToolsPingParametersCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsPingParametersCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsPingParametersCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsPingParametersCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsPingParametersCallbackHttpServerInput is an input type that accepts LiveToolsPingParametersCallbackHttpServerArgs and LiveToolsPingParametersCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackHttpServerInput` via:
//
//	LiveToolsPingParametersCallbackHttpServerArgs{...}
type LiveToolsPingParametersCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackHttpServerOutput() LiveToolsPingParametersCallbackHttpServerOutput
	ToLiveToolsPingParametersCallbackHttpServerOutputWithContext(context.Context) LiveToolsPingParametersCallbackHttpServerOutput
}

type LiveToolsPingParametersCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsPingParametersCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsPingParametersCallbackHttpServerArgs) ToLiveToolsPingParametersCallbackHttpServerOutput() LiveToolsPingParametersCallbackHttpServerOutput {
	return i.ToLiveToolsPingParametersCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackHttpServerArgs) ToLiveToolsPingParametersCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackHttpServerOutput)
}

func (i LiveToolsPingParametersCallbackHttpServerArgs) ToLiveToolsPingParametersCallbackHttpServerPtrOutput() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return i.ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackHttpServerArgs) ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackHttpServerOutput).ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsPingParametersCallbackHttpServerPtrInput is an input type that accepts LiveToolsPingParametersCallbackHttpServerArgs, LiveToolsPingParametersCallbackHttpServerPtr and LiveToolsPingParametersCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackHttpServerPtrInput` via:
//
//	        LiveToolsPingParametersCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingParametersCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackHttpServerPtrOutput() LiveToolsPingParametersCallbackHttpServerPtrOutput
	ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsPingParametersCallbackHttpServerPtrOutput
}

type liveToolsPingParametersCallbackHttpServerPtrType LiveToolsPingParametersCallbackHttpServerArgs

func LiveToolsPingParametersCallbackHttpServerPtr(v *LiveToolsPingParametersCallbackHttpServerArgs) LiveToolsPingParametersCallbackHttpServerPtrInput {
	return (*liveToolsPingParametersCallbackHttpServerPtrType)(v)
}

func (*liveToolsPingParametersCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsPingParametersCallbackHttpServerPtrType) ToLiveToolsPingParametersCallbackHttpServerPtrOutput() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return i.ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsPingParametersCallbackHttpServerPtrType) ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackHttpServerPtrOutput)
}

type LiveToolsPingParametersCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackHttpServerOutput) ToLiveToolsPingParametersCallbackHttpServerOutput() LiveToolsPingParametersCallbackHttpServerOutput {
	return o
}

func (o LiveToolsPingParametersCallbackHttpServerOutput) ToLiveToolsPingParametersCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerOutput {
	return o
}

func (o LiveToolsPingParametersCallbackHttpServerOutput) ToLiveToolsPingParametersCallbackHttpServerPtrOutput() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o.ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsPingParametersCallbackHttpServerOutput) ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingParametersCallbackHttpServer) *LiveToolsPingParametersCallbackHttpServer {
		return &v
	}).(LiveToolsPingParametersCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsPingParametersCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackHttpServerPtrOutput) ToLiveToolsPingParametersCallbackHttpServerPtrOutput() LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackHttpServerPtrOutput) ToLiveToolsPingParametersCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackHttpServerPtrOutput) Elem() LiveToolsPingParametersCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallbackHttpServer) LiveToolsPingParametersCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingParametersCallbackHttpServer
		return ret
	}).(LiveToolsPingParametersCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsPingParametersCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsPingParametersCallbackPayloadTemplateInput is an input type that accepts LiveToolsPingParametersCallbackPayloadTemplateArgs and LiveToolsPingParametersCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackPayloadTemplateInput` via:
//
//	LiveToolsPingParametersCallbackPayloadTemplateArgs{...}
type LiveToolsPingParametersCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackPayloadTemplateOutput() LiveToolsPingParametersCallbackPayloadTemplateOutput
	ToLiveToolsPingParametersCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsPingParametersCallbackPayloadTemplateOutput
}

type LiveToolsPingParametersCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsPingParametersCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsPingParametersCallbackPayloadTemplateArgs) ToLiveToolsPingParametersCallbackPayloadTemplateOutput() LiveToolsPingParametersCallbackPayloadTemplateOutput {
	return i.ToLiveToolsPingParametersCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackPayloadTemplateArgs) ToLiveToolsPingParametersCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackPayloadTemplateOutput)
}

func (i LiveToolsPingParametersCallbackPayloadTemplateArgs) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsPingParametersCallbackPayloadTemplateArgs) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackPayloadTemplateOutput).ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsPingParametersCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsPingParametersCallbackPayloadTemplateArgs, LiveToolsPingParametersCallbackPayloadTemplatePtr and LiveToolsPingParametersCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsPingParametersCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsPingParametersCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsPingParametersCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput
	ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsPingParametersCallbackPayloadTemplatePtrOutput
}

type liveToolsPingParametersCallbackPayloadTemplatePtrType LiveToolsPingParametersCallbackPayloadTemplateArgs

func LiveToolsPingParametersCallbackPayloadTemplatePtr(v *LiveToolsPingParametersCallbackPayloadTemplateArgs) LiveToolsPingParametersCallbackPayloadTemplatePtrInput {
	return (*liveToolsPingParametersCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsPingParametersCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsPingParametersCallbackPayloadTemplatePtrType) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsPingParametersCallbackPayloadTemplatePtrType) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsPingParametersCallbackPayloadTemplatePtrOutput)
}

type LiveToolsPingParametersCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsPingParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackPayloadTemplateOutput) ToLiveToolsPingParametersCallbackPayloadTemplateOutput() LiveToolsPingParametersCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPayloadTemplateOutput) ToLiveToolsPingParametersCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPayloadTemplateOutput) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsPingParametersCallbackPayloadTemplateOutput) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsPingParametersCallbackPayloadTemplate) *LiveToolsPingParametersCallbackPayloadTemplate {
		return &v
	}).(LiveToolsPingParametersCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsPingParametersCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsPingParametersCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsPingParametersCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsPingParametersCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsPingParametersCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsPingParametersCallbackPayloadTemplatePtrOutput) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutput() LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPayloadTemplatePtrOutput) ToLiveToolsPingParametersCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsPingParametersCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsPingParametersCallbackPayloadTemplatePtrOutput) Elem() LiveToolsPingParametersCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallbackPayloadTemplate) LiveToolsPingParametersCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsPingParametersCallbackPayloadTemplate
		return ret
	}).(LiveToolsPingParametersCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsPingParametersCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsPingParametersCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsThroughputTestCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsThroughputTestCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsThroughputTestCallbackInput is an input type that accepts LiveToolsThroughputTestCallbackArgs and LiveToolsThroughputTestCallbackOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackInput` via:
//
//	LiveToolsThroughputTestCallbackArgs{...}
type LiveToolsThroughputTestCallbackInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackOutput() LiveToolsThroughputTestCallbackOutput
	ToLiveToolsThroughputTestCallbackOutputWithContext(context.Context) LiveToolsThroughputTestCallbackOutput
}

type LiveToolsThroughputTestCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsThroughputTestCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsThroughputTestCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsThroughputTestCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallback)(nil)).Elem()
}

func (i LiveToolsThroughputTestCallbackArgs) ToLiveToolsThroughputTestCallbackOutput() LiveToolsThroughputTestCallbackOutput {
	return i.ToLiveToolsThroughputTestCallbackOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackArgs) ToLiveToolsThroughputTestCallbackOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackOutput)
}

func (i LiveToolsThroughputTestCallbackArgs) ToLiveToolsThroughputTestCallbackPtrOutput() LiveToolsThroughputTestCallbackPtrOutput {
	return i.ToLiveToolsThroughputTestCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackArgs) ToLiveToolsThroughputTestCallbackPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackOutput).ToLiveToolsThroughputTestCallbackPtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestCallbackPtrInput is an input type that accepts LiveToolsThroughputTestCallbackArgs, LiveToolsThroughputTestCallbackPtr and LiveToolsThroughputTestCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackPtrInput` via:
//
//	        LiveToolsThroughputTestCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackPtrOutput() LiveToolsThroughputTestCallbackPtrOutput
	ToLiveToolsThroughputTestCallbackPtrOutputWithContext(context.Context) LiveToolsThroughputTestCallbackPtrOutput
}

type liveToolsThroughputTestCallbackPtrType LiveToolsThroughputTestCallbackArgs

func LiveToolsThroughputTestCallbackPtr(v *LiveToolsThroughputTestCallbackArgs) LiveToolsThroughputTestCallbackPtrInput {
	return (*liveToolsThroughputTestCallbackPtrType)(v)
}

func (*liveToolsThroughputTestCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallback)(nil)).Elem()
}

func (i *liveToolsThroughputTestCallbackPtrType) ToLiveToolsThroughputTestCallbackPtrOutput() LiveToolsThroughputTestCallbackPtrOutput {
	return i.ToLiveToolsThroughputTestCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestCallbackPtrType) ToLiveToolsThroughputTestCallbackPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackPtrOutput)
}

type LiveToolsThroughputTestCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallback)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackOutput) ToLiveToolsThroughputTestCallbackOutput() LiveToolsThroughputTestCallbackOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackOutput) ToLiveToolsThroughputTestCallbackOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackOutput) ToLiveToolsThroughputTestCallbackPtrOutput() LiveToolsThroughputTestCallbackPtrOutput {
	return o.ToLiveToolsThroughputTestCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestCallbackOutput) ToLiveToolsThroughputTestCallbackPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestCallback) *LiveToolsThroughputTestCallback {
		return &v
	}).(LiveToolsThroughputTestCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsThroughputTestCallbackOutput) HttpServer() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallback) *LiveToolsThroughputTestCallbackHttpServer {
		return v.HttpServer
	}).(LiveToolsThroughputTestCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsThroughputTestCallbackOutput) PayloadTemplate() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallback) *LiveToolsThroughputTestCallbackPayloadTemplate {
		return v.PayloadTemplate
	}).(LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsThroughputTestCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsThroughputTestCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallback)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackPtrOutput) ToLiveToolsThroughputTestCallbackPtrOutput() LiveToolsThroughputTestCallbackPtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPtrOutput) ToLiveToolsThroughputTestCallbackPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPtrOutput) Elem() LiveToolsThroughputTestCallbackOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallback) LiveToolsThroughputTestCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestCallback
		return ret
	}).(LiveToolsThroughputTestCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsThroughputTestCallbackPtrOutput) HttpServer() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallback) *LiveToolsThroughputTestCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsThroughputTestCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsThroughputTestCallbackPtrOutput) PayloadTemplate() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallback) *LiveToolsThroughputTestCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsThroughputTestCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsThroughputTestCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsThroughputTestCallbackHttpServerInput is an input type that accepts LiveToolsThroughputTestCallbackHttpServerArgs and LiveToolsThroughputTestCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackHttpServerInput` via:
//
//	LiveToolsThroughputTestCallbackHttpServerArgs{...}
type LiveToolsThroughputTestCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackHttpServerOutput() LiveToolsThroughputTestCallbackHttpServerOutput
	ToLiveToolsThroughputTestCallbackHttpServerOutputWithContext(context.Context) LiveToolsThroughputTestCallbackHttpServerOutput
}

type LiveToolsThroughputTestCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsThroughputTestCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsThroughputTestCallbackHttpServerArgs) ToLiveToolsThroughputTestCallbackHttpServerOutput() LiveToolsThroughputTestCallbackHttpServerOutput {
	return i.ToLiveToolsThroughputTestCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackHttpServerArgs) ToLiveToolsThroughputTestCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackHttpServerOutput)
}

func (i LiveToolsThroughputTestCallbackHttpServerArgs) ToLiveToolsThroughputTestCallbackHttpServerPtrOutput() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return i.ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackHttpServerArgs) ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackHttpServerOutput).ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestCallbackHttpServerPtrInput is an input type that accepts LiveToolsThroughputTestCallbackHttpServerArgs, LiveToolsThroughputTestCallbackHttpServerPtr and LiveToolsThroughputTestCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackHttpServerPtrInput` via:
//
//	        LiveToolsThroughputTestCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackHttpServerPtrOutput() LiveToolsThroughputTestCallbackHttpServerPtrOutput
	ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsThroughputTestCallbackHttpServerPtrOutput
}

type liveToolsThroughputTestCallbackHttpServerPtrType LiveToolsThroughputTestCallbackHttpServerArgs

func LiveToolsThroughputTestCallbackHttpServerPtr(v *LiveToolsThroughputTestCallbackHttpServerArgs) LiveToolsThroughputTestCallbackHttpServerPtrInput {
	return (*liveToolsThroughputTestCallbackHttpServerPtrType)(v)
}

func (*liveToolsThroughputTestCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsThroughputTestCallbackHttpServerPtrType) ToLiveToolsThroughputTestCallbackHttpServerPtrOutput() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return i.ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestCallbackHttpServerPtrType) ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackHttpServerPtrOutput)
}

type LiveToolsThroughputTestCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackHttpServerOutput) ToLiveToolsThroughputTestCallbackHttpServerOutput() LiveToolsThroughputTestCallbackHttpServerOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackHttpServerOutput) ToLiveToolsThroughputTestCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackHttpServerOutput) ToLiveToolsThroughputTestCallbackHttpServerPtrOutput() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o.ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestCallbackHttpServerOutput) ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestCallbackHttpServer) *LiveToolsThroughputTestCallbackHttpServer {
		return &v
	}).(LiveToolsThroughputTestCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsThroughputTestCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackHttpServerPtrOutput) ToLiveToolsThroughputTestCallbackHttpServerPtrOutput() LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackHttpServerPtrOutput) ToLiveToolsThroughputTestCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackHttpServerPtrOutput) Elem() LiveToolsThroughputTestCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallbackHttpServer) LiveToolsThroughputTestCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestCallbackHttpServer
		return ret
	}).(LiveToolsThroughputTestCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsThroughputTestCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsThroughputTestCallbackPayloadTemplateInput is an input type that accepts LiveToolsThroughputTestCallbackPayloadTemplateArgs and LiveToolsThroughputTestCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackPayloadTemplateInput` via:
//
//	LiveToolsThroughputTestCallbackPayloadTemplateArgs{...}
type LiveToolsThroughputTestCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackPayloadTemplateOutput() LiveToolsThroughputTestCallbackPayloadTemplateOutput
	ToLiveToolsThroughputTestCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsThroughputTestCallbackPayloadTemplateOutput
}

type LiveToolsThroughputTestCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsThroughputTestCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsThroughputTestCallbackPayloadTemplateArgs) ToLiveToolsThroughputTestCallbackPayloadTemplateOutput() LiveToolsThroughputTestCallbackPayloadTemplateOutput {
	return i.ToLiveToolsThroughputTestCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackPayloadTemplateArgs) ToLiveToolsThroughputTestCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackPayloadTemplateOutput)
}

func (i LiveToolsThroughputTestCallbackPayloadTemplateArgs) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutput() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestCallbackPayloadTemplateArgs) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackPayloadTemplateOutput).ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsThroughputTestCallbackPayloadTemplateArgs, LiveToolsThroughputTestCallbackPayloadTemplatePtr and LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsThroughputTestCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutput() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput
	ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput
}

type liveToolsThroughputTestCallbackPayloadTemplatePtrType LiveToolsThroughputTestCallbackPayloadTemplateArgs

func LiveToolsThroughputTestCallbackPayloadTemplatePtr(v *LiveToolsThroughputTestCallbackPayloadTemplateArgs) LiveToolsThroughputTestCallbackPayloadTemplatePtrInput {
	return (*liveToolsThroughputTestCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsThroughputTestCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsThroughputTestCallbackPayloadTemplatePtrType) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutput() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestCallbackPayloadTemplatePtrType) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput)
}

type LiveToolsThroughputTestCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackPayloadTemplateOutput) ToLiveToolsThroughputTestCallbackPayloadTemplateOutput() LiveToolsThroughputTestCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPayloadTemplateOutput) ToLiveToolsThroughputTestCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPayloadTemplateOutput) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutput() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestCallbackPayloadTemplateOutput) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestCallbackPayloadTemplate) *LiveToolsThroughputTestCallbackPayloadTemplate {
		return &v
	}).(LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsThroughputTestCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutput() LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput) ToLiveToolsThroughputTestCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput) Elem() LiveToolsThroughputTestCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallbackPayloadTemplate) LiveToolsThroughputTestCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestCallbackPayloadTemplate
		return ret
	}).(LiveToolsThroughputTestCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestRequest struct {
	// Device serial number
	Serial *string `pulumi:"serial"`
}

// LiveToolsThroughputTestRequestInput is an input type that accepts LiveToolsThroughputTestRequestArgs and LiveToolsThroughputTestRequestOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestRequestInput` via:
//
//	LiveToolsThroughputTestRequestArgs{...}
type LiveToolsThroughputTestRequestInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestRequestOutput() LiveToolsThroughputTestRequestOutput
	ToLiveToolsThroughputTestRequestOutputWithContext(context.Context) LiveToolsThroughputTestRequestOutput
}

type LiveToolsThroughputTestRequestArgs struct {
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (LiveToolsThroughputTestRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestRequest)(nil)).Elem()
}

func (i LiveToolsThroughputTestRequestArgs) ToLiveToolsThroughputTestRequestOutput() LiveToolsThroughputTestRequestOutput {
	return i.ToLiveToolsThroughputTestRequestOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestRequestArgs) ToLiveToolsThroughputTestRequestOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestRequestOutput)
}

func (i LiveToolsThroughputTestRequestArgs) ToLiveToolsThroughputTestRequestPtrOutput() LiveToolsThroughputTestRequestPtrOutput {
	return i.ToLiveToolsThroughputTestRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestRequestArgs) ToLiveToolsThroughputTestRequestPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestRequestOutput).ToLiveToolsThroughputTestRequestPtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestRequestPtrInput is an input type that accepts LiveToolsThroughputTestRequestArgs, LiveToolsThroughputTestRequestPtr and LiveToolsThroughputTestRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestRequestPtrInput` via:
//
//	        LiveToolsThroughputTestRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestRequestPtrOutput() LiveToolsThroughputTestRequestPtrOutput
	ToLiveToolsThroughputTestRequestPtrOutputWithContext(context.Context) LiveToolsThroughputTestRequestPtrOutput
}

type liveToolsThroughputTestRequestPtrType LiveToolsThroughputTestRequestArgs

func LiveToolsThroughputTestRequestPtr(v *LiveToolsThroughputTestRequestArgs) LiveToolsThroughputTestRequestPtrInput {
	return (*liveToolsThroughputTestRequestPtrType)(v)
}

func (*liveToolsThroughputTestRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestRequest)(nil)).Elem()
}

func (i *liveToolsThroughputTestRequestPtrType) ToLiveToolsThroughputTestRequestPtrOutput() LiveToolsThroughputTestRequestPtrOutput {
	return i.ToLiveToolsThroughputTestRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestRequestPtrType) ToLiveToolsThroughputTestRequestPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestRequestPtrOutput)
}

type LiveToolsThroughputTestRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestRequest)(nil)).Elem()
}

func (o LiveToolsThroughputTestRequestOutput) ToLiveToolsThroughputTestRequestOutput() LiveToolsThroughputTestRequestOutput {
	return o
}

func (o LiveToolsThroughputTestRequestOutput) ToLiveToolsThroughputTestRequestOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestOutput {
	return o
}

func (o LiveToolsThroughputTestRequestOutput) ToLiveToolsThroughputTestRequestPtrOutput() LiveToolsThroughputTestRequestPtrOutput {
	return o.ToLiveToolsThroughputTestRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestRequestOutput) ToLiveToolsThroughputTestRequestPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestRequest) *LiveToolsThroughputTestRequest {
		return &v
	}).(LiveToolsThroughputTestRequestPtrOutput)
}

// Device serial number
func (o LiveToolsThroughputTestRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestRequest)(nil)).Elem()
}

func (o LiveToolsThroughputTestRequestPtrOutput) ToLiveToolsThroughputTestRequestPtrOutput() LiveToolsThroughputTestRequestPtrOutput {
	return o
}

func (o LiveToolsThroughputTestRequestPtrOutput) ToLiveToolsThroughputTestRequestPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestRequestPtrOutput {
	return o
}

func (o LiveToolsThroughputTestRequestPtrOutput) Elem() LiveToolsThroughputTestRequestOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestRequest) LiveToolsThroughputTestRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestRequest
		return ret
	}).(LiveToolsThroughputTestRequestOutput)
}

// Device serial number
func (o LiveToolsThroughputTestRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

type LiveToolsThroughputTestResult struct {
	// Shows the speeds (Mbps)
	Speeds *LiveToolsThroughputTestResultSpeeds `pulumi:"speeds"`
}

// LiveToolsThroughputTestResultInput is an input type that accepts LiveToolsThroughputTestResultArgs and LiveToolsThroughputTestResultOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestResultInput` via:
//
//	LiveToolsThroughputTestResultArgs{...}
type LiveToolsThroughputTestResultInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestResultOutput() LiveToolsThroughputTestResultOutput
	ToLiveToolsThroughputTestResultOutputWithContext(context.Context) LiveToolsThroughputTestResultOutput
}

type LiveToolsThroughputTestResultArgs struct {
	// Shows the speeds (Mbps)
	Speeds LiveToolsThroughputTestResultSpeedsPtrInput `pulumi:"speeds"`
}

func (LiveToolsThroughputTestResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestResult)(nil)).Elem()
}

func (i LiveToolsThroughputTestResultArgs) ToLiveToolsThroughputTestResultOutput() LiveToolsThroughputTestResultOutput {
	return i.ToLiveToolsThroughputTestResultOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestResultArgs) ToLiveToolsThroughputTestResultOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultOutput)
}

func (i LiveToolsThroughputTestResultArgs) ToLiveToolsThroughputTestResultPtrOutput() LiveToolsThroughputTestResultPtrOutput {
	return i.ToLiveToolsThroughputTestResultPtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestResultArgs) ToLiveToolsThroughputTestResultPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultOutput).ToLiveToolsThroughputTestResultPtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestResultPtrInput is an input type that accepts LiveToolsThroughputTestResultArgs, LiveToolsThroughputTestResultPtr and LiveToolsThroughputTestResultPtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestResultPtrInput` via:
//
//	        LiveToolsThroughputTestResultArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestResultPtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestResultPtrOutput() LiveToolsThroughputTestResultPtrOutput
	ToLiveToolsThroughputTestResultPtrOutputWithContext(context.Context) LiveToolsThroughputTestResultPtrOutput
}

type liveToolsThroughputTestResultPtrType LiveToolsThroughputTestResultArgs

func LiveToolsThroughputTestResultPtr(v *LiveToolsThroughputTestResultArgs) LiveToolsThroughputTestResultPtrInput {
	return (*liveToolsThroughputTestResultPtrType)(v)
}

func (*liveToolsThroughputTestResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestResult)(nil)).Elem()
}

func (i *liveToolsThroughputTestResultPtrType) ToLiveToolsThroughputTestResultPtrOutput() LiveToolsThroughputTestResultPtrOutput {
	return i.ToLiveToolsThroughputTestResultPtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestResultPtrType) ToLiveToolsThroughputTestResultPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultPtrOutput)
}

type LiveToolsThroughputTestResultOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestResult)(nil)).Elem()
}

func (o LiveToolsThroughputTestResultOutput) ToLiveToolsThroughputTestResultOutput() LiveToolsThroughputTestResultOutput {
	return o
}

func (o LiveToolsThroughputTestResultOutput) ToLiveToolsThroughputTestResultOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultOutput {
	return o
}

func (o LiveToolsThroughputTestResultOutput) ToLiveToolsThroughputTestResultPtrOutput() LiveToolsThroughputTestResultPtrOutput {
	return o.ToLiveToolsThroughputTestResultPtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestResultOutput) ToLiveToolsThroughputTestResultPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestResult) *LiveToolsThroughputTestResult {
		return &v
	}).(LiveToolsThroughputTestResultPtrOutput)
}

// Shows the speeds (Mbps)
func (o LiveToolsThroughputTestResultOutput) Speeds() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestResult) *LiveToolsThroughputTestResultSpeeds { return v.Speeds }).(LiveToolsThroughputTestResultSpeedsPtrOutput)
}

type LiveToolsThroughputTestResultPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestResult)(nil)).Elem()
}

func (o LiveToolsThroughputTestResultPtrOutput) ToLiveToolsThroughputTestResultPtrOutput() LiveToolsThroughputTestResultPtrOutput {
	return o
}

func (o LiveToolsThroughputTestResultPtrOutput) ToLiveToolsThroughputTestResultPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultPtrOutput {
	return o
}

func (o LiveToolsThroughputTestResultPtrOutput) Elem() LiveToolsThroughputTestResultOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestResult) LiveToolsThroughputTestResult {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestResult
		return ret
	}).(LiveToolsThroughputTestResultOutput)
}

// Shows the speeds (Mbps)
func (o LiveToolsThroughputTestResultPtrOutput) Speeds() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestResult) *LiveToolsThroughputTestResultSpeeds {
		if v == nil {
			return nil
		}
		return v.Speeds
	}).(LiveToolsThroughputTestResultSpeedsPtrOutput)
}

type LiveToolsThroughputTestResultSpeeds struct {
	// Shows the download speed from shard (Mbps)
	Downstream *int `pulumi:"downstream"`
}

// LiveToolsThroughputTestResultSpeedsInput is an input type that accepts LiveToolsThroughputTestResultSpeedsArgs and LiveToolsThroughputTestResultSpeedsOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestResultSpeedsInput` via:
//
//	LiveToolsThroughputTestResultSpeedsArgs{...}
type LiveToolsThroughputTestResultSpeedsInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestResultSpeedsOutput() LiveToolsThroughputTestResultSpeedsOutput
	ToLiveToolsThroughputTestResultSpeedsOutputWithContext(context.Context) LiveToolsThroughputTestResultSpeedsOutput
}

type LiveToolsThroughputTestResultSpeedsArgs struct {
	// Shows the download speed from shard (Mbps)
	Downstream pulumi.IntPtrInput `pulumi:"downstream"`
}

func (LiveToolsThroughputTestResultSpeedsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestResultSpeeds)(nil)).Elem()
}

func (i LiveToolsThroughputTestResultSpeedsArgs) ToLiveToolsThroughputTestResultSpeedsOutput() LiveToolsThroughputTestResultSpeedsOutput {
	return i.ToLiveToolsThroughputTestResultSpeedsOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestResultSpeedsArgs) ToLiveToolsThroughputTestResultSpeedsOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultSpeedsOutput)
}

func (i LiveToolsThroughputTestResultSpeedsArgs) ToLiveToolsThroughputTestResultSpeedsPtrOutput() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return i.ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(context.Background())
}

func (i LiveToolsThroughputTestResultSpeedsArgs) ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultSpeedsOutput).ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(ctx)
}

// LiveToolsThroughputTestResultSpeedsPtrInput is an input type that accepts LiveToolsThroughputTestResultSpeedsArgs, LiveToolsThroughputTestResultSpeedsPtr and LiveToolsThroughputTestResultSpeedsPtrOutput values.
// You can construct a concrete instance of `LiveToolsThroughputTestResultSpeedsPtrInput` via:
//
//	        LiveToolsThroughputTestResultSpeedsArgs{...}
//
//	or:
//
//	        nil
type LiveToolsThroughputTestResultSpeedsPtrInput interface {
	pulumi.Input

	ToLiveToolsThroughputTestResultSpeedsPtrOutput() LiveToolsThroughputTestResultSpeedsPtrOutput
	ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(context.Context) LiveToolsThroughputTestResultSpeedsPtrOutput
}

type liveToolsThroughputTestResultSpeedsPtrType LiveToolsThroughputTestResultSpeedsArgs

func LiveToolsThroughputTestResultSpeedsPtr(v *LiveToolsThroughputTestResultSpeedsArgs) LiveToolsThroughputTestResultSpeedsPtrInput {
	return (*liveToolsThroughputTestResultSpeedsPtrType)(v)
}

func (*liveToolsThroughputTestResultSpeedsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestResultSpeeds)(nil)).Elem()
}

func (i *liveToolsThroughputTestResultSpeedsPtrType) ToLiveToolsThroughputTestResultSpeedsPtrOutput() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return i.ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(context.Background())
}

func (i *liveToolsThroughputTestResultSpeedsPtrType) ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsThroughputTestResultSpeedsPtrOutput)
}

type LiveToolsThroughputTestResultSpeedsOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestResultSpeedsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsThroughputTestResultSpeeds)(nil)).Elem()
}

func (o LiveToolsThroughputTestResultSpeedsOutput) ToLiveToolsThroughputTestResultSpeedsOutput() LiveToolsThroughputTestResultSpeedsOutput {
	return o
}

func (o LiveToolsThroughputTestResultSpeedsOutput) ToLiveToolsThroughputTestResultSpeedsOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsOutput {
	return o
}

func (o LiveToolsThroughputTestResultSpeedsOutput) ToLiveToolsThroughputTestResultSpeedsPtrOutput() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o.ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(context.Background())
}

func (o LiveToolsThroughputTestResultSpeedsOutput) ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsThroughputTestResultSpeeds) *LiveToolsThroughputTestResultSpeeds {
		return &v
	}).(LiveToolsThroughputTestResultSpeedsPtrOutput)
}

// Shows the download speed from shard (Mbps)
func (o LiveToolsThroughputTestResultSpeedsOutput) Downstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsThroughputTestResultSpeeds) *int { return v.Downstream }).(pulumi.IntPtrOutput)
}

type LiveToolsThroughputTestResultSpeedsPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsThroughputTestResultSpeedsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsThroughputTestResultSpeeds)(nil)).Elem()
}

func (o LiveToolsThroughputTestResultSpeedsPtrOutput) ToLiveToolsThroughputTestResultSpeedsPtrOutput() LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o
}

func (o LiveToolsThroughputTestResultSpeedsPtrOutput) ToLiveToolsThroughputTestResultSpeedsPtrOutputWithContext(ctx context.Context) LiveToolsThroughputTestResultSpeedsPtrOutput {
	return o
}

func (o LiveToolsThroughputTestResultSpeedsPtrOutput) Elem() LiveToolsThroughputTestResultSpeedsOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestResultSpeeds) LiveToolsThroughputTestResultSpeeds {
		if v != nil {
			return *v
		}
		var ret LiveToolsThroughputTestResultSpeeds
		return ret
	}).(LiveToolsThroughputTestResultSpeedsOutput)
}

// Shows the download speed from shard (Mbps)
func (o LiveToolsThroughputTestResultSpeedsPtrOutput) Downstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsThroughputTestResultSpeeds) *int {
		if v == nil {
			return nil
		}
		return v.Downstream
	}).(pulumi.IntPtrOutput)
}

type LiveToolsWakeOnLanCallback struct {
	// The webhook receiver used for the callback webhook.
	HttpServer *LiveToolsWakeOnLanCallbackHttpServer `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate *LiveToolsWakeOnLanCallbackPayloadTemplate `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url *string `pulumi:"url"`
}

// LiveToolsWakeOnLanCallbackInput is an input type that accepts LiveToolsWakeOnLanCallbackArgs and LiveToolsWakeOnLanCallbackOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackInput` via:
//
//	LiveToolsWakeOnLanCallbackArgs{...}
type LiveToolsWakeOnLanCallbackInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackOutput() LiveToolsWakeOnLanCallbackOutput
	ToLiveToolsWakeOnLanCallbackOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackOutput
}

type LiveToolsWakeOnLanCallbackArgs struct {
	// The webhook receiver used for the callback webhook.
	HttpServer LiveToolsWakeOnLanCallbackHttpServerPtrInput `pulumi:"httpServer"`
	// The payload template of the webhook used for the callback
	PayloadTemplate LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput `pulumi:"payloadTemplate"`
	// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (LiveToolsWakeOnLanCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallback)(nil)).Elem()
}

func (i LiveToolsWakeOnLanCallbackArgs) ToLiveToolsWakeOnLanCallbackOutput() LiveToolsWakeOnLanCallbackOutput {
	return i.ToLiveToolsWakeOnLanCallbackOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackArgs) ToLiveToolsWakeOnLanCallbackOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackOutput)
}

func (i LiveToolsWakeOnLanCallbackArgs) ToLiveToolsWakeOnLanCallbackPtrOutput() LiveToolsWakeOnLanCallbackPtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackArgs) ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackOutput).ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(ctx)
}

// LiveToolsWakeOnLanCallbackPtrInput is an input type that accepts LiveToolsWakeOnLanCallbackArgs, LiveToolsWakeOnLanCallbackPtr and LiveToolsWakeOnLanCallbackPtrOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackPtrInput` via:
//
//	        LiveToolsWakeOnLanCallbackArgs{...}
//
//	or:
//
//	        nil
type LiveToolsWakeOnLanCallbackPtrInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackPtrOutput() LiveToolsWakeOnLanCallbackPtrOutput
	ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackPtrOutput
}

type liveToolsWakeOnLanCallbackPtrType LiveToolsWakeOnLanCallbackArgs

func LiveToolsWakeOnLanCallbackPtr(v *LiveToolsWakeOnLanCallbackArgs) LiveToolsWakeOnLanCallbackPtrInput {
	return (*liveToolsWakeOnLanCallbackPtrType)(v)
}

func (*liveToolsWakeOnLanCallbackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallback)(nil)).Elem()
}

func (i *liveToolsWakeOnLanCallbackPtrType) ToLiveToolsWakeOnLanCallbackPtrOutput() LiveToolsWakeOnLanCallbackPtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(context.Background())
}

func (i *liveToolsWakeOnLanCallbackPtrType) ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackPtrOutput)
}

type LiveToolsWakeOnLanCallbackOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallback)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackOutput) ToLiveToolsWakeOnLanCallbackOutput() LiveToolsWakeOnLanCallbackOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackOutput) ToLiveToolsWakeOnLanCallbackOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackOutput) ToLiveToolsWakeOnLanCallbackPtrOutput() LiveToolsWakeOnLanCallbackPtrOutput {
	return o.ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(context.Background())
}

func (o LiveToolsWakeOnLanCallbackOutput) ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsWakeOnLanCallback) *LiveToolsWakeOnLanCallback {
		return &v
	}).(LiveToolsWakeOnLanCallbackPtrOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsWakeOnLanCallbackOutput) HttpServer() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallback) *LiveToolsWakeOnLanCallbackHttpServer { return v.HttpServer }).(LiveToolsWakeOnLanCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsWakeOnLanCallbackOutput) PayloadTemplate() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallback) *LiveToolsWakeOnLanCallbackPayloadTemplate {
		return v.PayloadTemplate
	}).(LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsWakeOnLanCallbackOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallback) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsWakeOnLanCallbackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallback) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanCallbackPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallback)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackPtrOutput) ToLiveToolsWakeOnLanCallbackPtrOutput() LiveToolsWakeOnLanCallbackPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPtrOutput) ToLiveToolsWakeOnLanCallbackPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPtrOutput) Elem() LiveToolsWakeOnLanCallbackOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallback) LiveToolsWakeOnLanCallback {
		if v != nil {
			return *v
		}
		var ret LiveToolsWakeOnLanCallback
		return ret
	}).(LiveToolsWakeOnLanCallbackOutput)
}

// The webhook receiver used for the callback webhook.
func (o LiveToolsWakeOnLanCallbackPtrOutput) HttpServer() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallback) *LiveToolsWakeOnLanCallbackHttpServer {
		if v == nil {
			return nil
		}
		return v.HttpServer
	}).(LiveToolsWakeOnLanCallbackHttpServerPtrOutput)
}

// The payload template of the webhook used for the callback
func (o LiveToolsWakeOnLanCallbackPtrOutput) PayloadTemplate() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallback) *LiveToolsWakeOnLanCallbackPayloadTemplate {
		if v == nil {
			return nil
		}
		return v.PayloadTemplate
	}).(LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput)
}

// A shared secret that will be included in the requests sent to the callback URL. It can be used to verify that the request was sent by Meraki. If using this field, please also specify an url.
func (o LiveToolsWakeOnLanCallbackPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallback) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// The callback URL for the webhook target. If using this field, please also specify a sharedSecret.
func (o LiveToolsWakeOnLanCallbackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallback) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanCallbackHttpServer struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id *string `pulumi:"id"`
}

// LiveToolsWakeOnLanCallbackHttpServerInput is an input type that accepts LiveToolsWakeOnLanCallbackHttpServerArgs and LiveToolsWakeOnLanCallbackHttpServerOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackHttpServerInput` via:
//
//	LiveToolsWakeOnLanCallbackHttpServerArgs{...}
type LiveToolsWakeOnLanCallbackHttpServerInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackHttpServerOutput() LiveToolsWakeOnLanCallbackHttpServerOutput
	ToLiveToolsWakeOnLanCallbackHttpServerOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackHttpServerOutput
}

type LiveToolsWakeOnLanCallbackHttpServerArgs struct {
	// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsWakeOnLanCallbackHttpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallbackHttpServer)(nil)).Elem()
}

func (i LiveToolsWakeOnLanCallbackHttpServerArgs) ToLiveToolsWakeOnLanCallbackHttpServerOutput() LiveToolsWakeOnLanCallbackHttpServerOutput {
	return i.ToLiveToolsWakeOnLanCallbackHttpServerOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackHttpServerArgs) ToLiveToolsWakeOnLanCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackHttpServerOutput)
}

func (i LiveToolsWakeOnLanCallbackHttpServerArgs) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutput() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackHttpServerArgs) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackHttpServerOutput).ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(ctx)
}

// LiveToolsWakeOnLanCallbackHttpServerPtrInput is an input type that accepts LiveToolsWakeOnLanCallbackHttpServerArgs, LiveToolsWakeOnLanCallbackHttpServerPtr and LiveToolsWakeOnLanCallbackHttpServerPtrOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackHttpServerPtrInput` via:
//
//	        LiveToolsWakeOnLanCallbackHttpServerArgs{...}
//
//	or:
//
//	        nil
type LiveToolsWakeOnLanCallbackHttpServerPtrInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackHttpServerPtrOutput() LiveToolsWakeOnLanCallbackHttpServerPtrOutput
	ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackHttpServerPtrOutput
}

type liveToolsWakeOnLanCallbackHttpServerPtrType LiveToolsWakeOnLanCallbackHttpServerArgs

func LiveToolsWakeOnLanCallbackHttpServerPtr(v *LiveToolsWakeOnLanCallbackHttpServerArgs) LiveToolsWakeOnLanCallbackHttpServerPtrInput {
	return (*liveToolsWakeOnLanCallbackHttpServerPtrType)(v)
}

func (*liveToolsWakeOnLanCallbackHttpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallbackHttpServer)(nil)).Elem()
}

func (i *liveToolsWakeOnLanCallbackHttpServerPtrType) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutput() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (i *liveToolsWakeOnLanCallbackHttpServerPtrType) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackHttpServerPtrOutput)
}

type LiveToolsWakeOnLanCallbackHttpServerOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackHttpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackHttpServerOutput) ToLiveToolsWakeOnLanCallbackHttpServerOutput() LiveToolsWakeOnLanCallbackHttpServerOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackHttpServerOutput) ToLiveToolsWakeOnLanCallbackHttpServerOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackHttpServerOutput) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutput() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o.ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(context.Background())
}

func (o LiveToolsWakeOnLanCallbackHttpServerOutput) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsWakeOnLanCallbackHttpServer) *LiveToolsWakeOnLanCallbackHttpServer {
		return &v
	}).(LiveToolsWakeOnLanCallbackHttpServerPtrOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsWakeOnLanCallbackHttpServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallbackHttpServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanCallbackHttpServerPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackHttpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallbackHttpServer)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackHttpServerPtrOutput) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutput() LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackHttpServerPtrOutput) ToLiveToolsWakeOnLanCallbackHttpServerPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackHttpServerPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackHttpServerPtrOutput) Elem() LiveToolsWakeOnLanCallbackHttpServerOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallbackHttpServer) LiveToolsWakeOnLanCallbackHttpServer {
		if v != nil {
			return *v
		}
		var ret LiveToolsWakeOnLanCallbackHttpServer
		return ret
	}).(LiveToolsWakeOnLanCallbackHttpServerOutput)
}

// The webhook receiver ID that will receive information. If specifying this, please leave the url and sharedSecret fields blank.
func (o LiveToolsWakeOnLanCallbackHttpServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallbackHttpServer) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanCallbackPayloadTemplate struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id *string `pulumi:"id"`
}

// LiveToolsWakeOnLanCallbackPayloadTemplateInput is an input type that accepts LiveToolsWakeOnLanCallbackPayloadTemplateArgs and LiveToolsWakeOnLanCallbackPayloadTemplateOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackPayloadTemplateInput` via:
//
//	LiveToolsWakeOnLanCallbackPayloadTemplateArgs{...}
type LiveToolsWakeOnLanCallbackPayloadTemplateInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackPayloadTemplateOutput() LiveToolsWakeOnLanCallbackPayloadTemplateOutput
	ToLiveToolsWakeOnLanCallbackPayloadTemplateOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackPayloadTemplateOutput
}

type LiveToolsWakeOnLanCallbackPayloadTemplateArgs struct {
	// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LiveToolsWakeOnLanCallbackPayloadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallbackPayloadTemplate)(nil)).Elem()
}

func (i LiveToolsWakeOnLanCallbackPayloadTemplateArgs) ToLiveToolsWakeOnLanCallbackPayloadTemplateOutput() LiveToolsWakeOnLanCallbackPayloadTemplateOutput {
	return i.ToLiveToolsWakeOnLanCallbackPayloadTemplateOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackPayloadTemplateArgs) ToLiveToolsWakeOnLanCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackPayloadTemplateOutput)
}

func (i LiveToolsWakeOnLanCallbackPayloadTemplateArgs) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanCallbackPayloadTemplateArgs) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackPayloadTemplateOutput).ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(ctx)
}

// LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput is an input type that accepts LiveToolsWakeOnLanCallbackPayloadTemplateArgs, LiveToolsWakeOnLanCallbackPayloadTemplatePtr and LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput` via:
//
//	        LiveToolsWakeOnLanCallbackPayloadTemplateArgs{...}
//
//	or:
//
//	        nil
type LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput
	ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(context.Context) LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput
}

type liveToolsWakeOnLanCallbackPayloadTemplatePtrType LiveToolsWakeOnLanCallbackPayloadTemplateArgs

func LiveToolsWakeOnLanCallbackPayloadTemplatePtr(v *LiveToolsWakeOnLanCallbackPayloadTemplateArgs) LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput {
	return (*liveToolsWakeOnLanCallbackPayloadTemplatePtrType)(v)
}

func (*liveToolsWakeOnLanCallbackPayloadTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallbackPayloadTemplate)(nil)).Elem()
}

func (i *liveToolsWakeOnLanCallbackPayloadTemplatePtrType) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return i.ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (i *liveToolsWakeOnLanCallbackPayloadTemplatePtrType) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput)
}

type LiveToolsWakeOnLanCallbackPayloadTemplateOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackPayloadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplateOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplateOutput() LiveToolsWakeOnLanCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplateOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplateOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplateOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplateOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o.ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(context.Background())
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplateOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsWakeOnLanCallbackPayloadTemplate) *LiveToolsWakeOnLanCallbackPayloadTemplate {
		return &v
	}).(LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsWakeOnLanCallbackPayloadTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanCallbackPayloadTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanCallbackPayloadTemplate)(nil)).Elem()
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput() LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput) ToLiveToolsWakeOnLanCallbackPayloadTemplatePtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput {
	return o
}

func (o LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput) Elem() LiveToolsWakeOnLanCallbackPayloadTemplateOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallbackPayloadTemplate) LiveToolsWakeOnLanCallbackPayloadTemplate {
		if v != nil {
			return *v
		}
		var ret LiveToolsWakeOnLanCallbackPayloadTemplate
		return ret
	}).(LiveToolsWakeOnLanCallbackPayloadTemplateOutput)
}

// The ID of the payload template. Defaults to 'wpt_00005' for the Callback (included) template.
func (o LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanCallbackPayloadTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LiveToolsWakeOnLanRequest struct {
	// The target's MAC address
	Mac *string `pulumi:"mac"`
	// Device serial number
	Serial *string `pulumi:"serial"`
	// The target's VLAN (1 to 4094)
	VlanId *int `pulumi:"vlanId"`
}

// LiveToolsWakeOnLanRequestInput is an input type that accepts LiveToolsWakeOnLanRequestArgs and LiveToolsWakeOnLanRequestOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanRequestInput` via:
//
//	LiveToolsWakeOnLanRequestArgs{...}
type LiveToolsWakeOnLanRequestInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanRequestOutput() LiveToolsWakeOnLanRequestOutput
	ToLiveToolsWakeOnLanRequestOutputWithContext(context.Context) LiveToolsWakeOnLanRequestOutput
}

type LiveToolsWakeOnLanRequestArgs struct {
	// The target's MAC address
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Device serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// The target's VLAN (1 to 4094)
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (LiveToolsWakeOnLanRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanRequest)(nil)).Elem()
}

func (i LiveToolsWakeOnLanRequestArgs) ToLiveToolsWakeOnLanRequestOutput() LiveToolsWakeOnLanRequestOutput {
	return i.ToLiveToolsWakeOnLanRequestOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanRequestArgs) ToLiveToolsWakeOnLanRequestOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanRequestOutput)
}

func (i LiveToolsWakeOnLanRequestArgs) ToLiveToolsWakeOnLanRequestPtrOutput() LiveToolsWakeOnLanRequestPtrOutput {
	return i.ToLiveToolsWakeOnLanRequestPtrOutputWithContext(context.Background())
}

func (i LiveToolsWakeOnLanRequestArgs) ToLiveToolsWakeOnLanRequestPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanRequestOutput).ToLiveToolsWakeOnLanRequestPtrOutputWithContext(ctx)
}

// LiveToolsWakeOnLanRequestPtrInput is an input type that accepts LiveToolsWakeOnLanRequestArgs, LiveToolsWakeOnLanRequestPtr and LiveToolsWakeOnLanRequestPtrOutput values.
// You can construct a concrete instance of `LiveToolsWakeOnLanRequestPtrInput` via:
//
//	        LiveToolsWakeOnLanRequestArgs{...}
//
//	or:
//
//	        nil
type LiveToolsWakeOnLanRequestPtrInput interface {
	pulumi.Input

	ToLiveToolsWakeOnLanRequestPtrOutput() LiveToolsWakeOnLanRequestPtrOutput
	ToLiveToolsWakeOnLanRequestPtrOutputWithContext(context.Context) LiveToolsWakeOnLanRequestPtrOutput
}

type liveToolsWakeOnLanRequestPtrType LiveToolsWakeOnLanRequestArgs

func LiveToolsWakeOnLanRequestPtr(v *LiveToolsWakeOnLanRequestArgs) LiveToolsWakeOnLanRequestPtrInput {
	return (*liveToolsWakeOnLanRequestPtrType)(v)
}

func (*liveToolsWakeOnLanRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanRequest)(nil)).Elem()
}

func (i *liveToolsWakeOnLanRequestPtrType) ToLiveToolsWakeOnLanRequestPtrOutput() LiveToolsWakeOnLanRequestPtrOutput {
	return i.ToLiveToolsWakeOnLanRequestPtrOutputWithContext(context.Background())
}

func (i *liveToolsWakeOnLanRequestPtrType) ToLiveToolsWakeOnLanRequestPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LiveToolsWakeOnLanRequestPtrOutput)
}

type LiveToolsWakeOnLanRequestOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveToolsWakeOnLanRequest)(nil)).Elem()
}

func (o LiveToolsWakeOnLanRequestOutput) ToLiveToolsWakeOnLanRequestOutput() LiveToolsWakeOnLanRequestOutput {
	return o
}

func (o LiveToolsWakeOnLanRequestOutput) ToLiveToolsWakeOnLanRequestOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestOutput {
	return o
}

func (o LiveToolsWakeOnLanRequestOutput) ToLiveToolsWakeOnLanRequestPtrOutput() LiveToolsWakeOnLanRequestPtrOutput {
	return o.ToLiveToolsWakeOnLanRequestPtrOutputWithContext(context.Background())
}

func (o LiveToolsWakeOnLanRequestOutput) ToLiveToolsWakeOnLanRequestPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LiveToolsWakeOnLanRequest) *LiveToolsWakeOnLanRequest {
		return &v
	}).(LiveToolsWakeOnLanRequestPtrOutput)
}

// The target's MAC address
func (o LiveToolsWakeOnLanRequestOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanRequest) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Device serial number
func (o LiveToolsWakeOnLanRequestOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanRequest) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// The target's VLAN (1 to 4094)
func (o LiveToolsWakeOnLanRequestOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LiveToolsWakeOnLanRequest) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type LiveToolsWakeOnLanRequestPtrOutput struct{ *pulumi.OutputState }

func (LiveToolsWakeOnLanRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LiveToolsWakeOnLanRequest)(nil)).Elem()
}

func (o LiveToolsWakeOnLanRequestPtrOutput) ToLiveToolsWakeOnLanRequestPtrOutput() LiveToolsWakeOnLanRequestPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanRequestPtrOutput) ToLiveToolsWakeOnLanRequestPtrOutputWithContext(ctx context.Context) LiveToolsWakeOnLanRequestPtrOutput {
	return o
}

func (o LiveToolsWakeOnLanRequestPtrOutput) Elem() LiveToolsWakeOnLanRequestOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanRequest) LiveToolsWakeOnLanRequest {
		if v != nil {
			return *v
		}
		var ret LiveToolsWakeOnLanRequest
		return ret
	}).(LiveToolsWakeOnLanRequestOutput)
}

// The target's MAC address
func (o LiveToolsWakeOnLanRequestPtrOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanRequest) *string {
		if v == nil {
			return nil
		}
		return v.Mac
	}).(pulumi.StringPtrOutput)
}

// Device serial number
func (o LiveToolsWakeOnLanRequestPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanRequest) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

// The target's VLAN (1 to 4094)
func (o LiveToolsWakeOnLanRequestPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LiveToolsWakeOnLanRequest) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ManagementInterfaceDdnsHostnames struct {
	// Active dynamic DNS hostname.
	ActiveDdnsHostname *string `pulumi:"activeDdnsHostname"`
	// WAN 1 dynamic DNS hostname.
	DdnsHostnameWan1 *string `pulumi:"ddnsHostnameWan1"`
	// WAN 2 dynamic DNS hostname.
	DdnsHostnameWan2 *string `pulumi:"ddnsHostnameWan2"`
}

// ManagementInterfaceDdnsHostnamesInput is an input type that accepts ManagementInterfaceDdnsHostnamesArgs and ManagementInterfaceDdnsHostnamesOutput values.
// You can construct a concrete instance of `ManagementInterfaceDdnsHostnamesInput` via:
//
//	ManagementInterfaceDdnsHostnamesArgs{...}
type ManagementInterfaceDdnsHostnamesInput interface {
	pulumi.Input

	ToManagementInterfaceDdnsHostnamesOutput() ManagementInterfaceDdnsHostnamesOutput
	ToManagementInterfaceDdnsHostnamesOutputWithContext(context.Context) ManagementInterfaceDdnsHostnamesOutput
}

type ManagementInterfaceDdnsHostnamesArgs struct {
	// Active dynamic DNS hostname.
	ActiveDdnsHostname pulumi.StringPtrInput `pulumi:"activeDdnsHostname"`
	// WAN 1 dynamic DNS hostname.
	DdnsHostnameWan1 pulumi.StringPtrInput `pulumi:"ddnsHostnameWan1"`
	// WAN 2 dynamic DNS hostname.
	DdnsHostnameWan2 pulumi.StringPtrInput `pulumi:"ddnsHostnameWan2"`
}

func (ManagementInterfaceDdnsHostnamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceDdnsHostnames)(nil)).Elem()
}

func (i ManagementInterfaceDdnsHostnamesArgs) ToManagementInterfaceDdnsHostnamesOutput() ManagementInterfaceDdnsHostnamesOutput {
	return i.ToManagementInterfaceDdnsHostnamesOutputWithContext(context.Background())
}

func (i ManagementInterfaceDdnsHostnamesArgs) ToManagementInterfaceDdnsHostnamesOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceDdnsHostnamesOutput)
}

func (i ManagementInterfaceDdnsHostnamesArgs) ToManagementInterfaceDdnsHostnamesPtrOutput() ManagementInterfaceDdnsHostnamesPtrOutput {
	return i.ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(context.Background())
}

func (i ManagementInterfaceDdnsHostnamesArgs) ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceDdnsHostnamesOutput).ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(ctx)
}

// ManagementInterfaceDdnsHostnamesPtrInput is an input type that accepts ManagementInterfaceDdnsHostnamesArgs, ManagementInterfaceDdnsHostnamesPtr and ManagementInterfaceDdnsHostnamesPtrOutput values.
// You can construct a concrete instance of `ManagementInterfaceDdnsHostnamesPtrInput` via:
//
//	        ManagementInterfaceDdnsHostnamesArgs{...}
//
//	or:
//
//	        nil
type ManagementInterfaceDdnsHostnamesPtrInput interface {
	pulumi.Input

	ToManagementInterfaceDdnsHostnamesPtrOutput() ManagementInterfaceDdnsHostnamesPtrOutput
	ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(context.Context) ManagementInterfaceDdnsHostnamesPtrOutput
}

type managementInterfaceDdnsHostnamesPtrType ManagementInterfaceDdnsHostnamesArgs

func ManagementInterfaceDdnsHostnamesPtr(v *ManagementInterfaceDdnsHostnamesArgs) ManagementInterfaceDdnsHostnamesPtrInput {
	return (*managementInterfaceDdnsHostnamesPtrType)(v)
}

func (*managementInterfaceDdnsHostnamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceDdnsHostnames)(nil)).Elem()
}

func (i *managementInterfaceDdnsHostnamesPtrType) ToManagementInterfaceDdnsHostnamesPtrOutput() ManagementInterfaceDdnsHostnamesPtrOutput {
	return i.ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(context.Background())
}

func (i *managementInterfaceDdnsHostnamesPtrType) ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceDdnsHostnamesPtrOutput)
}

type ManagementInterfaceDdnsHostnamesOutput struct{ *pulumi.OutputState }

func (ManagementInterfaceDdnsHostnamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceDdnsHostnames)(nil)).Elem()
}

func (o ManagementInterfaceDdnsHostnamesOutput) ToManagementInterfaceDdnsHostnamesOutput() ManagementInterfaceDdnsHostnamesOutput {
	return o
}

func (o ManagementInterfaceDdnsHostnamesOutput) ToManagementInterfaceDdnsHostnamesOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesOutput {
	return o
}

func (o ManagementInterfaceDdnsHostnamesOutput) ToManagementInterfaceDdnsHostnamesPtrOutput() ManagementInterfaceDdnsHostnamesPtrOutput {
	return o.ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(context.Background())
}

func (o ManagementInterfaceDdnsHostnamesOutput) ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementInterfaceDdnsHostnames) *ManagementInterfaceDdnsHostnames {
		return &v
	}).(ManagementInterfaceDdnsHostnamesPtrOutput)
}

// Active dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesOutput) ActiveDdnsHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceDdnsHostnames) *string { return v.ActiveDdnsHostname }).(pulumi.StringPtrOutput)
}

// WAN 1 dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesOutput) DdnsHostnameWan1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceDdnsHostnames) *string { return v.DdnsHostnameWan1 }).(pulumi.StringPtrOutput)
}

// WAN 2 dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesOutput) DdnsHostnameWan2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceDdnsHostnames) *string { return v.DdnsHostnameWan2 }).(pulumi.StringPtrOutput)
}

type ManagementInterfaceDdnsHostnamesPtrOutput struct{ *pulumi.OutputState }

func (ManagementInterfaceDdnsHostnamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceDdnsHostnames)(nil)).Elem()
}

func (o ManagementInterfaceDdnsHostnamesPtrOutput) ToManagementInterfaceDdnsHostnamesPtrOutput() ManagementInterfaceDdnsHostnamesPtrOutput {
	return o
}

func (o ManagementInterfaceDdnsHostnamesPtrOutput) ToManagementInterfaceDdnsHostnamesPtrOutputWithContext(ctx context.Context) ManagementInterfaceDdnsHostnamesPtrOutput {
	return o
}

func (o ManagementInterfaceDdnsHostnamesPtrOutput) Elem() ManagementInterfaceDdnsHostnamesOutput {
	return o.ApplyT(func(v *ManagementInterfaceDdnsHostnames) ManagementInterfaceDdnsHostnames {
		if v != nil {
			return *v
		}
		var ret ManagementInterfaceDdnsHostnames
		return ret
	}).(ManagementInterfaceDdnsHostnamesOutput)
}

// Active dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesPtrOutput) ActiveDdnsHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceDdnsHostnames) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDdnsHostname
	}).(pulumi.StringPtrOutput)
}

// WAN 1 dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesPtrOutput) DdnsHostnameWan1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceDdnsHostnames) *string {
		if v == nil {
			return nil
		}
		return v.DdnsHostnameWan1
	}).(pulumi.StringPtrOutput)
}

// WAN 2 dynamic DNS hostname.
func (o ManagementInterfaceDdnsHostnamesPtrOutput) DdnsHostnameWan2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceDdnsHostnames) *string {
		if v == nil {
			return nil
		}
		return v.DdnsHostnameWan2
	}).(pulumi.StringPtrOutput)
}

type ManagementInterfaceWan1 struct {
	// Up to two DNS IPs.
	StaticDns []string `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp *string `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp *string `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask *string `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp *bool `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan *int `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled *string `pulumi:"wanEnabled"`
}

// ManagementInterfaceWan1Input is an input type that accepts ManagementInterfaceWan1Args and ManagementInterfaceWan1Output values.
// You can construct a concrete instance of `ManagementInterfaceWan1Input` via:
//
//	ManagementInterfaceWan1Args{...}
type ManagementInterfaceWan1Input interface {
	pulumi.Input

	ToManagementInterfaceWan1Output() ManagementInterfaceWan1Output
	ToManagementInterfaceWan1OutputWithContext(context.Context) ManagementInterfaceWan1Output
}

type ManagementInterfaceWan1Args struct {
	// Up to two DNS IPs.
	StaticDns pulumi.StringArrayInput `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp pulumi.StringPtrInput `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp pulumi.StringPtrInput `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask pulumi.StringPtrInput `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp pulumi.BoolPtrInput `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled pulumi.StringPtrInput `pulumi:"wanEnabled"`
}

func (ManagementInterfaceWan1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceWan1)(nil)).Elem()
}

func (i ManagementInterfaceWan1Args) ToManagementInterfaceWan1Output() ManagementInterfaceWan1Output {
	return i.ToManagementInterfaceWan1OutputWithContext(context.Background())
}

func (i ManagementInterfaceWan1Args) ToManagementInterfaceWan1OutputWithContext(ctx context.Context) ManagementInterfaceWan1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan1Output)
}

func (i ManagementInterfaceWan1Args) ToManagementInterfaceWan1PtrOutput() ManagementInterfaceWan1PtrOutput {
	return i.ToManagementInterfaceWan1PtrOutputWithContext(context.Background())
}

func (i ManagementInterfaceWan1Args) ToManagementInterfaceWan1PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan1Output).ToManagementInterfaceWan1PtrOutputWithContext(ctx)
}

// ManagementInterfaceWan1PtrInput is an input type that accepts ManagementInterfaceWan1Args, ManagementInterfaceWan1Ptr and ManagementInterfaceWan1PtrOutput values.
// You can construct a concrete instance of `ManagementInterfaceWan1PtrInput` via:
//
//	        ManagementInterfaceWan1Args{...}
//
//	or:
//
//	        nil
type ManagementInterfaceWan1PtrInput interface {
	pulumi.Input

	ToManagementInterfaceWan1PtrOutput() ManagementInterfaceWan1PtrOutput
	ToManagementInterfaceWan1PtrOutputWithContext(context.Context) ManagementInterfaceWan1PtrOutput
}

type managementInterfaceWan1PtrType ManagementInterfaceWan1Args

func ManagementInterfaceWan1Ptr(v *ManagementInterfaceWan1Args) ManagementInterfaceWan1PtrInput {
	return (*managementInterfaceWan1PtrType)(v)
}

func (*managementInterfaceWan1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceWan1)(nil)).Elem()
}

func (i *managementInterfaceWan1PtrType) ToManagementInterfaceWan1PtrOutput() ManagementInterfaceWan1PtrOutput {
	return i.ToManagementInterfaceWan1PtrOutputWithContext(context.Background())
}

func (i *managementInterfaceWan1PtrType) ToManagementInterfaceWan1PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan1PtrOutput)
}

type ManagementInterfaceWan1Output struct{ *pulumi.OutputState }

func (ManagementInterfaceWan1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceWan1)(nil)).Elem()
}

func (o ManagementInterfaceWan1Output) ToManagementInterfaceWan1Output() ManagementInterfaceWan1Output {
	return o
}

func (o ManagementInterfaceWan1Output) ToManagementInterfaceWan1OutputWithContext(ctx context.Context) ManagementInterfaceWan1Output {
	return o
}

func (o ManagementInterfaceWan1Output) ToManagementInterfaceWan1PtrOutput() ManagementInterfaceWan1PtrOutput {
	return o.ToManagementInterfaceWan1PtrOutputWithContext(context.Background())
}

func (o ManagementInterfaceWan1Output) ToManagementInterfaceWan1PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementInterfaceWan1) *ManagementInterfaceWan1 {
		return &v
	}).(ManagementInterfaceWan1PtrOutput)
}

// Up to two DNS IPs.
func (o ManagementInterfaceWan1Output) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) []string { return v.StaticDns }).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o ManagementInterfaceWan1Output) StaticGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *string { return v.StaticGatewayIp }).(pulumi.StringPtrOutput)
}

// The IP the device should use on the WAN.
func (o ManagementInterfaceWan1Output) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *string { return v.StaticIp }).(pulumi.StringPtrOutput)
}

// The subnet mask for the WAN.
func (o ManagementInterfaceWan1Output) StaticSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *string { return v.StaticSubnetMask }).(pulumi.StringPtrOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o ManagementInterfaceWan1Output) UsingStaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *bool { return v.UsingStaticIp }).(pulumi.BoolPtrOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o ManagementInterfaceWan1Output) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o ManagementInterfaceWan1Output) WanEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan1) *string { return v.WanEnabled }).(pulumi.StringPtrOutput)
}

type ManagementInterfaceWan1PtrOutput struct{ *pulumi.OutputState }

func (ManagementInterfaceWan1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceWan1)(nil)).Elem()
}

func (o ManagementInterfaceWan1PtrOutput) ToManagementInterfaceWan1PtrOutput() ManagementInterfaceWan1PtrOutput {
	return o
}

func (o ManagementInterfaceWan1PtrOutput) ToManagementInterfaceWan1PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan1PtrOutput {
	return o
}

func (o ManagementInterfaceWan1PtrOutput) Elem() ManagementInterfaceWan1Output {
	return o.ApplyT(func(v *ManagementInterfaceWan1) ManagementInterfaceWan1 {
		if v != nil {
			return *v
		}
		var ret ManagementInterfaceWan1
		return ret
	}).(ManagementInterfaceWan1Output)
}

// Up to two DNS IPs.
func (o ManagementInterfaceWan1PtrOutput) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) []string {
		if v == nil {
			return nil
		}
		return v.StaticDns
	}).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o ManagementInterfaceWan1PtrOutput) StaticGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *string {
		if v == nil {
			return nil
		}
		return v.StaticGatewayIp
	}).(pulumi.StringPtrOutput)
}

// The IP the device should use on the WAN.
func (o ManagementInterfaceWan1PtrOutput) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *string {
		if v == nil {
			return nil
		}
		return v.StaticIp
	}).(pulumi.StringPtrOutput)
}

// The subnet mask for the WAN.
func (o ManagementInterfaceWan1PtrOutput) StaticSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *string {
		if v == nil {
			return nil
		}
		return v.StaticSubnetMask
	}).(pulumi.StringPtrOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o ManagementInterfaceWan1PtrOutput) UsingStaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *bool {
		if v == nil {
			return nil
		}
		return v.UsingStaticIp
	}).(pulumi.BoolPtrOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o ManagementInterfaceWan1PtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o ManagementInterfaceWan1PtrOutput) WanEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan1) *string {
		if v == nil {
			return nil
		}
		return v.WanEnabled
	}).(pulumi.StringPtrOutput)
}

type ManagementInterfaceWan2 struct {
	// Up to two DNS IPs.
	StaticDns []string `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp *string `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp *string `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask *string `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp *bool `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan *int `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled *string `pulumi:"wanEnabled"`
}

// ManagementInterfaceWan2Input is an input type that accepts ManagementInterfaceWan2Args and ManagementInterfaceWan2Output values.
// You can construct a concrete instance of `ManagementInterfaceWan2Input` via:
//
//	ManagementInterfaceWan2Args{...}
type ManagementInterfaceWan2Input interface {
	pulumi.Input

	ToManagementInterfaceWan2Output() ManagementInterfaceWan2Output
	ToManagementInterfaceWan2OutputWithContext(context.Context) ManagementInterfaceWan2Output
}

type ManagementInterfaceWan2Args struct {
	// Up to two DNS IPs.
	StaticDns pulumi.StringArrayInput `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp pulumi.StringPtrInput `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp pulumi.StringPtrInput `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask pulumi.StringPtrInput `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp pulumi.BoolPtrInput `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled pulumi.StringPtrInput `pulumi:"wanEnabled"`
}

func (ManagementInterfaceWan2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceWan2)(nil)).Elem()
}

func (i ManagementInterfaceWan2Args) ToManagementInterfaceWan2Output() ManagementInterfaceWan2Output {
	return i.ToManagementInterfaceWan2OutputWithContext(context.Background())
}

func (i ManagementInterfaceWan2Args) ToManagementInterfaceWan2OutputWithContext(ctx context.Context) ManagementInterfaceWan2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan2Output)
}

func (i ManagementInterfaceWan2Args) ToManagementInterfaceWan2PtrOutput() ManagementInterfaceWan2PtrOutput {
	return i.ToManagementInterfaceWan2PtrOutputWithContext(context.Background())
}

func (i ManagementInterfaceWan2Args) ToManagementInterfaceWan2PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan2Output).ToManagementInterfaceWan2PtrOutputWithContext(ctx)
}

// ManagementInterfaceWan2PtrInput is an input type that accepts ManagementInterfaceWan2Args, ManagementInterfaceWan2Ptr and ManagementInterfaceWan2PtrOutput values.
// You can construct a concrete instance of `ManagementInterfaceWan2PtrInput` via:
//
//	        ManagementInterfaceWan2Args{...}
//
//	or:
//
//	        nil
type ManagementInterfaceWan2PtrInput interface {
	pulumi.Input

	ToManagementInterfaceWan2PtrOutput() ManagementInterfaceWan2PtrOutput
	ToManagementInterfaceWan2PtrOutputWithContext(context.Context) ManagementInterfaceWan2PtrOutput
}

type managementInterfaceWan2PtrType ManagementInterfaceWan2Args

func ManagementInterfaceWan2Ptr(v *ManagementInterfaceWan2Args) ManagementInterfaceWan2PtrInput {
	return (*managementInterfaceWan2PtrType)(v)
}

func (*managementInterfaceWan2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceWan2)(nil)).Elem()
}

func (i *managementInterfaceWan2PtrType) ToManagementInterfaceWan2PtrOutput() ManagementInterfaceWan2PtrOutput {
	return i.ToManagementInterfaceWan2PtrOutputWithContext(context.Background())
}

func (i *managementInterfaceWan2PtrType) ToManagementInterfaceWan2PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementInterfaceWan2PtrOutput)
}

type ManagementInterfaceWan2Output struct{ *pulumi.OutputState }

func (ManagementInterfaceWan2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementInterfaceWan2)(nil)).Elem()
}

func (o ManagementInterfaceWan2Output) ToManagementInterfaceWan2Output() ManagementInterfaceWan2Output {
	return o
}

func (o ManagementInterfaceWan2Output) ToManagementInterfaceWan2OutputWithContext(ctx context.Context) ManagementInterfaceWan2Output {
	return o
}

func (o ManagementInterfaceWan2Output) ToManagementInterfaceWan2PtrOutput() ManagementInterfaceWan2PtrOutput {
	return o.ToManagementInterfaceWan2PtrOutputWithContext(context.Background())
}

func (o ManagementInterfaceWan2Output) ToManagementInterfaceWan2PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementInterfaceWan2) *ManagementInterfaceWan2 {
		return &v
	}).(ManagementInterfaceWan2PtrOutput)
}

// Up to two DNS IPs.
func (o ManagementInterfaceWan2Output) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) []string { return v.StaticDns }).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o ManagementInterfaceWan2Output) StaticGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *string { return v.StaticGatewayIp }).(pulumi.StringPtrOutput)
}

// The IP the device should use on the WAN.
func (o ManagementInterfaceWan2Output) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *string { return v.StaticIp }).(pulumi.StringPtrOutput)
}

// The subnet mask for the WAN.
func (o ManagementInterfaceWan2Output) StaticSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *string { return v.StaticSubnetMask }).(pulumi.StringPtrOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o ManagementInterfaceWan2Output) UsingStaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *bool { return v.UsingStaticIp }).(pulumi.BoolPtrOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o ManagementInterfaceWan2Output) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o ManagementInterfaceWan2Output) WanEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementInterfaceWan2) *string { return v.WanEnabled }).(pulumi.StringPtrOutput)
}

type ManagementInterfaceWan2PtrOutput struct{ *pulumi.OutputState }

func (ManagementInterfaceWan2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementInterfaceWan2)(nil)).Elem()
}

func (o ManagementInterfaceWan2PtrOutput) ToManagementInterfaceWan2PtrOutput() ManagementInterfaceWan2PtrOutput {
	return o
}

func (o ManagementInterfaceWan2PtrOutput) ToManagementInterfaceWan2PtrOutputWithContext(ctx context.Context) ManagementInterfaceWan2PtrOutput {
	return o
}

func (o ManagementInterfaceWan2PtrOutput) Elem() ManagementInterfaceWan2Output {
	return o.ApplyT(func(v *ManagementInterfaceWan2) ManagementInterfaceWan2 {
		if v != nil {
			return *v
		}
		var ret ManagementInterfaceWan2
		return ret
	}).(ManagementInterfaceWan2Output)
}

// Up to two DNS IPs.
func (o ManagementInterfaceWan2PtrOutput) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) []string {
		if v == nil {
			return nil
		}
		return v.StaticDns
	}).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o ManagementInterfaceWan2PtrOutput) StaticGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *string {
		if v == nil {
			return nil
		}
		return v.StaticGatewayIp
	}).(pulumi.StringPtrOutput)
}

// The IP the device should use on the WAN.
func (o ManagementInterfaceWan2PtrOutput) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *string {
		if v == nil {
			return nil
		}
		return v.StaticIp
	}).(pulumi.StringPtrOutput)
}

// The subnet mask for the WAN.
func (o ManagementInterfaceWan2PtrOutput) StaticSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *string {
		if v == nil {
			return nil
		}
		return v.StaticSubnetMask
	}).(pulumi.StringPtrOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o ManagementInterfaceWan2PtrOutput) UsingStaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *bool {
		if v == nil {
			return nil
		}
		return v.UsingStaticIp
	}).(pulumi.BoolPtrOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o ManagementInterfaceWan2PtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o ManagementInterfaceWan2PtrOutput) WanEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementInterfaceWan2) *string {
		if v == nil {
			return nil
		}
		return v.WanEnabled
	}).(pulumi.StringPtrOutput)
}

type SensorRelationshipsLivestream struct {
	// An array of the related devices for the role
	RelatedDevices []SensorRelationshipsLivestreamRelatedDevice `pulumi:"relatedDevices"`
}

// SensorRelationshipsLivestreamInput is an input type that accepts SensorRelationshipsLivestreamArgs and SensorRelationshipsLivestreamOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamInput` via:
//
//	SensorRelationshipsLivestreamArgs{...}
type SensorRelationshipsLivestreamInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamOutput() SensorRelationshipsLivestreamOutput
	ToSensorRelationshipsLivestreamOutputWithContext(context.Context) SensorRelationshipsLivestreamOutput
}

type SensorRelationshipsLivestreamArgs struct {
	// An array of the related devices for the role
	RelatedDevices SensorRelationshipsLivestreamRelatedDeviceArrayInput `pulumi:"relatedDevices"`
}

func (SensorRelationshipsLivestreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestream)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamArgs) ToSensorRelationshipsLivestreamOutput() SensorRelationshipsLivestreamOutput {
	return i.ToSensorRelationshipsLivestreamOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamArgs) ToSensorRelationshipsLivestreamOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamOutput)
}

func (i SensorRelationshipsLivestreamArgs) ToSensorRelationshipsLivestreamPtrOutput() SensorRelationshipsLivestreamPtrOutput {
	return i.ToSensorRelationshipsLivestreamPtrOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamArgs) ToSensorRelationshipsLivestreamPtrOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamOutput).ToSensorRelationshipsLivestreamPtrOutputWithContext(ctx)
}

// SensorRelationshipsLivestreamPtrInput is an input type that accepts SensorRelationshipsLivestreamArgs, SensorRelationshipsLivestreamPtr and SensorRelationshipsLivestreamPtrOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamPtrInput` via:
//
//	        SensorRelationshipsLivestreamArgs{...}
//
//	or:
//
//	        nil
type SensorRelationshipsLivestreamPtrInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamPtrOutput() SensorRelationshipsLivestreamPtrOutput
	ToSensorRelationshipsLivestreamPtrOutputWithContext(context.Context) SensorRelationshipsLivestreamPtrOutput
}

type sensorRelationshipsLivestreamPtrType SensorRelationshipsLivestreamArgs

func SensorRelationshipsLivestreamPtr(v *SensorRelationshipsLivestreamArgs) SensorRelationshipsLivestreamPtrInput {
	return (*sensorRelationshipsLivestreamPtrType)(v)
}

func (*sensorRelationshipsLivestreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensorRelationshipsLivestream)(nil)).Elem()
}

func (i *sensorRelationshipsLivestreamPtrType) ToSensorRelationshipsLivestreamPtrOutput() SensorRelationshipsLivestreamPtrOutput {
	return i.ToSensorRelationshipsLivestreamPtrOutputWithContext(context.Background())
}

func (i *sensorRelationshipsLivestreamPtrType) ToSensorRelationshipsLivestreamPtrOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamPtrOutput)
}

type SensorRelationshipsLivestreamOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestream)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamOutput) ToSensorRelationshipsLivestreamOutput() SensorRelationshipsLivestreamOutput {
	return o
}

func (o SensorRelationshipsLivestreamOutput) ToSensorRelationshipsLivestreamOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamOutput {
	return o
}

func (o SensorRelationshipsLivestreamOutput) ToSensorRelationshipsLivestreamPtrOutput() SensorRelationshipsLivestreamPtrOutput {
	return o.ToSensorRelationshipsLivestreamPtrOutputWithContext(context.Background())
}

func (o SensorRelationshipsLivestreamOutput) ToSensorRelationshipsLivestreamPtrOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensorRelationshipsLivestream) *SensorRelationshipsLivestream {
		return &v
	}).(SensorRelationshipsLivestreamPtrOutput)
}

// An array of the related devices for the role
func (o SensorRelationshipsLivestreamOutput) RelatedDevices() SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestream) []SensorRelationshipsLivestreamRelatedDevice {
		return v.RelatedDevices
	}).(SensorRelationshipsLivestreamRelatedDeviceArrayOutput)
}

type SensorRelationshipsLivestreamPtrOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensorRelationshipsLivestream)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamPtrOutput) ToSensorRelationshipsLivestreamPtrOutput() SensorRelationshipsLivestreamPtrOutput {
	return o
}

func (o SensorRelationshipsLivestreamPtrOutput) ToSensorRelationshipsLivestreamPtrOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamPtrOutput {
	return o
}

func (o SensorRelationshipsLivestreamPtrOutput) Elem() SensorRelationshipsLivestreamOutput {
	return o.ApplyT(func(v *SensorRelationshipsLivestream) SensorRelationshipsLivestream {
		if v != nil {
			return *v
		}
		var ret SensorRelationshipsLivestream
		return ret
	}).(SensorRelationshipsLivestreamOutput)
}

// An array of the related devices for the role
func (o SensorRelationshipsLivestreamPtrOutput) RelatedDevices() SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return o.ApplyT(func(v *SensorRelationshipsLivestream) []SensorRelationshipsLivestreamRelatedDevice {
		if v == nil {
			return nil
		}
		return v.RelatedDevices
	}).(SensorRelationshipsLivestreamRelatedDeviceArrayOutput)
}

type SensorRelationshipsLivestreamRelatedDevice struct {
	// The product type of the related device
	ProductType *string `pulumi:"productType"`
	// The serial of the related device
	Serial *string `pulumi:"serial"`
}

// SensorRelationshipsLivestreamRelatedDeviceInput is an input type that accepts SensorRelationshipsLivestreamRelatedDeviceArgs and SensorRelationshipsLivestreamRelatedDeviceOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRelatedDeviceInput` via:
//
//	SensorRelationshipsLivestreamRelatedDeviceArgs{...}
type SensorRelationshipsLivestreamRelatedDeviceInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRelatedDeviceOutput() SensorRelationshipsLivestreamRelatedDeviceOutput
	ToSensorRelationshipsLivestreamRelatedDeviceOutputWithContext(context.Context) SensorRelationshipsLivestreamRelatedDeviceOutput
}

type SensorRelationshipsLivestreamRelatedDeviceArgs struct {
	// The product type of the related device
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
	// The serial of the related device
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (SensorRelationshipsLivestreamRelatedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRelatedDevice)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRelatedDeviceArgs) ToSensorRelationshipsLivestreamRelatedDeviceOutput() SensorRelationshipsLivestreamRelatedDeviceOutput {
	return i.ToSensorRelationshipsLivestreamRelatedDeviceOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRelatedDeviceArgs) ToSensorRelationshipsLivestreamRelatedDeviceOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRelatedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRelatedDeviceOutput)
}

// SensorRelationshipsLivestreamRelatedDeviceArrayInput is an input type that accepts SensorRelationshipsLivestreamRelatedDeviceArray and SensorRelationshipsLivestreamRelatedDeviceArrayOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRelatedDeviceArrayInput` via:
//
//	SensorRelationshipsLivestreamRelatedDeviceArray{ SensorRelationshipsLivestreamRelatedDeviceArgs{...} }
type SensorRelationshipsLivestreamRelatedDeviceArrayInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRelatedDeviceArrayOutput
	ToSensorRelationshipsLivestreamRelatedDeviceArrayOutputWithContext(context.Context) SensorRelationshipsLivestreamRelatedDeviceArrayOutput
}

type SensorRelationshipsLivestreamRelatedDeviceArray []SensorRelationshipsLivestreamRelatedDeviceInput

func (SensorRelationshipsLivestreamRelatedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRelatedDevice)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRelatedDeviceArray) ToSensorRelationshipsLivestreamRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return i.ToSensorRelationshipsLivestreamRelatedDeviceArrayOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRelatedDeviceArray) ToSensorRelationshipsLivestreamRelatedDeviceArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRelatedDeviceArrayOutput)
}

type SensorRelationshipsLivestreamRelatedDeviceOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRelatedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRelatedDevice)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRelatedDeviceOutput) ToSensorRelationshipsLivestreamRelatedDeviceOutput() SensorRelationshipsLivestreamRelatedDeviceOutput {
	return o
}

func (o SensorRelationshipsLivestreamRelatedDeviceOutput) ToSensorRelationshipsLivestreamRelatedDeviceOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRelatedDeviceOutput {
	return o
}

// The product type of the related device
func (o SensorRelationshipsLivestreamRelatedDeviceOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestreamRelatedDevice) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

// The serial of the related device
func (o SensorRelationshipsLivestreamRelatedDeviceOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestreamRelatedDevice) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type SensorRelationshipsLivestreamRelatedDeviceArrayOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRelatedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRelatedDevice)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRelatedDeviceArrayOutput) ToSensorRelationshipsLivestreamRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRelatedDeviceArrayOutput) ToSensorRelationshipsLivestreamRelatedDeviceArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRelatedDeviceArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRelatedDeviceArrayOutput) Index(i pulumi.IntInput) SensorRelationshipsLivestreamRelatedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SensorRelationshipsLivestreamRelatedDevice {
		return vs[0].([]SensorRelationshipsLivestreamRelatedDevice)[vs[1].(int)]
	}).(SensorRelationshipsLivestreamRelatedDeviceOutput)
}

type SensorRelationshipsLivestreamRequest struct {
	// An array of the related devices for the role
	RelatedDevices []SensorRelationshipsLivestreamRequestRelatedDevice `pulumi:"relatedDevices"`
}

// SensorRelationshipsLivestreamRequestInput is an input type that accepts SensorRelationshipsLivestreamRequestArgs and SensorRelationshipsLivestreamRequestOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRequestInput` via:
//
//	SensorRelationshipsLivestreamRequestArgs{...}
type SensorRelationshipsLivestreamRequestInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRequestOutput() SensorRelationshipsLivestreamRequestOutput
	ToSensorRelationshipsLivestreamRequestOutputWithContext(context.Context) SensorRelationshipsLivestreamRequestOutput
}

type SensorRelationshipsLivestreamRequestArgs struct {
	// An array of the related devices for the role
	RelatedDevices SensorRelationshipsLivestreamRequestRelatedDeviceArrayInput `pulumi:"relatedDevices"`
}

func (SensorRelationshipsLivestreamRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRequest)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRequestArgs) ToSensorRelationshipsLivestreamRequestOutput() SensorRelationshipsLivestreamRequestOutput {
	return i.ToSensorRelationshipsLivestreamRequestOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRequestArgs) ToSensorRelationshipsLivestreamRequestOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRequestOutput)
}

// SensorRelationshipsLivestreamRequestArrayInput is an input type that accepts SensorRelationshipsLivestreamRequestArray and SensorRelationshipsLivestreamRequestArrayOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRequestArrayInput` via:
//
//	SensorRelationshipsLivestreamRequestArray{ SensorRelationshipsLivestreamRequestArgs{...} }
type SensorRelationshipsLivestreamRequestArrayInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRequestArrayOutput() SensorRelationshipsLivestreamRequestArrayOutput
	ToSensorRelationshipsLivestreamRequestArrayOutputWithContext(context.Context) SensorRelationshipsLivestreamRequestArrayOutput
}

type SensorRelationshipsLivestreamRequestArray []SensorRelationshipsLivestreamRequestInput

func (SensorRelationshipsLivestreamRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRequest)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRequestArray) ToSensorRelationshipsLivestreamRequestArrayOutput() SensorRelationshipsLivestreamRequestArrayOutput {
	return i.ToSensorRelationshipsLivestreamRequestArrayOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRequestArray) ToSensorRelationshipsLivestreamRequestArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRequestArrayOutput)
}

type SensorRelationshipsLivestreamRequestOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRequest)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRequestOutput) ToSensorRelationshipsLivestreamRequestOutput() SensorRelationshipsLivestreamRequestOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestOutput) ToSensorRelationshipsLivestreamRequestOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestOutput {
	return o
}

// An array of the related devices for the role
func (o SensorRelationshipsLivestreamRequestOutput) RelatedDevices() SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestreamRequest) []SensorRelationshipsLivestreamRequestRelatedDevice {
		return v.RelatedDevices
	}).(SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput)
}

type SensorRelationshipsLivestreamRequestArrayOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRequest)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRequestArrayOutput) ToSensorRelationshipsLivestreamRequestArrayOutput() SensorRelationshipsLivestreamRequestArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestArrayOutput) ToSensorRelationshipsLivestreamRequestArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestArrayOutput) Index(i pulumi.IntInput) SensorRelationshipsLivestreamRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SensorRelationshipsLivestreamRequest {
		return vs[0].([]SensorRelationshipsLivestreamRequest)[vs[1].(int)]
	}).(SensorRelationshipsLivestreamRequestOutput)
}

type SensorRelationshipsLivestreamRequestRelatedDevice struct {
	// The product type of the related device
	ProductType *string `pulumi:"productType"`
	// The serial of the related device
	Serial *string `pulumi:"serial"`
}

// SensorRelationshipsLivestreamRequestRelatedDeviceInput is an input type that accepts SensorRelationshipsLivestreamRequestRelatedDeviceArgs and SensorRelationshipsLivestreamRequestRelatedDeviceOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRequestRelatedDeviceInput` via:
//
//	SensorRelationshipsLivestreamRequestRelatedDeviceArgs{...}
type SensorRelationshipsLivestreamRequestRelatedDeviceInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRequestRelatedDeviceOutput() SensorRelationshipsLivestreamRequestRelatedDeviceOutput
	ToSensorRelationshipsLivestreamRequestRelatedDeviceOutputWithContext(context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceOutput
}

type SensorRelationshipsLivestreamRequestRelatedDeviceArgs struct {
	// The product type of the related device
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
	// The serial of the related device
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (SensorRelationshipsLivestreamRequestRelatedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRequestRelatedDevice)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRequestRelatedDeviceArgs) ToSensorRelationshipsLivestreamRequestRelatedDeviceOutput() SensorRelationshipsLivestreamRequestRelatedDeviceOutput {
	return i.ToSensorRelationshipsLivestreamRequestRelatedDeviceOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRequestRelatedDeviceArgs) ToSensorRelationshipsLivestreamRequestRelatedDeviceOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRequestRelatedDeviceOutput)
}

// SensorRelationshipsLivestreamRequestRelatedDeviceArrayInput is an input type that accepts SensorRelationshipsLivestreamRequestRelatedDeviceArray and SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput values.
// You can construct a concrete instance of `SensorRelationshipsLivestreamRequestRelatedDeviceArrayInput` via:
//
//	SensorRelationshipsLivestreamRequestRelatedDeviceArray{ SensorRelationshipsLivestreamRequestRelatedDeviceArgs{...} }
type SensorRelationshipsLivestreamRequestRelatedDeviceArrayInput interface {
	pulumi.Input

	ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput
	ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutputWithContext(context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput
}

type SensorRelationshipsLivestreamRequestRelatedDeviceArray []SensorRelationshipsLivestreamRequestRelatedDeviceInput

func (SensorRelationshipsLivestreamRequestRelatedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRequestRelatedDevice)(nil)).Elem()
}

func (i SensorRelationshipsLivestreamRequestRelatedDeviceArray) ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput {
	return i.ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutputWithContext(context.Background())
}

func (i SensorRelationshipsLivestreamRequestRelatedDeviceArray) ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput)
}

type SensorRelationshipsLivestreamRequestRelatedDeviceOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRequestRelatedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorRelationshipsLivestreamRequestRelatedDevice)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRequestRelatedDeviceOutput) ToSensorRelationshipsLivestreamRequestRelatedDeviceOutput() SensorRelationshipsLivestreamRequestRelatedDeviceOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestRelatedDeviceOutput) ToSensorRelationshipsLivestreamRequestRelatedDeviceOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceOutput {
	return o
}

// The product type of the related device
func (o SensorRelationshipsLivestreamRequestRelatedDeviceOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestreamRequestRelatedDevice) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

// The serial of the related device
func (o SensorRelationshipsLivestreamRequestRelatedDeviceOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensorRelationshipsLivestreamRequestRelatedDevice) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput struct{ *pulumi.OutputState }

func (SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorRelationshipsLivestreamRequestRelatedDevice)(nil)).Elem()
}

func (o SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput) ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput() SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput) ToSensorRelationshipsLivestreamRequestRelatedDeviceArrayOutputWithContext(ctx context.Context) SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput {
	return o
}

func (o SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput) Index(i pulumi.IntInput) SensorRelationshipsLivestreamRequestRelatedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SensorRelationshipsLivestreamRequestRelatedDevice {
		return vs[0].([]SensorRelationshipsLivestreamRequestRelatedDevice)[vs[1].(int)]
	}).(SensorRelationshipsLivestreamRequestRelatedDeviceOutput)
}

type SwitchPortsCycleItem struct {
	// List of switch ports
	Ports []string `pulumi:"ports"`
}

// SwitchPortsCycleItemInput is an input type that accepts SwitchPortsCycleItemArgs and SwitchPortsCycleItemOutput values.
// You can construct a concrete instance of `SwitchPortsCycleItemInput` via:
//
//	SwitchPortsCycleItemArgs{...}
type SwitchPortsCycleItemInput interface {
	pulumi.Input

	ToSwitchPortsCycleItemOutput() SwitchPortsCycleItemOutput
	ToSwitchPortsCycleItemOutputWithContext(context.Context) SwitchPortsCycleItemOutput
}

type SwitchPortsCycleItemArgs struct {
	// List of switch ports
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (SwitchPortsCycleItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsCycleItem)(nil)).Elem()
}

func (i SwitchPortsCycleItemArgs) ToSwitchPortsCycleItemOutput() SwitchPortsCycleItemOutput {
	return i.ToSwitchPortsCycleItemOutputWithContext(context.Background())
}

func (i SwitchPortsCycleItemArgs) ToSwitchPortsCycleItemOutputWithContext(ctx context.Context) SwitchPortsCycleItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleItemOutput)
}

func (i SwitchPortsCycleItemArgs) ToSwitchPortsCycleItemPtrOutput() SwitchPortsCycleItemPtrOutput {
	return i.ToSwitchPortsCycleItemPtrOutputWithContext(context.Background())
}

func (i SwitchPortsCycleItemArgs) ToSwitchPortsCycleItemPtrOutputWithContext(ctx context.Context) SwitchPortsCycleItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleItemOutput).ToSwitchPortsCycleItemPtrOutputWithContext(ctx)
}

// SwitchPortsCycleItemPtrInput is an input type that accepts SwitchPortsCycleItemArgs, SwitchPortsCycleItemPtr and SwitchPortsCycleItemPtrOutput values.
// You can construct a concrete instance of `SwitchPortsCycleItemPtrInput` via:
//
//	        SwitchPortsCycleItemArgs{...}
//
//	or:
//
//	        nil
type SwitchPortsCycleItemPtrInput interface {
	pulumi.Input

	ToSwitchPortsCycleItemPtrOutput() SwitchPortsCycleItemPtrOutput
	ToSwitchPortsCycleItemPtrOutputWithContext(context.Context) SwitchPortsCycleItemPtrOutput
}

type switchPortsCycleItemPtrType SwitchPortsCycleItemArgs

func SwitchPortsCycleItemPtr(v *SwitchPortsCycleItemArgs) SwitchPortsCycleItemPtrInput {
	return (*switchPortsCycleItemPtrType)(v)
}

func (*switchPortsCycleItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsCycleItem)(nil)).Elem()
}

func (i *switchPortsCycleItemPtrType) ToSwitchPortsCycleItemPtrOutput() SwitchPortsCycleItemPtrOutput {
	return i.ToSwitchPortsCycleItemPtrOutputWithContext(context.Background())
}

func (i *switchPortsCycleItemPtrType) ToSwitchPortsCycleItemPtrOutputWithContext(ctx context.Context) SwitchPortsCycleItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleItemPtrOutput)
}

type SwitchPortsCycleItemOutput struct{ *pulumi.OutputState }

func (SwitchPortsCycleItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsCycleItem)(nil)).Elem()
}

func (o SwitchPortsCycleItemOutput) ToSwitchPortsCycleItemOutput() SwitchPortsCycleItemOutput {
	return o
}

func (o SwitchPortsCycleItemOutput) ToSwitchPortsCycleItemOutputWithContext(ctx context.Context) SwitchPortsCycleItemOutput {
	return o
}

func (o SwitchPortsCycleItemOutput) ToSwitchPortsCycleItemPtrOutput() SwitchPortsCycleItemPtrOutput {
	return o.ToSwitchPortsCycleItemPtrOutputWithContext(context.Background())
}

func (o SwitchPortsCycleItemOutput) ToSwitchPortsCycleItemPtrOutputWithContext(ctx context.Context) SwitchPortsCycleItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortsCycleItem) *SwitchPortsCycleItem {
		return &v
	}).(SwitchPortsCycleItemPtrOutput)
}

// List of switch ports
func (o SwitchPortsCycleItemOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortsCycleItem) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SwitchPortsCycleItemPtrOutput struct{ *pulumi.OutputState }

func (SwitchPortsCycleItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsCycleItem)(nil)).Elem()
}

func (o SwitchPortsCycleItemPtrOutput) ToSwitchPortsCycleItemPtrOutput() SwitchPortsCycleItemPtrOutput {
	return o
}

func (o SwitchPortsCycleItemPtrOutput) ToSwitchPortsCycleItemPtrOutputWithContext(ctx context.Context) SwitchPortsCycleItemPtrOutput {
	return o
}

func (o SwitchPortsCycleItemPtrOutput) Elem() SwitchPortsCycleItemOutput {
	return o.ApplyT(func(v *SwitchPortsCycleItem) SwitchPortsCycleItem {
		if v != nil {
			return *v
		}
		var ret SwitchPortsCycleItem
		return ret
	}).(SwitchPortsCycleItemOutput)
}

// List of switch ports
func (o SwitchPortsCycleItemPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchPortsCycleItem) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type SwitchPortsCycleParameters struct {
	// List of switch ports
	Ports []string `pulumi:"ports"`
}

// SwitchPortsCycleParametersInput is an input type that accepts SwitchPortsCycleParametersArgs and SwitchPortsCycleParametersOutput values.
// You can construct a concrete instance of `SwitchPortsCycleParametersInput` via:
//
//	SwitchPortsCycleParametersArgs{...}
type SwitchPortsCycleParametersInput interface {
	pulumi.Input

	ToSwitchPortsCycleParametersOutput() SwitchPortsCycleParametersOutput
	ToSwitchPortsCycleParametersOutputWithContext(context.Context) SwitchPortsCycleParametersOutput
}

type SwitchPortsCycleParametersArgs struct {
	// List of switch ports
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (SwitchPortsCycleParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsCycleParameters)(nil)).Elem()
}

func (i SwitchPortsCycleParametersArgs) ToSwitchPortsCycleParametersOutput() SwitchPortsCycleParametersOutput {
	return i.ToSwitchPortsCycleParametersOutputWithContext(context.Background())
}

func (i SwitchPortsCycleParametersArgs) ToSwitchPortsCycleParametersOutputWithContext(ctx context.Context) SwitchPortsCycleParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleParametersOutput)
}

func (i SwitchPortsCycleParametersArgs) ToSwitchPortsCycleParametersPtrOutput() SwitchPortsCycleParametersPtrOutput {
	return i.ToSwitchPortsCycleParametersPtrOutputWithContext(context.Background())
}

func (i SwitchPortsCycleParametersArgs) ToSwitchPortsCycleParametersPtrOutputWithContext(ctx context.Context) SwitchPortsCycleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleParametersOutput).ToSwitchPortsCycleParametersPtrOutputWithContext(ctx)
}

// SwitchPortsCycleParametersPtrInput is an input type that accepts SwitchPortsCycleParametersArgs, SwitchPortsCycleParametersPtr and SwitchPortsCycleParametersPtrOutput values.
// You can construct a concrete instance of `SwitchPortsCycleParametersPtrInput` via:
//
//	        SwitchPortsCycleParametersArgs{...}
//
//	or:
//
//	        nil
type SwitchPortsCycleParametersPtrInput interface {
	pulumi.Input

	ToSwitchPortsCycleParametersPtrOutput() SwitchPortsCycleParametersPtrOutput
	ToSwitchPortsCycleParametersPtrOutputWithContext(context.Context) SwitchPortsCycleParametersPtrOutput
}

type switchPortsCycleParametersPtrType SwitchPortsCycleParametersArgs

func SwitchPortsCycleParametersPtr(v *SwitchPortsCycleParametersArgs) SwitchPortsCycleParametersPtrInput {
	return (*switchPortsCycleParametersPtrType)(v)
}

func (*switchPortsCycleParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsCycleParameters)(nil)).Elem()
}

func (i *switchPortsCycleParametersPtrType) ToSwitchPortsCycleParametersPtrOutput() SwitchPortsCycleParametersPtrOutput {
	return i.ToSwitchPortsCycleParametersPtrOutputWithContext(context.Background())
}

func (i *switchPortsCycleParametersPtrType) ToSwitchPortsCycleParametersPtrOutputWithContext(ctx context.Context) SwitchPortsCycleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsCycleParametersPtrOutput)
}

type SwitchPortsCycleParametersOutput struct{ *pulumi.OutputState }

func (SwitchPortsCycleParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsCycleParameters)(nil)).Elem()
}

func (o SwitchPortsCycleParametersOutput) ToSwitchPortsCycleParametersOutput() SwitchPortsCycleParametersOutput {
	return o
}

func (o SwitchPortsCycleParametersOutput) ToSwitchPortsCycleParametersOutputWithContext(ctx context.Context) SwitchPortsCycleParametersOutput {
	return o
}

func (o SwitchPortsCycleParametersOutput) ToSwitchPortsCycleParametersPtrOutput() SwitchPortsCycleParametersPtrOutput {
	return o.ToSwitchPortsCycleParametersPtrOutputWithContext(context.Background())
}

func (o SwitchPortsCycleParametersOutput) ToSwitchPortsCycleParametersPtrOutputWithContext(ctx context.Context) SwitchPortsCycleParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortsCycleParameters) *SwitchPortsCycleParameters {
		return &v
	}).(SwitchPortsCycleParametersPtrOutput)
}

// List of switch ports
func (o SwitchPortsCycleParametersOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortsCycleParameters) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SwitchPortsCycleParametersPtrOutput struct{ *pulumi.OutputState }

func (SwitchPortsCycleParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsCycleParameters)(nil)).Elem()
}

func (o SwitchPortsCycleParametersPtrOutput) ToSwitchPortsCycleParametersPtrOutput() SwitchPortsCycleParametersPtrOutput {
	return o
}

func (o SwitchPortsCycleParametersPtrOutput) ToSwitchPortsCycleParametersPtrOutputWithContext(ctx context.Context) SwitchPortsCycleParametersPtrOutput {
	return o
}

func (o SwitchPortsCycleParametersPtrOutput) Elem() SwitchPortsCycleParametersOutput {
	return o.ApplyT(func(v *SwitchPortsCycleParameters) SwitchPortsCycleParameters {
		if v != nil {
			return *v
		}
		var ret SwitchPortsCycleParameters
		return ret
	}).(SwitchPortsCycleParametersOutput)
}

// List of switch ports
func (o SwitchPortsCycleParametersPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchPortsCycleParameters) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type SwitchPortsMirror struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode *string `pulumi:"mode"`
}

// SwitchPortsMirrorInput is an input type that accepts SwitchPortsMirrorArgs and SwitchPortsMirrorOutput values.
// You can construct a concrete instance of `SwitchPortsMirrorInput` via:
//
//	SwitchPortsMirrorArgs{...}
type SwitchPortsMirrorInput interface {
	pulumi.Input

	ToSwitchPortsMirrorOutput() SwitchPortsMirrorOutput
	ToSwitchPortsMirrorOutputWithContext(context.Context) SwitchPortsMirrorOutput
}

type SwitchPortsMirrorArgs struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SwitchPortsMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsMirror)(nil)).Elem()
}

func (i SwitchPortsMirrorArgs) ToSwitchPortsMirrorOutput() SwitchPortsMirrorOutput {
	return i.ToSwitchPortsMirrorOutputWithContext(context.Background())
}

func (i SwitchPortsMirrorArgs) ToSwitchPortsMirrorOutputWithContext(ctx context.Context) SwitchPortsMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsMirrorOutput)
}

func (i SwitchPortsMirrorArgs) ToSwitchPortsMirrorPtrOutput() SwitchPortsMirrorPtrOutput {
	return i.ToSwitchPortsMirrorPtrOutputWithContext(context.Background())
}

func (i SwitchPortsMirrorArgs) ToSwitchPortsMirrorPtrOutputWithContext(ctx context.Context) SwitchPortsMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsMirrorOutput).ToSwitchPortsMirrorPtrOutputWithContext(ctx)
}

// SwitchPortsMirrorPtrInput is an input type that accepts SwitchPortsMirrorArgs, SwitchPortsMirrorPtr and SwitchPortsMirrorPtrOutput values.
// You can construct a concrete instance of `SwitchPortsMirrorPtrInput` via:
//
//	        SwitchPortsMirrorArgs{...}
//
//	or:
//
//	        nil
type SwitchPortsMirrorPtrInput interface {
	pulumi.Input

	ToSwitchPortsMirrorPtrOutput() SwitchPortsMirrorPtrOutput
	ToSwitchPortsMirrorPtrOutputWithContext(context.Context) SwitchPortsMirrorPtrOutput
}

type switchPortsMirrorPtrType SwitchPortsMirrorArgs

func SwitchPortsMirrorPtr(v *SwitchPortsMirrorArgs) SwitchPortsMirrorPtrInput {
	return (*switchPortsMirrorPtrType)(v)
}

func (*switchPortsMirrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsMirror)(nil)).Elem()
}

func (i *switchPortsMirrorPtrType) ToSwitchPortsMirrorPtrOutput() SwitchPortsMirrorPtrOutput {
	return i.ToSwitchPortsMirrorPtrOutputWithContext(context.Background())
}

func (i *switchPortsMirrorPtrType) ToSwitchPortsMirrorPtrOutputWithContext(ctx context.Context) SwitchPortsMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsMirrorPtrOutput)
}

type SwitchPortsMirrorOutput struct{ *pulumi.OutputState }

func (SwitchPortsMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsMirror)(nil)).Elem()
}

func (o SwitchPortsMirrorOutput) ToSwitchPortsMirrorOutput() SwitchPortsMirrorOutput {
	return o
}

func (o SwitchPortsMirrorOutput) ToSwitchPortsMirrorOutputWithContext(ctx context.Context) SwitchPortsMirrorOutput {
	return o
}

func (o SwitchPortsMirrorOutput) ToSwitchPortsMirrorPtrOutput() SwitchPortsMirrorPtrOutput {
	return o.ToSwitchPortsMirrorPtrOutputWithContext(context.Background())
}

func (o SwitchPortsMirrorOutput) ToSwitchPortsMirrorPtrOutputWithContext(ctx context.Context) SwitchPortsMirrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortsMirror) *SwitchPortsMirror {
		return &v
	}).(SwitchPortsMirrorPtrOutput)
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o SwitchPortsMirrorOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortsMirror) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SwitchPortsMirrorPtrOutput struct{ *pulumi.OutputState }

func (SwitchPortsMirrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsMirror)(nil)).Elem()
}

func (o SwitchPortsMirrorPtrOutput) ToSwitchPortsMirrorPtrOutput() SwitchPortsMirrorPtrOutput {
	return o
}

func (o SwitchPortsMirrorPtrOutput) ToSwitchPortsMirrorPtrOutputWithContext(ctx context.Context) SwitchPortsMirrorPtrOutput {
	return o
}

func (o SwitchPortsMirrorPtrOutput) Elem() SwitchPortsMirrorOutput {
	return o.ApplyT(func(v *SwitchPortsMirror) SwitchPortsMirror {
		if v != nil {
			return *v
		}
		var ret SwitchPortsMirror
		return ret
	}).(SwitchPortsMirrorOutput)
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o SwitchPortsMirrorPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchPortsMirror) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SwitchPortsModule struct {
	// The model of the expansion module.
	Model *string `pulumi:"model"`
}

// SwitchPortsModuleInput is an input type that accepts SwitchPortsModuleArgs and SwitchPortsModuleOutput values.
// You can construct a concrete instance of `SwitchPortsModuleInput` via:
//
//	SwitchPortsModuleArgs{...}
type SwitchPortsModuleInput interface {
	pulumi.Input

	ToSwitchPortsModuleOutput() SwitchPortsModuleOutput
	ToSwitchPortsModuleOutputWithContext(context.Context) SwitchPortsModuleOutput
}

type SwitchPortsModuleArgs struct {
	// The model of the expansion module.
	Model pulumi.StringPtrInput `pulumi:"model"`
}

func (SwitchPortsModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsModule)(nil)).Elem()
}

func (i SwitchPortsModuleArgs) ToSwitchPortsModuleOutput() SwitchPortsModuleOutput {
	return i.ToSwitchPortsModuleOutputWithContext(context.Background())
}

func (i SwitchPortsModuleArgs) ToSwitchPortsModuleOutputWithContext(ctx context.Context) SwitchPortsModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsModuleOutput)
}

func (i SwitchPortsModuleArgs) ToSwitchPortsModulePtrOutput() SwitchPortsModulePtrOutput {
	return i.ToSwitchPortsModulePtrOutputWithContext(context.Background())
}

func (i SwitchPortsModuleArgs) ToSwitchPortsModulePtrOutputWithContext(ctx context.Context) SwitchPortsModulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsModuleOutput).ToSwitchPortsModulePtrOutputWithContext(ctx)
}

// SwitchPortsModulePtrInput is an input type that accepts SwitchPortsModuleArgs, SwitchPortsModulePtr and SwitchPortsModulePtrOutput values.
// You can construct a concrete instance of `SwitchPortsModulePtrInput` via:
//
//	        SwitchPortsModuleArgs{...}
//
//	or:
//
//	        nil
type SwitchPortsModulePtrInput interface {
	pulumi.Input

	ToSwitchPortsModulePtrOutput() SwitchPortsModulePtrOutput
	ToSwitchPortsModulePtrOutputWithContext(context.Context) SwitchPortsModulePtrOutput
}

type switchPortsModulePtrType SwitchPortsModuleArgs

func SwitchPortsModulePtr(v *SwitchPortsModuleArgs) SwitchPortsModulePtrInput {
	return (*switchPortsModulePtrType)(v)
}

func (*switchPortsModulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsModule)(nil)).Elem()
}

func (i *switchPortsModulePtrType) ToSwitchPortsModulePtrOutput() SwitchPortsModulePtrOutput {
	return i.ToSwitchPortsModulePtrOutputWithContext(context.Background())
}

func (i *switchPortsModulePtrType) ToSwitchPortsModulePtrOutputWithContext(ctx context.Context) SwitchPortsModulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsModulePtrOutput)
}

type SwitchPortsModuleOutput struct{ *pulumi.OutputState }

func (SwitchPortsModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsModule)(nil)).Elem()
}

func (o SwitchPortsModuleOutput) ToSwitchPortsModuleOutput() SwitchPortsModuleOutput {
	return o
}

func (o SwitchPortsModuleOutput) ToSwitchPortsModuleOutputWithContext(ctx context.Context) SwitchPortsModuleOutput {
	return o
}

func (o SwitchPortsModuleOutput) ToSwitchPortsModulePtrOutput() SwitchPortsModulePtrOutput {
	return o.ToSwitchPortsModulePtrOutputWithContext(context.Background())
}

func (o SwitchPortsModuleOutput) ToSwitchPortsModulePtrOutputWithContext(ctx context.Context) SwitchPortsModulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortsModule) *SwitchPortsModule {
		return &v
	}).(SwitchPortsModulePtrOutput)
}

// The model of the expansion module.
func (o SwitchPortsModuleOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortsModule) *string { return v.Model }).(pulumi.StringPtrOutput)
}

type SwitchPortsModulePtrOutput struct{ *pulumi.OutputState }

func (SwitchPortsModulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsModule)(nil)).Elem()
}

func (o SwitchPortsModulePtrOutput) ToSwitchPortsModulePtrOutput() SwitchPortsModulePtrOutput {
	return o
}

func (o SwitchPortsModulePtrOutput) ToSwitchPortsModulePtrOutputWithContext(ctx context.Context) SwitchPortsModulePtrOutput {
	return o
}

func (o SwitchPortsModulePtrOutput) Elem() SwitchPortsModuleOutput {
	return o.ApplyT(func(v *SwitchPortsModule) SwitchPortsModule {
		if v != nil {
			return *v
		}
		var ret SwitchPortsModule
		return ret
	}).(SwitchPortsModuleOutput)
}

// The model of the expansion module.
func (o SwitchPortsModulePtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchPortsModule) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

type SwitchPortsProfile struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled *bool `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id *string `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname *string `pulumi:"iname"`
}

// SwitchPortsProfileInput is an input type that accepts SwitchPortsProfileArgs and SwitchPortsProfileOutput values.
// You can construct a concrete instance of `SwitchPortsProfileInput` via:
//
//	SwitchPortsProfileArgs{...}
type SwitchPortsProfileInput interface {
	pulumi.Input

	ToSwitchPortsProfileOutput() SwitchPortsProfileOutput
	ToSwitchPortsProfileOutputWithContext(context.Context) SwitchPortsProfileOutput
}

type SwitchPortsProfileArgs struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname pulumi.StringPtrInput `pulumi:"iname"`
}

func (SwitchPortsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsProfile)(nil)).Elem()
}

func (i SwitchPortsProfileArgs) ToSwitchPortsProfileOutput() SwitchPortsProfileOutput {
	return i.ToSwitchPortsProfileOutputWithContext(context.Background())
}

func (i SwitchPortsProfileArgs) ToSwitchPortsProfileOutputWithContext(ctx context.Context) SwitchPortsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsProfileOutput)
}

func (i SwitchPortsProfileArgs) ToSwitchPortsProfilePtrOutput() SwitchPortsProfilePtrOutput {
	return i.ToSwitchPortsProfilePtrOutputWithContext(context.Background())
}

func (i SwitchPortsProfileArgs) ToSwitchPortsProfilePtrOutputWithContext(ctx context.Context) SwitchPortsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsProfileOutput).ToSwitchPortsProfilePtrOutputWithContext(ctx)
}

// SwitchPortsProfilePtrInput is an input type that accepts SwitchPortsProfileArgs, SwitchPortsProfilePtr and SwitchPortsProfilePtrOutput values.
// You can construct a concrete instance of `SwitchPortsProfilePtrInput` via:
//
//	        SwitchPortsProfileArgs{...}
//
//	or:
//
//	        nil
type SwitchPortsProfilePtrInput interface {
	pulumi.Input

	ToSwitchPortsProfilePtrOutput() SwitchPortsProfilePtrOutput
	ToSwitchPortsProfilePtrOutputWithContext(context.Context) SwitchPortsProfilePtrOutput
}

type switchPortsProfilePtrType SwitchPortsProfileArgs

func SwitchPortsProfilePtr(v *SwitchPortsProfileArgs) SwitchPortsProfilePtrInput {
	return (*switchPortsProfilePtrType)(v)
}

func (*switchPortsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsProfile)(nil)).Elem()
}

func (i *switchPortsProfilePtrType) ToSwitchPortsProfilePtrOutput() SwitchPortsProfilePtrOutput {
	return i.ToSwitchPortsProfilePtrOutputWithContext(context.Background())
}

func (i *switchPortsProfilePtrType) ToSwitchPortsProfilePtrOutputWithContext(ctx context.Context) SwitchPortsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortsProfilePtrOutput)
}

type SwitchPortsProfileOutput struct{ *pulumi.OutputState }

func (SwitchPortsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortsProfile)(nil)).Elem()
}

func (o SwitchPortsProfileOutput) ToSwitchPortsProfileOutput() SwitchPortsProfileOutput {
	return o
}

func (o SwitchPortsProfileOutput) ToSwitchPortsProfileOutputWithContext(ctx context.Context) SwitchPortsProfileOutput {
	return o
}

func (o SwitchPortsProfileOutput) ToSwitchPortsProfilePtrOutput() SwitchPortsProfilePtrOutput {
	return o.ToSwitchPortsProfilePtrOutputWithContext(context.Background())
}

func (o SwitchPortsProfileOutput) ToSwitchPortsProfilePtrOutputWithContext(ctx context.Context) SwitchPortsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortsProfile) *SwitchPortsProfile {
		return &v
	}).(SwitchPortsProfilePtrOutput)
}

// When enabled, override this port's configuration with a port profile.
func (o SwitchPortsProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortsProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o SwitchPortsProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortsProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// When enabled, the IName of the profile.
func (o SwitchPortsProfileOutput) Iname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortsProfile) *string { return v.Iname }).(pulumi.StringPtrOutput)
}

type SwitchPortsProfilePtrOutput struct{ *pulumi.OutputState }

func (SwitchPortsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortsProfile)(nil)).Elem()
}

func (o SwitchPortsProfilePtrOutput) ToSwitchPortsProfilePtrOutput() SwitchPortsProfilePtrOutput {
	return o
}

func (o SwitchPortsProfilePtrOutput) ToSwitchPortsProfilePtrOutputWithContext(ctx context.Context) SwitchPortsProfilePtrOutput {
	return o
}

func (o SwitchPortsProfilePtrOutput) Elem() SwitchPortsProfileOutput {
	return o.ApplyT(func(v *SwitchPortsProfile) SwitchPortsProfile {
		if v != nil {
			return *v
		}
		var ret SwitchPortsProfile
		return ret
	}).(SwitchPortsProfileOutput)
}

// When enabled, override this port's configuration with a port profile.
func (o SwitchPortsProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchPortsProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o SwitchPortsProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchPortsProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// When enabled, the IName of the profile.
func (o SwitchPortsProfilePtrOutput) Iname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchPortsProfile) *string {
		if v == nil {
			return nil
		}
		return v.Iname
	}).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesDhcpDhcpOption struct {
	// The code for DHCP option which should be from 2 to 254
	Code *string `pulumi:"code"`
	// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
	Type *string `pulumi:"type"`
	// The value of the DHCP option
	Value *string `pulumi:"value"`
}

// SwitchRoutingInterfacesDhcpDhcpOptionInput is an input type that accepts SwitchRoutingInterfacesDhcpDhcpOptionArgs and SwitchRoutingInterfacesDhcpDhcpOptionOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpDhcpOptionInput` via:
//
//	SwitchRoutingInterfacesDhcpDhcpOptionArgs{...}
type SwitchRoutingInterfacesDhcpDhcpOptionInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpDhcpOptionOutput() SwitchRoutingInterfacesDhcpDhcpOptionOutput
	ToSwitchRoutingInterfacesDhcpDhcpOptionOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpDhcpOptionOutput
}

type SwitchRoutingInterfacesDhcpDhcpOptionArgs struct {
	// The code for DHCP option which should be from 2 to 254
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the DHCP option
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SwitchRoutingInterfacesDhcpDhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpDhcpOption)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpDhcpOptionArgs) ToSwitchRoutingInterfacesDhcpDhcpOptionOutput() SwitchRoutingInterfacesDhcpDhcpOptionOutput {
	return i.ToSwitchRoutingInterfacesDhcpDhcpOptionOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpDhcpOptionArgs) ToSwitchRoutingInterfacesDhcpDhcpOptionOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpDhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpDhcpOptionOutput)
}

// SwitchRoutingInterfacesDhcpDhcpOptionArrayInput is an input type that accepts SwitchRoutingInterfacesDhcpDhcpOptionArray and SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpDhcpOptionArrayInput` via:
//
//	SwitchRoutingInterfacesDhcpDhcpOptionArray{ SwitchRoutingInterfacesDhcpDhcpOptionArgs{...} }
type SwitchRoutingInterfacesDhcpDhcpOptionArrayInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutput() SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput
	ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput
}

type SwitchRoutingInterfacesDhcpDhcpOptionArray []SwitchRoutingInterfacesDhcpDhcpOptionInput

func (SwitchRoutingInterfacesDhcpDhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpDhcpOption)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpDhcpOptionArray) ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutput() SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput {
	return i.ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpDhcpOptionArray) ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput)
}

type SwitchRoutingInterfacesDhcpDhcpOptionOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpDhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpDhcpOption)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpDhcpOptionOutput) ToSwitchRoutingInterfacesDhcpDhcpOptionOutput() SwitchRoutingInterfacesDhcpDhcpOptionOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpDhcpOptionOutput) ToSwitchRoutingInterfacesDhcpDhcpOptionOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpDhcpOptionOutput {
	return o
}

// The code for DHCP option which should be from 2 to 254
func (o SwitchRoutingInterfacesDhcpDhcpOptionOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpDhcpOption) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
func (o SwitchRoutingInterfacesDhcpDhcpOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpDhcpOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the DHCP option
func (o SwitchRoutingInterfacesDhcpDhcpOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpDhcpOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpDhcpOption)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput) ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutput() SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput) ToSwitchRoutingInterfacesDhcpDhcpOptionArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput) Index(i pulumi.IntInput) SwitchRoutingInterfacesDhcpDhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRoutingInterfacesDhcpDhcpOption {
		return vs[0].([]SwitchRoutingInterfacesDhcpDhcpOption)[vs[1].(int)]
	}).(SwitchRoutingInterfacesDhcpDhcpOptionOutput)
}

type SwitchRoutingInterfacesDhcpFixedIpAssignment struct {
	// The IP address of the client which has fixed IP address assigned to it
	Ip *string `pulumi:"ip"`
	// The MAC address of the client which has fixed IP address
	Mac *string `pulumi:"mac"`
	// The name of the client which has fixed IP address
	Name *string `pulumi:"name"`
}

// SwitchRoutingInterfacesDhcpFixedIpAssignmentInput is an input type that accepts SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs and SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpFixedIpAssignmentInput` via:
//
//	SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs{...}
type SwitchRoutingInterfacesDhcpFixedIpAssignmentInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput
	ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput
}

type SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs struct {
	// The IP address of the client which has fixed IP address assigned to it
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The MAC address of the client which has fixed IP address
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// The name of the client which has fixed IP address
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpFixedIpAssignment)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput {
	return i.ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput)
}

// SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayInput is an input type that accepts SwitchRoutingInterfacesDhcpFixedIpAssignmentArray and SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayInput` via:
//
//	SwitchRoutingInterfacesDhcpFixedIpAssignmentArray{ SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs{...} }
type SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput
	ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput
}

type SwitchRoutingInterfacesDhcpFixedIpAssignmentArray []SwitchRoutingInterfacesDhcpFixedIpAssignmentInput

func (SwitchRoutingInterfacesDhcpFixedIpAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpFixedIpAssignment)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpFixedIpAssignmentArray) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput {
	return i.ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpFixedIpAssignmentArray) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput)
}

type SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpFixedIpAssignment)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput {
	return o
}

// The IP address of the client which has fixed IP address assigned to it
func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpFixedIpAssignment) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The MAC address of the client which has fixed IP address
func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpFixedIpAssignment) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// The name of the client which has fixed IP address
func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpFixedIpAssignment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpFixedIpAssignment)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput() SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput) ToSwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput) Index(i pulumi.IntInput) SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRoutingInterfacesDhcpFixedIpAssignment {
		return vs[0].([]SwitchRoutingInterfacesDhcpFixedIpAssignment)[vs[1].(int)]
	}).(SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput)
}

type SwitchRoutingInterfacesDhcpReservedIpRange struct {
	// The comment for the reserved IP range
	Comment *string `pulumi:"comment"`
	// The ending IP address of the reserved IP range
	End *string `pulumi:"end"`
	// The starting IP address of the reserved IP range
	Start *string `pulumi:"start"`
}

// SwitchRoutingInterfacesDhcpReservedIpRangeInput is an input type that accepts SwitchRoutingInterfacesDhcpReservedIpRangeArgs and SwitchRoutingInterfacesDhcpReservedIpRangeOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpReservedIpRangeInput` via:
//
//	SwitchRoutingInterfacesDhcpReservedIpRangeArgs{...}
type SwitchRoutingInterfacesDhcpReservedIpRangeInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpReservedIpRangeOutput() SwitchRoutingInterfacesDhcpReservedIpRangeOutput
	ToSwitchRoutingInterfacesDhcpReservedIpRangeOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeOutput
}

type SwitchRoutingInterfacesDhcpReservedIpRangeArgs struct {
	// The comment for the reserved IP range
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The ending IP address of the reserved IP range
	End pulumi.StringPtrInput `pulumi:"end"`
	// The starting IP address of the reserved IP range
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (SwitchRoutingInterfacesDhcpReservedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpReservedIpRange)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpReservedIpRangeArgs) ToSwitchRoutingInterfacesDhcpReservedIpRangeOutput() SwitchRoutingInterfacesDhcpReservedIpRangeOutput {
	return i.ToSwitchRoutingInterfacesDhcpReservedIpRangeOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpReservedIpRangeArgs) ToSwitchRoutingInterfacesDhcpReservedIpRangeOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpReservedIpRangeOutput)
}

// SwitchRoutingInterfacesDhcpReservedIpRangeArrayInput is an input type that accepts SwitchRoutingInterfacesDhcpReservedIpRangeArray and SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesDhcpReservedIpRangeArrayInput` via:
//
//	SwitchRoutingInterfacesDhcpReservedIpRangeArray{ SwitchRoutingInterfacesDhcpReservedIpRangeArgs{...} }
type SwitchRoutingInterfacesDhcpReservedIpRangeArrayInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput() SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput
	ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutputWithContext(context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput
}

type SwitchRoutingInterfacesDhcpReservedIpRangeArray []SwitchRoutingInterfacesDhcpReservedIpRangeInput

func (SwitchRoutingInterfacesDhcpReservedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpReservedIpRange)(nil)).Elem()
}

func (i SwitchRoutingInterfacesDhcpReservedIpRangeArray) ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput() SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput {
	return i.ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesDhcpReservedIpRangeArray) ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput)
}

type SwitchRoutingInterfacesDhcpReservedIpRangeOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpReservedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesDhcpReservedIpRange)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpReservedIpRangeOutput) ToSwitchRoutingInterfacesDhcpReservedIpRangeOutput() SwitchRoutingInterfacesDhcpReservedIpRangeOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpReservedIpRangeOutput) ToSwitchRoutingInterfacesDhcpReservedIpRangeOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeOutput {
	return o
}

// The comment for the reserved IP range
func (o SwitchRoutingInterfacesDhcpReservedIpRangeOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpReservedIpRange) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The ending IP address of the reserved IP range
func (o SwitchRoutingInterfacesDhcpReservedIpRangeOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpReservedIpRange) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The starting IP address of the reserved IP range
func (o SwitchRoutingInterfacesDhcpReservedIpRangeOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesDhcpReservedIpRange) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRoutingInterfacesDhcpReservedIpRange)(nil)).Elem()
}

func (o SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput) ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput() SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput) ToSwitchRoutingInterfacesDhcpReservedIpRangeArrayOutputWithContext(ctx context.Context) SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput {
	return o
}

func (o SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput) Index(i pulumi.IntInput) SwitchRoutingInterfacesDhcpReservedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRoutingInterfacesDhcpReservedIpRange {
		return vs[0].([]SwitchRoutingInterfacesDhcpReservedIpRange)[vs[1].(int)]
	}).(SwitchRoutingInterfacesDhcpReservedIpRangeOutput)
}

type SwitchRoutingInterfacesIpv6 struct {
	// IPv6 address
	Address *string `pulumi:"address"`
	// Assignment mode
	AssignmentMode *string `pulumi:"assignmentMode"`
	// IPv6 gateway
	Gateway *string `pulumi:"gateway"`
	// IPv6 subnet
	Prefix *string `pulumi:"prefix"`
}

// SwitchRoutingInterfacesIpv6Input is an input type that accepts SwitchRoutingInterfacesIpv6Args and SwitchRoutingInterfacesIpv6Output values.
// You can construct a concrete instance of `SwitchRoutingInterfacesIpv6Input` via:
//
//	SwitchRoutingInterfacesIpv6Args{...}
type SwitchRoutingInterfacesIpv6Input interface {
	pulumi.Input

	ToSwitchRoutingInterfacesIpv6Output() SwitchRoutingInterfacesIpv6Output
	ToSwitchRoutingInterfacesIpv6OutputWithContext(context.Context) SwitchRoutingInterfacesIpv6Output
}

type SwitchRoutingInterfacesIpv6Args struct {
	// IPv6 address
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Assignment mode
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// IPv6 gateway
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// IPv6 subnet
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SwitchRoutingInterfacesIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesIpv6)(nil)).Elem()
}

func (i SwitchRoutingInterfacesIpv6Args) ToSwitchRoutingInterfacesIpv6Output() SwitchRoutingInterfacesIpv6Output {
	return i.ToSwitchRoutingInterfacesIpv6OutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesIpv6Args) ToSwitchRoutingInterfacesIpv6OutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesIpv6Output)
}

func (i SwitchRoutingInterfacesIpv6Args) ToSwitchRoutingInterfacesIpv6PtrOutput() SwitchRoutingInterfacesIpv6PtrOutput {
	return i.ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesIpv6Args) ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesIpv6Output).ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(ctx)
}

// SwitchRoutingInterfacesIpv6PtrInput is an input type that accepts SwitchRoutingInterfacesIpv6Args, SwitchRoutingInterfacesIpv6Ptr and SwitchRoutingInterfacesIpv6PtrOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesIpv6PtrInput` via:
//
//	        SwitchRoutingInterfacesIpv6Args{...}
//
//	or:
//
//	        nil
type SwitchRoutingInterfacesIpv6PtrInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesIpv6PtrOutput() SwitchRoutingInterfacesIpv6PtrOutput
	ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(context.Context) SwitchRoutingInterfacesIpv6PtrOutput
}

type switchRoutingInterfacesIpv6PtrType SwitchRoutingInterfacesIpv6Args

func SwitchRoutingInterfacesIpv6Ptr(v *SwitchRoutingInterfacesIpv6Args) SwitchRoutingInterfacesIpv6PtrInput {
	return (*switchRoutingInterfacesIpv6PtrType)(v)
}

func (*switchRoutingInterfacesIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesIpv6)(nil)).Elem()
}

func (i *switchRoutingInterfacesIpv6PtrType) ToSwitchRoutingInterfacesIpv6PtrOutput() SwitchRoutingInterfacesIpv6PtrOutput {
	return i.ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(context.Background())
}

func (i *switchRoutingInterfacesIpv6PtrType) ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesIpv6PtrOutput)
}

type SwitchRoutingInterfacesIpv6Output struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesIpv6)(nil)).Elem()
}

func (o SwitchRoutingInterfacesIpv6Output) ToSwitchRoutingInterfacesIpv6Output() SwitchRoutingInterfacesIpv6Output {
	return o
}

func (o SwitchRoutingInterfacesIpv6Output) ToSwitchRoutingInterfacesIpv6OutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6Output {
	return o
}

func (o SwitchRoutingInterfacesIpv6Output) ToSwitchRoutingInterfacesIpv6PtrOutput() SwitchRoutingInterfacesIpv6PtrOutput {
	return o.ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(context.Background())
}

func (o SwitchRoutingInterfacesIpv6Output) ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRoutingInterfacesIpv6) *SwitchRoutingInterfacesIpv6 {
		return &v
	}).(SwitchRoutingInterfacesIpv6PtrOutput)
}

// IPv6 address
func (o SwitchRoutingInterfacesIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Assignment mode
func (o SwitchRoutingInterfacesIpv6Output) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesIpv6) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// IPv6 gateway
func (o SwitchRoutingInterfacesIpv6Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesIpv6) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// IPv6 subnet
func (o SwitchRoutingInterfacesIpv6Output) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesIpv6) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesIpv6PtrOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesIpv6)(nil)).Elem()
}

func (o SwitchRoutingInterfacesIpv6PtrOutput) ToSwitchRoutingInterfacesIpv6PtrOutput() SwitchRoutingInterfacesIpv6PtrOutput {
	return o
}

func (o SwitchRoutingInterfacesIpv6PtrOutput) ToSwitchRoutingInterfacesIpv6PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesIpv6PtrOutput {
	return o
}

func (o SwitchRoutingInterfacesIpv6PtrOutput) Elem() SwitchRoutingInterfacesIpv6Output {
	return o.ApplyT(func(v *SwitchRoutingInterfacesIpv6) SwitchRoutingInterfacesIpv6 {
		if v != nil {
			return *v
		}
		var ret SwitchRoutingInterfacesIpv6
		return ret
	}).(SwitchRoutingInterfacesIpv6Output)
}

// IPv6 address
func (o SwitchRoutingInterfacesIpv6PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Assignment mode
func (o SwitchRoutingInterfacesIpv6PtrOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesIpv6) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentMode
	}).(pulumi.StringPtrOutput)
}

// IPv6 gateway
func (o SwitchRoutingInterfacesIpv6PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// IPv6 subnet
func (o SwitchRoutingInterfacesIpv6PtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type SwitchRoutingInterfacesOspfSettings struct {
	// Area id
	Area *string `pulumi:"area"`
	// OSPF Cost
	Cost *int `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv4 area
	IsPassiveEnabled *bool `pulumi:"isPassiveEnabled"`
}

// SwitchRoutingInterfacesOspfSettingsInput is an input type that accepts SwitchRoutingInterfacesOspfSettingsArgs and SwitchRoutingInterfacesOspfSettingsOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesOspfSettingsInput` via:
//
//	SwitchRoutingInterfacesOspfSettingsArgs{...}
type SwitchRoutingInterfacesOspfSettingsInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesOspfSettingsOutput() SwitchRoutingInterfacesOspfSettingsOutput
	ToSwitchRoutingInterfacesOspfSettingsOutputWithContext(context.Context) SwitchRoutingInterfacesOspfSettingsOutput
}

type SwitchRoutingInterfacesOspfSettingsArgs struct {
	// Area id
	Area pulumi.StringPtrInput `pulumi:"area"`
	// OSPF Cost
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv4 area
	IsPassiveEnabled pulumi.BoolPtrInput `pulumi:"isPassiveEnabled"`
}

func (SwitchRoutingInterfacesOspfSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesOspfSettings)(nil)).Elem()
}

func (i SwitchRoutingInterfacesOspfSettingsArgs) ToSwitchRoutingInterfacesOspfSettingsOutput() SwitchRoutingInterfacesOspfSettingsOutput {
	return i.ToSwitchRoutingInterfacesOspfSettingsOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesOspfSettingsArgs) ToSwitchRoutingInterfacesOspfSettingsOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfSettingsOutput)
}

func (i SwitchRoutingInterfacesOspfSettingsArgs) ToSwitchRoutingInterfacesOspfSettingsPtrOutput() SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return i.ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesOspfSettingsArgs) ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfSettingsOutput).ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(ctx)
}

// SwitchRoutingInterfacesOspfSettingsPtrInput is an input type that accepts SwitchRoutingInterfacesOspfSettingsArgs, SwitchRoutingInterfacesOspfSettingsPtr and SwitchRoutingInterfacesOspfSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesOspfSettingsPtrInput` via:
//
//	        SwitchRoutingInterfacesOspfSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchRoutingInterfacesOspfSettingsPtrInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesOspfSettingsPtrOutput() SwitchRoutingInterfacesOspfSettingsPtrOutput
	ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(context.Context) SwitchRoutingInterfacesOspfSettingsPtrOutput
}

type switchRoutingInterfacesOspfSettingsPtrType SwitchRoutingInterfacesOspfSettingsArgs

func SwitchRoutingInterfacesOspfSettingsPtr(v *SwitchRoutingInterfacesOspfSettingsArgs) SwitchRoutingInterfacesOspfSettingsPtrInput {
	return (*switchRoutingInterfacesOspfSettingsPtrType)(v)
}

func (*switchRoutingInterfacesOspfSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesOspfSettings)(nil)).Elem()
}

func (i *switchRoutingInterfacesOspfSettingsPtrType) ToSwitchRoutingInterfacesOspfSettingsPtrOutput() SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return i.ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(context.Background())
}

func (i *switchRoutingInterfacesOspfSettingsPtrType) ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfSettingsPtrOutput)
}

type SwitchRoutingInterfacesOspfSettingsOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesOspfSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesOspfSettings)(nil)).Elem()
}

func (o SwitchRoutingInterfacesOspfSettingsOutput) ToSwitchRoutingInterfacesOspfSettingsOutput() SwitchRoutingInterfacesOspfSettingsOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfSettingsOutput) ToSwitchRoutingInterfacesOspfSettingsOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfSettingsOutput) ToSwitchRoutingInterfacesOspfSettingsPtrOutput() SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return o.ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchRoutingInterfacesOspfSettingsOutput) ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRoutingInterfacesOspfSettings) *SwitchRoutingInterfacesOspfSettings {
		return &v
	}).(SwitchRoutingInterfacesOspfSettingsPtrOutput)
}

// Area id
func (o SwitchRoutingInterfacesOspfSettingsOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfSettings) *string { return v.Area }).(pulumi.StringPtrOutput)
}

// OSPF Cost
func (o SwitchRoutingInterfacesOspfSettingsOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfSettings) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Disable sending Hello packets on this interface's IPv4 area
func (o SwitchRoutingInterfacesOspfSettingsOutput) IsPassiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfSettings) *bool { return v.IsPassiveEnabled }).(pulumi.BoolPtrOutput)
}

type SwitchRoutingInterfacesOspfSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesOspfSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesOspfSettings)(nil)).Elem()
}

func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) ToSwitchRoutingInterfacesOspfSettingsPtrOutput() SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) ToSwitchRoutingInterfacesOspfSettingsPtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfSettingsPtrOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) Elem() SwitchRoutingInterfacesOspfSettingsOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfSettings) SwitchRoutingInterfacesOspfSettings {
		if v != nil {
			return *v
		}
		var ret SwitchRoutingInterfacesOspfSettings
		return ret
	}).(SwitchRoutingInterfacesOspfSettingsOutput)
}

// Area id
func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfSettings) *string {
		if v == nil {
			return nil
		}
		return v.Area
	}).(pulumi.StringPtrOutput)
}

// OSPF Cost
func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfSettings) *int {
		if v == nil {
			return nil
		}
		return v.Cost
	}).(pulumi.IntPtrOutput)
}

// Disable sending Hello packets on this interface's IPv4 area
func (o SwitchRoutingInterfacesOspfSettingsPtrOutput) IsPassiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IsPassiveEnabled
	}).(pulumi.BoolPtrOutput)
}

type SwitchRoutingInterfacesOspfV3 struct {
	// Area id
	Area *string `pulumi:"area"`
	// OSPF Cost
	Cost *int `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv6 area
	IsPassiveEnabled *bool `pulumi:"isPassiveEnabled"`
}

// SwitchRoutingInterfacesOspfV3Input is an input type that accepts SwitchRoutingInterfacesOspfV3Args and SwitchRoutingInterfacesOspfV3Output values.
// You can construct a concrete instance of `SwitchRoutingInterfacesOspfV3Input` via:
//
//	SwitchRoutingInterfacesOspfV3Args{...}
type SwitchRoutingInterfacesOspfV3Input interface {
	pulumi.Input

	ToSwitchRoutingInterfacesOspfV3Output() SwitchRoutingInterfacesOspfV3Output
	ToSwitchRoutingInterfacesOspfV3OutputWithContext(context.Context) SwitchRoutingInterfacesOspfV3Output
}

type SwitchRoutingInterfacesOspfV3Args struct {
	// Area id
	Area pulumi.StringPtrInput `pulumi:"area"`
	// OSPF Cost
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv6 area
	IsPassiveEnabled pulumi.BoolPtrInput `pulumi:"isPassiveEnabled"`
}

func (SwitchRoutingInterfacesOspfV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesOspfV3)(nil)).Elem()
}

func (i SwitchRoutingInterfacesOspfV3Args) ToSwitchRoutingInterfacesOspfV3Output() SwitchRoutingInterfacesOspfV3Output {
	return i.ToSwitchRoutingInterfacesOspfV3OutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesOspfV3Args) ToSwitchRoutingInterfacesOspfV3OutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfV3Output)
}

func (i SwitchRoutingInterfacesOspfV3Args) ToSwitchRoutingInterfacesOspfV3PtrOutput() SwitchRoutingInterfacesOspfV3PtrOutput {
	return i.ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(context.Background())
}

func (i SwitchRoutingInterfacesOspfV3Args) ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfV3Output).ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(ctx)
}

// SwitchRoutingInterfacesOspfV3PtrInput is an input type that accepts SwitchRoutingInterfacesOspfV3Args, SwitchRoutingInterfacesOspfV3Ptr and SwitchRoutingInterfacesOspfV3PtrOutput values.
// You can construct a concrete instance of `SwitchRoutingInterfacesOspfV3PtrInput` via:
//
//	        SwitchRoutingInterfacesOspfV3Args{...}
//
//	or:
//
//	        nil
type SwitchRoutingInterfacesOspfV3PtrInput interface {
	pulumi.Input

	ToSwitchRoutingInterfacesOspfV3PtrOutput() SwitchRoutingInterfacesOspfV3PtrOutput
	ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(context.Context) SwitchRoutingInterfacesOspfV3PtrOutput
}

type switchRoutingInterfacesOspfV3PtrType SwitchRoutingInterfacesOspfV3Args

func SwitchRoutingInterfacesOspfV3Ptr(v *SwitchRoutingInterfacesOspfV3Args) SwitchRoutingInterfacesOspfV3PtrInput {
	return (*switchRoutingInterfacesOspfV3PtrType)(v)
}

func (*switchRoutingInterfacesOspfV3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesOspfV3)(nil)).Elem()
}

func (i *switchRoutingInterfacesOspfV3PtrType) ToSwitchRoutingInterfacesOspfV3PtrOutput() SwitchRoutingInterfacesOspfV3PtrOutput {
	return i.ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(context.Background())
}

func (i *switchRoutingInterfacesOspfV3PtrType) ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRoutingInterfacesOspfV3PtrOutput)
}

type SwitchRoutingInterfacesOspfV3Output struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesOspfV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRoutingInterfacesOspfV3)(nil)).Elem()
}

func (o SwitchRoutingInterfacesOspfV3Output) ToSwitchRoutingInterfacesOspfV3Output() SwitchRoutingInterfacesOspfV3Output {
	return o
}

func (o SwitchRoutingInterfacesOspfV3Output) ToSwitchRoutingInterfacesOspfV3OutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3Output {
	return o
}

func (o SwitchRoutingInterfacesOspfV3Output) ToSwitchRoutingInterfacesOspfV3PtrOutput() SwitchRoutingInterfacesOspfV3PtrOutput {
	return o.ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(context.Background())
}

func (o SwitchRoutingInterfacesOspfV3Output) ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRoutingInterfacesOspfV3) *SwitchRoutingInterfacesOspfV3 {
		return &v
	}).(SwitchRoutingInterfacesOspfV3PtrOutput)
}

// Area id
func (o SwitchRoutingInterfacesOspfV3Output) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfV3) *string { return v.Area }).(pulumi.StringPtrOutput)
}

// OSPF Cost
func (o SwitchRoutingInterfacesOspfV3Output) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfV3) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Disable sending Hello packets on this interface's IPv6 area
func (o SwitchRoutingInterfacesOspfV3Output) IsPassiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRoutingInterfacesOspfV3) *bool { return v.IsPassiveEnabled }).(pulumi.BoolPtrOutput)
}

type SwitchRoutingInterfacesOspfV3PtrOutput struct{ *pulumi.OutputState }

func (SwitchRoutingInterfacesOspfV3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRoutingInterfacesOspfV3)(nil)).Elem()
}

func (o SwitchRoutingInterfacesOspfV3PtrOutput) ToSwitchRoutingInterfacesOspfV3PtrOutput() SwitchRoutingInterfacesOspfV3PtrOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfV3PtrOutput) ToSwitchRoutingInterfacesOspfV3PtrOutputWithContext(ctx context.Context) SwitchRoutingInterfacesOspfV3PtrOutput {
	return o
}

func (o SwitchRoutingInterfacesOspfV3PtrOutput) Elem() SwitchRoutingInterfacesOspfV3Output {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfV3) SwitchRoutingInterfacesOspfV3 {
		if v != nil {
			return *v
		}
		var ret SwitchRoutingInterfacesOspfV3
		return ret
	}).(SwitchRoutingInterfacesOspfV3Output)
}

// Area id
func (o SwitchRoutingInterfacesOspfV3PtrOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfV3) *string {
		if v == nil {
			return nil
		}
		return v.Area
	}).(pulumi.StringPtrOutput)
}

// OSPF Cost
func (o SwitchRoutingInterfacesOspfV3PtrOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfV3) *int {
		if v == nil {
			return nil
		}
		return v.Cost
	}).(pulumi.IntPtrOutput)
}

// Disable sending Hello packets on this interface's IPv6 area
func (o SwitchRoutingInterfacesOspfV3PtrOutput) IsPassiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRoutingInterfacesOspfV3) *bool {
		if v == nil {
			return nil
		}
		return v.IsPassiveEnabled
	}).(pulumi.BoolPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6Item struct {
	// configured alternate management interface addresses
	Addresses []WirelessAlternateManagementInterfaceIpv6ItemAddress `pulumi:"addresses"`
}

// WirelessAlternateManagementInterfaceIpv6ItemInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemArgs and WirelessAlternateManagementInterfaceIpv6ItemOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ItemArgs{...}
type WirelessAlternateManagementInterfaceIpv6ItemInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemOutput() WirelessAlternateManagementInterfaceIpv6ItemOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemOutput
}

type WirelessAlternateManagementInterfaceIpv6ItemArgs struct {
	// configured alternate management interface addresses
	Addresses WirelessAlternateManagementInterfaceIpv6ItemAddressArrayInput `pulumi:"addresses"`
}

func (WirelessAlternateManagementInterfaceIpv6ItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6Item)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ItemArgs) ToWirelessAlternateManagementInterfaceIpv6ItemOutput() WirelessAlternateManagementInterfaceIpv6ItemOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemArgs) ToWirelessAlternateManagementInterfaceIpv6ItemOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemOutput)
}

func (i WirelessAlternateManagementInterfaceIpv6ItemArgs) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemArgs) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemOutput).ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(ctx)
}

// WirelessAlternateManagementInterfaceIpv6ItemPtrInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemArgs, WirelessAlternateManagementInterfaceIpv6ItemPtr and WirelessAlternateManagementInterfaceIpv6ItemPtrOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemPtrInput` via:
//
//	        WirelessAlternateManagementInterfaceIpv6ItemArgs{...}
//
//	or:
//
//	        nil
type WirelessAlternateManagementInterfaceIpv6ItemPtrInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemPtrOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemPtrOutput
}

type wirelessAlternateManagementInterfaceIpv6ItemPtrType WirelessAlternateManagementInterfaceIpv6ItemArgs

func WirelessAlternateManagementInterfaceIpv6ItemPtr(v *WirelessAlternateManagementInterfaceIpv6ItemArgs) WirelessAlternateManagementInterfaceIpv6ItemPtrInput {
	return (*wirelessAlternateManagementInterfaceIpv6ItemPtrType)(v)
}

func (*wirelessAlternateManagementInterfaceIpv6ItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6Item)(nil)).Elem()
}

func (i *wirelessAlternateManagementInterfaceIpv6ItemPtrType) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(context.Background())
}

func (i *wirelessAlternateManagementInterfaceIpv6ItemPtrType) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6Item)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemOutput) ToWirelessAlternateManagementInterfaceIpv6ItemOutput() WirelessAlternateManagementInterfaceIpv6ItemOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemOutput) ToWirelessAlternateManagementInterfaceIpv6ItemOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemOutput) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return o.ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(context.Background())
}

func (o WirelessAlternateManagementInterfaceIpv6ItemOutput) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessAlternateManagementInterfaceIpv6Item) *WirelessAlternateManagementInterfaceIpv6Item {
		return &v
	}).(WirelessAlternateManagementInterfaceIpv6ItemPtrOutput)
}

// configured alternate management interface addresses
func (o WirelessAlternateManagementInterfaceIpv6ItemOutput) Addresses() WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6Item) []WirelessAlternateManagementInterfaceIpv6ItemAddress {
		return v.Addresses
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemPtrOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6Item)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ItemPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemPtrOutput) Elem() WirelessAlternateManagementInterfaceIpv6ItemOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6Item) WirelessAlternateManagementInterfaceIpv6Item {
		if v != nil {
			return *v
		}
		var ret WirelessAlternateManagementInterfaceIpv6Item
		return ret
	}).(WirelessAlternateManagementInterfaceIpv6ItemOutput)
}

// configured alternate management interface addresses
func (o WirelessAlternateManagementInterfaceIpv6ItemPtrOutput) Addresses() WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6Item) []WirelessAlternateManagementInterfaceIpv6ItemAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddress struct {
	// The IP address configured for the alternate management interface
	Address *string `pulumi:"address"`
	// The type of address assignment. Either static or dynamic.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// The gateway address configured for the alternate managment interface
	Gateway *string `pulumi:"gateway"`
	// The DNS servers settings for this address.
	Nameservers *WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers `pulumi:"nameservers"`
	// The IPv6 prefix of the interface. Required if IPv6 object is included.
	Prefix *string `pulumi:"prefix"`
	// The IP protocol used for the address
	Protocol *string `pulumi:"protocol"`
}

// WirelessAlternateManagementInterfaceIpv6ItemAddressInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemAddressArgs and WirelessAlternateManagementInterfaceIpv6ItemAddressOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemAddressInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ItemAddressArgs{...}
type WirelessAlternateManagementInterfaceIpv6ItemAddressInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressOutput
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressArgs struct {
	// The IP address configured for the alternate management interface
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of address assignment. Either static or dynamic.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// The gateway address configured for the alternate managment interface
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The DNS servers settings for this address.
	Nameservers WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput `pulumi:"nameservers"`
	// The IPv6 prefix of the interface. Required if IPv6 object is included.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The IP protocol used for the address
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WirelessAlternateManagementInterfaceIpv6ItemAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddress)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemAddressOutput)
}

// WirelessAlternateManagementInterfaceIpv6ItemAddressArrayInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemAddressArray and WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemAddressArrayInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ItemAddressArray{ WirelessAlternateManagementInterfaceIpv6ItemAddressArgs{...} }
type WirelessAlternateManagementInterfaceIpv6ItemAddressArrayInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressArray []WirelessAlternateManagementInterfaceIpv6ItemAddressInput

func (WirelessAlternateManagementInterfaceIpv6ItemAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelessAlternateManagementInterfaceIpv6ItemAddress)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressArray) ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressArray) ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddress)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressOutput {
	return o
}

// The IP address configured for the alternate management interface
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of address assignment. Either static or dynamic.
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// The gateway address configured for the alternate managment interface
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The DNS servers settings for this address.
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) Nameservers() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers {
		return v.Nameservers
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput)
}

// The IPv6 prefix of the interface. Required if IPv6 object is included.
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The IP protocol used for the address
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddress) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelessAlternateManagementInterfaceIpv6ItemAddress)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput) Index(i pulumi.IntInput) WirelessAlternateManagementInterfaceIpv6ItemAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelessAlternateManagementInterfaceIpv6ItemAddress {
		return vs[0].([]WirelessAlternateManagementInterfaceIpv6ItemAddress)[vs[1].(int)]
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs and WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs{...}
type WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput)
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput).ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(ctx)
}

// WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs, WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtr and WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput` via:
//
//	        WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs{...}
//
//	or:
//
//	        nil
type WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput
	ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput
}

type wirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrType WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs

func WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtr(v *WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput {
	return (*wirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrType)(v)
}

func (*wirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers)(nil)).Elem()
}

func (i *wirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrType) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(context.Background())
}

func (i *wirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrType) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return o.ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(context.Background())
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers) *WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers {
		return &v
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput) Elem() WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers) WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers {
		if v != nil {
			return *v
		}
		var ret WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers
		return ret
	}).(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6ItemAddressNameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6Parameters struct {
	// configured alternate management interface addresses
	Addresses []WirelessAlternateManagementInterfaceIpv6ParametersAddress `pulumi:"addresses"`
}

// WirelessAlternateManagementInterfaceIpv6ParametersInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersArgs and WirelessAlternateManagementInterfaceIpv6ParametersOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ParametersArgs{...}
type WirelessAlternateManagementInterfaceIpv6ParametersInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersOutput() WirelessAlternateManagementInterfaceIpv6ParametersOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersOutput
}

type WirelessAlternateManagementInterfaceIpv6ParametersArgs struct {
	// configured alternate management interface addresses
	Addresses WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayInput `pulumi:"addresses"`
}

func (WirelessAlternateManagementInterfaceIpv6ParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6Parameters)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersOutput() WirelessAlternateManagementInterfaceIpv6ParametersOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersOutput)
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersOutput).ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(ctx)
}

// WirelessAlternateManagementInterfaceIpv6ParametersPtrInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersArgs, WirelessAlternateManagementInterfaceIpv6ParametersPtr and WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersPtrInput` via:
//
//	        WirelessAlternateManagementInterfaceIpv6ParametersArgs{...}
//
//	or:
//
//	        nil
type WirelessAlternateManagementInterfaceIpv6ParametersPtrInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput
}

type wirelessAlternateManagementInterfaceIpv6ParametersPtrType WirelessAlternateManagementInterfaceIpv6ParametersArgs

func WirelessAlternateManagementInterfaceIpv6ParametersPtr(v *WirelessAlternateManagementInterfaceIpv6ParametersArgs) WirelessAlternateManagementInterfaceIpv6ParametersPtrInput {
	return (*wirelessAlternateManagementInterfaceIpv6ParametersPtrType)(v)
}

func (*wirelessAlternateManagementInterfaceIpv6ParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6Parameters)(nil)).Elem()
}

func (i *wirelessAlternateManagementInterfaceIpv6ParametersPtrType) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(context.Background())
}

func (i *wirelessAlternateManagementInterfaceIpv6ParametersPtrType) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6Parameters)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersOutput() WirelessAlternateManagementInterfaceIpv6ParametersOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return o.ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(context.Background())
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessAlternateManagementInterfaceIpv6Parameters) *WirelessAlternateManagementInterfaceIpv6Parameters {
		return &v
	}).(WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput)
}

// configured alternate management interface addresses
func (o WirelessAlternateManagementInterfaceIpv6ParametersOutput) Addresses() WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6Parameters) []WirelessAlternateManagementInterfaceIpv6ParametersAddress {
		return v.Addresses
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6Parameters)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput) Elem() WirelessAlternateManagementInterfaceIpv6ParametersOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6Parameters) WirelessAlternateManagementInterfaceIpv6Parameters {
		if v != nil {
			return *v
		}
		var ret WirelessAlternateManagementInterfaceIpv6Parameters
		return ret
	}).(WirelessAlternateManagementInterfaceIpv6ParametersOutput)
}

// configured alternate management interface addresses
func (o WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput) Addresses() WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6Parameters) []WirelessAlternateManagementInterfaceIpv6ParametersAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddress struct {
	// The IP address configured for the alternate management interface
	Address *string `pulumi:"address"`
	// The type of address assignment. Either static or dynamic.
	AssignmentMode *string `pulumi:"assignmentMode"`
	// The gateway address configured for the alternate managment interface
	Gateway *string `pulumi:"gateway"`
	// The DNS servers settings for this address.
	Nameservers *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers `pulumi:"nameservers"`
	// The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
	Prefix *string `pulumi:"prefix"`
	// The IP protocol used for the address
	Protocol *string `pulumi:"protocol"`
}

// WirelessAlternateManagementInterfaceIpv6ParametersAddressInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs and WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersAddressInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs{...}
type WirelessAlternateManagementInterfaceIpv6ParametersAddressInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs struct {
	// The IP address configured for the alternate management interface
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of address assignment. Either static or dynamic.
	AssignmentMode pulumi.StringPtrInput `pulumi:"assignmentMode"`
	// The gateway address configured for the alternate managment interface
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The DNS servers settings for this address.
	Nameservers WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput `pulumi:"nameservers"`
	// The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The IP protocol used for the address
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddress)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput)
}

// WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersAddressArray and WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ParametersAddressArray{ WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs{...} }
type WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressArray []WirelessAlternateManagementInterfaceIpv6ParametersAddressInput

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelessAlternateManagementInterfaceIpv6ParametersAddress)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressArray) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressArray) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddress)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput {
	return o
}

// The IP address configured for the alternate management interface
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of address assignment. Either static or dynamic.
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) AssignmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *string { return v.AssignmentMode }).(pulumi.StringPtrOutput)
}

// The gateway address configured for the alternate managment interface
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The DNS servers settings for this address.
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) Nameservers() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers {
		return v.Nameservers
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput)
}

// The IPv6 prefix length of the IPv6 interface. Required if IPv6 object is included.
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The IP protocol used for the address
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddress) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelessAlternateManagementInterfaceIpv6ParametersAddress)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput) Index(i pulumi.IntInput) WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelessAlternateManagementInterfaceIpv6ParametersAddress {
		return vs[0].([]WirelessAlternateManagementInterfaceIpv6ParametersAddress)[vs[1].(int)]
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs and WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversInput` via:
//
//	WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs{...}
type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers)(nil)).Elem()
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput)
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(context.Background())
}

func (i WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput).ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(ctx)
}

// WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput is an input type that accepts WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs, WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtr and WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput values.
// You can construct a concrete instance of `WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput` via:
//
//	        WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs{...}
//
//	or:
//
//	        nil
type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput interface {
	pulumi.Input

	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput
	ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput
}

type wirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrType WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs

func WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtr(v *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput {
	return (*wirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrType)(v)
}

func (*wirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers)(nil)).Elem()
}

func (i *wirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrType) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return i.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(context.Background())
}

func (i *wirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrType) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return o.ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(context.Background())
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers) *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers {
		return &v
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers) []string {
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput struct{ *pulumi.OutputState }

func (WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers)(nil)).Elem()
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput) ToWirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutputWithContext(ctx context.Context) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput {
	return o
}

func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput) Elem() WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers) WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers {
		if v != nil {
			return *v
		}
		var ret WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers
		return ret
	}).(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput)
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WirelessAlternateManagementInterfaceIpv6ParametersAddressNameservers) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

type WirelessRadioSettingsFiveGhzSettings struct {
	// Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel.
	Channel *int `pulumi:"channel"`
	// Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width.
	ChannelWidth *string `pulumi:"channelWidth"`
	// Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range.
	TargetPower *int `pulumi:"targetPower"`
}

// WirelessRadioSettingsFiveGhzSettingsInput is an input type that accepts WirelessRadioSettingsFiveGhzSettingsArgs and WirelessRadioSettingsFiveGhzSettingsOutput values.
// You can construct a concrete instance of `WirelessRadioSettingsFiveGhzSettingsInput` via:
//
//	WirelessRadioSettingsFiveGhzSettingsArgs{...}
type WirelessRadioSettingsFiveGhzSettingsInput interface {
	pulumi.Input

	ToWirelessRadioSettingsFiveGhzSettingsOutput() WirelessRadioSettingsFiveGhzSettingsOutput
	ToWirelessRadioSettingsFiveGhzSettingsOutputWithContext(context.Context) WirelessRadioSettingsFiveGhzSettingsOutput
}

type WirelessRadioSettingsFiveGhzSettingsArgs struct {
	// Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel.
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width.
	ChannelWidth pulumi.StringPtrInput `pulumi:"channelWidth"`
	// Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range.
	TargetPower pulumi.IntPtrInput `pulumi:"targetPower"`
}

func (WirelessRadioSettingsFiveGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (i WirelessRadioSettingsFiveGhzSettingsArgs) ToWirelessRadioSettingsFiveGhzSettingsOutput() WirelessRadioSettingsFiveGhzSettingsOutput {
	return i.ToWirelessRadioSettingsFiveGhzSettingsOutputWithContext(context.Background())
}

func (i WirelessRadioSettingsFiveGhzSettingsArgs) ToWirelessRadioSettingsFiveGhzSettingsOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsFiveGhzSettingsOutput)
}

func (i WirelessRadioSettingsFiveGhzSettingsArgs) ToWirelessRadioSettingsFiveGhzSettingsPtrOutput() WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return i.ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (i WirelessRadioSettingsFiveGhzSettingsArgs) ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsFiveGhzSettingsOutput).ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx)
}

// WirelessRadioSettingsFiveGhzSettingsPtrInput is an input type that accepts WirelessRadioSettingsFiveGhzSettingsArgs, WirelessRadioSettingsFiveGhzSettingsPtr and WirelessRadioSettingsFiveGhzSettingsPtrOutput values.
// You can construct a concrete instance of `WirelessRadioSettingsFiveGhzSettingsPtrInput` via:
//
//	        WirelessRadioSettingsFiveGhzSettingsArgs{...}
//
//	or:
//
//	        nil
type WirelessRadioSettingsFiveGhzSettingsPtrInput interface {
	pulumi.Input

	ToWirelessRadioSettingsFiveGhzSettingsPtrOutput() WirelessRadioSettingsFiveGhzSettingsPtrOutput
	ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Context) WirelessRadioSettingsFiveGhzSettingsPtrOutput
}

type wirelessRadioSettingsFiveGhzSettingsPtrType WirelessRadioSettingsFiveGhzSettingsArgs

func WirelessRadioSettingsFiveGhzSettingsPtr(v *WirelessRadioSettingsFiveGhzSettingsArgs) WirelessRadioSettingsFiveGhzSettingsPtrInput {
	return (*wirelessRadioSettingsFiveGhzSettingsPtrType)(v)
}

func (*wirelessRadioSettingsFiveGhzSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (i *wirelessRadioSettingsFiveGhzSettingsPtrType) ToWirelessRadioSettingsFiveGhzSettingsPtrOutput() WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return i.ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (i *wirelessRadioSettingsFiveGhzSettingsPtrType) ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsFiveGhzSettingsPtrOutput)
}

type WirelessRadioSettingsFiveGhzSettingsOutput struct{ *pulumi.OutputState }

func (WirelessRadioSettingsFiveGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (o WirelessRadioSettingsFiveGhzSettingsOutput) ToWirelessRadioSettingsFiveGhzSettingsOutput() WirelessRadioSettingsFiveGhzSettingsOutput {
	return o
}

func (o WirelessRadioSettingsFiveGhzSettingsOutput) ToWirelessRadioSettingsFiveGhzSettingsOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsOutput {
	return o
}

func (o WirelessRadioSettingsFiveGhzSettingsOutput) ToWirelessRadioSettingsFiveGhzSettingsPtrOutput() WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return o.ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(context.Background())
}

func (o WirelessRadioSettingsFiveGhzSettingsOutput) ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessRadioSettingsFiveGhzSettings) *WirelessRadioSettingsFiveGhzSettings {
		return &v
	}).(WirelessRadioSettingsFiveGhzSettingsPtrOutput)
}

// Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel.
func (o WirelessRadioSettingsFiveGhzSettingsOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelessRadioSettingsFiveGhzSettings) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width.
func (o WirelessRadioSettingsFiveGhzSettingsOutput) ChannelWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelessRadioSettingsFiveGhzSettings) *string { return v.ChannelWidth }).(pulumi.StringPtrOutput)
}

// Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range.
func (o WirelessRadioSettingsFiveGhzSettingsOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelessRadioSettingsFiveGhzSettings) *int { return v.TargetPower }).(pulumi.IntPtrOutput)
}

type WirelessRadioSettingsFiveGhzSettingsPtrOutput struct{ *pulumi.OutputState }

func (WirelessRadioSettingsFiveGhzSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessRadioSettingsFiveGhzSettings)(nil)).Elem()
}

func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) ToWirelessRadioSettingsFiveGhzSettingsPtrOutput() WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return o
}

func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) ToWirelessRadioSettingsFiveGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsFiveGhzSettingsPtrOutput {
	return o
}

func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) Elem() WirelessRadioSettingsFiveGhzSettingsOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsFiveGhzSettings) WirelessRadioSettingsFiveGhzSettings {
		if v != nil {
			return *v
		}
		var ret WirelessRadioSettingsFiveGhzSettings
		return ret
	}).(WirelessRadioSettingsFiveGhzSettingsOutput)
}

// Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel.
func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsFiveGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width.
func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) ChannelWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsFiveGhzSettings) *string {
		if v == nil {
			return nil
		}
		return v.ChannelWidth
	}).(pulumi.StringPtrOutput)
}

// Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range.
func (o WirelessRadioSettingsFiveGhzSettingsPtrOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsFiveGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetPower
	}).(pulumi.IntPtrOutput)
}

type WirelessRadioSettingsTwoFourGhzSettings struct {
	// Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.
	Channel *int `pulumi:"channel"`
	// Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.
	TargetPower *int `pulumi:"targetPower"`
}

// WirelessRadioSettingsTwoFourGhzSettingsInput is an input type that accepts WirelessRadioSettingsTwoFourGhzSettingsArgs and WirelessRadioSettingsTwoFourGhzSettingsOutput values.
// You can construct a concrete instance of `WirelessRadioSettingsTwoFourGhzSettingsInput` via:
//
//	WirelessRadioSettingsTwoFourGhzSettingsArgs{...}
type WirelessRadioSettingsTwoFourGhzSettingsInput interface {
	pulumi.Input

	ToWirelessRadioSettingsTwoFourGhzSettingsOutput() WirelessRadioSettingsTwoFourGhzSettingsOutput
	ToWirelessRadioSettingsTwoFourGhzSettingsOutputWithContext(context.Context) WirelessRadioSettingsTwoFourGhzSettingsOutput
}

type WirelessRadioSettingsTwoFourGhzSettingsArgs struct {
	// Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.
	TargetPower pulumi.IntPtrInput `pulumi:"targetPower"`
}

func (WirelessRadioSettingsTwoFourGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (i WirelessRadioSettingsTwoFourGhzSettingsArgs) ToWirelessRadioSettingsTwoFourGhzSettingsOutput() WirelessRadioSettingsTwoFourGhzSettingsOutput {
	return i.ToWirelessRadioSettingsTwoFourGhzSettingsOutputWithContext(context.Background())
}

func (i WirelessRadioSettingsTwoFourGhzSettingsArgs) ToWirelessRadioSettingsTwoFourGhzSettingsOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsTwoFourGhzSettingsOutput)
}

func (i WirelessRadioSettingsTwoFourGhzSettingsArgs) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutput() WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return i.ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (i WirelessRadioSettingsTwoFourGhzSettingsArgs) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsTwoFourGhzSettingsOutput).ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx)
}

// WirelessRadioSettingsTwoFourGhzSettingsPtrInput is an input type that accepts WirelessRadioSettingsTwoFourGhzSettingsArgs, WirelessRadioSettingsTwoFourGhzSettingsPtr and WirelessRadioSettingsTwoFourGhzSettingsPtrOutput values.
// You can construct a concrete instance of `WirelessRadioSettingsTwoFourGhzSettingsPtrInput` via:
//
//	        WirelessRadioSettingsTwoFourGhzSettingsArgs{...}
//
//	or:
//
//	        nil
type WirelessRadioSettingsTwoFourGhzSettingsPtrInput interface {
	pulumi.Input

	ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutput() WirelessRadioSettingsTwoFourGhzSettingsPtrOutput
	ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Context) WirelessRadioSettingsTwoFourGhzSettingsPtrOutput
}

type wirelessRadioSettingsTwoFourGhzSettingsPtrType WirelessRadioSettingsTwoFourGhzSettingsArgs

func WirelessRadioSettingsTwoFourGhzSettingsPtr(v *WirelessRadioSettingsTwoFourGhzSettingsArgs) WirelessRadioSettingsTwoFourGhzSettingsPtrInput {
	return (*wirelessRadioSettingsTwoFourGhzSettingsPtrType)(v)
}

func (*wirelessRadioSettingsTwoFourGhzSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (i *wirelessRadioSettingsTwoFourGhzSettingsPtrType) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutput() WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return i.ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (i *wirelessRadioSettingsTwoFourGhzSettingsPtrType) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessRadioSettingsTwoFourGhzSettingsPtrOutput)
}

type WirelessRadioSettingsTwoFourGhzSettingsOutput struct{ *pulumi.OutputState }

func (WirelessRadioSettingsTwoFourGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) ToWirelessRadioSettingsTwoFourGhzSettingsOutput() WirelessRadioSettingsTwoFourGhzSettingsOutput {
	return o
}

func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) ToWirelessRadioSettingsTwoFourGhzSettingsOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsOutput {
	return o
}

func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutput() WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o.ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(context.Background())
}

func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessRadioSettingsTwoFourGhzSettings) *WirelessRadioSettingsTwoFourGhzSettings {
		return &v
	}).(WirelessRadioSettingsTwoFourGhzSettingsPtrOutput)
}

// Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.
func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelessRadioSettingsTwoFourGhzSettings) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.
func (o WirelessRadioSettingsTwoFourGhzSettingsOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelessRadioSettingsTwoFourGhzSettings) *int { return v.TargetPower }).(pulumi.IntPtrOutput)
}

type WirelessRadioSettingsTwoFourGhzSettingsPtrOutput struct{ *pulumi.OutputState }

func (WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessRadioSettingsTwoFourGhzSettings)(nil)).Elem()
}

func (o WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutput() WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o
}

func (o WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) ToWirelessRadioSettingsTwoFourGhzSettingsPtrOutputWithContext(ctx context.Context) WirelessRadioSettingsTwoFourGhzSettingsPtrOutput {
	return o
}

func (o WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) Elem() WirelessRadioSettingsTwoFourGhzSettingsOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsTwoFourGhzSettings) WirelessRadioSettingsTwoFourGhzSettings {
		if v != nil {
			return *v
		}
		var ret WirelessRadioSettingsTwoFourGhzSettings
		return ret
	}).(WirelessRadioSettingsTwoFourGhzSettingsOutput)
}

// Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.
func (o WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsTwoFourGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.
func (o WirelessRadioSettingsTwoFourGhzSettingsPtrOutput) TargetPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelessRadioSettingsTwoFourGhzSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetPower
	}).(pulumi.IntPtrOutput)
}

type BaseDetail struct {
	// Additional property name
	Name *string `pulumi:"name"`
	// Additional property value
	Value *string `pulumi:"value"`
}

// BaseDetailInput is an input type that accepts BaseDetailArgs and BaseDetailOutput values.
// You can construct a concrete instance of `BaseDetailInput` via:
//
//	BaseDetailArgs{...}
type BaseDetailInput interface {
	pulumi.Input

	ToBaseDetailOutput() BaseDetailOutput
	ToBaseDetailOutputWithContext(context.Context) BaseDetailOutput
}

type BaseDetailArgs struct {
	// Additional property name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Additional property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BaseDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseDetail)(nil)).Elem()
}

func (i BaseDetailArgs) ToBaseDetailOutput() BaseDetailOutput {
	return i.ToBaseDetailOutputWithContext(context.Background())
}

func (i BaseDetailArgs) ToBaseDetailOutputWithContext(ctx context.Context) BaseDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseDetailOutput)
}

// BaseDetailArrayInput is an input type that accepts BaseDetailArray and BaseDetailArrayOutput values.
// You can construct a concrete instance of `BaseDetailArrayInput` via:
//
//	BaseDetailArray{ BaseDetailArgs{...} }
type BaseDetailArrayInput interface {
	pulumi.Input

	ToBaseDetailArrayOutput() BaseDetailArrayOutput
	ToBaseDetailArrayOutputWithContext(context.Context) BaseDetailArrayOutput
}

type BaseDetailArray []BaseDetailInput

func (BaseDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseDetail)(nil)).Elem()
}

func (i BaseDetailArray) ToBaseDetailArrayOutput() BaseDetailArrayOutput {
	return i.ToBaseDetailArrayOutputWithContext(context.Background())
}

func (i BaseDetailArray) ToBaseDetailArrayOutputWithContext(ctx context.Context) BaseDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseDetailArrayOutput)
}

type BaseDetailOutput struct{ *pulumi.OutputState }

func (BaseDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseDetail)(nil)).Elem()
}

func (o BaseDetailOutput) ToBaseDetailOutput() BaseDetailOutput {
	return o
}

func (o BaseDetailOutput) ToBaseDetailOutputWithContext(ctx context.Context) BaseDetailOutput {
	return o
}

// Additional property name
func (o BaseDetailOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseDetail) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Additional property value
func (o BaseDetailOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseDetail) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BaseDetailArrayOutput struct{ *pulumi.OutputState }

func (BaseDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseDetail)(nil)).Elem()
}

func (o BaseDetailArrayOutput) ToBaseDetailArrayOutput() BaseDetailArrayOutput {
	return o
}

func (o BaseDetailArrayOutput) ToBaseDetailArrayOutputWithContext(ctx context.Context) BaseDetailArrayOutput {
	return o
}

func (o BaseDetailArrayOutput) Index(i pulumi.IntInput) BaseDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseDetail {
		return vs[0].([]BaseDetail)[vs[1].(int)]
	}).(BaseDetailOutput)
}

type GetAppliancePerformanceItem struct {
	PerfScore int `pulumi:"perfScore"`
}

// GetAppliancePerformanceItemInput is an input type that accepts GetAppliancePerformanceItemArgs and GetAppliancePerformanceItemOutput values.
// You can construct a concrete instance of `GetAppliancePerformanceItemInput` via:
//
//	GetAppliancePerformanceItemArgs{...}
type GetAppliancePerformanceItemInput interface {
	pulumi.Input

	ToGetAppliancePerformanceItemOutput() GetAppliancePerformanceItemOutput
	ToGetAppliancePerformanceItemOutputWithContext(context.Context) GetAppliancePerformanceItemOutput
}

type GetAppliancePerformanceItemArgs struct {
	PerfScore pulumi.IntInput `pulumi:"perfScore"`
}

func (GetAppliancePerformanceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppliancePerformanceItem)(nil)).Elem()
}

func (i GetAppliancePerformanceItemArgs) ToGetAppliancePerformanceItemOutput() GetAppliancePerformanceItemOutput {
	return i.ToGetAppliancePerformanceItemOutputWithContext(context.Background())
}

func (i GetAppliancePerformanceItemArgs) ToGetAppliancePerformanceItemOutputWithContext(ctx context.Context) GetAppliancePerformanceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppliancePerformanceItemOutput)
}

type GetAppliancePerformanceItemOutput struct{ *pulumi.OutputState }

func (GetAppliancePerformanceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppliancePerformanceItem)(nil)).Elem()
}

func (o GetAppliancePerformanceItemOutput) ToGetAppliancePerformanceItemOutput() GetAppliancePerformanceItemOutput {
	return o
}

func (o GetAppliancePerformanceItemOutput) ToGetAppliancePerformanceItemOutputWithContext(ctx context.Context) GetAppliancePerformanceItemOutput {
	return o
}

func (o GetAppliancePerformanceItemOutput) PerfScore() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppliancePerformanceItem) int { return v.PerfScore }).(pulumi.IntOutput)
}

type GetApplianceRadioSettingsItem struct {
	// Manual radio settings for 5 GHz
	FiveGhzSettings GetApplianceRadioSettingsItemFiveGhzSettings `pulumi:"fiveGhzSettings"`
	// RF Profile ID
	RfProfileId string `pulumi:"rfProfileId"`
	// The device serial
	Serial string `pulumi:"serial"`
	// Manual radio settings for 2.4 GHz
	TwoFourGhzSettings GetApplianceRadioSettingsItemTwoFourGhzSettings `pulumi:"twoFourGhzSettings"`
}

// GetApplianceRadioSettingsItemInput is an input type that accepts GetApplianceRadioSettingsItemArgs and GetApplianceRadioSettingsItemOutput values.
// You can construct a concrete instance of `GetApplianceRadioSettingsItemInput` via:
//
//	GetApplianceRadioSettingsItemArgs{...}
type GetApplianceRadioSettingsItemInput interface {
	pulumi.Input

	ToGetApplianceRadioSettingsItemOutput() GetApplianceRadioSettingsItemOutput
	ToGetApplianceRadioSettingsItemOutputWithContext(context.Context) GetApplianceRadioSettingsItemOutput
}

type GetApplianceRadioSettingsItemArgs struct {
	// Manual radio settings for 5 GHz
	FiveGhzSettings GetApplianceRadioSettingsItemFiveGhzSettingsInput `pulumi:"fiveGhzSettings"`
	// RF Profile ID
	RfProfileId pulumi.StringInput `pulumi:"rfProfileId"`
	// The device serial
	Serial pulumi.StringInput `pulumi:"serial"`
	// Manual radio settings for 2.4 GHz
	TwoFourGhzSettings GetApplianceRadioSettingsItemTwoFourGhzSettingsInput `pulumi:"twoFourGhzSettings"`
}

func (GetApplianceRadioSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItem)(nil)).Elem()
}

func (i GetApplianceRadioSettingsItemArgs) ToGetApplianceRadioSettingsItemOutput() GetApplianceRadioSettingsItemOutput {
	return i.ToGetApplianceRadioSettingsItemOutputWithContext(context.Background())
}

func (i GetApplianceRadioSettingsItemArgs) ToGetApplianceRadioSettingsItemOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceRadioSettingsItemOutput)
}

type GetApplianceRadioSettingsItemOutput struct{ *pulumi.OutputState }

func (GetApplianceRadioSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItem)(nil)).Elem()
}

func (o GetApplianceRadioSettingsItemOutput) ToGetApplianceRadioSettingsItemOutput() GetApplianceRadioSettingsItemOutput {
	return o
}

func (o GetApplianceRadioSettingsItemOutput) ToGetApplianceRadioSettingsItemOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemOutput {
	return o
}

// Manual radio settings for 5 GHz
func (o GetApplianceRadioSettingsItemOutput) FiveGhzSettings() GetApplianceRadioSettingsItemFiveGhzSettingsOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItem) GetApplianceRadioSettingsItemFiveGhzSettings {
		return v.FiveGhzSettings
	}).(GetApplianceRadioSettingsItemFiveGhzSettingsOutput)
}

// RF Profile ID
func (o GetApplianceRadioSettingsItemOutput) RfProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItem) string { return v.RfProfileId }).(pulumi.StringOutput)
}

// The device serial
func (o GetApplianceRadioSettingsItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItem) string { return v.Serial }).(pulumi.StringOutput)
}

// Manual radio settings for 2.4 GHz
func (o GetApplianceRadioSettingsItemOutput) TwoFourGhzSettings() GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItem) GetApplianceRadioSettingsItemTwoFourGhzSettings {
		return v.TwoFourGhzSettings
	}).(GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput)
}

type GetApplianceRadioSettingsItemFiveGhzSettings struct {
	// Manual channel for 5 GHz
	Channel int `pulumi:"channel"`
	// Manual channel width for 5 GHz
	ChannelWidth int `pulumi:"channelWidth"`
	// Manual target power for 5 GHz
	TargetPower int `pulumi:"targetPower"`
}

// GetApplianceRadioSettingsItemFiveGhzSettingsInput is an input type that accepts GetApplianceRadioSettingsItemFiveGhzSettingsArgs and GetApplianceRadioSettingsItemFiveGhzSettingsOutput values.
// You can construct a concrete instance of `GetApplianceRadioSettingsItemFiveGhzSettingsInput` via:
//
//	GetApplianceRadioSettingsItemFiveGhzSettingsArgs{...}
type GetApplianceRadioSettingsItemFiveGhzSettingsInput interface {
	pulumi.Input

	ToGetApplianceRadioSettingsItemFiveGhzSettingsOutput() GetApplianceRadioSettingsItemFiveGhzSettingsOutput
	ToGetApplianceRadioSettingsItemFiveGhzSettingsOutputWithContext(context.Context) GetApplianceRadioSettingsItemFiveGhzSettingsOutput
}

type GetApplianceRadioSettingsItemFiveGhzSettingsArgs struct {
	// Manual channel for 5 GHz
	Channel pulumi.IntInput `pulumi:"channel"`
	// Manual channel width for 5 GHz
	ChannelWidth pulumi.IntInput `pulumi:"channelWidth"`
	// Manual target power for 5 GHz
	TargetPower pulumi.IntInput `pulumi:"targetPower"`
}

func (GetApplianceRadioSettingsItemFiveGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItemFiveGhzSettings)(nil)).Elem()
}

func (i GetApplianceRadioSettingsItemFiveGhzSettingsArgs) ToGetApplianceRadioSettingsItemFiveGhzSettingsOutput() GetApplianceRadioSettingsItemFiveGhzSettingsOutput {
	return i.ToGetApplianceRadioSettingsItemFiveGhzSettingsOutputWithContext(context.Background())
}

func (i GetApplianceRadioSettingsItemFiveGhzSettingsArgs) ToGetApplianceRadioSettingsItemFiveGhzSettingsOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemFiveGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceRadioSettingsItemFiveGhzSettingsOutput)
}

type GetApplianceRadioSettingsItemFiveGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetApplianceRadioSettingsItemFiveGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItemFiveGhzSettings)(nil)).Elem()
}

func (o GetApplianceRadioSettingsItemFiveGhzSettingsOutput) ToGetApplianceRadioSettingsItemFiveGhzSettingsOutput() GetApplianceRadioSettingsItemFiveGhzSettingsOutput {
	return o
}

func (o GetApplianceRadioSettingsItemFiveGhzSettingsOutput) ToGetApplianceRadioSettingsItemFiveGhzSettingsOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemFiveGhzSettingsOutput {
	return o
}

// Manual channel for 5 GHz
func (o GetApplianceRadioSettingsItemFiveGhzSettingsOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItemFiveGhzSettings) int { return v.Channel }).(pulumi.IntOutput)
}

// Manual channel width for 5 GHz
func (o GetApplianceRadioSettingsItemFiveGhzSettingsOutput) ChannelWidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItemFiveGhzSettings) int { return v.ChannelWidth }).(pulumi.IntOutput)
}

// Manual target power for 5 GHz
func (o GetApplianceRadioSettingsItemFiveGhzSettingsOutput) TargetPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItemFiveGhzSettings) int { return v.TargetPower }).(pulumi.IntOutput)
}

type GetApplianceRadioSettingsItemTwoFourGhzSettings struct {
	// Manual channel for 2.4 GHz
	Channel int `pulumi:"channel"`
	// Manual target power for 2.4 GHz
	TargetPower int `pulumi:"targetPower"`
}

// GetApplianceRadioSettingsItemTwoFourGhzSettingsInput is an input type that accepts GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs and GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput values.
// You can construct a concrete instance of `GetApplianceRadioSettingsItemTwoFourGhzSettingsInput` via:
//
//	GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs{...}
type GetApplianceRadioSettingsItemTwoFourGhzSettingsInput interface {
	pulumi.Input

	ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutput() GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput
	ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutputWithContext(context.Context) GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput
}

type GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs struct {
	// Manual channel for 2.4 GHz
	Channel pulumi.IntInput `pulumi:"channel"`
	// Manual target power for 2.4 GHz
	TargetPower pulumi.IntInput `pulumi:"targetPower"`
}

func (GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItemTwoFourGhzSettings)(nil)).Elem()
}

func (i GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs) ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutput() GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput {
	return i.ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutputWithContext(context.Background())
}

func (i GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs) ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput)
}

type GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceRadioSettingsItemTwoFourGhzSettings)(nil)).Elem()
}

func (o GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput) ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutput() GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput {
	return o
}

func (o GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput) ToGetApplianceRadioSettingsItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput {
	return o
}

// Manual channel for 2.4 GHz
func (o GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItemTwoFourGhzSettings) int { return v.Channel }).(pulumi.IntOutput)
}

// Manual target power for 2.4 GHz
func (o GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput) TargetPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceRadioSettingsItemTwoFourGhzSettings) int { return v.TargetPower }).(pulumi.IntOutput)
}

type GetApplianceUplinksSettingsItem struct {
	// Interface settings.
	Interfaces GetApplianceUplinksSettingsItemInterfaces `pulumi:"interfaces"`
}

// GetApplianceUplinksSettingsItemInput is an input type that accepts GetApplianceUplinksSettingsItemArgs and GetApplianceUplinksSettingsItemOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInput` via:
//
//	GetApplianceUplinksSettingsItemArgs{...}
type GetApplianceUplinksSettingsItemInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemOutput() GetApplianceUplinksSettingsItemOutput
	ToGetApplianceUplinksSettingsItemOutputWithContext(context.Context) GetApplianceUplinksSettingsItemOutput
}

type GetApplianceUplinksSettingsItemArgs struct {
	// Interface settings.
	Interfaces GetApplianceUplinksSettingsItemInterfacesInput `pulumi:"interfaces"`
}

func (GetApplianceUplinksSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItem)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemArgs) ToGetApplianceUplinksSettingsItemOutput() GetApplianceUplinksSettingsItemOutput {
	return i.ToGetApplianceUplinksSettingsItemOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemArgs) ToGetApplianceUplinksSettingsItemOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemOutput)
}

type GetApplianceUplinksSettingsItemOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItem)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemOutput) ToGetApplianceUplinksSettingsItemOutput() GetApplianceUplinksSettingsItemOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemOutput) ToGetApplianceUplinksSettingsItemOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemOutput {
	return o
}

// Interface settings.
func (o GetApplianceUplinksSettingsItemOutput) Interfaces() GetApplianceUplinksSettingsItemInterfacesOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItem) GetApplianceUplinksSettingsItemInterfaces { return v.Interfaces }).(GetApplianceUplinksSettingsItemInterfacesOutput)
}

type GetApplianceUplinksSettingsItemInterfaces struct {
	// WAN 1 settings.
	Wan1 GetApplianceUplinksSettingsItemInterfacesWan1 `pulumi:"wan1"`
	// WAN 2 settings.
	Wan2 GetApplianceUplinksSettingsItemInterfacesWan2 `pulumi:"wan2"`
}

// GetApplianceUplinksSettingsItemInterfacesInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesArgs and GetApplianceUplinksSettingsItemInterfacesOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesArgs{...}
type GetApplianceUplinksSettingsItemInterfacesInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesOutput() GetApplianceUplinksSettingsItemInterfacesOutput
	ToGetApplianceUplinksSettingsItemInterfacesOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesOutput
}

type GetApplianceUplinksSettingsItemInterfacesArgs struct {
	// WAN 1 settings.
	Wan1 GetApplianceUplinksSettingsItemInterfacesWan1Input `pulumi:"wan1"`
	// WAN 2 settings.
	Wan2 GetApplianceUplinksSettingsItemInterfacesWan2Input `pulumi:"wan2"`
}

func (GetApplianceUplinksSettingsItemInterfacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfaces)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesArgs) ToGetApplianceUplinksSettingsItemInterfacesOutput() GetApplianceUplinksSettingsItemInterfacesOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesArgs) ToGetApplianceUplinksSettingsItemInterfacesOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesOutput)
}

type GetApplianceUplinksSettingsItemInterfacesOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfaces)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesOutput) ToGetApplianceUplinksSettingsItemInterfacesOutput() GetApplianceUplinksSettingsItemInterfacesOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesOutput) ToGetApplianceUplinksSettingsItemInterfacesOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesOutput {
	return o
}

// WAN 1 settings.
func (o GetApplianceUplinksSettingsItemInterfacesOutput) Wan1() GetApplianceUplinksSettingsItemInterfacesWan1Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfaces) GetApplianceUplinksSettingsItemInterfacesWan1 {
		return v.Wan1
	}).(GetApplianceUplinksSettingsItemInterfacesWan1Output)
}

// WAN 2 settings.
func (o GetApplianceUplinksSettingsItemInterfacesOutput) Wan2() GetApplianceUplinksSettingsItemInterfacesWan2Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfaces) GetApplianceUplinksSettingsItemInterfacesWan2 {
		return v.Wan2
	}).(GetApplianceUplinksSettingsItemInterfacesWan2Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan1 struct {
	// Enable or disable the interface.
	Enabled bool `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe GetApplianceUplinksSettingsItemInterfacesWan1Pppoe `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis GetApplianceUplinksSettingsItemInterfacesWan1Svis `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging `pulumi:"vlanTagging"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1Args and GetApplianceUplinksSettingsItemInterfacesWan1Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan1Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1Output() GetApplianceUplinksSettingsItemInterfacesWan1Output
	ToGetApplianceUplinksSettingsItemInterfacesWan1OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1Output
}

type GetApplianceUplinksSettingsItemInterfacesWan1Args struct {
	// Enable or disable the interface.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe GetApplianceUplinksSettingsItemInterfacesWan1PppoeInput `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis GetApplianceUplinksSettingsItemInterfacesWan1SvisInput `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingInput `pulumi:"vlanTagging"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1Args) ToGetApplianceUplinksSettingsItemInterfacesWan1Output() GetApplianceUplinksSettingsItemInterfacesWan1Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1Args) ToGetApplianceUplinksSettingsItemInterfacesWan1OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan1Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) ToGetApplianceUplinksSettingsItemInterfacesWan1Output() GetApplianceUplinksSettingsItemInterfacesWan1Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) ToGetApplianceUplinksSettingsItemInterfacesWan1OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1Output {
	return o
}

// Enable or disable the interface.
func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Configuration options for PPPoE.
func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) Pppoe() GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1) GetApplianceUplinksSettingsItemInterfacesWan1Pppoe {
		return v.Pppoe
	}).(GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput)
}

// SVI settings by protocol.
func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) Svis() GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1) GetApplianceUplinksSettingsItemInterfacesWan1Svis {
		return v.Svis
	}).(GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput)
}

// VLAN tagging settings.
func (o GetApplianceUplinksSettingsItemInterfacesWan1Output) VlanTagging() GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1) GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging {
		return v.VlanTagging
	}).(GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1Pppoe struct {
	// Settings for PPPoE Authentication.
	Authentication GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1PppoeInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs and GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1PppoeInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1PppoeInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs struct {
	// Settings for PPPoE Authentication.
	Authentication GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationInput `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1Pppoe)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1Pppoe)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput {
	return o
}

// Settings for PPPoE Authentication.
func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput) Authentication() GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1Pppoe) GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication {
		return v.Authentication
	}).(GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput)
}

// Whether PPPoE is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1Pppoe) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication struct {
	// Whether PPPoE authentication is enabled.
	Enabled bool `pulumi:"enabled"`
	// Username for PPPoE authentication.
	Username string `pulumi:"username"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs and GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs struct {
	// Whether PPPoE authentication is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Username for PPPoE authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput {
	return o
}

// Whether PPPoE authentication is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Username for PPPoE authentication.
func (o GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1Svis struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4 `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6 `pulumi:"ipv6"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1SvisInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs and GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1SvisInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1SvisInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Input `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Input `pulumi:"ipv6"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1Svis)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1Svis)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput {
	return o
}

// IPv4 settings for static/dynamic mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput) Ipv4() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1Svis) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4 {
		return v.Ipv4
	}).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output)
}

// IPv6 settings for static/dynamic mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput) Ipv6() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1Svis) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6 {
		return v.Ipv6
	}).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4 struct {
	// IP address and subnet mask when in static mode.
	Address string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode string `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers `pulumi:"nameservers"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args and GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output
	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args struct {
	// IP address and subnet mask when in static mode.
	Address pulumi.StringInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversInput `pulumi:"nameservers"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output {
	return o
}

// IP address and subnet mask when in static mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4) string { return v.Address }).(pulumi.StringOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// Gateway IP address when in static mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4) string { return v.Gateway }).(pulumi.StringOutput)
}

// The nameserver settings for this SVI.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output) Nameservers() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers {
		return v.Nameservers
	}).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs and GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput {
	return o
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6 struct {
	// Static address that will override the one(s) received by SLAAC.
	Address string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode string `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers `pulumi:"nameservers"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args and GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output
	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args struct {
	// Static address that will override the one(s) received by SLAAC.
	Address pulumi.StringInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversInput `pulumi:"nameservers"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output {
	return o
}

// Static address that will override the one(s) received by SLAAC.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6) string { return v.Address }).(pulumi.StringOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// Static gateway that will override the one received by autoconf.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6) string { return v.Gateway }).(pulumi.StringOutput)
}

// The nameserver settings for this SVI.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output) Nameservers() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers {
		return v.Nameservers
	}).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs and GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput {
	return o
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging struct {
	// Whether VLAN tagging is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId int `pulumi:"vlanId"`
}

// GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs and GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs struct {
	// Whether VLAN tagging is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs) ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput) ToGetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput {
	return o
}

// Whether VLAN tagging is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan1VlanTagging) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2 struct {
	// Enable or disable the interface.
	Enabled bool `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe GetApplianceUplinksSettingsItemInterfacesWan2Pppoe `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis GetApplianceUplinksSettingsItemInterfacesWan2Svis `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging `pulumi:"vlanTagging"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2Args and GetApplianceUplinksSettingsItemInterfacesWan2Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan2Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2Output() GetApplianceUplinksSettingsItemInterfacesWan2Output
	ToGetApplianceUplinksSettingsItemInterfacesWan2OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2Output
}

type GetApplianceUplinksSettingsItemInterfacesWan2Args struct {
	// Enable or disable the interface.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Configuration options for PPPoE.
	Pppoe GetApplianceUplinksSettingsItemInterfacesWan2PppoeInput `pulumi:"pppoe"`
	// SVI settings by protocol.
	Svis GetApplianceUplinksSettingsItemInterfacesWan2SvisInput `pulumi:"svis"`
	// VLAN tagging settings.
	VlanTagging GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingInput `pulumi:"vlanTagging"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2Args) ToGetApplianceUplinksSettingsItemInterfacesWan2Output() GetApplianceUplinksSettingsItemInterfacesWan2Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2Args) ToGetApplianceUplinksSettingsItemInterfacesWan2OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan2Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) ToGetApplianceUplinksSettingsItemInterfacesWan2Output() GetApplianceUplinksSettingsItemInterfacesWan2Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) ToGetApplianceUplinksSettingsItemInterfacesWan2OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2Output {
	return o
}

// Enable or disable the interface.
func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Configuration options for PPPoE.
func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) Pppoe() GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2) GetApplianceUplinksSettingsItemInterfacesWan2Pppoe {
		return v.Pppoe
	}).(GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput)
}

// SVI settings by protocol.
func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) Svis() GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2) GetApplianceUplinksSettingsItemInterfacesWan2Svis {
		return v.Svis
	}).(GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput)
}

// VLAN tagging settings.
func (o GetApplianceUplinksSettingsItemInterfacesWan2Output) VlanTagging() GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2) GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging {
		return v.VlanTagging
	}).(GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2Pppoe struct {
	// Settings for PPPoE Authentication.
	Authentication GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2PppoeInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs and GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2PppoeInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2PppoeInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs struct {
	// Settings for PPPoE Authentication.
	Authentication GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationInput `pulumi:"authentication"`
	// Whether PPPoE is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2Pppoe)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2Pppoe)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput {
	return o
}

// Settings for PPPoE Authentication.
func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput) Authentication() GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2Pppoe) GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication {
		return v.Authentication
	}).(GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput)
}

// Whether PPPoE is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2Pppoe) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication struct {
	// Whether PPPoE authentication is enabled.
	Enabled bool `pulumi:"enabled"`
	// Username for PPPoE authentication.
	Username string `pulumi:"username"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs and GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs struct {
	// Whether PPPoE authentication is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Username for PPPoE authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput() GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput {
	return o
}

// Whether PPPoE authentication is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Username for PPPoE authentication.
func (o GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2Svis struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4 `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6 `pulumi:"ipv6"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2SvisInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs and GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2SvisInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2SvisInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs struct {
	// IPv4 settings for static/dynamic mode.
	Ipv4 GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Input `pulumi:"ipv4"`
	// IPv6 settings for static/dynamic mode.
	Ipv6 GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Input `pulumi:"ipv6"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2Svis)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2Svis)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput {
	return o
}

// IPv4 settings for static/dynamic mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput) Ipv4() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2Svis) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4 {
		return v.Ipv4
	}).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output)
}

// IPv6 settings for static/dynamic mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput) Ipv6() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2Svis) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6 {
		return v.Ipv6
	}).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4 struct {
	// IP address and subnet mask when in static mode.
	Address string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode string `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers `pulumi:"nameservers"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args and GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output
	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args struct {
	// IP address and subnet mask when in static mode.
	Address pulumi.StringInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// Gateway IP address when in static mode.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversInput `pulumi:"nameservers"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output {
	return o
}

// IP address and subnet mask when in static mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4) string { return v.Address }).(pulumi.StringOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// Gateway IP address when in static mode.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4) string { return v.Gateway }).(pulumi.StringOutput)
}

// The nameserver settings for this SVI.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output) Nameservers() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers {
		return v.Nameservers
	}).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs and GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput {
	return o
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6 struct {
	// Static address that will override the one(s) received by SLAAC.
	Address string `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode string `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway string `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers `pulumi:"nameservers"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Input is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args and GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Input` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args{...}
type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Input interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output
	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6OutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args struct {
	// Static address that will override the one(s) received by SLAAC.
	Address pulumi.StringInput `pulumi:"address"`
	// The assignment mode for this SVI. Applies only when PPPoE is disabled.
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// Static gateway that will override the one received by autoconf.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The nameserver settings for this SVI.
	Nameservers GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversInput `pulumi:"nameservers"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6OutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6OutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output {
	return o
}

// Static address that will override the one(s) received by SLAAC.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6) string { return v.Address }).(pulumi.StringOutput)
}

// The assignment mode for this SVI. Applies only when PPPoE is disabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// Static gateway that will override the one received by autoconf.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6) string { return v.Gateway }).(pulumi.StringOutput)
}

// The nameserver settings for this SVI.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output) Nameservers() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers {
		return v.Nameservers
	}).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses []string `pulumi:"addresses"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs and GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs struct {
	// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput() GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput {
	return o
}

// Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
func (o GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Nameservers) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging struct {
	// Whether VLAN tagging is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId int `pulumi:"vlanId"`
}

// GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingInput is an input type that accepts GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs and GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput values.
// You can construct a concrete instance of `GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingInput` via:
//
//	GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs{...}
type GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingInput interface {
	pulumi.Input

	ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput
	ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutputWithContext(context.Context) GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput
}

type GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs struct {
	// Whether VLAN tagging is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the VLAN to use for VLAN tagging.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging)(nil)).Elem()
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput {
	return i.ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutputWithContext(context.Background())
}

func (i GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs) ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput)
}

type GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput struct{ *pulumi.OutputState }

func (GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging)(nil)).Elem()
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput() GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput {
	return o
}

func (o GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput) ToGetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutputWithContext(ctx context.Context) GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput {
	return o
}

// Whether VLAN tagging is enabled.
func (o GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the VLAN to use for VLAN tagging.
func (o GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplianceUplinksSettingsItemInterfacesWan2VlanTagging) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetCameraAnalyticsLiveItem struct {
	Ts    string                          `pulumi:"ts"`
	Zones GetCameraAnalyticsLiveItemZones `pulumi:"zones"`
}

// GetCameraAnalyticsLiveItemInput is an input type that accepts GetCameraAnalyticsLiveItemArgs and GetCameraAnalyticsLiveItemOutput values.
// You can construct a concrete instance of `GetCameraAnalyticsLiveItemInput` via:
//
//	GetCameraAnalyticsLiveItemArgs{...}
type GetCameraAnalyticsLiveItemInput interface {
	pulumi.Input

	ToGetCameraAnalyticsLiveItemOutput() GetCameraAnalyticsLiveItemOutput
	ToGetCameraAnalyticsLiveItemOutputWithContext(context.Context) GetCameraAnalyticsLiveItemOutput
}

type GetCameraAnalyticsLiveItemArgs struct {
	Ts    pulumi.StringInput                   `pulumi:"ts"`
	Zones GetCameraAnalyticsLiveItemZonesInput `pulumi:"zones"`
}

func (GetCameraAnalyticsLiveItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItem)(nil)).Elem()
}

func (i GetCameraAnalyticsLiveItemArgs) ToGetCameraAnalyticsLiveItemOutput() GetCameraAnalyticsLiveItemOutput {
	return i.ToGetCameraAnalyticsLiveItemOutputWithContext(context.Background())
}

func (i GetCameraAnalyticsLiveItemArgs) ToGetCameraAnalyticsLiveItemOutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraAnalyticsLiveItemOutput)
}

type GetCameraAnalyticsLiveItemOutput struct{ *pulumi.OutputState }

func (GetCameraAnalyticsLiveItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItem)(nil)).Elem()
}

func (o GetCameraAnalyticsLiveItemOutput) ToGetCameraAnalyticsLiveItemOutput() GetCameraAnalyticsLiveItemOutput {
	return o
}

func (o GetCameraAnalyticsLiveItemOutput) ToGetCameraAnalyticsLiveItemOutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemOutput {
	return o
}

func (o GetCameraAnalyticsLiveItemOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraAnalyticsLiveItem) string { return v.Ts }).(pulumi.StringOutput)
}

func (o GetCameraAnalyticsLiveItemOutput) Zones() GetCameraAnalyticsLiveItemZonesOutput {
	return o.ApplyT(func(v GetCameraAnalyticsLiveItem) GetCameraAnalyticsLiveItemZones { return v.Zones }).(GetCameraAnalyticsLiveItemZonesOutput)
}

type GetCameraAnalyticsLiveItemZones struct {
	Status0 GetCameraAnalyticsLiveItemZonesStatus0 `pulumi:"status0"`
}

// GetCameraAnalyticsLiveItemZonesInput is an input type that accepts GetCameraAnalyticsLiveItemZonesArgs and GetCameraAnalyticsLiveItemZonesOutput values.
// You can construct a concrete instance of `GetCameraAnalyticsLiveItemZonesInput` via:
//
//	GetCameraAnalyticsLiveItemZonesArgs{...}
type GetCameraAnalyticsLiveItemZonesInput interface {
	pulumi.Input

	ToGetCameraAnalyticsLiveItemZonesOutput() GetCameraAnalyticsLiveItemZonesOutput
	ToGetCameraAnalyticsLiveItemZonesOutputWithContext(context.Context) GetCameraAnalyticsLiveItemZonesOutput
}

type GetCameraAnalyticsLiveItemZonesArgs struct {
	Status0 GetCameraAnalyticsLiveItemZonesStatus0Input `pulumi:"status0"`
}

func (GetCameraAnalyticsLiveItemZonesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItemZones)(nil)).Elem()
}

func (i GetCameraAnalyticsLiveItemZonesArgs) ToGetCameraAnalyticsLiveItemZonesOutput() GetCameraAnalyticsLiveItemZonesOutput {
	return i.ToGetCameraAnalyticsLiveItemZonesOutputWithContext(context.Background())
}

func (i GetCameraAnalyticsLiveItemZonesArgs) ToGetCameraAnalyticsLiveItemZonesOutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemZonesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraAnalyticsLiveItemZonesOutput)
}

type GetCameraAnalyticsLiveItemZonesOutput struct{ *pulumi.OutputState }

func (GetCameraAnalyticsLiveItemZonesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItemZones)(nil)).Elem()
}

func (o GetCameraAnalyticsLiveItemZonesOutput) ToGetCameraAnalyticsLiveItemZonesOutput() GetCameraAnalyticsLiveItemZonesOutput {
	return o
}

func (o GetCameraAnalyticsLiveItemZonesOutput) ToGetCameraAnalyticsLiveItemZonesOutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemZonesOutput {
	return o
}

func (o GetCameraAnalyticsLiveItemZonesOutput) Status0() GetCameraAnalyticsLiveItemZonesStatus0Output {
	return o.ApplyT(func(v GetCameraAnalyticsLiveItemZones) GetCameraAnalyticsLiveItemZonesStatus0 { return v.Status0 }).(GetCameraAnalyticsLiveItemZonesStatus0Output)
}

type GetCameraAnalyticsLiveItemZonesStatus0 struct {
	Person int `pulumi:"person"`
}

// GetCameraAnalyticsLiveItemZonesStatus0Input is an input type that accepts GetCameraAnalyticsLiveItemZonesStatus0Args and GetCameraAnalyticsLiveItemZonesStatus0Output values.
// You can construct a concrete instance of `GetCameraAnalyticsLiveItemZonesStatus0Input` via:
//
//	GetCameraAnalyticsLiveItemZonesStatus0Args{...}
type GetCameraAnalyticsLiveItemZonesStatus0Input interface {
	pulumi.Input

	ToGetCameraAnalyticsLiveItemZonesStatus0Output() GetCameraAnalyticsLiveItemZonesStatus0Output
	ToGetCameraAnalyticsLiveItemZonesStatus0OutputWithContext(context.Context) GetCameraAnalyticsLiveItemZonesStatus0Output
}

type GetCameraAnalyticsLiveItemZonesStatus0Args struct {
	Person pulumi.IntInput `pulumi:"person"`
}

func (GetCameraAnalyticsLiveItemZonesStatus0Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItemZonesStatus0)(nil)).Elem()
}

func (i GetCameraAnalyticsLiveItemZonesStatus0Args) ToGetCameraAnalyticsLiveItemZonesStatus0Output() GetCameraAnalyticsLiveItemZonesStatus0Output {
	return i.ToGetCameraAnalyticsLiveItemZonesStatus0OutputWithContext(context.Background())
}

func (i GetCameraAnalyticsLiveItemZonesStatus0Args) ToGetCameraAnalyticsLiveItemZonesStatus0OutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemZonesStatus0Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraAnalyticsLiveItemZonesStatus0Output)
}

type GetCameraAnalyticsLiveItemZonesStatus0Output struct{ *pulumi.OutputState }

func (GetCameraAnalyticsLiveItemZonesStatus0Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraAnalyticsLiveItemZonesStatus0)(nil)).Elem()
}

func (o GetCameraAnalyticsLiveItemZonesStatus0Output) ToGetCameraAnalyticsLiveItemZonesStatus0Output() GetCameraAnalyticsLiveItemZonesStatus0Output {
	return o
}

func (o GetCameraAnalyticsLiveItemZonesStatus0Output) ToGetCameraAnalyticsLiveItemZonesStatus0OutputWithContext(ctx context.Context) GetCameraAnalyticsLiveItemZonesStatus0Output {
	return o
}

func (o GetCameraAnalyticsLiveItemZonesStatus0Output) Person() pulumi.IntOutput {
	return o.ApplyT(func(v GetCameraAnalyticsLiveItemZonesStatus0) int { return v.Person }).(pulumi.IntOutput)
}

type GetCameraCustomAnalyticsItem struct {
	// Custom analytics artifact ID
	ArtifactId string `pulumi:"artifactId"`
	// Whether custom analytics is enabled
	Enabled bool `pulumi:"enabled"`
	// Parameters for the custom analytics workload
	Parameters []GetCameraCustomAnalyticsItemParameter `pulumi:"parameters"`
}

// GetCameraCustomAnalyticsItemInput is an input type that accepts GetCameraCustomAnalyticsItemArgs and GetCameraCustomAnalyticsItemOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsItemInput` via:
//
//	GetCameraCustomAnalyticsItemArgs{...}
type GetCameraCustomAnalyticsItemInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsItemOutput() GetCameraCustomAnalyticsItemOutput
	ToGetCameraCustomAnalyticsItemOutputWithContext(context.Context) GetCameraCustomAnalyticsItemOutput
}

type GetCameraCustomAnalyticsItemArgs struct {
	// Custom analytics artifact ID
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Whether custom analytics is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Parameters for the custom analytics workload
	Parameters GetCameraCustomAnalyticsItemParameterArrayInput `pulumi:"parameters"`
}

func (GetCameraCustomAnalyticsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsItem)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsItemArgs) ToGetCameraCustomAnalyticsItemOutput() GetCameraCustomAnalyticsItemOutput {
	return i.ToGetCameraCustomAnalyticsItemOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsItemArgs) ToGetCameraCustomAnalyticsItemOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsItemOutput)
}

type GetCameraCustomAnalyticsItemOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsItem)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsItemOutput) ToGetCameraCustomAnalyticsItemOutput() GetCameraCustomAnalyticsItemOutput {
	return o
}

func (o GetCameraCustomAnalyticsItemOutput) ToGetCameraCustomAnalyticsItemOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemOutput {
	return o
}

// Custom analytics artifact ID
func (o GetCameraCustomAnalyticsItemOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsItem) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Whether custom analytics is enabled
func (o GetCameraCustomAnalyticsItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Parameters for the custom analytics workload
func (o GetCameraCustomAnalyticsItemOutput) Parameters() GetCameraCustomAnalyticsItemParameterArrayOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsItem) []GetCameraCustomAnalyticsItemParameter { return v.Parameters }).(GetCameraCustomAnalyticsItemParameterArrayOutput)
}

type GetCameraCustomAnalyticsItemParameter struct {
	// Name of the parameter
	Name string `pulumi:"name"`
	// Value of the parameter
	Value float64 `pulumi:"value"`
}

// GetCameraCustomAnalyticsItemParameterInput is an input type that accepts GetCameraCustomAnalyticsItemParameterArgs and GetCameraCustomAnalyticsItemParameterOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsItemParameterInput` via:
//
//	GetCameraCustomAnalyticsItemParameterArgs{...}
type GetCameraCustomAnalyticsItemParameterInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsItemParameterOutput() GetCameraCustomAnalyticsItemParameterOutput
	ToGetCameraCustomAnalyticsItemParameterOutputWithContext(context.Context) GetCameraCustomAnalyticsItemParameterOutput
}

type GetCameraCustomAnalyticsItemParameterArgs struct {
	// Name of the parameter
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the parameter
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCameraCustomAnalyticsItemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsItemParameter)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsItemParameterArgs) ToGetCameraCustomAnalyticsItemParameterOutput() GetCameraCustomAnalyticsItemParameterOutput {
	return i.ToGetCameraCustomAnalyticsItemParameterOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsItemParameterArgs) ToGetCameraCustomAnalyticsItemParameterOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsItemParameterOutput)
}

// GetCameraCustomAnalyticsItemParameterArrayInput is an input type that accepts GetCameraCustomAnalyticsItemParameterArray and GetCameraCustomAnalyticsItemParameterArrayOutput values.
// You can construct a concrete instance of `GetCameraCustomAnalyticsItemParameterArrayInput` via:
//
//	GetCameraCustomAnalyticsItemParameterArray{ GetCameraCustomAnalyticsItemParameterArgs{...} }
type GetCameraCustomAnalyticsItemParameterArrayInput interface {
	pulumi.Input

	ToGetCameraCustomAnalyticsItemParameterArrayOutput() GetCameraCustomAnalyticsItemParameterArrayOutput
	ToGetCameraCustomAnalyticsItemParameterArrayOutputWithContext(context.Context) GetCameraCustomAnalyticsItemParameterArrayOutput
}

type GetCameraCustomAnalyticsItemParameterArray []GetCameraCustomAnalyticsItemParameterInput

func (GetCameraCustomAnalyticsItemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraCustomAnalyticsItemParameter)(nil)).Elem()
}

func (i GetCameraCustomAnalyticsItemParameterArray) ToGetCameraCustomAnalyticsItemParameterArrayOutput() GetCameraCustomAnalyticsItemParameterArrayOutput {
	return i.ToGetCameraCustomAnalyticsItemParameterArrayOutputWithContext(context.Background())
}

func (i GetCameraCustomAnalyticsItemParameterArray) ToGetCameraCustomAnalyticsItemParameterArrayOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraCustomAnalyticsItemParameterArrayOutput)
}

type GetCameraCustomAnalyticsItemParameterOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsItemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraCustomAnalyticsItemParameter)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsItemParameterOutput) ToGetCameraCustomAnalyticsItemParameterOutput() GetCameraCustomAnalyticsItemParameterOutput {
	return o
}

func (o GetCameraCustomAnalyticsItemParameterOutput) ToGetCameraCustomAnalyticsItemParameterOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemParameterOutput {
	return o
}

// Name of the parameter
func (o GetCameraCustomAnalyticsItemParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraCustomAnalyticsItemParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the parameter
func (o GetCameraCustomAnalyticsItemParameterOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCameraCustomAnalyticsItemParameter) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCameraCustomAnalyticsItemParameterArrayOutput struct{ *pulumi.OutputState }

func (GetCameraCustomAnalyticsItemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCameraCustomAnalyticsItemParameter)(nil)).Elem()
}

func (o GetCameraCustomAnalyticsItemParameterArrayOutput) ToGetCameraCustomAnalyticsItemParameterArrayOutput() GetCameraCustomAnalyticsItemParameterArrayOutput {
	return o
}

func (o GetCameraCustomAnalyticsItemParameterArrayOutput) ToGetCameraCustomAnalyticsItemParameterArrayOutputWithContext(ctx context.Context) GetCameraCustomAnalyticsItemParameterArrayOutput {
	return o
}

func (o GetCameraCustomAnalyticsItemParameterArrayOutput) Index(i pulumi.IntInput) GetCameraCustomAnalyticsItemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCameraCustomAnalyticsItemParameter {
		return vs[0].([]GetCameraCustomAnalyticsItemParameter)[vs[1].(int)]
	}).(GetCameraCustomAnalyticsItemParameterOutput)
}

type GetCameraQualityAndRetentionItem struct {
	AudioRecordingEnabled          bool   `pulumi:"audioRecordingEnabled"`
	MotionBasedRetentionEnabled    bool   `pulumi:"motionBasedRetentionEnabled"`
	MotionDetectorVersion          int    `pulumi:"motionDetectorVersion"`
	ProfileId                      string `pulumi:"profileId"`
	Quality                        string `pulumi:"quality"`
	Resolution                     string `pulumi:"resolution"`
	RestrictedBandwidthModeEnabled bool   `pulumi:"restrictedBandwidthModeEnabled"`
}

// GetCameraQualityAndRetentionItemInput is an input type that accepts GetCameraQualityAndRetentionItemArgs and GetCameraQualityAndRetentionItemOutput values.
// You can construct a concrete instance of `GetCameraQualityAndRetentionItemInput` via:
//
//	GetCameraQualityAndRetentionItemArgs{...}
type GetCameraQualityAndRetentionItemInput interface {
	pulumi.Input

	ToGetCameraQualityAndRetentionItemOutput() GetCameraQualityAndRetentionItemOutput
	ToGetCameraQualityAndRetentionItemOutputWithContext(context.Context) GetCameraQualityAndRetentionItemOutput
}

type GetCameraQualityAndRetentionItemArgs struct {
	AudioRecordingEnabled          pulumi.BoolInput   `pulumi:"audioRecordingEnabled"`
	MotionBasedRetentionEnabled    pulumi.BoolInput   `pulumi:"motionBasedRetentionEnabled"`
	MotionDetectorVersion          pulumi.IntInput    `pulumi:"motionDetectorVersion"`
	ProfileId                      pulumi.StringInput `pulumi:"profileId"`
	Quality                        pulumi.StringInput `pulumi:"quality"`
	Resolution                     pulumi.StringInput `pulumi:"resolution"`
	RestrictedBandwidthModeEnabled pulumi.BoolInput   `pulumi:"restrictedBandwidthModeEnabled"`
}

func (GetCameraQualityAndRetentionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraQualityAndRetentionItem)(nil)).Elem()
}

func (i GetCameraQualityAndRetentionItemArgs) ToGetCameraQualityAndRetentionItemOutput() GetCameraQualityAndRetentionItemOutput {
	return i.ToGetCameraQualityAndRetentionItemOutputWithContext(context.Background())
}

func (i GetCameraQualityAndRetentionItemArgs) ToGetCameraQualityAndRetentionItemOutputWithContext(ctx context.Context) GetCameraQualityAndRetentionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraQualityAndRetentionItemOutput)
}

type GetCameraQualityAndRetentionItemOutput struct{ *pulumi.OutputState }

func (GetCameraQualityAndRetentionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraQualityAndRetentionItem)(nil)).Elem()
}

func (o GetCameraQualityAndRetentionItemOutput) ToGetCameraQualityAndRetentionItemOutput() GetCameraQualityAndRetentionItemOutput {
	return o
}

func (o GetCameraQualityAndRetentionItemOutput) ToGetCameraQualityAndRetentionItemOutputWithContext(ctx context.Context) GetCameraQualityAndRetentionItemOutput {
	return o
}

func (o GetCameraQualityAndRetentionItemOutput) AudioRecordingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) bool { return v.AudioRecordingEnabled }).(pulumi.BoolOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) MotionBasedRetentionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) bool { return v.MotionBasedRetentionEnabled }).(pulumi.BoolOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) MotionDetectorVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) int { return v.MotionDetectorVersion }).(pulumi.IntOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) string { return v.ProfileId }).(pulumi.StringOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) Quality() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) string { return v.Quality }).(pulumi.StringOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) string { return v.Resolution }).(pulumi.StringOutput)
}

func (o GetCameraQualityAndRetentionItemOutput) RestrictedBandwidthModeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraQualityAndRetentionItem) bool { return v.RestrictedBandwidthModeEnabled }).(pulumi.BoolOutput)
}

type GetCameraSenseItem struct {
	AudioDetection GetCameraSenseItemAudioDetection `pulumi:"audioDetection"`
	MqttBrokerId   string                           `pulumi:"mqttBrokerId"`
	MqttTopics     []string                         `pulumi:"mqttTopics"`
	SenseEnabled   bool                             `pulumi:"senseEnabled"`
}

// GetCameraSenseItemInput is an input type that accepts GetCameraSenseItemArgs and GetCameraSenseItemOutput values.
// You can construct a concrete instance of `GetCameraSenseItemInput` via:
//
//	GetCameraSenseItemArgs{...}
type GetCameraSenseItemInput interface {
	pulumi.Input

	ToGetCameraSenseItemOutput() GetCameraSenseItemOutput
	ToGetCameraSenseItemOutputWithContext(context.Context) GetCameraSenseItemOutput
}

type GetCameraSenseItemArgs struct {
	AudioDetection GetCameraSenseItemAudioDetectionInput `pulumi:"audioDetection"`
	MqttBrokerId   pulumi.StringInput                    `pulumi:"mqttBrokerId"`
	MqttTopics     pulumi.StringArrayInput               `pulumi:"mqttTopics"`
	SenseEnabled   pulumi.BoolInput                      `pulumi:"senseEnabled"`
}

func (GetCameraSenseItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraSenseItem)(nil)).Elem()
}

func (i GetCameraSenseItemArgs) ToGetCameraSenseItemOutput() GetCameraSenseItemOutput {
	return i.ToGetCameraSenseItemOutputWithContext(context.Background())
}

func (i GetCameraSenseItemArgs) ToGetCameraSenseItemOutputWithContext(ctx context.Context) GetCameraSenseItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraSenseItemOutput)
}

type GetCameraSenseItemOutput struct{ *pulumi.OutputState }

func (GetCameraSenseItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraSenseItem)(nil)).Elem()
}

func (o GetCameraSenseItemOutput) ToGetCameraSenseItemOutput() GetCameraSenseItemOutput {
	return o
}

func (o GetCameraSenseItemOutput) ToGetCameraSenseItemOutputWithContext(ctx context.Context) GetCameraSenseItemOutput {
	return o
}

func (o GetCameraSenseItemOutput) AudioDetection() GetCameraSenseItemAudioDetectionOutput {
	return o.ApplyT(func(v GetCameraSenseItem) GetCameraSenseItemAudioDetection { return v.AudioDetection }).(GetCameraSenseItemAudioDetectionOutput)
}

func (o GetCameraSenseItemOutput) MqttBrokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraSenseItem) string { return v.MqttBrokerId }).(pulumi.StringOutput)
}

func (o GetCameraSenseItemOutput) MqttTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCameraSenseItem) []string { return v.MqttTopics }).(pulumi.StringArrayOutput)
}

func (o GetCameraSenseItemOutput) SenseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraSenseItem) bool { return v.SenseEnabled }).(pulumi.BoolOutput)
}

type GetCameraSenseItemAudioDetection struct {
	Enabled bool `pulumi:"enabled"`
}

// GetCameraSenseItemAudioDetectionInput is an input type that accepts GetCameraSenseItemAudioDetectionArgs and GetCameraSenseItemAudioDetectionOutput values.
// You can construct a concrete instance of `GetCameraSenseItemAudioDetectionInput` via:
//
//	GetCameraSenseItemAudioDetectionArgs{...}
type GetCameraSenseItemAudioDetectionInput interface {
	pulumi.Input

	ToGetCameraSenseItemAudioDetectionOutput() GetCameraSenseItemAudioDetectionOutput
	ToGetCameraSenseItemAudioDetectionOutputWithContext(context.Context) GetCameraSenseItemAudioDetectionOutput
}

type GetCameraSenseItemAudioDetectionArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetCameraSenseItemAudioDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraSenseItemAudioDetection)(nil)).Elem()
}

func (i GetCameraSenseItemAudioDetectionArgs) ToGetCameraSenseItemAudioDetectionOutput() GetCameraSenseItemAudioDetectionOutput {
	return i.ToGetCameraSenseItemAudioDetectionOutputWithContext(context.Background())
}

func (i GetCameraSenseItemAudioDetectionArgs) ToGetCameraSenseItemAudioDetectionOutputWithContext(ctx context.Context) GetCameraSenseItemAudioDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraSenseItemAudioDetectionOutput)
}

type GetCameraSenseItemAudioDetectionOutput struct{ *pulumi.OutputState }

func (GetCameraSenseItemAudioDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraSenseItemAudioDetection)(nil)).Elem()
}

func (o GetCameraSenseItemAudioDetectionOutput) ToGetCameraSenseItemAudioDetectionOutput() GetCameraSenseItemAudioDetectionOutput {
	return o
}

func (o GetCameraSenseItemAudioDetectionOutput) ToGetCameraSenseItemAudioDetectionOutputWithContext(ctx context.Context) GetCameraSenseItemAudioDetectionOutput {
	return o
}

func (o GetCameraSenseItemAudioDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraSenseItemAudioDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetCameraVideoLinkItem struct {
	Url       string `pulumi:"url"`
	VisionUrl string `pulumi:"visionUrl"`
}

// GetCameraVideoLinkItemInput is an input type that accepts GetCameraVideoLinkItemArgs and GetCameraVideoLinkItemOutput values.
// You can construct a concrete instance of `GetCameraVideoLinkItemInput` via:
//
//	GetCameraVideoLinkItemArgs{...}
type GetCameraVideoLinkItemInput interface {
	pulumi.Input

	ToGetCameraVideoLinkItemOutput() GetCameraVideoLinkItemOutput
	ToGetCameraVideoLinkItemOutputWithContext(context.Context) GetCameraVideoLinkItemOutput
}

type GetCameraVideoLinkItemArgs struct {
	Url       pulumi.StringInput `pulumi:"url"`
	VisionUrl pulumi.StringInput `pulumi:"visionUrl"`
}

func (GetCameraVideoLinkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraVideoLinkItem)(nil)).Elem()
}

func (i GetCameraVideoLinkItemArgs) ToGetCameraVideoLinkItemOutput() GetCameraVideoLinkItemOutput {
	return i.ToGetCameraVideoLinkItemOutputWithContext(context.Background())
}

func (i GetCameraVideoLinkItemArgs) ToGetCameraVideoLinkItemOutputWithContext(ctx context.Context) GetCameraVideoLinkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraVideoLinkItemOutput)
}

type GetCameraVideoLinkItemOutput struct{ *pulumi.OutputState }

func (GetCameraVideoLinkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraVideoLinkItem)(nil)).Elem()
}

func (o GetCameraVideoLinkItemOutput) ToGetCameraVideoLinkItemOutput() GetCameraVideoLinkItemOutput {
	return o
}

func (o GetCameraVideoLinkItemOutput) ToGetCameraVideoLinkItemOutputWithContext(ctx context.Context) GetCameraVideoLinkItemOutput {
	return o
}

func (o GetCameraVideoLinkItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraVideoLinkItem) string { return v.Url }).(pulumi.StringOutput)
}

func (o GetCameraVideoLinkItemOutput) VisionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraVideoLinkItem) string { return v.VisionUrl }).(pulumi.StringOutput)
}

type GetCameraVideoSettingsItem struct {
	// Boolean indicating if external rtsp stream is exposed
	ExternalRtspEnabled bool `pulumi:"externalRtspEnabled"`
	// External rstp url. Will only be returned if external rtsp stream is exposed
	RtspUrl string `pulumi:"rtspUrl"`
}

// GetCameraVideoSettingsItemInput is an input type that accepts GetCameraVideoSettingsItemArgs and GetCameraVideoSettingsItemOutput values.
// You can construct a concrete instance of `GetCameraVideoSettingsItemInput` via:
//
//	GetCameraVideoSettingsItemArgs{...}
type GetCameraVideoSettingsItemInput interface {
	pulumi.Input

	ToGetCameraVideoSettingsItemOutput() GetCameraVideoSettingsItemOutput
	ToGetCameraVideoSettingsItemOutputWithContext(context.Context) GetCameraVideoSettingsItemOutput
}

type GetCameraVideoSettingsItemArgs struct {
	// Boolean indicating if external rtsp stream is exposed
	ExternalRtspEnabled pulumi.BoolInput `pulumi:"externalRtspEnabled"`
	// External rstp url. Will only be returned if external rtsp stream is exposed
	RtspUrl pulumi.StringInput `pulumi:"rtspUrl"`
}

func (GetCameraVideoSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraVideoSettingsItem)(nil)).Elem()
}

func (i GetCameraVideoSettingsItemArgs) ToGetCameraVideoSettingsItemOutput() GetCameraVideoSettingsItemOutput {
	return i.ToGetCameraVideoSettingsItemOutputWithContext(context.Background())
}

func (i GetCameraVideoSettingsItemArgs) ToGetCameraVideoSettingsItemOutputWithContext(ctx context.Context) GetCameraVideoSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraVideoSettingsItemOutput)
}

type GetCameraVideoSettingsItemOutput struct{ *pulumi.OutputState }

func (GetCameraVideoSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraVideoSettingsItem)(nil)).Elem()
}

func (o GetCameraVideoSettingsItemOutput) ToGetCameraVideoSettingsItemOutput() GetCameraVideoSettingsItemOutput {
	return o
}

func (o GetCameraVideoSettingsItemOutput) ToGetCameraVideoSettingsItemOutputWithContext(ctx context.Context) GetCameraVideoSettingsItemOutput {
	return o
}

// Boolean indicating if external rtsp stream is exposed
func (o GetCameraVideoSettingsItemOutput) ExternalRtspEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCameraVideoSettingsItem) bool { return v.ExternalRtspEnabled }).(pulumi.BoolOutput)
}

// External rstp url. Will only be returned if external rtsp stream is exposed
func (o GetCameraVideoSettingsItemOutput) RtspUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraVideoSettingsItem) string { return v.RtspUrl }).(pulumi.StringOutput)
}

type GetCameraWirelessProfilesItem struct {
	Ids GetCameraWirelessProfilesItemIds `pulumi:"ids"`
}

// GetCameraWirelessProfilesItemInput is an input type that accepts GetCameraWirelessProfilesItemArgs and GetCameraWirelessProfilesItemOutput values.
// You can construct a concrete instance of `GetCameraWirelessProfilesItemInput` via:
//
//	GetCameraWirelessProfilesItemArgs{...}
type GetCameraWirelessProfilesItemInput interface {
	pulumi.Input

	ToGetCameraWirelessProfilesItemOutput() GetCameraWirelessProfilesItemOutput
	ToGetCameraWirelessProfilesItemOutputWithContext(context.Context) GetCameraWirelessProfilesItemOutput
}

type GetCameraWirelessProfilesItemArgs struct {
	Ids GetCameraWirelessProfilesItemIdsInput `pulumi:"ids"`
}

func (GetCameraWirelessProfilesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraWirelessProfilesItem)(nil)).Elem()
}

func (i GetCameraWirelessProfilesItemArgs) ToGetCameraWirelessProfilesItemOutput() GetCameraWirelessProfilesItemOutput {
	return i.ToGetCameraWirelessProfilesItemOutputWithContext(context.Background())
}

func (i GetCameraWirelessProfilesItemArgs) ToGetCameraWirelessProfilesItemOutputWithContext(ctx context.Context) GetCameraWirelessProfilesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraWirelessProfilesItemOutput)
}

type GetCameraWirelessProfilesItemOutput struct{ *pulumi.OutputState }

func (GetCameraWirelessProfilesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraWirelessProfilesItem)(nil)).Elem()
}

func (o GetCameraWirelessProfilesItemOutput) ToGetCameraWirelessProfilesItemOutput() GetCameraWirelessProfilesItemOutput {
	return o
}

func (o GetCameraWirelessProfilesItemOutput) ToGetCameraWirelessProfilesItemOutputWithContext(ctx context.Context) GetCameraWirelessProfilesItemOutput {
	return o
}

func (o GetCameraWirelessProfilesItemOutput) Ids() GetCameraWirelessProfilesItemIdsOutput {
	return o.ApplyT(func(v GetCameraWirelessProfilesItem) GetCameraWirelessProfilesItemIds { return v.Ids }).(GetCameraWirelessProfilesItemIdsOutput)
}

type GetCameraWirelessProfilesItemIds struct {
	Backup    string `pulumi:"backup"`
	Primary   string `pulumi:"primary"`
	Secondary string `pulumi:"secondary"`
}

// GetCameraWirelessProfilesItemIdsInput is an input type that accepts GetCameraWirelessProfilesItemIdsArgs and GetCameraWirelessProfilesItemIdsOutput values.
// You can construct a concrete instance of `GetCameraWirelessProfilesItemIdsInput` via:
//
//	GetCameraWirelessProfilesItemIdsArgs{...}
type GetCameraWirelessProfilesItemIdsInput interface {
	pulumi.Input

	ToGetCameraWirelessProfilesItemIdsOutput() GetCameraWirelessProfilesItemIdsOutput
	ToGetCameraWirelessProfilesItemIdsOutputWithContext(context.Context) GetCameraWirelessProfilesItemIdsOutput
}

type GetCameraWirelessProfilesItemIdsArgs struct {
	Backup    pulumi.StringInput `pulumi:"backup"`
	Primary   pulumi.StringInput `pulumi:"primary"`
	Secondary pulumi.StringInput `pulumi:"secondary"`
}

func (GetCameraWirelessProfilesItemIdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraWirelessProfilesItemIds)(nil)).Elem()
}

func (i GetCameraWirelessProfilesItemIdsArgs) ToGetCameraWirelessProfilesItemIdsOutput() GetCameraWirelessProfilesItemIdsOutput {
	return i.ToGetCameraWirelessProfilesItemIdsOutputWithContext(context.Background())
}

func (i GetCameraWirelessProfilesItemIdsArgs) ToGetCameraWirelessProfilesItemIdsOutputWithContext(ctx context.Context) GetCameraWirelessProfilesItemIdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCameraWirelessProfilesItemIdsOutput)
}

type GetCameraWirelessProfilesItemIdsOutput struct{ *pulumi.OutputState }

func (GetCameraWirelessProfilesItemIdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCameraWirelessProfilesItemIds)(nil)).Elem()
}

func (o GetCameraWirelessProfilesItemIdsOutput) ToGetCameraWirelessProfilesItemIdsOutput() GetCameraWirelessProfilesItemIdsOutput {
	return o
}

func (o GetCameraWirelessProfilesItemIdsOutput) ToGetCameraWirelessProfilesItemIdsOutputWithContext(ctx context.Context) GetCameraWirelessProfilesItemIdsOutput {
	return o
}

func (o GetCameraWirelessProfilesItemIdsOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraWirelessProfilesItemIds) string { return v.Backup }).(pulumi.StringOutput)
}

func (o GetCameraWirelessProfilesItemIdsOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraWirelessProfilesItemIds) string { return v.Primary }).(pulumi.StringOutput)
}

func (o GetCameraWirelessProfilesItemIdsOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v GetCameraWirelessProfilesItemIds) string { return v.Secondary }).(pulumi.StringOutput)
}

type GetCellularGatewayLanItem struct {
	// Lan IP of the MG
	DeviceLanIp string `pulumi:"deviceLanIp"`
	// Name of the MG.
	DeviceName string `pulumi:"deviceName"`
	// Subnet configuration of the MG.
	DeviceSubnet string `pulumi:"deviceSubnet"`
	// list of all fixed IP assignments for a single MG
	FixedIpAssignments []GetCellularGatewayLanItemFixedIpAssignment `pulumi:"fixedIpAssignments"`
	// list of all reserved IP ranges for a single MG
	ReservedIpRanges []GetCellularGatewayLanItemReservedIpRange `pulumi:"reservedIpRanges"`
}

// GetCellularGatewayLanItemInput is an input type that accepts GetCellularGatewayLanItemArgs and GetCellularGatewayLanItemOutput values.
// You can construct a concrete instance of `GetCellularGatewayLanItemInput` via:
//
//	GetCellularGatewayLanItemArgs{...}
type GetCellularGatewayLanItemInput interface {
	pulumi.Input

	ToGetCellularGatewayLanItemOutput() GetCellularGatewayLanItemOutput
	ToGetCellularGatewayLanItemOutputWithContext(context.Context) GetCellularGatewayLanItemOutput
}

type GetCellularGatewayLanItemArgs struct {
	// Lan IP of the MG
	DeviceLanIp pulumi.StringInput `pulumi:"deviceLanIp"`
	// Name of the MG.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Subnet configuration of the MG.
	DeviceSubnet pulumi.StringInput `pulumi:"deviceSubnet"`
	// list of all fixed IP assignments for a single MG
	FixedIpAssignments GetCellularGatewayLanItemFixedIpAssignmentArrayInput `pulumi:"fixedIpAssignments"`
	// list of all reserved IP ranges for a single MG
	ReservedIpRanges GetCellularGatewayLanItemReservedIpRangeArrayInput `pulumi:"reservedIpRanges"`
}

func (GetCellularGatewayLanItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItem)(nil)).Elem()
}

func (i GetCellularGatewayLanItemArgs) ToGetCellularGatewayLanItemOutput() GetCellularGatewayLanItemOutput {
	return i.ToGetCellularGatewayLanItemOutputWithContext(context.Background())
}

func (i GetCellularGatewayLanItemArgs) ToGetCellularGatewayLanItemOutputWithContext(ctx context.Context) GetCellularGatewayLanItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayLanItemOutput)
}

type GetCellularGatewayLanItemOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayLanItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItem)(nil)).Elem()
}

func (o GetCellularGatewayLanItemOutput) ToGetCellularGatewayLanItemOutput() GetCellularGatewayLanItemOutput {
	return o
}

func (o GetCellularGatewayLanItemOutput) ToGetCellularGatewayLanItemOutputWithContext(ctx context.Context) GetCellularGatewayLanItemOutput {
	return o
}

// Lan IP of the MG
func (o GetCellularGatewayLanItemOutput) DeviceLanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItem) string { return v.DeviceLanIp }).(pulumi.StringOutput)
}

// Name of the MG.
func (o GetCellularGatewayLanItemOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItem) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Subnet configuration of the MG.
func (o GetCellularGatewayLanItemOutput) DeviceSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItem) string { return v.DeviceSubnet }).(pulumi.StringOutput)
}

// list of all fixed IP assignments for a single MG
func (o GetCellularGatewayLanItemOutput) FixedIpAssignments() GetCellularGatewayLanItemFixedIpAssignmentArrayOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItem) []GetCellularGatewayLanItemFixedIpAssignment {
		return v.FixedIpAssignments
	}).(GetCellularGatewayLanItemFixedIpAssignmentArrayOutput)
}

// list of all reserved IP ranges for a single MG
func (o GetCellularGatewayLanItemOutput) ReservedIpRanges() GetCellularGatewayLanItemReservedIpRangeArrayOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItem) []GetCellularGatewayLanItemReservedIpRange {
		return v.ReservedIpRanges
	}).(GetCellularGatewayLanItemReservedIpRangeArrayOutput)
}

type GetCellularGatewayLanItemFixedIpAssignment struct {
	// The IP address you want to assign to a specific server or device
	Ip string `pulumi:"ip"`
	// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
	Mac string `pulumi:"mac"`
	// A descriptive name of the assignment
	Name string `pulumi:"name"`
}

// GetCellularGatewayLanItemFixedIpAssignmentInput is an input type that accepts GetCellularGatewayLanItemFixedIpAssignmentArgs and GetCellularGatewayLanItemFixedIpAssignmentOutput values.
// You can construct a concrete instance of `GetCellularGatewayLanItemFixedIpAssignmentInput` via:
//
//	GetCellularGatewayLanItemFixedIpAssignmentArgs{...}
type GetCellularGatewayLanItemFixedIpAssignmentInput interface {
	pulumi.Input

	ToGetCellularGatewayLanItemFixedIpAssignmentOutput() GetCellularGatewayLanItemFixedIpAssignmentOutput
	ToGetCellularGatewayLanItemFixedIpAssignmentOutputWithContext(context.Context) GetCellularGatewayLanItemFixedIpAssignmentOutput
}

type GetCellularGatewayLanItemFixedIpAssignmentArgs struct {
	// The IP address you want to assign to a specific server or device
	Ip pulumi.StringInput `pulumi:"ip"`
	// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
	Mac pulumi.StringInput `pulumi:"mac"`
	// A descriptive name of the assignment
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCellularGatewayLanItemFixedIpAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItemFixedIpAssignment)(nil)).Elem()
}

func (i GetCellularGatewayLanItemFixedIpAssignmentArgs) ToGetCellularGatewayLanItemFixedIpAssignmentOutput() GetCellularGatewayLanItemFixedIpAssignmentOutput {
	return i.ToGetCellularGatewayLanItemFixedIpAssignmentOutputWithContext(context.Background())
}

func (i GetCellularGatewayLanItemFixedIpAssignmentArgs) ToGetCellularGatewayLanItemFixedIpAssignmentOutputWithContext(ctx context.Context) GetCellularGatewayLanItemFixedIpAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayLanItemFixedIpAssignmentOutput)
}

// GetCellularGatewayLanItemFixedIpAssignmentArrayInput is an input type that accepts GetCellularGatewayLanItemFixedIpAssignmentArray and GetCellularGatewayLanItemFixedIpAssignmentArrayOutput values.
// You can construct a concrete instance of `GetCellularGatewayLanItemFixedIpAssignmentArrayInput` via:
//
//	GetCellularGatewayLanItemFixedIpAssignmentArray{ GetCellularGatewayLanItemFixedIpAssignmentArgs{...} }
type GetCellularGatewayLanItemFixedIpAssignmentArrayInput interface {
	pulumi.Input

	ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutput() GetCellularGatewayLanItemFixedIpAssignmentArrayOutput
	ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutputWithContext(context.Context) GetCellularGatewayLanItemFixedIpAssignmentArrayOutput
}

type GetCellularGatewayLanItemFixedIpAssignmentArray []GetCellularGatewayLanItemFixedIpAssignmentInput

func (GetCellularGatewayLanItemFixedIpAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayLanItemFixedIpAssignment)(nil)).Elem()
}

func (i GetCellularGatewayLanItemFixedIpAssignmentArray) ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutput() GetCellularGatewayLanItemFixedIpAssignmentArrayOutput {
	return i.ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutputWithContext(context.Background())
}

func (i GetCellularGatewayLanItemFixedIpAssignmentArray) ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutputWithContext(ctx context.Context) GetCellularGatewayLanItemFixedIpAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayLanItemFixedIpAssignmentArrayOutput)
}

type GetCellularGatewayLanItemFixedIpAssignmentOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayLanItemFixedIpAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItemFixedIpAssignment)(nil)).Elem()
}

func (o GetCellularGatewayLanItemFixedIpAssignmentOutput) ToGetCellularGatewayLanItemFixedIpAssignmentOutput() GetCellularGatewayLanItemFixedIpAssignmentOutput {
	return o
}

func (o GetCellularGatewayLanItemFixedIpAssignmentOutput) ToGetCellularGatewayLanItemFixedIpAssignmentOutputWithContext(ctx context.Context) GetCellularGatewayLanItemFixedIpAssignmentOutput {
	return o
}

// The IP address you want to assign to a specific server or device
func (o GetCellularGatewayLanItemFixedIpAssignmentOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemFixedIpAssignment) string { return v.Ip }).(pulumi.StringOutput)
}

// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
func (o GetCellularGatewayLanItemFixedIpAssignmentOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemFixedIpAssignment) string { return v.Mac }).(pulumi.StringOutput)
}

// A descriptive name of the assignment
func (o GetCellularGatewayLanItemFixedIpAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemFixedIpAssignment) string { return v.Name }).(pulumi.StringOutput)
}

type GetCellularGatewayLanItemFixedIpAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayLanItemFixedIpAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayLanItemFixedIpAssignment)(nil)).Elem()
}

func (o GetCellularGatewayLanItemFixedIpAssignmentArrayOutput) ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutput() GetCellularGatewayLanItemFixedIpAssignmentArrayOutput {
	return o
}

func (o GetCellularGatewayLanItemFixedIpAssignmentArrayOutput) ToGetCellularGatewayLanItemFixedIpAssignmentArrayOutputWithContext(ctx context.Context) GetCellularGatewayLanItemFixedIpAssignmentArrayOutput {
	return o
}

func (o GetCellularGatewayLanItemFixedIpAssignmentArrayOutput) Index(i pulumi.IntInput) GetCellularGatewayLanItemFixedIpAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularGatewayLanItemFixedIpAssignment {
		return vs[0].([]GetCellularGatewayLanItemFixedIpAssignment)[vs[1].(int)]
	}).(GetCellularGatewayLanItemFixedIpAssignmentOutput)
}

type GetCellularGatewayLanItemReservedIpRange struct {
	// Comment explaining the reserved IP range
	Comment string `pulumi:"comment"`
	// Ending IP included in the reserved range of IPs
	End string `pulumi:"end"`
	// Starting IP included in the reserved range of IPs
	Start string `pulumi:"start"`
}

// GetCellularGatewayLanItemReservedIpRangeInput is an input type that accepts GetCellularGatewayLanItemReservedIpRangeArgs and GetCellularGatewayLanItemReservedIpRangeOutput values.
// You can construct a concrete instance of `GetCellularGatewayLanItemReservedIpRangeInput` via:
//
//	GetCellularGatewayLanItemReservedIpRangeArgs{...}
type GetCellularGatewayLanItemReservedIpRangeInput interface {
	pulumi.Input

	ToGetCellularGatewayLanItemReservedIpRangeOutput() GetCellularGatewayLanItemReservedIpRangeOutput
	ToGetCellularGatewayLanItemReservedIpRangeOutputWithContext(context.Context) GetCellularGatewayLanItemReservedIpRangeOutput
}

type GetCellularGatewayLanItemReservedIpRangeArgs struct {
	// Comment explaining the reserved IP range
	Comment pulumi.StringInput `pulumi:"comment"`
	// Ending IP included in the reserved range of IPs
	End pulumi.StringInput `pulumi:"end"`
	// Starting IP included in the reserved range of IPs
	Start pulumi.StringInput `pulumi:"start"`
}

func (GetCellularGatewayLanItemReservedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItemReservedIpRange)(nil)).Elem()
}

func (i GetCellularGatewayLanItemReservedIpRangeArgs) ToGetCellularGatewayLanItemReservedIpRangeOutput() GetCellularGatewayLanItemReservedIpRangeOutput {
	return i.ToGetCellularGatewayLanItemReservedIpRangeOutputWithContext(context.Background())
}

func (i GetCellularGatewayLanItemReservedIpRangeArgs) ToGetCellularGatewayLanItemReservedIpRangeOutputWithContext(ctx context.Context) GetCellularGatewayLanItemReservedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayLanItemReservedIpRangeOutput)
}

// GetCellularGatewayLanItemReservedIpRangeArrayInput is an input type that accepts GetCellularGatewayLanItemReservedIpRangeArray and GetCellularGatewayLanItemReservedIpRangeArrayOutput values.
// You can construct a concrete instance of `GetCellularGatewayLanItemReservedIpRangeArrayInput` via:
//
//	GetCellularGatewayLanItemReservedIpRangeArray{ GetCellularGatewayLanItemReservedIpRangeArgs{...} }
type GetCellularGatewayLanItemReservedIpRangeArrayInput interface {
	pulumi.Input

	ToGetCellularGatewayLanItemReservedIpRangeArrayOutput() GetCellularGatewayLanItemReservedIpRangeArrayOutput
	ToGetCellularGatewayLanItemReservedIpRangeArrayOutputWithContext(context.Context) GetCellularGatewayLanItemReservedIpRangeArrayOutput
}

type GetCellularGatewayLanItemReservedIpRangeArray []GetCellularGatewayLanItemReservedIpRangeInput

func (GetCellularGatewayLanItemReservedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayLanItemReservedIpRange)(nil)).Elem()
}

func (i GetCellularGatewayLanItemReservedIpRangeArray) ToGetCellularGatewayLanItemReservedIpRangeArrayOutput() GetCellularGatewayLanItemReservedIpRangeArrayOutput {
	return i.ToGetCellularGatewayLanItemReservedIpRangeArrayOutputWithContext(context.Background())
}

func (i GetCellularGatewayLanItemReservedIpRangeArray) ToGetCellularGatewayLanItemReservedIpRangeArrayOutputWithContext(ctx context.Context) GetCellularGatewayLanItemReservedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayLanItemReservedIpRangeArrayOutput)
}

type GetCellularGatewayLanItemReservedIpRangeOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayLanItemReservedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayLanItemReservedIpRange)(nil)).Elem()
}

func (o GetCellularGatewayLanItemReservedIpRangeOutput) ToGetCellularGatewayLanItemReservedIpRangeOutput() GetCellularGatewayLanItemReservedIpRangeOutput {
	return o
}

func (o GetCellularGatewayLanItemReservedIpRangeOutput) ToGetCellularGatewayLanItemReservedIpRangeOutputWithContext(ctx context.Context) GetCellularGatewayLanItemReservedIpRangeOutput {
	return o
}

// Comment explaining the reserved IP range
func (o GetCellularGatewayLanItemReservedIpRangeOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemReservedIpRange) string { return v.Comment }).(pulumi.StringOutput)
}

// Ending IP included in the reserved range of IPs
func (o GetCellularGatewayLanItemReservedIpRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemReservedIpRange) string { return v.End }).(pulumi.StringOutput)
}

// Starting IP included in the reserved range of IPs
func (o GetCellularGatewayLanItemReservedIpRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayLanItemReservedIpRange) string { return v.Start }).(pulumi.StringOutput)
}

type GetCellularGatewayLanItemReservedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayLanItemReservedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayLanItemReservedIpRange)(nil)).Elem()
}

func (o GetCellularGatewayLanItemReservedIpRangeArrayOutput) ToGetCellularGatewayLanItemReservedIpRangeArrayOutput() GetCellularGatewayLanItemReservedIpRangeArrayOutput {
	return o
}

func (o GetCellularGatewayLanItemReservedIpRangeArrayOutput) ToGetCellularGatewayLanItemReservedIpRangeArrayOutputWithContext(ctx context.Context) GetCellularGatewayLanItemReservedIpRangeArrayOutput {
	return o
}

func (o GetCellularGatewayLanItemReservedIpRangeArrayOutput) Index(i pulumi.IntInput) GetCellularGatewayLanItemReservedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularGatewayLanItemReservedIpRange {
		return vs[0].([]GetCellularGatewayLanItemReservedIpRange)[vs[1].(int)]
	}).(GetCellularGatewayLanItemReservedIpRangeOutput)
}

type GetCellularGatewayPortForwardingRulesItem struct {
	Rules []GetCellularGatewayPortForwardingRulesItemRule `pulumi:"rules"`
}

// GetCellularGatewayPortForwardingRulesItemInput is an input type that accepts GetCellularGatewayPortForwardingRulesItemArgs and GetCellularGatewayPortForwardingRulesItemOutput values.
// You can construct a concrete instance of `GetCellularGatewayPortForwardingRulesItemInput` via:
//
//	GetCellularGatewayPortForwardingRulesItemArgs{...}
type GetCellularGatewayPortForwardingRulesItemInput interface {
	pulumi.Input

	ToGetCellularGatewayPortForwardingRulesItemOutput() GetCellularGatewayPortForwardingRulesItemOutput
	ToGetCellularGatewayPortForwardingRulesItemOutputWithContext(context.Context) GetCellularGatewayPortForwardingRulesItemOutput
}

type GetCellularGatewayPortForwardingRulesItemArgs struct {
	Rules GetCellularGatewayPortForwardingRulesItemRuleArrayInput `pulumi:"rules"`
}

func (GetCellularGatewayPortForwardingRulesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItem)(nil)).Elem()
}

func (i GetCellularGatewayPortForwardingRulesItemArgs) ToGetCellularGatewayPortForwardingRulesItemOutput() GetCellularGatewayPortForwardingRulesItemOutput {
	return i.ToGetCellularGatewayPortForwardingRulesItemOutputWithContext(context.Background())
}

func (i GetCellularGatewayPortForwardingRulesItemArgs) ToGetCellularGatewayPortForwardingRulesItemOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayPortForwardingRulesItemOutput)
}

type GetCellularGatewayPortForwardingRulesItemOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayPortForwardingRulesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItem)(nil)).Elem()
}

func (o GetCellularGatewayPortForwardingRulesItemOutput) ToGetCellularGatewayPortForwardingRulesItemOutput() GetCellularGatewayPortForwardingRulesItemOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemOutput) ToGetCellularGatewayPortForwardingRulesItemOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemOutput) Rules() GetCellularGatewayPortForwardingRulesItemRuleArrayOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItem) []GetCellularGatewayPortForwardingRulesItemRule {
		return v.Rules
	}).(GetCellularGatewayPortForwardingRulesItemRuleArrayOutput)
}

type GetCellularGatewayPortForwardingRulesItemRule struct {
	Access     string `pulumi:"access"`
	LanIp      string `pulumi:"lanIp"`
	LocalPort  string `pulumi:"localPort"`
	Name       string `pulumi:"name"`
	Protocol   string `pulumi:"protocol"`
	PublicPort string `pulumi:"publicPort"`
	Uplink     string `pulumi:"uplink"`
}

// GetCellularGatewayPortForwardingRulesItemRuleInput is an input type that accepts GetCellularGatewayPortForwardingRulesItemRuleArgs and GetCellularGatewayPortForwardingRulesItemRuleOutput values.
// You can construct a concrete instance of `GetCellularGatewayPortForwardingRulesItemRuleInput` via:
//
//	GetCellularGatewayPortForwardingRulesItemRuleArgs{...}
type GetCellularGatewayPortForwardingRulesItemRuleInput interface {
	pulumi.Input

	ToGetCellularGatewayPortForwardingRulesItemRuleOutput() GetCellularGatewayPortForwardingRulesItemRuleOutput
	ToGetCellularGatewayPortForwardingRulesItemRuleOutputWithContext(context.Context) GetCellularGatewayPortForwardingRulesItemRuleOutput
}

type GetCellularGatewayPortForwardingRulesItemRuleArgs struct {
	Access     pulumi.StringInput `pulumi:"access"`
	LanIp      pulumi.StringInput `pulumi:"lanIp"`
	LocalPort  pulumi.StringInput `pulumi:"localPort"`
	Name       pulumi.StringInput `pulumi:"name"`
	Protocol   pulumi.StringInput `pulumi:"protocol"`
	PublicPort pulumi.StringInput `pulumi:"publicPort"`
	Uplink     pulumi.StringInput `pulumi:"uplink"`
}

func (GetCellularGatewayPortForwardingRulesItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItemRule)(nil)).Elem()
}

func (i GetCellularGatewayPortForwardingRulesItemRuleArgs) ToGetCellularGatewayPortForwardingRulesItemRuleOutput() GetCellularGatewayPortForwardingRulesItemRuleOutput {
	return i.ToGetCellularGatewayPortForwardingRulesItemRuleOutputWithContext(context.Background())
}

func (i GetCellularGatewayPortForwardingRulesItemRuleArgs) ToGetCellularGatewayPortForwardingRulesItemRuleOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayPortForwardingRulesItemRuleOutput)
}

// GetCellularGatewayPortForwardingRulesItemRuleArrayInput is an input type that accepts GetCellularGatewayPortForwardingRulesItemRuleArray and GetCellularGatewayPortForwardingRulesItemRuleArrayOutput values.
// You can construct a concrete instance of `GetCellularGatewayPortForwardingRulesItemRuleArrayInput` via:
//
//	GetCellularGatewayPortForwardingRulesItemRuleArray{ GetCellularGatewayPortForwardingRulesItemRuleArgs{...} }
type GetCellularGatewayPortForwardingRulesItemRuleArrayInput interface {
	pulumi.Input

	ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutput() GetCellularGatewayPortForwardingRulesItemRuleArrayOutput
	ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutputWithContext(context.Context) GetCellularGatewayPortForwardingRulesItemRuleArrayOutput
}

type GetCellularGatewayPortForwardingRulesItemRuleArray []GetCellularGatewayPortForwardingRulesItemRuleInput

func (GetCellularGatewayPortForwardingRulesItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayPortForwardingRulesItemRule)(nil)).Elem()
}

func (i GetCellularGatewayPortForwardingRulesItemRuleArray) ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutput() GetCellularGatewayPortForwardingRulesItemRuleArrayOutput {
	return i.ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutputWithContext(context.Background())
}

func (i GetCellularGatewayPortForwardingRulesItemRuleArray) ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularGatewayPortForwardingRulesItemRuleArrayOutput)
}

type GetCellularGatewayPortForwardingRulesItemRuleOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayPortForwardingRulesItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItemRule)(nil)).Elem()
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) ToGetCellularGatewayPortForwardingRulesItemRuleOutput() GetCellularGatewayPortForwardingRulesItemRuleOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) ToGetCellularGatewayPortForwardingRulesItemRuleOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemRuleOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.Access }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) LanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.LanIp }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) LocalPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.LocalPort }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) PublicPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.PublicPort }).(pulumi.StringOutput)
}

func (o GetCellularGatewayPortForwardingRulesItemRuleOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularGatewayPortForwardingRulesItemRule) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetCellularGatewayPortForwardingRulesItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCellularGatewayPortForwardingRulesItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularGatewayPortForwardingRulesItemRule)(nil)).Elem()
}

func (o GetCellularGatewayPortForwardingRulesItemRuleArrayOutput) ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutput() GetCellularGatewayPortForwardingRulesItemRuleArrayOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemRuleArrayOutput) ToGetCellularGatewayPortForwardingRulesItemRuleArrayOutputWithContext(ctx context.Context) GetCellularGatewayPortForwardingRulesItemRuleArrayOutput {
	return o
}

func (o GetCellularGatewayPortForwardingRulesItemRuleArrayOutput) Index(i pulumi.IntInput) GetCellularGatewayPortForwardingRulesItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularGatewayPortForwardingRulesItemRule {
		return vs[0].([]GetCellularGatewayPortForwardingRulesItemRule)[vs[1].(int)]
	}).(GetCellularGatewayPortForwardingRulesItemRuleOutput)
}

type GetCellularSimsItem struct {
	Sims []GetCellularSimsItemSim `pulumi:"sims"`
}

// GetCellularSimsItemInput is an input type that accepts GetCellularSimsItemArgs and GetCellularSimsItemOutput values.
// You can construct a concrete instance of `GetCellularSimsItemInput` via:
//
//	GetCellularSimsItemArgs{...}
type GetCellularSimsItemInput interface {
	pulumi.Input

	ToGetCellularSimsItemOutput() GetCellularSimsItemOutput
	ToGetCellularSimsItemOutputWithContext(context.Context) GetCellularSimsItemOutput
}

type GetCellularSimsItemArgs struct {
	Sims GetCellularSimsItemSimArrayInput `pulumi:"sims"`
}

func (GetCellularSimsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItem)(nil)).Elem()
}

func (i GetCellularSimsItemArgs) ToGetCellularSimsItemOutput() GetCellularSimsItemOutput {
	return i.ToGetCellularSimsItemOutputWithContext(context.Background())
}

func (i GetCellularSimsItemArgs) ToGetCellularSimsItemOutputWithContext(ctx context.Context) GetCellularSimsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemOutput)
}

type GetCellularSimsItemOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItem)(nil)).Elem()
}

func (o GetCellularSimsItemOutput) ToGetCellularSimsItemOutput() GetCellularSimsItemOutput {
	return o
}

func (o GetCellularSimsItemOutput) ToGetCellularSimsItemOutputWithContext(ctx context.Context) GetCellularSimsItemOutput {
	return o
}

func (o GetCellularSimsItemOutput) Sims() GetCellularSimsItemSimArrayOutput {
	return o.ApplyT(func(v GetCellularSimsItem) []GetCellularSimsItemSim { return v.Sims }).(GetCellularSimsItemSimArrayOutput)
}

type GetCellularSimsItemSim struct {
	Apns      []GetCellularSimsItemSimApn `pulumi:"apns"`
	IsPrimary bool                        `pulumi:"isPrimary"`
	Slot      string                      `pulumi:"slot"`
}

// GetCellularSimsItemSimInput is an input type that accepts GetCellularSimsItemSimArgs and GetCellularSimsItemSimOutput values.
// You can construct a concrete instance of `GetCellularSimsItemSimInput` via:
//
//	GetCellularSimsItemSimArgs{...}
type GetCellularSimsItemSimInput interface {
	pulumi.Input

	ToGetCellularSimsItemSimOutput() GetCellularSimsItemSimOutput
	ToGetCellularSimsItemSimOutputWithContext(context.Context) GetCellularSimsItemSimOutput
}

type GetCellularSimsItemSimArgs struct {
	Apns      GetCellularSimsItemSimApnArrayInput `pulumi:"apns"`
	IsPrimary pulumi.BoolInput                    `pulumi:"isPrimary"`
	Slot      pulumi.StringInput                  `pulumi:"slot"`
}

func (GetCellularSimsItemSimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSim)(nil)).Elem()
}

func (i GetCellularSimsItemSimArgs) ToGetCellularSimsItemSimOutput() GetCellularSimsItemSimOutput {
	return i.ToGetCellularSimsItemSimOutputWithContext(context.Background())
}

func (i GetCellularSimsItemSimArgs) ToGetCellularSimsItemSimOutputWithContext(ctx context.Context) GetCellularSimsItemSimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemSimOutput)
}

// GetCellularSimsItemSimArrayInput is an input type that accepts GetCellularSimsItemSimArray and GetCellularSimsItemSimArrayOutput values.
// You can construct a concrete instance of `GetCellularSimsItemSimArrayInput` via:
//
//	GetCellularSimsItemSimArray{ GetCellularSimsItemSimArgs{...} }
type GetCellularSimsItemSimArrayInput interface {
	pulumi.Input

	ToGetCellularSimsItemSimArrayOutput() GetCellularSimsItemSimArrayOutput
	ToGetCellularSimsItemSimArrayOutputWithContext(context.Context) GetCellularSimsItemSimArrayOutput
}

type GetCellularSimsItemSimArray []GetCellularSimsItemSimInput

func (GetCellularSimsItemSimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularSimsItemSim)(nil)).Elem()
}

func (i GetCellularSimsItemSimArray) ToGetCellularSimsItemSimArrayOutput() GetCellularSimsItemSimArrayOutput {
	return i.ToGetCellularSimsItemSimArrayOutputWithContext(context.Background())
}

func (i GetCellularSimsItemSimArray) ToGetCellularSimsItemSimArrayOutputWithContext(ctx context.Context) GetCellularSimsItemSimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemSimArrayOutput)
}

type GetCellularSimsItemSimOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemSimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSim)(nil)).Elem()
}

func (o GetCellularSimsItemSimOutput) ToGetCellularSimsItemSimOutput() GetCellularSimsItemSimOutput {
	return o
}

func (o GetCellularSimsItemSimOutput) ToGetCellularSimsItemSimOutputWithContext(ctx context.Context) GetCellularSimsItemSimOutput {
	return o
}

func (o GetCellularSimsItemSimOutput) Apns() GetCellularSimsItemSimApnArrayOutput {
	return o.ApplyT(func(v GetCellularSimsItemSim) []GetCellularSimsItemSimApn { return v.Apns }).(GetCellularSimsItemSimApnArrayOutput)
}

func (o GetCellularSimsItemSimOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCellularSimsItemSim) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

func (o GetCellularSimsItemSimOutput) Slot() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularSimsItemSim) string { return v.Slot }).(pulumi.StringOutput)
}

type GetCellularSimsItemSimArrayOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemSimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularSimsItemSim)(nil)).Elem()
}

func (o GetCellularSimsItemSimArrayOutput) ToGetCellularSimsItemSimArrayOutput() GetCellularSimsItemSimArrayOutput {
	return o
}

func (o GetCellularSimsItemSimArrayOutput) ToGetCellularSimsItemSimArrayOutputWithContext(ctx context.Context) GetCellularSimsItemSimArrayOutput {
	return o
}

func (o GetCellularSimsItemSimArrayOutput) Index(i pulumi.IntInput) GetCellularSimsItemSimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularSimsItemSim {
		return vs[0].([]GetCellularSimsItemSim)[vs[1].(int)]
	}).(GetCellularSimsItemSimOutput)
}

type GetCellularSimsItemSimApn struct {
	AllowedIpTypes []string                                `pulumi:"allowedIpTypes"`
	Authentication GetCellularSimsItemSimApnAuthentication `pulumi:"authentication"`
	Name           string                                  `pulumi:"name"`
}

// GetCellularSimsItemSimApnInput is an input type that accepts GetCellularSimsItemSimApnArgs and GetCellularSimsItemSimApnOutput values.
// You can construct a concrete instance of `GetCellularSimsItemSimApnInput` via:
//
//	GetCellularSimsItemSimApnArgs{...}
type GetCellularSimsItemSimApnInput interface {
	pulumi.Input

	ToGetCellularSimsItemSimApnOutput() GetCellularSimsItemSimApnOutput
	ToGetCellularSimsItemSimApnOutputWithContext(context.Context) GetCellularSimsItemSimApnOutput
}

type GetCellularSimsItemSimApnArgs struct {
	AllowedIpTypes pulumi.StringArrayInput                      `pulumi:"allowedIpTypes"`
	Authentication GetCellularSimsItemSimApnAuthenticationInput `pulumi:"authentication"`
	Name           pulumi.StringInput                           `pulumi:"name"`
}

func (GetCellularSimsItemSimApnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSimApn)(nil)).Elem()
}

func (i GetCellularSimsItemSimApnArgs) ToGetCellularSimsItemSimApnOutput() GetCellularSimsItemSimApnOutput {
	return i.ToGetCellularSimsItemSimApnOutputWithContext(context.Background())
}

func (i GetCellularSimsItemSimApnArgs) ToGetCellularSimsItemSimApnOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemSimApnOutput)
}

// GetCellularSimsItemSimApnArrayInput is an input type that accepts GetCellularSimsItemSimApnArray and GetCellularSimsItemSimApnArrayOutput values.
// You can construct a concrete instance of `GetCellularSimsItemSimApnArrayInput` via:
//
//	GetCellularSimsItemSimApnArray{ GetCellularSimsItemSimApnArgs{...} }
type GetCellularSimsItemSimApnArrayInput interface {
	pulumi.Input

	ToGetCellularSimsItemSimApnArrayOutput() GetCellularSimsItemSimApnArrayOutput
	ToGetCellularSimsItemSimApnArrayOutputWithContext(context.Context) GetCellularSimsItemSimApnArrayOutput
}

type GetCellularSimsItemSimApnArray []GetCellularSimsItemSimApnInput

func (GetCellularSimsItemSimApnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularSimsItemSimApn)(nil)).Elem()
}

func (i GetCellularSimsItemSimApnArray) ToGetCellularSimsItemSimApnArrayOutput() GetCellularSimsItemSimApnArrayOutput {
	return i.ToGetCellularSimsItemSimApnArrayOutputWithContext(context.Background())
}

func (i GetCellularSimsItemSimApnArray) ToGetCellularSimsItemSimApnArrayOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemSimApnArrayOutput)
}

type GetCellularSimsItemSimApnOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemSimApnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSimApn)(nil)).Elem()
}

func (o GetCellularSimsItemSimApnOutput) ToGetCellularSimsItemSimApnOutput() GetCellularSimsItemSimApnOutput {
	return o
}

func (o GetCellularSimsItemSimApnOutput) ToGetCellularSimsItemSimApnOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnOutput {
	return o
}

func (o GetCellularSimsItemSimApnOutput) AllowedIpTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCellularSimsItemSimApn) []string { return v.AllowedIpTypes }).(pulumi.StringArrayOutput)
}

func (o GetCellularSimsItemSimApnOutput) Authentication() GetCellularSimsItemSimApnAuthenticationOutput {
	return o.ApplyT(func(v GetCellularSimsItemSimApn) GetCellularSimsItemSimApnAuthentication { return v.Authentication }).(GetCellularSimsItemSimApnAuthenticationOutput)
}

func (o GetCellularSimsItemSimApnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularSimsItemSimApn) string { return v.Name }).(pulumi.StringOutput)
}

type GetCellularSimsItemSimApnArrayOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemSimApnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCellularSimsItemSimApn)(nil)).Elem()
}

func (o GetCellularSimsItemSimApnArrayOutput) ToGetCellularSimsItemSimApnArrayOutput() GetCellularSimsItemSimApnArrayOutput {
	return o
}

func (o GetCellularSimsItemSimApnArrayOutput) ToGetCellularSimsItemSimApnArrayOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnArrayOutput {
	return o
}

func (o GetCellularSimsItemSimApnArrayOutput) Index(i pulumi.IntInput) GetCellularSimsItemSimApnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCellularSimsItemSimApn {
		return vs[0].([]GetCellularSimsItemSimApn)[vs[1].(int)]
	}).(GetCellularSimsItemSimApnOutput)
}

type GetCellularSimsItemSimApnAuthentication struct {
	Type     string `pulumi:"type"`
	Username string `pulumi:"username"`
}

// GetCellularSimsItemSimApnAuthenticationInput is an input type that accepts GetCellularSimsItemSimApnAuthenticationArgs and GetCellularSimsItemSimApnAuthenticationOutput values.
// You can construct a concrete instance of `GetCellularSimsItemSimApnAuthenticationInput` via:
//
//	GetCellularSimsItemSimApnAuthenticationArgs{...}
type GetCellularSimsItemSimApnAuthenticationInput interface {
	pulumi.Input

	ToGetCellularSimsItemSimApnAuthenticationOutput() GetCellularSimsItemSimApnAuthenticationOutput
	ToGetCellularSimsItemSimApnAuthenticationOutputWithContext(context.Context) GetCellularSimsItemSimApnAuthenticationOutput
}

type GetCellularSimsItemSimApnAuthenticationArgs struct {
	Type     pulumi.StringInput `pulumi:"type"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetCellularSimsItemSimApnAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSimApnAuthentication)(nil)).Elem()
}

func (i GetCellularSimsItemSimApnAuthenticationArgs) ToGetCellularSimsItemSimApnAuthenticationOutput() GetCellularSimsItemSimApnAuthenticationOutput {
	return i.ToGetCellularSimsItemSimApnAuthenticationOutputWithContext(context.Background())
}

func (i GetCellularSimsItemSimApnAuthenticationArgs) ToGetCellularSimsItemSimApnAuthenticationOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCellularSimsItemSimApnAuthenticationOutput)
}

type GetCellularSimsItemSimApnAuthenticationOutput struct{ *pulumi.OutputState }

func (GetCellularSimsItemSimApnAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCellularSimsItemSimApnAuthentication)(nil)).Elem()
}

func (o GetCellularSimsItemSimApnAuthenticationOutput) ToGetCellularSimsItemSimApnAuthenticationOutput() GetCellularSimsItemSimApnAuthenticationOutput {
	return o
}

func (o GetCellularSimsItemSimApnAuthenticationOutput) ToGetCellularSimsItemSimApnAuthenticationOutputWithContext(ctx context.Context) GetCellularSimsItemSimApnAuthenticationOutput {
	return o
}

func (o GetCellularSimsItemSimApnAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularSimsItemSimApnAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCellularSimsItemSimApnAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetCellularSimsItemSimApnAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

type GetLiveToolsArpTableItem struct {
	// Id of the ARP table request. Used to check the status of the request.
	ArpTableId string `pulumi:"arpTableId"`
	// The ARP table entries
	Entries []GetLiveToolsArpTableItemEntry `pulumi:"entries"`
	// An error message for a failed execution
	Error string `pulumi:"error"`
	// ARP table request parameters
	Request GetLiveToolsArpTableItemRequest `pulumi:"request"`
	// Status of the ARP table request.
	Status string `pulumi:"status"`
	// GET this url to check the status of your ARP table request.
	Url string `pulumi:"url"`
}

// GetLiveToolsArpTableItemInput is an input type that accepts GetLiveToolsArpTableItemArgs and GetLiveToolsArpTableItemOutput values.
// You can construct a concrete instance of `GetLiveToolsArpTableItemInput` via:
//
//	GetLiveToolsArpTableItemArgs{...}
type GetLiveToolsArpTableItemInput interface {
	pulumi.Input

	ToGetLiveToolsArpTableItemOutput() GetLiveToolsArpTableItemOutput
	ToGetLiveToolsArpTableItemOutputWithContext(context.Context) GetLiveToolsArpTableItemOutput
}

type GetLiveToolsArpTableItemArgs struct {
	// Id of the ARP table request. Used to check the status of the request.
	ArpTableId pulumi.StringInput `pulumi:"arpTableId"`
	// The ARP table entries
	Entries GetLiveToolsArpTableItemEntryArrayInput `pulumi:"entries"`
	// An error message for a failed execution
	Error pulumi.StringInput `pulumi:"error"`
	// ARP table request parameters
	Request GetLiveToolsArpTableItemRequestInput `pulumi:"request"`
	// Status of the ARP table request.
	Status pulumi.StringInput `pulumi:"status"`
	// GET this url to check the status of your ARP table request.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsArpTableItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItem)(nil)).Elem()
}

func (i GetLiveToolsArpTableItemArgs) ToGetLiveToolsArpTableItemOutput() GetLiveToolsArpTableItemOutput {
	return i.ToGetLiveToolsArpTableItemOutputWithContext(context.Background())
}

func (i GetLiveToolsArpTableItemArgs) ToGetLiveToolsArpTableItemOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsArpTableItemOutput)
}

type GetLiveToolsArpTableItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsArpTableItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItem)(nil)).Elem()
}

func (o GetLiveToolsArpTableItemOutput) ToGetLiveToolsArpTableItemOutput() GetLiveToolsArpTableItemOutput {
	return o
}

func (o GetLiveToolsArpTableItemOutput) ToGetLiveToolsArpTableItemOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemOutput {
	return o
}

// Id of the ARP table request. Used to check the status of the request.
func (o GetLiveToolsArpTableItemOutput) ArpTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) string { return v.ArpTableId }).(pulumi.StringOutput)
}

// The ARP table entries
func (o GetLiveToolsArpTableItemOutput) Entries() GetLiveToolsArpTableItemEntryArrayOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) []GetLiveToolsArpTableItemEntry { return v.Entries }).(GetLiveToolsArpTableItemEntryArrayOutput)
}

// An error message for a failed execution
func (o GetLiveToolsArpTableItemOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) string { return v.Error }).(pulumi.StringOutput)
}

// ARP table request parameters
func (o GetLiveToolsArpTableItemOutput) Request() GetLiveToolsArpTableItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) GetLiveToolsArpTableItemRequest { return v.Request }).(GetLiveToolsArpTableItemRequestOutput)
}

// Status of the ARP table request.
func (o GetLiveToolsArpTableItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) string { return v.Status }).(pulumi.StringOutput)
}

// GET this url to check the status of your ARP table request.
func (o GetLiveToolsArpTableItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsArpTableItemEntry struct {
	// The IP address of the ARP table entry
	Ip string `pulumi:"ip"`
	// Time of the last update of the ARP table entry
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The MAC address of the ARP table entry
	Mac string `pulumi:"mac"`
	// The VLAN ID of the ARP table entry
	VlanId int `pulumi:"vlanId"`
}

// GetLiveToolsArpTableItemEntryInput is an input type that accepts GetLiveToolsArpTableItemEntryArgs and GetLiveToolsArpTableItemEntryOutput values.
// You can construct a concrete instance of `GetLiveToolsArpTableItemEntryInput` via:
//
//	GetLiveToolsArpTableItemEntryArgs{...}
type GetLiveToolsArpTableItemEntryInput interface {
	pulumi.Input

	ToGetLiveToolsArpTableItemEntryOutput() GetLiveToolsArpTableItemEntryOutput
	ToGetLiveToolsArpTableItemEntryOutputWithContext(context.Context) GetLiveToolsArpTableItemEntryOutput
}

type GetLiveToolsArpTableItemEntryArgs struct {
	// The IP address of the ARP table entry
	Ip pulumi.StringInput `pulumi:"ip"`
	// Time of the last update of the ARP table entry
	LastUpdatedAt pulumi.StringInput `pulumi:"lastUpdatedAt"`
	// The MAC address of the ARP table entry
	Mac pulumi.StringInput `pulumi:"mac"`
	// The VLAN ID of the ARP table entry
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetLiveToolsArpTableItemEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItemEntry)(nil)).Elem()
}

func (i GetLiveToolsArpTableItemEntryArgs) ToGetLiveToolsArpTableItemEntryOutput() GetLiveToolsArpTableItemEntryOutput {
	return i.ToGetLiveToolsArpTableItemEntryOutputWithContext(context.Background())
}

func (i GetLiveToolsArpTableItemEntryArgs) ToGetLiveToolsArpTableItemEntryOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsArpTableItemEntryOutput)
}

// GetLiveToolsArpTableItemEntryArrayInput is an input type that accepts GetLiveToolsArpTableItemEntryArray and GetLiveToolsArpTableItemEntryArrayOutput values.
// You can construct a concrete instance of `GetLiveToolsArpTableItemEntryArrayInput` via:
//
//	GetLiveToolsArpTableItemEntryArray{ GetLiveToolsArpTableItemEntryArgs{...} }
type GetLiveToolsArpTableItemEntryArrayInput interface {
	pulumi.Input

	ToGetLiveToolsArpTableItemEntryArrayOutput() GetLiveToolsArpTableItemEntryArrayOutput
	ToGetLiveToolsArpTableItemEntryArrayOutputWithContext(context.Context) GetLiveToolsArpTableItemEntryArrayOutput
}

type GetLiveToolsArpTableItemEntryArray []GetLiveToolsArpTableItemEntryInput

func (GetLiveToolsArpTableItemEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsArpTableItemEntry)(nil)).Elem()
}

func (i GetLiveToolsArpTableItemEntryArray) ToGetLiveToolsArpTableItemEntryArrayOutput() GetLiveToolsArpTableItemEntryArrayOutput {
	return i.ToGetLiveToolsArpTableItemEntryArrayOutputWithContext(context.Background())
}

func (i GetLiveToolsArpTableItemEntryArray) ToGetLiveToolsArpTableItemEntryArrayOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsArpTableItemEntryArrayOutput)
}

type GetLiveToolsArpTableItemEntryOutput struct{ *pulumi.OutputState }

func (GetLiveToolsArpTableItemEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItemEntry)(nil)).Elem()
}

func (o GetLiveToolsArpTableItemEntryOutput) ToGetLiveToolsArpTableItemEntryOutput() GetLiveToolsArpTableItemEntryOutput {
	return o
}

func (o GetLiveToolsArpTableItemEntryOutput) ToGetLiveToolsArpTableItemEntryOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemEntryOutput {
	return o
}

// The IP address of the ARP table entry
func (o GetLiveToolsArpTableItemEntryOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItemEntry) string { return v.Ip }).(pulumi.StringOutput)
}

// Time of the last update of the ARP table entry
func (o GetLiveToolsArpTableItemEntryOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItemEntry) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The MAC address of the ARP table entry
func (o GetLiveToolsArpTableItemEntryOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItemEntry) string { return v.Mac }).(pulumi.StringOutput)
}

// The VLAN ID of the ARP table entry
func (o GetLiveToolsArpTableItemEntryOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItemEntry) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetLiveToolsArpTableItemEntryArrayOutput struct{ *pulumi.OutputState }

func (GetLiveToolsArpTableItemEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsArpTableItemEntry)(nil)).Elem()
}

func (o GetLiveToolsArpTableItemEntryArrayOutput) ToGetLiveToolsArpTableItemEntryArrayOutput() GetLiveToolsArpTableItemEntryArrayOutput {
	return o
}

func (o GetLiveToolsArpTableItemEntryArrayOutput) ToGetLiveToolsArpTableItemEntryArrayOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemEntryArrayOutput {
	return o
}

func (o GetLiveToolsArpTableItemEntryArrayOutput) Index(i pulumi.IntInput) GetLiveToolsArpTableItemEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLiveToolsArpTableItemEntry {
		return vs[0].([]GetLiveToolsArpTableItemEntry)[vs[1].(int)]
	}).(GetLiveToolsArpTableItemEntryOutput)
}

type GetLiveToolsArpTableItemRequest struct {
	// Device serial number
	Serial string `pulumi:"serial"`
}

// GetLiveToolsArpTableItemRequestInput is an input type that accepts GetLiveToolsArpTableItemRequestArgs and GetLiveToolsArpTableItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsArpTableItemRequestInput` via:
//
//	GetLiveToolsArpTableItemRequestArgs{...}
type GetLiveToolsArpTableItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsArpTableItemRequestOutput() GetLiveToolsArpTableItemRequestOutput
	ToGetLiveToolsArpTableItemRequestOutputWithContext(context.Context) GetLiveToolsArpTableItemRequestOutput
}

type GetLiveToolsArpTableItemRequestArgs struct {
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetLiveToolsArpTableItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItemRequest)(nil)).Elem()
}

func (i GetLiveToolsArpTableItemRequestArgs) ToGetLiveToolsArpTableItemRequestOutput() GetLiveToolsArpTableItemRequestOutput {
	return i.ToGetLiveToolsArpTableItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsArpTableItemRequestArgs) ToGetLiveToolsArpTableItemRequestOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsArpTableItemRequestOutput)
}

type GetLiveToolsArpTableItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsArpTableItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsArpTableItemRequest)(nil)).Elem()
}

func (o GetLiveToolsArpTableItemRequestOutput) ToGetLiveToolsArpTableItemRequestOutput() GetLiveToolsArpTableItemRequestOutput {
	return o
}

func (o GetLiveToolsArpTableItemRequestOutput) ToGetLiveToolsArpTableItemRequestOutputWithContext(ctx context.Context) GetLiveToolsArpTableItemRequestOutput {
	return o
}

// Device serial number
func (o GetLiveToolsArpTableItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsArpTableItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

type GetLiveToolsCableTestItem struct {
	// Id of the cable test request. Used to check the status of the request.
	CableTestId string `pulumi:"cableTestId"`
	// An error message for a failed execution
	Error string `pulumi:"error"`
	// Cable test request parameters
	Request GetLiveToolsCableTestItemRequest `pulumi:"request"`
	// Results of the cable test request, one for each requested port.
	Results []GetLiveToolsCableTestItemResult `pulumi:"results"`
	// Status of the cable test request.
	Status string `pulumi:"status"`
	// GET this url to check the status of your cable test request.
	Url string `pulumi:"url"`
}

// GetLiveToolsCableTestItemInput is an input type that accepts GetLiveToolsCableTestItemArgs and GetLiveToolsCableTestItemOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemInput` via:
//
//	GetLiveToolsCableTestItemArgs{...}
type GetLiveToolsCableTestItemInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemOutput() GetLiveToolsCableTestItemOutput
	ToGetLiveToolsCableTestItemOutputWithContext(context.Context) GetLiveToolsCableTestItemOutput
}

type GetLiveToolsCableTestItemArgs struct {
	// Id of the cable test request. Used to check the status of the request.
	CableTestId pulumi.StringInput `pulumi:"cableTestId"`
	// An error message for a failed execution
	Error pulumi.StringInput `pulumi:"error"`
	// Cable test request parameters
	Request GetLiveToolsCableTestItemRequestInput `pulumi:"request"`
	// Results of the cable test request, one for each requested port.
	Results GetLiveToolsCableTestItemResultArrayInput `pulumi:"results"`
	// Status of the cable test request.
	Status pulumi.StringInput `pulumi:"status"`
	// GET this url to check the status of your cable test request.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsCableTestItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItem)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemArgs) ToGetLiveToolsCableTestItemOutput() GetLiveToolsCableTestItemOutput {
	return i.ToGetLiveToolsCableTestItemOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemArgs) ToGetLiveToolsCableTestItemOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemOutput)
}

type GetLiveToolsCableTestItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItem)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemOutput) ToGetLiveToolsCableTestItemOutput() GetLiveToolsCableTestItemOutput {
	return o
}

func (o GetLiveToolsCableTestItemOutput) ToGetLiveToolsCableTestItemOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemOutput {
	return o
}

// Id of the cable test request. Used to check the status of the request.
func (o GetLiveToolsCableTestItemOutput) CableTestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) string { return v.CableTestId }).(pulumi.StringOutput)
}

// An error message for a failed execution
func (o GetLiveToolsCableTestItemOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) string { return v.Error }).(pulumi.StringOutput)
}

// Cable test request parameters
func (o GetLiveToolsCableTestItemOutput) Request() GetLiveToolsCableTestItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) GetLiveToolsCableTestItemRequest { return v.Request }).(GetLiveToolsCableTestItemRequestOutput)
}

// Results of the cable test request, one for each requested port.
func (o GetLiveToolsCableTestItemOutput) Results() GetLiveToolsCableTestItemResultArrayOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) []GetLiveToolsCableTestItemResult { return v.Results }).(GetLiveToolsCableTestItemResultArrayOutput)
}

// Status of the cable test request.
func (o GetLiveToolsCableTestItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) string { return v.Status }).(pulumi.StringOutput)
}

// GET this url to check the status of your cable test request.
func (o GetLiveToolsCableTestItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsCableTestItemRequest struct {
	// A list of ports for which to perform the cable test.
	Ports []string `pulumi:"ports"`
	// Device serial number
	Serial string `pulumi:"serial"`
}

// GetLiveToolsCableTestItemRequestInput is an input type that accepts GetLiveToolsCableTestItemRequestArgs and GetLiveToolsCableTestItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemRequestInput` via:
//
//	GetLiveToolsCableTestItemRequestArgs{...}
type GetLiveToolsCableTestItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemRequestOutput() GetLiveToolsCableTestItemRequestOutput
	ToGetLiveToolsCableTestItemRequestOutputWithContext(context.Context) GetLiveToolsCableTestItemRequestOutput
}

type GetLiveToolsCableTestItemRequestArgs struct {
	// A list of ports for which to perform the cable test.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetLiveToolsCableTestItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemRequest)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemRequestArgs) ToGetLiveToolsCableTestItemRequestOutput() GetLiveToolsCableTestItemRequestOutput {
	return i.ToGetLiveToolsCableTestItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemRequestArgs) ToGetLiveToolsCableTestItemRequestOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemRequestOutput)
}

type GetLiveToolsCableTestItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemRequest)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemRequestOutput) ToGetLiveToolsCableTestItemRequestOutput() GetLiveToolsCableTestItemRequestOutput {
	return o
}

func (o GetLiveToolsCableTestItemRequestOutput) ToGetLiveToolsCableTestItemRequestOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemRequestOutput {
	return o
}

// A list of ports for which to perform the cable test.
func (o GetLiveToolsCableTestItemRequestOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemRequest) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

// Device serial number
func (o GetLiveToolsCableTestItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

type GetLiveToolsCableTestItemResult struct {
	// If an error occurred during the cable test, the error message will be populated here.
	Error string `pulumi:"error"`
	// Results for each twisted pair within the cable.
	Pairs []GetLiveToolsCableTestItemResultPair `pulumi:"pairs"`
	// The port for which the test was performed.
	Port string `pulumi:"port"`
	// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
	SpeedMbps int `pulumi:"speedMbps"`
	// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
	Status string `pulumi:"status"`
}

// GetLiveToolsCableTestItemResultInput is an input type that accepts GetLiveToolsCableTestItemResultArgs and GetLiveToolsCableTestItemResultOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemResultInput` via:
//
//	GetLiveToolsCableTestItemResultArgs{...}
type GetLiveToolsCableTestItemResultInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemResultOutput() GetLiveToolsCableTestItemResultOutput
	ToGetLiveToolsCableTestItemResultOutputWithContext(context.Context) GetLiveToolsCableTestItemResultOutput
}

type GetLiveToolsCableTestItemResultArgs struct {
	// If an error occurred during the cable test, the error message will be populated here.
	Error pulumi.StringInput `pulumi:"error"`
	// Results for each twisted pair within the cable.
	Pairs GetLiveToolsCableTestItemResultPairArrayInput `pulumi:"pairs"`
	// The port for which the test was performed.
	Port pulumi.StringInput `pulumi:"port"`
	// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
	SpeedMbps pulumi.IntInput `pulumi:"speedMbps"`
	// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLiveToolsCableTestItemResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemResult)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemResultArgs) ToGetLiveToolsCableTestItemResultOutput() GetLiveToolsCableTestItemResultOutput {
	return i.ToGetLiveToolsCableTestItemResultOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemResultArgs) ToGetLiveToolsCableTestItemResultOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemResultOutput)
}

// GetLiveToolsCableTestItemResultArrayInput is an input type that accepts GetLiveToolsCableTestItemResultArray and GetLiveToolsCableTestItemResultArrayOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemResultArrayInput` via:
//
//	GetLiveToolsCableTestItemResultArray{ GetLiveToolsCableTestItemResultArgs{...} }
type GetLiveToolsCableTestItemResultArrayInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemResultArrayOutput() GetLiveToolsCableTestItemResultArrayOutput
	ToGetLiveToolsCableTestItemResultArrayOutputWithContext(context.Context) GetLiveToolsCableTestItemResultArrayOutput
}

type GetLiveToolsCableTestItemResultArray []GetLiveToolsCableTestItemResultInput

func (GetLiveToolsCableTestItemResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsCableTestItemResult)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemResultArray) ToGetLiveToolsCableTestItemResultArrayOutput() GetLiveToolsCableTestItemResultArrayOutput {
	return i.ToGetLiveToolsCableTestItemResultArrayOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemResultArray) ToGetLiveToolsCableTestItemResultArrayOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemResultArrayOutput)
}

type GetLiveToolsCableTestItemResultOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemResult)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemResultOutput) ToGetLiveToolsCableTestItemResultOutput() GetLiveToolsCableTestItemResultOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultOutput) ToGetLiveToolsCableTestItemResultOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultOutput {
	return o
}

// If an error occurred during the cable test, the error message will be populated here.
func (o GetLiveToolsCableTestItemResultOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResult) string { return v.Error }).(pulumi.StringOutput)
}

// Results for each twisted pair within the cable.
func (o GetLiveToolsCableTestItemResultOutput) Pairs() GetLiveToolsCableTestItemResultPairArrayOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResult) []GetLiveToolsCableTestItemResultPair { return v.Pairs }).(GetLiveToolsCableTestItemResultPairArrayOutput)
}

// The port for which the test was performed.
func (o GetLiveToolsCableTestItemResultOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResult) string { return v.Port }).(pulumi.StringOutput)
}

// Speed in Mbps.  A speed of 0 indicates the port is down or the port speed is automatic.
func (o GetLiveToolsCableTestItemResultOutput) SpeedMbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResult) int { return v.SpeedMbps }).(pulumi.IntOutput)
}

// The current status of the port. If the cable test is still being performed on the port, "in-progress" is used. If an error occurred during the cable test, "error" is used and the error property will be populated.
func (o GetLiveToolsCableTestItemResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetLiveToolsCableTestItemResultArrayOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsCableTestItemResult)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemResultArrayOutput) ToGetLiveToolsCableTestItemResultArrayOutput() GetLiveToolsCableTestItemResultArrayOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultArrayOutput) ToGetLiveToolsCableTestItemResultArrayOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultArrayOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultArrayOutput) Index(i pulumi.IntInput) GetLiveToolsCableTestItemResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLiveToolsCableTestItemResult {
		return vs[0].([]GetLiveToolsCableTestItemResult)[vs[1].(int)]
	}).(GetLiveToolsCableTestItemResultOutput)
}

type GetLiveToolsCableTestItemResultPair struct {
	// The index of the twisted pair tested.
	Index int `pulumi:"index"`
	// The detected length of the twisted pair.
	LengthMeters int `pulumi:"lengthMeters"`
	// The test result of the twisted pair tested.
	Status string `pulumi:"status"`
}

// GetLiveToolsCableTestItemResultPairInput is an input type that accepts GetLiveToolsCableTestItemResultPairArgs and GetLiveToolsCableTestItemResultPairOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemResultPairInput` via:
//
//	GetLiveToolsCableTestItemResultPairArgs{...}
type GetLiveToolsCableTestItemResultPairInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemResultPairOutput() GetLiveToolsCableTestItemResultPairOutput
	ToGetLiveToolsCableTestItemResultPairOutputWithContext(context.Context) GetLiveToolsCableTestItemResultPairOutput
}

type GetLiveToolsCableTestItemResultPairArgs struct {
	// The index of the twisted pair tested.
	Index pulumi.IntInput `pulumi:"index"`
	// The detected length of the twisted pair.
	LengthMeters pulumi.IntInput `pulumi:"lengthMeters"`
	// The test result of the twisted pair tested.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLiveToolsCableTestItemResultPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemResultPair)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemResultPairArgs) ToGetLiveToolsCableTestItemResultPairOutput() GetLiveToolsCableTestItemResultPairOutput {
	return i.ToGetLiveToolsCableTestItemResultPairOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemResultPairArgs) ToGetLiveToolsCableTestItemResultPairOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemResultPairOutput)
}

// GetLiveToolsCableTestItemResultPairArrayInput is an input type that accepts GetLiveToolsCableTestItemResultPairArray and GetLiveToolsCableTestItemResultPairArrayOutput values.
// You can construct a concrete instance of `GetLiveToolsCableTestItemResultPairArrayInput` via:
//
//	GetLiveToolsCableTestItemResultPairArray{ GetLiveToolsCableTestItemResultPairArgs{...} }
type GetLiveToolsCableTestItemResultPairArrayInput interface {
	pulumi.Input

	ToGetLiveToolsCableTestItemResultPairArrayOutput() GetLiveToolsCableTestItemResultPairArrayOutput
	ToGetLiveToolsCableTestItemResultPairArrayOutputWithContext(context.Context) GetLiveToolsCableTestItemResultPairArrayOutput
}

type GetLiveToolsCableTestItemResultPairArray []GetLiveToolsCableTestItemResultPairInput

func (GetLiveToolsCableTestItemResultPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsCableTestItemResultPair)(nil)).Elem()
}

func (i GetLiveToolsCableTestItemResultPairArray) ToGetLiveToolsCableTestItemResultPairArrayOutput() GetLiveToolsCableTestItemResultPairArrayOutput {
	return i.ToGetLiveToolsCableTestItemResultPairArrayOutputWithContext(context.Background())
}

func (i GetLiveToolsCableTestItemResultPairArray) ToGetLiveToolsCableTestItemResultPairArrayOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsCableTestItemResultPairArrayOutput)
}

type GetLiveToolsCableTestItemResultPairOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemResultPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestItemResultPair)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemResultPairOutput) ToGetLiveToolsCableTestItemResultPairOutput() GetLiveToolsCableTestItemResultPairOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultPairOutput) ToGetLiveToolsCableTestItemResultPairOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultPairOutput {
	return o
}

// The index of the twisted pair tested.
func (o GetLiveToolsCableTestItemResultPairOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResultPair) int { return v.Index }).(pulumi.IntOutput)
}

// The detected length of the twisted pair.
func (o GetLiveToolsCableTestItemResultPairOutput) LengthMeters() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResultPair) int { return v.LengthMeters }).(pulumi.IntOutput)
}

// The test result of the twisted pair tested.
func (o GetLiveToolsCableTestItemResultPairOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestItemResultPair) string { return v.Status }).(pulumi.StringOutput)
}

type GetLiveToolsCableTestItemResultPairArrayOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestItemResultPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsCableTestItemResultPair)(nil)).Elem()
}

func (o GetLiveToolsCableTestItemResultPairArrayOutput) ToGetLiveToolsCableTestItemResultPairArrayOutput() GetLiveToolsCableTestItemResultPairArrayOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultPairArrayOutput) ToGetLiveToolsCableTestItemResultPairArrayOutputWithContext(ctx context.Context) GetLiveToolsCableTestItemResultPairArrayOutput {
	return o
}

func (o GetLiveToolsCableTestItemResultPairArrayOutput) Index(i pulumi.IntInput) GetLiveToolsCableTestItemResultPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLiveToolsCableTestItemResultPair {
		return vs[0].([]GetLiveToolsCableTestItemResultPair)[vs[1].(int)]
	}).(GetLiveToolsCableTestItemResultPairOutput)
}

type GetLiveToolsPingDeviceItem struct {
	// Information for callback used to send back results
	Callback GetLiveToolsPingDeviceItemCallback `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId string `pulumi:"pingId"`
	// Ping request parameters
	Request GetLiveToolsPingDeviceItemRequest `pulumi:"request"`
	// Results of the ping request.
	Results GetLiveToolsPingDeviceItemResults `pulumi:"results"`
	// Status of the ping request.
	Status string `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url string `pulumi:"url"`
}

// GetLiveToolsPingDeviceItemInput is an input type that accepts GetLiveToolsPingDeviceItemArgs and GetLiveToolsPingDeviceItemOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemInput` via:
//
//	GetLiveToolsPingDeviceItemArgs{...}
type GetLiveToolsPingDeviceItemInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemOutput() GetLiveToolsPingDeviceItemOutput
	ToGetLiveToolsPingDeviceItemOutputWithContext(context.Context) GetLiveToolsPingDeviceItemOutput
}

type GetLiveToolsPingDeviceItemArgs struct {
	// Information for callback used to send back results
	Callback GetLiveToolsPingDeviceItemCallbackInput `pulumi:"callback"`
	// Id to check the status of your ping request.
	PingId pulumi.StringInput `pulumi:"pingId"`
	// Ping request parameters
	Request GetLiveToolsPingDeviceItemRequestInput `pulumi:"request"`
	// Results of the ping request.
	Results GetLiveToolsPingDeviceItemResultsInput `pulumi:"results"`
	// Status of the ping request.
	Status pulumi.StringInput `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsPingDeviceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItem)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemArgs) ToGetLiveToolsPingDeviceItemOutput() GetLiveToolsPingDeviceItemOutput {
	return i.ToGetLiveToolsPingDeviceItemOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemArgs) ToGetLiveToolsPingDeviceItemOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemOutput)
}

type GetLiveToolsPingDeviceItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItem)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemOutput) ToGetLiveToolsPingDeviceItemOutput() GetLiveToolsPingDeviceItemOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemOutput) ToGetLiveToolsPingDeviceItemOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemOutput {
	return o
}

// Information for callback used to send back results
func (o GetLiveToolsPingDeviceItemOutput) Callback() GetLiveToolsPingDeviceItemCallbackOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) GetLiveToolsPingDeviceItemCallback { return v.Callback }).(GetLiveToolsPingDeviceItemCallbackOutput)
}

// Id to check the status of your ping request.
func (o GetLiveToolsPingDeviceItemOutput) PingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) string { return v.PingId }).(pulumi.StringOutput)
}

// Ping request parameters
func (o GetLiveToolsPingDeviceItemOutput) Request() GetLiveToolsPingDeviceItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) GetLiveToolsPingDeviceItemRequest { return v.Request }).(GetLiveToolsPingDeviceItemRequestOutput)
}

// Results of the ping request.
func (o GetLiveToolsPingDeviceItemOutput) Results() GetLiveToolsPingDeviceItemResultsOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) GetLiveToolsPingDeviceItemResults { return v.Results }).(GetLiveToolsPingDeviceItemResultsOutput)
}

// Status of the ping request.
func (o GetLiveToolsPingDeviceItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) string { return v.Status }).(pulumi.StringOutput)
}

// GET this url to check the status of your ping request.
func (o GetLiveToolsPingDeviceItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsPingDeviceItemCallback struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id string `pulumi:"id"`
	// The status of the callback
	Status string `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url string `pulumi:"url"`
}

// GetLiveToolsPingDeviceItemCallbackInput is an input type that accepts GetLiveToolsPingDeviceItemCallbackArgs and GetLiveToolsPingDeviceItemCallbackOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemCallbackInput` via:
//
//	GetLiveToolsPingDeviceItemCallbackArgs{...}
type GetLiveToolsPingDeviceItemCallbackInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemCallbackOutput() GetLiveToolsPingDeviceItemCallbackOutput
	ToGetLiveToolsPingDeviceItemCallbackOutputWithContext(context.Context) GetLiveToolsPingDeviceItemCallbackOutput
}

type GetLiveToolsPingDeviceItemCallbackArgs struct {
	// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the callback
	Status pulumi.StringInput `pulumi:"status"`
	// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsPingDeviceItemCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemCallbackArgs) ToGetLiveToolsPingDeviceItemCallbackOutput() GetLiveToolsPingDeviceItemCallbackOutput {
	return i.ToGetLiveToolsPingDeviceItemCallbackOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemCallbackArgs) ToGetLiveToolsPingDeviceItemCallbackOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemCallbackOutput)
}

type GetLiveToolsPingDeviceItemCallbackOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemCallback)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemCallbackOutput) ToGetLiveToolsPingDeviceItemCallbackOutput() GetLiveToolsPingDeviceItemCallbackOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemCallbackOutput) ToGetLiveToolsPingDeviceItemCallbackOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemCallbackOutput {
	return o
}

// The ID of the callback. To check the status of the callback, use this ID in a request to /webhooks/callbacks/statuses/{id}
func (o GetLiveToolsPingDeviceItemCallbackOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemCallback) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the callback
func (o GetLiveToolsPingDeviceItemCallbackOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemCallback) string { return v.Status }).(pulumi.StringOutput)
}

// The callback URL for the webhook target. This was either provided in the original request or comes from a configured webhook receiver
func (o GetLiveToolsPingDeviceItemCallbackOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemCallback) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsPingDeviceItemRequest struct {
	// Number of pings to send
	CountR int `pulumi:"countR"`
	// Device serial number
	Serial string `pulumi:"serial"`
	// IP address or FQDN to ping
	Target string `pulumi:"target"`
}

// GetLiveToolsPingDeviceItemRequestInput is an input type that accepts GetLiveToolsPingDeviceItemRequestArgs and GetLiveToolsPingDeviceItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemRequestInput` via:
//
//	GetLiveToolsPingDeviceItemRequestArgs{...}
type GetLiveToolsPingDeviceItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemRequestOutput() GetLiveToolsPingDeviceItemRequestOutput
	ToGetLiveToolsPingDeviceItemRequestOutputWithContext(context.Context) GetLiveToolsPingDeviceItemRequestOutput
}

type GetLiveToolsPingDeviceItemRequestArgs struct {
	// Number of pings to send
	CountR pulumi.IntInput `pulumi:"countR"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
	// IP address or FQDN to ping
	Target pulumi.StringInput `pulumi:"target"`
}

func (GetLiveToolsPingDeviceItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemRequestArgs) ToGetLiveToolsPingDeviceItemRequestOutput() GetLiveToolsPingDeviceItemRequestOutput {
	return i.ToGetLiveToolsPingDeviceItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemRequestArgs) ToGetLiveToolsPingDeviceItemRequestOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemRequestOutput)
}

type GetLiveToolsPingDeviceItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemRequest)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemRequestOutput) ToGetLiveToolsPingDeviceItemRequestOutput() GetLiveToolsPingDeviceItemRequestOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemRequestOutput) ToGetLiveToolsPingDeviceItemRequestOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemRequestOutput {
	return o
}

// Number of pings to send
func (o GetLiveToolsPingDeviceItemRequestOutput) CountR() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemRequest) int { return v.CountR }).(pulumi.IntOutput)
}

// Device serial number
func (o GetLiveToolsPingDeviceItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

// IP address or FQDN to ping
func (o GetLiveToolsPingDeviceItemRequestOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemRequest) string { return v.Target }).(pulumi.StringOutput)
}

type GetLiveToolsPingDeviceItemResults struct {
	// Packet latency stats
	Latencies GetLiveToolsPingDeviceItemResultsLatencies `pulumi:"latencies"`
	// Lost packets
	Loss GetLiveToolsPingDeviceItemResultsLoss `pulumi:"loss"`
	// Number of packets received
	Received int `pulumi:"received"`
	// Received packets
	Replies []GetLiveToolsPingDeviceItemResultsReply `pulumi:"replies"`
	// Number of packets sent
	Sent int `pulumi:"sent"`
}

// GetLiveToolsPingDeviceItemResultsInput is an input type that accepts GetLiveToolsPingDeviceItemResultsArgs and GetLiveToolsPingDeviceItemResultsOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemResultsInput` via:
//
//	GetLiveToolsPingDeviceItemResultsArgs{...}
type GetLiveToolsPingDeviceItemResultsInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemResultsOutput() GetLiveToolsPingDeviceItemResultsOutput
	ToGetLiveToolsPingDeviceItemResultsOutputWithContext(context.Context) GetLiveToolsPingDeviceItemResultsOutput
}

type GetLiveToolsPingDeviceItemResultsArgs struct {
	// Packet latency stats
	Latencies GetLiveToolsPingDeviceItemResultsLatenciesInput `pulumi:"latencies"`
	// Lost packets
	Loss GetLiveToolsPingDeviceItemResultsLossInput `pulumi:"loss"`
	// Number of packets received
	Received pulumi.IntInput `pulumi:"received"`
	// Received packets
	Replies GetLiveToolsPingDeviceItemResultsReplyArrayInput `pulumi:"replies"`
	// Number of packets sent
	Sent pulumi.IntInput `pulumi:"sent"`
}

func (GetLiveToolsPingDeviceItemResultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResults)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemResultsArgs) ToGetLiveToolsPingDeviceItemResultsOutput() GetLiveToolsPingDeviceItemResultsOutput {
	return i.ToGetLiveToolsPingDeviceItemResultsOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemResultsArgs) ToGetLiveToolsPingDeviceItemResultsOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemResultsOutput)
}

type GetLiveToolsPingDeviceItemResultsOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResults)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemResultsOutput) ToGetLiveToolsPingDeviceItemResultsOutput() GetLiveToolsPingDeviceItemResultsOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsOutput) ToGetLiveToolsPingDeviceItemResultsOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsOutput {
	return o
}

// Packet latency stats
func (o GetLiveToolsPingDeviceItemResultsOutput) Latencies() GetLiveToolsPingDeviceItemResultsLatenciesOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResults) GetLiveToolsPingDeviceItemResultsLatencies {
		return v.Latencies
	}).(GetLiveToolsPingDeviceItemResultsLatenciesOutput)
}

// Lost packets
func (o GetLiveToolsPingDeviceItemResultsOutput) Loss() GetLiveToolsPingDeviceItemResultsLossOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResults) GetLiveToolsPingDeviceItemResultsLoss { return v.Loss }).(GetLiveToolsPingDeviceItemResultsLossOutput)
}

// Number of packets received
func (o GetLiveToolsPingDeviceItemResultsOutput) Received() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResults) int { return v.Received }).(pulumi.IntOutput)
}

// Received packets
func (o GetLiveToolsPingDeviceItemResultsOutput) Replies() GetLiveToolsPingDeviceItemResultsReplyArrayOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResults) []GetLiveToolsPingDeviceItemResultsReply { return v.Replies }).(GetLiveToolsPingDeviceItemResultsReplyArrayOutput)
}

// Number of packets sent
func (o GetLiveToolsPingDeviceItemResultsOutput) Sent() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResults) int { return v.Sent }).(pulumi.IntOutput)
}

type GetLiveToolsPingDeviceItemResultsLatencies struct {
	// Average latency
	Average float64 `pulumi:"average"`
	// Maximum latency
	Maximum float64 `pulumi:"maximum"`
	// Minimum latency
	Minimum float64 `pulumi:"minimum"`
}

// GetLiveToolsPingDeviceItemResultsLatenciesInput is an input type that accepts GetLiveToolsPingDeviceItemResultsLatenciesArgs and GetLiveToolsPingDeviceItemResultsLatenciesOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemResultsLatenciesInput` via:
//
//	GetLiveToolsPingDeviceItemResultsLatenciesArgs{...}
type GetLiveToolsPingDeviceItemResultsLatenciesInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemResultsLatenciesOutput() GetLiveToolsPingDeviceItemResultsLatenciesOutput
	ToGetLiveToolsPingDeviceItemResultsLatenciesOutputWithContext(context.Context) GetLiveToolsPingDeviceItemResultsLatenciesOutput
}

type GetLiveToolsPingDeviceItemResultsLatenciesArgs struct {
	// Average latency
	Average pulumi.Float64Input `pulumi:"average"`
	// Maximum latency
	Maximum pulumi.Float64Input `pulumi:"maximum"`
	// Minimum latency
	Minimum pulumi.Float64Input `pulumi:"minimum"`
}

func (GetLiveToolsPingDeviceItemResultsLatenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLatencies)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemResultsLatenciesArgs) ToGetLiveToolsPingDeviceItemResultsLatenciesOutput() GetLiveToolsPingDeviceItemResultsLatenciesOutput {
	return i.ToGetLiveToolsPingDeviceItemResultsLatenciesOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemResultsLatenciesArgs) ToGetLiveToolsPingDeviceItemResultsLatenciesOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsLatenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemResultsLatenciesOutput)
}

type GetLiveToolsPingDeviceItemResultsLatenciesOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemResultsLatenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLatencies)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemResultsLatenciesOutput) ToGetLiveToolsPingDeviceItemResultsLatenciesOutput() GetLiveToolsPingDeviceItemResultsLatenciesOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsLatenciesOutput) ToGetLiveToolsPingDeviceItemResultsLatenciesOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsLatenciesOutput {
	return o
}

// Average latency
func (o GetLiveToolsPingDeviceItemResultsLatenciesOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsLatencies) float64 { return v.Average }).(pulumi.Float64Output)
}

// Maximum latency
func (o GetLiveToolsPingDeviceItemResultsLatenciesOutput) Maximum() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsLatencies) float64 { return v.Maximum }).(pulumi.Float64Output)
}

// Minimum latency
func (o GetLiveToolsPingDeviceItemResultsLatenciesOutput) Minimum() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsLatencies) float64 { return v.Minimum }).(pulumi.Float64Output)
}

type GetLiveToolsPingDeviceItemResultsLoss struct {
	// Percentage of packets lost
	Percentage float64 `pulumi:"percentage"`
}

// GetLiveToolsPingDeviceItemResultsLossInput is an input type that accepts GetLiveToolsPingDeviceItemResultsLossArgs and GetLiveToolsPingDeviceItemResultsLossOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemResultsLossInput` via:
//
//	GetLiveToolsPingDeviceItemResultsLossArgs{...}
type GetLiveToolsPingDeviceItemResultsLossInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemResultsLossOutput() GetLiveToolsPingDeviceItemResultsLossOutput
	ToGetLiveToolsPingDeviceItemResultsLossOutputWithContext(context.Context) GetLiveToolsPingDeviceItemResultsLossOutput
}

type GetLiveToolsPingDeviceItemResultsLossArgs struct {
	// Percentage of packets lost
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetLiveToolsPingDeviceItemResultsLossArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLoss)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemResultsLossArgs) ToGetLiveToolsPingDeviceItemResultsLossOutput() GetLiveToolsPingDeviceItemResultsLossOutput {
	return i.ToGetLiveToolsPingDeviceItemResultsLossOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemResultsLossArgs) ToGetLiveToolsPingDeviceItemResultsLossOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsLossOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemResultsLossOutput)
}

type GetLiveToolsPingDeviceItemResultsLossOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemResultsLossOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLoss)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemResultsLossOutput) ToGetLiveToolsPingDeviceItemResultsLossOutput() GetLiveToolsPingDeviceItemResultsLossOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsLossOutput) ToGetLiveToolsPingDeviceItemResultsLossOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsLossOutput {
	return o
}

// Percentage of packets lost
func (o GetLiveToolsPingDeviceItemResultsLossOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsLoss) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetLiveToolsPingDeviceItemResultsReply struct {
	// Latency of the packet in milliseconds
	Latency float64 `pulumi:"latency"`
	// Sequence ID of the packet
	SequenceId int `pulumi:"sequenceId"`
	// Size of the packet in bytes
	Size int `pulumi:"size"`
}

// GetLiveToolsPingDeviceItemResultsReplyInput is an input type that accepts GetLiveToolsPingDeviceItemResultsReplyArgs and GetLiveToolsPingDeviceItemResultsReplyOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemResultsReplyInput` via:
//
//	GetLiveToolsPingDeviceItemResultsReplyArgs{...}
type GetLiveToolsPingDeviceItemResultsReplyInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemResultsReplyOutput() GetLiveToolsPingDeviceItemResultsReplyOutput
	ToGetLiveToolsPingDeviceItemResultsReplyOutputWithContext(context.Context) GetLiveToolsPingDeviceItemResultsReplyOutput
}

type GetLiveToolsPingDeviceItemResultsReplyArgs struct {
	// Latency of the packet in milliseconds
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Sequence ID of the packet
	SequenceId pulumi.IntInput `pulumi:"sequenceId"`
	// Size of the packet in bytes
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetLiveToolsPingDeviceItemResultsReplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsReply)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemResultsReplyArgs) ToGetLiveToolsPingDeviceItemResultsReplyOutput() GetLiveToolsPingDeviceItemResultsReplyOutput {
	return i.ToGetLiveToolsPingDeviceItemResultsReplyOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemResultsReplyArgs) ToGetLiveToolsPingDeviceItemResultsReplyOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsReplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemResultsReplyOutput)
}

// GetLiveToolsPingDeviceItemResultsReplyArrayInput is an input type that accepts GetLiveToolsPingDeviceItemResultsReplyArray and GetLiveToolsPingDeviceItemResultsReplyArrayOutput values.
// You can construct a concrete instance of `GetLiveToolsPingDeviceItemResultsReplyArrayInput` via:
//
//	GetLiveToolsPingDeviceItemResultsReplyArray{ GetLiveToolsPingDeviceItemResultsReplyArgs{...} }
type GetLiveToolsPingDeviceItemResultsReplyArrayInput interface {
	pulumi.Input

	ToGetLiveToolsPingDeviceItemResultsReplyArrayOutput() GetLiveToolsPingDeviceItemResultsReplyArrayOutput
	ToGetLiveToolsPingDeviceItemResultsReplyArrayOutputWithContext(context.Context) GetLiveToolsPingDeviceItemResultsReplyArrayOutput
}

type GetLiveToolsPingDeviceItemResultsReplyArray []GetLiveToolsPingDeviceItemResultsReplyInput

func (GetLiveToolsPingDeviceItemResultsReplyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsPingDeviceItemResultsReply)(nil)).Elem()
}

func (i GetLiveToolsPingDeviceItemResultsReplyArray) ToGetLiveToolsPingDeviceItemResultsReplyArrayOutput() GetLiveToolsPingDeviceItemResultsReplyArrayOutput {
	return i.ToGetLiveToolsPingDeviceItemResultsReplyArrayOutputWithContext(context.Background())
}

func (i GetLiveToolsPingDeviceItemResultsReplyArray) ToGetLiveToolsPingDeviceItemResultsReplyArrayOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsReplyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingDeviceItemResultsReplyArrayOutput)
}

type GetLiveToolsPingDeviceItemResultsReplyOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemResultsReplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsReply)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemResultsReplyOutput) ToGetLiveToolsPingDeviceItemResultsReplyOutput() GetLiveToolsPingDeviceItemResultsReplyOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsReplyOutput) ToGetLiveToolsPingDeviceItemResultsReplyOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsReplyOutput {
	return o
}

// Latency of the packet in milliseconds
func (o GetLiveToolsPingDeviceItemResultsReplyOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsReply) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Sequence ID of the packet
func (o GetLiveToolsPingDeviceItemResultsReplyOutput) SequenceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsReply) int { return v.SequenceId }).(pulumi.IntOutput)
}

// Size of the packet in bytes
func (o GetLiveToolsPingDeviceItemResultsReplyOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingDeviceItemResultsReply) int { return v.Size }).(pulumi.IntOutput)
}

type GetLiveToolsPingDeviceItemResultsReplyArrayOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingDeviceItemResultsReplyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsPingDeviceItemResultsReply)(nil)).Elem()
}

func (o GetLiveToolsPingDeviceItemResultsReplyArrayOutput) ToGetLiveToolsPingDeviceItemResultsReplyArrayOutput() GetLiveToolsPingDeviceItemResultsReplyArrayOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsReplyArrayOutput) ToGetLiveToolsPingDeviceItemResultsReplyArrayOutputWithContext(ctx context.Context) GetLiveToolsPingDeviceItemResultsReplyArrayOutput {
	return o
}

func (o GetLiveToolsPingDeviceItemResultsReplyArrayOutput) Index(i pulumi.IntInput) GetLiveToolsPingDeviceItemResultsReplyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLiveToolsPingDeviceItemResultsReply {
		return vs[0].([]GetLiveToolsPingDeviceItemResultsReply)[vs[1].(int)]
	}).(GetLiveToolsPingDeviceItemResultsReplyOutput)
}

type GetLiveToolsPingItem struct {
	// Id to check the status of your ping request.
	PingId string `pulumi:"pingId"`
	// Ping request parameters
	Request GetLiveToolsPingItemRequest `pulumi:"request"`
	// Results of the ping request.
	Results GetLiveToolsPingItemResults `pulumi:"results"`
	// Status of the ping request.
	Status string `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url string `pulumi:"url"`
}

// GetLiveToolsPingItemInput is an input type that accepts GetLiveToolsPingItemArgs and GetLiveToolsPingItemOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemInput` via:
//
//	GetLiveToolsPingItemArgs{...}
type GetLiveToolsPingItemInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemOutput() GetLiveToolsPingItemOutput
	ToGetLiveToolsPingItemOutputWithContext(context.Context) GetLiveToolsPingItemOutput
}

type GetLiveToolsPingItemArgs struct {
	// Id to check the status of your ping request.
	PingId pulumi.StringInput `pulumi:"pingId"`
	// Ping request parameters
	Request GetLiveToolsPingItemRequestInput `pulumi:"request"`
	// Results of the ping request.
	Results GetLiveToolsPingItemResultsInput `pulumi:"results"`
	// Status of the ping request.
	Status pulumi.StringInput `pulumi:"status"`
	// GET this url to check the status of your ping request.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsPingItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItem)(nil)).Elem()
}

func (i GetLiveToolsPingItemArgs) ToGetLiveToolsPingItemOutput() GetLiveToolsPingItemOutput {
	return i.ToGetLiveToolsPingItemOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemArgs) ToGetLiveToolsPingItemOutputWithContext(ctx context.Context) GetLiveToolsPingItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemOutput)
}

type GetLiveToolsPingItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItem)(nil)).Elem()
}

func (o GetLiveToolsPingItemOutput) ToGetLiveToolsPingItemOutput() GetLiveToolsPingItemOutput {
	return o
}

func (o GetLiveToolsPingItemOutput) ToGetLiveToolsPingItemOutputWithContext(ctx context.Context) GetLiveToolsPingItemOutput {
	return o
}

// Id to check the status of your ping request.
func (o GetLiveToolsPingItemOutput) PingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingItem) string { return v.PingId }).(pulumi.StringOutput)
}

// Ping request parameters
func (o GetLiveToolsPingItemOutput) Request() GetLiveToolsPingItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsPingItem) GetLiveToolsPingItemRequest { return v.Request }).(GetLiveToolsPingItemRequestOutput)
}

// Results of the ping request.
func (o GetLiveToolsPingItemOutput) Results() GetLiveToolsPingItemResultsOutput {
	return o.ApplyT(func(v GetLiveToolsPingItem) GetLiveToolsPingItemResults { return v.Results }).(GetLiveToolsPingItemResultsOutput)
}

// Status of the ping request.
func (o GetLiveToolsPingItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingItem) string { return v.Status }).(pulumi.StringOutput)
}

// GET this url to check the status of your ping request.
func (o GetLiveToolsPingItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsPingItemRequest struct {
	// Number of pings to send
	CountR int `pulumi:"countR"`
	// Device serial number
	Serial string `pulumi:"serial"`
	// IP address or FQDN to ping
	Target string `pulumi:"target"`
}

// GetLiveToolsPingItemRequestInput is an input type that accepts GetLiveToolsPingItemRequestArgs and GetLiveToolsPingItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemRequestInput` via:
//
//	GetLiveToolsPingItemRequestArgs{...}
type GetLiveToolsPingItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemRequestOutput() GetLiveToolsPingItemRequestOutput
	ToGetLiveToolsPingItemRequestOutputWithContext(context.Context) GetLiveToolsPingItemRequestOutput
}

type GetLiveToolsPingItemRequestArgs struct {
	// Number of pings to send
	CountR pulumi.IntInput `pulumi:"countR"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
	// IP address or FQDN to ping
	Target pulumi.StringInput `pulumi:"target"`
}

func (GetLiveToolsPingItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemRequest)(nil)).Elem()
}

func (i GetLiveToolsPingItemRequestArgs) ToGetLiveToolsPingItemRequestOutput() GetLiveToolsPingItemRequestOutput {
	return i.ToGetLiveToolsPingItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemRequestArgs) ToGetLiveToolsPingItemRequestOutputWithContext(ctx context.Context) GetLiveToolsPingItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemRequestOutput)
}

type GetLiveToolsPingItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemRequest)(nil)).Elem()
}

func (o GetLiveToolsPingItemRequestOutput) ToGetLiveToolsPingItemRequestOutput() GetLiveToolsPingItemRequestOutput {
	return o
}

func (o GetLiveToolsPingItemRequestOutput) ToGetLiveToolsPingItemRequestOutputWithContext(ctx context.Context) GetLiveToolsPingItemRequestOutput {
	return o
}

// Number of pings to send
func (o GetLiveToolsPingItemRequestOutput) CountR() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemRequest) int { return v.CountR }).(pulumi.IntOutput)
}

// Device serial number
func (o GetLiveToolsPingItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

// IP address or FQDN to ping
func (o GetLiveToolsPingItemRequestOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemRequest) string { return v.Target }).(pulumi.StringOutput)
}

type GetLiveToolsPingItemResults struct {
	// Packet latency stats
	Latencies GetLiveToolsPingItemResultsLatencies `pulumi:"latencies"`
	// Lost packets
	Loss GetLiveToolsPingItemResultsLoss `pulumi:"loss"`
	// Number of packets received
	Received int `pulumi:"received"`
	// Received packets
	Replies []GetLiveToolsPingItemResultsReply `pulumi:"replies"`
	// Number of packets sent
	Sent int `pulumi:"sent"`
}

// GetLiveToolsPingItemResultsInput is an input type that accepts GetLiveToolsPingItemResultsArgs and GetLiveToolsPingItemResultsOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemResultsInput` via:
//
//	GetLiveToolsPingItemResultsArgs{...}
type GetLiveToolsPingItemResultsInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemResultsOutput() GetLiveToolsPingItemResultsOutput
	ToGetLiveToolsPingItemResultsOutputWithContext(context.Context) GetLiveToolsPingItemResultsOutput
}

type GetLiveToolsPingItemResultsArgs struct {
	// Packet latency stats
	Latencies GetLiveToolsPingItemResultsLatenciesInput `pulumi:"latencies"`
	// Lost packets
	Loss GetLiveToolsPingItemResultsLossInput `pulumi:"loss"`
	// Number of packets received
	Received pulumi.IntInput `pulumi:"received"`
	// Received packets
	Replies GetLiveToolsPingItemResultsReplyArrayInput `pulumi:"replies"`
	// Number of packets sent
	Sent pulumi.IntInput `pulumi:"sent"`
}

func (GetLiveToolsPingItemResultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResults)(nil)).Elem()
}

func (i GetLiveToolsPingItemResultsArgs) ToGetLiveToolsPingItemResultsOutput() GetLiveToolsPingItemResultsOutput {
	return i.ToGetLiveToolsPingItemResultsOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemResultsArgs) ToGetLiveToolsPingItemResultsOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemResultsOutput)
}

type GetLiveToolsPingItemResultsOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResults)(nil)).Elem()
}

func (o GetLiveToolsPingItemResultsOutput) ToGetLiveToolsPingItemResultsOutput() GetLiveToolsPingItemResultsOutput {
	return o
}

func (o GetLiveToolsPingItemResultsOutput) ToGetLiveToolsPingItemResultsOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsOutput {
	return o
}

// Packet latency stats
func (o GetLiveToolsPingItemResultsOutput) Latencies() GetLiveToolsPingItemResultsLatenciesOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResults) GetLiveToolsPingItemResultsLatencies { return v.Latencies }).(GetLiveToolsPingItemResultsLatenciesOutput)
}

// Lost packets
func (o GetLiveToolsPingItemResultsOutput) Loss() GetLiveToolsPingItemResultsLossOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResults) GetLiveToolsPingItemResultsLoss { return v.Loss }).(GetLiveToolsPingItemResultsLossOutput)
}

// Number of packets received
func (o GetLiveToolsPingItemResultsOutput) Received() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResults) int { return v.Received }).(pulumi.IntOutput)
}

// Received packets
func (o GetLiveToolsPingItemResultsOutput) Replies() GetLiveToolsPingItemResultsReplyArrayOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResults) []GetLiveToolsPingItemResultsReply { return v.Replies }).(GetLiveToolsPingItemResultsReplyArrayOutput)
}

// Number of packets sent
func (o GetLiveToolsPingItemResultsOutput) Sent() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResults) int { return v.Sent }).(pulumi.IntOutput)
}

type GetLiveToolsPingItemResultsLatencies struct {
	// Average latency
	Average float64 `pulumi:"average"`
	// Maximum latency
	Maximum float64 `pulumi:"maximum"`
	// Minimum latency
	Minimum float64 `pulumi:"minimum"`
}

// GetLiveToolsPingItemResultsLatenciesInput is an input type that accepts GetLiveToolsPingItemResultsLatenciesArgs and GetLiveToolsPingItemResultsLatenciesOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemResultsLatenciesInput` via:
//
//	GetLiveToolsPingItemResultsLatenciesArgs{...}
type GetLiveToolsPingItemResultsLatenciesInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemResultsLatenciesOutput() GetLiveToolsPingItemResultsLatenciesOutput
	ToGetLiveToolsPingItemResultsLatenciesOutputWithContext(context.Context) GetLiveToolsPingItemResultsLatenciesOutput
}

type GetLiveToolsPingItemResultsLatenciesArgs struct {
	// Average latency
	Average pulumi.Float64Input `pulumi:"average"`
	// Maximum latency
	Maximum pulumi.Float64Input `pulumi:"maximum"`
	// Minimum latency
	Minimum pulumi.Float64Input `pulumi:"minimum"`
}

func (GetLiveToolsPingItemResultsLatenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsLatencies)(nil)).Elem()
}

func (i GetLiveToolsPingItemResultsLatenciesArgs) ToGetLiveToolsPingItemResultsLatenciesOutput() GetLiveToolsPingItemResultsLatenciesOutput {
	return i.ToGetLiveToolsPingItemResultsLatenciesOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemResultsLatenciesArgs) ToGetLiveToolsPingItemResultsLatenciesOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsLatenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemResultsLatenciesOutput)
}

type GetLiveToolsPingItemResultsLatenciesOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemResultsLatenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsLatencies)(nil)).Elem()
}

func (o GetLiveToolsPingItemResultsLatenciesOutput) ToGetLiveToolsPingItemResultsLatenciesOutput() GetLiveToolsPingItemResultsLatenciesOutput {
	return o
}

func (o GetLiveToolsPingItemResultsLatenciesOutput) ToGetLiveToolsPingItemResultsLatenciesOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsLatenciesOutput {
	return o
}

// Average latency
func (o GetLiveToolsPingItemResultsLatenciesOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsLatencies) float64 { return v.Average }).(pulumi.Float64Output)
}

// Maximum latency
func (o GetLiveToolsPingItemResultsLatenciesOutput) Maximum() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsLatencies) float64 { return v.Maximum }).(pulumi.Float64Output)
}

// Minimum latency
func (o GetLiveToolsPingItemResultsLatenciesOutput) Minimum() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsLatencies) float64 { return v.Minimum }).(pulumi.Float64Output)
}

type GetLiveToolsPingItemResultsLoss struct {
	// Percentage of packets lost
	Percentage float64 `pulumi:"percentage"`
}

// GetLiveToolsPingItemResultsLossInput is an input type that accepts GetLiveToolsPingItemResultsLossArgs and GetLiveToolsPingItemResultsLossOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemResultsLossInput` via:
//
//	GetLiveToolsPingItemResultsLossArgs{...}
type GetLiveToolsPingItemResultsLossInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemResultsLossOutput() GetLiveToolsPingItemResultsLossOutput
	ToGetLiveToolsPingItemResultsLossOutputWithContext(context.Context) GetLiveToolsPingItemResultsLossOutput
}

type GetLiveToolsPingItemResultsLossArgs struct {
	// Percentage of packets lost
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (GetLiveToolsPingItemResultsLossArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsLoss)(nil)).Elem()
}

func (i GetLiveToolsPingItemResultsLossArgs) ToGetLiveToolsPingItemResultsLossOutput() GetLiveToolsPingItemResultsLossOutput {
	return i.ToGetLiveToolsPingItemResultsLossOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemResultsLossArgs) ToGetLiveToolsPingItemResultsLossOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsLossOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemResultsLossOutput)
}

type GetLiveToolsPingItemResultsLossOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemResultsLossOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsLoss)(nil)).Elem()
}

func (o GetLiveToolsPingItemResultsLossOutput) ToGetLiveToolsPingItemResultsLossOutput() GetLiveToolsPingItemResultsLossOutput {
	return o
}

func (o GetLiveToolsPingItemResultsLossOutput) ToGetLiveToolsPingItemResultsLossOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsLossOutput {
	return o
}

// Percentage of packets lost
func (o GetLiveToolsPingItemResultsLossOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsLoss) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type GetLiveToolsPingItemResultsReply struct {
	// Latency of the packet in milliseconds
	Latency float64 `pulumi:"latency"`
	// Sequence ID of the packet
	SequenceId int `pulumi:"sequenceId"`
	// Size of the packet in bytes
	Size int `pulumi:"size"`
}

// GetLiveToolsPingItemResultsReplyInput is an input type that accepts GetLiveToolsPingItemResultsReplyArgs and GetLiveToolsPingItemResultsReplyOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemResultsReplyInput` via:
//
//	GetLiveToolsPingItemResultsReplyArgs{...}
type GetLiveToolsPingItemResultsReplyInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemResultsReplyOutput() GetLiveToolsPingItemResultsReplyOutput
	ToGetLiveToolsPingItemResultsReplyOutputWithContext(context.Context) GetLiveToolsPingItemResultsReplyOutput
}

type GetLiveToolsPingItemResultsReplyArgs struct {
	// Latency of the packet in milliseconds
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Sequence ID of the packet
	SequenceId pulumi.IntInput `pulumi:"sequenceId"`
	// Size of the packet in bytes
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetLiveToolsPingItemResultsReplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsReply)(nil)).Elem()
}

func (i GetLiveToolsPingItemResultsReplyArgs) ToGetLiveToolsPingItemResultsReplyOutput() GetLiveToolsPingItemResultsReplyOutput {
	return i.ToGetLiveToolsPingItemResultsReplyOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemResultsReplyArgs) ToGetLiveToolsPingItemResultsReplyOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsReplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemResultsReplyOutput)
}

// GetLiveToolsPingItemResultsReplyArrayInput is an input type that accepts GetLiveToolsPingItemResultsReplyArray and GetLiveToolsPingItemResultsReplyArrayOutput values.
// You can construct a concrete instance of `GetLiveToolsPingItemResultsReplyArrayInput` via:
//
//	GetLiveToolsPingItemResultsReplyArray{ GetLiveToolsPingItemResultsReplyArgs{...} }
type GetLiveToolsPingItemResultsReplyArrayInput interface {
	pulumi.Input

	ToGetLiveToolsPingItemResultsReplyArrayOutput() GetLiveToolsPingItemResultsReplyArrayOutput
	ToGetLiveToolsPingItemResultsReplyArrayOutputWithContext(context.Context) GetLiveToolsPingItemResultsReplyArrayOutput
}

type GetLiveToolsPingItemResultsReplyArray []GetLiveToolsPingItemResultsReplyInput

func (GetLiveToolsPingItemResultsReplyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsPingItemResultsReply)(nil)).Elem()
}

func (i GetLiveToolsPingItemResultsReplyArray) ToGetLiveToolsPingItemResultsReplyArrayOutput() GetLiveToolsPingItemResultsReplyArrayOutput {
	return i.ToGetLiveToolsPingItemResultsReplyArrayOutputWithContext(context.Background())
}

func (i GetLiveToolsPingItemResultsReplyArray) ToGetLiveToolsPingItemResultsReplyArrayOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsReplyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsPingItemResultsReplyArrayOutput)
}

type GetLiveToolsPingItemResultsReplyOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemResultsReplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsPingItemResultsReply)(nil)).Elem()
}

func (o GetLiveToolsPingItemResultsReplyOutput) ToGetLiveToolsPingItemResultsReplyOutput() GetLiveToolsPingItemResultsReplyOutput {
	return o
}

func (o GetLiveToolsPingItemResultsReplyOutput) ToGetLiveToolsPingItemResultsReplyOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsReplyOutput {
	return o
}

// Latency of the packet in milliseconds
func (o GetLiveToolsPingItemResultsReplyOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsReply) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Sequence ID of the packet
func (o GetLiveToolsPingItemResultsReplyOutput) SequenceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsReply) int { return v.SequenceId }).(pulumi.IntOutput)
}

// Size of the packet in bytes
func (o GetLiveToolsPingItemResultsReplyOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsPingItemResultsReply) int { return v.Size }).(pulumi.IntOutput)
}

type GetLiveToolsPingItemResultsReplyArrayOutput struct{ *pulumi.OutputState }

func (GetLiveToolsPingItemResultsReplyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLiveToolsPingItemResultsReply)(nil)).Elem()
}

func (o GetLiveToolsPingItemResultsReplyArrayOutput) ToGetLiveToolsPingItemResultsReplyArrayOutput() GetLiveToolsPingItemResultsReplyArrayOutput {
	return o
}

func (o GetLiveToolsPingItemResultsReplyArrayOutput) ToGetLiveToolsPingItemResultsReplyArrayOutputWithContext(ctx context.Context) GetLiveToolsPingItemResultsReplyArrayOutput {
	return o
}

func (o GetLiveToolsPingItemResultsReplyArrayOutput) Index(i pulumi.IntInput) GetLiveToolsPingItemResultsReplyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLiveToolsPingItemResultsReply {
		return vs[0].([]GetLiveToolsPingItemResultsReply)[vs[1].(int)]
	}).(GetLiveToolsPingItemResultsReplyOutput)
}

type GetLiveToolsThroughputTestItem struct {
	// Description of the error.
	Error string `pulumi:"error"`
	// The parameters of the throughput test request
	Request GetLiveToolsThroughputTestItemRequest `pulumi:"request"`
	// Result of the throughput test request
	Result GetLiveToolsThroughputTestItemResult `pulumi:"result"`
	// Status of the throughput test request
	Status string `pulumi:"status"`
	// ID of throughput test job
	ThroughputTestId string `pulumi:"throughputTestId"`
	// GET this url to check the status of your throughput test request
	Url string `pulumi:"url"`
}

// GetLiveToolsThroughputTestItemInput is an input type that accepts GetLiveToolsThroughputTestItemArgs and GetLiveToolsThroughputTestItemOutput values.
// You can construct a concrete instance of `GetLiveToolsThroughputTestItemInput` via:
//
//	GetLiveToolsThroughputTestItemArgs{...}
type GetLiveToolsThroughputTestItemInput interface {
	pulumi.Input

	ToGetLiveToolsThroughputTestItemOutput() GetLiveToolsThroughputTestItemOutput
	ToGetLiveToolsThroughputTestItemOutputWithContext(context.Context) GetLiveToolsThroughputTestItemOutput
}

type GetLiveToolsThroughputTestItemArgs struct {
	// Description of the error.
	Error pulumi.StringInput `pulumi:"error"`
	// The parameters of the throughput test request
	Request GetLiveToolsThroughputTestItemRequestInput `pulumi:"request"`
	// Result of the throughput test request
	Result GetLiveToolsThroughputTestItemResultInput `pulumi:"result"`
	// Status of the throughput test request
	Status pulumi.StringInput `pulumi:"status"`
	// ID of throughput test job
	ThroughputTestId pulumi.StringInput `pulumi:"throughputTestId"`
	// GET this url to check the status of your throughput test request
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetLiveToolsThroughputTestItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItem)(nil)).Elem()
}

func (i GetLiveToolsThroughputTestItemArgs) ToGetLiveToolsThroughputTestItemOutput() GetLiveToolsThroughputTestItemOutput {
	return i.ToGetLiveToolsThroughputTestItemOutputWithContext(context.Background())
}

func (i GetLiveToolsThroughputTestItemArgs) ToGetLiveToolsThroughputTestItemOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsThroughputTestItemOutput)
}

type GetLiveToolsThroughputTestItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsThroughputTestItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItem)(nil)).Elem()
}

func (o GetLiveToolsThroughputTestItemOutput) ToGetLiveToolsThroughputTestItemOutput() GetLiveToolsThroughputTestItemOutput {
	return o
}

func (o GetLiveToolsThroughputTestItemOutput) ToGetLiveToolsThroughputTestItemOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemOutput {
	return o
}

// Description of the error.
func (o GetLiveToolsThroughputTestItemOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) string { return v.Error }).(pulumi.StringOutput)
}

// The parameters of the throughput test request
func (o GetLiveToolsThroughputTestItemOutput) Request() GetLiveToolsThroughputTestItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) GetLiveToolsThroughputTestItemRequest { return v.Request }).(GetLiveToolsThroughputTestItemRequestOutput)
}

// Result of the throughput test request
func (o GetLiveToolsThroughputTestItemOutput) Result() GetLiveToolsThroughputTestItemResultOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) GetLiveToolsThroughputTestItemResult { return v.Result }).(GetLiveToolsThroughputTestItemResultOutput)
}

// Status of the throughput test request
func (o GetLiveToolsThroughputTestItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) string { return v.Status }).(pulumi.StringOutput)
}

// ID of throughput test job
func (o GetLiveToolsThroughputTestItemOutput) ThroughputTestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) string { return v.ThroughputTestId }).(pulumi.StringOutput)
}

// GET this url to check the status of your throughput test request
func (o GetLiveToolsThroughputTestItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItem) string { return v.Url }).(pulumi.StringOutput)
}

type GetLiveToolsThroughputTestItemRequest struct {
	// Device serial number
	Serial string `pulumi:"serial"`
}

// GetLiveToolsThroughputTestItemRequestInput is an input type that accepts GetLiveToolsThroughputTestItemRequestArgs and GetLiveToolsThroughputTestItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsThroughputTestItemRequestInput` via:
//
//	GetLiveToolsThroughputTestItemRequestArgs{...}
type GetLiveToolsThroughputTestItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsThroughputTestItemRequestOutput() GetLiveToolsThroughputTestItemRequestOutput
	ToGetLiveToolsThroughputTestItemRequestOutputWithContext(context.Context) GetLiveToolsThroughputTestItemRequestOutput
}

type GetLiveToolsThroughputTestItemRequestArgs struct {
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetLiveToolsThroughputTestItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemRequest)(nil)).Elem()
}

func (i GetLiveToolsThroughputTestItemRequestArgs) ToGetLiveToolsThroughputTestItemRequestOutput() GetLiveToolsThroughputTestItemRequestOutput {
	return i.ToGetLiveToolsThroughputTestItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsThroughputTestItemRequestArgs) ToGetLiveToolsThroughputTestItemRequestOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsThroughputTestItemRequestOutput)
}

type GetLiveToolsThroughputTestItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsThroughputTestItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemRequest)(nil)).Elem()
}

func (o GetLiveToolsThroughputTestItemRequestOutput) ToGetLiveToolsThroughputTestItemRequestOutput() GetLiveToolsThroughputTestItemRequestOutput {
	return o
}

func (o GetLiveToolsThroughputTestItemRequestOutput) ToGetLiveToolsThroughputTestItemRequestOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemRequestOutput {
	return o
}

// Device serial number
func (o GetLiveToolsThroughputTestItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

type GetLiveToolsThroughputTestItemResult struct {
	// Shows the speeds (Mbps)
	Speeds GetLiveToolsThroughputTestItemResultSpeeds `pulumi:"speeds"`
}

// GetLiveToolsThroughputTestItemResultInput is an input type that accepts GetLiveToolsThroughputTestItemResultArgs and GetLiveToolsThroughputTestItemResultOutput values.
// You can construct a concrete instance of `GetLiveToolsThroughputTestItemResultInput` via:
//
//	GetLiveToolsThroughputTestItemResultArgs{...}
type GetLiveToolsThroughputTestItemResultInput interface {
	pulumi.Input

	ToGetLiveToolsThroughputTestItemResultOutput() GetLiveToolsThroughputTestItemResultOutput
	ToGetLiveToolsThroughputTestItemResultOutputWithContext(context.Context) GetLiveToolsThroughputTestItemResultOutput
}

type GetLiveToolsThroughputTestItemResultArgs struct {
	// Shows the speeds (Mbps)
	Speeds GetLiveToolsThroughputTestItemResultSpeedsInput `pulumi:"speeds"`
}

func (GetLiveToolsThroughputTestItemResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemResult)(nil)).Elem()
}

func (i GetLiveToolsThroughputTestItemResultArgs) ToGetLiveToolsThroughputTestItemResultOutput() GetLiveToolsThroughputTestItemResultOutput {
	return i.ToGetLiveToolsThroughputTestItemResultOutputWithContext(context.Background())
}

func (i GetLiveToolsThroughputTestItemResultArgs) ToGetLiveToolsThroughputTestItemResultOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsThroughputTestItemResultOutput)
}

type GetLiveToolsThroughputTestItemResultOutput struct{ *pulumi.OutputState }

func (GetLiveToolsThroughputTestItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemResult)(nil)).Elem()
}

func (o GetLiveToolsThroughputTestItemResultOutput) ToGetLiveToolsThroughputTestItemResultOutput() GetLiveToolsThroughputTestItemResultOutput {
	return o
}

func (o GetLiveToolsThroughputTestItemResultOutput) ToGetLiveToolsThroughputTestItemResultOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemResultOutput {
	return o
}

// Shows the speeds (Mbps)
func (o GetLiveToolsThroughputTestItemResultOutput) Speeds() GetLiveToolsThroughputTestItemResultSpeedsOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItemResult) GetLiveToolsThroughputTestItemResultSpeeds {
		return v.Speeds
	}).(GetLiveToolsThroughputTestItemResultSpeedsOutput)
}

type GetLiveToolsThroughputTestItemResultSpeeds struct {
	// Shows the download speed from shard (Mbps)
	Downstream int `pulumi:"downstream"`
}

// GetLiveToolsThroughputTestItemResultSpeedsInput is an input type that accepts GetLiveToolsThroughputTestItemResultSpeedsArgs and GetLiveToolsThroughputTestItemResultSpeedsOutput values.
// You can construct a concrete instance of `GetLiveToolsThroughputTestItemResultSpeedsInput` via:
//
//	GetLiveToolsThroughputTestItemResultSpeedsArgs{...}
type GetLiveToolsThroughputTestItemResultSpeedsInput interface {
	pulumi.Input

	ToGetLiveToolsThroughputTestItemResultSpeedsOutput() GetLiveToolsThroughputTestItemResultSpeedsOutput
	ToGetLiveToolsThroughputTestItemResultSpeedsOutputWithContext(context.Context) GetLiveToolsThroughputTestItemResultSpeedsOutput
}

type GetLiveToolsThroughputTestItemResultSpeedsArgs struct {
	// Shows the download speed from shard (Mbps)
	Downstream pulumi.IntInput `pulumi:"downstream"`
}

func (GetLiveToolsThroughputTestItemResultSpeedsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemResultSpeeds)(nil)).Elem()
}

func (i GetLiveToolsThroughputTestItemResultSpeedsArgs) ToGetLiveToolsThroughputTestItemResultSpeedsOutput() GetLiveToolsThroughputTestItemResultSpeedsOutput {
	return i.ToGetLiveToolsThroughputTestItemResultSpeedsOutputWithContext(context.Background())
}

func (i GetLiveToolsThroughputTestItemResultSpeedsArgs) ToGetLiveToolsThroughputTestItemResultSpeedsOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemResultSpeedsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsThroughputTestItemResultSpeedsOutput)
}

type GetLiveToolsThroughputTestItemResultSpeedsOutput struct{ *pulumi.OutputState }

func (GetLiveToolsThroughputTestItemResultSpeedsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsThroughputTestItemResultSpeeds)(nil)).Elem()
}

func (o GetLiveToolsThroughputTestItemResultSpeedsOutput) ToGetLiveToolsThroughputTestItemResultSpeedsOutput() GetLiveToolsThroughputTestItemResultSpeedsOutput {
	return o
}

func (o GetLiveToolsThroughputTestItemResultSpeedsOutput) ToGetLiveToolsThroughputTestItemResultSpeedsOutputWithContext(ctx context.Context) GetLiveToolsThroughputTestItemResultSpeedsOutput {
	return o
}

// Shows the download speed from shard (Mbps)
func (o GetLiveToolsThroughputTestItemResultSpeedsOutput) Downstream() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsThroughputTestItemResultSpeeds) int { return v.Downstream }).(pulumi.IntOutput)
}

type GetLiveToolsWakeOnLanItem struct {
	// An error message for a failed execution
	Error string `pulumi:"error"`
	// The parameters of the Wake-on-LAN request
	Request GetLiveToolsWakeOnLanItemRequest `pulumi:"request"`
	// Status of the Wake-on-LAN request
	Status string `pulumi:"status"`
	// GET this url to check the status of your ping request
	Url string `pulumi:"url"`
	// ID of the Wake-on-LAN job
	WakeOnLanId string `pulumi:"wakeOnLanId"`
}

// GetLiveToolsWakeOnLanItemInput is an input type that accepts GetLiveToolsWakeOnLanItemArgs and GetLiveToolsWakeOnLanItemOutput values.
// You can construct a concrete instance of `GetLiveToolsWakeOnLanItemInput` via:
//
//	GetLiveToolsWakeOnLanItemArgs{...}
type GetLiveToolsWakeOnLanItemInput interface {
	pulumi.Input

	ToGetLiveToolsWakeOnLanItemOutput() GetLiveToolsWakeOnLanItemOutput
	ToGetLiveToolsWakeOnLanItemOutputWithContext(context.Context) GetLiveToolsWakeOnLanItemOutput
}

type GetLiveToolsWakeOnLanItemArgs struct {
	// An error message for a failed execution
	Error pulumi.StringInput `pulumi:"error"`
	// The parameters of the Wake-on-LAN request
	Request GetLiveToolsWakeOnLanItemRequestInput `pulumi:"request"`
	// Status of the Wake-on-LAN request
	Status pulumi.StringInput `pulumi:"status"`
	// GET this url to check the status of your ping request
	Url pulumi.StringInput `pulumi:"url"`
	// ID of the Wake-on-LAN job
	WakeOnLanId pulumi.StringInput `pulumi:"wakeOnLanId"`
}

func (GetLiveToolsWakeOnLanItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsWakeOnLanItem)(nil)).Elem()
}

func (i GetLiveToolsWakeOnLanItemArgs) ToGetLiveToolsWakeOnLanItemOutput() GetLiveToolsWakeOnLanItemOutput {
	return i.ToGetLiveToolsWakeOnLanItemOutputWithContext(context.Background())
}

func (i GetLiveToolsWakeOnLanItemArgs) ToGetLiveToolsWakeOnLanItemOutputWithContext(ctx context.Context) GetLiveToolsWakeOnLanItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsWakeOnLanItemOutput)
}

type GetLiveToolsWakeOnLanItemOutput struct{ *pulumi.OutputState }

func (GetLiveToolsWakeOnLanItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsWakeOnLanItem)(nil)).Elem()
}

func (o GetLiveToolsWakeOnLanItemOutput) ToGetLiveToolsWakeOnLanItemOutput() GetLiveToolsWakeOnLanItemOutput {
	return o
}

func (o GetLiveToolsWakeOnLanItemOutput) ToGetLiveToolsWakeOnLanItemOutputWithContext(ctx context.Context) GetLiveToolsWakeOnLanItemOutput {
	return o
}

// An error message for a failed execution
func (o GetLiveToolsWakeOnLanItemOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItem) string { return v.Error }).(pulumi.StringOutput)
}

// The parameters of the Wake-on-LAN request
func (o GetLiveToolsWakeOnLanItemOutput) Request() GetLiveToolsWakeOnLanItemRequestOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItem) GetLiveToolsWakeOnLanItemRequest { return v.Request }).(GetLiveToolsWakeOnLanItemRequestOutput)
}

// Status of the Wake-on-LAN request
func (o GetLiveToolsWakeOnLanItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItem) string { return v.Status }).(pulumi.StringOutput)
}

// GET this url to check the status of your ping request
func (o GetLiveToolsWakeOnLanItemOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItem) string { return v.Url }).(pulumi.StringOutput)
}

// ID of the Wake-on-LAN job
func (o GetLiveToolsWakeOnLanItemOutput) WakeOnLanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItem) string { return v.WakeOnLanId }).(pulumi.StringOutput)
}

type GetLiveToolsWakeOnLanItemRequest struct {
	// The target's MAC address
	Mac string `pulumi:"mac"`
	// Device serial number
	Serial string `pulumi:"serial"`
	// The target's VLAN (1 to 4094)
	VlanId int `pulumi:"vlanId"`
}

// GetLiveToolsWakeOnLanItemRequestInput is an input type that accepts GetLiveToolsWakeOnLanItemRequestArgs and GetLiveToolsWakeOnLanItemRequestOutput values.
// You can construct a concrete instance of `GetLiveToolsWakeOnLanItemRequestInput` via:
//
//	GetLiveToolsWakeOnLanItemRequestArgs{...}
type GetLiveToolsWakeOnLanItemRequestInput interface {
	pulumi.Input

	ToGetLiveToolsWakeOnLanItemRequestOutput() GetLiveToolsWakeOnLanItemRequestOutput
	ToGetLiveToolsWakeOnLanItemRequestOutputWithContext(context.Context) GetLiveToolsWakeOnLanItemRequestOutput
}

type GetLiveToolsWakeOnLanItemRequestArgs struct {
	// The target's MAC address
	Mac pulumi.StringInput `pulumi:"mac"`
	// Device serial number
	Serial pulumi.StringInput `pulumi:"serial"`
	// The target's VLAN (1 to 4094)
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetLiveToolsWakeOnLanItemRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsWakeOnLanItemRequest)(nil)).Elem()
}

func (i GetLiveToolsWakeOnLanItemRequestArgs) ToGetLiveToolsWakeOnLanItemRequestOutput() GetLiveToolsWakeOnLanItemRequestOutput {
	return i.ToGetLiveToolsWakeOnLanItemRequestOutputWithContext(context.Background())
}

func (i GetLiveToolsWakeOnLanItemRequestArgs) ToGetLiveToolsWakeOnLanItemRequestOutputWithContext(ctx context.Context) GetLiveToolsWakeOnLanItemRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLiveToolsWakeOnLanItemRequestOutput)
}

type GetLiveToolsWakeOnLanItemRequestOutput struct{ *pulumi.OutputState }

func (GetLiveToolsWakeOnLanItemRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsWakeOnLanItemRequest)(nil)).Elem()
}

func (o GetLiveToolsWakeOnLanItemRequestOutput) ToGetLiveToolsWakeOnLanItemRequestOutput() GetLiveToolsWakeOnLanItemRequestOutput {
	return o
}

func (o GetLiveToolsWakeOnLanItemRequestOutput) ToGetLiveToolsWakeOnLanItemRequestOutputWithContext(ctx context.Context) GetLiveToolsWakeOnLanItemRequestOutput {
	return o
}

// The target's MAC address
func (o GetLiveToolsWakeOnLanItemRequestOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItemRequest) string { return v.Mac }).(pulumi.StringOutput)
}

// Device serial number
func (o GetLiveToolsWakeOnLanItemRequestOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItemRequest) string { return v.Serial }).(pulumi.StringOutput)
}

// The target's VLAN (1 to 4094)
func (o GetLiveToolsWakeOnLanItemRequestOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLiveToolsWakeOnLanItemRequest) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetLldpCdpItem struct {
	Ports GetLldpCdpItemPorts `pulumi:"ports"`
	// Source MAC address
	SourceMac string `pulumi:"sourceMac"`
}

// GetLldpCdpItemInput is an input type that accepts GetLldpCdpItemArgs and GetLldpCdpItemOutput values.
// You can construct a concrete instance of `GetLldpCdpItemInput` via:
//
//	GetLldpCdpItemArgs{...}
type GetLldpCdpItemInput interface {
	pulumi.Input

	ToGetLldpCdpItemOutput() GetLldpCdpItemOutput
	ToGetLldpCdpItemOutputWithContext(context.Context) GetLldpCdpItemOutput
}

type GetLldpCdpItemArgs struct {
	Ports GetLldpCdpItemPortsInput `pulumi:"ports"`
	// Source MAC address
	SourceMac pulumi.StringInput `pulumi:"sourceMac"`
}

func (GetLldpCdpItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItem)(nil)).Elem()
}

func (i GetLldpCdpItemArgs) ToGetLldpCdpItemOutput() GetLldpCdpItemOutput {
	return i.ToGetLldpCdpItemOutputWithContext(context.Background())
}

func (i GetLldpCdpItemArgs) ToGetLldpCdpItemOutputWithContext(ctx context.Context) GetLldpCdpItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemOutput)
}

type GetLldpCdpItemOutput struct{ *pulumi.OutputState }

func (GetLldpCdpItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItem)(nil)).Elem()
}

func (o GetLldpCdpItemOutput) ToGetLldpCdpItemOutput() GetLldpCdpItemOutput {
	return o
}

func (o GetLldpCdpItemOutput) ToGetLldpCdpItemOutputWithContext(ctx context.Context) GetLldpCdpItemOutput {
	return o
}

func (o GetLldpCdpItemOutput) Ports() GetLldpCdpItemPortsOutput {
	return o.ApplyT(func(v GetLldpCdpItem) GetLldpCdpItemPorts { return v.Ports }).(GetLldpCdpItemPortsOutput)
}

// Source MAC address
func (o GetLldpCdpItemOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItem) string { return v.SourceMac }).(pulumi.StringOutput)
}

type GetLldpCdpItemPorts struct {
	Status12 GetLldpCdpItemPortsStatus12 `pulumi:"status12"`
	Status8  GetLldpCdpItemPortsStatus8  `pulumi:"status8"`
}

// GetLldpCdpItemPortsInput is an input type that accepts GetLldpCdpItemPortsArgs and GetLldpCdpItemPortsOutput values.
// You can construct a concrete instance of `GetLldpCdpItemPortsInput` via:
//
//	GetLldpCdpItemPortsArgs{...}
type GetLldpCdpItemPortsInput interface {
	pulumi.Input

	ToGetLldpCdpItemPortsOutput() GetLldpCdpItemPortsOutput
	ToGetLldpCdpItemPortsOutputWithContext(context.Context) GetLldpCdpItemPortsOutput
}

type GetLldpCdpItemPortsArgs struct {
	Status12 GetLldpCdpItemPortsStatus12Input `pulumi:"status12"`
	Status8  GetLldpCdpItemPortsStatus8Input  `pulumi:"status8"`
}

func (GetLldpCdpItemPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPorts)(nil)).Elem()
}

func (i GetLldpCdpItemPortsArgs) ToGetLldpCdpItemPortsOutput() GetLldpCdpItemPortsOutput {
	return i.ToGetLldpCdpItemPortsOutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsArgs) ToGetLldpCdpItemPortsOutputWithContext(ctx context.Context) GetLldpCdpItemPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsOutput)
}

type GetLldpCdpItemPortsOutput struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPorts)(nil)).Elem()
}

func (o GetLldpCdpItemPortsOutput) ToGetLldpCdpItemPortsOutput() GetLldpCdpItemPortsOutput {
	return o
}

func (o GetLldpCdpItemPortsOutput) ToGetLldpCdpItemPortsOutputWithContext(ctx context.Context) GetLldpCdpItemPortsOutput {
	return o
}

func (o GetLldpCdpItemPortsOutput) Status12() GetLldpCdpItemPortsStatus12Output {
	return o.ApplyT(func(v GetLldpCdpItemPorts) GetLldpCdpItemPortsStatus12 { return v.Status12 }).(GetLldpCdpItemPortsStatus12Output)
}

func (o GetLldpCdpItemPortsOutput) Status8() GetLldpCdpItemPortsStatus8Output {
	return o.ApplyT(func(v GetLldpCdpItemPorts) GetLldpCdpItemPortsStatus8 { return v.Status8 }).(GetLldpCdpItemPortsStatus8Output)
}

type GetLldpCdpItemPortsStatus12 struct {
	Cdp  GetLldpCdpItemPortsStatus12Cdp  `pulumi:"cdp"`
	Lldp GetLldpCdpItemPortsStatus12Lldp `pulumi:"lldp"`
}

// GetLldpCdpItemPortsStatus12Input is an input type that accepts GetLldpCdpItemPortsStatus12Args and GetLldpCdpItemPortsStatus12Output values.
// You can construct a concrete instance of `GetLldpCdpItemPortsStatus12Input` via:
//
//	GetLldpCdpItemPortsStatus12Args{...}
type GetLldpCdpItemPortsStatus12Input interface {
	pulumi.Input

	ToGetLldpCdpItemPortsStatus12Output() GetLldpCdpItemPortsStatus12Output
	ToGetLldpCdpItemPortsStatus12OutputWithContext(context.Context) GetLldpCdpItemPortsStatus12Output
}

type GetLldpCdpItemPortsStatus12Args struct {
	Cdp  GetLldpCdpItemPortsStatus12CdpInput  `pulumi:"cdp"`
	Lldp GetLldpCdpItemPortsStatus12LldpInput `pulumi:"lldp"`
}

func (GetLldpCdpItemPortsStatus12Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12)(nil)).Elem()
}

func (i GetLldpCdpItemPortsStatus12Args) ToGetLldpCdpItemPortsStatus12Output() GetLldpCdpItemPortsStatus12Output {
	return i.ToGetLldpCdpItemPortsStatus12OutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsStatus12Args) ToGetLldpCdpItemPortsStatus12OutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsStatus12Output)
}

type GetLldpCdpItemPortsStatus12Output struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsStatus12Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12)(nil)).Elem()
}

func (o GetLldpCdpItemPortsStatus12Output) ToGetLldpCdpItemPortsStatus12Output() GetLldpCdpItemPortsStatus12Output {
	return o
}

func (o GetLldpCdpItemPortsStatus12Output) ToGetLldpCdpItemPortsStatus12OutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12Output {
	return o
}

func (o GetLldpCdpItemPortsStatus12Output) Cdp() GetLldpCdpItemPortsStatus12CdpOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12) GetLldpCdpItemPortsStatus12Cdp { return v.Cdp }).(GetLldpCdpItemPortsStatus12CdpOutput)
}

func (o GetLldpCdpItemPortsStatus12Output) Lldp() GetLldpCdpItemPortsStatus12LldpOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12) GetLldpCdpItemPortsStatus12Lldp { return v.Lldp }).(GetLldpCdpItemPortsStatus12LldpOutput)
}

type GetLldpCdpItemPortsStatus12Cdp struct {
	Address    string `pulumi:"address"`
	DeviceId   string `pulumi:"deviceId"`
	PortId     string `pulumi:"portId"`
	SourcePort string `pulumi:"sourcePort"`
}

// GetLldpCdpItemPortsStatus12CdpInput is an input type that accepts GetLldpCdpItemPortsStatus12CdpArgs and GetLldpCdpItemPortsStatus12CdpOutput values.
// You can construct a concrete instance of `GetLldpCdpItemPortsStatus12CdpInput` via:
//
//	GetLldpCdpItemPortsStatus12CdpArgs{...}
type GetLldpCdpItemPortsStatus12CdpInput interface {
	pulumi.Input

	ToGetLldpCdpItemPortsStatus12CdpOutput() GetLldpCdpItemPortsStatus12CdpOutput
	ToGetLldpCdpItemPortsStatus12CdpOutputWithContext(context.Context) GetLldpCdpItemPortsStatus12CdpOutput
}

type GetLldpCdpItemPortsStatus12CdpArgs struct {
	Address    pulumi.StringInput `pulumi:"address"`
	DeviceId   pulumi.StringInput `pulumi:"deviceId"`
	PortId     pulumi.StringInput `pulumi:"portId"`
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetLldpCdpItemPortsStatus12CdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12Cdp)(nil)).Elem()
}

func (i GetLldpCdpItemPortsStatus12CdpArgs) ToGetLldpCdpItemPortsStatus12CdpOutput() GetLldpCdpItemPortsStatus12CdpOutput {
	return i.ToGetLldpCdpItemPortsStatus12CdpOutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsStatus12CdpArgs) ToGetLldpCdpItemPortsStatus12CdpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12CdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsStatus12CdpOutput)
}

type GetLldpCdpItemPortsStatus12CdpOutput struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsStatus12CdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12Cdp)(nil)).Elem()
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) ToGetLldpCdpItemPortsStatus12CdpOutput() GetLldpCdpItemPortsStatus12CdpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) ToGetLldpCdpItemPortsStatus12CdpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12CdpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Cdp) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Cdp) string { return v.DeviceId }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Cdp) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12CdpOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Cdp) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetLldpCdpItemPortsStatus12Lldp struct {
	ManagementAddress string `pulumi:"managementAddress"`
	PortId            string `pulumi:"portId"`
	SourcePort        string `pulumi:"sourcePort"`
	SystemName        string `pulumi:"systemName"`
}

// GetLldpCdpItemPortsStatus12LldpInput is an input type that accepts GetLldpCdpItemPortsStatus12LldpArgs and GetLldpCdpItemPortsStatus12LldpOutput values.
// You can construct a concrete instance of `GetLldpCdpItemPortsStatus12LldpInput` via:
//
//	GetLldpCdpItemPortsStatus12LldpArgs{...}
type GetLldpCdpItemPortsStatus12LldpInput interface {
	pulumi.Input

	ToGetLldpCdpItemPortsStatus12LldpOutput() GetLldpCdpItemPortsStatus12LldpOutput
	ToGetLldpCdpItemPortsStatus12LldpOutputWithContext(context.Context) GetLldpCdpItemPortsStatus12LldpOutput
}

type GetLldpCdpItemPortsStatus12LldpArgs struct {
	ManagementAddress pulumi.StringInput `pulumi:"managementAddress"`
	PortId            pulumi.StringInput `pulumi:"portId"`
	SourcePort        pulumi.StringInput `pulumi:"sourcePort"`
	SystemName        pulumi.StringInput `pulumi:"systemName"`
}

func (GetLldpCdpItemPortsStatus12LldpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12Lldp)(nil)).Elem()
}

func (i GetLldpCdpItemPortsStatus12LldpArgs) ToGetLldpCdpItemPortsStatus12LldpOutput() GetLldpCdpItemPortsStatus12LldpOutput {
	return i.ToGetLldpCdpItemPortsStatus12LldpOutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsStatus12LldpArgs) ToGetLldpCdpItemPortsStatus12LldpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12LldpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsStatus12LldpOutput)
}

type GetLldpCdpItemPortsStatus12LldpOutput struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsStatus12LldpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus12Lldp)(nil)).Elem()
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) ToGetLldpCdpItemPortsStatus12LldpOutput() GetLldpCdpItemPortsStatus12LldpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) ToGetLldpCdpItemPortsStatus12LldpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus12LldpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) ManagementAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Lldp) string { return v.ManagementAddress }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Lldp) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Lldp) string { return v.SourcePort }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus12LldpOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus12Lldp) string { return v.SystemName }).(pulumi.StringOutput)
}

type GetLldpCdpItemPortsStatus8 struct {
	Cdp GetLldpCdpItemPortsStatus8Cdp `pulumi:"cdp"`
}

// GetLldpCdpItemPortsStatus8Input is an input type that accepts GetLldpCdpItemPortsStatus8Args and GetLldpCdpItemPortsStatus8Output values.
// You can construct a concrete instance of `GetLldpCdpItemPortsStatus8Input` via:
//
//	GetLldpCdpItemPortsStatus8Args{...}
type GetLldpCdpItemPortsStatus8Input interface {
	pulumi.Input

	ToGetLldpCdpItemPortsStatus8Output() GetLldpCdpItemPortsStatus8Output
	ToGetLldpCdpItemPortsStatus8OutputWithContext(context.Context) GetLldpCdpItemPortsStatus8Output
}

type GetLldpCdpItemPortsStatus8Args struct {
	Cdp GetLldpCdpItemPortsStatus8CdpInput `pulumi:"cdp"`
}

func (GetLldpCdpItemPortsStatus8Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus8)(nil)).Elem()
}

func (i GetLldpCdpItemPortsStatus8Args) ToGetLldpCdpItemPortsStatus8Output() GetLldpCdpItemPortsStatus8Output {
	return i.ToGetLldpCdpItemPortsStatus8OutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsStatus8Args) ToGetLldpCdpItemPortsStatus8OutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus8Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsStatus8Output)
}

type GetLldpCdpItemPortsStatus8Output struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsStatus8Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus8)(nil)).Elem()
}

func (o GetLldpCdpItemPortsStatus8Output) ToGetLldpCdpItemPortsStatus8Output() GetLldpCdpItemPortsStatus8Output {
	return o
}

func (o GetLldpCdpItemPortsStatus8Output) ToGetLldpCdpItemPortsStatus8OutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus8Output {
	return o
}

func (o GetLldpCdpItemPortsStatus8Output) Cdp() GetLldpCdpItemPortsStatus8CdpOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus8) GetLldpCdpItemPortsStatus8Cdp { return v.Cdp }).(GetLldpCdpItemPortsStatus8CdpOutput)
}

type GetLldpCdpItemPortsStatus8Cdp struct {
	Address    string `pulumi:"address"`
	DeviceId   string `pulumi:"deviceId"`
	PortId     string `pulumi:"portId"`
	SourcePort string `pulumi:"sourcePort"`
}

// GetLldpCdpItemPortsStatus8CdpInput is an input type that accepts GetLldpCdpItemPortsStatus8CdpArgs and GetLldpCdpItemPortsStatus8CdpOutput values.
// You can construct a concrete instance of `GetLldpCdpItemPortsStatus8CdpInput` via:
//
//	GetLldpCdpItemPortsStatus8CdpArgs{...}
type GetLldpCdpItemPortsStatus8CdpInput interface {
	pulumi.Input

	ToGetLldpCdpItemPortsStatus8CdpOutput() GetLldpCdpItemPortsStatus8CdpOutput
	ToGetLldpCdpItemPortsStatus8CdpOutputWithContext(context.Context) GetLldpCdpItemPortsStatus8CdpOutput
}

type GetLldpCdpItemPortsStatus8CdpArgs struct {
	Address    pulumi.StringInput `pulumi:"address"`
	DeviceId   pulumi.StringInput `pulumi:"deviceId"`
	PortId     pulumi.StringInput `pulumi:"portId"`
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetLldpCdpItemPortsStatus8CdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus8Cdp)(nil)).Elem()
}

func (i GetLldpCdpItemPortsStatus8CdpArgs) ToGetLldpCdpItemPortsStatus8CdpOutput() GetLldpCdpItemPortsStatus8CdpOutput {
	return i.ToGetLldpCdpItemPortsStatus8CdpOutputWithContext(context.Background())
}

func (i GetLldpCdpItemPortsStatus8CdpArgs) ToGetLldpCdpItemPortsStatus8CdpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus8CdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLldpCdpItemPortsStatus8CdpOutput)
}

type GetLldpCdpItemPortsStatus8CdpOutput struct{ *pulumi.OutputState }

func (GetLldpCdpItemPortsStatus8CdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLldpCdpItemPortsStatus8Cdp)(nil)).Elem()
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) ToGetLldpCdpItemPortsStatus8CdpOutput() GetLldpCdpItemPortsStatus8CdpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) ToGetLldpCdpItemPortsStatus8CdpOutputWithContext(ctx context.Context) GetLldpCdpItemPortsStatus8CdpOutput {
	return o
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus8Cdp) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus8Cdp) string { return v.DeviceId }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus8Cdp) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetLldpCdpItemPortsStatus8CdpOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetLldpCdpItemPortsStatus8Cdp) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetManagementInterfaceItem struct {
	// Dynamic DNS hostnames.
	DdnsHostnames GetManagementInterfaceItemDdnsHostnames `pulumi:"ddnsHostnames"`
	// WAN 1 settings
	Wan1 GetManagementInterfaceItemWan1 `pulumi:"wan1"`
	// WAN 2 settings (only for MX devices)
	Wan2 GetManagementInterfaceItemWan2 `pulumi:"wan2"`
}

// GetManagementInterfaceItemInput is an input type that accepts GetManagementInterfaceItemArgs and GetManagementInterfaceItemOutput values.
// You can construct a concrete instance of `GetManagementInterfaceItemInput` via:
//
//	GetManagementInterfaceItemArgs{...}
type GetManagementInterfaceItemInput interface {
	pulumi.Input

	ToGetManagementInterfaceItemOutput() GetManagementInterfaceItemOutput
	ToGetManagementInterfaceItemOutputWithContext(context.Context) GetManagementInterfaceItemOutput
}

type GetManagementInterfaceItemArgs struct {
	// Dynamic DNS hostnames.
	DdnsHostnames GetManagementInterfaceItemDdnsHostnamesInput `pulumi:"ddnsHostnames"`
	// WAN 1 settings
	Wan1 GetManagementInterfaceItemWan1Input `pulumi:"wan1"`
	// WAN 2 settings (only for MX devices)
	Wan2 GetManagementInterfaceItemWan2Input `pulumi:"wan2"`
}

func (GetManagementInterfaceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItem)(nil)).Elem()
}

func (i GetManagementInterfaceItemArgs) ToGetManagementInterfaceItemOutput() GetManagementInterfaceItemOutput {
	return i.ToGetManagementInterfaceItemOutputWithContext(context.Background())
}

func (i GetManagementInterfaceItemArgs) ToGetManagementInterfaceItemOutputWithContext(ctx context.Context) GetManagementInterfaceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementInterfaceItemOutput)
}

type GetManagementInterfaceItemOutput struct{ *pulumi.OutputState }

func (GetManagementInterfaceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItem)(nil)).Elem()
}

func (o GetManagementInterfaceItemOutput) ToGetManagementInterfaceItemOutput() GetManagementInterfaceItemOutput {
	return o
}

func (o GetManagementInterfaceItemOutput) ToGetManagementInterfaceItemOutputWithContext(ctx context.Context) GetManagementInterfaceItemOutput {
	return o
}

// Dynamic DNS hostnames.
func (o GetManagementInterfaceItemOutput) DdnsHostnames() GetManagementInterfaceItemDdnsHostnamesOutput {
	return o.ApplyT(func(v GetManagementInterfaceItem) GetManagementInterfaceItemDdnsHostnames { return v.DdnsHostnames }).(GetManagementInterfaceItemDdnsHostnamesOutput)
}

// WAN 1 settings
func (o GetManagementInterfaceItemOutput) Wan1() GetManagementInterfaceItemWan1Output {
	return o.ApplyT(func(v GetManagementInterfaceItem) GetManagementInterfaceItemWan1 { return v.Wan1 }).(GetManagementInterfaceItemWan1Output)
}

// WAN 2 settings (only for MX devices)
func (o GetManagementInterfaceItemOutput) Wan2() GetManagementInterfaceItemWan2Output {
	return o.ApplyT(func(v GetManagementInterfaceItem) GetManagementInterfaceItemWan2 { return v.Wan2 }).(GetManagementInterfaceItemWan2Output)
}

type GetManagementInterfaceItemDdnsHostnames struct {
	// Active dynamic DNS hostname.
	ActiveDdnsHostname string `pulumi:"activeDdnsHostname"`
	// WAN 1 dynamic DNS hostname.
	DdnsHostnameWan1 string `pulumi:"ddnsHostnameWan1"`
	// WAN 2 dynamic DNS hostname.
	DdnsHostnameWan2 string `pulumi:"ddnsHostnameWan2"`
}

// GetManagementInterfaceItemDdnsHostnamesInput is an input type that accepts GetManagementInterfaceItemDdnsHostnamesArgs and GetManagementInterfaceItemDdnsHostnamesOutput values.
// You can construct a concrete instance of `GetManagementInterfaceItemDdnsHostnamesInput` via:
//
//	GetManagementInterfaceItemDdnsHostnamesArgs{...}
type GetManagementInterfaceItemDdnsHostnamesInput interface {
	pulumi.Input

	ToGetManagementInterfaceItemDdnsHostnamesOutput() GetManagementInterfaceItemDdnsHostnamesOutput
	ToGetManagementInterfaceItemDdnsHostnamesOutputWithContext(context.Context) GetManagementInterfaceItemDdnsHostnamesOutput
}

type GetManagementInterfaceItemDdnsHostnamesArgs struct {
	// Active dynamic DNS hostname.
	ActiveDdnsHostname pulumi.StringInput `pulumi:"activeDdnsHostname"`
	// WAN 1 dynamic DNS hostname.
	DdnsHostnameWan1 pulumi.StringInput `pulumi:"ddnsHostnameWan1"`
	// WAN 2 dynamic DNS hostname.
	DdnsHostnameWan2 pulumi.StringInput `pulumi:"ddnsHostnameWan2"`
}

func (GetManagementInterfaceItemDdnsHostnamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemDdnsHostnames)(nil)).Elem()
}

func (i GetManagementInterfaceItemDdnsHostnamesArgs) ToGetManagementInterfaceItemDdnsHostnamesOutput() GetManagementInterfaceItemDdnsHostnamesOutput {
	return i.ToGetManagementInterfaceItemDdnsHostnamesOutputWithContext(context.Background())
}

func (i GetManagementInterfaceItemDdnsHostnamesArgs) ToGetManagementInterfaceItemDdnsHostnamesOutputWithContext(ctx context.Context) GetManagementInterfaceItemDdnsHostnamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementInterfaceItemDdnsHostnamesOutput)
}

type GetManagementInterfaceItemDdnsHostnamesOutput struct{ *pulumi.OutputState }

func (GetManagementInterfaceItemDdnsHostnamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemDdnsHostnames)(nil)).Elem()
}

func (o GetManagementInterfaceItemDdnsHostnamesOutput) ToGetManagementInterfaceItemDdnsHostnamesOutput() GetManagementInterfaceItemDdnsHostnamesOutput {
	return o
}

func (o GetManagementInterfaceItemDdnsHostnamesOutput) ToGetManagementInterfaceItemDdnsHostnamesOutputWithContext(ctx context.Context) GetManagementInterfaceItemDdnsHostnamesOutput {
	return o
}

// Active dynamic DNS hostname.
func (o GetManagementInterfaceItemDdnsHostnamesOutput) ActiveDdnsHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemDdnsHostnames) string { return v.ActiveDdnsHostname }).(pulumi.StringOutput)
}

// WAN 1 dynamic DNS hostname.
func (o GetManagementInterfaceItemDdnsHostnamesOutput) DdnsHostnameWan1() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemDdnsHostnames) string { return v.DdnsHostnameWan1 }).(pulumi.StringOutput)
}

// WAN 2 dynamic DNS hostname.
func (o GetManagementInterfaceItemDdnsHostnamesOutput) DdnsHostnameWan2() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemDdnsHostnames) string { return v.DdnsHostnameWan2 }).(pulumi.StringOutput)
}

type GetManagementInterfaceItemWan1 struct {
	// Up to two DNS IPs.
	StaticDns []string `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp string `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp string `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask string `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp bool `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan int `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled string `pulumi:"wanEnabled"`
}

// GetManagementInterfaceItemWan1Input is an input type that accepts GetManagementInterfaceItemWan1Args and GetManagementInterfaceItemWan1Output values.
// You can construct a concrete instance of `GetManagementInterfaceItemWan1Input` via:
//
//	GetManagementInterfaceItemWan1Args{...}
type GetManagementInterfaceItemWan1Input interface {
	pulumi.Input

	ToGetManagementInterfaceItemWan1Output() GetManagementInterfaceItemWan1Output
	ToGetManagementInterfaceItemWan1OutputWithContext(context.Context) GetManagementInterfaceItemWan1Output
}

type GetManagementInterfaceItemWan1Args struct {
	// Up to two DNS IPs.
	StaticDns pulumi.StringArrayInput `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp pulumi.StringInput `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp pulumi.StringInput `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask pulumi.StringInput `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp pulumi.BoolInput `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled pulumi.StringInput `pulumi:"wanEnabled"`
}

func (GetManagementInterfaceItemWan1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemWan1)(nil)).Elem()
}

func (i GetManagementInterfaceItemWan1Args) ToGetManagementInterfaceItemWan1Output() GetManagementInterfaceItemWan1Output {
	return i.ToGetManagementInterfaceItemWan1OutputWithContext(context.Background())
}

func (i GetManagementInterfaceItemWan1Args) ToGetManagementInterfaceItemWan1OutputWithContext(ctx context.Context) GetManagementInterfaceItemWan1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementInterfaceItemWan1Output)
}

type GetManagementInterfaceItemWan1Output struct{ *pulumi.OutputState }

func (GetManagementInterfaceItemWan1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemWan1)(nil)).Elem()
}

func (o GetManagementInterfaceItemWan1Output) ToGetManagementInterfaceItemWan1Output() GetManagementInterfaceItemWan1Output {
	return o
}

func (o GetManagementInterfaceItemWan1Output) ToGetManagementInterfaceItemWan1OutputWithContext(ctx context.Context) GetManagementInterfaceItemWan1Output {
	return o
}

// Up to two DNS IPs.
func (o GetManagementInterfaceItemWan1Output) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) []string { return v.StaticDns }).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o GetManagementInterfaceItemWan1Output) StaticGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) string { return v.StaticGatewayIp }).(pulumi.StringOutput)
}

// The IP the device should use on the WAN.
func (o GetManagementInterfaceItemWan1Output) StaticIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) string { return v.StaticIp }).(pulumi.StringOutput)
}

// The subnet mask for the WAN.
func (o GetManagementInterfaceItemWan1Output) StaticSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) string { return v.StaticSubnetMask }).(pulumi.StringOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o GetManagementInterfaceItemWan1Output) UsingStaticIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) bool { return v.UsingStaticIp }).(pulumi.BoolOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o GetManagementInterfaceItemWan1Output) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) int { return v.Vlan }).(pulumi.IntOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o GetManagementInterfaceItemWan1Output) WanEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan1) string { return v.WanEnabled }).(pulumi.StringOutput)
}

type GetManagementInterfaceItemWan2 struct {
	// Up to two DNS IPs.
	StaticDns []string `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp string `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp string `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask string `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp bool `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan int `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled string `pulumi:"wanEnabled"`
}

// GetManagementInterfaceItemWan2Input is an input type that accepts GetManagementInterfaceItemWan2Args and GetManagementInterfaceItemWan2Output values.
// You can construct a concrete instance of `GetManagementInterfaceItemWan2Input` via:
//
//	GetManagementInterfaceItemWan2Args{...}
type GetManagementInterfaceItemWan2Input interface {
	pulumi.Input

	ToGetManagementInterfaceItemWan2Output() GetManagementInterfaceItemWan2Output
	ToGetManagementInterfaceItemWan2OutputWithContext(context.Context) GetManagementInterfaceItemWan2Output
}

type GetManagementInterfaceItemWan2Args struct {
	// Up to two DNS IPs.
	StaticDns pulumi.StringArrayInput `pulumi:"staticDns"`
	// The IP of the gateway on the WAN.
	StaticGatewayIp pulumi.StringInput `pulumi:"staticGatewayIp"`
	// The IP the device should use on the WAN.
	StaticIp pulumi.StringInput `pulumi:"staticIp"`
	// The subnet mask for the WAN.
	StaticSubnetMask pulumi.StringInput `pulumi:"staticSubnetMask"`
	// Configure the interface to have static IP settings or use DHCP.
	UsingStaticIp pulumi.BoolInput `pulumi:"usingStaticIp"`
	// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
	WanEnabled pulumi.StringInput `pulumi:"wanEnabled"`
}

func (GetManagementInterfaceItemWan2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemWan2)(nil)).Elem()
}

func (i GetManagementInterfaceItemWan2Args) ToGetManagementInterfaceItemWan2Output() GetManagementInterfaceItemWan2Output {
	return i.ToGetManagementInterfaceItemWan2OutputWithContext(context.Background())
}

func (i GetManagementInterfaceItemWan2Args) ToGetManagementInterfaceItemWan2OutputWithContext(ctx context.Context) GetManagementInterfaceItemWan2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementInterfaceItemWan2Output)
}

type GetManagementInterfaceItemWan2Output struct{ *pulumi.OutputState }

func (GetManagementInterfaceItemWan2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementInterfaceItemWan2)(nil)).Elem()
}

func (o GetManagementInterfaceItemWan2Output) ToGetManagementInterfaceItemWan2Output() GetManagementInterfaceItemWan2Output {
	return o
}

func (o GetManagementInterfaceItemWan2Output) ToGetManagementInterfaceItemWan2OutputWithContext(ctx context.Context) GetManagementInterfaceItemWan2Output {
	return o
}

// Up to two DNS IPs.
func (o GetManagementInterfaceItemWan2Output) StaticDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) []string { return v.StaticDns }).(pulumi.StringArrayOutput)
}

// The IP of the gateway on the WAN.
func (o GetManagementInterfaceItemWan2Output) StaticGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) string { return v.StaticGatewayIp }).(pulumi.StringOutput)
}

// The IP the device should use on the WAN.
func (o GetManagementInterfaceItemWan2Output) StaticIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) string { return v.StaticIp }).(pulumi.StringOutput)
}

// The subnet mask for the WAN.
func (o GetManagementInterfaceItemWan2Output) StaticSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) string { return v.StaticSubnetMask }).(pulumi.StringOutput)
}

// Configure the interface to have static IP settings or use DHCP.
func (o GetManagementInterfaceItemWan2Output) UsingStaticIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) bool { return v.UsingStaticIp }).(pulumi.BoolOutput)
}

// The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
func (o GetManagementInterfaceItemWan2Output) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) int { return v.Vlan }).(pulumi.IntOutput)
}

// Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
func (o GetManagementInterfaceItemWan2Output) WanEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementInterfaceItemWan2) string { return v.WanEnabled }).(pulumi.StringOutput)
}

type GetSensorRelationshipsItem struct {
	// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
	Livestream GetSensorRelationshipsItemLivestream `pulumi:"livestream"`
}

// GetSensorRelationshipsItemInput is an input type that accepts GetSensorRelationshipsItemArgs and GetSensorRelationshipsItemOutput values.
// You can construct a concrete instance of `GetSensorRelationshipsItemInput` via:
//
//	GetSensorRelationshipsItemArgs{...}
type GetSensorRelationshipsItemInput interface {
	pulumi.Input

	ToGetSensorRelationshipsItemOutput() GetSensorRelationshipsItemOutput
	ToGetSensorRelationshipsItemOutputWithContext(context.Context) GetSensorRelationshipsItemOutput
}

type GetSensorRelationshipsItemArgs struct {
	// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
	Livestream GetSensorRelationshipsItemLivestreamInput `pulumi:"livestream"`
}

func (GetSensorRelationshipsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItem)(nil)).Elem()
}

func (i GetSensorRelationshipsItemArgs) ToGetSensorRelationshipsItemOutput() GetSensorRelationshipsItemOutput {
	return i.ToGetSensorRelationshipsItemOutputWithContext(context.Background())
}

func (i GetSensorRelationshipsItemArgs) ToGetSensorRelationshipsItemOutputWithContext(ctx context.Context) GetSensorRelationshipsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorRelationshipsItemOutput)
}

type GetSensorRelationshipsItemOutput struct{ *pulumi.OutputState }

func (GetSensorRelationshipsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItem)(nil)).Elem()
}

func (o GetSensorRelationshipsItemOutput) ToGetSensorRelationshipsItemOutput() GetSensorRelationshipsItemOutput {
	return o
}

func (o GetSensorRelationshipsItemOutput) ToGetSensorRelationshipsItemOutputWithContext(ctx context.Context) GetSensorRelationshipsItemOutput {
	return o
}

// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
func (o GetSensorRelationshipsItemOutput) Livestream() GetSensorRelationshipsItemLivestreamOutput {
	return o.ApplyT(func(v GetSensorRelationshipsItem) GetSensorRelationshipsItemLivestream { return v.Livestream }).(GetSensorRelationshipsItemLivestreamOutput)
}

type GetSensorRelationshipsItemLivestream struct {
	// An array of the related devices for the role
	RelatedDevices []GetSensorRelationshipsItemLivestreamRelatedDevice `pulumi:"relatedDevices"`
}

// GetSensorRelationshipsItemLivestreamInput is an input type that accepts GetSensorRelationshipsItemLivestreamArgs and GetSensorRelationshipsItemLivestreamOutput values.
// You can construct a concrete instance of `GetSensorRelationshipsItemLivestreamInput` via:
//
//	GetSensorRelationshipsItemLivestreamArgs{...}
type GetSensorRelationshipsItemLivestreamInput interface {
	pulumi.Input

	ToGetSensorRelationshipsItemLivestreamOutput() GetSensorRelationshipsItemLivestreamOutput
	ToGetSensorRelationshipsItemLivestreamOutputWithContext(context.Context) GetSensorRelationshipsItemLivestreamOutput
}

type GetSensorRelationshipsItemLivestreamArgs struct {
	// An array of the related devices for the role
	RelatedDevices GetSensorRelationshipsItemLivestreamRelatedDeviceArrayInput `pulumi:"relatedDevices"`
}

func (GetSensorRelationshipsItemLivestreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItemLivestream)(nil)).Elem()
}

func (i GetSensorRelationshipsItemLivestreamArgs) ToGetSensorRelationshipsItemLivestreamOutput() GetSensorRelationshipsItemLivestreamOutput {
	return i.ToGetSensorRelationshipsItemLivestreamOutputWithContext(context.Background())
}

func (i GetSensorRelationshipsItemLivestreamArgs) ToGetSensorRelationshipsItemLivestreamOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorRelationshipsItemLivestreamOutput)
}

type GetSensorRelationshipsItemLivestreamOutput struct{ *pulumi.OutputState }

func (GetSensorRelationshipsItemLivestreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItemLivestream)(nil)).Elem()
}

func (o GetSensorRelationshipsItemLivestreamOutput) ToGetSensorRelationshipsItemLivestreamOutput() GetSensorRelationshipsItemLivestreamOutput {
	return o
}

func (o GetSensorRelationshipsItemLivestreamOutput) ToGetSensorRelationshipsItemLivestreamOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamOutput {
	return o
}

// An array of the related devices for the role
func (o GetSensorRelationshipsItemLivestreamOutput) RelatedDevices() GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput {
	return o.ApplyT(func(v GetSensorRelationshipsItemLivestream) []GetSensorRelationshipsItemLivestreamRelatedDevice {
		return v.RelatedDevices
	}).(GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput)
}

type GetSensorRelationshipsItemLivestreamRelatedDevice struct {
	// The product type of the related device
	ProductType string `pulumi:"productType"`
	// The serial of the related device
	Serial string `pulumi:"serial"`
}

// GetSensorRelationshipsItemLivestreamRelatedDeviceInput is an input type that accepts GetSensorRelationshipsItemLivestreamRelatedDeviceArgs and GetSensorRelationshipsItemLivestreamRelatedDeviceOutput values.
// You can construct a concrete instance of `GetSensorRelationshipsItemLivestreamRelatedDeviceInput` via:
//
//	GetSensorRelationshipsItemLivestreamRelatedDeviceArgs{...}
type GetSensorRelationshipsItemLivestreamRelatedDeviceInput interface {
	pulumi.Input

	ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceOutput
	ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutputWithContext(context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceOutput
}

type GetSensorRelationshipsItemLivestreamRelatedDeviceArgs struct {
	// The product type of the related device
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The serial of the related device
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetSensorRelationshipsItemLivestreamRelatedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItemLivestreamRelatedDevice)(nil)).Elem()
}

func (i GetSensorRelationshipsItemLivestreamRelatedDeviceArgs) ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceOutput {
	return i.ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutputWithContext(context.Background())
}

func (i GetSensorRelationshipsItemLivestreamRelatedDeviceArgs) ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorRelationshipsItemLivestreamRelatedDeviceOutput)
}

// GetSensorRelationshipsItemLivestreamRelatedDeviceArrayInput is an input type that accepts GetSensorRelationshipsItemLivestreamRelatedDeviceArray and GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput values.
// You can construct a concrete instance of `GetSensorRelationshipsItemLivestreamRelatedDeviceArrayInput` via:
//
//	GetSensorRelationshipsItemLivestreamRelatedDeviceArray{ GetSensorRelationshipsItemLivestreamRelatedDeviceArgs{...} }
type GetSensorRelationshipsItemLivestreamRelatedDeviceArrayInput interface {
	pulumi.Input

	ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput
	ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutputWithContext(context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput
}

type GetSensorRelationshipsItemLivestreamRelatedDeviceArray []GetSensorRelationshipsItemLivestreamRelatedDeviceInput

func (GetSensorRelationshipsItemLivestreamRelatedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorRelationshipsItemLivestreamRelatedDevice)(nil)).Elem()
}

func (i GetSensorRelationshipsItemLivestreamRelatedDeviceArray) ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput {
	return i.ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutputWithContext(context.Background())
}

func (i GetSensorRelationshipsItemLivestreamRelatedDeviceArray) ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput)
}

type GetSensorRelationshipsItemLivestreamRelatedDeviceOutput struct{ *pulumi.OutputState }

func (GetSensorRelationshipsItemLivestreamRelatedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorRelationshipsItemLivestreamRelatedDevice)(nil)).Elem()
}

func (o GetSensorRelationshipsItemLivestreamRelatedDeviceOutput) ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceOutput {
	return o
}

func (o GetSensorRelationshipsItemLivestreamRelatedDeviceOutput) ToGetSensorRelationshipsItemLivestreamRelatedDeviceOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceOutput {
	return o
}

// The product type of the related device
func (o GetSensorRelationshipsItemLivestreamRelatedDeviceOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorRelationshipsItemLivestreamRelatedDevice) string { return v.ProductType }).(pulumi.StringOutput)
}

// The serial of the related device
func (o GetSensorRelationshipsItemLivestreamRelatedDeviceOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorRelationshipsItemLivestreamRelatedDevice) string { return v.Serial }).(pulumi.StringOutput)
}

type GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorRelationshipsItemLivestreamRelatedDevice)(nil)).Elem()
}

func (o GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput) ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput() GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput {
	return o
}

func (o GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput) ToGetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutputWithContext(ctx context.Context) GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput {
	return o
}

func (o GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput) Index(i pulumi.IntInput) GetSensorRelationshipsItemLivestreamRelatedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorRelationshipsItemLivestreamRelatedDevice {
		return vs[0].([]GetSensorRelationshipsItemLivestreamRelatedDevice)[vs[1].(int)]
	}).(GetSensorRelationshipsItemLivestreamRelatedDeviceOutput)
}

type GetSwitchPortsItem struct {
	// The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
	AccessPolicyNumber int `pulumi:"accessPolicyNumber"`
	// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType string `pulumi:"accessPolicyType"`
	// The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
	AdaptivePolicyGroupId string `pulumi:"adaptivePolicyGroupId"`
	// The VLANs allowed on the switch port. Only applicable to trunk ports.
	AllowedVlans string `pulumi:"allowedVlans"`
	// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
	DaiTrusted bool `pulumi:"daiTrusted"`
	// The status of the switch port.
	Enabled bool `pulumi:"enabled"`
	// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
	FlexibleStackingEnabled bool `pulumi:"flexibleStackingEnabled"`
	// The isolation status of the switch port.
	IsolationEnabled bool `pulumi:"isolationEnabled"`
	// The link speed for the switch port.
	LinkNegotiation string `pulumi:"linkNegotiation"`
	// Available link speeds for the switch port.
	LinkNegotiationCapabilities []string `pulumi:"linkNegotiationCapabilities"`
	// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
	MacAllowLists []string `pulumi:"macAllowLists"`
	// Port mirror
	Mirror GetSwitchPortsItemMirror `pulumi:"mirror"`
	// Expansion module
	Module GetSwitchPortsItemModule `pulumi:"module"`
	// The name of the switch port.
	Name string `pulumi:"name"`
	// If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
	PeerSgtCapable bool `pulumi:"peerSgtCapable"`
	// The PoE status of the switch port.
	PoeEnabled bool `pulumi:"poeEnabled"`
	// The identifier of the switch port.
	PortId string `pulumi:"portId"`
	// The ID of the port schedule. A value of null will clear the port schedule.
	PortScheduleId string `pulumi:"portScheduleId"`
	// Profile attributes
	Profile GetSwitchPortsItemProfile `pulumi:"profile"`
	// The rapid spanning tree protocol status.
	RstpEnabled bool `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit int `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists []string `pulumi:"stickyMacAllowLists"`
	// The storm control status of the switch port.
	StormControlEnabled bool `pulumi:"stormControlEnabled"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard string `pulumi:"stpGuard"`
	// The list of tags of the switch port.
	Tags []string `pulumi:"tags"`
	// The type of the switch port ('trunk' or 'access').
	Type string `pulumi:"type"`
	// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
	Udld string `pulumi:"udld"`
	// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan int `pulumi:"vlan"`
	// The voice VLAN of the switch port. Only applicable to access ports.
	VoiceVlan int `pulumi:"voiceVlan"`
}

// GetSwitchPortsItemInput is an input type that accepts GetSwitchPortsItemArgs and GetSwitchPortsItemOutput values.
// You can construct a concrete instance of `GetSwitchPortsItemInput` via:
//
//	GetSwitchPortsItemArgs{...}
type GetSwitchPortsItemInput interface {
	pulumi.Input

	ToGetSwitchPortsItemOutput() GetSwitchPortsItemOutput
	ToGetSwitchPortsItemOutputWithContext(context.Context) GetSwitchPortsItemOutput
}

type GetSwitchPortsItemArgs struct {
	// The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
	AccessPolicyNumber pulumi.IntInput `pulumi:"accessPolicyNumber"`
	// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType pulumi.StringInput `pulumi:"accessPolicyType"`
	// The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
	AdaptivePolicyGroupId pulumi.StringInput `pulumi:"adaptivePolicyGroupId"`
	// The VLANs allowed on the switch port. Only applicable to trunk ports.
	AllowedVlans pulumi.StringInput `pulumi:"allowedVlans"`
	// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
	DaiTrusted pulumi.BoolInput `pulumi:"daiTrusted"`
	// The status of the switch port.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
	FlexibleStackingEnabled pulumi.BoolInput `pulumi:"flexibleStackingEnabled"`
	// The isolation status of the switch port.
	IsolationEnabled pulumi.BoolInput `pulumi:"isolationEnabled"`
	// The link speed for the switch port.
	LinkNegotiation pulumi.StringInput `pulumi:"linkNegotiation"`
	// Available link speeds for the switch port.
	LinkNegotiationCapabilities pulumi.StringArrayInput `pulumi:"linkNegotiationCapabilities"`
	// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
	MacAllowLists pulumi.StringArrayInput `pulumi:"macAllowLists"`
	// Port mirror
	Mirror GetSwitchPortsItemMirrorInput `pulumi:"mirror"`
	// Expansion module
	Module GetSwitchPortsItemModuleInput `pulumi:"module"`
	// The name of the switch port.
	Name pulumi.StringInput `pulumi:"name"`
	// If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
	PeerSgtCapable pulumi.BoolInput `pulumi:"peerSgtCapable"`
	// The PoE status of the switch port.
	PoeEnabled pulumi.BoolInput `pulumi:"poeEnabled"`
	// The identifier of the switch port.
	PortId pulumi.StringInput `pulumi:"portId"`
	// The ID of the port schedule. A value of null will clear the port schedule.
	PortScheduleId pulumi.StringInput `pulumi:"portScheduleId"`
	// Profile attributes
	Profile GetSwitchPortsItemProfileInput `pulumi:"profile"`
	// The rapid spanning tree protocol status.
	RstpEnabled pulumi.BoolInput `pulumi:"rstpEnabled"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit pulumi.IntInput `pulumi:"stickyMacAllowListLimit"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowLists pulumi.StringArrayInput `pulumi:"stickyMacAllowLists"`
	// The storm control status of the switch port.
	StormControlEnabled pulumi.BoolInput `pulumi:"stormControlEnabled"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard pulumi.StringInput `pulumi:"stpGuard"`
	// The list of tags of the switch port.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of the switch port ('trunk' or 'access').
	Type pulumi.StringInput `pulumi:"type"`
	// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
	Udld pulumi.StringInput `pulumi:"udld"`
	// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// The voice VLAN of the switch port. Only applicable to access ports.
	VoiceVlan pulumi.IntInput `pulumi:"voiceVlan"`
}

func (GetSwitchPortsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItem)(nil)).Elem()
}

func (i GetSwitchPortsItemArgs) ToGetSwitchPortsItemOutput() GetSwitchPortsItemOutput {
	return i.ToGetSwitchPortsItemOutputWithContext(context.Background())
}

func (i GetSwitchPortsItemArgs) ToGetSwitchPortsItemOutputWithContext(ctx context.Context) GetSwitchPortsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsItemOutput)
}

// GetSwitchPortsItemArrayInput is an input type that accepts GetSwitchPortsItemArray and GetSwitchPortsItemArrayOutput values.
// You can construct a concrete instance of `GetSwitchPortsItemArrayInput` via:
//
//	GetSwitchPortsItemArray{ GetSwitchPortsItemArgs{...} }
type GetSwitchPortsItemArrayInput interface {
	pulumi.Input

	ToGetSwitchPortsItemArrayOutput() GetSwitchPortsItemArrayOutput
	ToGetSwitchPortsItemArrayOutputWithContext(context.Context) GetSwitchPortsItemArrayOutput
}

type GetSwitchPortsItemArray []GetSwitchPortsItemInput

func (GetSwitchPortsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsItem)(nil)).Elem()
}

func (i GetSwitchPortsItemArray) ToGetSwitchPortsItemArrayOutput() GetSwitchPortsItemArrayOutput {
	return i.ToGetSwitchPortsItemArrayOutputWithContext(context.Background())
}

func (i GetSwitchPortsItemArray) ToGetSwitchPortsItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsItemArrayOutput)
}

type GetSwitchPortsItemOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItem)(nil)).Elem()
}

func (o GetSwitchPortsItemOutput) ToGetSwitchPortsItemOutput() GetSwitchPortsItemOutput {
	return o
}

func (o GetSwitchPortsItemOutput) ToGetSwitchPortsItemOutputWithContext(ctx context.Context) GetSwitchPortsItemOutput {
	return o
}

// The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
func (o GetSwitchPortsItemOutput) AccessPolicyNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) int { return v.AccessPolicyNumber }).(pulumi.IntOutput)
}

// The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
func (o GetSwitchPortsItemOutput) AccessPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.AccessPolicyType }).(pulumi.StringOutput)
}

// The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
func (o GetSwitchPortsItemOutput) AdaptivePolicyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.AdaptivePolicyGroupId }).(pulumi.StringOutput)
}

// The VLANs allowed on the switch port. Only applicable to trunk ports.
func (o GetSwitchPortsItemOutput) AllowedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.AllowedVlans }).(pulumi.StringOutput)
}

// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
func (o GetSwitchPortsItemOutput) DaiTrusted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.DaiTrusted }).(pulumi.BoolOutput)
}

// The status of the switch port.
func (o GetSwitchPortsItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
func (o GetSwitchPortsItemOutput) FlexibleStackingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.FlexibleStackingEnabled }).(pulumi.BoolOutput)
}

// The isolation status of the switch port.
func (o GetSwitchPortsItemOutput) IsolationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.IsolationEnabled }).(pulumi.BoolOutput)
}

// The link speed for the switch port.
func (o GetSwitchPortsItemOutput) LinkNegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.LinkNegotiation }).(pulumi.StringOutput)
}

// Available link speeds for the switch port.
func (o GetSwitchPortsItemOutput) LinkNegotiationCapabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) []string { return v.LinkNegotiationCapabilities }).(pulumi.StringArrayOutput)
}

// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
func (o GetSwitchPortsItemOutput) MacAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) []string { return v.MacAllowLists }).(pulumi.StringArrayOutput)
}

// Port mirror
func (o GetSwitchPortsItemOutput) Mirror() GetSwitchPortsItemMirrorOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) GetSwitchPortsItemMirror { return v.Mirror }).(GetSwitchPortsItemMirrorOutput)
}

// Expansion module
func (o GetSwitchPortsItemOutput) Module() GetSwitchPortsItemModuleOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) GetSwitchPortsItemModule { return v.Module }).(GetSwitchPortsItemModuleOutput)
}

// The name of the switch port.
func (o GetSwitchPortsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.Name }).(pulumi.StringOutput)
}

// If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
func (o GetSwitchPortsItemOutput) PeerSgtCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.PeerSgtCapable }).(pulumi.BoolOutput)
}

// The PoE status of the switch port.
func (o GetSwitchPortsItemOutput) PoeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.PoeEnabled }).(pulumi.BoolOutput)
}

// The identifier of the switch port.
func (o GetSwitchPortsItemOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.PortId }).(pulumi.StringOutput)
}

// The ID of the port schedule. A value of null will clear the port schedule.
func (o GetSwitchPortsItemOutput) PortScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.PortScheduleId }).(pulumi.StringOutput)
}

// Profile attributes
func (o GetSwitchPortsItemOutput) Profile() GetSwitchPortsItemProfileOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) GetSwitchPortsItemProfile { return v.Profile }).(GetSwitchPortsItemProfileOutput)
}

// The rapid spanning tree protocol status.
func (o GetSwitchPortsItemOutput) RstpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.RstpEnabled }).(pulumi.BoolOutput)
}

// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetSwitchPortsItemOutput) StickyMacAllowListLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) int { return v.StickyMacAllowListLimit }).(pulumi.IntOutput)
}

// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
func (o GetSwitchPortsItemOutput) StickyMacAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) []string { return v.StickyMacAllowLists }).(pulumi.StringArrayOutput)
}

// The storm control status of the switch port.
func (o GetSwitchPortsItemOutput) StormControlEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) bool { return v.StormControlEnabled }).(pulumi.BoolOutput)
}

// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
func (o GetSwitchPortsItemOutput) StpGuard() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.StpGuard }).(pulumi.StringOutput)
}

// The list of tags of the switch port.
func (o GetSwitchPortsItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the switch port ('trunk' or 'access').
func (o GetSwitchPortsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.Type }).(pulumi.StringOutput)
}

// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
func (o GetSwitchPortsItemOutput) Udld() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) string { return v.Udld }).(pulumi.StringOutput)
}

// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
func (o GetSwitchPortsItemOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) int { return v.Vlan }).(pulumi.IntOutput)
}

// The voice VLAN of the switch port. Only applicable to access ports.
func (o GetSwitchPortsItemOutput) VoiceVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsItem) int { return v.VoiceVlan }).(pulumi.IntOutput)
}

type GetSwitchPortsItemArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsItem)(nil)).Elem()
}

func (o GetSwitchPortsItemArrayOutput) ToGetSwitchPortsItemArrayOutput() GetSwitchPortsItemArrayOutput {
	return o
}

func (o GetSwitchPortsItemArrayOutput) ToGetSwitchPortsItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsItemArrayOutput {
	return o
}

func (o GetSwitchPortsItemArrayOutput) Index(i pulumi.IntInput) GetSwitchPortsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchPortsItem {
		return vs[0].([]GetSwitchPortsItem)[vs[1].(int)]
	}).(GetSwitchPortsItemOutput)
}

type GetSwitchPortsItemMirror struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode string `pulumi:"mode"`
}

// GetSwitchPortsItemMirrorInput is an input type that accepts GetSwitchPortsItemMirrorArgs and GetSwitchPortsItemMirrorOutput values.
// You can construct a concrete instance of `GetSwitchPortsItemMirrorInput` via:
//
//	GetSwitchPortsItemMirrorArgs{...}
type GetSwitchPortsItemMirrorInput interface {
	pulumi.Input

	ToGetSwitchPortsItemMirrorOutput() GetSwitchPortsItemMirrorOutput
	ToGetSwitchPortsItemMirrorOutputWithContext(context.Context) GetSwitchPortsItemMirrorOutput
}

type GetSwitchPortsItemMirrorArgs struct {
	// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetSwitchPortsItemMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemMirror)(nil)).Elem()
}

func (i GetSwitchPortsItemMirrorArgs) ToGetSwitchPortsItemMirrorOutput() GetSwitchPortsItemMirrorOutput {
	return i.ToGetSwitchPortsItemMirrorOutputWithContext(context.Background())
}

func (i GetSwitchPortsItemMirrorArgs) ToGetSwitchPortsItemMirrorOutputWithContext(ctx context.Context) GetSwitchPortsItemMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsItemMirrorOutput)
}

type GetSwitchPortsItemMirrorOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsItemMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemMirror)(nil)).Elem()
}

func (o GetSwitchPortsItemMirrorOutput) ToGetSwitchPortsItemMirrorOutput() GetSwitchPortsItemMirrorOutput {
	return o
}

func (o GetSwitchPortsItemMirrorOutput) ToGetSwitchPortsItemMirrorOutputWithContext(ctx context.Context) GetSwitchPortsItemMirrorOutput {
	return o
}

// The port mirror mode. Can be one of ('Destination port', 'Source port' or 'Not mirroring traffic').
func (o GetSwitchPortsItemMirrorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItemMirror) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSwitchPortsItemModule struct {
	// The model of the expansion module.
	Model string `pulumi:"model"`
}

// GetSwitchPortsItemModuleInput is an input type that accepts GetSwitchPortsItemModuleArgs and GetSwitchPortsItemModuleOutput values.
// You can construct a concrete instance of `GetSwitchPortsItemModuleInput` via:
//
//	GetSwitchPortsItemModuleArgs{...}
type GetSwitchPortsItemModuleInput interface {
	pulumi.Input

	ToGetSwitchPortsItemModuleOutput() GetSwitchPortsItemModuleOutput
	ToGetSwitchPortsItemModuleOutputWithContext(context.Context) GetSwitchPortsItemModuleOutput
}

type GetSwitchPortsItemModuleArgs struct {
	// The model of the expansion module.
	Model pulumi.StringInput `pulumi:"model"`
}

func (GetSwitchPortsItemModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemModule)(nil)).Elem()
}

func (i GetSwitchPortsItemModuleArgs) ToGetSwitchPortsItemModuleOutput() GetSwitchPortsItemModuleOutput {
	return i.ToGetSwitchPortsItemModuleOutputWithContext(context.Background())
}

func (i GetSwitchPortsItemModuleArgs) ToGetSwitchPortsItemModuleOutputWithContext(ctx context.Context) GetSwitchPortsItemModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsItemModuleOutput)
}

type GetSwitchPortsItemModuleOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsItemModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemModule)(nil)).Elem()
}

func (o GetSwitchPortsItemModuleOutput) ToGetSwitchPortsItemModuleOutput() GetSwitchPortsItemModuleOutput {
	return o
}

func (o GetSwitchPortsItemModuleOutput) ToGetSwitchPortsItemModuleOutputWithContext(ctx context.Context) GetSwitchPortsItemModuleOutput {
	return o
}

// The model of the expansion module.
func (o GetSwitchPortsItemModuleOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItemModule) string { return v.Model }).(pulumi.StringOutput)
}

type GetSwitchPortsItemProfile struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled bool `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id string `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname string `pulumi:"iname"`
}

// GetSwitchPortsItemProfileInput is an input type that accepts GetSwitchPortsItemProfileArgs and GetSwitchPortsItemProfileOutput values.
// You can construct a concrete instance of `GetSwitchPortsItemProfileInput` via:
//
//	GetSwitchPortsItemProfileArgs{...}
type GetSwitchPortsItemProfileInput interface {
	pulumi.Input

	ToGetSwitchPortsItemProfileOutput() GetSwitchPortsItemProfileOutput
	ToGetSwitchPortsItemProfileOutputWithContext(context.Context) GetSwitchPortsItemProfileOutput
}

type GetSwitchPortsItemProfileArgs struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// When enabled, the IName of the profile.
	Iname pulumi.StringInput `pulumi:"iname"`
}

func (GetSwitchPortsItemProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemProfile)(nil)).Elem()
}

func (i GetSwitchPortsItemProfileArgs) ToGetSwitchPortsItemProfileOutput() GetSwitchPortsItemProfileOutput {
	return i.ToGetSwitchPortsItemProfileOutputWithContext(context.Background())
}

func (i GetSwitchPortsItemProfileArgs) ToGetSwitchPortsItemProfileOutputWithContext(ctx context.Context) GetSwitchPortsItemProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsItemProfileOutput)
}

type GetSwitchPortsItemProfileOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsItemProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsItemProfile)(nil)).Elem()
}

func (o GetSwitchPortsItemProfileOutput) ToGetSwitchPortsItemProfileOutput() GetSwitchPortsItemProfileOutput {
	return o
}

func (o GetSwitchPortsItemProfileOutput) ToGetSwitchPortsItemProfileOutputWithContext(ctx context.Context) GetSwitchPortsItemProfileOutput {
	return o
}

// When enabled, override this port's configuration with a port profile.
func (o GetSwitchPortsItemProfileOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsItemProfile) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// When enabled, the ID of the port profile used to override the port's configuration.
func (o GetSwitchPortsItemProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItemProfile) string { return v.Id }).(pulumi.StringOutput)
}

// When enabled, the IName of the profile.
func (o GetSwitchPortsItemProfileOutput) Iname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsItemProfile) string { return v.Iname }).(pulumi.StringOutput)
}

type GetSwitchPortsStatusesItem struct {
	// The Cisco Discovery Protocol (CDP) information of the connected device.
	Cdp GetSwitchPortsStatusesItemCdp `pulumi:"cdp"`
	// The number of clients connected through this port.
	ClientCount int `pulumi:"clientCount"`
	// The current duplex of a connected port.
	Duplex string `pulumi:"duplex"`
	// Whether the port is configured to be enabled.
	Enabled bool `pulumi:"enabled"`
	// All errors present on the port.
	Errors []string `pulumi:"errors"`
	// Whether the port is the switch's uplink.
	IsUplink bool `pulumi:"isUplink"`
	// The Link Layer Discovery Protocol (LLDP) information of the connected device.
	Lldp GetSwitchPortsStatusesItemLldp `pulumi:"lldp"`
	// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
	PortId string `pulumi:"portId"`
	// How much power (in watt-hours) has been delivered by this port during the timespan.
	PowerUsageInWh float64 `pulumi:"powerUsageInWh"`
	// The Secure Port status of the port.
	SecurePort GetSwitchPortsStatusesItemSecurePort `pulumi:"securePort"`
	// The Spanning Tree Protocol (STP) information of the connected device.
	SpanningTree GetSwitchPortsStatusesItemSpanningTree `pulumi:"spanningTree"`
	// The current data transfer rate which the port is operating at.
	Speed string `pulumi:"speed"`
	// The current connection status of the port.
	Status string `pulumi:"status"`
	// A breakdown of the average speed of data that has passed through this port during the timespan.
	TrafficInKbps GetSwitchPortsStatusesItemTrafficInKbps `pulumi:"trafficInKbps"`
	// A breakdown of how many kilobytes have passed through this port during the timespan.
	UsageInKb GetSwitchPortsStatusesItemUsageInKb `pulumi:"usageInKb"`
	// All warnings present on the port.
	Warnings []string `pulumi:"warnings"`
}

// GetSwitchPortsStatusesItemInput is an input type that accepts GetSwitchPortsStatusesItemArgs and GetSwitchPortsStatusesItemOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemInput` via:
//
//	GetSwitchPortsStatusesItemArgs{...}
type GetSwitchPortsStatusesItemInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemOutput() GetSwitchPortsStatusesItemOutput
	ToGetSwitchPortsStatusesItemOutputWithContext(context.Context) GetSwitchPortsStatusesItemOutput
}

type GetSwitchPortsStatusesItemArgs struct {
	// The Cisco Discovery Protocol (CDP) information of the connected device.
	Cdp GetSwitchPortsStatusesItemCdpInput `pulumi:"cdp"`
	// The number of clients connected through this port.
	ClientCount pulumi.IntInput `pulumi:"clientCount"`
	// The current duplex of a connected port.
	Duplex pulumi.StringInput `pulumi:"duplex"`
	// Whether the port is configured to be enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// All errors present on the port.
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// Whether the port is the switch's uplink.
	IsUplink pulumi.BoolInput `pulumi:"isUplink"`
	// The Link Layer Discovery Protocol (LLDP) information of the connected device.
	Lldp GetSwitchPortsStatusesItemLldpInput `pulumi:"lldp"`
	// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
	PortId pulumi.StringInput `pulumi:"portId"`
	// How much power (in watt-hours) has been delivered by this port during the timespan.
	PowerUsageInWh pulumi.Float64Input `pulumi:"powerUsageInWh"`
	// The Secure Port status of the port.
	SecurePort GetSwitchPortsStatusesItemSecurePortInput `pulumi:"securePort"`
	// The Spanning Tree Protocol (STP) information of the connected device.
	SpanningTree GetSwitchPortsStatusesItemSpanningTreeInput `pulumi:"spanningTree"`
	// The current data transfer rate which the port is operating at.
	Speed pulumi.StringInput `pulumi:"speed"`
	// The current connection status of the port.
	Status pulumi.StringInput `pulumi:"status"`
	// A breakdown of the average speed of data that has passed through this port during the timespan.
	TrafficInKbps GetSwitchPortsStatusesItemTrafficInKbpsInput `pulumi:"trafficInKbps"`
	// A breakdown of how many kilobytes have passed through this port during the timespan.
	UsageInKb GetSwitchPortsStatusesItemUsageInKbInput `pulumi:"usageInKb"`
	// All warnings present on the port.
	Warnings pulumi.StringArrayInput `pulumi:"warnings"`
}

func (GetSwitchPortsStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItem)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemArgs) ToGetSwitchPortsStatusesItemOutput() GetSwitchPortsStatusesItemOutput {
	return i.ToGetSwitchPortsStatusesItemOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemArgs) ToGetSwitchPortsStatusesItemOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemOutput)
}

// GetSwitchPortsStatusesItemArrayInput is an input type that accepts GetSwitchPortsStatusesItemArray and GetSwitchPortsStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemArrayInput` via:
//
//	GetSwitchPortsStatusesItemArray{ GetSwitchPortsStatusesItemArgs{...} }
type GetSwitchPortsStatusesItemArrayInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemArrayOutput() GetSwitchPortsStatusesItemArrayOutput
	ToGetSwitchPortsStatusesItemArrayOutputWithContext(context.Context) GetSwitchPortsStatusesItemArrayOutput
}

type GetSwitchPortsStatusesItemArray []GetSwitchPortsStatusesItemInput

func (GetSwitchPortsStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsStatusesItem)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemArray) ToGetSwitchPortsStatusesItemArrayOutput() GetSwitchPortsStatusesItemArrayOutput {
	return i.ToGetSwitchPortsStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemArray) ToGetSwitchPortsStatusesItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemArrayOutput)
}

type GetSwitchPortsStatusesItemOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItem)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemOutput) ToGetSwitchPortsStatusesItemOutput() GetSwitchPortsStatusesItemOutput {
	return o
}

func (o GetSwitchPortsStatusesItemOutput) ToGetSwitchPortsStatusesItemOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemOutput {
	return o
}

// The Cisco Discovery Protocol (CDP) information of the connected device.
func (o GetSwitchPortsStatusesItemOutput) Cdp() GetSwitchPortsStatusesItemCdpOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemCdp { return v.Cdp }).(GetSwitchPortsStatusesItemCdpOutput)
}

// The number of clients connected through this port.
func (o GetSwitchPortsStatusesItemOutput) ClientCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) int { return v.ClientCount }).(pulumi.IntOutput)
}

// The current duplex of a connected port.
func (o GetSwitchPortsStatusesItemOutput) Duplex() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) string { return v.Duplex }).(pulumi.StringOutput)
}

// Whether the port is configured to be enabled.
func (o GetSwitchPortsStatusesItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// All errors present on the port.
func (o GetSwitchPortsStatusesItemOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// Whether the port is the switch's uplink.
func (o GetSwitchPortsStatusesItemOutput) IsUplink() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) bool { return v.IsUplink }).(pulumi.BoolOutput)
}

// The Link Layer Discovery Protocol (LLDP) information of the connected device.
func (o GetSwitchPortsStatusesItemOutput) Lldp() GetSwitchPortsStatusesItemLldpOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemLldp { return v.Lldp }).(GetSwitchPortsStatusesItemLldpOutput)
}

// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
func (o GetSwitchPortsStatusesItemOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) string { return v.PortId }).(pulumi.StringOutput)
}

// How much power (in watt-hours) has been delivered by this port during the timespan.
func (o GetSwitchPortsStatusesItemOutput) PowerUsageInWh() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) float64 { return v.PowerUsageInWh }).(pulumi.Float64Output)
}

// The Secure Port status of the port.
func (o GetSwitchPortsStatusesItemOutput) SecurePort() GetSwitchPortsStatusesItemSecurePortOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemSecurePort { return v.SecurePort }).(GetSwitchPortsStatusesItemSecurePortOutput)
}

// The Spanning Tree Protocol (STP) information of the connected device.
func (o GetSwitchPortsStatusesItemOutput) SpanningTree() GetSwitchPortsStatusesItemSpanningTreeOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemSpanningTree { return v.SpanningTree }).(GetSwitchPortsStatusesItemSpanningTreeOutput)
}

// The current data transfer rate which the port is operating at.
func (o GetSwitchPortsStatusesItemOutput) Speed() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) string { return v.Speed }).(pulumi.StringOutput)
}

// The current connection status of the port.
func (o GetSwitchPortsStatusesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) string { return v.Status }).(pulumi.StringOutput)
}

// A breakdown of the average speed of data that has passed through this port during the timespan.
func (o GetSwitchPortsStatusesItemOutput) TrafficInKbps() GetSwitchPortsStatusesItemTrafficInKbpsOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemTrafficInKbps { return v.TrafficInKbps }).(GetSwitchPortsStatusesItemTrafficInKbpsOutput)
}

// A breakdown of how many kilobytes have passed through this port during the timespan.
func (o GetSwitchPortsStatusesItemOutput) UsageInKb() GetSwitchPortsStatusesItemUsageInKbOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) GetSwitchPortsStatusesItemUsageInKb { return v.UsageInKb }).(GetSwitchPortsStatusesItemUsageInKbOutput)
}

// All warnings present on the port.
func (o GetSwitchPortsStatusesItemOutput) Warnings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItem) []string { return v.Warnings }).(pulumi.StringArrayOutput)
}

type GetSwitchPortsStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchPortsStatusesItem)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemArrayOutput) ToGetSwitchPortsStatusesItemArrayOutput() GetSwitchPortsStatusesItemArrayOutput {
	return o
}

func (o GetSwitchPortsStatusesItemArrayOutput) ToGetSwitchPortsStatusesItemArrayOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemArrayOutput {
	return o
}

func (o GetSwitchPortsStatusesItemArrayOutput) Index(i pulumi.IntInput) GetSwitchPortsStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchPortsStatusesItem {
		return vs[0].([]GetSwitchPortsStatusesItem)[vs[1].(int)]
	}).(GetSwitchPortsStatusesItemOutput)
}

type GetSwitchPortsStatusesItemCdp struct {
	// Contains network addresses of both receiving and sending devices.
	Address string `pulumi:"address"`
	// Identifies the device type, which indicates the functional capabilities of the device.
	Capabilities string `pulumi:"capabilities"`
	// Identifies the device name.
	DeviceId string `pulumi:"deviceId"`
	// The device's management IP.
	ManagementAddress string `pulumi:"managementAddress"`
	// Indicates, per interface, the assumed VLAN for untagged packets on the interface.
	NativeVlan int `pulumi:"nativeVlan"`
	// Identifies the hardware platform of the device.
	Platform string `pulumi:"platform"`
	// Identifies the port from which the CDP packet was sent.
	PortId string `pulumi:"portId"`
	// The system name.
	SystemName string `pulumi:"systemName"`
	// Contains the device software release information.
	Version string `pulumi:"version"`
	// Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
	VtpManagementDomain string `pulumi:"vtpManagementDomain"`
}

// GetSwitchPortsStatusesItemCdpInput is an input type that accepts GetSwitchPortsStatusesItemCdpArgs and GetSwitchPortsStatusesItemCdpOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemCdpInput` via:
//
//	GetSwitchPortsStatusesItemCdpArgs{...}
type GetSwitchPortsStatusesItemCdpInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemCdpOutput() GetSwitchPortsStatusesItemCdpOutput
	ToGetSwitchPortsStatusesItemCdpOutputWithContext(context.Context) GetSwitchPortsStatusesItemCdpOutput
}

type GetSwitchPortsStatusesItemCdpArgs struct {
	// Contains network addresses of both receiving and sending devices.
	Address pulumi.StringInput `pulumi:"address"`
	// Identifies the device type, which indicates the functional capabilities of the device.
	Capabilities pulumi.StringInput `pulumi:"capabilities"`
	// Identifies the device name.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The device's management IP.
	ManagementAddress pulumi.StringInput `pulumi:"managementAddress"`
	// Indicates, per interface, the assumed VLAN for untagged packets on the interface.
	NativeVlan pulumi.IntInput `pulumi:"nativeVlan"`
	// Identifies the hardware platform of the device.
	Platform pulumi.StringInput `pulumi:"platform"`
	// Identifies the port from which the CDP packet was sent.
	PortId pulumi.StringInput `pulumi:"portId"`
	// The system name.
	SystemName pulumi.StringInput `pulumi:"systemName"`
	// Contains the device software release information.
	Version pulumi.StringInput `pulumi:"version"`
	// Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
	VtpManagementDomain pulumi.StringInput `pulumi:"vtpManagementDomain"`
}

func (GetSwitchPortsStatusesItemCdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemCdp)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemCdpArgs) ToGetSwitchPortsStatusesItemCdpOutput() GetSwitchPortsStatusesItemCdpOutput {
	return i.ToGetSwitchPortsStatusesItemCdpOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemCdpArgs) ToGetSwitchPortsStatusesItemCdpOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemCdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemCdpOutput)
}

type GetSwitchPortsStatusesItemCdpOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemCdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemCdp)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemCdpOutput) ToGetSwitchPortsStatusesItemCdpOutput() GetSwitchPortsStatusesItemCdpOutput {
	return o
}

func (o GetSwitchPortsStatusesItemCdpOutput) ToGetSwitchPortsStatusesItemCdpOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemCdpOutput {
	return o
}

// Contains network addresses of both receiving and sending devices.
func (o GetSwitchPortsStatusesItemCdpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.Address }).(pulumi.StringOutput)
}

// Identifies the device type, which indicates the functional capabilities of the device.
func (o GetSwitchPortsStatusesItemCdpOutput) Capabilities() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.Capabilities }).(pulumi.StringOutput)
}

// Identifies the device name.
func (o GetSwitchPortsStatusesItemCdpOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.DeviceId }).(pulumi.StringOutput)
}

// The device's management IP.
func (o GetSwitchPortsStatusesItemCdpOutput) ManagementAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.ManagementAddress }).(pulumi.StringOutput)
}

// Indicates, per interface, the assumed VLAN for untagged packets on the interface.
func (o GetSwitchPortsStatusesItemCdpOutput) NativeVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) int { return v.NativeVlan }).(pulumi.IntOutput)
}

// Identifies the hardware platform of the device.
func (o GetSwitchPortsStatusesItemCdpOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.Platform }).(pulumi.StringOutput)
}

// Identifies the port from which the CDP packet was sent.
func (o GetSwitchPortsStatusesItemCdpOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.PortId }).(pulumi.StringOutput)
}

// The system name.
func (o GetSwitchPortsStatusesItemCdpOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.SystemName }).(pulumi.StringOutput)
}

// Contains the device software release information.
func (o GetSwitchPortsStatusesItemCdpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.Version }).(pulumi.StringOutput)
}

// Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
func (o GetSwitchPortsStatusesItemCdpOutput) VtpManagementDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemCdp) string { return v.VtpManagementDomain }).(pulumi.StringOutput)
}

type GetSwitchPortsStatusesItemLldp struct {
	// The device's chassis ID.
	ChassisId string `pulumi:"chassisId"`
	// The device's management IP.
	ManagementAddress string `pulumi:"managementAddress"`
	// The device's management VLAN.
	ManagementVlan int `pulumi:"managementVlan"`
	// Description of the port from which the LLDP packet was sent.
	PortDescription string `pulumi:"portDescription"`
	// Identifies the port from which the LLDP packet was sent
	PortId string `pulumi:"portId"`
	// The port's VLAN.
	PortVlan int `pulumi:"portVlan"`
	// Identifies the device type, which indicates the functional capabilities of the device.
	SystemCapabilities string `pulumi:"systemCapabilities"`
	// The device's system description.
	SystemDescription string `pulumi:"systemDescription"`
	// The device's system name.
	SystemName string `pulumi:"systemName"`
}

// GetSwitchPortsStatusesItemLldpInput is an input type that accepts GetSwitchPortsStatusesItemLldpArgs and GetSwitchPortsStatusesItemLldpOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemLldpInput` via:
//
//	GetSwitchPortsStatusesItemLldpArgs{...}
type GetSwitchPortsStatusesItemLldpInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemLldpOutput() GetSwitchPortsStatusesItemLldpOutput
	ToGetSwitchPortsStatusesItemLldpOutputWithContext(context.Context) GetSwitchPortsStatusesItemLldpOutput
}

type GetSwitchPortsStatusesItemLldpArgs struct {
	// The device's chassis ID.
	ChassisId pulumi.StringInput `pulumi:"chassisId"`
	// The device's management IP.
	ManagementAddress pulumi.StringInput `pulumi:"managementAddress"`
	// The device's management VLAN.
	ManagementVlan pulumi.IntInput `pulumi:"managementVlan"`
	// Description of the port from which the LLDP packet was sent.
	PortDescription pulumi.StringInput `pulumi:"portDescription"`
	// Identifies the port from which the LLDP packet was sent
	PortId pulumi.StringInput `pulumi:"portId"`
	// The port's VLAN.
	PortVlan pulumi.IntInput `pulumi:"portVlan"`
	// Identifies the device type, which indicates the functional capabilities of the device.
	SystemCapabilities pulumi.StringInput `pulumi:"systemCapabilities"`
	// The device's system description.
	SystemDescription pulumi.StringInput `pulumi:"systemDescription"`
	// The device's system name.
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (GetSwitchPortsStatusesItemLldpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemLldp)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemLldpArgs) ToGetSwitchPortsStatusesItemLldpOutput() GetSwitchPortsStatusesItemLldpOutput {
	return i.ToGetSwitchPortsStatusesItemLldpOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemLldpArgs) ToGetSwitchPortsStatusesItemLldpOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemLldpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemLldpOutput)
}

type GetSwitchPortsStatusesItemLldpOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemLldpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemLldp)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemLldpOutput) ToGetSwitchPortsStatusesItemLldpOutput() GetSwitchPortsStatusesItemLldpOutput {
	return o
}

func (o GetSwitchPortsStatusesItemLldpOutput) ToGetSwitchPortsStatusesItemLldpOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemLldpOutput {
	return o
}

// The device's chassis ID.
func (o GetSwitchPortsStatusesItemLldpOutput) ChassisId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.ChassisId }).(pulumi.StringOutput)
}

// The device's management IP.
func (o GetSwitchPortsStatusesItemLldpOutput) ManagementAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.ManagementAddress }).(pulumi.StringOutput)
}

// The device's management VLAN.
func (o GetSwitchPortsStatusesItemLldpOutput) ManagementVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) int { return v.ManagementVlan }).(pulumi.IntOutput)
}

// Description of the port from which the LLDP packet was sent.
func (o GetSwitchPortsStatusesItemLldpOutput) PortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.PortDescription }).(pulumi.StringOutput)
}

// Identifies the port from which the LLDP packet was sent
func (o GetSwitchPortsStatusesItemLldpOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.PortId }).(pulumi.StringOutput)
}

// The port's VLAN.
func (o GetSwitchPortsStatusesItemLldpOutput) PortVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) int { return v.PortVlan }).(pulumi.IntOutput)
}

// Identifies the device type, which indicates the functional capabilities of the device.
func (o GetSwitchPortsStatusesItemLldpOutput) SystemCapabilities() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.SystemCapabilities }).(pulumi.StringOutput)
}

// The device's system description.
func (o GetSwitchPortsStatusesItemLldpOutput) SystemDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.SystemDescription }).(pulumi.StringOutput)
}

// The device's system name.
func (o GetSwitchPortsStatusesItemLldpOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemLldp) string { return v.SystemName }).(pulumi.StringOutput)
}

type GetSwitchPortsStatusesItemSecurePort struct {
	// Whether Secure Port is currently active for this port.
	Active bool `pulumi:"active"`
	// The current Secure Port status.
	AuthenticationStatus string `pulumi:"authenticationStatus"`
	// The configuration overrides applied to this port when Secure Port is active.
	ConfigOverrides GetSwitchPortsStatusesItemSecurePortConfigOverrides `pulumi:"configOverrides"`
	// Whether Secure Port is turned on for this port.
	Enabled bool `pulumi:"enabled"`
}

// GetSwitchPortsStatusesItemSecurePortInput is an input type that accepts GetSwitchPortsStatusesItemSecurePortArgs and GetSwitchPortsStatusesItemSecurePortOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemSecurePortInput` via:
//
//	GetSwitchPortsStatusesItemSecurePortArgs{...}
type GetSwitchPortsStatusesItemSecurePortInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemSecurePortOutput() GetSwitchPortsStatusesItemSecurePortOutput
	ToGetSwitchPortsStatusesItemSecurePortOutputWithContext(context.Context) GetSwitchPortsStatusesItemSecurePortOutput
}

type GetSwitchPortsStatusesItemSecurePortArgs struct {
	// Whether Secure Port is currently active for this port.
	Active pulumi.BoolInput `pulumi:"active"`
	// The current Secure Port status.
	AuthenticationStatus pulumi.StringInput `pulumi:"authenticationStatus"`
	// The configuration overrides applied to this port when Secure Port is active.
	ConfigOverrides GetSwitchPortsStatusesItemSecurePortConfigOverridesInput `pulumi:"configOverrides"`
	// Whether Secure Port is turned on for this port.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetSwitchPortsStatusesItemSecurePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePort)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemSecurePortArgs) ToGetSwitchPortsStatusesItemSecurePortOutput() GetSwitchPortsStatusesItemSecurePortOutput {
	return i.ToGetSwitchPortsStatusesItemSecurePortOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemSecurePortArgs) ToGetSwitchPortsStatusesItemSecurePortOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSecurePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemSecurePortOutput)
}

type GetSwitchPortsStatusesItemSecurePortOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemSecurePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePort)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemSecurePortOutput) ToGetSwitchPortsStatusesItemSecurePortOutput() GetSwitchPortsStatusesItemSecurePortOutput {
	return o
}

func (o GetSwitchPortsStatusesItemSecurePortOutput) ToGetSwitchPortsStatusesItemSecurePortOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSecurePortOutput {
	return o
}

// Whether Secure Port is currently active for this port.
func (o GetSwitchPortsStatusesItemSecurePortOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePort) bool { return v.Active }).(pulumi.BoolOutput)
}

// The current Secure Port status.
func (o GetSwitchPortsStatusesItemSecurePortOutput) AuthenticationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePort) string { return v.AuthenticationStatus }).(pulumi.StringOutput)
}

// The configuration overrides applied to this port when Secure Port is active.
func (o GetSwitchPortsStatusesItemSecurePortOutput) ConfigOverrides() GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePort) GetSwitchPortsStatusesItemSecurePortConfigOverrides {
		return v.ConfigOverrides
	}).(GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput)
}

// Whether Secure Port is turned on for this port.
func (o GetSwitchPortsStatusesItemSecurePortOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePort) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetSwitchPortsStatusesItemSecurePortConfigOverrides struct {
	// The VLANs allowed on the . Only applicable to trunk ports.
	AllowedVlans string `pulumi:"allowedVlans"`
	// The type of the  ('trunk' or 'access').
	Type string `pulumi:"type"`
	// The VLAN of the . For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan int `pulumi:"vlan"`
	// The voice VLAN of the . Only applicable to access ports.
	VoiceVlan int `pulumi:"voiceVlan"`
}

// GetSwitchPortsStatusesItemSecurePortConfigOverridesInput is an input type that accepts GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs and GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemSecurePortConfigOverridesInput` via:
//
//	GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs{...}
type GetSwitchPortsStatusesItemSecurePortConfigOverridesInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutput() GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput
	ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutputWithContext(context.Context) GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput
}

type GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs struct {
	// The VLANs allowed on the . Only applicable to trunk ports.
	AllowedVlans pulumi.StringInput `pulumi:"allowedVlans"`
	// The type of the  ('trunk' or 'access').
	Type pulumi.StringInput `pulumi:"type"`
	// The VLAN of the . For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// The voice VLAN of the . Only applicable to access ports.
	VoiceVlan pulumi.IntInput `pulumi:"voiceVlan"`
}

func (GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePortConfigOverrides)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs) ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutput() GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput {
	return i.ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs) ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput)
}

type GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePortConfigOverrides)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutput() GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput {
	return o
}

func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) ToGetSwitchPortsStatusesItemSecurePortConfigOverridesOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput {
	return o
}

// The VLANs allowed on the . Only applicable to trunk ports.
func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) AllowedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePortConfigOverrides) string { return v.AllowedVlans }).(pulumi.StringOutput)
}

// The type of the  ('trunk' or 'access').
func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePortConfigOverrides) string { return v.Type }).(pulumi.StringOutput)
}

// The VLAN of the . For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePortConfigOverrides) int { return v.Vlan }).(pulumi.IntOutput)
}

// The voice VLAN of the . Only applicable to access ports.
func (o GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput) VoiceVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSecurePortConfigOverrides) int { return v.VoiceVlan }).(pulumi.IntOutput)
}

type GetSwitchPortsStatusesItemSpanningTree struct {
	// The current Spanning Tree Protocol statuses of the port.
	Statuses []string `pulumi:"statuses"`
}

// GetSwitchPortsStatusesItemSpanningTreeInput is an input type that accepts GetSwitchPortsStatusesItemSpanningTreeArgs and GetSwitchPortsStatusesItemSpanningTreeOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemSpanningTreeInput` via:
//
//	GetSwitchPortsStatusesItemSpanningTreeArgs{...}
type GetSwitchPortsStatusesItemSpanningTreeInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemSpanningTreeOutput() GetSwitchPortsStatusesItemSpanningTreeOutput
	ToGetSwitchPortsStatusesItemSpanningTreeOutputWithContext(context.Context) GetSwitchPortsStatusesItemSpanningTreeOutput
}

type GetSwitchPortsStatusesItemSpanningTreeArgs struct {
	// The current Spanning Tree Protocol statuses of the port.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetSwitchPortsStatusesItemSpanningTreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSpanningTree)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemSpanningTreeArgs) ToGetSwitchPortsStatusesItemSpanningTreeOutput() GetSwitchPortsStatusesItemSpanningTreeOutput {
	return i.ToGetSwitchPortsStatusesItemSpanningTreeOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemSpanningTreeArgs) ToGetSwitchPortsStatusesItemSpanningTreeOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSpanningTreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemSpanningTreeOutput)
}

type GetSwitchPortsStatusesItemSpanningTreeOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemSpanningTreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemSpanningTree)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemSpanningTreeOutput) ToGetSwitchPortsStatusesItemSpanningTreeOutput() GetSwitchPortsStatusesItemSpanningTreeOutput {
	return o
}

func (o GetSwitchPortsStatusesItemSpanningTreeOutput) ToGetSwitchPortsStatusesItemSpanningTreeOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemSpanningTreeOutput {
	return o
}

// The current Spanning Tree Protocol statuses of the port.
func (o GetSwitchPortsStatusesItemSpanningTreeOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemSpanningTree) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

type GetSwitchPortsStatusesItemTrafficInKbps struct {
	// The average speed of the data received (in kilobits-per-second).
	Recv float64 `pulumi:"recv"`
	// The average speed of the data sent (in kilobits-per-second).
	Sent float64 `pulumi:"sent"`
	// The average speed of the data sent and received (in kilobits-per-second).
	Total float64 `pulumi:"total"`
}

// GetSwitchPortsStatusesItemTrafficInKbpsInput is an input type that accepts GetSwitchPortsStatusesItemTrafficInKbpsArgs and GetSwitchPortsStatusesItemTrafficInKbpsOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemTrafficInKbpsInput` via:
//
//	GetSwitchPortsStatusesItemTrafficInKbpsArgs{...}
type GetSwitchPortsStatusesItemTrafficInKbpsInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemTrafficInKbpsOutput() GetSwitchPortsStatusesItemTrafficInKbpsOutput
	ToGetSwitchPortsStatusesItemTrafficInKbpsOutputWithContext(context.Context) GetSwitchPortsStatusesItemTrafficInKbpsOutput
}

type GetSwitchPortsStatusesItemTrafficInKbpsArgs struct {
	// The average speed of the data received (in kilobits-per-second).
	Recv pulumi.Float64Input `pulumi:"recv"`
	// The average speed of the data sent (in kilobits-per-second).
	Sent pulumi.Float64Input `pulumi:"sent"`
	// The average speed of the data sent and received (in kilobits-per-second).
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetSwitchPortsStatusesItemTrafficInKbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemTrafficInKbps)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemTrafficInKbpsArgs) ToGetSwitchPortsStatusesItemTrafficInKbpsOutput() GetSwitchPortsStatusesItemTrafficInKbpsOutput {
	return i.ToGetSwitchPortsStatusesItemTrafficInKbpsOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemTrafficInKbpsArgs) ToGetSwitchPortsStatusesItemTrafficInKbpsOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemTrafficInKbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemTrafficInKbpsOutput)
}

type GetSwitchPortsStatusesItemTrafficInKbpsOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemTrafficInKbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemTrafficInKbps)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemTrafficInKbpsOutput) ToGetSwitchPortsStatusesItemTrafficInKbpsOutput() GetSwitchPortsStatusesItemTrafficInKbpsOutput {
	return o
}

func (o GetSwitchPortsStatusesItemTrafficInKbpsOutput) ToGetSwitchPortsStatusesItemTrafficInKbpsOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemTrafficInKbpsOutput {
	return o
}

// The average speed of the data received (in kilobits-per-second).
func (o GetSwitchPortsStatusesItemTrafficInKbpsOutput) Recv() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemTrafficInKbps) float64 { return v.Recv }).(pulumi.Float64Output)
}

// The average speed of the data sent (in kilobits-per-second).
func (o GetSwitchPortsStatusesItemTrafficInKbpsOutput) Sent() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemTrafficInKbps) float64 { return v.Sent }).(pulumi.Float64Output)
}

// The average speed of the data sent and received (in kilobits-per-second).
func (o GetSwitchPortsStatusesItemTrafficInKbpsOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemTrafficInKbps) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetSwitchPortsStatusesItemUsageInKb struct {
	// The amount of data received (in kilobytes).
	Recv int `pulumi:"recv"`
	// The amount of data sent (in kilobytes).
	Sent int `pulumi:"sent"`
	// The total amount of data sent and received (in kilobytes).
	Total int `pulumi:"total"`
}

// GetSwitchPortsStatusesItemUsageInKbInput is an input type that accepts GetSwitchPortsStatusesItemUsageInKbArgs and GetSwitchPortsStatusesItemUsageInKbOutput values.
// You can construct a concrete instance of `GetSwitchPortsStatusesItemUsageInKbInput` via:
//
//	GetSwitchPortsStatusesItemUsageInKbArgs{...}
type GetSwitchPortsStatusesItemUsageInKbInput interface {
	pulumi.Input

	ToGetSwitchPortsStatusesItemUsageInKbOutput() GetSwitchPortsStatusesItemUsageInKbOutput
	ToGetSwitchPortsStatusesItemUsageInKbOutputWithContext(context.Context) GetSwitchPortsStatusesItemUsageInKbOutput
}

type GetSwitchPortsStatusesItemUsageInKbArgs struct {
	// The amount of data received (in kilobytes).
	Recv pulumi.IntInput `pulumi:"recv"`
	// The amount of data sent (in kilobytes).
	Sent pulumi.IntInput `pulumi:"sent"`
	// The total amount of data sent and received (in kilobytes).
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetSwitchPortsStatusesItemUsageInKbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemUsageInKb)(nil)).Elem()
}

func (i GetSwitchPortsStatusesItemUsageInKbArgs) ToGetSwitchPortsStatusesItemUsageInKbOutput() GetSwitchPortsStatusesItemUsageInKbOutput {
	return i.ToGetSwitchPortsStatusesItemUsageInKbOutputWithContext(context.Background())
}

func (i GetSwitchPortsStatusesItemUsageInKbArgs) ToGetSwitchPortsStatusesItemUsageInKbOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemUsageInKbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchPortsStatusesItemUsageInKbOutput)
}

type GetSwitchPortsStatusesItemUsageInKbOutput struct{ *pulumi.OutputState }

func (GetSwitchPortsStatusesItemUsageInKbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchPortsStatusesItemUsageInKb)(nil)).Elem()
}

func (o GetSwitchPortsStatusesItemUsageInKbOutput) ToGetSwitchPortsStatusesItemUsageInKbOutput() GetSwitchPortsStatusesItemUsageInKbOutput {
	return o
}

func (o GetSwitchPortsStatusesItemUsageInKbOutput) ToGetSwitchPortsStatusesItemUsageInKbOutputWithContext(ctx context.Context) GetSwitchPortsStatusesItemUsageInKbOutput {
	return o
}

// The amount of data received (in kilobytes).
func (o GetSwitchPortsStatusesItemUsageInKbOutput) Recv() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemUsageInKb) int { return v.Recv }).(pulumi.IntOutput)
}

// The amount of data sent (in kilobytes).
func (o GetSwitchPortsStatusesItemUsageInKbOutput) Sent() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemUsageInKb) int { return v.Sent }).(pulumi.IntOutput)
}

// The total amount of data sent and received (in kilobytes).
func (o GetSwitchPortsStatusesItemUsageInKbOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchPortsStatusesItemUsageInKb) int { return v.Total }).(pulumi.IntOutput)
}

type GetSwitchRoutingInterfacesDhcpItem struct {
	// The PXE boot server file name for the DHCP server running on the switch stack interface
	BootFileName string `pulumi:"bootFileName"`
	// The PXE boot server IP for the DHCP server running on the switch stack interface
	BootNextServer string `pulumi:"bootNextServer"`
	// Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface
	BootOptionsEnabled bool `pulumi:"bootOptionsEnabled"`
	// The DHCP lease time config for the dhcp server running on the switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
	DhcpLeaseTime string `pulumi:"dhcpLeaseTime"`
	// The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
	DhcpMode string `pulumi:"dhcpMode"`
	// Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface
	DhcpOptions []GetSwitchRoutingInterfacesDhcpItemDhcpOption `pulumi:"dhcpOptions"`
	// The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface
	DhcpRelayServerIps []string `pulumi:"dhcpRelayServerIps"`
	// The DHCP name server IPs when DHCP name server option is 'custom'
	DnsCustomNameservers []string `pulumi:"dnsCustomNameservers"`
	// The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')
	DnsNameserversOption string `pulumi:"dnsNameserversOption"`
	// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
	FixedIpAssignments []GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment `pulumi:"fixedIpAssignments"`
	// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
	ReservedIpRanges []GetSwitchRoutingInterfacesDhcpItemReservedIpRange `pulumi:"reservedIpRanges"`
}

// GetSwitchRoutingInterfacesDhcpItemInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemArgs and GetSwitchRoutingInterfacesDhcpItemOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemArgs{...}
type GetSwitchRoutingInterfacesDhcpItemInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemOutput() GetSwitchRoutingInterfacesDhcpItemOutput
	ToGetSwitchRoutingInterfacesDhcpItemOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemOutput
}

type GetSwitchRoutingInterfacesDhcpItemArgs struct {
	// The PXE boot server file name for the DHCP server running on the switch stack interface
	BootFileName pulumi.StringInput `pulumi:"bootFileName"`
	// The PXE boot server IP for the DHCP server running on the switch stack interface
	BootNextServer pulumi.StringInput `pulumi:"bootNextServer"`
	// Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface
	BootOptionsEnabled pulumi.BoolInput `pulumi:"bootOptionsEnabled"`
	// The DHCP lease time config for the dhcp server running on the switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
	DhcpLeaseTime pulumi.StringInput `pulumi:"dhcpLeaseTime"`
	// The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
	DhcpMode pulumi.StringInput `pulumi:"dhcpMode"`
	// Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface
	DhcpOptions GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayInput `pulumi:"dhcpOptions"`
	// The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface
	DhcpRelayServerIps pulumi.StringArrayInput `pulumi:"dhcpRelayServerIps"`
	// The DHCP name server IPs when DHCP name server option is 'custom'
	DnsCustomNameservers pulumi.StringArrayInput `pulumi:"dnsCustomNameservers"`
	// The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')
	DnsNameserversOption pulumi.StringInput `pulumi:"dnsNameserversOption"`
	// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
	FixedIpAssignments GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayInput `pulumi:"fixedIpAssignments"`
	// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
	ReservedIpRanges GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayInput `pulumi:"reservedIpRanges"`
}

func (GetSwitchRoutingInterfacesDhcpItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItem)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemArgs) ToGetSwitchRoutingInterfacesDhcpItemOutput() GetSwitchRoutingInterfacesDhcpItemOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemArgs) ToGetSwitchRoutingInterfacesDhcpItemOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemOutput)
}

type GetSwitchRoutingInterfacesDhcpItemOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItem)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemOutput) ToGetSwitchRoutingInterfacesDhcpItemOutput() GetSwitchRoutingInterfacesDhcpItemOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemOutput) ToGetSwitchRoutingInterfacesDhcpItemOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemOutput {
	return o
}

// The PXE boot server file name for the DHCP server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) BootFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) string { return v.BootFileName }).(pulumi.StringOutput)
}

// The PXE boot server IP for the DHCP server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) BootNextServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) string { return v.BootNextServer }).(pulumi.StringOutput)
}

// Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) BootOptionsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) bool { return v.BootOptionsEnabled }).(pulumi.BoolOutput)
}

// The DHCP lease time config for the dhcp server running on the switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DhcpLeaseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) string { return v.DhcpLeaseTime }).(pulumi.StringOutput)
}

// The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DhcpMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) string { return v.DhcpMode }).(pulumi.StringOutput)
}

// Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DhcpOptions() GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) []GetSwitchRoutingInterfacesDhcpItemDhcpOption {
		return v.DhcpOptions
	}).(GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput)
}

// The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DhcpRelayServerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) []string { return v.DhcpRelayServerIps }).(pulumi.StringArrayOutput)
}

// The DHCP name server IPs when DHCP name server option is 'custom'
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DnsCustomNameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) []string { return v.DnsCustomNameservers }).(pulumi.StringArrayOutput)
}

// The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')
func (o GetSwitchRoutingInterfacesDhcpItemOutput) DnsNameserversOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) string { return v.DnsNameserversOption }).(pulumi.StringOutput)
}

// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) FixedIpAssignments() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) []GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment {
		return v.FixedIpAssignments
	}).(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput)
}

// Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
func (o GetSwitchRoutingInterfacesDhcpItemOutput) ReservedIpRanges() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItem) []GetSwitchRoutingInterfacesDhcpItemReservedIpRange {
		return v.ReservedIpRanges
	}).(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput)
}

type GetSwitchRoutingInterfacesDhcpItemDhcpOption struct {
	// The code for DHCP option which should be from 2 to 254
	Code string `pulumi:"code"`
	// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
	Type string `pulumi:"type"`
	// The value of the DHCP option
	Value string `pulumi:"value"`
}

// GetSwitchRoutingInterfacesDhcpItemDhcpOptionInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs and GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemDhcpOptionInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs{...}
type GetSwitchRoutingInterfacesDhcpItemDhcpOptionInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput
	ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput
}

type GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs struct {
	// The code for DHCP option which should be from 2 to 254
	Code pulumi.StringInput `pulumi:"code"`
	// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the DHCP option
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemDhcpOption)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput)
}

// GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray and GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray{ GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs{...} }
type GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput
	ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput
}

type GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray []GetSwitchRoutingInterfacesDhcpItemDhcpOptionInput

func (GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemDhcpOption)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput)
}

type GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemDhcpOption)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput {
	return o
}

// The code for DHCP option which should be from 2 to 254
func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemDhcpOption) string { return v.Code }).(pulumi.StringOutput)
}

// The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemDhcpOption) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the DHCP option
func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemDhcpOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemDhcpOption)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput() GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput) Index(i pulumi.IntInput) GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchRoutingInterfacesDhcpItemDhcpOption {
		return vs[0].([]GetSwitchRoutingInterfacesDhcpItemDhcpOption)[vs[1].(int)]
	}).(GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput)
}

type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment struct {
	// The IP address of the client which has fixed IP address assigned to it
	Ip string `pulumi:"ip"`
	// The MAC address of the client which has fixed IP address
	Mac string `pulumi:"mac"`
	// The name of the client which has fixed IP address
	Name string `pulumi:"name"`
}

// GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs and GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs{...}
type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput
	ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput
}

type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs struct {
	// The IP address of the client which has fixed IP address assigned to it
	Ip pulumi.StringInput `pulumi:"ip"`
	// The MAC address of the client which has fixed IP address
	Mac pulumi.StringInput `pulumi:"mac"`
	// The name of the client which has fixed IP address
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput)
}

// GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray and GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray{ GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs{...} }
type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput
	ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput
}

type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray []GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentInput

func (GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput)
}

type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput {
	return o
}

// The IP address of the client which has fixed IP address assigned to it
func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment) string { return v.Ip }).(pulumi.StringOutput)
}

// The MAC address of the client which has fixed IP address
func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment) string { return v.Mac }).(pulumi.StringOutput)
}

// The name of the client which has fixed IP address
func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment) string { return v.Name }).(pulumi.StringOutput)
}

type GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput() GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput) Index(i pulumi.IntInput) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment {
		return vs[0].([]GetSwitchRoutingInterfacesDhcpItemFixedIpAssignment)[vs[1].(int)]
	}).(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput)
}

type GetSwitchRoutingInterfacesDhcpItemReservedIpRange struct {
	// The comment for the reserved IP range
	Comment string `pulumi:"comment"`
	// The ending IP address of the reserved IP range
	End string `pulumi:"end"`
	// The starting IP address of the reserved IP range
	Start string `pulumi:"start"`
}

// GetSwitchRoutingInterfacesDhcpItemReservedIpRangeInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs and GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemReservedIpRangeInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs{...}
type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput
	ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput
}

type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs struct {
	// The comment for the reserved IP range
	Comment pulumi.StringInput `pulumi:"comment"`
	// The ending IP address of the reserved IP range
	End pulumi.StringInput `pulumi:"end"`
	// The starting IP address of the reserved IP range
	Start pulumi.StringInput `pulumi:"start"`
}

func (GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemReservedIpRange)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput)
}

// GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayInput is an input type that accepts GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray and GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayInput` via:
//
//	GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray{ GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs{...} }
type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput
	ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutputWithContext(context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput
}

type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray []GetSwitchRoutingInterfacesDhcpItemReservedIpRangeInput

func (GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemReservedIpRange)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput {
	return i.ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput)
}

type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemReservedIpRange)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput {
	return o
}

// The comment for the reserved IP range
func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemReservedIpRange) string { return v.Comment }).(pulumi.StringOutput)
}

// The ending IP address of the reserved IP range
func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemReservedIpRange) string { return v.End }).(pulumi.StringOutput)
}

// The starting IP address of the reserved IP range
func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesDhcpItemReservedIpRange) string { return v.Start }).(pulumi.StringOutput)
}

type GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesDhcpItemReservedIpRange)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput() GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput) ToGetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput) Index(i pulumi.IntInput) GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchRoutingInterfacesDhcpItemReservedIpRange {
		return vs[0].([]GetSwitchRoutingInterfacesDhcpItemReservedIpRange)[vs[1].(int)]
	}).(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput)
}

type GetSwitchRoutingInterfacesItem struct {
	// IPv4 default gateway
	DefaultGateway string `pulumi:"defaultGateway"`
	// The id
	InterfaceId string `pulumi:"interfaceId"`
	// IPv4 address
	InterfaceIp string `pulumi:"interfaceIp"`
	// IPv6 addressing
	Ipv6 GetSwitchRoutingInterfacesItemIpv6 `pulumi:"ipv6"`
	// Multicast routing status
	MulticastRouting string `pulumi:"multicastRouting"`
	// The name
	Name string `pulumi:"name"`
	// IPv4 OSPF Settings
	OspfSettings GetSwitchRoutingInterfacesItemOspfSettings `pulumi:"ospfSettings"`
	// IPv6 OSPF Settings
	OspfV3 GetSwitchRoutingInterfacesItemOspfV3 `pulumi:"ospfV3"`
	// IPv4 subnet
	Subnet string `pulumi:"subnet"`
	// VLAN id
	VlanId int `pulumi:"vlanId"`
}

// GetSwitchRoutingInterfacesItemInput is an input type that accepts GetSwitchRoutingInterfacesItemArgs and GetSwitchRoutingInterfacesItemOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesItemInput` via:
//
//	GetSwitchRoutingInterfacesItemArgs{...}
type GetSwitchRoutingInterfacesItemInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesItemOutput() GetSwitchRoutingInterfacesItemOutput
	ToGetSwitchRoutingInterfacesItemOutputWithContext(context.Context) GetSwitchRoutingInterfacesItemOutput
}

type GetSwitchRoutingInterfacesItemArgs struct {
	// IPv4 default gateway
	DefaultGateway pulumi.StringInput `pulumi:"defaultGateway"`
	// The id
	InterfaceId pulumi.StringInput `pulumi:"interfaceId"`
	// IPv4 address
	InterfaceIp pulumi.StringInput `pulumi:"interfaceIp"`
	// IPv6 addressing
	Ipv6 GetSwitchRoutingInterfacesItemIpv6Input `pulumi:"ipv6"`
	// Multicast routing status
	MulticastRouting pulumi.StringInput `pulumi:"multicastRouting"`
	// The name
	Name pulumi.StringInput `pulumi:"name"`
	// IPv4 OSPF Settings
	OspfSettings GetSwitchRoutingInterfacesItemOspfSettingsInput `pulumi:"ospfSettings"`
	// IPv6 OSPF Settings
	OspfV3 GetSwitchRoutingInterfacesItemOspfV3Input `pulumi:"ospfV3"`
	// IPv4 subnet
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// VLAN id
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetSwitchRoutingInterfacesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItem)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesItemArgs) ToGetSwitchRoutingInterfacesItemOutput() GetSwitchRoutingInterfacesItemOutput {
	return i.ToGetSwitchRoutingInterfacesItemOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesItemArgs) ToGetSwitchRoutingInterfacesItemOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesItemOutput)
}

// GetSwitchRoutingInterfacesItemArrayInput is an input type that accepts GetSwitchRoutingInterfacesItemArray and GetSwitchRoutingInterfacesItemArrayOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesItemArrayInput` via:
//
//	GetSwitchRoutingInterfacesItemArray{ GetSwitchRoutingInterfacesItemArgs{...} }
type GetSwitchRoutingInterfacesItemArrayInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesItemArrayOutput() GetSwitchRoutingInterfacesItemArrayOutput
	ToGetSwitchRoutingInterfacesItemArrayOutputWithContext(context.Context) GetSwitchRoutingInterfacesItemArrayOutput
}

type GetSwitchRoutingInterfacesItemArray []GetSwitchRoutingInterfacesItemInput

func (GetSwitchRoutingInterfacesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesItem)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesItemArray) ToGetSwitchRoutingInterfacesItemArrayOutput() GetSwitchRoutingInterfacesItemArrayOutput {
	return i.ToGetSwitchRoutingInterfacesItemArrayOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesItemArray) ToGetSwitchRoutingInterfacesItemArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesItemArrayOutput)
}

type GetSwitchRoutingInterfacesItemOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItem)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesItemOutput) ToGetSwitchRoutingInterfacesItemOutput() GetSwitchRoutingInterfacesItemOutput {
	return o
}

func (o GetSwitchRoutingInterfacesItemOutput) ToGetSwitchRoutingInterfacesItemOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOutput {
	return o
}

// IPv4 default gateway
func (o GetSwitchRoutingInterfacesItemOutput) DefaultGateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.DefaultGateway }).(pulumi.StringOutput)
}

// The id
func (o GetSwitchRoutingInterfacesItemOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.InterfaceId }).(pulumi.StringOutput)
}

// IPv4 address
func (o GetSwitchRoutingInterfacesItemOutput) InterfaceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.InterfaceIp }).(pulumi.StringOutput)
}

// IPv6 addressing
func (o GetSwitchRoutingInterfacesItemOutput) Ipv6() GetSwitchRoutingInterfacesItemIpv6Output {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) GetSwitchRoutingInterfacesItemIpv6 { return v.Ipv6 }).(GetSwitchRoutingInterfacesItemIpv6Output)
}

// Multicast routing status
func (o GetSwitchRoutingInterfacesItemOutput) MulticastRouting() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.MulticastRouting }).(pulumi.StringOutput)
}

// The name
func (o GetSwitchRoutingInterfacesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.Name }).(pulumi.StringOutput)
}

// IPv4 OSPF Settings
func (o GetSwitchRoutingInterfacesItemOutput) OspfSettings() GetSwitchRoutingInterfacesItemOspfSettingsOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) GetSwitchRoutingInterfacesItemOspfSettings {
		return v.OspfSettings
	}).(GetSwitchRoutingInterfacesItemOspfSettingsOutput)
}

// IPv6 OSPF Settings
func (o GetSwitchRoutingInterfacesItemOutput) OspfV3() GetSwitchRoutingInterfacesItemOspfV3Output {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) GetSwitchRoutingInterfacesItemOspfV3 { return v.OspfV3 }).(GetSwitchRoutingInterfacesItemOspfV3Output)
}

// IPv4 subnet
func (o GetSwitchRoutingInterfacesItemOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) string { return v.Subnet }).(pulumi.StringOutput)
}

// VLAN id
func (o GetSwitchRoutingInterfacesItemOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItem) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetSwitchRoutingInterfacesItemArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingInterfacesItem)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesItemArrayOutput) ToGetSwitchRoutingInterfacesItemArrayOutput() GetSwitchRoutingInterfacesItemArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesItemArrayOutput) ToGetSwitchRoutingInterfacesItemArrayOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemArrayOutput {
	return o
}

func (o GetSwitchRoutingInterfacesItemArrayOutput) Index(i pulumi.IntInput) GetSwitchRoutingInterfacesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchRoutingInterfacesItem {
		return vs[0].([]GetSwitchRoutingInterfacesItem)[vs[1].(int)]
	}).(GetSwitchRoutingInterfacesItemOutput)
}

type GetSwitchRoutingInterfacesItemIpv6 struct {
	// IPv6 address
	Address string `pulumi:"address"`
	// Assignment mode
	AssignmentMode string `pulumi:"assignmentMode"`
	// IPv6 gateway
	Gateway string `pulumi:"gateway"`
	// IPv6 subnet
	Prefix string `pulumi:"prefix"`
}

// GetSwitchRoutingInterfacesItemIpv6Input is an input type that accepts GetSwitchRoutingInterfacesItemIpv6Args and GetSwitchRoutingInterfacesItemIpv6Output values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesItemIpv6Input` via:
//
//	GetSwitchRoutingInterfacesItemIpv6Args{...}
type GetSwitchRoutingInterfacesItemIpv6Input interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesItemIpv6Output() GetSwitchRoutingInterfacesItemIpv6Output
	ToGetSwitchRoutingInterfacesItemIpv6OutputWithContext(context.Context) GetSwitchRoutingInterfacesItemIpv6Output
}

type GetSwitchRoutingInterfacesItemIpv6Args struct {
	// IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// Assignment mode
	AssignmentMode pulumi.StringInput `pulumi:"assignmentMode"`
	// IPv6 gateway
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IPv6 subnet
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetSwitchRoutingInterfacesItemIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemIpv6)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesItemIpv6Args) ToGetSwitchRoutingInterfacesItemIpv6Output() GetSwitchRoutingInterfacesItemIpv6Output {
	return i.ToGetSwitchRoutingInterfacesItemIpv6OutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesItemIpv6Args) ToGetSwitchRoutingInterfacesItemIpv6OutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesItemIpv6Output)
}

type GetSwitchRoutingInterfacesItemIpv6Output struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesItemIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemIpv6)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesItemIpv6Output) ToGetSwitchRoutingInterfacesItemIpv6Output() GetSwitchRoutingInterfacesItemIpv6Output {
	return o
}

func (o GetSwitchRoutingInterfacesItemIpv6Output) ToGetSwitchRoutingInterfacesItemIpv6OutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemIpv6Output {
	return o
}

// IPv6 address
func (o GetSwitchRoutingInterfacesItemIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemIpv6) string { return v.Address }).(pulumi.StringOutput)
}

// Assignment mode
func (o GetSwitchRoutingInterfacesItemIpv6Output) AssignmentMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemIpv6) string { return v.AssignmentMode }).(pulumi.StringOutput)
}

// IPv6 gateway
func (o GetSwitchRoutingInterfacesItemIpv6Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemIpv6) string { return v.Gateway }).(pulumi.StringOutput)
}

// IPv6 subnet
func (o GetSwitchRoutingInterfacesItemIpv6Output) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemIpv6) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetSwitchRoutingInterfacesItemOspfSettings struct {
	// Area id
	Area string `pulumi:"area"`
	// OSPF Cost
	Cost int `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv4 area
	IsPassiveEnabled bool `pulumi:"isPassiveEnabled"`
}

// GetSwitchRoutingInterfacesItemOspfSettingsInput is an input type that accepts GetSwitchRoutingInterfacesItemOspfSettingsArgs and GetSwitchRoutingInterfacesItemOspfSettingsOutput values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesItemOspfSettingsInput` via:
//
//	GetSwitchRoutingInterfacesItemOspfSettingsArgs{...}
type GetSwitchRoutingInterfacesItemOspfSettingsInput interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesItemOspfSettingsOutput() GetSwitchRoutingInterfacesItemOspfSettingsOutput
	ToGetSwitchRoutingInterfacesItemOspfSettingsOutputWithContext(context.Context) GetSwitchRoutingInterfacesItemOspfSettingsOutput
}

type GetSwitchRoutingInterfacesItemOspfSettingsArgs struct {
	// Area id
	Area pulumi.StringInput `pulumi:"area"`
	// OSPF Cost
	Cost pulumi.IntInput `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv4 area
	IsPassiveEnabled pulumi.BoolInput `pulumi:"isPassiveEnabled"`
}

func (GetSwitchRoutingInterfacesItemOspfSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfSettings)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesItemOspfSettingsArgs) ToGetSwitchRoutingInterfacesItemOspfSettingsOutput() GetSwitchRoutingInterfacesItemOspfSettingsOutput {
	return i.ToGetSwitchRoutingInterfacesItemOspfSettingsOutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesItemOspfSettingsArgs) ToGetSwitchRoutingInterfacesItemOspfSettingsOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOspfSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesItemOspfSettingsOutput)
}

type GetSwitchRoutingInterfacesItemOspfSettingsOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesItemOspfSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfSettings)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesItemOspfSettingsOutput) ToGetSwitchRoutingInterfacesItemOspfSettingsOutput() GetSwitchRoutingInterfacesItemOspfSettingsOutput {
	return o
}

func (o GetSwitchRoutingInterfacesItemOspfSettingsOutput) ToGetSwitchRoutingInterfacesItemOspfSettingsOutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOspfSettingsOutput {
	return o
}

// Area id
func (o GetSwitchRoutingInterfacesItemOspfSettingsOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfSettings) string { return v.Area }).(pulumi.StringOutput)
}

// OSPF Cost
func (o GetSwitchRoutingInterfacesItemOspfSettingsOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfSettings) int { return v.Cost }).(pulumi.IntOutput)
}

// Disable sending Hello packets on this interface's IPv4 area
func (o GetSwitchRoutingInterfacesItemOspfSettingsOutput) IsPassiveEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfSettings) bool { return v.IsPassiveEnabled }).(pulumi.BoolOutput)
}

type GetSwitchRoutingInterfacesItemOspfV3 struct {
	// Area id
	Area string `pulumi:"area"`
	// OSPF Cost
	Cost int `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv6 area
	IsPassiveEnabled bool `pulumi:"isPassiveEnabled"`
}

// GetSwitchRoutingInterfacesItemOspfV3Input is an input type that accepts GetSwitchRoutingInterfacesItemOspfV3Args and GetSwitchRoutingInterfacesItemOspfV3Output values.
// You can construct a concrete instance of `GetSwitchRoutingInterfacesItemOspfV3Input` via:
//
//	GetSwitchRoutingInterfacesItemOspfV3Args{...}
type GetSwitchRoutingInterfacesItemOspfV3Input interface {
	pulumi.Input

	ToGetSwitchRoutingInterfacesItemOspfV3Output() GetSwitchRoutingInterfacesItemOspfV3Output
	ToGetSwitchRoutingInterfacesItemOspfV3OutputWithContext(context.Context) GetSwitchRoutingInterfacesItemOspfV3Output
}

type GetSwitchRoutingInterfacesItemOspfV3Args struct {
	// Area id
	Area pulumi.StringInput `pulumi:"area"`
	// OSPF Cost
	Cost pulumi.IntInput `pulumi:"cost"`
	// Disable sending Hello packets on this interface's IPv6 area
	IsPassiveEnabled pulumi.BoolInput `pulumi:"isPassiveEnabled"`
}

func (GetSwitchRoutingInterfacesItemOspfV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfV3)(nil)).Elem()
}

func (i GetSwitchRoutingInterfacesItemOspfV3Args) ToGetSwitchRoutingInterfacesItemOspfV3Output() GetSwitchRoutingInterfacesItemOspfV3Output {
	return i.ToGetSwitchRoutingInterfacesItemOspfV3OutputWithContext(context.Background())
}

func (i GetSwitchRoutingInterfacesItemOspfV3Args) ToGetSwitchRoutingInterfacesItemOspfV3OutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOspfV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingInterfacesItemOspfV3Output)
}

type GetSwitchRoutingInterfacesItemOspfV3Output struct{ *pulumi.OutputState }

func (GetSwitchRoutingInterfacesItemOspfV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfV3)(nil)).Elem()
}

func (o GetSwitchRoutingInterfacesItemOspfV3Output) ToGetSwitchRoutingInterfacesItemOspfV3Output() GetSwitchRoutingInterfacesItemOspfV3Output {
	return o
}

func (o GetSwitchRoutingInterfacesItemOspfV3Output) ToGetSwitchRoutingInterfacesItemOspfV3OutputWithContext(ctx context.Context) GetSwitchRoutingInterfacesItemOspfV3Output {
	return o
}

// Area id
func (o GetSwitchRoutingInterfacesItemOspfV3Output) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfV3) string { return v.Area }).(pulumi.StringOutput)
}

// OSPF Cost
func (o GetSwitchRoutingInterfacesItemOspfV3Output) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfV3) int { return v.Cost }).(pulumi.IntOutput)
}

// Disable sending Hello packets on this interface's IPv6 area
func (o GetSwitchRoutingInterfacesItemOspfV3Output) IsPassiveEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchRoutingInterfacesItemOspfV3) bool { return v.IsPassiveEnabled }).(pulumi.BoolOutput)
}

type GetSwitchRoutingStaticRoutesItem struct {
	// Option to advertise static routes via OSPF
	AdvertiseViaOspfEnabled bool `pulumi:"advertiseViaOspfEnabled"`
	// The name or description of the layer 3 static route
	Name string `pulumi:"name"`
	// The IP address of the router to which traffic for this destination network should be sent
	NextHopIp string `pulumi:"nextHopIp"`
	// Option to prefer static routes over OSPF routes
	PreferOverOspfRoutesEnabled bool `pulumi:"preferOverOspfRoutesEnabled"`
	// The identifier of a layer 3 static route
	StaticRouteId string `pulumi:"staticRouteId"`
	// The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
	Subnet string `pulumi:"subnet"`
}

// GetSwitchRoutingStaticRoutesItemInput is an input type that accepts GetSwitchRoutingStaticRoutesItemArgs and GetSwitchRoutingStaticRoutesItemOutput values.
// You can construct a concrete instance of `GetSwitchRoutingStaticRoutesItemInput` via:
//
//	GetSwitchRoutingStaticRoutesItemArgs{...}
type GetSwitchRoutingStaticRoutesItemInput interface {
	pulumi.Input

	ToGetSwitchRoutingStaticRoutesItemOutput() GetSwitchRoutingStaticRoutesItemOutput
	ToGetSwitchRoutingStaticRoutesItemOutputWithContext(context.Context) GetSwitchRoutingStaticRoutesItemOutput
}

type GetSwitchRoutingStaticRoutesItemArgs struct {
	// Option to advertise static routes via OSPF
	AdvertiseViaOspfEnabled pulumi.BoolInput `pulumi:"advertiseViaOspfEnabled"`
	// The name or description of the layer 3 static route
	Name pulumi.StringInput `pulumi:"name"`
	// The IP address of the router to which traffic for this destination network should be sent
	NextHopIp pulumi.StringInput `pulumi:"nextHopIp"`
	// Option to prefer static routes over OSPF routes
	PreferOverOspfRoutesEnabled pulumi.BoolInput `pulumi:"preferOverOspfRoutesEnabled"`
	// The identifier of a layer 3 static route
	StaticRouteId pulumi.StringInput `pulumi:"staticRouteId"`
	// The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetSwitchRoutingStaticRoutesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingStaticRoutesItem)(nil)).Elem()
}

func (i GetSwitchRoutingStaticRoutesItemArgs) ToGetSwitchRoutingStaticRoutesItemOutput() GetSwitchRoutingStaticRoutesItemOutput {
	return i.ToGetSwitchRoutingStaticRoutesItemOutputWithContext(context.Background())
}

func (i GetSwitchRoutingStaticRoutesItemArgs) ToGetSwitchRoutingStaticRoutesItemOutputWithContext(ctx context.Context) GetSwitchRoutingStaticRoutesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingStaticRoutesItemOutput)
}

// GetSwitchRoutingStaticRoutesItemArrayInput is an input type that accepts GetSwitchRoutingStaticRoutesItemArray and GetSwitchRoutingStaticRoutesItemArrayOutput values.
// You can construct a concrete instance of `GetSwitchRoutingStaticRoutesItemArrayInput` via:
//
//	GetSwitchRoutingStaticRoutesItemArray{ GetSwitchRoutingStaticRoutesItemArgs{...} }
type GetSwitchRoutingStaticRoutesItemArrayInput interface {
	pulumi.Input

	ToGetSwitchRoutingStaticRoutesItemArrayOutput() GetSwitchRoutingStaticRoutesItemArrayOutput
	ToGetSwitchRoutingStaticRoutesItemArrayOutputWithContext(context.Context) GetSwitchRoutingStaticRoutesItemArrayOutput
}

type GetSwitchRoutingStaticRoutesItemArray []GetSwitchRoutingStaticRoutesItemInput

func (GetSwitchRoutingStaticRoutesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingStaticRoutesItem)(nil)).Elem()
}

func (i GetSwitchRoutingStaticRoutesItemArray) ToGetSwitchRoutingStaticRoutesItemArrayOutput() GetSwitchRoutingStaticRoutesItemArrayOutput {
	return i.ToGetSwitchRoutingStaticRoutesItemArrayOutputWithContext(context.Background())
}

func (i GetSwitchRoutingStaticRoutesItemArray) ToGetSwitchRoutingStaticRoutesItemArrayOutputWithContext(ctx context.Context) GetSwitchRoutingStaticRoutesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchRoutingStaticRoutesItemArrayOutput)
}

type GetSwitchRoutingStaticRoutesItemOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingStaticRoutesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchRoutingStaticRoutesItem)(nil)).Elem()
}

func (o GetSwitchRoutingStaticRoutesItemOutput) ToGetSwitchRoutingStaticRoutesItemOutput() GetSwitchRoutingStaticRoutesItemOutput {
	return o
}

func (o GetSwitchRoutingStaticRoutesItemOutput) ToGetSwitchRoutingStaticRoutesItemOutputWithContext(ctx context.Context) GetSwitchRoutingStaticRoutesItemOutput {
	return o
}

// Option to advertise static routes via OSPF
func (o GetSwitchRoutingStaticRoutesItemOutput) AdvertiseViaOspfEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) bool { return v.AdvertiseViaOspfEnabled }).(pulumi.BoolOutput)
}

// The name or description of the layer 3 static route
func (o GetSwitchRoutingStaticRoutesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) string { return v.Name }).(pulumi.StringOutput)
}

// The IP address of the router to which traffic for this destination network should be sent
func (o GetSwitchRoutingStaticRoutesItemOutput) NextHopIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) string { return v.NextHopIp }).(pulumi.StringOutput)
}

// Option to prefer static routes over OSPF routes
func (o GetSwitchRoutingStaticRoutesItemOutput) PreferOverOspfRoutesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) bool { return v.PreferOverOspfRoutesEnabled }).(pulumi.BoolOutput)
}

// The identifier of a layer 3 static route
func (o GetSwitchRoutingStaticRoutesItemOutput) StaticRouteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) string { return v.StaticRouteId }).(pulumi.StringOutput)
}

// The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
func (o GetSwitchRoutingStaticRoutesItemOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchRoutingStaticRoutesItem) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetSwitchRoutingStaticRoutesItemArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchRoutingStaticRoutesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchRoutingStaticRoutesItem)(nil)).Elem()
}

func (o GetSwitchRoutingStaticRoutesItemArrayOutput) ToGetSwitchRoutingStaticRoutesItemArrayOutput() GetSwitchRoutingStaticRoutesItemArrayOutput {
	return o
}

func (o GetSwitchRoutingStaticRoutesItemArrayOutput) ToGetSwitchRoutingStaticRoutesItemArrayOutputWithContext(ctx context.Context) GetSwitchRoutingStaticRoutesItemArrayOutput {
	return o
}

func (o GetSwitchRoutingStaticRoutesItemArrayOutput) Index(i pulumi.IntInput) GetSwitchRoutingStaticRoutesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchRoutingStaticRoutesItem {
		return vs[0].([]GetSwitchRoutingStaticRoutesItem)[vs[1].(int)]
	}).(GetSwitchRoutingStaticRoutesItemOutput)
}

type GetSwitchWarmSpareItem struct {
	// Enable or disable warm spare for a switch
	Enabled bool `pulumi:"enabled"`
	// Serial number of the primary switch
	PrimarySerial string `pulumi:"primarySerial"`
	// Serial number of the warm spare switch
	SpareSerial string `pulumi:"spareSerial"`
}

// GetSwitchWarmSpareItemInput is an input type that accepts GetSwitchWarmSpareItemArgs and GetSwitchWarmSpareItemOutput values.
// You can construct a concrete instance of `GetSwitchWarmSpareItemInput` via:
//
//	GetSwitchWarmSpareItemArgs{...}
type GetSwitchWarmSpareItemInput interface {
	pulumi.Input

	ToGetSwitchWarmSpareItemOutput() GetSwitchWarmSpareItemOutput
	ToGetSwitchWarmSpareItemOutputWithContext(context.Context) GetSwitchWarmSpareItemOutput
}

type GetSwitchWarmSpareItemArgs struct {
	// Enable or disable warm spare for a switch
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Serial number of the primary switch
	PrimarySerial pulumi.StringInput `pulumi:"primarySerial"`
	// Serial number of the warm spare switch
	SpareSerial pulumi.StringInput `pulumi:"spareSerial"`
}

func (GetSwitchWarmSpareItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchWarmSpareItem)(nil)).Elem()
}

func (i GetSwitchWarmSpareItemArgs) ToGetSwitchWarmSpareItemOutput() GetSwitchWarmSpareItemOutput {
	return i.ToGetSwitchWarmSpareItemOutputWithContext(context.Background())
}

func (i GetSwitchWarmSpareItemArgs) ToGetSwitchWarmSpareItemOutputWithContext(ctx context.Context) GetSwitchWarmSpareItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchWarmSpareItemOutput)
}

type GetSwitchWarmSpareItemOutput struct{ *pulumi.OutputState }

func (GetSwitchWarmSpareItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchWarmSpareItem)(nil)).Elem()
}

func (o GetSwitchWarmSpareItemOutput) ToGetSwitchWarmSpareItemOutput() GetSwitchWarmSpareItemOutput {
	return o
}

func (o GetSwitchWarmSpareItemOutput) ToGetSwitchWarmSpareItemOutputWithContext(ctx context.Context) GetSwitchWarmSpareItemOutput {
	return o
}

// Enable or disable warm spare for a switch
func (o GetSwitchWarmSpareItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchWarmSpareItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Serial number of the primary switch
func (o GetSwitchWarmSpareItemOutput) PrimarySerial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchWarmSpareItem) string { return v.PrimarySerial }).(pulumi.StringOutput)
}

// Serial number of the warm spare switch
func (o GetSwitchWarmSpareItemOutput) SpareSerial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchWarmSpareItem) string { return v.SpareSerial }).(pulumi.StringOutput)
}

type GetWirelessBluetoothSettingsItem struct {
	// Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Major int `pulumi:"major"`
	// Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Minor int `pulumi:"minor"`
	// Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Uuid string `pulumi:"uuid"`
}

// GetWirelessBluetoothSettingsItemInput is an input type that accepts GetWirelessBluetoothSettingsItemArgs and GetWirelessBluetoothSettingsItemOutput values.
// You can construct a concrete instance of `GetWirelessBluetoothSettingsItemInput` via:
//
//	GetWirelessBluetoothSettingsItemArgs{...}
type GetWirelessBluetoothSettingsItemInput interface {
	pulumi.Input

	ToGetWirelessBluetoothSettingsItemOutput() GetWirelessBluetoothSettingsItemOutput
	ToGetWirelessBluetoothSettingsItemOutputWithContext(context.Context) GetWirelessBluetoothSettingsItemOutput
}

type GetWirelessBluetoothSettingsItemArgs struct {
	// Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Major pulumi.IntInput `pulumi:"major"`
	// Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Minor pulumi.IntInput `pulumi:"minor"`
	// Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetWirelessBluetoothSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessBluetoothSettingsItem)(nil)).Elem()
}

func (i GetWirelessBluetoothSettingsItemArgs) ToGetWirelessBluetoothSettingsItemOutput() GetWirelessBluetoothSettingsItemOutput {
	return i.ToGetWirelessBluetoothSettingsItemOutputWithContext(context.Background())
}

func (i GetWirelessBluetoothSettingsItemArgs) ToGetWirelessBluetoothSettingsItemOutputWithContext(ctx context.Context) GetWirelessBluetoothSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessBluetoothSettingsItemOutput)
}

type GetWirelessBluetoothSettingsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessBluetoothSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessBluetoothSettingsItem)(nil)).Elem()
}

func (o GetWirelessBluetoothSettingsItemOutput) ToGetWirelessBluetoothSettingsItemOutput() GetWirelessBluetoothSettingsItemOutput {
	return o
}

func (o GetWirelessBluetoothSettingsItemOutput) ToGetWirelessBluetoothSettingsItemOutputWithContext(ctx context.Context) GetWirelessBluetoothSettingsItemOutput {
	return o
}

// Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
func (o GetWirelessBluetoothSettingsItemOutput) Major() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessBluetoothSettingsItem) int { return v.Major }).(pulumi.IntOutput)
}

// Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
func (o GetWirelessBluetoothSettingsItemOutput) Minor() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessBluetoothSettingsItem) int { return v.Minor }).(pulumi.IntOutput)
}

// Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
func (o GetWirelessBluetoothSettingsItemOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessBluetoothSettingsItem) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetWirelessConnectionStatsItem struct {
	// The connection stats of the device
	ConnectionStats GetWirelessConnectionStatsItemConnectionStats `pulumi:"connectionStats"`
	// The serial number for the device
	Serial string `pulumi:"serial"`
}

// GetWirelessConnectionStatsItemInput is an input type that accepts GetWirelessConnectionStatsItemArgs and GetWirelessConnectionStatsItemOutput values.
// You can construct a concrete instance of `GetWirelessConnectionStatsItemInput` via:
//
//	GetWirelessConnectionStatsItemArgs{...}
type GetWirelessConnectionStatsItemInput interface {
	pulumi.Input

	ToGetWirelessConnectionStatsItemOutput() GetWirelessConnectionStatsItemOutput
	ToGetWirelessConnectionStatsItemOutputWithContext(context.Context) GetWirelessConnectionStatsItemOutput
}

type GetWirelessConnectionStatsItemArgs struct {
	// The connection stats of the device
	ConnectionStats GetWirelessConnectionStatsItemConnectionStatsInput `pulumi:"connectionStats"`
	// The serial number for the device
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetWirelessConnectionStatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessConnectionStatsItem)(nil)).Elem()
}

func (i GetWirelessConnectionStatsItemArgs) ToGetWirelessConnectionStatsItemOutput() GetWirelessConnectionStatsItemOutput {
	return i.ToGetWirelessConnectionStatsItemOutputWithContext(context.Background())
}

func (i GetWirelessConnectionStatsItemArgs) ToGetWirelessConnectionStatsItemOutputWithContext(ctx context.Context) GetWirelessConnectionStatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessConnectionStatsItemOutput)
}

type GetWirelessConnectionStatsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessConnectionStatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessConnectionStatsItem)(nil)).Elem()
}

func (o GetWirelessConnectionStatsItemOutput) ToGetWirelessConnectionStatsItemOutput() GetWirelessConnectionStatsItemOutput {
	return o
}

func (o GetWirelessConnectionStatsItemOutput) ToGetWirelessConnectionStatsItemOutputWithContext(ctx context.Context) GetWirelessConnectionStatsItemOutput {
	return o
}

// The connection stats of the device
func (o GetWirelessConnectionStatsItemOutput) ConnectionStats() GetWirelessConnectionStatsItemConnectionStatsOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItem) GetWirelessConnectionStatsItemConnectionStats {
		return v.ConnectionStats
	}).(GetWirelessConnectionStatsItemConnectionStatsOutput)
}

// The serial number for the device
func (o GetWirelessConnectionStatsItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetWirelessConnectionStatsItemConnectionStats struct {
	// The number of failed association attempts
	Assoc int `pulumi:"assoc"`
	// The number of failed authentication attempts
	Auth int `pulumi:"auth"`
	// The number of failed DHCP attempts
	Dhcp int `pulumi:"dhcp"`
	// The number of failed DNS attempts
	Dns int `pulumi:"dns"`
	// The number of successful connection attempts
	Success int `pulumi:"success"`
}

// GetWirelessConnectionStatsItemConnectionStatsInput is an input type that accepts GetWirelessConnectionStatsItemConnectionStatsArgs and GetWirelessConnectionStatsItemConnectionStatsOutput values.
// You can construct a concrete instance of `GetWirelessConnectionStatsItemConnectionStatsInput` via:
//
//	GetWirelessConnectionStatsItemConnectionStatsArgs{...}
type GetWirelessConnectionStatsItemConnectionStatsInput interface {
	pulumi.Input

	ToGetWirelessConnectionStatsItemConnectionStatsOutput() GetWirelessConnectionStatsItemConnectionStatsOutput
	ToGetWirelessConnectionStatsItemConnectionStatsOutputWithContext(context.Context) GetWirelessConnectionStatsItemConnectionStatsOutput
}

type GetWirelessConnectionStatsItemConnectionStatsArgs struct {
	// The number of failed association attempts
	Assoc pulumi.IntInput `pulumi:"assoc"`
	// The number of failed authentication attempts
	Auth pulumi.IntInput `pulumi:"auth"`
	// The number of failed DHCP attempts
	Dhcp pulumi.IntInput `pulumi:"dhcp"`
	// The number of failed DNS attempts
	Dns pulumi.IntInput `pulumi:"dns"`
	// The number of successful connection attempts
	Success pulumi.IntInput `pulumi:"success"`
}

func (GetWirelessConnectionStatsItemConnectionStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessConnectionStatsItemConnectionStats)(nil)).Elem()
}

func (i GetWirelessConnectionStatsItemConnectionStatsArgs) ToGetWirelessConnectionStatsItemConnectionStatsOutput() GetWirelessConnectionStatsItemConnectionStatsOutput {
	return i.ToGetWirelessConnectionStatsItemConnectionStatsOutputWithContext(context.Background())
}

func (i GetWirelessConnectionStatsItemConnectionStatsArgs) ToGetWirelessConnectionStatsItemConnectionStatsOutputWithContext(ctx context.Context) GetWirelessConnectionStatsItemConnectionStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessConnectionStatsItemConnectionStatsOutput)
}

type GetWirelessConnectionStatsItemConnectionStatsOutput struct{ *pulumi.OutputState }

func (GetWirelessConnectionStatsItemConnectionStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessConnectionStatsItemConnectionStats)(nil)).Elem()
}

func (o GetWirelessConnectionStatsItemConnectionStatsOutput) ToGetWirelessConnectionStatsItemConnectionStatsOutput() GetWirelessConnectionStatsItemConnectionStatsOutput {
	return o
}

func (o GetWirelessConnectionStatsItemConnectionStatsOutput) ToGetWirelessConnectionStatsItemConnectionStatsOutputWithContext(ctx context.Context) GetWirelessConnectionStatsItemConnectionStatsOutput {
	return o
}

// The number of failed association attempts
func (o GetWirelessConnectionStatsItemConnectionStatsOutput) Assoc() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItemConnectionStats) int { return v.Assoc }).(pulumi.IntOutput)
}

// The number of failed authentication attempts
func (o GetWirelessConnectionStatsItemConnectionStatsOutput) Auth() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItemConnectionStats) int { return v.Auth }).(pulumi.IntOutput)
}

// The number of failed DHCP attempts
func (o GetWirelessConnectionStatsItemConnectionStatsOutput) Dhcp() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItemConnectionStats) int { return v.Dhcp }).(pulumi.IntOutput)
}

// The number of failed DNS attempts
func (o GetWirelessConnectionStatsItemConnectionStatsOutput) Dns() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItemConnectionStats) int { return v.Dns }).(pulumi.IntOutput)
}

// The number of successful connection attempts
func (o GetWirelessConnectionStatsItemConnectionStatsOutput) Success() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessConnectionStatsItemConnectionStats) int { return v.Success }).(pulumi.IntOutput)
}

type GetWirelessLatencyStatsItem struct {
	LatencyStats GetWirelessLatencyStatsItemLatencyStats `pulumi:"latencyStats"`
	Serial       string                                  `pulumi:"serial"`
}

// GetWirelessLatencyStatsItemInput is an input type that accepts GetWirelessLatencyStatsItemArgs and GetWirelessLatencyStatsItemOutput values.
// You can construct a concrete instance of `GetWirelessLatencyStatsItemInput` via:
//
//	GetWirelessLatencyStatsItemArgs{...}
type GetWirelessLatencyStatsItemInput interface {
	pulumi.Input

	ToGetWirelessLatencyStatsItemOutput() GetWirelessLatencyStatsItemOutput
	ToGetWirelessLatencyStatsItemOutputWithContext(context.Context) GetWirelessLatencyStatsItemOutput
}

type GetWirelessLatencyStatsItemArgs struct {
	LatencyStats GetWirelessLatencyStatsItemLatencyStatsInput `pulumi:"latencyStats"`
	Serial       pulumi.StringInput                           `pulumi:"serial"`
}

func (GetWirelessLatencyStatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItem)(nil)).Elem()
}

func (i GetWirelessLatencyStatsItemArgs) ToGetWirelessLatencyStatsItemOutput() GetWirelessLatencyStatsItemOutput {
	return i.ToGetWirelessLatencyStatsItemOutputWithContext(context.Background())
}

func (i GetWirelessLatencyStatsItemArgs) ToGetWirelessLatencyStatsItemOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessLatencyStatsItemOutput)
}

type GetWirelessLatencyStatsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessLatencyStatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItem)(nil)).Elem()
}

func (o GetWirelessLatencyStatsItemOutput) ToGetWirelessLatencyStatsItemOutput() GetWirelessLatencyStatsItemOutput {
	return o
}

func (o GetWirelessLatencyStatsItemOutput) ToGetWirelessLatencyStatsItemOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemOutput {
	return o
}

func (o GetWirelessLatencyStatsItemOutput) LatencyStats() GetWirelessLatencyStatsItemLatencyStatsOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItem) GetWirelessLatencyStatsItemLatencyStats { return v.LatencyStats }).(GetWirelessLatencyStatsItemLatencyStatsOutput)
}

func (o GetWirelessLatencyStatsItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItem) string { return v.Serial }).(pulumi.StringOutput)
}

type GetWirelessLatencyStatsItemLatencyStats struct {
	BackgroundTraffic GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic `pulumi:"backgroundTraffic"`
	BestEffortTraffic string                                                   `pulumi:"bestEffortTraffic"`
	VideoTraffic      string                                                   `pulumi:"videoTraffic"`
	VoiceTraffic      string                                                   `pulumi:"voiceTraffic"`
}

// GetWirelessLatencyStatsItemLatencyStatsInput is an input type that accepts GetWirelessLatencyStatsItemLatencyStatsArgs and GetWirelessLatencyStatsItemLatencyStatsOutput values.
// You can construct a concrete instance of `GetWirelessLatencyStatsItemLatencyStatsInput` via:
//
//	GetWirelessLatencyStatsItemLatencyStatsArgs{...}
type GetWirelessLatencyStatsItemLatencyStatsInput interface {
	pulumi.Input

	ToGetWirelessLatencyStatsItemLatencyStatsOutput() GetWirelessLatencyStatsItemLatencyStatsOutput
	ToGetWirelessLatencyStatsItemLatencyStatsOutputWithContext(context.Context) GetWirelessLatencyStatsItemLatencyStatsOutput
}

type GetWirelessLatencyStatsItemLatencyStatsArgs struct {
	BackgroundTraffic GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficInput `pulumi:"backgroundTraffic"`
	BestEffortTraffic pulumi.StringInput                                            `pulumi:"bestEffortTraffic"`
	VideoTraffic      pulumi.StringInput                                            `pulumi:"videoTraffic"`
	VoiceTraffic      pulumi.StringInput                                            `pulumi:"voiceTraffic"`
}

func (GetWirelessLatencyStatsItemLatencyStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStats)(nil)).Elem()
}

func (i GetWirelessLatencyStatsItemLatencyStatsArgs) ToGetWirelessLatencyStatsItemLatencyStatsOutput() GetWirelessLatencyStatsItemLatencyStatsOutput {
	return i.ToGetWirelessLatencyStatsItemLatencyStatsOutputWithContext(context.Background())
}

func (i GetWirelessLatencyStatsItemLatencyStatsArgs) ToGetWirelessLatencyStatsItemLatencyStatsOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessLatencyStatsItemLatencyStatsOutput)
}

type GetWirelessLatencyStatsItemLatencyStatsOutput struct{ *pulumi.OutputState }

func (GetWirelessLatencyStatsItemLatencyStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStats)(nil)).Elem()
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) ToGetWirelessLatencyStatsItemLatencyStatsOutput() GetWirelessLatencyStatsItemLatencyStatsOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) ToGetWirelessLatencyStatsItemLatencyStatsOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) BackgroundTraffic() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStats) GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic {
		return v.BackgroundTraffic
	}).(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) BestEffortTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStats) string { return v.BestEffortTraffic }).(pulumi.StringOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) VideoTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStats) string { return v.VideoTraffic }).(pulumi.StringOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsOutput) VoiceTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStats) string { return v.VoiceTraffic }).(pulumi.StringOutput)
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic struct {
	Avg             float64                                                                 `pulumi:"avg"`
	RawDistribution GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution `pulumi:"rawDistribution"`
}

// GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficInput is an input type that accepts GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs and GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput values.
// You can construct a concrete instance of `GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficInput` via:
//
//	GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs{...}
type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficInput interface {
	pulumi.Input

	ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput
	ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutputWithContext(context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs struct {
	Avg             pulumi.Float64Input                                                          `pulumi:"avg"`
	RawDistribution GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionInput `pulumi:"rawDistribution"`
}

func (GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic)(nil)).Elem()
}

func (i GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput {
	return i.ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutputWithContext(context.Background())
}

func (i GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput)
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput struct{ *pulumi.OutputState }

func (GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic)(nil)).Elem()
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput) Avg() pulumi.Float64Output {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic) float64 { return v.Avg }).(pulumi.Float64Output)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput) RawDistribution() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTraffic) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution {
		return v.RawDistribution
	}).(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput)
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution struct {
	Status0    int `pulumi:"status0"`
	Status1    int `pulumi:"status1"`
	Status1024 int `pulumi:"status1024"`
	Status128  int `pulumi:"status128"`
	Status16   int `pulumi:"status16"`
	Status2    int `pulumi:"status2"`
	Status2048 int `pulumi:"status2048"`
	Status256  int `pulumi:"status256"`
	Status32   int `pulumi:"status32"`
	Status4    int `pulumi:"status4"`
	Status512  int `pulumi:"status512"`
	Status64   int `pulumi:"status64"`
	Status8    int `pulumi:"status8"`
}

// GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionInput is an input type that accepts GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs and GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput values.
// You can construct a concrete instance of `GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionInput` via:
//
//	GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs{...}
type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionInput interface {
	pulumi.Input

	ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput
	ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutputWithContext(context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs struct {
	Status0    pulumi.IntInput `pulumi:"status0"`
	Status1    pulumi.IntInput `pulumi:"status1"`
	Status1024 pulumi.IntInput `pulumi:"status1024"`
	Status128  pulumi.IntInput `pulumi:"status128"`
	Status16   pulumi.IntInput `pulumi:"status16"`
	Status2    pulumi.IntInput `pulumi:"status2"`
	Status2048 pulumi.IntInput `pulumi:"status2048"`
	Status256  pulumi.IntInput `pulumi:"status256"`
	Status32   pulumi.IntInput `pulumi:"status32"`
	Status4    pulumi.IntInput `pulumi:"status4"`
	Status512  pulumi.IntInput `pulumi:"status512"`
	Status64   pulumi.IntInput `pulumi:"status64"`
	Status8    pulumi.IntInput `pulumi:"status8"`
}

func (GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution)(nil)).Elem()
}

func (i GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput {
	return i.ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutputWithContext(context.Background())
}

func (i GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput)
}

type GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput struct{ *pulumi.OutputState }

func (GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution)(nil)).Elem()
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput() GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) ToGetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutputWithContext(ctx context.Context) GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput {
	return o
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status0() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status0 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status1() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status1 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status1024() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int {
		return v.Status1024
	}).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status128() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int {
		return v.Status128
	}).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status16() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status16 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status2() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status2 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status2048() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int {
		return v.Status2048
	}).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status256() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int {
		return v.Status256
	}).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status32() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status32 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status4() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status4 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status512() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int {
		return v.Status512
	}).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status64() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status64 }).(pulumi.IntOutput)
}

func (o GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput) Status8() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistribution) int { return v.Status8 }).(pulumi.IntOutput)
}

type GetWirelessRadioSettingsItem struct {
	FiveGhzSettings    GetWirelessRadioSettingsItemFiveGhzSettings    `pulumi:"fiveGhzSettings"`
	RfProfileId        string                                         `pulumi:"rfProfileId"`
	Serial             string                                         `pulumi:"serial"`
	TwoFourGhzSettings GetWirelessRadioSettingsItemTwoFourGhzSettings `pulumi:"twoFourGhzSettings"`
}

// GetWirelessRadioSettingsItemInput is an input type that accepts GetWirelessRadioSettingsItemArgs and GetWirelessRadioSettingsItemOutput values.
// You can construct a concrete instance of `GetWirelessRadioSettingsItemInput` via:
//
//	GetWirelessRadioSettingsItemArgs{...}
type GetWirelessRadioSettingsItemInput interface {
	pulumi.Input

	ToGetWirelessRadioSettingsItemOutput() GetWirelessRadioSettingsItemOutput
	ToGetWirelessRadioSettingsItemOutputWithContext(context.Context) GetWirelessRadioSettingsItemOutput
}

type GetWirelessRadioSettingsItemArgs struct {
	FiveGhzSettings    GetWirelessRadioSettingsItemFiveGhzSettingsInput    `pulumi:"fiveGhzSettings"`
	RfProfileId        pulumi.StringInput                                  `pulumi:"rfProfileId"`
	Serial             pulumi.StringInput                                  `pulumi:"serial"`
	TwoFourGhzSettings GetWirelessRadioSettingsItemTwoFourGhzSettingsInput `pulumi:"twoFourGhzSettings"`
}

func (GetWirelessRadioSettingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItem)(nil)).Elem()
}

func (i GetWirelessRadioSettingsItemArgs) ToGetWirelessRadioSettingsItemOutput() GetWirelessRadioSettingsItemOutput {
	return i.ToGetWirelessRadioSettingsItemOutputWithContext(context.Background())
}

func (i GetWirelessRadioSettingsItemArgs) ToGetWirelessRadioSettingsItemOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRadioSettingsItemOutput)
}

type GetWirelessRadioSettingsItemOutput struct{ *pulumi.OutputState }

func (GetWirelessRadioSettingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItem)(nil)).Elem()
}

func (o GetWirelessRadioSettingsItemOutput) ToGetWirelessRadioSettingsItemOutput() GetWirelessRadioSettingsItemOutput {
	return o
}

func (o GetWirelessRadioSettingsItemOutput) ToGetWirelessRadioSettingsItemOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemOutput {
	return o
}

func (o GetWirelessRadioSettingsItemOutput) FiveGhzSettings() GetWirelessRadioSettingsItemFiveGhzSettingsOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItem) GetWirelessRadioSettingsItemFiveGhzSettings {
		return v.FiveGhzSettings
	}).(GetWirelessRadioSettingsItemFiveGhzSettingsOutput)
}

func (o GetWirelessRadioSettingsItemOutput) RfProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItem) string { return v.RfProfileId }).(pulumi.StringOutput)
}

func (o GetWirelessRadioSettingsItemOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItem) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetWirelessRadioSettingsItemOutput) TwoFourGhzSettings() GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItem) GetWirelessRadioSettingsItemTwoFourGhzSettings {
		return v.TwoFourGhzSettings
	}).(GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput)
}

type GetWirelessRadioSettingsItemFiveGhzSettings struct {
	Channel      int    `pulumi:"channel"`
	ChannelWidth string `pulumi:"channelWidth"`
	TargetPower  int    `pulumi:"targetPower"`
}

// GetWirelessRadioSettingsItemFiveGhzSettingsInput is an input type that accepts GetWirelessRadioSettingsItemFiveGhzSettingsArgs and GetWirelessRadioSettingsItemFiveGhzSettingsOutput values.
// You can construct a concrete instance of `GetWirelessRadioSettingsItemFiveGhzSettingsInput` via:
//
//	GetWirelessRadioSettingsItemFiveGhzSettingsArgs{...}
type GetWirelessRadioSettingsItemFiveGhzSettingsInput interface {
	pulumi.Input

	ToGetWirelessRadioSettingsItemFiveGhzSettingsOutput() GetWirelessRadioSettingsItemFiveGhzSettingsOutput
	ToGetWirelessRadioSettingsItemFiveGhzSettingsOutputWithContext(context.Context) GetWirelessRadioSettingsItemFiveGhzSettingsOutput
}

type GetWirelessRadioSettingsItemFiveGhzSettingsArgs struct {
	Channel      pulumi.IntInput    `pulumi:"channel"`
	ChannelWidth pulumi.StringInput `pulumi:"channelWidth"`
	TargetPower  pulumi.IntInput    `pulumi:"targetPower"`
}

func (GetWirelessRadioSettingsItemFiveGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItemFiveGhzSettings)(nil)).Elem()
}

func (i GetWirelessRadioSettingsItemFiveGhzSettingsArgs) ToGetWirelessRadioSettingsItemFiveGhzSettingsOutput() GetWirelessRadioSettingsItemFiveGhzSettingsOutput {
	return i.ToGetWirelessRadioSettingsItemFiveGhzSettingsOutputWithContext(context.Background())
}

func (i GetWirelessRadioSettingsItemFiveGhzSettingsArgs) ToGetWirelessRadioSettingsItemFiveGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemFiveGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRadioSettingsItemFiveGhzSettingsOutput)
}

type GetWirelessRadioSettingsItemFiveGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetWirelessRadioSettingsItemFiveGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItemFiveGhzSettings)(nil)).Elem()
}

func (o GetWirelessRadioSettingsItemFiveGhzSettingsOutput) ToGetWirelessRadioSettingsItemFiveGhzSettingsOutput() GetWirelessRadioSettingsItemFiveGhzSettingsOutput {
	return o
}

func (o GetWirelessRadioSettingsItemFiveGhzSettingsOutput) ToGetWirelessRadioSettingsItemFiveGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemFiveGhzSettingsOutput {
	return o
}

func (o GetWirelessRadioSettingsItemFiveGhzSettingsOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItemFiveGhzSettings) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetWirelessRadioSettingsItemFiveGhzSettingsOutput) ChannelWidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItemFiveGhzSettings) string { return v.ChannelWidth }).(pulumi.StringOutput)
}

func (o GetWirelessRadioSettingsItemFiveGhzSettingsOutput) TargetPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItemFiveGhzSettings) int { return v.TargetPower }).(pulumi.IntOutput)
}

type GetWirelessRadioSettingsItemTwoFourGhzSettings struct {
	Channel     int `pulumi:"channel"`
	TargetPower int `pulumi:"targetPower"`
}

// GetWirelessRadioSettingsItemTwoFourGhzSettingsInput is an input type that accepts GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs and GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput values.
// You can construct a concrete instance of `GetWirelessRadioSettingsItemTwoFourGhzSettingsInput` via:
//
//	GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs{...}
type GetWirelessRadioSettingsItemTwoFourGhzSettingsInput interface {
	pulumi.Input

	ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutput() GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput
	ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutputWithContext(context.Context) GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput
}

type GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs struct {
	Channel     pulumi.IntInput `pulumi:"channel"`
	TargetPower pulumi.IntInput `pulumi:"targetPower"`
}

func (GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItemTwoFourGhzSettings)(nil)).Elem()
}

func (i GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs) ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutput() GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput {
	return i.ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutputWithContext(context.Background())
}

func (i GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs) ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput)
}

type GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput struct{ *pulumi.OutputState }

func (GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessRadioSettingsItemTwoFourGhzSettings)(nil)).Elem()
}

func (o GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput) ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutput() GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput {
	return o
}

func (o GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput) ToGetWirelessRadioSettingsItemTwoFourGhzSettingsOutputWithContext(ctx context.Context) GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput {
	return o
}

func (o GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItemTwoFourGhzSettings) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput) TargetPower() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessRadioSettingsItemTwoFourGhzSettings) int { return v.TargetPower }).(pulumi.IntOutput)
}

type GetWirelessStatusItem struct {
	// SSID status list
	BasicServiceSets []GetWirelessStatusItemBasicServiceSet `pulumi:"basicServiceSets"`
}

// GetWirelessStatusItemInput is an input type that accepts GetWirelessStatusItemArgs and GetWirelessStatusItemOutput values.
// You can construct a concrete instance of `GetWirelessStatusItemInput` via:
//
//	GetWirelessStatusItemArgs{...}
type GetWirelessStatusItemInput interface {
	pulumi.Input

	ToGetWirelessStatusItemOutput() GetWirelessStatusItemOutput
	ToGetWirelessStatusItemOutputWithContext(context.Context) GetWirelessStatusItemOutput
}

type GetWirelessStatusItemArgs struct {
	// SSID status list
	BasicServiceSets GetWirelessStatusItemBasicServiceSetArrayInput `pulumi:"basicServiceSets"`
}

func (GetWirelessStatusItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessStatusItem)(nil)).Elem()
}

func (i GetWirelessStatusItemArgs) ToGetWirelessStatusItemOutput() GetWirelessStatusItemOutput {
	return i.ToGetWirelessStatusItemOutputWithContext(context.Background())
}

func (i GetWirelessStatusItemArgs) ToGetWirelessStatusItemOutputWithContext(ctx context.Context) GetWirelessStatusItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessStatusItemOutput)
}

type GetWirelessStatusItemOutput struct{ *pulumi.OutputState }

func (GetWirelessStatusItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessStatusItem)(nil)).Elem()
}

func (o GetWirelessStatusItemOutput) ToGetWirelessStatusItemOutput() GetWirelessStatusItemOutput {
	return o
}

func (o GetWirelessStatusItemOutput) ToGetWirelessStatusItemOutputWithContext(ctx context.Context) GetWirelessStatusItemOutput {
	return o
}

// SSID status list
func (o GetWirelessStatusItemOutput) BasicServiceSets() GetWirelessStatusItemBasicServiceSetArrayOutput {
	return o.ApplyT(func(v GetWirelessStatusItem) []GetWirelessStatusItemBasicServiceSet { return v.BasicServiceSets }).(GetWirelessStatusItemBasicServiceSetArrayOutput)
}

type GetWirelessStatusItemBasicServiceSet struct {
	// Frequency range used by wireless network
	Band string `pulumi:"band"`
	// Whether the SSID is broadcasting based on an availability schedule
	Broadcasting bool `pulumi:"broadcasting"`
	// Unique identifier of wireless access point
	Bssid string `pulumi:"bssid"`
	// Frequency channel used by wireless network
	Channel int `pulumi:"channel"`
	// Width of frequency channel used by wireless network
	ChannelWidth string `pulumi:"channelWidth"`
	// Status of wireless network
	Enabled bool `pulumi:"enabled"`
	// Strength of wireless signal
	Power string `pulumi:"power"`
	// Name of wireless network
	SsidName string `pulumi:"ssidName"`
	// Unique identifier of wireless network
	SsidNumber int `pulumi:"ssidNumber"`
	// Whether the SSID is advertised or hidden
	Visible bool `pulumi:"visible"`
}

// GetWirelessStatusItemBasicServiceSetInput is an input type that accepts GetWirelessStatusItemBasicServiceSetArgs and GetWirelessStatusItemBasicServiceSetOutput values.
// You can construct a concrete instance of `GetWirelessStatusItemBasicServiceSetInput` via:
//
//	GetWirelessStatusItemBasicServiceSetArgs{...}
type GetWirelessStatusItemBasicServiceSetInput interface {
	pulumi.Input

	ToGetWirelessStatusItemBasicServiceSetOutput() GetWirelessStatusItemBasicServiceSetOutput
	ToGetWirelessStatusItemBasicServiceSetOutputWithContext(context.Context) GetWirelessStatusItemBasicServiceSetOutput
}

type GetWirelessStatusItemBasicServiceSetArgs struct {
	// Frequency range used by wireless network
	Band pulumi.StringInput `pulumi:"band"`
	// Whether the SSID is broadcasting based on an availability schedule
	Broadcasting pulumi.BoolInput `pulumi:"broadcasting"`
	// Unique identifier of wireless access point
	Bssid pulumi.StringInput `pulumi:"bssid"`
	// Frequency channel used by wireless network
	Channel pulumi.IntInput `pulumi:"channel"`
	// Width of frequency channel used by wireless network
	ChannelWidth pulumi.StringInput `pulumi:"channelWidth"`
	// Status of wireless network
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Strength of wireless signal
	Power pulumi.StringInput `pulumi:"power"`
	// Name of wireless network
	SsidName pulumi.StringInput `pulumi:"ssidName"`
	// Unique identifier of wireless network
	SsidNumber pulumi.IntInput `pulumi:"ssidNumber"`
	// Whether the SSID is advertised or hidden
	Visible pulumi.BoolInput `pulumi:"visible"`
}

func (GetWirelessStatusItemBasicServiceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessStatusItemBasicServiceSet)(nil)).Elem()
}

func (i GetWirelessStatusItemBasicServiceSetArgs) ToGetWirelessStatusItemBasicServiceSetOutput() GetWirelessStatusItemBasicServiceSetOutput {
	return i.ToGetWirelessStatusItemBasicServiceSetOutputWithContext(context.Background())
}

func (i GetWirelessStatusItemBasicServiceSetArgs) ToGetWirelessStatusItemBasicServiceSetOutputWithContext(ctx context.Context) GetWirelessStatusItemBasicServiceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessStatusItemBasicServiceSetOutput)
}

// GetWirelessStatusItemBasicServiceSetArrayInput is an input type that accepts GetWirelessStatusItemBasicServiceSetArray and GetWirelessStatusItemBasicServiceSetArrayOutput values.
// You can construct a concrete instance of `GetWirelessStatusItemBasicServiceSetArrayInput` via:
//
//	GetWirelessStatusItemBasicServiceSetArray{ GetWirelessStatusItemBasicServiceSetArgs{...} }
type GetWirelessStatusItemBasicServiceSetArrayInput interface {
	pulumi.Input

	ToGetWirelessStatusItemBasicServiceSetArrayOutput() GetWirelessStatusItemBasicServiceSetArrayOutput
	ToGetWirelessStatusItemBasicServiceSetArrayOutputWithContext(context.Context) GetWirelessStatusItemBasicServiceSetArrayOutput
}

type GetWirelessStatusItemBasicServiceSetArray []GetWirelessStatusItemBasicServiceSetInput

func (GetWirelessStatusItemBasicServiceSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessStatusItemBasicServiceSet)(nil)).Elem()
}

func (i GetWirelessStatusItemBasicServiceSetArray) ToGetWirelessStatusItemBasicServiceSetArrayOutput() GetWirelessStatusItemBasicServiceSetArrayOutput {
	return i.ToGetWirelessStatusItemBasicServiceSetArrayOutputWithContext(context.Background())
}

func (i GetWirelessStatusItemBasicServiceSetArray) ToGetWirelessStatusItemBasicServiceSetArrayOutputWithContext(ctx context.Context) GetWirelessStatusItemBasicServiceSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWirelessStatusItemBasicServiceSetArrayOutput)
}

type GetWirelessStatusItemBasicServiceSetOutput struct{ *pulumi.OutputState }

func (GetWirelessStatusItemBasicServiceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWirelessStatusItemBasicServiceSet)(nil)).Elem()
}

func (o GetWirelessStatusItemBasicServiceSetOutput) ToGetWirelessStatusItemBasicServiceSetOutput() GetWirelessStatusItemBasicServiceSetOutput {
	return o
}

func (o GetWirelessStatusItemBasicServiceSetOutput) ToGetWirelessStatusItemBasicServiceSetOutputWithContext(ctx context.Context) GetWirelessStatusItemBasicServiceSetOutput {
	return o
}

// Frequency range used by wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) string { return v.Band }).(pulumi.StringOutput)
}

// Whether the SSID is broadcasting based on an availability schedule
func (o GetWirelessStatusItemBasicServiceSetOutput) Broadcasting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) bool { return v.Broadcasting }).(pulumi.BoolOutput)
}

// Unique identifier of wireless access point
func (o GetWirelessStatusItemBasicServiceSetOutput) Bssid() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) string { return v.Bssid }).(pulumi.StringOutput)
}

// Frequency channel used by wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) int { return v.Channel }).(pulumi.IntOutput)
}

// Width of frequency channel used by wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) ChannelWidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) string { return v.ChannelWidth }).(pulumi.StringOutput)
}

// Status of wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Strength of wireless signal
func (o GetWirelessStatusItemBasicServiceSetOutput) Power() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) string { return v.Power }).(pulumi.StringOutput)
}

// Name of wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) SsidName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) string { return v.SsidName }).(pulumi.StringOutput)
}

// Unique identifier of wireless network
func (o GetWirelessStatusItemBasicServiceSetOutput) SsidNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) int { return v.SsidNumber }).(pulumi.IntOutput)
}

// Whether the SSID is advertised or hidden
func (o GetWirelessStatusItemBasicServiceSetOutput) Visible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWirelessStatusItemBasicServiceSet) bool { return v.Visible }).(pulumi.BoolOutput)
}

type GetWirelessStatusItemBasicServiceSetArrayOutput struct{ *pulumi.OutputState }

func (GetWirelessStatusItemBasicServiceSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWirelessStatusItemBasicServiceSet)(nil)).Elem()
}

func (o GetWirelessStatusItemBasicServiceSetArrayOutput) ToGetWirelessStatusItemBasicServiceSetArrayOutput() GetWirelessStatusItemBasicServiceSetArrayOutput {
	return o
}

func (o GetWirelessStatusItemBasicServiceSetArrayOutput) ToGetWirelessStatusItemBasicServiceSetArrayOutputWithContext(ctx context.Context) GetWirelessStatusItemBasicServiceSetArrayOutput {
	return o
}

func (o GetWirelessStatusItemBasicServiceSetArrayOutput) Index(i pulumi.IntInput) GetWirelessStatusItemBasicServiceSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWirelessStatusItemBasicServiceSet {
		return vs[0].([]GetWirelessStatusItemBasicServiceSet)[vs[1].(int)]
	}).(GetWirelessStatusItemBasicServiceSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceRadioSettingsFiveGhzSettingsInput)(nil)).Elem(), ApplianceRadioSettingsFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceRadioSettingsFiveGhzSettingsPtrInput)(nil)).Elem(), ApplianceRadioSettingsFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceRadioSettingsTwoFourGhzSettingsInput)(nil)).Elem(), ApplianceRadioSettingsTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceRadioSettingsTwoFourGhzSettingsPtrInput)(nil)).Elem(), ApplianceRadioSettingsTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoeInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoePtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1VlanTaggingInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan1VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoeInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoePtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6Input)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2VlanTaggingInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrInput)(nil)).Elem(), ApplianceUplinksSettingsInterfacesWan2VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVmxAuthenticationTokenItemInput)(nil)).Elem(), ApplianceVmxAuthenticationTokenItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVmxAuthenticationTokenItemPtrInput)(nil)).Elem(), ApplianceVmxAuthenticationTokenItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlinkLedsItemInput)(nil)).Elem(), BlinkLedsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlinkLedsItemPtrInput)(nil)).Elem(), BlinkLedsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlinkLedsParametersInput)(nil)).Elem(), BlinkLedsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlinkLedsParametersPtrInput)(nil)).Elem(), BlinkLedsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsParameterInput)(nil)).Elem(), CameraCustomAnalyticsParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraCustomAnalyticsParameterArrayInput)(nil)).Elem(), CameraCustomAnalyticsParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraGenerateSnapshotParametersInput)(nil)).Elem(), CameraGenerateSnapshotParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraGenerateSnapshotParametersPtrInput)(nil)).Elem(), CameraGenerateSnapshotParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraSenseAudioDetectionInput)(nil)).Elem(), CameraSenseAudioDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraSenseAudioDetectionPtrInput)(nil)).Elem(), CameraSenseAudioDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraWirelessProfilesIdsInput)(nil)).Elem(), CameraWirelessProfilesIdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CameraWirelessProfilesIdsPtrInput)(nil)).Elem(), CameraWirelessProfilesIdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayLanFixedIpAssignmentInput)(nil)).Elem(), CellularGatewayLanFixedIpAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayLanFixedIpAssignmentArrayInput)(nil)).Elem(), CellularGatewayLanFixedIpAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayLanReservedIpRangeInput)(nil)).Elem(), CellularGatewayLanReservedIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayLanReservedIpRangeArrayInput)(nil)).Elem(), CellularGatewayLanReservedIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayPortForwardingRulesRuleInput)(nil)).Elem(), CellularGatewayPortForwardingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayPortForwardingRulesRuleArrayInput)(nil)).Elem(), CellularGatewayPortForwardingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimInput)(nil)).Elem(), CellularSimsSimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimArrayInput)(nil)).Elem(), CellularSimsSimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimApnInput)(nil)).Elem(), CellularSimsSimApnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimApnArrayInput)(nil)).Elem(), CellularSimsSimApnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimApnAuthenticationInput)(nil)).Elem(), CellularSimsSimApnAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimApnAuthenticationPtrInput)(nil)).Elem(), CellularSimsSimApnAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimFailoverInput)(nil)).Elem(), CellularSimsSimFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularSimsSimFailoverPtrInput)(nil)).Elem(), CellularSimsSimFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackInput)(nil)).Elem(), LiveToolsArpTableCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackPtrInput)(nil)).Elem(), LiveToolsArpTableCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackHttpServerInput)(nil)).Elem(), LiveToolsArpTableCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsArpTableCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsArpTableCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsArpTableCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableEntryInput)(nil)).Elem(), LiveToolsArpTableEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableEntryArrayInput)(nil)).Elem(), LiveToolsArpTableEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableRequestInput)(nil)).Elem(), LiveToolsArpTableRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsArpTableRequestPtrInput)(nil)).Elem(), LiveToolsArpTableRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackInput)(nil)).Elem(), LiveToolsCableCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackPtrInput)(nil)).Elem(), LiveToolsCableCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackHttpServerInput)(nil)).Elem(), LiveToolsCableCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsCableCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsCableCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsCableCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableRequestInput)(nil)).Elem(), LiveToolsCableRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableRequestPtrInput)(nil)).Elem(), LiveToolsCableRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableResultInput)(nil)).Elem(), LiveToolsCableResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableResultArrayInput)(nil)).Elem(), LiveToolsCableResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableResultPairInput)(nil)).Elem(), LiveToolsCableResultPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsCableResultPairArrayInput)(nil)).Elem(), LiveToolsCableResultPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemInput)(nil)).Elem(), LiveToolsPingDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemPtrInput)(nil)).Elem(), LiveToolsPingDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemCallbackInput)(nil)).Elem(), LiveToolsPingDeviceItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemCallbackPtrInput)(nil)).Elem(), LiveToolsPingDeviceItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemRequestInput)(nil)).Elem(), LiveToolsPingDeviceItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceItemRequestPtrInput)(nil)).Elem(), LiveToolsPingDeviceItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersInput)(nil)).Elem(), LiveToolsPingDeviceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersPtrInput)(nil)).Elem(), LiveToolsPingDeviceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackPtrInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackHttpServerInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsPingDeviceParametersCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemInput)(nil)).Elem(), LiveToolsPingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemPtrInput)(nil)).Elem(), LiveToolsPingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemCallbackInput)(nil)).Elem(), LiveToolsPingItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemCallbackPtrInput)(nil)).Elem(), LiveToolsPingItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemRequestInput)(nil)).Elem(), LiveToolsPingItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingItemRequestPtrInput)(nil)).Elem(), LiveToolsPingItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersInput)(nil)).Elem(), LiveToolsPingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersPtrInput)(nil)).Elem(), LiveToolsPingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackInput)(nil)).Elem(), LiveToolsPingParametersCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackPtrInput)(nil)).Elem(), LiveToolsPingParametersCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackHttpServerInput)(nil)).Elem(), LiveToolsPingParametersCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsPingParametersCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsPingParametersCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsPingParametersCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsPingParametersCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackInput)(nil)).Elem(), LiveToolsThroughputTestCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackPtrInput)(nil)).Elem(), LiveToolsThroughputTestCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackHttpServerInput)(nil)).Elem(), LiveToolsThroughputTestCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsThroughputTestCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsThroughputTestCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsThroughputTestCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestRequestInput)(nil)).Elem(), LiveToolsThroughputTestRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestRequestPtrInput)(nil)).Elem(), LiveToolsThroughputTestRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestResultInput)(nil)).Elem(), LiveToolsThroughputTestResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestResultPtrInput)(nil)).Elem(), LiveToolsThroughputTestResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestResultSpeedsInput)(nil)).Elem(), LiveToolsThroughputTestResultSpeedsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsThroughputTestResultSpeedsPtrInput)(nil)).Elem(), LiveToolsThroughputTestResultSpeedsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackPtrInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackHttpServerInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackHttpServerPtrInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackHttpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackPayloadTemplateInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanCallbackPayloadTemplatePtrInput)(nil)).Elem(), LiveToolsWakeOnLanCallbackPayloadTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanRequestInput)(nil)).Elem(), LiveToolsWakeOnLanRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LiveToolsWakeOnLanRequestPtrInput)(nil)).Elem(), LiveToolsWakeOnLanRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceDdnsHostnamesInput)(nil)).Elem(), ManagementInterfaceDdnsHostnamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceDdnsHostnamesPtrInput)(nil)).Elem(), ManagementInterfaceDdnsHostnamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceWan1Input)(nil)).Elem(), ManagementInterfaceWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceWan1PtrInput)(nil)).Elem(), ManagementInterfaceWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceWan2Input)(nil)).Elem(), ManagementInterfaceWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementInterfaceWan2PtrInput)(nil)).Elem(), ManagementInterfaceWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamInput)(nil)).Elem(), SensorRelationshipsLivestreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamPtrInput)(nil)).Elem(), SensorRelationshipsLivestreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRelatedDeviceInput)(nil)).Elem(), SensorRelationshipsLivestreamRelatedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRelatedDeviceArrayInput)(nil)).Elem(), SensorRelationshipsLivestreamRelatedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRequestInput)(nil)).Elem(), SensorRelationshipsLivestreamRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRequestArrayInput)(nil)).Elem(), SensorRelationshipsLivestreamRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRequestRelatedDeviceInput)(nil)).Elem(), SensorRelationshipsLivestreamRequestRelatedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorRelationshipsLivestreamRequestRelatedDeviceArrayInput)(nil)).Elem(), SensorRelationshipsLivestreamRequestRelatedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsCycleItemInput)(nil)).Elem(), SwitchPortsCycleItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsCycleItemPtrInput)(nil)).Elem(), SwitchPortsCycleItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsCycleParametersInput)(nil)).Elem(), SwitchPortsCycleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsCycleParametersPtrInput)(nil)).Elem(), SwitchPortsCycleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsMirrorInput)(nil)).Elem(), SwitchPortsMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsMirrorPtrInput)(nil)).Elem(), SwitchPortsMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsModuleInput)(nil)).Elem(), SwitchPortsModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsModulePtrInput)(nil)).Elem(), SwitchPortsModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsProfileInput)(nil)).Elem(), SwitchPortsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortsProfilePtrInput)(nil)).Elem(), SwitchPortsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpDhcpOptionInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpDhcpOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpDhcpOptionArrayInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpDhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpFixedIpAssignmentInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpFixedIpAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpFixedIpAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpReservedIpRangeInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpReservedIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesDhcpReservedIpRangeArrayInput)(nil)).Elem(), SwitchRoutingInterfacesDhcpReservedIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesIpv6Input)(nil)).Elem(), SwitchRoutingInterfacesIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesIpv6PtrInput)(nil)).Elem(), SwitchRoutingInterfacesIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesOspfSettingsInput)(nil)).Elem(), SwitchRoutingInterfacesOspfSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesOspfSettingsPtrInput)(nil)).Elem(), SwitchRoutingInterfacesOspfSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesOspfV3Input)(nil)).Elem(), SwitchRoutingInterfacesOspfV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRoutingInterfacesOspfV3PtrInput)(nil)).Elem(), SwitchRoutingInterfacesOspfV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemPtrInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressArrayInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersPtrInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrInput)(nil)).Elem(), WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessRadioSettingsFiveGhzSettingsInput)(nil)).Elem(), WirelessRadioSettingsFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessRadioSettingsFiveGhzSettingsPtrInput)(nil)).Elem(), WirelessRadioSettingsFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessRadioSettingsTwoFourGhzSettingsInput)(nil)).Elem(), WirelessRadioSettingsTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessRadioSettingsTwoFourGhzSettingsPtrInput)(nil)).Elem(), WirelessRadioSettingsTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseDetailInput)(nil)).Elem(), BaseDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseDetailArrayInput)(nil)).Elem(), BaseDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppliancePerformanceItemInput)(nil)).Elem(), GetAppliancePerformanceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceRadioSettingsItemInput)(nil)).Elem(), GetApplianceRadioSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceRadioSettingsItemFiveGhzSettingsInput)(nil)).Elem(), GetApplianceRadioSettingsItemFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceRadioSettingsItemTwoFourGhzSettingsInput)(nil)).Elem(), GetApplianceRadioSettingsItemTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInput)(nil)).Elem(), GetApplianceUplinksSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1PppoeInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2PppoeInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2PppoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2SvisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Input)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingInput)(nil)).Elem(), GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraAnalyticsLiveItemInput)(nil)).Elem(), GetCameraAnalyticsLiveItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraAnalyticsLiveItemZonesInput)(nil)).Elem(), GetCameraAnalyticsLiveItemZonesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraAnalyticsLiveItemZonesStatus0Input)(nil)).Elem(), GetCameraAnalyticsLiveItemZonesStatus0Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsItemInput)(nil)).Elem(), GetCameraCustomAnalyticsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsItemParameterInput)(nil)).Elem(), GetCameraCustomAnalyticsItemParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraCustomAnalyticsItemParameterArrayInput)(nil)).Elem(), GetCameraCustomAnalyticsItemParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraQualityAndRetentionItemInput)(nil)).Elem(), GetCameraQualityAndRetentionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraSenseItemInput)(nil)).Elem(), GetCameraSenseItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraSenseItemAudioDetectionInput)(nil)).Elem(), GetCameraSenseItemAudioDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraVideoLinkItemInput)(nil)).Elem(), GetCameraVideoLinkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraVideoSettingsItemInput)(nil)).Elem(), GetCameraVideoSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraWirelessProfilesItemInput)(nil)).Elem(), GetCameraWirelessProfilesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCameraWirelessProfilesItemIdsInput)(nil)).Elem(), GetCameraWirelessProfilesItemIdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayLanItemInput)(nil)).Elem(), GetCellularGatewayLanItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayLanItemFixedIpAssignmentInput)(nil)).Elem(), GetCellularGatewayLanItemFixedIpAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayLanItemFixedIpAssignmentArrayInput)(nil)).Elem(), GetCellularGatewayLanItemFixedIpAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayLanItemReservedIpRangeInput)(nil)).Elem(), GetCellularGatewayLanItemReservedIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayLanItemReservedIpRangeArrayInput)(nil)).Elem(), GetCellularGatewayLanItemReservedIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItemInput)(nil)).Elem(), GetCellularGatewayPortForwardingRulesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItemRuleInput)(nil)).Elem(), GetCellularGatewayPortForwardingRulesItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularGatewayPortForwardingRulesItemRuleArrayInput)(nil)).Elem(), GetCellularGatewayPortForwardingRulesItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemInput)(nil)).Elem(), GetCellularSimsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemSimInput)(nil)).Elem(), GetCellularSimsItemSimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemSimArrayInput)(nil)).Elem(), GetCellularSimsItemSimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemSimApnInput)(nil)).Elem(), GetCellularSimsItemSimApnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemSimApnArrayInput)(nil)).Elem(), GetCellularSimsItemSimApnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCellularSimsItemSimApnAuthenticationInput)(nil)).Elem(), GetCellularSimsItemSimApnAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsArpTableItemInput)(nil)).Elem(), GetLiveToolsArpTableItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsArpTableItemEntryInput)(nil)).Elem(), GetLiveToolsArpTableItemEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsArpTableItemEntryArrayInput)(nil)).Elem(), GetLiveToolsArpTableItemEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsArpTableItemRequestInput)(nil)).Elem(), GetLiveToolsArpTableItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemInput)(nil)).Elem(), GetLiveToolsCableTestItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemRequestInput)(nil)).Elem(), GetLiveToolsCableTestItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemResultInput)(nil)).Elem(), GetLiveToolsCableTestItemResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemResultArrayInput)(nil)).Elem(), GetLiveToolsCableTestItemResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemResultPairInput)(nil)).Elem(), GetLiveToolsCableTestItemResultPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsCableTestItemResultPairArrayInput)(nil)).Elem(), GetLiveToolsCableTestItemResultPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemInput)(nil)).Elem(), GetLiveToolsPingDeviceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemCallbackInput)(nil)).Elem(), GetLiveToolsPingDeviceItemCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemRequestInput)(nil)).Elem(), GetLiveToolsPingDeviceItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsInput)(nil)).Elem(), GetLiveToolsPingDeviceItemResultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLatenciesInput)(nil)).Elem(), GetLiveToolsPingDeviceItemResultsLatenciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsLossInput)(nil)).Elem(), GetLiveToolsPingDeviceItemResultsLossArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsReplyInput)(nil)).Elem(), GetLiveToolsPingDeviceItemResultsReplyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingDeviceItemResultsReplyArrayInput)(nil)).Elem(), GetLiveToolsPingDeviceItemResultsReplyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemInput)(nil)).Elem(), GetLiveToolsPingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemRequestInput)(nil)).Elem(), GetLiveToolsPingItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemResultsInput)(nil)).Elem(), GetLiveToolsPingItemResultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemResultsLatenciesInput)(nil)).Elem(), GetLiveToolsPingItemResultsLatenciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemResultsLossInput)(nil)).Elem(), GetLiveToolsPingItemResultsLossArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemResultsReplyInput)(nil)).Elem(), GetLiveToolsPingItemResultsReplyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsPingItemResultsReplyArrayInput)(nil)).Elem(), GetLiveToolsPingItemResultsReplyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsThroughputTestItemInput)(nil)).Elem(), GetLiveToolsThroughputTestItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsThroughputTestItemRequestInput)(nil)).Elem(), GetLiveToolsThroughputTestItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsThroughputTestItemResultInput)(nil)).Elem(), GetLiveToolsThroughputTestItemResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsThroughputTestItemResultSpeedsInput)(nil)).Elem(), GetLiveToolsThroughputTestItemResultSpeedsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsWakeOnLanItemInput)(nil)).Elem(), GetLiveToolsWakeOnLanItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLiveToolsWakeOnLanItemRequestInput)(nil)).Elem(), GetLiveToolsWakeOnLanItemRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemInput)(nil)).Elem(), GetLldpCdpItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsInput)(nil)).Elem(), GetLldpCdpItemPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsStatus12Input)(nil)).Elem(), GetLldpCdpItemPortsStatus12Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsStatus12CdpInput)(nil)).Elem(), GetLldpCdpItemPortsStatus12CdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsStatus12LldpInput)(nil)).Elem(), GetLldpCdpItemPortsStatus12LldpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsStatus8Input)(nil)).Elem(), GetLldpCdpItemPortsStatus8Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLldpCdpItemPortsStatus8CdpInput)(nil)).Elem(), GetLldpCdpItemPortsStatus8CdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementInterfaceItemInput)(nil)).Elem(), GetManagementInterfaceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementInterfaceItemDdnsHostnamesInput)(nil)).Elem(), GetManagementInterfaceItemDdnsHostnamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementInterfaceItemWan1Input)(nil)).Elem(), GetManagementInterfaceItemWan1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementInterfaceItemWan2Input)(nil)).Elem(), GetManagementInterfaceItemWan2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorRelationshipsItemInput)(nil)).Elem(), GetSensorRelationshipsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorRelationshipsItemLivestreamInput)(nil)).Elem(), GetSensorRelationshipsItemLivestreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorRelationshipsItemLivestreamRelatedDeviceInput)(nil)).Elem(), GetSensorRelationshipsItemLivestreamRelatedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorRelationshipsItemLivestreamRelatedDeviceArrayInput)(nil)).Elem(), GetSensorRelationshipsItemLivestreamRelatedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsItemInput)(nil)).Elem(), GetSwitchPortsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsItemArrayInput)(nil)).Elem(), GetSwitchPortsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsItemMirrorInput)(nil)).Elem(), GetSwitchPortsItemMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsItemModuleInput)(nil)).Elem(), GetSwitchPortsItemModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsItemProfileInput)(nil)).Elem(), GetSwitchPortsItemProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemInput)(nil)).Elem(), GetSwitchPortsStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemArrayInput)(nil)).Elem(), GetSwitchPortsStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemCdpInput)(nil)).Elem(), GetSwitchPortsStatusesItemCdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemLldpInput)(nil)).Elem(), GetSwitchPortsStatusesItemLldpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePortInput)(nil)).Elem(), GetSwitchPortsStatusesItemSecurePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemSecurePortConfigOverridesInput)(nil)).Elem(), GetSwitchPortsStatusesItemSecurePortConfigOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemSpanningTreeInput)(nil)).Elem(), GetSwitchPortsStatusesItemSpanningTreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemTrafficInKbpsInput)(nil)).Elem(), GetSwitchPortsStatusesItemTrafficInKbpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchPortsStatusesItemUsageInKbInput)(nil)).Elem(), GetSwitchPortsStatusesItemUsageInKbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemDhcpOptionInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemDhcpOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemDhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemReservedIpRangeInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayInput)(nil)).Elem(), GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesItemInput)(nil)).Elem(), GetSwitchRoutingInterfacesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesItemArrayInput)(nil)).Elem(), GetSwitchRoutingInterfacesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesItemIpv6Input)(nil)).Elem(), GetSwitchRoutingInterfacesItemIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfSettingsInput)(nil)).Elem(), GetSwitchRoutingInterfacesItemOspfSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingInterfacesItemOspfV3Input)(nil)).Elem(), GetSwitchRoutingInterfacesItemOspfV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingStaticRoutesItemInput)(nil)).Elem(), GetSwitchRoutingStaticRoutesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchRoutingStaticRoutesItemArrayInput)(nil)).Elem(), GetSwitchRoutingStaticRoutesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchWarmSpareItemInput)(nil)).Elem(), GetSwitchWarmSpareItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessBluetoothSettingsItemInput)(nil)).Elem(), GetWirelessBluetoothSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessConnectionStatsItemInput)(nil)).Elem(), GetWirelessConnectionStatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessConnectionStatsItemConnectionStatsInput)(nil)).Elem(), GetWirelessConnectionStatsItemConnectionStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessLatencyStatsItemInput)(nil)).Elem(), GetWirelessLatencyStatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsInput)(nil)).Elem(), GetWirelessLatencyStatsItemLatencyStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficInput)(nil)).Elem(), GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionInput)(nil)).Elem(), GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRadioSettingsItemInput)(nil)).Elem(), GetWirelessRadioSettingsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRadioSettingsItemFiveGhzSettingsInput)(nil)).Elem(), GetWirelessRadioSettingsItemFiveGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessRadioSettingsItemTwoFourGhzSettingsInput)(nil)).Elem(), GetWirelessRadioSettingsItemTwoFourGhzSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessStatusItemInput)(nil)).Elem(), GetWirelessStatusItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessStatusItemBasicServiceSetInput)(nil)).Elem(), GetWirelessStatusItemBasicServiceSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWirelessStatusItemBasicServiceSetArrayInput)(nil)).Elem(), GetWirelessStatusItemBasicServiceSetArray{})
	pulumi.RegisterOutputType(ApplianceRadioSettingsFiveGhzSettingsOutput{})
	pulumi.RegisterOutputType(ApplianceRadioSettingsFiveGhzSettingsPtrOutput{})
	pulumi.RegisterOutputType(ApplianceRadioSettingsTwoFourGhzSettingsOutput{})
	pulumi.RegisterOutputType(ApplianceRadioSettingsTwoFourGhzSettingsPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1PppoeOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1PppoePtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1PppoeAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv4Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv4PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv4NameserversPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv6Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv6PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1SvisIpv6NameserversPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1VlanTaggingOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan1VlanTaggingPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2PppoeOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2PppoePtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2PppoeAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv4Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv4PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv4NameserversPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv6Output{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv6PtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2SvisIpv6NameserversPtrOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2VlanTaggingOutput{})
	pulumi.RegisterOutputType(ApplianceUplinksSettingsInterfacesWan2VlanTaggingPtrOutput{})
	pulumi.RegisterOutputType(ApplianceVmxAuthenticationTokenItemOutput{})
	pulumi.RegisterOutputType(ApplianceVmxAuthenticationTokenItemPtrOutput{})
	pulumi.RegisterOutputType(BlinkLedsItemOutput{})
	pulumi.RegisterOutputType(BlinkLedsItemPtrOutput{})
	pulumi.RegisterOutputType(BlinkLedsParametersOutput{})
	pulumi.RegisterOutputType(BlinkLedsParametersPtrOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsParameterOutput{})
	pulumi.RegisterOutputType(CameraCustomAnalyticsParameterArrayOutput{})
	pulumi.RegisterOutputType(CameraGenerateSnapshotParametersOutput{})
	pulumi.RegisterOutputType(CameraGenerateSnapshotParametersPtrOutput{})
	pulumi.RegisterOutputType(CameraSenseAudioDetectionOutput{})
	pulumi.RegisterOutputType(CameraSenseAudioDetectionPtrOutput{})
	pulumi.RegisterOutputType(CameraWirelessProfilesIdsOutput{})
	pulumi.RegisterOutputType(CameraWirelessProfilesIdsPtrOutput{})
	pulumi.RegisterOutputType(CellularGatewayLanFixedIpAssignmentOutput{})
	pulumi.RegisterOutputType(CellularGatewayLanFixedIpAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CellularGatewayLanReservedIpRangeOutput{})
	pulumi.RegisterOutputType(CellularGatewayLanReservedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(CellularGatewayPortForwardingRulesRuleOutput{})
	pulumi.RegisterOutputType(CellularGatewayPortForwardingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(CellularSimsSimOutput{})
	pulumi.RegisterOutputType(CellularSimsSimArrayOutput{})
	pulumi.RegisterOutputType(CellularSimsSimApnOutput{})
	pulumi.RegisterOutputType(CellularSimsSimApnArrayOutput{})
	pulumi.RegisterOutputType(CellularSimsSimApnAuthenticationOutput{})
	pulumi.RegisterOutputType(CellularSimsSimApnAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CellularSimsSimFailoverOutput{})
	pulumi.RegisterOutputType(CellularSimsSimFailoverPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableEntryOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableEntryArrayOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsArpTableRequestPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsCableCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsCableRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsCableRequestPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsCableResultOutput{})
	pulumi.RegisterOutputType(LiveToolsCableResultArrayOutput{})
	pulumi.RegisterOutputType(LiveToolsCableResultPairOutput{})
	pulumi.RegisterOutputType(LiveToolsCableResultPairArrayOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceItemRequestPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsPingDeviceParametersCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsPingItemRequestPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsPingParametersCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestRequestPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestResultOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestResultPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestResultSpeedsOutput{})
	pulumi.RegisterOutputType(LiveToolsThroughputTestResultSpeedsPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackHttpServerOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackHttpServerPtrOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackPayloadTemplateOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanCallbackPayloadTemplatePtrOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanRequestOutput{})
	pulumi.RegisterOutputType(LiveToolsWakeOnLanRequestPtrOutput{})
	pulumi.RegisterOutputType(ManagementInterfaceDdnsHostnamesOutput{})
	pulumi.RegisterOutputType(ManagementInterfaceDdnsHostnamesPtrOutput{})
	pulumi.RegisterOutputType(ManagementInterfaceWan1Output{})
	pulumi.RegisterOutputType(ManagementInterfaceWan1PtrOutput{})
	pulumi.RegisterOutputType(ManagementInterfaceWan2Output{})
	pulumi.RegisterOutputType(ManagementInterfaceWan2PtrOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamPtrOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRelatedDeviceOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRelatedDeviceArrayOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRequestOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRequestArrayOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRequestRelatedDeviceOutput{})
	pulumi.RegisterOutputType(SensorRelationshipsLivestreamRequestRelatedDeviceArrayOutput{})
	pulumi.RegisterOutputType(SwitchPortsCycleItemOutput{})
	pulumi.RegisterOutputType(SwitchPortsCycleItemPtrOutput{})
	pulumi.RegisterOutputType(SwitchPortsCycleParametersOutput{})
	pulumi.RegisterOutputType(SwitchPortsCycleParametersPtrOutput{})
	pulumi.RegisterOutputType(SwitchPortsMirrorOutput{})
	pulumi.RegisterOutputType(SwitchPortsMirrorPtrOutput{})
	pulumi.RegisterOutputType(SwitchPortsModuleOutput{})
	pulumi.RegisterOutputType(SwitchPortsModulePtrOutput{})
	pulumi.RegisterOutputType(SwitchPortsProfileOutput{})
	pulumi.RegisterOutputType(SwitchPortsProfilePtrOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpDhcpOptionOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpDhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpFixedIpAssignmentOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpFixedIpAssignmentArrayOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpReservedIpRangeOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesDhcpReservedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesIpv6Output{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesIpv6PtrOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesOspfSettingsOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesOspfSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesOspfV3Output{})
	pulumi.RegisterOutputType(SwitchRoutingInterfacesOspfV3PtrOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemPtrOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemAddressOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemAddressArrayOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ItemAddressNameserversPtrOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersPtrOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersAddressOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersAddressArrayOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversOutput{})
	pulumi.RegisterOutputType(WirelessAlternateManagementInterfaceIpv6ParametersAddressNameserversPtrOutput{})
	pulumi.RegisterOutputType(WirelessRadioSettingsFiveGhzSettingsOutput{})
	pulumi.RegisterOutputType(WirelessRadioSettingsFiveGhzSettingsPtrOutput{})
	pulumi.RegisterOutputType(WirelessRadioSettingsTwoFourGhzSettingsOutput{})
	pulumi.RegisterOutputType(WirelessRadioSettingsTwoFourGhzSettingsPtrOutput{})
	pulumi.RegisterOutputType(BaseDetailOutput{})
	pulumi.RegisterOutputType(BaseDetailArrayOutput{})
	pulumi.RegisterOutputType(GetAppliancePerformanceItemOutput{})
	pulumi.RegisterOutputType(GetApplianceRadioSettingsItemOutput{})
	pulumi.RegisterOutputType(GetApplianceRadioSettingsItemFiveGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetApplianceRadioSettingsItemTwoFourGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1PppoeOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1PppoeAuthenticationOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1SvisOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv4NameserversOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1SvisIpv6NameserversOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan1VlanTaggingOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2PppoeOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2PppoeAuthenticationOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2SvisOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv4NameserversOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6Output{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2SvisIpv6NameserversOutput{})
	pulumi.RegisterOutputType(GetApplianceUplinksSettingsItemInterfacesWan2VlanTaggingOutput{})
	pulumi.RegisterOutputType(GetCameraAnalyticsLiveItemOutput{})
	pulumi.RegisterOutputType(GetCameraAnalyticsLiveItemZonesOutput{})
	pulumi.RegisterOutputType(GetCameraAnalyticsLiveItemZonesStatus0Output{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsItemOutput{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsItemParameterOutput{})
	pulumi.RegisterOutputType(GetCameraCustomAnalyticsItemParameterArrayOutput{})
	pulumi.RegisterOutputType(GetCameraQualityAndRetentionItemOutput{})
	pulumi.RegisterOutputType(GetCameraSenseItemOutput{})
	pulumi.RegisterOutputType(GetCameraSenseItemAudioDetectionOutput{})
	pulumi.RegisterOutputType(GetCameraVideoLinkItemOutput{})
	pulumi.RegisterOutputType(GetCameraVideoSettingsItemOutput{})
	pulumi.RegisterOutputType(GetCameraWirelessProfilesItemOutput{})
	pulumi.RegisterOutputType(GetCameraWirelessProfilesItemIdsOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayLanItemOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayLanItemFixedIpAssignmentOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayLanItemFixedIpAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayLanItemReservedIpRangeOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayLanItemReservedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayPortForwardingRulesItemOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayPortForwardingRulesItemRuleOutput{})
	pulumi.RegisterOutputType(GetCellularGatewayPortForwardingRulesItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemSimOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemSimArrayOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemSimApnOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemSimApnArrayOutput{})
	pulumi.RegisterOutputType(GetCellularSimsItemSimApnAuthenticationOutput{})
	pulumi.RegisterOutputType(GetLiveToolsArpTableItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsArpTableItemEntryOutput{})
	pulumi.RegisterOutputType(GetLiveToolsArpTableItemEntryArrayOutput{})
	pulumi.RegisterOutputType(GetLiveToolsArpTableItemRequestOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemRequestOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemResultOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemResultArrayOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemResultPairOutput{})
	pulumi.RegisterOutputType(GetLiveToolsCableTestItemResultPairArrayOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemCallbackOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemRequestOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemResultsOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemResultsLatenciesOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemResultsLossOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemResultsReplyOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingDeviceItemResultsReplyArrayOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemRequestOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemResultsOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemResultsLatenciesOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemResultsLossOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemResultsReplyOutput{})
	pulumi.RegisterOutputType(GetLiveToolsPingItemResultsReplyArrayOutput{})
	pulumi.RegisterOutputType(GetLiveToolsThroughputTestItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsThroughputTestItemRequestOutput{})
	pulumi.RegisterOutputType(GetLiveToolsThroughputTestItemResultOutput{})
	pulumi.RegisterOutputType(GetLiveToolsThroughputTestItemResultSpeedsOutput{})
	pulumi.RegisterOutputType(GetLiveToolsWakeOnLanItemOutput{})
	pulumi.RegisterOutputType(GetLiveToolsWakeOnLanItemRequestOutput{})
	pulumi.RegisterOutputType(GetLldpCdpItemOutput{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsOutput{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsStatus12Output{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsStatus12CdpOutput{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsStatus12LldpOutput{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsStatus8Output{})
	pulumi.RegisterOutputType(GetLldpCdpItemPortsStatus8CdpOutput{})
	pulumi.RegisterOutputType(GetManagementInterfaceItemOutput{})
	pulumi.RegisterOutputType(GetManagementInterfaceItemDdnsHostnamesOutput{})
	pulumi.RegisterOutputType(GetManagementInterfaceItemWan1Output{})
	pulumi.RegisterOutputType(GetManagementInterfaceItemWan2Output{})
	pulumi.RegisterOutputType(GetSensorRelationshipsItemOutput{})
	pulumi.RegisterOutputType(GetSensorRelationshipsItemLivestreamOutput{})
	pulumi.RegisterOutputType(GetSensorRelationshipsItemLivestreamRelatedDeviceOutput{})
	pulumi.RegisterOutputType(GetSensorRelationshipsItemLivestreamRelatedDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsItemOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsItemArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsItemMirrorOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsItemModuleOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsItemProfileOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemCdpOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemLldpOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemSecurePortOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemSecurePortConfigOverridesOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemSpanningTreeOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemTrafficInKbpsOutput{})
	pulumi.RegisterOutputType(GetSwitchPortsStatusesItemUsageInKbOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemDhcpOptionOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemDhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemFixedIpAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesDhcpItemReservedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesItemOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesItemArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesItemIpv6Output{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesItemOspfSettingsOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingInterfacesItemOspfV3Output{})
	pulumi.RegisterOutputType(GetSwitchRoutingStaticRoutesItemOutput{})
	pulumi.RegisterOutputType(GetSwitchRoutingStaticRoutesItemArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchWarmSpareItemOutput{})
	pulumi.RegisterOutputType(GetWirelessBluetoothSettingsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessConnectionStatsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessConnectionStatsItemConnectionStatsOutput{})
	pulumi.RegisterOutputType(GetWirelessLatencyStatsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessLatencyStatsItemLatencyStatsOutput{})
	pulumi.RegisterOutputType(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficOutput{})
	pulumi.RegisterOutputType(GetWirelessLatencyStatsItemLatencyStatsBackgroundTrafficRawDistributionOutput{})
	pulumi.RegisterOutputType(GetWirelessRadioSettingsItemOutput{})
	pulumi.RegisterOutputType(GetWirelessRadioSettingsItemFiveGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetWirelessRadioSettingsItemTwoFourGhzSettingsOutput{})
	pulumi.RegisterOutputType(GetWirelessStatusItemOutput{})
	pulumi.RegisterOutputType(GetWirelessStatusItemBasicServiceSetOutput{})
	pulumi.RegisterOutputType(GetWirelessStatusItemBasicServiceSetArrayOutput{})
}
