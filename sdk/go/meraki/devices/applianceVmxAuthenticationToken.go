// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ~>Warning: This resource does not represent a real-world entity in Meraki Dashboard, therefore changing or deleting this resource on its own has no immediate effect. Instead, it is a task part of a Meraki Dashboard workflow. It is executed in Meraki without any additional verification. It does not check if it was executed before or if a similar configuration or action
// already existed previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.NewApplianceVmxAuthenticationToken(ctx, "example", &devices.ApplianceVmxAuthenticationTokenArgs{
//				Serial: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesApplianceVmxAuthenticationTokenExample", example)
//			return nil
//		})
//	}
//
// ```
type ApplianceVmxAuthenticationToken struct {
	pulumi.CustomResourceState

	Item ApplianceVmxAuthenticationTokenItemOutput `pulumi:"item"`
	// serial path parameter.
	Serial pulumi.StringOutput `pulumi:"serial"`
}

// NewApplianceVmxAuthenticationToken registers a new resource with the given unique name, arguments, and options.
func NewApplianceVmxAuthenticationToken(ctx *pulumi.Context,
	name string, args *ApplianceVmxAuthenticationTokenArgs, opts ...pulumi.ResourceOption) (*ApplianceVmxAuthenticationToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Serial == nil {
		return nil, errors.New("invalid value for required argument 'Serial'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplianceVmxAuthenticationToken
	err := ctx.RegisterResource("meraki:devices/applianceVmxAuthenticationToken:ApplianceVmxAuthenticationToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplianceVmxAuthenticationToken gets an existing ApplianceVmxAuthenticationToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplianceVmxAuthenticationToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplianceVmxAuthenticationTokenState, opts ...pulumi.ResourceOption) (*ApplianceVmxAuthenticationToken, error) {
	var resource ApplianceVmxAuthenticationToken
	err := ctx.ReadResource("meraki:devices/applianceVmxAuthenticationToken:ApplianceVmxAuthenticationToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplianceVmxAuthenticationToken resources.
type applianceVmxAuthenticationTokenState struct {
	Item *ApplianceVmxAuthenticationTokenItem `pulumi:"item"`
	// serial path parameter.
	Serial *string `pulumi:"serial"`
}

type ApplianceVmxAuthenticationTokenState struct {
	Item ApplianceVmxAuthenticationTokenItemPtrInput
	// serial path parameter.
	Serial pulumi.StringPtrInput
}

func (ApplianceVmxAuthenticationTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceVmxAuthenticationTokenState)(nil)).Elem()
}

type applianceVmxAuthenticationTokenArgs struct {
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// The set of arguments for constructing a ApplianceVmxAuthenticationToken resource.
type ApplianceVmxAuthenticationTokenArgs struct {
	// serial path parameter.
	Serial pulumi.StringInput
}

func (ApplianceVmxAuthenticationTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applianceVmxAuthenticationTokenArgs)(nil)).Elem()
}

type ApplianceVmxAuthenticationTokenInput interface {
	pulumi.Input

	ToApplianceVmxAuthenticationTokenOutput() ApplianceVmxAuthenticationTokenOutput
	ToApplianceVmxAuthenticationTokenOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenOutput
}

func (*ApplianceVmxAuthenticationToken) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (i *ApplianceVmxAuthenticationToken) ToApplianceVmxAuthenticationTokenOutput() ApplianceVmxAuthenticationTokenOutput {
	return i.ToApplianceVmxAuthenticationTokenOutputWithContext(context.Background())
}

func (i *ApplianceVmxAuthenticationToken) ToApplianceVmxAuthenticationTokenOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenOutput)
}

// ApplianceVmxAuthenticationTokenArrayInput is an input type that accepts ApplianceVmxAuthenticationTokenArray and ApplianceVmxAuthenticationTokenArrayOutput values.
// You can construct a concrete instance of `ApplianceVmxAuthenticationTokenArrayInput` via:
//
//	ApplianceVmxAuthenticationTokenArray{ ApplianceVmxAuthenticationTokenArgs{...} }
type ApplianceVmxAuthenticationTokenArrayInput interface {
	pulumi.Input

	ToApplianceVmxAuthenticationTokenArrayOutput() ApplianceVmxAuthenticationTokenArrayOutput
	ToApplianceVmxAuthenticationTokenArrayOutputWithContext(context.Context) ApplianceVmxAuthenticationTokenArrayOutput
}

type ApplianceVmxAuthenticationTokenArray []ApplianceVmxAuthenticationTokenInput

func (ApplianceVmxAuthenticationTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (i ApplianceVmxAuthenticationTokenArray) ToApplianceVmxAuthenticationTokenArrayOutput() ApplianceVmxAuthenticationTokenArrayOutput {
	return i.ToApplianceVmxAuthenticationTokenArrayOutputWithContext(context.Background())
}

func (i ApplianceVmxAuthenticationTokenArray) ToApplianceVmxAuthenticationTokenArrayOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenArrayOutput)
}

// ApplianceVmxAuthenticationTokenMapInput is an input type that accepts ApplianceVmxAuthenticationTokenMap and ApplianceVmxAuthenticationTokenMapOutput values.
// You can construct a concrete instance of `ApplianceVmxAuthenticationTokenMapInput` via:
//
//	ApplianceVmxAuthenticationTokenMap{ "key": ApplianceVmxAuthenticationTokenArgs{...} }
type ApplianceVmxAuthenticationTokenMapInput interface {
	pulumi.Input

	ToApplianceVmxAuthenticationTokenMapOutput() ApplianceVmxAuthenticationTokenMapOutput
	ToApplianceVmxAuthenticationTokenMapOutputWithContext(context.Context) ApplianceVmxAuthenticationTokenMapOutput
}

type ApplianceVmxAuthenticationTokenMap map[string]ApplianceVmxAuthenticationTokenInput

func (ApplianceVmxAuthenticationTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (i ApplianceVmxAuthenticationTokenMap) ToApplianceVmxAuthenticationTokenMapOutput() ApplianceVmxAuthenticationTokenMapOutput {
	return i.ToApplianceVmxAuthenticationTokenMapOutputWithContext(context.Background())
}

func (i ApplianceVmxAuthenticationTokenMap) ToApplianceVmxAuthenticationTokenMapOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceVmxAuthenticationTokenMapOutput)
}

type ApplianceVmxAuthenticationTokenOutput struct{ *pulumi.OutputState }

func (ApplianceVmxAuthenticationTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (o ApplianceVmxAuthenticationTokenOutput) ToApplianceVmxAuthenticationTokenOutput() ApplianceVmxAuthenticationTokenOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenOutput) ToApplianceVmxAuthenticationTokenOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenOutput) Item() ApplianceVmxAuthenticationTokenItemOutput {
	return o.ApplyT(func(v *ApplianceVmxAuthenticationToken) ApplianceVmxAuthenticationTokenItemOutput { return v.Item }).(ApplianceVmxAuthenticationTokenItemOutput)
}

// serial path parameter.
func (o ApplianceVmxAuthenticationTokenOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplianceVmxAuthenticationToken) pulumi.StringOutput { return v.Serial }).(pulumi.StringOutput)
}

type ApplianceVmxAuthenticationTokenArrayOutput struct{ *pulumi.OutputState }

func (ApplianceVmxAuthenticationTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (o ApplianceVmxAuthenticationTokenArrayOutput) ToApplianceVmxAuthenticationTokenArrayOutput() ApplianceVmxAuthenticationTokenArrayOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenArrayOutput) ToApplianceVmxAuthenticationTokenArrayOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenArrayOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenArrayOutput) Index(i pulumi.IntInput) ApplianceVmxAuthenticationTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplianceVmxAuthenticationToken {
		return vs[0].([]*ApplianceVmxAuthenticationToken)[vs[1].(int)]
	}).(ApplianceVmxAuthenticationTokenOutput)
}

type ApplianceVmxAuthenticationTokenMapOutput struct{ *pulumi.OutputState }

func (ApplianceVmxAuthenticationTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplianceVmxAuthenticationToken)(nil)).Elem()
}

func (o ApplianceVmxAuthenticationTokenMapOutput) ToApplianceVmxAuthenticationTokenMapOutput() ApplianceVmxAuthenticationTokenMapOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenMapOutput) ToApplianceVmxAuthenticationTokenMapOutputWithContext(ctx context.Context) ApplianceVmxAuthenticationTokenMapOutput {
	return o
}

func (o ApplianceVmxAuthenticationTokenMapOutput) MapIndex(k pulumi.StringInput) ApplianceVmxAuthenticationTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplianceVmxAuthenticationToken {
		return vs[0].(map[string]*ApplianceVmxAuthenticationToken)[vs[1].(string)]
	}).(ApplianceVmxAuthenticationTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVmxAuthenticationTokenInput)(nil)).Elem(), &ApplianceVmxAuthenticationToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVmxAuthenticationTokenArrayInput)(nil)).Elem(), ApplianceVmxAuthenticationTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceVmxAuthenticationTokenMapInput)(nil)).Elem(), ApplianceVmxAuthenticationTokenMap{})
	pulumi.RegisterOutputType(ApplianceVmxAuthenticationTokenOutput{})
	pulumi.RegisterOutputType(ApplianceVmxAuthenticationTokenArrayOutput{})
	pulumi.RegisterOutputType(ApplianceVmxAuthenticationTokenMapOutput{})
}
