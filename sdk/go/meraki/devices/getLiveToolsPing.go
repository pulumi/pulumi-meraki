// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupLiveToolsPing(ctx, &devices.LookupLiveToolsPingArgs{
//				Id:     "string",
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesLiveToolsPingExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupLiveToolsPing(ctx *pulumi.Context, args *LookupLiveToolsPingArgs, opts ...pulumi.InvokeOption) (*LookupLiveToolsPingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLiveToolsPingResult
	err := ctx.Invoke("meraki:devices/getLiveToolsPing:getLiveToolsPing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLiveToolsPing.
type LookupLiveToolsPingArgs struct {
	// id path parameter.
	Id string `pulumi:"id"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getLiveToolsPing.
type LookupLiveToolsPingResult struct {
	// id path parameter.
	Id   string               `pulumi:"id"`
	Item GetLiveToolsPingItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupLiveToolsPingOutput(ctx *pulumi.Context, args LookupLiveToolsPingOutputArgs, opts ...pulumi.InvokeOption) LookupLiveToolsPingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLiveToolsPingResultOutput, error) {
			args := v.(LookupLiveToolsPingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:devices/getLiveToolsPing:getLiveToolsPing", args, LookupLiveToolsPingResultOutput{}, options).(LookupLiveToolsPingResultOutput), nil
		}).(LookupLiveToolsPingResultOutput)
}

// A collection of arguments for invoking getLiveToolsPing.
type LookupLiveToolsPingOutputArgs struct {
	// id path parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupLiveToolsPingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveToolsPingArgs)(nil)).Elem()
}

// A collection of values returned by getLiveToolsPing.
type LookupLiveToolsPingResultOutput struct{ *pulumi.OutputState }

func (LookupLiveToolsPingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveToolsPingResult)(nil)).Elem()
}

func (o LookupLiveToolsPingResultOutput) ToLookupLiveToolsPingResultOutput() LookupLiveToolsPingResultOutput {
	return o
}

func (o LookupLiveToolsPingResultOutput) ToLookupLiveToolsPingResultOutputWithContext(ctx context.Context) LookupLiveToolsPingResultOutput {
	return o
}

// id path parameter.
func (o LookupLiveToolsPingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveToolsPingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLiveToolsPingResultOutput) Item() GetLiveToolsPingItemOutput {
	return o.ApplyT(func(v LookupLiveToolsPingResult) GetLiveToolsPingItem { return v.Item }).(GetLiveToolsPingItemOutput)
}

// serial path parameter.
func (o LookupLiveToolsPingResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveToolsPingResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLiveToolsPingResultOutput{})
}
