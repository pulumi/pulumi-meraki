// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupCameraSense(ctx, &devices.LookupCameraSenseArgs{
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesCameraSenseExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupCameraSense(ctx *pulumi.Context, args *LookupCameraSenseArgs, opts ...pulumi.InvokeOption) (*LookupCameraSenseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCameraSenseResult
	err := ctx.Invoke("meraki:devices/getCameraSense:getCameraSense", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCameraSense.
type LookupCameraSenseArgs struct {
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getCameraSense.
type LookupCameraSenseResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string             `pulumi:"id"`
	Item GetCameraSenseItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupCameraSenseOutput(ctx *pulumi.Context, args LookupCameraSenseOutputArgs, opts ...pulumi.InvokeOption) LookupCameraSenseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCameraSenseResultOutput, error) {
			args := v.(LookupCameraSenseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:devices/getCameraSense:getCameraSense", args, LookupCameraSenseResultOutput{}, options).(LookupCameraSenseResultOutput), nil
		}).(LookupCameraSenseResultOutput)
}

// A collection of arguments for invoking getCameraSense.
type LookupCameraSenseOutputArgs struct {
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupCameraSenseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCameraSenseArgs)(nil)).Elem()
}

// A collection of values returned by getCameraSense.
type LookupCameraSenseResultOutput struct{ *pulumi.OutputState }

func (LookupCameraSenseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCameraSenseResult)(nil)).Elem()
}

func (o LookupCameraSenseResultOutput) ToLookupCameraSenseResultOutput() LookupCameraSenseResultOutput {
	return o
}

func (o LookupCameraSenseResultOutput) ToLookupCameraSenseResultOutputWithContext(ctx context.Context) LookupCameraSenseResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCameraSenseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCameraSenseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCameraSenseResultOutput) Item() GetCameraSenseItemOutput {
	return o.ApplyT(func(v LookupCameraSenseResult) GetCameraSenseItem { return v.Item }).(GetCameraSenseItemOutput)
}

// serial path parameter.
func (o LookupCameraSenseResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCameraSenseResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCameraSenseResultOutput{})
}
