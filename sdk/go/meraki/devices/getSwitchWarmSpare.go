// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupSwitchWarmSpare(ctx, &devices.LookupSwitchWarmSpareArgs{
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesSwitchWarmSpareExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupSwitchWarmSpare(ctx *pulumi.Context, args *LookupSwitchWarmSpareArgs, opts ...pulumi.InvokeOption) (*LookupSwitchWarmSpareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSwitchWarmSpareResult
	err := ctx.Invoke("meraki:devices/getSwitchWarmSpare:getSwitchWarmSpare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitchWarmSpare.
type LookupSwitchWarmSpareArgs struct {
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getSwitchWarmSpare.
type LookupSwitchWarmSpareResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                 `pulumi:"id"`
	Item GetSwitchWarmSpareItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupSwitchWarmSpareOutput(ctx *pulumi.Context, args LookupSwitchWarmSpareOutputArgs, opts ...pulumi.InvokeOption) LookupSwitchWarmSpareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSwitchWarmSpareResultOutput, error) {
			args := v.(LookupSwitchWarmSpareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:devices/getSwitchWarmSpare:getSwitchWarmSpare", args, LookupSwitchWarmSpareResultOutput{}, options).(LookupSwitchWarmSpareResultOutput), nil
		}).(LookupSwitchWarmSpareResultOutput)
}

// A collection of arguments for invoking getSwitchWarmSpare.
type LookupSwitchWarmSpareOutputArgs struct {
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupSwitchWarmSpareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchWarmSpareArgs)(nil)).Elem()
}

// A collection of values returned by getSwitchWarmSpare.
type LookupSwitchWarmSpareResultOutput struct{ *pulumi.OutputState }

func (LookupSwitchWarmSpareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSwitchWarmSpareResult)(nil)).Elem()
}

func (o LookupSwitchWarmSpareResultOutput) ToLookupSwitchWarmSpareResultOutput() LookupSwitchWarmSpareResultOutput {
	return o
}

func (o LookupSwitchWarmSpareResultOutput) ToLookupSwitchWarmSpareResultOutputWithContext(ctx context.Context) LookupSwitchWarmSpareResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSwitchWarmSpareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchWarmSpareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSwitchWarmSpareResultOutput) Item() GetSwitchWarmSpareItemOutput {
	return o.ApplyT(func(v LookupSwitchWarmSpareResult) GetSwitchWarmSpareItem { return v.Item }).(GetSwitchWarmSpareItemOutput)
}

// serial path parameter.
func (o LookupSwitchWarmSpareResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSwitchWarmSpareResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSwitchWarmSpareResultOutput{})
}
