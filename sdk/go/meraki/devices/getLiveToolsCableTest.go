// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.GetLiveToolsCableTest(ctx, &devices.GetLiveToolsCableTestArgs{
//				Id:     "string",
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesLiveToolsCableTestExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func GetLiveToolsCableTest(ctx *pulumi.Context, args *GetLiveToolsCableTestArgs, opts ...pulumi.InvokeOption) (*GetLiveToolsCableTestResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLiveToolsCableTestResult
	err := ctx.Invoke("meraki:devices/getLiveToolsCableTest:getLiveToolsCableTest", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLiveToolsCableTest.
type GetLiveToolsCableTestArgs struct {
	// id path parameter.
	Id string `pulumi:"id"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getLiveToolsCableTest.
type GetLiveToolsCableTestResult struct {
	// id path parameter.
	Id   string                    `pulumi:"id"`
	Item GetLiveToolsCableTestItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func GetLiveToolsCableTestOutput(ctx *pulumi.Context, args GetLiveToolsCableTestOutputArgs, opts ...pulumi.InvokeOption) GetLiveToolsCableTestResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLiveToolsCableTestResult, error) {
			args := v.(GetLiveToolsCableTestArgs)
			r, err := GetLiveToolsCableTest(ctx, &args, opts...)
			var s GetLiveToolsCableTestResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLiveToolsCableTestResultOutput)
}

// A collection of arguments for invoking getLiveToolsCableTest.
type GetLiveToolsCableTestOutputArgs struct {
	// id path parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetLiveToolsCableTestOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestArgs)(nil)).Elem()
}

// A collection of values returned by getLiveToolsCableTest.
type GetLiveToolsCableTestResultOutput struct{ *pulumi.OutputState }

func (GetLiveToolsCableTestResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveToolsCableTestResult)(nil)).Elem()
}

func (o GetLiveToolsCableTestResultOutput) ToGetLiveToolsCableTestResultOutput() GetLiveToolsCableTestResultOutput {
	return o
}

func (o GetLiveToolsCableTestResultOutput) ToGetLiveToolsCableTestResultOutputWithContext(ctx context.Context) GetLiveToolsCableTestResultOutput {
	return o
}

// id path parameter.
func (o GetLiveToolsCableTestResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLiveToolsCableTestResultOutput) Item() GetLiveToolsCableTestItemOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestResult) GetLiveToolsCableTestItem { return v.Item }).(GetLiveToolsCableTestItemOutput)
}

// serial path parameter.
func (o GetLiveToolsCableTestResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetLiveToolsCableTestResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLiveToolsCableTestResultOutput{})
}
