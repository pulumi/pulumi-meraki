// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupCellularSims(ctx, &devices.LookupCellularSimsArgs{
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesCellularSimsExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupCellularSims(ctx *pulumi.Context, args *LookupCellularSimsArgs, opts ...pulumi.InvokeOption) (*LookupCellularSimsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCellularSimsResult
	err := ctx.Invoke("meraki:devices/getCellularSims:getCellularSims", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCellularSims.
type LookupCellularSimsArgs struct {
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getCellularSims.
type LookupCellularSimsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string              `pulumi:"id"`
	Item GetCellularSimsItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupCellularSimsOutput(ctx *pulumi.Context, args LookupCellularSimsOutputArgs, opts ...pulumi.InvokeOption) LookupCellularSimsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCellularSimsResult, error) {
			args := v.(LookupCellularSimsArgs)
			r, err := LookupCellularSims(ctx, &args, opts...)
			var s LookupCellularSimsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCellularSimsResultOutput)
}

// A collection of arguments for invoking getCellularSims.
type LookupCellularSimsOutputArgs struct {
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupCellularSimsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellularSimsArgs)(nil)).Elem()
}

// A collection of values returned by getCellularSims.
type LookupCellularSimsResultOutput struct{ *pulumi.OutputState }

func (LookupCellularSimsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellularSimsResult)(nil)).Elem()
}

func (o LookupCellularSimsResultOutput) ToLookupCellularSimsResultOutput() LookupCellularSimsResultOutput {
	return o
}

func (o LookupCellularSimsResultOutput) ToLookupCellularSimsResultOutputWithContext(ctx context.Context) LookupCellularSimsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCellularSimsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularSimsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCellularSimsResultOutput) Item() GetCellularSimsItemOutput {
	return o.ApplyT(func(v LookupCellularSimsResult) GetCellularSimsItem { return v.Item }).(GetCellularSimsItemOutput)
}

// serial path parameter.
func (o LookupCellularSimsResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularSimsResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCellularSimsResultOutput{})
}
