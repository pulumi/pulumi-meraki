// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupManagementInterface(ctx, &devices.LookupManagementInterfaceArgs{
//				Serial: "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesManagementInterfaceExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupManagementInterface(ctx *pulumi.Context, args *LookupManagementInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupManagementInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagementInterfaceResult
	err := ctx.Invoke("meraki:devices/getManagementInterface:getManagementInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagementInterface.
type LookupManagementInterfaceArgs struct {
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getManagementInterface.
type LookupManagementInterfaceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string                     `pulumi:"id"`
	Item GetManagementInterfaceItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupManagementInterfaceOutput(ctx *pulumi.Context, args LookupManagementInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupManagementInterfaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagementInterfaceResultOutput, error) {
			args := v.(LookupManagementInterfaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:devices/getManagementInterface:getManagementInterface", args, LookupManagementInterfaceResultOutput{}, options).(LookupManagementInterfaceResultOutput), nil
		}).(LookupManagementInterfaceResultOutput)
}

// A collection of arguments for invoking getManagementInterface.
type LookupManagementInterfaceOutputArgs struct {
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupManagementInterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementInterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getManagementInterface.
type LookupManagementInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupManagementInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementInterfaceResult)(nil)).Elem()
}

func (o LookupManagementInterfaceResultOutput) ToLookupManagementInterfaceResultOutput() LookupManagementInterfaceResultOutput {
	return o
}

func (o LookupManagementInterfaceResultOutput) ToLookupManagementInterfaceResultOutputWithContext(ctx context.Context) LookupManagementInterfaceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupManagementInterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementInterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupManagementInterfaceResultOutput) Item() GetManagementInterfaceItemOutput {
	return o.ApplyT(func(v LookupManagementInterfaceResult) GetManagementInterfaceItem { return v.Item }).(GetManagementInterfaceItemOutput)
}

// serial path parameter.
func (o LookupManagementInterfaceResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementInterfaceResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagementInterfaceResultOutput{})
}
