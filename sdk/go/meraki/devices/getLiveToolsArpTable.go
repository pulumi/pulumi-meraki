// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.LookupLiveToolsArpTable(ctx, &devices.LookupLiveToolsArpTableArgs{
//				ArpTableId: "string",
//				Serial:     "string",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesLiveToolsArpTableExample", example.Item)
//			return nil
//		})
//	}
//
// ```
func LookupLiveToolsArpTable(ctx *pulumi.Context, args *LookupLiveToolsArpTableArgs, opts ...pulumi.InvokeOption) (*LookupLiveToolsArpTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLiveToolsArpTableResult
	err := ctx.Invoke("meraki:devices/getLiveToolsArpTable:getLiveToolsArpTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLiveToolsArpTable.
type LookupLiveToolsArpTableArgs struct {
	// arpTableId path parameter. Arp table ID
	ArpTableId string `pulumi:"arpTableId"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// A collection of values returned by getLiveToolsArpTable.
type LookupLiveToolsArpTableResult struct {
	// arpTableId path parameter. Arp table ID
	ArpTableId string `pulumi:"arpTableId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string                   `pulumi:"id"`
	Item GetLiveToolsArpTableItem `pulumi:"item"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

func LookupLiveToolsArpTableOutput(ctx *pulumi.Context, args LookupLiveToolsArpTableOutputArgs, opts ...pulumi.InvokeOption) LookupLiveToolsArpTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLiveToolsArpTableResultOutput, error) {
			args := v.(LookupLiveToolsArpTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("meraki:devices/getLiveToolsArpTable:getLiveToolsArpTable", args, LookupLiveToolsArpTableResultOutput{}, options).(LookupLiveToolsArpTableResultOutput), nil
		}).(LookupLiveToolsArpTableResultOutput)
}

// A collection of arguments for invoking getLiveToolsArpTable.
type LookupLiveToolsArpTableOutputArgs struct {
	// arpTableId path parameter. Arp table ID
	ArpTableId pulumi.StringInput `pulumi:"arpTableId"`
	// serial path parameter.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (LookupLiveToolsArpTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveToolsArpTableArgs)(nil)).Elem()
}

// A collection of values returned by getLiveToolsArpTable.
type LookupLiveToolsArpTableResultOutput struct{ *pulumi.OutputState }

func (LookupLiveToolsArpTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveToolsArpTableResult)(nil)).Elem()
}

func (o LookupLiveToolsArpTableResultOutput) ToLookupLiveToolsArpTableResultOutput() LookupLiveToolsArpTableResultOutput {
	return o
}

func (o LookupLiveToolsArpTableResultOutput) ToLookupLiveToolsArpTableResultOutputWithContext(ctx context.Context) LookupLiveToolsArpTableResultOutput {
	return o
}

// arpTableId path parameter. Arp table ID
func (o LookupLiveToolsArpTableResultOutput) ArpTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveToolsArpTableResult) string { return v.ArpTableId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLiveToolsArpTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveToolsArpTableResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLiveToolsArpTableResultOutput) Item() GetLiveToolsArpTableItemOutput {
	return o.ApplyT(func(v LookupLiveToolsArpTableResult) GetLiveToolsArpTableItem { return v.Item }).(GetLiveToolsArpTableItemOutput)
}

// serial path parameter.
func (o LookupLiveToolsArpTableResultOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveToolsArpTableResult) string { return v.Serial }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLiveToolsArpTableResultOutput{})
}
