// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/devices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devices.NewCellularGatewayPortForwardingRules(ctx, "example", &devices.CellularGatewayPortForwardingRulesArgs{
//				Rules: devices.CellularGatewayPortForwardingRulesRuleArray{
//					&devices.CellularGatewayPortForwardingRulesRuleArgs{
//						Access:      pulumi.String("any"),
//						Lan_ip:      "172.31.128.5",
//						Local_port:  "4",
//						Name:        pulumi.String("test"),
//						Protocol:    pulumi.String("tcp"),
//						Public_port: "11-12",
//					},
//				},
//				Serial: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiDevicesCellularGatewayPortForwardingRulesExample", example)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import meraki:devices/cellularGatewayPortForwardingRules:CellularGatewayPortForwardingRules example "serial"
// ```
type CellularGatewayPortForwardingRules struct {
	pulumi.CustomResourceState

	// An array of port forwarding params
	Rules CellularGatewayPortForwardingRulesRuleArrayOutput `pulumi:"rules"`
	// serial path parameter.
	Serial pulumi.StringOutput `pulumi:"serial"`
}

// NewCellularGatewayPortForwardingRules registers a new resource with the given unique name, arguments, and options.
func NewCellularGatewayPortForwardingRules(ctx *pulumi.Context,
	name string, args *CellularGatewayPortForwardingRulesArgs, opts ...pulumi.ResourceOption) (*CellularGatewayPortForwardingRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Serial == nil {
		return nil, errors.New("invalid value for required argument 'Serial'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CellularGatewayPortForwardingRules
	err := ctx.RegisterResource("meraki:devices/cellularGatewayPortForwardingRules:CellularGatewayPortForwardingRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCellularGatewayPortForwardingRules gets an existing CellularGatewayPortForwardingRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCellularGatewayPortForwardingRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CellularGatewayPortForwardingRulesState, opts ...pulumi.ResourceOption) (*CellularGatewayPortForwardingRules, error) {
	var resource CellularGatewayPortForwardingRules
	err := ctx.ReadResource("meraki:devices/cellularGatewayPortForwardingRules:CellularGatewayPortForwardingRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CellularGatewayPortForwardingRules resources.
type cellularGatewayPortForwardingRulesState struct {
	// An array of port forwarding params
	Rules []CellularGatewayPortForwardingRulesRule `pulumi:"rules"`
	// serial path parameter.
	Serial *string `pulumi:"serial"`
}

type CellularGatewayPortForwardingRulesState struct {
	// An array of port forwarding params
	Rules CellularGatewayPortForwardingRulesRuleArrayInput
	// serial path parameter.
	Serial pulumi.StringPtrInput
}

func (CellularGatewayPortForwardingRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*cellularGatewayPortForwardingRulesState)(nil)).Elem()
}

type cellularGatewayPortForwardingRulesArgs struct {
	// An array of port forwarding params
	Rules []CellularGatewayPortForwardingRulesRule `pulumi:"rules"`
	// serial path parameter.
	Serial string `pulumi:"serial"`
}

// The set of arguments for constructing a CellularGatewayPortForwardingRules resource.
type CellularGatewayPortForwardingRulesArgs struct {
	// An array of port forwarding params
	Rules CellularGatewayPortForwardingRulesRuleArrayInput
	// serial path parameter.
	Serial pulumi.StringInput
}

func (CellularGatewayPortForwardingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cellularGatewayPortForwardingRulesArgs)(nil)).Elem()
}

type CellularGatewayPortForwardingRulesInput interface {
	pulumi.Input

	ToCellularGatewayPortForwardingRulesOutput() CellularGatewayPortForwardingRulesOutput
	ToCellularGatewayPortForwardingRulesOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesOutput
}

func (*CellularGatewayPortForwardingRules) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (i *CellularGatewayPortForwardingRules) ToCellularGatewayPortForwardingRulesOutput() CellularGatewayPortForwardingRulesOutput {
	return i.ToCellularGatewayPortForwardingRulesOutputWithContext(context.Background())
}

func (i *CellularGatewayPortForwardingRules) ToCellularGatewayPortForwardingRulesOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayPortForwardingRulesOutput)
}

// CellularGatewayPortForwardingRulesArrayInput is an input type that accepts CellularGatewayPortForwardingRulesArray and CellularGatewayPortForwardingRulesArrayOutput values.
// You can construct a concrete instance of `CellularGatewayPortForwardingRulesArrayInput` via:
//
//	CellularGatewayPortForwardingRulesArray{ CellularGatewayPortForwardingRulesArgs{...} }
type CellularGatewayPortForwardingRulesArrayInput interface {
	pulumi.Input

	ToCellularGatewayPortForwardingRulesArrayOutput() CellularGatewayPortForwardingRulesArrayOutput
	ToCellularGatewayPortForwardingRulesArrayOutputWithContext(context.Context) CellularGatewayPortForwardingRulesArrayOutput
}

type CellularGatewayPortForwardingRulesArray []CellularGatewayPortForwardingRulesInput

func (CellularGatewayPortForwardingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (i CellularGatewayPortForwardingRulesArray) ToCellularGatewayPortForwardingRulesArrayOutput() CellularGatewayPortForwardingRulesArrayOutput {
	return i.ToCellularGatewayPortForwardingRulesArrayOutputWithContext(context.Background())
}

func (i CellularGatewayPortForwardingRulesArray) ToCellularGatewayPortForwardingRulesArrayOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayPortForwardingRulesArrayOutput)
}

// CellularGatewayPortForwardingRulesMapInput is an input type that accepts CellularGatewayPortForwardingRulesMap and CellularGatewayPortForwardingRulesMapOutput values.
// You can construct a concrete instance of `CellularGatewayPortForwardingRulesMapInput` via:
//
//	CellularGatewayPortForwardingRulesMap{ "key": CellularGatewayPortForwardingRulesArgs{...} }
type CellularGatewayPortForwardingRulesMapInput interface {
	pulumi.Input

	ToCellularGatewayPortForwardingRulesMapOutput() CellularGatewayPortForwardingRulesMapOutput
	ToCellularGatewayPortForwardingRulesMapOutputWithContext(context.Context) CellularGatewayPortForwardingRulesMapOutput
}

type CellularGatewayPortForwardingRulesMap map[string]CellularGatewayPortForwardingRulesInput

func (CellularGatewayPortForwardingRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (i CellularGatewayPortForwardingRulesMap) ToCellularGatewayPortForwardingRulesMapOutput() CellularGatewayPortForwardingRulesMapOutput {
	return i.ToCellularGatewayPortForwardingRulesMapOutputWithContext(context.Background())
}

func (i CellularGatewayPortForwardingRulesMap) ToCellularGatewayPortForwardingRulesMapOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularGatewayPortForwardingRulesMapOutput)
}

type CellularGatewayPortForwardingRulesOutput struct{ *pulumi.OutputState }

func (CellularGatewayPortForwardingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (o CellularGatewayPortForwardingRulesOutput) ToCellularGatewayPortForwardingRulesOutput() CellularGatewayPortForwardingRulesOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesOutput) ToCellularGatewayPortForwardingRulesOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesOutput {
	return o
}

// An array of port forwarding params
func (o CellularGatewayPortForwardingRulesOutput) Rules() CellularGatewayPortForwardingRulesRuleArrayOutput {
	return o.ApplyT(func(v *CellularGatewayPortForwardingRules) CellularGatewayPortForwardingRulesRuleArrayOutput {
		return v.Rules
	}).(CellularGatewayPortForwardingRulesRuleArrayOutput)
}

// serial path parameter.
func (o CellularGatewayPortForwardingRulesOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v *CellularGatewayPortForwardingRules) pulumi.StringOutput { return v.Serial }).(pulumi.StringOutput)
}

type CellularGatewayPortForwardingRulesArrayOutput struct{ *pulumi.OutputState }

func (CellularGatewayPortForwardingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (o CellularGatewayPortForwardingRulesArrayOutput) ToCellularGatewayPortForwardingRulesArrayOutput() CellularGatewayPortForwardingRulesArrayOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesArrayOutput) ToCellularGatewayPortForwardingRulesArrayOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesArrayOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesArrayOutput) Index(i pulumi.IntInput) CellularGatewayPortForwardingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CellularGatewayPortForwardingRules {
		return vs[0].([]*CellularGatewayPortForwardingRules)[vs[1].(int)]
	}).(CellularGatewayPortForwardingRulesOutput)
}

type CellularGatewayPortForwardingRulesMapOutput struct{ *pulumi.OutputState }

func (CellularGatewayPortForwardingRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CellularGatewayPortForwardingRules)(nil)).Elem()
}

func (o CellularGatewayPortForwardingRulesMapOutput) ToCellularGatewayPortForwardingRulesMapOutput() CellularGatewayPortForwardingRulesMapOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesMapOutput) ToCellularGatewayPortForwardingRulesMapOutputWithContext(ctx context.Context) CellularGatewayPortForwardingRulesMapOutput {
	return o
}

func (o CellularGatewayPortForwardingRulesMapOutput) MapIndex(k pulumi.StringInput) CellularGatewayPortForwardingRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CellularGatewayPortForwardingRules {
		return vs[0].(map[string]*CellularGatewayPortForwardingRules)[vs[1].(string)]
	}).(CellularGatewayPortForwardingRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayPortForwardingRulesInput)(nil)).Elem(), &CellularGatewayPortForwardingRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayPortForwardingRulesArrayInput)(nil)).Elem(), CellularGatewayPortForwardingRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularGatewayPortForwardingRulesMapInput)(nil)).Elem(), CellularGatewayPortForwardingRulesMap{})
	pulumi.RegisterOutputType(CellularGatewayPortForwardingRulesOutput{})
	pulumi.RegisterOutputType(CellularGatewayPortForwardingRulesArrayOutput{})
	pulumi.RegisterOutputType(CellularGatewayPortForwardingRulesMapOutput{})
}
