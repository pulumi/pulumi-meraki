// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package administered

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/administered"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := administered.GetLicensingSubscriptionSubscriptionsComplianceStatuses(ctx, &administered.GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs{
//				OrganizationIds: []string{
//					"string",
//				},
//				SubscriptionIds: []string{
//					"string",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiAdministeredLicensingSubscriptionSubscriptionsComplianceStatusesExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func GetLicensingSubscriptionSubscriptionsComplianceStatuses(ctx *pulumi.Context, args *GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs, opts ...pulumi.InvokeOption) (*GetLicensingSubscriptionSubscriptionsComplianceStatusesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLicensingSubscriptionSubscriptionsComplianceStatusesResult
	err := ctx.Invoke("meraki:administered/getLicensingSubscriptionSubscriptionsComplianceStatuses:getLicensingSubscriptionSubscriptionsComplianceStatuses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLicensingSubscriptionSubscriptionsComplianceStatuses.
type GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs struct {
	// organizationIds query parameter. Organizations to get subscription compliance information for
	OrganizationIds []string `pulumi:"organizationIds"`
	// subscriptionIds query parameter. Subscription ids
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

// A collection of values returned by getLicensingSubscriptionSubscriptionsComplianceStatuses.
type GetLicensingSubscriptionSubscriptionsComplianceStatusesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseLicensingGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses
	Items []GetLicensingSubscriptionSubscriptionsComplianceStatusesItem `pulumi:"items"`
	// organizationIds query parameter. Organizations to get subscription compliance information for
	OrganizationIds []string `pulumi:"organizationIds"`
	// subscriptionIds query parameter. Subscription ids
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

func GetLicensingSubscriptionSubscriptionsComplianceStatusesOutput(ctx *pulumi.Context, args GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs, opts ...pulumi.InvokeOption) GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLicensingSubscriptionSubscriptionsComplianceStatusesResult, error) {
			args := v.(GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs)
			r, err := GetLicensingSubscriptionSubscriptionsComplianceStatuses(ctx, &args, opts...)
			var s GetLicensingSubscriptionSubscriptionsComplianceStatusesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput)
}

// A collection of arguments for invoking getLicensingSubscriptionSubscriptionsComplianceStatuses.
type GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs struct {
	// organizationIds query parameter. Organizations to get subscription compliance information for
	OrganizationIds pulumi.StringArrayInput `pulumi:"organizationIds"`
	// subscriptionIds query parameter. Subscription ids
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesArgs)(nil)).Elem()
}

// A collection of values returned by getLicensingSubscriptionSubscriptionsComplianceStatuses.
type GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesResult)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseLicensingGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) Items() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesResult) []GetLicensingSubscriptionSubscriptionsComplianceStatusesItem {
		return v.Items
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput)
}

// organizationIds query parameter. Organizations to get subscription compliance information for
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) OrganizationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesResult) []string {
		return v.OrganizationIds
	}).(pulumi.StringArrayOutput)
}

// subscriptionIds query parameter. Subscription ids
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesResult) []string {
		return v.SubscriptionIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesResultOutput{})
}
