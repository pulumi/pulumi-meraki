// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package administered

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/administered"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := administered.GetLicensingSubscriptionSubscriptions(ctx, &administered.GetLicensingSubscriptionSubscriptionsArgs{
//				EndDate:      pulumi.StringRef("string"),
//				EndingBefore: pulumi.StringRef("string"),
//				OrganizationIds: []string{
//					"string",
//				},
//				PerPage: pulumi.IntRef(1),
//				ProductTypes: []string{
//					"string",
//				},
//				StartDate:     pulumi.StringRef("string"),
//				StartingAfter: pulumi.StringRef("string"),
//				Statuses: []string{
//					"string",
//				},
//				SubscriptionIds: []string{
//					"string",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("merakiAdministeredLicensingSubscriptionSubscriptionsExample", example.Items)
//			return nil
//		})
//	}
//
// ```
func GetLicensingSubscriptionSubscriptions(ctx *pulumi.Context, args *GetLicensingSubscriptionSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetLicensingSubscriptionSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLicensingSubscriptionSubscriptionsResult
	err := ctx.Invoke("meraki:administered/getLicensingSubscriptionSubscriptions:getLicensingSubscriptionSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLicensingSubscriptionSubscriptions.
type GetLicensingSubscriptionSubscriptionsArgs struct {
	// endDate query parameter. Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	EndDate *string `pulumi:"endDate"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// organizationIds query parameter. Organizations to get associated subscriptions for
	OrganizationIds []string `pulumi:"organizationIds"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. List of product types that returned subscriptions need to have entitlements for.
	ProductTypes []string `pulumi:"productTypes"`
	// startDate query parameter. Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	StartDate *string `pulumi:"startDate"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// statuses query parameter. List of statuses that returned subscriptions can have
	Statuses []string `pulumi:"statuses"`
	// subscriptionIds query parameter. List of subscription ids to fetch
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

// A collection of values returned by getLicensingSubscriptionSubscriptions.
type GetLicensingSubscriptionSubscriptionsResult struct {
	// endDate query parameter. Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	EndDate *string `pulumi:"endDate"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `pulumi:"endingBefore"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of ResponseLicensingGetAdministeredLicensingSubscriptionSubscriptions
	Items []GetLicensingSubscriptionSubscriptionsItem `pulumi:"items"`
	// organizationIds query parameter. Organizations to get associated subscriptions for
	OrganizationIds []string `pulumi:"organizationIds"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage *int `pulumi:"perPage"`
	// productTypes query parameter. List of product types that returned subscriptions need to have entitlements for.
	ProductTypes []string `pulumi:"productTypes"`
	// startDate query parameter. Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	StartDate *string `pulumi:"startDate"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `pulumi:"startingAfter"`
	// statuses query parameter. List of statuses that returned subscriptions can have
	Statuses []string `pulumi:"statuses"`
	// subscriptionIds query parameter. List of subscription ids to fetch
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

func GetLicensingSubscriptionSubscriptionsOutput(ctx *pulumi.Context, args GetLicensingSubscriptionSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetLicensingSubscriptionSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLicensingSubscriptionSubscriptionsResultOutput, error) {
			args := v.(GetLicensingSubscriptionSubscriptionsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetLicensingSubscriptionSubscriptionsResult
			secret, err := ctx.InvokePackageRaw("meraki:administered/getLicensingSubscriptionSubscriptions:getLicensingSubscriptionSubscriptions", args, &rv, "", opts...)
			if err != nil {
				return GetLicensingSubscriptionSubscriptionsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetLicensingSubscriptionSubscriptionsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetLicensingSubscriptionSubscriptionsResultOutput), nil
			}
			return output, nil
		}).(GetLicensingSubscriptionSubscriptionsResultOutput)
}

// A collection of arguments for invoking getLicensingSubscriptionSubscriptions.
type GetLicensingSubscriptionSubscriptionsOutputArgs struct {
	// endDate query parameter. Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore pulumi.StringPtrInput `pulumi:"endingBefore"`
	// organizationIds query parameter. Organizations to get associated subscriptions for
	OrganizationIds pulumi.StringArrayInput `pulumi:"organizationIds"`
	// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// productTypes query parameter. List of product types that returned subscriptions need to have entitlements for.
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// startDate query parameter. Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[
	// ]=?' in the request. Accepted options include lt, gt, lte, gte.
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter pulumi.StringPtrInput `pulumi:"startingAfter"`
	// statuses query parameter. List of statuses that returned subscriptions can have
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// subscriptionIds query parameter. List of subscription ids to fetch
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

func (GetLicensingSubscriptionSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getLicensingSubscriptionSubscriptions.
type GetLicensingSubscriptionSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsResult)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsResultOutput) ToGetLicensingSubscriptionSubscriptionsResultOutput() GetLicensingSubscriptionSubscriptionsResultOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsResultOutput) ToGetLicensingSubscriptionSubscriptionsResultOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsResultOutput {
	return o
}

// endDate query parameter. Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[
// ]=?' in the request. Accepted options include lt, gt, lte, gte.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// endingBefore query parameter. A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) EndingBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) *string { return v.EndingBefore }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of ResponseLicensingGetAdministeredLicensingSubscriptionSubscriptions
func (o GetLicensingSubscriptionSubscriptionsResultOutput) Items() GetLicensingSubscriptionSubscriptionsItemArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) []GetLicensingSubscriptionSubscriptionsItem {
		return v.Items
	}).(GetLicensingSubscriptionSubscriptionsItemArrayOutput)
}

// organizationIds query parameter. Organizations to get associated subscriptions for
func (o GetLicensingSubscriptionSubscriptionsResultOutput) OrganizationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) []string { return v.OrganizationIds }).(pulumi.StringArrayOutput)
}

// perPage query parameter. The number of entries per page returned. Acceptable range is 3 1000. Default is 1000.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// productTypes query parameter. List of product types that returned subscriptions need to have entitlements for.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// startDate query parameter. Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[
// ]=?' in the request. Accepted options include lt, gt, lte, gte.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// startingAfter query parameter. A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
func (o GetLicensingSubscriptionSubscriptionsResultOutput) StartingAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) *string { return v.StartingAfter }).(pulumi.StringPtrOutput)
}

// statuses query parameter. List of statuses that returned subscriptions can have
func (o GetLicensingSubscriptionSubscriptionsResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

// subscriptionIds query parameter. List of subscription ids to fetch
func (o GetLicensingSubscriptionSubscriptionsResultOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsResult) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsResultOutput{})
}
