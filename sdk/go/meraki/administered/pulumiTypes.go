// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package administered

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-meraki/sdk/go/meraki/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LicensingSubscriptionSubscriptionsBindItem struct {
	// Array of errors if failed
	Errors []string `pulumi:"errors"`
	// A list of entitlements required to successfully bind the networks to the subscription
	InsufficientEntitlements []LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement `pulumi:"insufficientEntitlements"`
	// Unbound networks
	Networks []LicensingSubscriptionSubscriptionsBindItemNetwork `pulumi:"networks"`
	// Subscription ID
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// LicensingSubscriptionSubscriptionsBindItemInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemArgs and LicensingSubscriptionSubscriptionsBindItemOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemInput` via:
//
//	LicensingSubscriptionSubscriptionsBindItemArgs{...}
type LicensingSubscriptionSubscriptionsBindItemInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemOutput() LicensingSubscriptionSubscriptionsBindItemOutput
	ToLicensingSubscriptionSubscriptionsBindItemOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemOutput
}

type LicensingSubscriptionSubscriptionsBindItemArgs struct {
	// Array of errors if failed
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// A list of entitlements required to successfully bind the networks to the subscription
	InsufficientEntitlements LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayInput `pulumi:"insufficientEntitlements"`
	// Unbound networks
	Networks LicensingSubscriptionSubscriptionsBindItemNetworkArrayInput `pulumi:"networks"`
	// Subscription ID
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (LicensingSubscriptionSubscriptionsBindItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItem)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindItemArgs) ToLicensingSubscriptionSubscriptionsBindItemOutput() LicensingSubscriptionSubscriptionsBindItemOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemArgs) ToLicensingSubscriptionSubscriptionsBindItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemOutput)
}

func (i LicensingSubscriptionSubscriptionsBindItemArgs) ToLicensingSubscriptionSubscriptionsBindItemPtrOutput() LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemArgs) ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemOutput).ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsBindItemPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemArgs, LicensingSubscriptionSubscriptionsBindItemPtr and LicensingSubscriptionSubscriptionsBindItemPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsBindItemArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsBindItemPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemPtrOutput() LicensingSubscriptionSubscriptionsBindItemPtrOutput
	ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemPtrOutput
}

type licensingSubscriptionSubscriptionsBindItemPtrType LicensingSubscriptionSubscriptionsBindItemArgs

func LicensingSubscriptionSubscriptionsBindItemPtr(v *LicensingSubscriptionSubscriptionsBindItemArgs) LicensingSubscriptionSubscriptionsBindItemPtrInput {
	return (*licensingSubscriptionSubscriptionsBindItemPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsBindItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsBindItem)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsBindItemPtrType) ToLicensingSubscriptionSubscriptionsBindItemPtrOutput() LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsBindItemPtrType) ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindItemOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemOutput) ToLicensingSubscriptionSubscriptionsBindItemOutput() LicensingSubscriptionSubscriptionsBindItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemOutput) ToLicensingSubscriptionSubscriptionsBindItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemOutput) ToLicensingSubscriptionSubscriptionsBindItemPtrOutput() LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsBindItemOutput) ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsBindItem) *LicensingSubscriptionSubscriptionsBindItem {
		return &v
	}).(LicensingSubscriptionSubscriptionsBindItemPtrOutput)
}

// Array of errors if failed
func (o LicensingSubscriptionSubscriptionsBindItemOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItem) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// A list of entitlements required to successfully bind the networks to the subscription
func (o LicensingSubscriptionSubscriptionsBindItemOutput) InsufficientEntitlements() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItem) []LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement {
		return v.InsufficientEntitlements
	}).(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput)
}

// Unbound networks
func (o LicensingSubscriptionSubscriptionsBindItemOutput) Networks() LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItem) []LicensingSubscriptionSubscriptionsBindItemNetwork {
		return v.Networks
	}).(LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput)
}

// Subscription ID
func (o LicensingSubscriptionSubscriptionsBindItemOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItem) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindItemPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsBindItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) ToLicensingSubscriptionSubscriptionsBindItemPtrOutput() LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) ToLicensingSubscriptionSubscriptionsBindItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) Elem() LicensingSubscriptionSubscriptionsBindItemOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindItem) LicensingSubscriptionSubscriptionsBindItem {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsBindItem
		return ret
	}).(LicensingSubscriptionSubscriptionsBindItemOutput)
}

// Array of errors if failed
func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindItem) []string {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(pulumi.StringArrayOutput)
}

// A list of entitlements required to successfully bind the networks to the subscription
func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) InsufficientEntitlements() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindItem) []LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement {
		if v == nil {
			return nil
		}
		return v.InsufficientEntitlements
	}).(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput)
}

// Unbound networks
func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) Networks() LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindItem) []LicensingSubscriptionSubscriptionsBindItemNetwork {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput)
}

// Subscription ID
func (o LicensingSubscriptionSubscriptionsBindItemPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindItem) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement struct {
	// Number required
	Quantity *int `pulumi:"quantity"`
	// SKU of the required product
	Sku *string `pulumi:"sku"`
}

// LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs and LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementInput` via:
//
//	LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs{...}
type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput
	ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput
}

type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs struct {
	// Number required
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
	// SKU of the required product
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput)
}

// LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray and LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayInput` via:
//
//	LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray{ LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs{...} }
type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput
	ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput
}

type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray []LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementInput

func (LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput)
}

type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput {
	return o
}

// Number required
func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

// SKU of the required product
func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput() LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput) Index(i pulumi.IntInput) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement {
		return vs[0].([]LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlement)[vs[1].(int)]
	}).(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput)
}

type LicensingSubscriptionSubscriptionsBindItemNetwork struct {
	// Network ID
	Id *string `pulumi:"id"`
	// Network name
	Name *string `pulumi:"name"`
}

// LicensingSubscriptionSubscriptionsBindItemNetworkInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemNetworkArgs and LicensingSubscriptionSubscriptionsBindItemNetworkOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemNetworkInput` via:
//
//	LicensingSubscriptionSubscriptionsBindItemNetworkArgs{...}
type LicensingSubscriptionSubscriptionsBindItemNetworkInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemNetworkOutput() LicensingSubscriptionSubscriptionsBindItemNetworkOutput
	ToLicensingSubscriptionSubscriptionsBindItemNetworkOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkOutput
}

type LicensingSubscriptionSubscriptionsBindItemNetworkArgs struct {
	// Network ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Network name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LicensingSubscriptionSubscriptionsBindItemNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemNetwork)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindItemNetworkArgs) ToLicensingSubscriptionSubscriptionsBindItemNetworkOutput() LicensingSubscriptionSubscriptionsBindItemNetworkOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemNetworkOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemNetworkArgs) ToLicensingSubscriptionSubscriptionsBindItemNetworkOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemNetworkOutput)
}

// LicensingSubscriptionSubscriptionsBindItemNetworkArrayInput is an input type that accepts LicensingSubscriptionSubscriptionsBindItemNetworkArray and LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindItemNetworkArrayInput` via:
//
//	LicensingSubscriptionSubscriptionsBindItemNetworkArray{ LicensingSubscriptionSubscriptionsBindItemNetworkArgs{...} }
type LicensingSubscriptionSubscriptionsBindItemNetworkArrayInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput() LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput
	ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput
}

type LicensingSubscriptionSubscriptionsBindItemNetworkArray []LicensingSubscriptionSubscriptionsBindItemNetworkInput

func (LicensingSubscriptionSubscriptionsBindItemNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsBindItemNetwork)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindItemNetworkArray) ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput() LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindItemNetworkArray) ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput)
}

type LicensingSubscriptionSubscriptionsBindItemNetworkOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemNetwork)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemNetworkOutput) ToLicensingSubscriptionSubscriptionsBindItemNetworkOutput() LicensingSubscriptionSubscriptionsBindItemNetworkOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemNetworkOutput) ToLicensingSubscriptionSubscriptionsBindItemNetworkOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkOutput {
	return o
}

// Network ID
func (o LicensingSubscriptionSubscriptionsBindItemNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItemNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Network name
func (o LicensingSubscriptionSubscriptionsBindItemNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindItemNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsBindItemNetwork)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput) ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput() LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput) ToLicensingSubscriptionSubscriptionsBindItemNetworkArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput) Index(i pulumi.IntInput) LicensingSubscriptionSubscriptionsBindItemNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingSubscriptionSubscriptionsBindItemNetwork {
		return vs[0].([]LicensingSubscriptionSubscriptionsBindItemNetwork)[vs[1].(int)]
	}).(LicensingSubscriptionSubscriptionsBindItemNetworkOutput)
}

type LicensingSubscriptionSubscriptionsBindParameters struct {
	// List of network ids to bind to the subscription
	NetworkIds []string `pulumi:"networkIds"`
}

// LicensingSubscriptionSubscriptionsBindParametersInput is an input type that accepts LicensingSubscriptionSubscriptionsBindParametersArgs and LicensingSubscriptionSubscriptionsBindParametersOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindParametersInput` via:
//
//	LicensingSubscriptionSubscriptionsBindParametersArgs{...}
type LicensingSubscriptionSubscriptionsBindParametersInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindParametersOutput() LicensingSubscriptionSubscriptionsBindParametersOutput
	ToLicensingSubscriptionSubscriptionsBindParametersOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindParametersOutput
}

type LicensingSubscriptionSubscriptionsBindParametersArgs struct {
	// List of network ids to bind to the subscription
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
}

func (LicensingSubscriptionSubscriptionsBindParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindParameters)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsBindParametersArgs) ToLicensingSubscriptionSubscriptionsBindParametersOutput() LicensingSubscriptionSubscriptionsBindParametersOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindParametersOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindParametersArgs) ToLicensingSubscriptionSubscriptionsBindParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindParametersOutput)
}

func (i LicensingSubscriptionSubscriptionsBindParametersArgs) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutput() LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsBindParametersArgs) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindParametersOutput).ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsBindParametersPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsBindParametersArgs, LicensingSubscriptionSubscriptionsBindParametersPtr and LicensingSubscriptionSubscriptionsBindParametersPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsBindParametersPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsBindParametersArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsBindParametersPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsBindParametersPtrOutput() LicensingSubscriptionSubscriptionsBindParametersPtrOutput
	ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsBindParametersPtrOutput
}

type licensingSubscriptionSubscriptionsBindParametersPtrType LicensingSubscriptionSubscriptionsBindParametersArgs

func LicensingSubscriptionSubscriptionsBindParametersPtr(v *LicensingSubscriptionSubscriptionsBindParametersArgs) LicensingSubscriptionSubscriptionsBindParametersPtrInput {
	return (*licensingSubscriptionSubscriptionsBindParametersPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsBindParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsBindParameters)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsBindParametersPtrType) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutput() LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsBindParametersPtrType) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsBindParametersPtrOutput)
}

type LicensingSubscriptionSubscriptionsBindParametersOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindParametersOutput) ToLicensingSubscriptionSubscriptionsBindParametersOutput() LicensingSubscriptionSubscriptionsBindParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindParametersOutput) ToLicensingSubscriptionSubscriptionsBindParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindParametersOutput) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutput() LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsBindParametersOutput) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsBindParameters) *LicensingSubscriptionSubscriptionsBindParameters {
		return &v
	}).(LicensingSubscriptionSubscriptionsBindParametersPtrOutput)
}

// List of network ids to bind to the subscription
func (o LicensingSubscriptionSubscriptionsBindParametersOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsBindParameters) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

type LicensingSubscriptionSubscriptionsBindParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsBindParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsBindParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsBindParametersPtrOutput) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutput() LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindParametersPtrOutput) ToLicensingSubscriptionSubscriptionsBindParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsBindParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsBindParametersPtrOutput) Elem() LicensingSubscriptionSubscriptionsBindParametersOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindParameters) LicensingSubscriptionSubscriptionsBindParameters {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsBindParameters
		return ret
	}).(LicensingSubscriptionSubscriptionsBindParametersOutput)
}

// List of network ids to bind to the subscription
func (o LicensingSubscriptionSubscriptionsBindParametersPtrOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsBindParameters) []string {
		if v == nil {
			return nil
		}
		return v.NetworkIds
	}).(pulumi.StringArrayOutput)
}

type LicensingSubscriptionSubscriptionsClaimItem struct {
	// Numeric breakdown of network and entitlement counts
	Counts *LicensingSubscriptionSubscriptionsClaimItemCounts `pulumi:"counts"`
	// Subscription description
	Description *string `pulumi:"description"`
	// Subscription expiration date
	EndDate *string `pulumi:"endDate"`
	// Entitlement info
	Entitlements []LicensingSubscriptionSubscriptionsClaimItemEntitlement `pulumi:"entitlements"`
	// Subscription name
	Name *string `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes []string `pulumi:"productTypes"`
	// Subscription start date
	StartDate *string `pulumi:"startDate"`
	// Subscription status
	Status *string `pulumi:"status"`
	// Subscription's ID
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId *string `pulumi:"webOrderId"`
}

// LicensingSubscriptionSubscriptionsClaimItemInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemArgs and LicensingSubscriptionSubscriptionsClaimItemOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemArgs{...}
type LicensingSubscriptionSubscriptionsClaimItemInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemOutput() LicensingSubscriptionSubscriptionsClaimItemOutput
	ToLicensingSubscriptionSubscriptionsClaimItemOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemOutput
}

type LicensingSubscriptionSubscriptionsClaimItemArgs struct {
	// Numeric breakdown of network and entitlement counts
	Counts LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput `pulumi:"counts"`
	// Subscription description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Subscription expiration date
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// Entitlement info
	Entitlements LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayInput `pulumi:"entitlements"`
	// Subscription name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Subscription start date
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// Subscription status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Subscription's ID
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId pulumi.StringPtrInput `pulumi:"webOrderId"`
}

func (LicensingSubscriptionSubscriptionsClaimItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItem)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemArgs) ToLicensingSubscriptionSubscriptionsClaimItemOutput() LicensingSubscriptionSubscriptionsClaimItemOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemArgs) ToLicensingSubscriptionSubscriptionsClaimItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimItemArgs) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutput() LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemArgs) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemOutput).ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimItemPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemArgs, LicensingSubscriptionSubscriptionsClaimItemPtr and LicensingSubscriptionSubscriptionsClaimItemPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimItemArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimItemPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemPtrOutput() LicensingSubscriptionSubscriptionsClaimItemPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemPtrOutput
}

type licensingSubscriptionSubscriptionsClaimItemPtrType LicensingSubscriptionSubscriptionsClaimItemArgs

func LicensingSubscriptionSubscriptionsClaimItemPtr(v *LicensingSubscriptionSubscriptionsClaimItemArgs) LicensingSubscriptionSubscriptionsClaimItemPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimItemPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItem)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimItemPtrType) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutput() LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimItemPtrType) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemOutput) ToLicensingSubscriptionSubscriptionsClaimItemOutput() LicensingSubscriptionSubscriptionsClaimItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemOutput) ToLicensingSubscriptionSubscriptionsClaimItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemOutput) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutput() LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimItemOutput) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimItem) *LicensingSubscriptionSubscriptionsClaimItem {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimItemPtrOutput)
}

// Numeric breakdown of network and entitlement counts
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) Counts() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *LicensingSubscriptionSubscriptionsClaimItemCounts {
		return v.Counts
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput)
}

// Subscription description
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Subscription expiration date
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Entitlement info
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) Entitlements() LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) []LicensingSubscriptionSubscriptionsClaimItemEntitlement {
		return v.Entitlements
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput)
}

// Subscription name
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Products the subscription has entitlements for
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Subscription start date
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// Subscription status
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Subscription's ID
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Web order id
func (o LicensingSubscriptionSubscriptionsClaimItemOutput) WebOrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItem) *string { return v.WebOrderId }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutput() LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimItemOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) LicensingSubscriptionSubscriptionsClaimItem {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimItem
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimItemOutput)
}

// Numeric breakdown of network and entitlement counts
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Counts() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *LicensingSubscriptionSubscriptionsClaimItemCounts {
		if v == nil {
			return nil
		}
		return v.Counts
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput)
}

// Subscription description
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Subscription expiration date
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// Entitlement info
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Entitlements() LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) []LicensingSubscriptionSubscriptionsClaimItemEntitlement {
		if v == nil {
			return nil
		}
		return v.Entitlements
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput)
}

// Subscription name
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Products the subscription has entitlements for
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) []string {
		if v == nil {
			return nil
		}
		return v.ProductTypes
	}).(pulumi.StringArrayOutput)
}

// Subscription start date
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.StartDate
	}).(pulumi.StringPtrOutput)
}

// Subscription status
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription's ID
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Web order id
func (o LicensingSubscriptionSubscriptionsClaimItemPtrOutput) WebOrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItem) *string {
		if v == nil {
			return nil
		}
		return v.WebOrderId
	}).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCounts struct {
	// Number of networks bound to this subscription
	Networks *int `pulumi:"networks"`
	// Seat distribution
	Seats *LicensingSubscriptionSubscriptionsClaimItemCountsSeats `pulumi:"seats"`
}

// LicensingSubscriptionSubscriptionsClaimItemCountsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemCountsArgs and LicensingSubscriptionSubscriptionsClaimItemCountsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemCountsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemCountsArgs{...}
type LicensingSubscriptionSubscriptionsClaimItemCountsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemCountsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsOutput
	ToLicensingSubscriptionSubscriptionsClaimItemCountsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsOutput
}

type LicensingSubscriptionSubscriptionsClaimItemCountsArgs struct {
	// Number of networks bound to this subscription
	Networks pulumi.IntPtrInput `pulumi:"networks"`
	// Seat distribution
	Seats LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput `pulumi:"seats"`
}

func (LicensingSubscriptionSubscriptionsClaimItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCounts)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsOutput).ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemCountsArgs, LicensingSubscriptionSubscriptionsClaimItemCountsPtr and LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimItemCountsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimItemCountsPtrType LicensingSubscriptionSubscriptionsClaimItemCountsArgs

func LicensingSubscriptionSubscriptionsClaimItemCountsPtr(v *LicensingSubscriptionSubscriptionsClaimItemCountsArgs) LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimItemCountsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimItemCountsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemCounts)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimItemCountsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimItemCountsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCountsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCounts)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimItemCounts) *LicensingSubscriptionSubscriptionsClaimItemCounts {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput)
}

// Number of networks bound to this subscription
func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) Networks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemCounts) *int { return v.Networks }).(pulumi.IntPtrOutput)
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimItemCountsOutput) Seats() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemCounts) *LicensingSubscriptionSubscriptionsClaimItemCountsSeats {
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemCounts)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimItemCountsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCounts) LicensingSubscriptionSubscriptionsClaimItemCounts {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimItemCounts
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsOutput)
}

// Number of networks bound to this subscription
func (o LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) Networks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCounts) *int {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.IntPtrOutput)
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput) Seats() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCounts) *LicensingSubscriptionSubscriptionsClaimItemCountsSeats {
		if v == nil {
			return nil
		}
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCountsSeats struct {
	// Number of seats in use
	Assigned *int `pulumi:"assigned"`
	// Number of seats available for use
	Available *int `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit *int `pulumi:"limit"`
}

// LicensingSubscriptionSubscriptionsClaimItemCountsSeatsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs and LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemCountsSeatsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs{...}
type LicensingSubscriptionSubscriptionsClaimItemCountsSeatsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput
	ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput
}

type LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntPtrInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntPtrInput `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsSeats)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput).ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs, LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtr and LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrType LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs

func LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtr(v *LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemCountsSeats)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *LicensingSubscriptionSubscriptionsClaimItemCountsSeats {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int { return v.Assigned }).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int { return v.Available }).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemCountsSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCountsSeats) LicensingSubscriptionSubscriptionsClaimItemCountsSeats {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimItemCountsSeats
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Assigned
	}).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Available
	}).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription
func (o LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlement struct {
	// Seat distribution
	Seats *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats `pulumi:"seats"`
	// SKU of the required product
	Sku *string `pulumi:"sku"`
}

// LicensingSubscriptionSubscriptionsClaimItemEntitlementInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs and LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemEntitlementInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs{...}
type LicensingSubscriptionSubscriptionsClaimItemEntitlementInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput
	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs struct {
	// Seat distribution
	Seats LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput `pulumi:"seats"`
	// SKU of the required product
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput)
}

// LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemEntitlementArray and LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemEntitlementArray{ LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs{...} }
type LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput
	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementArray []LicensingSubscriptionSubscriptionsClaimItemEntitlementInput

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsClaimItemEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementArray) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementArray) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput {
	return o
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput) Seats() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemEntitlement) *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats {
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput)
}

// SKU of the required product
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemEntitlement) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsClaimItemEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput) Index(i pulumi.IntInput) LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingSubscriptionSubscriptionsClaimItemEntitlement {
		return vs[0].([]LicensingSubscriptionSubscriptionsClaimItemEntitlement)[vs[1].(int)]
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats struct {
	// Number of seats in use
	Assigned *int `pulumi:"assigned"`
	// Number of seats available for use
	Available *int `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit *int `pulumi:"limit"`
}

// LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs and LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs{...}
type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput
	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntPtrInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntPtrInput `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput).ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs, LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtr and LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrType LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs

func LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtr(v *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int { return v.Assigned }).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int { return v.Available }).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription for this sku
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Assigned
	}).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Available
	}).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription for this sku
func (o LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItem struct {
	// Numeric breakdown of network and entitlement counts
	Counts *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts `pulumi:"counts"`
	// Subscription description
	Description *string `pulumi:"description"`
	// Subscription expiration date
	EndDate *string `pulumi:"endDate"`
	// Entitlement info
	Entitlements []LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement `pulumi:"entitlements"`
	// Subscription name
	Name *string `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes []string `pulumi:"productTypes"`
	// Subscription start date
	StartDate *string `pulumi:"startDate"`
	// Subscription status
	Status *string `pulumi:"status"`
	// Subscription's ID
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId *string `pulumi:"webOrderId"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs struct {
	// Numeric breakdown of network and entitlement counts
	Counts LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput `pulumi:"counts"`
	// Subscription description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Subscription expiration date
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// Entitlement info
	Entitlements LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayInput `pulumi:"entitlements"`
	// Subscription name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Subscription start date
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// Subscription status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Subscription's ID
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId pulumi.StringPtrInput `pulumi:"webOrderId"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItem)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput).ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtr and LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput
}

type licensingSubscriptionSubscriptionsClaimKeyValidateItemPtrType LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs

func LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtr(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimKeyValidateItemPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimKeyValidateItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItem)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *LicensingSubscriptionSubscriptionsClaimKeyValidateItem {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput)
}

// Numeric breakdown of network and entitlement counts
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) Counts() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts {
		return v.Counts
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput)
}

// Subscription description
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Subscription expiration date
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Entitlement info
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) Entitlements() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) []LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement {
		return v.Entitlements
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput)
}

// Subscription name
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Products the subscription has entitlements for
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Subscription start date
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// Subscription status
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Subscription's ID
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Web order id
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput) WebOrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string { return v.WebOrderId }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItem)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) LicensingSubscriptionSubscriptionsClaimKeyValidateItem {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimKeyValidateItem
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput)
}

// Numeric breakdown of network and entitlement counts
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Counts() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts {
		if v == nil {
			return nil
		}
		return v.Counts
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput)
}

// Subscription description
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Subscription expiration date
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// Entitlement info
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Entitlements() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) []LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement {
		if v == nil {
			return nil
		}
		return v.Entitlements
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput)
}

// Subscription name
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Products the subscription has entitlements for
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) []string {
		if v == nil {
			return nil
		}
		return v.ProductTypes
	}).(pulumi.StringArrayOutput)
}

// Subscription start date
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.StartDate
	}).(pulumi.StringPtrOutput)
}

// Subscription status
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription's ID
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Web order id
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput) WebOrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItem) *string {
		if v == nil {
			return nil
		}
		return v.WebOrderId
	}).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts struct {
	// Number of networks bound to this subscription
	Networks *int `pulumi:"networks"`
	// Seat distribution
	Seats *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats `pulumi:"seats"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs struct {
	// Number of networks bound to this subscription
	Networks pulumi.IntPtrInput `pulumi:"networks"`
	// Seat distribution
	Seats LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput `pulumi:"seats"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput).ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtr and LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrType LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs

func LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtr(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput)
}

// Number of networks bound to this subscription
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) Networks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) *int { return v.Networks }).(pulumi.IntPtrOutput)
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput) Seats() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats {
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput)
}

// Number of networks bound to this subscription
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) Networks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) *int {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.IntPtrOutput)
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput) Seats() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCounts) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats {
		if v == nil {
			return nil
		}
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats struct {
	// Number of seats in use
	Assigned *int `pulumi:"assigned"`
	// Number of seats available for use
	Available *int `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit *int `pulumi:"limit"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntPtrInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntPtrInput `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput).ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtr and LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrType LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs

func LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtr(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int { return v.Assigned }).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int { return v.Available }).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Assigned
	}).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Available
	}).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeats) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement struct {
	// Seat distribution
	Seats *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats `pulumi:"seats"`
	// SKU of the required product
	Sku *string `pulumi:"sku"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs struct {
	// Seat distribution
	Seats LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput `pulumi:"seats"`
	// SKU of the required product
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray and LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray{ LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs{...} }
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray []LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementInput

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput {
	return o
}

// Seat distribution
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput) Seats() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats {
		return v.Seats
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput)
}

// SKU of the required product
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput) Index(i pulumi.IntInput) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement {
		return vs[0].([]LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlement)[vs[1].(int)]
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats struct {
	// Number of seats in use
	Assigned *int `pulumi:"assigned"`
	// Number of seats available for use
	Available *int `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit *int `pulumi:"limit"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntPtrInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntPtrInput `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput).ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtr and LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput
}

type licensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrType LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs

func LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtr(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int { return v.Assigned }).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int {
		return v.Available
	}).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription for this sku
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput)
}

// Number of seats in use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) Assigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Assigned
	}).(pulumi.IntPtrOutput)
}

// Number of seats available for use
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) Available() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Available
	}).(pulumi.IntPtrOutput)
}

// Total number of seats provided by this subscription for this sku
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeats) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateParameters struct {
	// The subscription's claim key
	ClaimKey *string `pulumi:"claimKey"`
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateParametersInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs and LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateParametersInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs{...}
type LicensingSubscriptionSubscriptionsClaimKeyValidateParametersInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs struct {
	// The subscription's claim key
	ClaimKey pulumi.StringPtrInput `pulumi:"claimKey"`
}

func (LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateParameters)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput).ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs, LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtr and LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput
}

type licensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrType LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs

func LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtr(v *LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateParameters)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrType) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimKeyValidateParameters) *LicensingSubscriptionSubscriptionsClaimKeyValidateParameters {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput)
}

// The subscription's claim key
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput) ClaimKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimKeyValidateParameters) *string { return v.ClaimKey }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimKeyValidateParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput) ToLicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateParameters) LicensingSubscriptionSubscriptionsClaimKeyValidateParameters {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimKeyValidateParameters
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput)
}

// The subscription's claim key
func (o LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput) ClaimKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimKeyValidateParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClaimKey
	}).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimParameters struct {
	// The subscription's claim key
	ClaimKey *string `pulumi:"claimKey"`
	// Extra details or notes about the subscription
	Description *string `pulumi:"description"`
	// Friendly name to identify the subscription
	Name *string `pulumi:"name"`
	// The id of the organization claiming the subscription
	OrganizationId *string `pulumi:"organizationId"`
}

// LicensingSubscriptionSubscriptionsClaimParametersInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimParametersArgs and LicensingSubscriptionSubscriptionsClaimParametersOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimParametersInput` via:
//
//	LicensingSubscriptionSubscriptionsClaimParametersArgs{...}
type LicensingSubscriptionSubscriptionsClaimParametersInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimParametersOutput() LicensingSubscriptionSubscriptionsClaimParametersOutput
	ToLicensingSubscriptionSubscriptionsClaimParametersOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimParametersOutput
}

type LicensingSubscriptionSubscriptionsClaimParametersArgs struct {
	// The subscription's claim key
	ClaimKey pulumi.StringPtrInput `pulumi:"claimKey"`
	// Extra details or notes about the subscription
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Friendly name to identify the subscription
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The id of the organization claiming the subscription
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
}

func (LicensingSubscriptionSubscriptionsClaimParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimParameters)(nil)).Elem()
}

func (i LicensingSubscriptionSubscriptionsClaimParametersArgs) ToLicensingSubscriptionSubscriptionsClaimParametersOutput() LicensingSubscriptionSubscriptionsClaimParametersOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimParametersOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimParametersArgs) ToLicensingSubscriptionSubscriptionsClaimParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimParametersOutput)
}

func (i LicensingSubscriptionSubscriptionsClaimParametersArgs) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(context.Background())
}

func (i LicensingSubscriptionSubscriptionsClaimParametersArgs) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimParametersOutput).ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(ctx)
}

// LicensingSubscriptionSubscriptionsClaimParametersPtrInput is an input type that accepts LicensingSubscriptionSubscriptionsClaimParametersArgs, LicensingSubscriptionSubscriptionsClaimParametersPtr and LicensingSubscriptionSubscriptionsClaimParametersPtrOutput values.
// You can construct a concrete instance of `LicensingSubscriptionSubscriptionsClaimParametersPtrInput` via:
//
//	        LicensingSubscriptionSubscriptionsClaimParametersArgs{...}
//
//	or:
//
//	        nil
type LicensingSubscriptionSubscriptionsClaimParametersPtrInput interface {
	pulumi.Input

	ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimParametersPtrOutput
	ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(context.Context) LicensingSubscriptionSubscriptionsClaimParametersPtrOutput
}

type licensingSubscriptionSubscriptionsClaimParametersPtrType LicensingSubscriptionSubscriptionsClaimParametersArgs

func LicensingSubscriptionSubscriptionsClaimParametersPtr(v *LicensingSubscriptionSubscriptionsClaimParametersArgs) LicensingSubscriptionSubscriptionsClaimParametersPtrInput {
	return (*licensingSubscriptionSubscriptionsClaimParametersPtrType)(v)
}

func (*licensingSubscriptionSubscriptionsClaimParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimParameters)(nil)).Elem()
}

func (i *licensingSubscriptionSubscriptionsClaimParametersPtrType) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return i.ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(context.Background())
}

func (i *licensingSubscriptionSubscriptionsClaimParametersPtrType) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicensingSubscriptionSubscriptionsClaimParametersPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimParametersOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) ToLicensingSubscriptionSubscriptionsClaimParametersOutput() LicensingSubscriptionSubscriptionsClaimParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) ToLicensingSubscriptionSubscriptionsClaimParametersOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return o.ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(context.Background())
}

func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicensingSubscriptionSubscriptionsClaimParameters) *LicensingSubscriptionSubscriptionsClaimParameters {
		return &v
	}).(LicensingSubscriptionSubscriptionsClaimParametersPtrOutput)
}

// The subscription's claim key
func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) ClaimKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimParameters) *string { return v.ClaimKey }).(pulumi.StringPtrOutput)
}

// Extra details or notes about the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimParameters) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Friendly name to identify the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The id of the organization claiming the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicensingSubscriptionSubscriptionsClaimParameters) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

type LicensingSubscriptionSubscriptionsClaimParametersPtrOutput struct{ *pulumi.OutputState }

func (LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicensingSubscriptionSubscriptionsClaimParameters)(nil)).Elem()
}

func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutput() LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) ToLicensingSubscriptionSubscriptionsClaimParametersPtrOutputWithContext(ctx context.Context) LicensingSubscriptionSubscriptionsClaimParametersPtrOutput {
	return o
}

func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) Elem() LicensingSubscriptionSubscriptionsClaimParametersOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimParameters) LicensingSubscriptionSubscriptionsClaimParameters {
		if v != nil {
			return *v
		}
		var ret LicensingSubscriptionSubscriptionsClaimParameters
		return ret
	}).(LicensingSubscriptionSubscriptionsClaimParametersOutput)
}

// The subscription's claim key
func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) ClaimKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClaimKey
	}).(pulumi.StringPtrOutput)
}

// Extra details or notes about the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimParameters) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Friendly name to identify the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimParameters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The id of the organization claiming the subscription
func (o LicensingSubscriptionSubscriptionsClaimParametersPtrOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicensingSubscriptionSubscriptionsClaimParameters) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationId
	}).(pulumi.StringPtrOutput)
}

type GetIdentitiesMeItem struct {
	// Authentication info
	Authentication GetIdentitiesMeItemAuthentication `pulumi:"authentication"`
	// User email
	Email string `pulumi:"email"`
	// Last seen active on Dashboard UI
	LastUsedDashboardAt string `pulumi:"lastUsedDashboardAt"`
	// Username
	Name string `pulumi:"name"`
}

// GetIdentitiesMeItemInput is an input type that accepts GetIdentitiesMeItemArgs and GetIdentitiesMeItemOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemInput` via:
//
//	GetIdentitiesMeItemArgs{...}
type GetIdentitiesMeItemInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemOutput() GetIdentitiesMeItemOutput
	ToGetIdentitiesMeItemOutputWithContext(context.Context) GetIdentitiesMeItemOutput
}

type GetIdentitiesMeItemArgs struct {
	// Authentication info
	Authentication GetIdentitiesMeItemAuthenticationInput `pulumi:"authentication"`
	// User email
	Email pulumi.StringInput `pulumi:"email"`
	// Last seen active on Dashboard UI
	LastUsedDashboardAt pulumi.StringInput `pulumi:"lastUsedDashboardAt"`
	// Username
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetIdentitiesMeItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItem)(nil)).Elem()
}

func (i GetIdentitiesMeItemArgs) ToGetIdentitiesMeItemOutput() GetIdentitiesMeItemOutput {
	return i.ToGetIdentitiesMeItemOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemArgs) ToGetIdentitiesMeItemOutputWithContext(ctx context.Context) GetIdentitiesMeItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemOutput)
}

type GetIdentitiesMeItemOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItem)(nil)).Elem()
}

func (o GetIdentitiesMeItemOutput) ToGetIdentitiesMeItemOutput() GetIdentitiesMeItemOutput {
	return o
}

func (o GetIdentitiesMeItemOutput) ToGetIdentitiesMeItemOutputWithContext(ctx context.Context) GetIdentitiesMeItemOutput {
	return o
}

// Authentication info
func (o GetIdentitiesMeItemOutput) Authentication() GetIdentitiesMeItemAuthenticationOutput {
	return o.ApplyT(func(v GetIdentitiesMeItem) GetIdentitiesMeItemAuthentication { return v.Authentication }).(GetIdentitiesMeItemAuthenticationOutput)
}

// User email
func (o GetIdentitiesMeItemOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentitiesMeItem) string { return v.Email }).(pulumi.StringOutput)
}

// Last seen active on Dashboard UI
func (o GetIdentitiesMeItemOutput) LastUsedDashboardAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentitiesMeItem) string { return v.LastUsedDashboardAt }).(pulumi.StringOutput)
}

// Username
func (o GetIdentitiesMeItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentitiesMeItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetIdentitiesMeItemAuthentication struct {
	// API authentication
	Api GetIdentitiesMeItemAuthenticationApi `pulumi:"api"`
	// Authentication mode
	Mode string `pulumi:"mode"`
	// SAML authentication
	Saml GetIdentitiesMeItemAuthenticationSaml `pulumi:"saml"`
	// TwoFactor authentication
	TwoFactor GetIdentitiesMeItemAuthenticationTwoFactor `pulumi:"twoFactor"`
}

// GetIdentitiesMeItemAuthenticationInput is an input type that accepts GetIdentitiesMeItemAuthenticationArgs and GetIdentitiesMeItemAuthenticationOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemAuthenticationInput` via:
//
//	GetIdentitiesMeItemAuthenticationArgs{...}
type GetIdentitiesMeItemAuthenticationInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemAuthenticationOutput() GetIdentitiesMeItemAuthenticationOutput
	ToGetIdentitiesMeItemAuthenticationOutputWithContext(context.Context) GetIdentitiesMeItemAuthenticationOutput
}

type GetIdentitiesMeItemAuthenticationArgs struct {
	// API authentication
	Api GetIdentitiesMeItemAuthenticationApiInput `pulumi:"api"`
	// Authentication mode
	Mode pulumi.StringInput `pulumi:"mode"`
	// SAML authentication
	Saml GetIdentitiesMeItemAuthenticationSamlInput `pulumi:"saml"`
	// TwoFactor authentication
	TwoFactor GetIdentitiesMeItemAuthenticationTwoFactorInput `pulumi:"twoFactor"`
}

func (GetIdentitiesMeItemAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthentication)(nil)).Elem()
}

func (i GetIdentitiesMeItemAuthenticationArgs) ToGetIdentitiesMeItemAuthenticationOutput() GetIdentitiesMeItemAuthenticationOutput {
	return i.ToGetIdentitiesMeItemAuthenticationOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemAuthenticationArgs) ToGetIdentitiesMeItemAuthenticationOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemAuthenticationOutput)
}

type GetIdentitiesMeItemAuthenticationOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthentication)(nil)).Elem()
}

func (o GetIdentitiesMeItemAuthenticationOutput) ToGetIdentitiesMeItemAuthenticationOutput() GetIdentitiesMeItemAuthenticationOutput {
	return o
}

func (o GetIdentitiesMeItemAuthenticationOutput) ToGetIdentitiesMeItemAuthenticationOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationOutput {
	return o
}

// API authentication
func (o GetIdentitiesMeItemAuthenticationOutput) Api() GetIdentitiesMeItemAuthenticationApiOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthentication) GetIdentitiesMeItemAuthenticationApi { return v.Api }).(GetIdentitiesMeItemAuthenticationApiOutput)
}

// Authentication mode
func (o GetIdentitiesMeItemAuthenticationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthentication) string { return v.Mode }).(pulumi.StringOutput)
}

// SAML authentication
func (o GetIdentitiesMeItemAuthenticationOutput) Saml() GetIdentitiesMeItemAuthenticationSamlOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthentication) GetIdentitiesMeItemAuthenticationSaml { return v.Saml }).(GetIdentitiesMeItemAuthenticationSamlOutput)
}

// TwoFactor authentication
func (o GetIdentitiesMeItemAuthenticationOutput) TwoFactor() GetIdentitiesMeItemAuthenticationTwoFactorOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthentication) GetIdentitiesMeItemAuthenticationTwoFactor {
		return v.TwoFactor
	}).(GetIdentitiesMeItemAuthenticationTwoFactorOutput)
}

type GetIdentitiesMeItemAuthenticationApi struct {
	// API key
	Key GetIdentitiesMeItemAuthenticationApiKey `pulumi:"key"`
}

// GetIdentitiesMeItemAuthenticationApiInput is an input type that accepts GetIdentitiesMeItemAuthenticationApiArgs and GetIdentitiesMeItemAuthenticationApiOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemAuthenticationApiInput` via:
//
//	GetIdentitiesMeItemAuthenticationApiArgs{...}
type GetIdentitiesMeItemAuthenticationApiInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemAuthenticationApiOutput() GetIdentitiesMeItemAuthenticationApiOutput
	ToGetIdentitiesMeItemAuthenticationApiOutputWithContext(context.Context) GetIdentitiesMeItemAuthenticationApiOutput
}

type GetIdentitiesMeItemAuthenticationApiArgs struct {
	// API key
	Key GetIdentitiesMeItemAuthenticationApiKeyInput `pulumi:"key"`
}

func (GetIdentitiesMeItemAuthenticationApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApi)(nil)).Elem()
}

func (i GetIdentitiesMeItemAuthenticationApiArgs) ToGetIdentitiesMeItemAuthenticationApiOutput() GetIdentitiesMeItemAuthenticationApiOutput {
	return i.ToGetIdentitiesMeItemAuthenticationApiOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemAuthenticationApiArgs) ToGetIdentitiesMeItemAuthenticationApiOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemAuthenticationApiOutput)
}

type GetIdentitiesMeItemAuthenticationApiOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemAuthenticationApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApi)(nil)).Elem()
}

func (o GetIdentitiesMeItemAuthenticationApiOutput) ToGetIdentitiesMeItemAuthenticationApiOutput() GetIdentitiesMeItemAuthenticationApiOutput {
	return o
}

func (o GetIdentitiesMeItemAuthenticationApiOutput) ToGetIdentitiesMeItemAuthenticationApiOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationApiOutput {
	return o
}

// API key
func (o GetIdentitiesMeItemAuthenticationApiOutput) Key() GetIdentitiesMeItemAuthenticationApiKeyOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthenticationApi) GetIdentitiesMeItemAuthenticationApiKey { return v.Key }).(GetIdentitiesMeItemAuthenticationApiKeyOutput)
}

type GetIdentitiesMeItemAuthenticationApiKey struct {
	// If API key is created for this user
	Created bool `pulumi:"created"`
}

// GetIdentitiesMeItemAuthenticationApiKeyInput is an input type that accepts GetIdentitiesMeItemAuthenticationApiKeyArgs and GetIdentitiesMeItemAuthenticationApiKeyOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemAuthenticationApiKeyInput` via:
//
//	GetIdentitiesMeItemAuthenticationApiKeyArgs{...}
type GetIdentitiesMeItemAuthenticationApiKeyInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemAuthenticationApiKeyOutput() GetIdentitiesMeItemAuthenticationApiKeyOutput
	ToGetIdentitiesMeItemAuthenticationApiKeyOutputWithContext(context.Context) GetIdentitiesMeItemAuthenticationApiKeyOutput
}

type GetIdentitiesMeItemAuthenticationApiKeyArgs struct {
	// If API key is created for this user
	Created pulumi.BoolInput `pulumi:"created"`
}

func (GetIdentitiesMeItemAuthenticationApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApiKey)(nil)).Elem()
}

func (i GetIdentitiesMeItemAuthenticationApiKeyArgs) ToGetIdentitiesMeItemAuthenticationApiKeyOutput() GetIdentitiesMeItemAuthenticationApiKeyOutput {
	return i.ToGetIdentitiesMeItemAuthenticationApiKeyOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemAuthenticationApiKeyArgs) ToGetIdentitiesMeItemAuthenticationApiKeyOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemAuthenticationApiKeyOutput)
}

type GetIdentitiesMeItemAuthenticationApiKeyOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemAuthenticationApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApiKey)(nil)).Elem()
}

func (o GetIdentitiesMeItemAuthenticationApiKeyOutput) ToGetIdentitiesMeItemAuthenticationApiKeyOutput() GetIdentitiesMeItemAuthenticationApiKeyOutput {
	return o
}

func (o GetIdentitiesMeItemAuthenticationApiKeyOutput) ToGetIdentitiesMeItemAuthenticationApiKeyOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationApiKeyOutput {
	return o
}

// If API key is created for this user
func (o GetIdentitiesMeItemAuthenticationApiKeyOutput) Created() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthenticationApiKey) bool { return v.Created }).(pulumi.BoolOutput)
}

type GetIdentitiesMeItemAuthenticationSaml struct {
	// If SAML authentication is enabled for this user
	Enabled bool `pulumi:"enabled"`
}

// GetIdentitiesMeItemAuthenticationSamlInput is an input type that accepts GetIdentitiesMeItemAuthenticationSamlArgs and GetIdentitiesMeItemAuthenticationSamlOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemAuthenticationSamlInput` via:
//
//	GetIdentitiesMeItemAuthenticationSamlArgs{...}
type GetIdentitiesMeItemAuthenticationSamlInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemAuthenticationSamlOutput() GetIdentitiesMeItemAuthenticationSamlOutput
	ToGetIdentitiesMeItemAuthenticationSamlOutputWithContext(context.Context) GetIdentitiesMeItemAuthenticationSamlOutput
}

type GetIdentitiesMeItemAuthenticationSamlArgs struct {
	// If SAML authentication is enabled for this user
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetIdentitiesMeItemAuthenticationSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationSaml)(nil)).Elem()
}

func (i GetIdentitiesMeItemAuthenticationSamlArgs) ToGetIdentitiesMeItemAuthenticationSamlOutput() GetIdentitiesMeItemAuthenticationSamlOutput {
	return i.ToGetIdentitiesMeItemAuthenticationSamlOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemAuthenticationSamlArgs) ToGetIdentitiesMeItemAuthenticationSamlOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemAuthenticationSamlOutput)
}

type GetIdentitiesMeItemAuthenticationSamlOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemAuthenticationSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationSaml)(nil)).Elem()
}

func (o GetIdentitiesMeItemAuthenticationSamlOutput) ToGetIdentitiesMeItemAuthenticationSamlOutput() GetIdentitiesMeItemAuthenticationSamlOutput {
	return o
}

func (o GetIdentitiesMeItemAuthenticationSamlOutput) ToGetIdentitiesMeItemAuthenticationSamlOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationSamlOutput {
	return o
}

// If SAML authentication is enabled for this user
func (o GetIdentitiesMeItemAuthenticationSamlOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthenticationSaml) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetIdentitiesMeItemAuthenticationTwoFactor struct {
	// If twoFactor authentication is enabled for this user
	Enabled bool `pulumi:"enabled"`
}

// GetIdentitiesMeItemAuthenticationTwoFactorInput is an input type that accepts GetIdentitiesMeItemAuthenticationTwoFactorArgs and GetIdentitiesMeItemAuthenticationTwoFactorOutput values.
// You can construct a concrete instance of `GetIdentitiesMeItemAuthenticationTwoFactorInput` via:
//
//	GetIdentitiesMeItemAuthenticationTwoFactorArgs{...}
type GetIdentitiesMeItemAuthenticationTwoFactorInput interface {
	pulumi.Input

	ToGetIdentitiesMeItemAuthenticationTwoFactorOutput() GetIdentitiesMeItemAuthenticationTwoFactorOutput
	ToGetIdentitiesMeItemAuthenticationTwoFactorOutputWithContext(context.Context) GetIdentitiesMeItemAuthenticationTwoFactorOutput
}

type GetIdentitiesMeItemAuthenticationTwoFactorArgs struct {
	// If twoFactor authentication is enabled for this user
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetIdentitiesMeItemAuthenticationTwoFactorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationTwoFactor)(nil)).Elem()
}

func (i GetIdentitiesMeItemAuthenticationTwoFactorArgs) ToGetIdentitiesMeItemAuthenticationTwoFactorOutput() GetIdentitiesMeItemAuthenticationTwoFactorOutput {
	return i.ToGetIdentitiesMeItemAuthenticationTwoFactorOutputWithContext(context.Background())
}

func (i GetIdentitiesMeItemAuthenticationTwoFactorArgs) ToGetIdentitiesMeItemAuthenticationTwoFactorOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationTwoFactorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitiesMeItemAuthenticationTwoFactorOutput)
}

type GetIdentitiesMeItemAuthenticationTwoFactorOutput struct{ *pulumi.OutputState }

func (GetIdentitiesMeItemAuthenticationTwoFactorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitiesMeItemAuthenticationTwoFactor)(nil)).Elem()
}

func (o GetIdentitiesMeItemAuthenticationTwoFactorOutput) ToGetIdentitiesMeItemAuthenticationTwoFactorOutput() GetIdentitiesMeItemAuthenticationTwoFactorOutput {
	return o
}

func (o GetIdentitiesMeItemAuthenticationTwoFactorOutput) ToGetIdentitiesMeItemAuthenticationTwoFactorOutputWithContext(ctx context.Context) GetIdentitiesMeItemAuthenticationTwoFactorOutput {
	return o
}

// If twoFactor authentication is enabled for this user
func (o GetIdentitiesMeItemAuthenticationTwoFactorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentitiesMeItemAuthenticationTwoFactor) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetLicensingSubscriptionEntitlementsItem struct {
	// The feature tier associated with the entitlement (null for add-ons)
	FeatureTier string `pulumi:"featureTier"`
	// Whether or not the entitlement is an add-on
	IsAddOn bool `pulumi:"isAddOn"`
	// The user-facing name of the entitlement
	Name string `pulumi:"name"`
	// The product class associated with the entitlement
	ProductClass string `pulumi:"productClass"`
	// The product type of the entitlement
	ProductType string `pulumi:"productType"`
	// The SKU identifier of the entitlement
	Sku string `pulumi:"sku"`
}

// GetLicensingSubscriptionEntitlementsItemInput is an input type that accepts GetLicensingSubscriptionEntitlementsItemArgs and GetLicensingSubscriptionEntitlementsItemOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionEntitlementsItemInput` via:
//
//	GetLicensingSubscriptionEntitlementsItemArgs{...}
type GetLicensingSubscriptionEntitlementsItemInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionEntitlementsItemOutput() GetLicensingSubscriptionEntitlementsItemOutput
	ToGetLicensingSubscriptionEntitlementsItemOutputWithContext(context.Context) GetLicensingSubscriptionEntitlementsItemOutput
}

type GetLicensingSubscriptionEntitlementsItemArgs struct {
	// The feature tier associated with the entitlement (null for add-ons)
	FeatureTier pulumi.StringInput `pulumi:"featureTier"`
	// Whether or not the entitlement is an add-on
	IsAddOn pulumi.BoolInput `pulumi:"isAddOn"`
	// The user-facing name of the entitlement
	Name pulumi.StringInput `pulumi:"name"`
	// The product class associated with the entitlement
	ProductClass pulumi.StringInput `pulumi:"productClass"`
	// The product type of the entitlement
	ProductType pulumi.StringInput `pulumi:"productType"`
	// The SKU identifier of the entitlement
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GetLicensingSubscriptionEntitlementsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionEntitlementsItem)(nil)).Elem()
}

func (i GetLicensingSubscriptionEntitlementsItemArgs) ToGetLicensingSubscriptionEntitlementsItemOutput() GetLicensingSubscriptionEntitlementsItemOutput {
	return i.ToGetLicensingSubscriptionEntitlementsItemOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionEntitlementsItemArgs) ToGetLicensingSubscriptionEntitlementsItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionEntitlementsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionEntitlementsItemOutput)
}

type GetLicensingSubscriptionEntitlementsItemOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionEntitlementsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionEntitlementsItem)(nil)).Elem()
}

func (o GetLicensingSubscriptionEntitlementsItemOutput) ToGetLicensingSubscriptionEntitlementsItemOutput() GetLicensingSubscriptionEntitlementsItemOutput {
	return o
}

func (o GetLicensingSubscriptionEntitlementsItemOutput) ToGetLicensingSubscriptionEntitlementsItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionEntitlementsItemOutput {
	return o
}

// The feature tier associated with the entitlement (null for add-ons)
func (o GetLicensingSubscriptionEntitlementsItemOutput) FeatureTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) string { return v.FeatureTier }).(pulumi.StringOutput)
}

// Whether or not the entitlement is an add-on
func (o GetLicensingSubscriptionEntitlementsItemOutput) IsAddOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) bool { return v.IsAddOn }).(pulumi.BoolOutput)
}

// The user-facing name of the entitlement
func (o GetLicensingSubscriptionEntitlementsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The product class associated with the entitlement
func (o GetLicensingSubscriptionEntitlementsItemOutput) ProductClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) string { return v.ProductClass }).(pulumi.StringOutput)
}

// The product type of the entitlement
func (o GetLicensingSubscriptionEntitlementsItemOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) string { return v.ProductType }).(pulumi.StringOutput)
}

// The SKU identifier of the entitlement
func (o GetLicensingSubscriptionEntitlementsItemOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionEntitlementsItem) string { return v.Sku }).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItem struct {
	// Subscription details
	Subscription GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription `pulumi:"subscription"`
	// Violations
	Violations GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations `pulumi:"violations"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs struct {
	// Subscription details
	Subscription GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionInput `pulumi:"subscription"`
	// Violations
	Violations GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsInput `pulumi:"violations"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItem)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput)
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray{ GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs{...} }
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemInput

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItem)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItem)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput {
	return o
}

// Subscription details
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput) Subscription() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItem) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription {
		return v.Subscription
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput)
}

// Violations
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput) Violations() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItem) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations {
		return v.Violations
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItem)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput) Index(i pulumi.IntInput) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingSubscriptionSubscriptionsComplianceStatusesItem {
		return vs[0].([]GetLicensingSubscriptionSubscriptionsComplianceStatusesItem)[vs[1].(int)]
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription struct {
	// Subscription's ID
	Id string `pulumi:"id"`
	// Friendly name to identify the subscription
	Name string `pulumi:"name"`
	// One of the following: "inactive" | "active" | "out*of*compliance" | "expired" | "canceled"
	Status string `pulumi:"status"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs struct {
	// Subscription's ID
	Id pulumi.StringInput `pulumi:"id"`
	// Friendly name to identify the subscription
	Name pulumi.StringInput `pulumi:"name"`
	// One of the following: "inactive" | "active" | "out*of*compliance" | "expired" | "canceled"
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput {
	return o
}

// Subscription's ID
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription) string { return v.Id }).(pulumi.StringOutput)
}

// Friendly name to identify the subscription
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription) string { return v.Name }).(pulumi.StringOutput)
}

// One of the following: "inactive" | "active" | "out*of*compliance" | "expired" | "canceled"
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscription) string {
		return v.Status
	}).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations struct {
	// List of violations by product class that are not compliance
	ByProductClasses []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass `pulumi:"byProductClasses"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs struct {
	// List of violations by product class that are not compliance
	ByProductClasses GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayInput `pulumi:"byProductClasses"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput {
	return o
}

// List of violations by product class that are not compliance
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput) ByProductClasses() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolations) []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass {
		return v.ByProductClasses
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass struct {
	// End date of the grace period in ISO 8601 format
	GracePeriodEndsAt string `pulumi:"gracePeriodEndsAt"`
	// Missing entitlements details
	Missing GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing `pulumi:"missing"`
	// Name of the product class
	ProductClass string `pulumi:"productClass"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs struct {
	// End date of the grace period in ISO 8601 format
	GracePeriodEndsAt pulumi.StringInput `pulumi:"gracePeriodEndsAt"`
	// Missing entitlements details
	Missing GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingInput `pulumi:"missing"`
	// Name of the product class
	ProductClass pulumi.StringInput `pulumi:"productClass"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput)
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray{ GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs{...} }
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassInput

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput {
	return o
}

// End date of the grace period in ISO 8601 format
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) GracePeriodEndsAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass) string {
		return v.GracePeriodEndsAt
	}).(pulumi.StringOutput)
}

// Missing entitlements details
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) Missing() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing {
		return v.Missing
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput)
}

// Name of the product class
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput) ProductClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass) string {
		return v.ProductClass
	}).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput) Index(i pulumi.IntInput) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass {
		return vs[0].([]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClass)[vs[1].(int)]
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing struct {
	// List of missing entitlements
	Entitlements []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement `pulumi:"entitlements"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs struct {
	// List of missing entitlements
	Entitlements GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayInput `pulumi:"entitlements"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput {
	return o
}

// List of missing entitlements
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput) Entitlements() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissing) []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement {
		return v.Entitlements
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement struct {
	// Number required
	Quantity int `pulumi:"quantity"`
	// SKU of the required product
	Sku string `pulumi:"sku"`
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs{...}
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs struct {
	// Number required
	Quantity pulumi.IntInput `pulumi:"quantity"`
	// SKU of the required product
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput)
}

// GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayInput is an input type that accepts GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray and GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayInput` via:
//
//	GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray{ GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs{...} }
type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput
	ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray []GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementInput

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput {
	return o
}

// Number required
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement) int {
		return v.Quantity
	}).(pulumi.IntOutput)
}

// SKU of the required product
func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement) string {
		return v.Sku
	}).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput) ToGetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput) Index(i pulumi.IntInput) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement {
		return vs[0].([]GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlement)[vs[1].(int)]
	}).(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput)
}

type GetLicensingSubscriptionSubscriptionsItem struct {
	// Numeric breakdown of network and entitlement counts
	Counts GetLicensingSubscriptionSubscriptionsItemCounts `pulumi:"counts"`
	// Subscription description
	Description string `pulumi:"description"`
	// Subscription expiration date
	EndDate string `pulumi:"endDate"`
	// Entitlement info
	Entitlements []GetLicensingSubscriptionSubscriptionsItemEntitlement `pulumi:"entitlements"`
	// Subscription name
	Name string `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes []string `pulumi:"productTypes"`
	// Subscription start date
	StartDate string `pulumi:"startDate"`
	// Subscription status
	Status string `pulumi:"status"`
	// Subscription's ID
	SubscriptionId string `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId string `pulumi:"webOrderId"`
}

// GetLicensingSubscriptionSubscriptionsItemInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemArgs and GetLicensingSubscriptionSubscriptionsItemOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemArgs{...}
type GetLicensingSubscriptionSubscriptionsItemInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemOutput() GetLicensingSubscriptionSubscriptionsItemOutput
	ToGetLicensingSubscriptionSubscriptionsItemOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemOutput
}

type GetLicensingSubscriptionSubscriptionsItemArgs struct {
	// Numeric breakdown of network and entitlement counts
	Counts GetLicensingSubscriptionSubscriptionsItemCountsInput `pulumi:"counts"`
	// Subscription description
	Description pulumi.StringInput `pulumi:"description"`
	// Subscription expiration date
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// Entitlement info
	Entitlements GetLicensingSubscriptionSubscriptionsItemEntitlementArrayInput `pulumi:"entitlements"`
	// Subscription name
	Name pulumi.StringInput `pulumi:"name"`
	// Products the subscription has entitlements for
	ProductTypes pulumi.StringArrayInput `pulumi:"productTypes"`
	// Subscription start date
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// Subscription status
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription's ID
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Web order id
	WebOrderId pulumi.StringInput `pulumi:"webOrderId"`
}

func (GetLicensingSubscriptionSubscriptionsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItem)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemArgs) ToGetLicensingSubscriptionSubscriptionsItemOutput() GetLicensingSubscriptionSubscriptionsItemOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemArgs) ToGetLicensingSubscriptionSubscriptionsItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemOutput)
}

// GetLicensingSubscriptionSubscriptionsItemArrayInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemArray and GetLicensingSubscriptionSubscriptionsItemArrayOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemArrayInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemArray{ GetLicensingSubscriptionSubscriptionsItemArgs{...} }
type GetLicensingSubscriptionSubscriptionsItemArrayInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemArrayOutput() GetLicensingSubscriptionSubscriptionsItemArrayOutput
	ToGetLicensingSubscriptionSubscriptionsItemArrayOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemArrayOutput
}

type GetLicensingSubscriptionSubscriptionsItemArray []GetLicensingSubscriptionSubscriptionsItemInput

func (GetLicensingSubscriptionSubscriptionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsItem)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemArray) ToGetLicensingSubscriptionSubscriptionsItemArrayOutput() GetLicensingSubscriptionSubscriptionsItemArrayOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemArrayOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemArray) ToGetLicensingSubscriptionSubscriptionsItemArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsItemOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItem)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemOutput) ToGetLicensingSubscriptionSubscriptionsItemOutput() GetLicensingSubscriptionSubscriptionsItemOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemOutput) ToGetLicensingSubscriptionSubscriptionsItemOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemOutput {
	return o
}

// Numeric breakdown of network and entitlement counts
func (o GetLicensingSubscriptionSubscriptionsItemOutput) Counts() GetLicensingSubscriptionSubscriptionsItemCountsOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) GetLicensingSubscriptionSubscriptionsItemCounts {
		return v.Counts
	}).(GetLicensingSubscriptionSubscriptionsItemCountsOutput)
}

// Subscription description
func (o GetLicensingSubscriptionSubscriptionsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.Description }).(pulumi.StringOutput)
}

// Subscription expiration date
func (o GetLicensingSubscriptionSubscriptionsItemOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.EndDate }).(pulumi.StringOutput)
}

// Entitlement info
func (o GetLicensingSubscriptionSubscriptionsItemOutput) Entitlements() GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) []GetLicensingSubscriptionSubscriptionsItemEntitlement {
		return v.Entitlements
	}).(GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput)
}

// Subscription name
func (o GetLicensingSubscriptionSubscriptionsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.Name }).(pulumi.StringOutput)
}

// Products the subscription has entitlements for
func (o GetLicensingSubscriptionSubscriptionsItemOutput) ProductTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) []string { return v.ProductTypes }).(pulumi.StringArrayOutput)
}

// Subscription start date
func (o GetLicensingSubscriptionSubscriptionsItemOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.StartDate }).(pulumi.StringOutput)
}

// Subscription status
func (o GetLicensingSubscriptionSubscriptionsItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription's ID
func (o GetLicensingSubscriptionSubscriptionsItemOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Web order id
func (o GetLicensingSubscriptionSubscriptionsItemOutput) WebOrderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItem) string { return v.WebOrderId }).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsItemArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsItem)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemArrayOutput) ToGetLicensingSubscriptionSubscriptionsItemArrayOutput() GetLicensingSubscriptionSubscriptionsItemArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemArrayOutput) ToGetLicensingSubscriptionSubscriptionsItemArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemArrayOutput) Index(i pulumi.IntInput) GetLicensingSubscriptionSubscriptionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingSubscriptionSubscriptionsItem {
		return vs[0].([]GetLicensingSubscriptionSubscriptionsItem)[vs[1].(int)]
	}).(GetLicensingSubscriptionSubscriptionsItemOutput)
}

type GetLicensingSubscriptionSubscriptionsItemCounts struct {
	// Number of networks bound to this subscription
	Networks int `pulumi:"networks"`
	// Seat distribution
	Seats GetLicensingSubscriptionSubscriptionsItemCountsSeats `pulumi:"seats"`
}

// GetLicensingSubscriptionSubscriptionsItemCountsInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemCountsArgs and GetLicensingSubscriptionSubscriptionsItemCountsOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemCountsInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemCountsArgs{...}
type GetLicensingSubscriptionSubscriptionsItemCountsInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemCountsOutput() GetLicensingSubscriptionSubscriptionsItemCountsOutput
	ToGetLicensingSubscriptionSubscriptionsItemCountsOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemCountsOutput
}

type GetLicensingSubscriptionSubscriptionsItemCountsArgs struct {
	// Number of networks bound to this subscription
	Networks pulumi.IntInput `pulumi:"networks"`
	// Seat distribution
	Seats GetLicensingSubscriptionSubscriptionsItemCountsSeatsInput `pulumi:"seats"`
}

func (GetLicensingSubscriptionSubscriptionsItemCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCounts)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemCountsArgs) ToGetLicensingSubscriptionSubscriptionsItemCountsOutput() GetLicensingSubscriptionSubscriptionsItemCountsOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemCountsOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemCountsArgs) ToGetLicensingSubscriptionSubscriptionsItemCountsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemCountsOutput)
}

type GetLicensingSubscriptionSubscriptionsItemCountsOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCounts)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemCountsOutput) ToGetLicensingSubscriptionSubscriptionsItemCountsOutput() GetLicensingSubscriptionSubscriptionsItemCountsOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemCountsOutput) ToGetLicensingSubscriptionSubscriptionsItemCountsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemCountsOutput {
	return o
}

// Number of networks bound to this subscription
func (o GetLicensingSubscriptionSubscriptionsItemCountsOutput) Networks() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemCounts) int { return v.Networks }).(pulumi.IntOutput)
}

// Seat distribution
func (o GetLicensingSubscriptionSubscriptionsItemCountsOutput) Seats() GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemCounts) GetLicensingSubscriptionSubscriptionsItemCountsSeats {
		return v.Seats
	}).(GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput)
}

type GetLicensingSubscriptionSubscriptionsItemCountsSeats struct {
	// Number of seats in use
	Assigned int `pulumi:"assigned"`
	// Number of seats available for use
	Available int `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit int `pulumi:"limit"`
}

// GetLicensingSubscriptionSubscriptionsItemCountsSeatsInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs and GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemCountsSeatsInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs{...}
type GetLicensingSubscriptionSubscriptionsItemCountsSeatsInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput() GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput
	ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput
}

type GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntInput `pulumi:"available"`
	// Total number of seats provided by this subscription
	Limit pulumi.IntInput `pulumi:"limit"`
}

func (GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCountsSeats)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs) ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput() GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs) ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput)
}

type GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCountsSeats)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput() GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) ToGetLicensingSubscriptionSubscriptionsItemCountsSeatsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput {
	return o
}

// Number of seats in use
func (o GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) Assigned() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemCountsSeats) int { return v.Assigned }).(pulumi.IntOutput)
}

// Number of seats available for use
func (o GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) Available() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemCountsSeats) int { return v.Available }).(pulumi.IntOutput)
}

// Total number of seats provided by this subscription
func (o GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemCountsSeats) int { return v.Limit }).(pulumi.IntOutput)
}

type GetLicensingSubscriptionSubscriptionsItemEntitlement struct {
	// Seat distribution
	Seats GetLicensingSubscriptionSubscriptionsItemEntitlementSeats `pulumi:"seats"`
	// SKU of the required product
	Sku string `pulumi:"sku"`
}

// GetLicensingSubscriptionSubscriptionsItemEntitlementInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemEntitlementArgs and GetLicensingSubscriptionSubscriptionsItemEntitlementOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemEntitlementInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemEntitlementArgs{...}
type GetLicensingSubscriptionSubscriptionsItemEntitlementInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementOutput
	ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementOutput
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementArgs struct {
	// Seat distribution
	Seats GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsInput `pulumi:"seats"`
	// SKU of the required product
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GetLicensingSubscriptionSubscriptionsItemEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlement)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementArgs) ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementArgs) ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemEntitlementOutput)
}

// GetLicensingSubscriptionSubscriptionsItemEntitlementArrayInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemEntitlementArray and GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemEntitlementArrayInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemEntitlementArray{ GetLicensingSubscriptionSubscriptionsItemEntitlementArgs{...} }
type GetLicensingSubscriptionSubscriptionsItemEntitlementArrayInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput
	ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementArray []GetLicensingSubscriptionSubscriptionsItemEntitlementInput

func (GetLicensingSubscriptionSubscriptionsItemEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsItemEntitlement)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementArray) ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementArray) ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput)
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlement)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementOutput {
	return o
}

// Seat distribution
func (o GetLicensingSubscriptionSubscriptionsItemEntitlementOutput) Seats() GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemEntitlement) GetLicensingSubscriptionSubscriptionsItemEntitlementSeats {
		return v.Seats
	}).(GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput)
}

// SKU of the required product
func (o GetLicensingSubscriptionSubscriptionsItemEntitlementOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemEntitlement) string { return v.Sku }).(pulumi.StringOutput)
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLicensingSubscriptionSubscriptionsItemEntitlement)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput) Index(i pulumi.IntInput) GetLicensingSubscriptionSubscriptionsItemEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLicensingSubscriptionSubscriptionsItemEntitlement {
		return vs[0].([]GetLicensingSubscriptionSubscriptionsItemEntitlement)[vs[1].(int)]
	}).(GetLicensingSubscriptionSubscriptionsItemEntitlementOutput)
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementSeats struct {
	// Number of seats in use
	Assigned int `pulumi:"assigned"`
	// Number of seats available for use
	Available int `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit int `pulumi:"limit"`
}

// GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsInput is an input type that accepts GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs and GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput values.
// You can construct a concrete instance of `GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsInput` via:
//
//	GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs{...}
type GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsInput interface {
	pulumi.Input

	ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput
	ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutputWithContext(context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs struct {
	// Number of seats in use
	Assigned pulumi.IntInput `pulumi:"assigned"`
	// Number of seats available for use
	Available pulumi.IntInput `pulumi:"available"`
	// Total number of seats provided by this subscription for this sku
	Limit pulumi.IntInput `pulumi:"limit"`
}

func (GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlementSeats)(nil)).Elem()
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs) ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput {
	return i.ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutputWithContext(context.Background())
}

func (i GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs) ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput)
}

type GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput struct{ *pulumi.OutputState }

func (GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlementSeats)(nil)).Elem()
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput() GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput {
	return o
}

func (o GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) ToGetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutputWithContext(ctx context.Context) GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput {
	return o
}

// Number of seats in use
func (o GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) Assigned() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemEntitlementSeats) int { return v.Assigned }).(pulumi.IntOutput)
}

// Number of seats available for use
func (o GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) Available() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemEntitlementSeats) int { return v.Available }).(pulumi.IntOutput)
}

// Total number of seats provided by this subscription for this sku
func (o GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLicensingSubscriptionSubscriptionsItemEntitlementSeats) int { return v.Limit }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemNetworkInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindItemNetworkArrayInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindItemNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindParametersInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsBindParametersPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsBindParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsSeatsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemCountsSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemEntitlementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemEntitlementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateParametersInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimKeyValidateParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimParametersInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicensingSubscriptionSubscriptionsClaimParametersPtrInput)(nil)).Elem(), LicensingSubscriptionSubscriptionsClaimParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemInput)(nil)).Elem(), GetIdentitiesMeItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemAuthenticationInput)(nil)).Elem(), GetIdentitiesMeItemAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApiInput)(nil)).Elem(), GetIdentitiesMeItemAuthenticationApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemAuthenticationApiKeyInput)(nil)).Elem(), GetIdentitiesMeItemAuthenticationApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemAuthenticationSamlInput)(nil)).Elem(), GetIdentitiesMeItemAuthenticationSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitiesMeItemAuthenticationTwoFactorInput)(nil)).Elem(), GetIdentitiesMeItemAuthenticationTwoFactorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionEntitlementsItemInput)(nil)).Elem(), GetLicensingSubscriptionEntitlementsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemArrayInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCountsInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemCountsSeatsInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemCountsSeatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlementInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemEntitlementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlementArrayInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemEntitlementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsInput)(nil)).Elem(), GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsArgs{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemInsufficientEntitlementArrayOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemNetworkOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindItemNetworkArrayOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindParametersOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsBindParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemCountsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemCountsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemCountsSeatsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemEntitlementOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemEntitlementArrayOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimItemEntitlementSeatsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemCountsSeatsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementArrayOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateItemEntitlementSeatsPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimKeyValidateParametersPtrOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimParametersOutput{})
	pulumi.RegisterOutputType(LicensingSubscriptionSubscriptionsClaimParametersPtrOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemAuthenticationOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemAuthenticationApiOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemAuthenticationApiKeyOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemAuthenticationSamlOutput{})
	pulumi.RegisterOutputType(GetIdentitiesMeItemAuthenticationTwoFactorOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionEntitlementsItemOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemSubscriptionOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsComplianceStatusesItemViolationsByProductClassMissingEntitlementArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemCountsOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemCountsSeatsOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemEntitlementOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemEntitlementArrayOutput{})
	pulumi.RegisterOutputType(GetLicensingSubscriptionSubscriptionsItemEntitlementSeatsOutput{})
}
